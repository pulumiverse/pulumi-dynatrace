// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    /// <summary>
    /// &gt; This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)
    /// 
    /// ## Dynatrace Documentation
    /// 
    /// - Web applications - https://docs.dynatrace.com/docs/platform-modules/digital-experience/web-applications
    /// 
    /// - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:rum.web.capture-custom-properties`)
    /// 
    /// ## Resource Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Dynatrace = Pulumiverse.Dynatrace;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var _name_ = new Dynatrace.WebAppCustomPropRestrictions("#name#", new()
    ///     {
    ///         ApplicationId = "APPLICATION-1234567890000000",
    ///         CustomEventPropertiesAllowList = new Dynatrace.Inputs.WebAppCustomPropRestrictionsCustomEventPropertiesAllowListArgs
    ///         {
    ///             CustomSessionPropertiesAllows = new[]
    ///             {
    ///                 new Dynatrace.Inputs.WebAppCustomPropRestrictionsCustomEventPropertiesAllowListCustomSessionPropertiesAllowArgs
    ///                 {
    ///                     FieldDataType = "STRING",
    ///                     FieldName = "ExampleEvent",
    ///                 },
    ///                 new Dynatrace.Inputs.WebAppCustomPropRestrictionsCustomEventPropertiesAllowListCustomSessionPropertiesAllowArgs
    ///                 {
    ///                     FieldDataType = "BOOLEAN",
    ///                     FieldName = "ExampleEvent2",
    ///                 },
    ///             },
    ///         },
    ///         CustomSessionPropertiesAllowList = new Dynatrace.Inputs.WebAppCustomPropRestrictionsCustomSessionPropertiesAllowListArgs
    ///         {
    ///             CustomSessionPropertiesAllows = new[]
    ///             {
    ///                 new Dynatrace.Inputs.WebAppCustomPropRestrictionsCustomSessionPropertiesAllowListCustomSessionPropertiesAllowArgs
    ///                 {
    ///                     FieldDataType = "STRING",
    ///                     FieldName = "ExampleSession",
    ///                 },
    ///                 new Dynatrace.Inputs.WebAppCustomPropRestrictionsCustomSessionPropertiesAllowListCustomSessionPropertiesAllowArgs
    ///                 {
    ///                     FieldDataType = "BOOLEAN",
    ///                     FieldName = "ExampleSession2",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DynatraceResourceType("dynatrace:index/webAppCustomPropRestrictions:WebAppCustomPropRestrictions")]
    public partial class WebAppCustomPropRestrictions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// List of allowed custom event properties
        /// </summary>
        [Output("customEventPropertiesAllowList")]
        public Output<Outputs.WebAppCustomPropRestrictionsCustomEventPropertiesAllowList?> CustomEventPropertiesAllowList { get; private set; } = null!;

        /// <summary>
        /// List of allowed custom session properties
        /// </summary>
        [Output("customSessionPropertiesAllowList")]
        public Output<Outputs.WebAppCustomPropRestrictionsCustomSessionPropertiesAllowList?> CustomSessionPropertiesAllowList { get; private set; } = null!;


        /// <summary>
        /// Create a WebAppCustomPropRestrictions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAppCustomPropRestrictions(string name, WebAppCustomPropRestrictionsArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/webAppCustomPropRestrictions:WebAppCustomPropRestrictions", name, args ?? new WebAppCustomPropRestrictionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAppCustomPropRestrictions(string name, Input<string> id, WebAppCustomPropRestrictionsState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/webAppCustomPropRestrictions:WebAppCustomPropRestrictions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAppCustomPropRestrictions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAppCustomPropRestrictions Get(string name, Input<string> id, WebAppCustomPropRestrictionsState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAppCustomPropRestrictions(name, id, state, options);
        }
    }

    public sealed class WebAppCustomPropRestrictionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// List of allowed custom event properties
        /// </summary>
        [Input("customEventPropertiesAllowList")]
        public Input<Inputs.WebAppCustomPropRestrictionsCustomEventPropertiesAllowListArgs>? CustomEventPropertiesAllowList { get; set; }

        /// <summary>
        /// List of allowed custom session properties
        /// </summary>
        [Input("customSessionPropertiesAllowList")]
        public Input<Inputs.WebAppCustomPropRestrictionsCustomSessionPropertiesAllowListArgs>? CustomSessionPropertiesAllowList { get; set; }

        public WebAppCustomPropRestrictionsArgs()
        {
        }
        public static new WebAppCustomPropRestrictionsArgs Empty => new WebAppCustomPropRestrictionsArgs();
    }

    public sealed class WebAppCustomPropRestrictionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// List of allowed custom event properties
        /// </summary>
        [Input("customEventPropertiesAllowList")]
        public Input<Inputs.WebAppCustomPropRestrictionsCustomEventPropertiesAllowListGetArgs>? CustomEventPropertiesAllowList { get; set; }

        /// <summary>
        /// List of allowed custom session properties
        /// </summary>
        [Input("customSessionPropertiesAllowList")]
        public Input<Inputs.WebAppCustomPropRestrictionsCustomSessionPropertiesAllowListGetArgs>? CustomSessionPropertiesAllowList { get; set; }

        public WebAppCustomPropRestrictionsState()
        {
        }
        public static new WebAppCustomPropRestrictionsState Empty => new WebAppCustomPropRestrictionsState();
    }
}
