// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/builtinProcessMonitoring:BuiltinProcessMonitoring")]
    public partial class BuiltinProcessMonitoring : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        /// </summary>
        [Output("aspnetcore")]
        public Output<bool?> Aspnetcore { get; private set; } = null!;

        /// <summary>
        /// Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        /// </summary>
        [Output("aspnetcoreAgentlistener")]
        public Output<bool?> AspnetcoreAgentlistener { get; private set; } = null!;

        /// <summary>
        /// Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        /// </summary>
        [Output("aspnetcoreAgentworker")]
        public Output<bool?> AspnetcoreAgentworker { get; private set; } = null!;

        /// <summary>
        /// Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        /// </summary>
        [Output("cf")]
        public Output<bool?> Cf { get; private set; } = null!;

        /// <summary>
        /// Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        /// </summary>
        [Output("cfAppsmanagerjs")]
        public Output<bool?> CfAppsmanagerjs { get; private set; } = null!;

        /// <summary>
        /// Rule id: 41 - Do monitor processes if container name exists
        /// </summary>
        [Output("container")]
        public Output<bool?> Container { get; private set; } = null!;

        /// <summary>
        /// Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        /// </summary>
        [Output("dockerPauseamd64")]
        public Output<bool?> DockerPauseamd64 { get; private set; } = null!;

        /// <summary>
        /// Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        /// </summary>
        [Output("exeAdapter")]
        public Output<bool?> ExeAdapter { get; private set; } = null!;

        /// <summary>
        /// Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        /// </summary>
        [Output("exeAgentlistener")]
        public Output<bool?> ExeAgentlistener { get; private set; } = null!;

        /// <summary>
        /// Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        /// </summary>
        [Output("exeAgentworker")]
        public Output<bool?> ExeAgentworker { get; private set; } = null!;

        /// <summary>
        /// Rule id: 79 - Do not monitor processes if EXE name equals 'ansible'
        /// </summary>
        [Output("exeAnsible")]
        public Output<bool?> ExeAnsible { get; private set; } = null!;

        /// <summary>
        /// Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        /// </summary>
        [Output("exeAuctioneer")]
        public Output<bool?> ExeAuctioneer { get; private set; } = null!;

        /// <summary>
        /// Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        /// </summary>
        [Output("exeAuditbeat")]
        public Output<bool?> ExeAuditbeat { get; private set; } = null!;

        /// <summary>
        /// Rule id: 81 - Do not monitor processes if EXE name equals 'aws'
        /// </summary>
        [Output("exeAws")]
        public Output<bool?> ExeAws { get; private set; } = null!;

        /// <summary>
        /// Rule id: 82 - Do not monitor processes if EXE name equals 'az'
        /// </summary>
        [Output("exeAz")]
        public Output<bool?> ExeAz { get; private set; } = null!;

        /// <summary>
        /// Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        /// </summary>
        [Output("exeBbs")]
        public Output<bool?> ExeBbs { get; private set; } = null!;

        /// <summary>
        /// Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        /// </summary>
        [Output("exeCaddy")]
        public Output<bool?> ExeCaddy { get; private set; } = null!;

        /// <summary>
        /// Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        /// </summary>
        [Output("exeCaliconode")]
        public Output<bool?> ExeCaliconode { get; private set; } = null!;

        /// <summary>
        /// Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        /// </summary>
        [Output("exeCasclient")]
        public Output<bool?> ExeCasclient { get; private set; } = null!;

        /// <summary>
        /// Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        /// </summary>
        [Output("exeCcuploader")]
        public Output<bool?> ExeCcuploader { get; private set; } = null!;

        /// <summary>
        /// Rule id: 78 - Do not monitor processes if EXE name equals 'conda'
        /// </summary>
        [Output("exeConda")]
        public Output<bool?> ExeConda { get; private set; } = null!;

        /// <summary>
        /// Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        /// </summary>
        [Output("exeDoppler")]
        public Output<bool?> ExeDoppler { get; private set; } = null!;

        /// <summary>
        /// Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        /// </summary>
        [Output("exeFilebeat")]
        public Output<bool?> ExeFilebeat { get; private set; } = null!;

        /// <summary>
        /// Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        /// </summary>
        [Output("exeFlexnetjobexecutorservice")]
        public Output<bool?> ExeFlexnetjobexecutorservice { get; private set; } = null!;

        /// <summary>
        /// Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        /// </summary>
        [Output("exeFlexnetmaintenanceremotingservice")]
        public Output<bool?> ExeFlexnetmaintenanceremotingservice { get; private set; } = null!;

        /// <summary>
        /// Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        /// </summary>
        [Output("exeFunctionbeat")]
        public Output<bool?> ExeFunctionbeat { get; private set; } = null!;

        /// <summary>
        /// Rule id: 83 - Do not monitor processes if EXE name equals 'gcloud'
        /// </summary>
        [Output("exeGcloud")]
        public Output<bool?> ExeGcloud { get; private set; } = null!;

        /// <summary>
        /// Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        /// </summary>
        [Output("exeGorouter")]
        public Output<bool?> ExeGorouter { get; private set; } = null!;

        /// <summary>
        /// Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        /// </summary>
        [Output("exeGrootfs")]
        public Output<bool?> ExeGrootfs { get; private set; } = null!;

        /// <summary>
        /// Rule id: 74 - Do not monitor processes if EXE name equals 'hatch'
        /// </summary>
        [Output("exeHatch")]
        public Output<bool?> ExeHatch { get; private set; } = null!;

        /// <summary>
        /// Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        /// </summary>
        [Output("exeHeartbeat")]
        public Output<bool?> ExeHeartbeat { get; private set; } = null!;

        /// <summary>
        /// Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        /// </summary>
        [Output("exeInfluxd")]
        public Output<bool?> ExeInfluxd { get; private set; } = null!;

        /// <summary>
        /// Rule id: 77 - Do not monitor processes if EXE name equals 'jupyter'
        /// </summary>
        [Output("exeJupyter")]
        public Output<bool?> ExeJupyter { get; private set; } = null!;

        /// <summary>
        /// Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        /// </summary>
        [Output("exeLocket")]
        public Output<bool?> ExeLocket { get; private set; } = null!;

        /// <summary>
        /// Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        /// </summary>
        [Output("exeMetricbeat")]
        public Output<bool?> ExeMetricbeat { get; private set; } = null!;

        /// <summary>
        /// Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        /// </summary>
        [Output("exeMetron")]
        public Output<bool?> ExeMetron { get; private set; } = null!;

        /// <summary>
        /// Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        /// </summary>
        [Output("exeMqsi")]
        public Output<bool?> ExeMqsi { get; private set; } = null!;

        /// <summary>
        /// Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        /// </summary>
        [Output("exeOc")]
        public Output<bool?> ExeOc { get; private set; } = null!;

        /// <summary>
        /// Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        /// </summary>
        [Output("exeOpenhandlecollector")]
        public Output<bool?> ExeOpenhandlecollector { get; private set; } = null!;

        /// <summary>
        /// Rule id: 80 - Do not monitor processes if EXE name equals 'openstack'
        /// </summary>
        [Output("exeOpenstack")]
        public Output<bool?> ExeOpenstack { get; private set; } = null!;

        /// <summary>
        /// Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        /// </summary>
        [Output("exeOptcnibinhostlocal")]
        public Output<bool?> ExeOptcnibinhostlocal { get; private set; } = null!;

        /// <summary>
        /// Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        /// </summary>
        [Output("exePacketbeat")]
        public Output<bool?> ExePacketbeat { get; private set; } = null!;

        /// <summary>
        /// Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        /// </summary>
        [Output("exePhpcgi")]
        public Output<bool?> ExePhpcgi { get; private set; } = null!;

        /// <summary>
        /// Rule id: 73 - Do not monitor processes if EXE name equals 'pip'
        /// </summary>
        [Output("exePip")]
        public Output<bool?> ExePip { get; private set; } = null!;

        /// <summary>
        /// Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        /// </summary>
        [Output("exeRep")]
        public Output<bool?> ExeRep { get; private set; } = null!;

        /// <summary>
        /// Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        /// </summary>
        [Output("exeRouteemitter")]
        public Output<bool?> ExeRouteemitter { get; private set; } = null!;

        /// <summary>
        /// Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        /// </summary>
        [Output("exeRouteregistrar")]
        public Output<bool?> ExeRouteregistrar { get; private set; } = null!;

        /// <summary>
        /// Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        /// </summary>
        [Output("exeRoutingapi")]
        public Output<bool?> ExeRoutingapi { get; private set; } = null!;

        /// <summary>
        /// Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        /// </summary>
        [Output("exeSchedular")]
        public Output<bool?> ExeSchedular { get; private set; } = null!;

        /// <summary>
        /// Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        /// </summary>
        [Output("exeSilkdaemon")]
        public Output<bool?> ExeSilkdaemon { get; private set; } = null!;

        /// <summary>
        /// Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        /// </summary>
        [Output("exeSwitchboard")]
        public Output<bool?> ExeSwitchboard { get; private set; } = null!;

        /// <summary>
        /// Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        /// </summary>
        [Output("exeSyslogdrainbinder")]
        public Output<bool?> ExeSyslogdrainbinder { get; private set; } = null!;

        /// <summary>
        /// Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        /// </summary>
        [Output("exeTardis")]
        public Output<bool?> ExeTardis { get; private set; } = null!;

        /// <summary>
        /// Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        /// </summary>
        [Output("exeTmpbuildpacks")]
        public Output<bool?> ExeTmpbuildpacks { get; private set; } = null!;

        /// <summary>
        /// Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        /// </summary>
        [Output("exeTpswatcher")]
        public Output<bool?> ExeTpswatcher { get; private set; } = null!;

        /// <summary>
        /// Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        /// </summary>
        [Output("exeTrafficcontroller")]
        public Output<bool?> ExeTrafficcontroller { get; private set; } = null!;

        /// <summary>
        /// Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        /// </summary>
        [Output("exeUipath")]
        public Output<bool?> ExeUipath { get; private set; } = null!;

        /// <summary>
        /// Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        /// </summary>
        [Output("exeUserbinpiper")]
        public Output<bool?> ExeUserbinpiper { get; private set; } = null!;

        /// <summary>
        /// Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        /// </summary>
        [Output("exeW3wp")]
        public Output<bool?> ExeW3wp { get; private set; } = null!;

        /// <summary>
        /// Rule id: 75 - Do not monitor processes if EXE name equals 'wheel'
        /// </summary>
        [Output("exeWheel")]
        public Output<bool?> ExeWheel { get; private set; } = null!;

        /// <summary>
        /// Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
        /// </summary>
        [Output("exeYq")]
        public Output<bool?> ExeYq { get; private set; } = null!;

        /// <summary>
        /// Rule id: 76 - Do not monitor processes if EXE name equals 'yum'
        /// </summary>
        [Output("exeYum")]
        public Output<bool?> ExeYum { get; private set; } = null!;

        /// <summary>
        /// Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        /// </summary>
        [Output("goStatic")]
        public Output<bool?> GoStatic { get; private set; } = null!;

        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Output("hostGroupId")]
        public Output<string?> HostGroupId { get; private set; } = null!;

        /// <summary>
        /// Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        /// </summary>
        [Output("jarDtibmmqconnector")]
        public Output<bool?> JarDtibmmqconnector { get; private set; } = null!;

        /// <summary>
        /// Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        /// </summary>
        [Output("jarEclipseequinox")]
        public Output<bool?> JarEclipseequinox { get; private set; } = null!;

        /// <summary>
        /// Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        /// </summary>
        [Output("k8sCassandraoperator")]
        public Output<bool?> K8sCassandraoperator { get; private set; } = null!;

        /// <summary>
        /// Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        /// </summary>
        [Output("k8sContainerpod")]
        public Output<bool?> K8sContainerpod { get; private set; } = null!;

        /// <summary>
        /// Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        /// </summary>
        [Output("k8sNamespace")]
        public Output<bool?> K8sNamespace { get; private set; } = null!;

        /// <summary>
        /// Do not monitor processes if Node.js script equals 'bin/pm2'
        /// </summary>
        [Output("nodeBinpm2")]
        public Output<bool?> NodeBinpm2 { get; private set; } = null!;

        /// <summary>
        /// Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        /// </summary>
        [Output("nodeCorepack")]
        public Output<bool?> NodeCorepack { get; private set; } = null!;

        /// <summary>
        /// Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        /// </summary>
        [Output("nodeGrunt")]
        public Output<bool?> NodeGrunt { get; private set; } = null!;

        /// <summary>
        /// Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        /// </summary>
        [Output("nodeGulpcli")]
        public Output<bool?> NodeGulpcli { get; private set; } = null!;

        /// <summary>
        /// Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        /// </summary>
        [Output("nodeNodegyp")]
        public Output<bool?> NodeNodegyp { get; private set; } = null!;

        /// <summary>
        /// Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        /// </summary>
        [Output("nodeNodepregyp")]
        public Output<bool?> NodeNodepregyp { get; private set; } = null!;

        /// <summary>
        /// Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        /// </summary>
        [Output("nodeNpm")]
        public Output<bool?> NodeNpm { get; private set; } = null!;

        /// <summary>
        /// Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        /// </summary>
        [Output("nodePrebuildinstall")]
        public Output<bool?> NodePrebuildinstall { get; private set; } = null!;

        /// <summary>
        /// Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        /// </summary>
        [Output("nodeTypescript")]
        public Output<bool?> NodeTypescript { get; private set; } = null!;

        /// <summary>
        /// Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        /// </summary>
        [Output("nodeYarn")]
        public Output<bool?> NodeYarn { get; private set; } = null!;

        /// <summary>
        /// (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        /// </summary>
        [Output("phpScript")]
        public Output<bool?> PhpScript { get; private set; } = null!;


        /// <summary>
        /// Create a BuiltinProcessMonitoring resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BuiltinProcessMonitoring(string name, BuiltinProcessMonitoringArgs? args = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/builtinProcessMonitoring:BuiltinProcessMonitoring", name, args ?? new BuiltinProcessMonitoringArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BuiltinProcessMonitoring(string name, Input<string> id, BuiltinProcessMonitoringState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/builtinProcessMonitoring:BuiltinProcessMonitoring", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BuiltinProcessMonitoring resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BuiltinProcessMonitoring Get(string name, Input<string> id, BuiltinProcessMonitoringState? state = null, CustomResourceOptions? options = null)
        {
            return new BuiltinProcessMonitoring(name, id, state, options);
        }
    }

    public sealed class BuiltinProcessMonitoringArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        /// </summary>
        [Input("aspnetcore")]
        public Input<bool>? Aspnetcore { get; set; }

        /// <summary>
        /// Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        /// </summary>
        [Input("aspnetcoreAgentlistener")]
        public Input<bool>? AspnetcoreAgentlistener { get; set; }

        /// <summary>
        /// Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        /// </summary>
        [Input("aspnetcoreAgentworker")]
        public Input<bool>? AspnetcoreAgentworker { get; set; }

        /// <summary>
        /// Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        /// </summary>
        [Input("cf")]
        public Input<bool>? Cf { get; set; }

        /// <summary>
        /// Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        /// </summary>
        [Input("cfAppsmanagerjs")]
        public Input<bool>? CfAppsmanagerjs { get; set; }

        /// <summary>
        /// Rule id: 41 - Do monitor processes if container name exists
        /// </summary>
        [Input("container")]
        public Input<bool>? Container { get; set; }

        /// <summary>
        /// Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        /// </summary>
        [Input("dockerPauseamd64")]
        public Input<bool>? DockerPauseamd64 { get; set; }

        /// <summary>
        /// Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        /// </summary>
        [Input("exeAdapter")]
        public Input<bool>? ExeAdapter { get; set; }

        /// <summary>
        /// Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        /// </summary>
        [Input("exeAgentlistener")]
        public Input<bool>? ExeAgentlistener { get; set; }

        /// <summary>
        /// Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        /// </summary>
        [Input("exeAgentworker")]
        public Input<bool>? ExeAgentworker { get; set; }

        /// <summary>
        /// Rule id: 79 - Do not monitor processes if EXE name equals 'ansible'
        /// </summary>
        [Input("exeAnsible")]
        public Input<bool>? ExeAnsible { get; set; }

        /// <summary>
        /// Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        /// </summary>
        [Input("exeAuctioneer")]
        public Input<bool>? ExeAuctioneer { get; set; }

        /// <summary>
        /// Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        /// </summary>
        [Input("exeAuditbeat")]
        public Input<bool>? ExeAuditbeat { get; set; }

        /// <summary>
        /// Rule id: 81 - Do not monitor processes if EXE name equals 'aws'
        /// </summary>
        [Input("exeAws")]
        public Input<bool>? ExeAws { get; set; }

        /// <summary>
        /// Rule id: 82 - Do not monitor processes if EXE name equals 'az'
        /// </summary>
        [Input("exeAz")]
        public Input<bool>? ExeAz { get; set; }

        /// <summary>
        /// Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        /// </summary>
        [Input("exeBbs")]
        public Input<bool>? ExeBbs { get; set; }

        /// <summary>
        /// Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        /// </summary>
        [Input("exeCaddy")]
        public Input<bool>? ExeCaddy { get; set; }

        /// <summary>
        /// Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        /// </summary>
        [Input("exeCaliconode")]
        public Input<bool>? ExeCaliconode { get; set; }

        /// <summary>
        /// Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        /// </summary>
        [Input("exeCasclient")]
        public Input<bool>? ExeCasclient { get; set; }

        /// <summary>
        /// Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        /// </summary>
        [Input("exeCcuploader")]
        public Input<bool>? ExeCcuploader { get; set; }

        /// <summary>
        /// Rule id: 78 - Do not monitor processes if EXE name equals 'conda'
        /// </summary>
        [Input("exeConda")]
        public Input<bool>? ExeConda { get; set; }

        /// <summary>
        /// Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        /// </summary>
        [Input("exeDoppler")]
        public Input<bool>? ExeDoppler { get; set; }

        /// <summary>
        /// Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        /// </summary>
        [Input("exeFilebeat")]
        public Input<bool>? ExeFilebeat { get; set; }

        /// <summary>
        /// Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        /// </summary>
        [Input("exeFlexnetjobexecutorservice")]
        public Input<bool>? ExeFlexnetjobexecutorservice { get; set; }

        /// <summary>
        /// Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        /// </summary>
        [Input("exeFlexnetmaintenanceremotingservice")]
        public Input<bool>? ExeFlexnetmaintenanceremotingservice { get; set; }

        /// <summary>
        /// Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        /// </summary>
        [Input("exeFunctionbeat")]
        public Input<bool>? ExeFunctionbeat { get; set; }

        /// <summary>
        /// Rule id: 83 - Do not monitor processes if EXE name equals 'gcloud'
        /// </summary>
        [Input("exeGcloud")]
        public Input<bool>? ExeGcloud { get; set; }

        /// <summary>
        /// Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        /// </summary>
        [Input("exeGorouter")]
        public Input<bool>? ExeGorouter { get; set; }

        /// <summary>
        /// Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        /// </summary>
        [Input("exeGrootfs")]
        public Input<bool>? ExeGrootfs { get; set; }

        /// <summary>
        /// Rule id: 74 - Do not monitor processes if EXE name equals 'hatch'
        /// </summary>
        [Input("exeHatch")]
        public Input<bool>? ExeHatch { get; set; }

        /// <summary>
        /// Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        /// </summary>
        [Input("exeHeartbeat")]
        public Input<bool>? ExeHeartbeat { get; set; }

        /// <summary>
        /// Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        /// </summary>
        [Input("exeInfluxd")]
        public Input<bool>? ExeInfluxd { get; set; }

        /// <summary>
        /// Rule id: 77 - Do not monitor processes if EXE name equals 'jupyter'
        /// </summary>
        [Input("exeJupyter")]
        public Input<bool>? ExeJupyter { get; set; }

        /// <summary>
        /// Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        /// </summary>
        [Input("exeLocket")]
        public Input<bool>? ExeLocket { get; set; }

        /// <summary>
        /// Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        /// </summary>
        [Input("exeMetricbeat")]
        public Input<bool>? ExeMetricbeat { get; set; }

        /// <summary>
        /// Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        /// </summary>
        [Input("exeMetron")]
        public Input<bool>? ExeMetron { get; set; }

        /// <summary>
        /// Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        /// </summary>
        [Input("exeMqsi")]
        public Input<bool>? ExeMqsi { get; set; }

        /// <summary>
        /// Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        /// </summary>
        [Input("exeOc")]
        public Input<bool>? ExeOc { get; set; }

        /// <summary>
        /// Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        /// </summary>
        [Input("exeOpenhandlecollector")]
        public Input<bool>? ExeOpenhandlecollector { get; set; }

        /// <summary>
        /// Rule id: 80 - Do not monitor processes if EXE name equals 'openstack'
        /// </summary>
        [Input("exeOpenstack")]
        public Input<bool>? ExeOpenstack { get; set; }

        /// <summary>
        /// Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        /// </summary>
        [Input("exeOptcnibinhostlocal")]
        public Input<bool>? ExeOptcnibinhostlocal { get; set; }

        /// <summary>
        /// Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        /// </summary>
        [Input("exePacketbeat")]
        public Input<bool>? ExePacketbeat { get; set; }

        /// <summary>
        /// Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        /// </summary>
        [Input("exePhpcgi")]
        public Input<bool>? ExePhpcgi { get; set; }

        /// <summary>
        /// Rule id: 73 - Do not monitor processes if EXE name equals 'pip'
        /// </summary>
        [Input("exePip")]
        public Input<bool>? ExePip { get; set; }

        /// <summary>
        /// Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        /// </summary>
        [Input("exeRep")]
        public Input<bool>? ExeRep { get; set; }

        /// <summary>
        /// Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        /// </summary>
        [Input("exeRouteemitter")]
        public Input<bool>? ExeRouteemitter { get; set; }

        /// <summary>
        /// Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        /// </summary>
        [Input("exeRouteregistrar")]
        public Input<bool>? ExeRouteregistrar { get; set; }

        /// <summary>
        /// Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        /// </summary>
        [Input("exeRoutingapi")]
        public Input<bool>? ExeRoutingapi { get; set; }

        /// <summary>
        /// Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        /// </summary>
        [Input("exeSchedular")]
        public Input<bool>? ExeSchedular { get; set; }

        /// <summary>
        /// Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        /// </summary>
        [Input("exeSilkdaemon")]
        public Input<bool>? ExeSilkdaemon { get; set; }

        /// <summary>
        /// Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        /// </summary>
        [Input("exeSwitchboard")]
        public Input<bool>? ExeSwitchboard { get; set; }

        /// <summary>
        /// Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        /// </summary>
        [Input("exeSyslogdrainbinder")]
        public Input<bool>? ExeSyslogdrainbinder { get; set; }

        /// <summary>
        /// Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        /// </summary>
        [Input("exeTardis")]
        public Input<bool>? ExeTardis { get; set; }

        /// <summary>
        /// Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        /// </summary>
        [Input("exeTmpbuildpacks")]
        public Input<bool>? ExeTmpbuildpacks { get; set; }

        /// <summary>
        /// Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        /// </summary>
        [Input("exeTpswatcher")]
        public Input<bool>? ExeTpswatcher { get; set; }

        /// <summary>
        /// Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        /// </summary>
        [Input("exeTrafficcontroller")]
        public Input<bool>? ExeTrafficcontroller { get; set; }

        /// <summary>
        /// Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        /// </summary>
        [Input("exeUipath")]
        public Input<bool>? ExeUipath { get; set; }

        /// <summary>
        /// Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        /// </summary>
        [Input("exeUserbinpiper")]
        public Input<bool>? ExeUserbinpiper { get; set; }

        /// <summary>
        /// Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        /// </summary>
        [Input("exeW3wp")]
        public Input<bool>? ExeW3wp { get; set; }

        /// <summary>
        /// Rule id: 75 - Do not monitor processes if EXE name equals 'wheel'
        /// </summary>
        [Input("exeWheel")]
        public Input<bool>? ExeWheel { get; set; }

        /// <summary>
        /// Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
        /// </summary>
        [Input("exeYq")]
        public Input<bool>? ExeYq { get; set; }

        /// <summary>
        /// Rule id: 76 - Do not monitor processes if EXE name equals 'yum'
        /// </summary>
        [Input("exeYum")]
        public Input<bool>? ExeYum { get; set; }

        /// <summary>
        /// Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        /// </summary>
        [Input("goStatic")]
        public Input<bool>? GoStatic { get; set; }

        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("hostGroupId")]
        public Input<string>? HostGroupId { get; set; }

        /// <summary>
        /// Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        /// </summary>
        [Input("jarDtibmmqconnector")]
        public Input<bool>? JarDtibmmqconnector { get; set; }

        /// <summary>
        /// Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        /// </summary>
        [Input("jarEclipseequinox")]
        public Input<bool>? JarEclipseequinox { get; set; }

        /// <summary>
        /// Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        /// </summary>
        [Input("k8sCassandraoperator")]
        public Input<bool>? K8sCassandraoperator { get; set; }

        /// <summary>
        /// Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        /// </summary>
        [Input("k8sContainerpod")]
        public Input<bool>? K8sContainerpod { get; set; }

        /// <summary>
        /// Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        /// </summary>
        [Input("k8sNamespace")]
        public Input<bool>? K8sNamespace { get; set; }

        /// <summary>
        /// Do not monitor processes if Node.js script equals 'bin/pm2'
        /// </summary>
        [Input("nodeBinpm2")]
        public Input<bool>? NodeBinpm2 { get; set; }

        /// <summary>
        /// Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        /// </summary>
        [Input("nodeCorepack")]
        public Input<bool>? NodeCorepack { get; set; }

        /// <summary>
        /// Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        /// </summary>
        [Input("nodeGrunt")]
        public Input<bool>? NodeGrunt { get; set; }

        /// <summary>
        /// Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        /// </summary>
        [Input("nodeGulpcli")]
        public Input<bool>? NodeGulpcli { get; set; }

        /// <summary>
        /// Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        /// </summary>
        [Input("nodeNodegyp")]
        public Input<bool>? NodeNodegyp { get; set; }

        /// <summary>
        /// Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        /// </summary>
        [Input("nodeNodepregyp")]
        public Input<bool>? NodeNodepregyp { get; set; }

        /// <summary>
        /// Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        /// </summary>
        [Input("nodeNpm")]
        public Input<bool>? NodeNpm { get; set; }

        /// <summary>
        /// Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        /// </summary>
        [Input("nodePrebuildinstall")]
        public Input<bool>? NodePrebuildinstall { get; set; }

        /// <summary>
        /// Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        /// </summary>
        [Input("nodeTypescript")]
        public Input<bool>? NodeTypescript { get; set; }

        /// <summary>
        /// Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        /// </summary>
        [Input("nodeYarn")]
        public Input<bool>? NodeYarn { get; set; }

        /// <summary>
        /// (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        /// </summary>
        [Input("phpScript")]
        public Input<bool>? PhpScript { get; set; }

        public BuiltinProcessMonitoringArgs()
        {
        }
        public static new BuiltinProcessMonitoringArgs Empty => new BuiltinProcessMonitoringArgs();
    }

    public sealed class BuiltinProcessMonitoringState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        /// </summary>
        [Input("aspnetcore")]
        public Input<bool>? Aspnetcore { get; set; }

        /// <summary>
        /// Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        /// </summary>
        [Input("aspnetcoreAgentlistener")]
        public Input<bool>? AspnetcoreAgentlistener { get; set; }

        /// <summary>
        /// Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        /// </summary>
        [Input("aspnetcoreAgentworker")]
        public Input<bool>? AspnetcoreAgentworker { get; set; }

        /// <summary>
        /// Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        /// </summary>
        [Input("cf")]
        public Input<bool>? Cf { get; set; }

        /// <summary>
        /// Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        /// </summary>
        [Input("cfAppsmanagerjs")]
        public Input<bool>? CfAppsmanagerjs { get; set; }

        /// <summary>
        /// Rule id: 41 - Do monitor processes if container name exists
        /// </summary>
        [Input("container")]
        public Input<bool>? Container { get; set; }

        /// <summary>
        /// Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        /// </summary>
        [Input("dockerPauseamd64")]
        public Input<bool>? DockerPauseamd64 { get; set; }

        /// <summary>
        /// Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        /// </summary>
        [Input("exeAdapter")]
        public Input<bool>? ExeAdapter { get; set; }

        /// <summary>
        /// Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        /// </summary>
        [Input("exeAgentlistener")]
        public Input<bool>? ExeAgentlistener { get; set; }

        /// <summary>
        /// Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        /// </summary>
        [Input("exeAgentworker")]
        public Input<bool>? ExeAgentworker { get; set; }

        /// <summary>
        /// Rule id: 79 - Do not monitor processes if EXE name equals 'ansible'
        /// </summary>
        [Input("exeAnsible")]
        public Input<bool>? ExeAnsible { get; set; }

        /// <summary>
        /// Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        /// </summary>
        [Input("exeAuctioneer")]
        public Input<bool>? ExeAuctioneer { get; set; }

        /// <summary>
        /// Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        /// </summary>
        [Input("exeAuditbeat")]
        public Input<bool>? ExeAuditbeat { get; set; }

        /// <summary>
        /// Rule id: 81 - Do not monitor processes if EXE name equals 'aws'
        /// </summary>
        [Input("exeAws")]
        public Input<bool>? ExeAws { get; set; }

        /// <summary>
        /// Rule id: 82 - Do not monitor processes if EXE name equals 'az'
        /// </summary>
        [Input("exeAz")]
        public Input<bool>? ExeAz { get; set; }

        /// <summary>
        /// Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        /// </summary>
        [Input("exeBbs")]
        public Input<bool>? ExeBbs { get; set; }

        /// <summary>
        /// Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        /// </summary>
        [Input("exeCaddy")]
        public Input<bool>? ExeCaddy { get; set; }

        /// <summary>
        /// Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        /// </summary>
        [Input("exeCaliconode")]
        public Input<bool>? ExeCaliconode { get; set; }

        /// <summary>
        /// Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        /// </summary>
        [Input("exeCasclient")]
        public Input<bool>? ExeCasclient { get; set; }

        /// <summary>
        /// Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        /// </summary>
        [Input("exeCcuploader")]
        public Input<bool>? ExeCcuploader { get; set; }

        /// <summary>
        /// Rule id: 78 - Do not monitor processes if EXE name equals 'conda'
        /// </summary>
        [Input("exeConda")]
        public Input<bool>? ExeConda { get; set; }

        /// <summary>
        /// Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        /// </summary>
        [Input("exeDoppler")]
        public Input<bool>? ExeDoppler { get; set; }

        /// <summary>
        /// Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        /// </summary>
        [Input("exeFilebeat")]
        public Input<bool>? ExeFilebeat { get; set; }

        /// <summary>
        /// Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        /// </summary>
        [Input("exeFlexnetjobexecutorservice")]
        public Input<bool>? ExeFlexnetjobexecutorservice { get; set; }

        /// <summary>
        /// Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        /// </summary>
        [Input("exeFlexnetmaintenanceremotingservice")]
        public Input<bool>? ExeFlexnetmaintenanceremotingservice { get; set; }

        /// <summary>
        /// Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        /// </summary>
        [Input("exeFunctionbeat")]
        public Input<bool>? ExeFunctionbeat { get; set; }

        /// <summary>
        /// Rule id: 83 - Do not monitor processes if EXE name equals 'gcloud'
        /// </summary>
        [Input("exeGcloud")]
        public Input<bool>? ExeGcloud { get; set; }

        /// <summary>
        /// Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        /// </summary>
        [Input("exeGorouter")]
        public Input<bool>? ExeGorouter { get; set; }

        /// <summary>
        /// Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        /// </summary>
        [Input("exeGrootfs")]
        public Input<bool>? ExeGrootfs { get; set; }

        /// <summary>
        /// Rule id: 74 - Do not monitor processes if EXE name equals 'hatch'
        /// </summary>
        [Input("exeHatch")]
        public Input<bool>? ExeHatch { get; set; }

        /// <summary>
        /// Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        /// </summary>
        [Input("exeHeartbeat")]
        public Input<bool>? ExeHeartbeat { get; set; }

        /// <summary>
        /// Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        /// </summary>
        [Input("exeInfluxd")]
        public Input<bool>? ExeInfluxd { get; set; }

        /// <summary>
        /// Rule id: 77 - Do not monitor processes if EXE name equals 'jupyter'
        /// </summary>
        [Input("exeJupyter")]
        public Input<bool>? ExeJupyter { get; set; }

        /// <summary>
        /// Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        /// </summary>
        [Input("exeLocket")]
        public Input<bool>? ExeLocket { get; set; }

        /// <summary>
        /// Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        /// </summary>
        [Input("exeMetricbeat")]
        public Input<bool>? ExeMetricbeat { get; set; }

        /// <summary>
        /// Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        /// </summary>
        [Input("exeMetron")]
        public Input<bool>? ExeMetron { get; set; }

        /// <summary>
        /// Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        /// </summary>
        [Input("exeMqsi")]
        public Input<bool>? ExeMqsi { get; set; }

        /// <summary>
        /// Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        /// </summary>
        [Input("exeOc")]
        public Input<bool>? ExeOc { get; set; }

        /// <summary>
        /// Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        /// </summary>
        [Input("exeOpenhandlecollector")]
        public Input<bool>? ExeOpenhandlecollector { get; set; }

        /// <summary>
        /// Rule id: 80 - Do not monitor processes if EXE name equals 'openstack'
        /// </summary>
        [Input("exeOpenstack")]
        public Input<bool>? ExeOpenstack { get; set; }

        /// <summary>
        /// Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        /// </summary>
        [Input("exeOptcnibinhostlocal")]
        public Input<bool>? ExeOptcnibinhostlocal { get; set; }

        /// <summary>
        /// Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        /// </summary>
        [Input("exePacketbeat")]
        public Input<bool>? ExePacketbeat { get; set; }

        /// <summary>
        /// Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        /// </summary>
        [Input("exePhpcgi")]
        public Input<bool>? ExePhpcgi { get; set; }

        /// <summary>
        /// Rule id: 73 - Do not monitor processes if EXE name equals 'pip'
        /// </summary>
        [Input("exePip")]
        public Input<bool>? ExePip { get; set; }

        /// <summary>
        /// Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        /// </summary>
        [Input("exeRep")]
        public Input<bool>? ExeRep { get; set; }

        /// <summary>
        /// Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        /// </summary>
        [Input("exeRouteemitter")]
        public Input<bool>? ExeRouteemitter { get; set; }

        /// <summary>
        /// Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        /// </summary>
        [Input("exeRouteregistrar")]
        public Input<bool>? ExeRouteregistrar { get; set; }

        /// <summary>
        /// Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        /// </summary>
        [Input("exeRoutingapi")]
        public Input<bool>? ExeRoutingapi { get; set; }

        /// <summary>
        /// Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        /// </summary>
        [Input("exeSchedular")]
        public Input<bool>? ExeSchedular { get; set; }

        /// <summary>
        /// Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        /// </summary>
        [Input("exeSilkdaemon")]
        public Input<bool>? ExeSilkdaemon { get; set; }

        /// <summary>
        /// Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        /// </summary>
        [Input("exeSwitchboard")]
        public Input<bool>? ExeSwitchboard { get; set; }

        /// <summary>
        /// Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        /// </summary>
        [Input("exeSyslogdrainbinder")]
        public Input<bool>? ExeSyslogdrainbinder { get; set; }

        /// <summary>
        /// Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        /// </summary>
        [Input("exeTardis")]
        public Input<bool>? ExeTardis { get; set; }

        /// <summary>
        /// Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        /// </summary>
        [Input("exeTmpbuildpacks")]
        public Input<bool>? ExeTmpbuildpacks { get; set; }

        /// <summary>
        /// Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        /// </summary>
        [Input("exeTpswatcher")]
        public Input<bool>? ExeTpswatcher { get; set; }

        /// <summary>
        /// Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        /// </summary>
        [Input("exeTrafficcontroller")]
        public Input<bool>? ExeTrafficcontroller { get; set; }

        /// <summary>
        /// Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        /// </summary>
        [Input("exeUipath")]
        public Input<bool>? ExeUipath { get; set; }

        /// <summary>
        /// Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        /// </summary>
        [Input("exeUserbinpiper")]
        public Input<bool>? ExeUserbinpiper { get; set; }

        /// <summary>
        /// Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        /// </summary>
        [Input("exeW3wp")]
        public Input<bool>? ExeW3wp { get; set; }

        /// <summary>
        /// Rule id: 75 - Do not monitor processes if EXE name equals 'wheel'
        /// </summary>
        [Input("exeWheel")]
        public Input<bool>? ExeWheel { get; set; }

        /// <summary>
        /// Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
        /// </summary>
        [Input("exeYq")]
        public Input<bool>? ExeYq { get; set; }

        /// <summary>
        /// Rule id: 76 - Do not monitor processes if EXE name equals 'yum'
        /// </summary>
        [Input("exeYum")]
        public Input<bool>? ExeYum { get; set; }

        /// <summary>
        /// Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        /// </summary>
        [Input("goStatic")]
        public Input<bool>? GoStatic { get; set; }

        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("hostGroupId")]
        public Input<string>? HostGroupId { get; set; }

        /// <summary>
        /// Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        /// </summary>
        [Input("jarDtibmmqconnector")]
        public Input<bool>? JarDtibmmqconnector { get; set; }

        /// <summary>
        /// Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        /// </summary>
        [Input("jarEclipseequinox")]
        public Input<bool>? JarEclipseequinox { get; set; }

        /// <summary>
        /// Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        /// </summary>
        [Input("k8sCassandraoperator")]
        public Input<bool>? K8sCassandraoperator { get; set; }

        /// <summary>
        /// Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        /// </summary>
        [Input("k8sContainerpod")]
        public Input<bool>? K8sContainerpod { get; set; }

        /// <summary>
        /// Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        /// </summary>
        [Input("k8sNamespace")]
        public Input<bool>? K8sNamespace { get; set; }

        /// <summary>
        /// Do not monitor processes if Node.js script equals 'bin/pm2'
        /// </summary>
        [Input("nodeBinpm2")]
        public Input<bool>? NodeBinpm2 { get; set; }

        /// <summary>
        /// Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        /// </summary>
        [Input("nodeCorepack")]
        public Input<bool>? NodeCorepack { get; set; }

        /// <summary>
        /// Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        /// </summary>
        [Input("nodeGrunt")]
        public Input<bool>? NodeGrunt { get; set; }

        /// <summary>
        /// Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        /// </summary>
        [Input("nodeGulpcli")]
        public Input<bool>? NodeGulpcli { get; set; }

        /// <summary>
        /// Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        /// </summary>
        [Input("nodeNodegyp")]
        public Input<bool>? NodeNodegyp { get; set; }

        /// <summary>
        /// Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        /// </summary>
        [Input("nodeNodepregyp")]
        public Input<bool>? NodeNodepregyp { get; set; }

        /// <summary>
        /// Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        /// </summary>
        [Input("nodeNpm")]
        public Input<bool>? NodeNpm { get; set; }

        /// <summary>
        /// Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        /// </summary>
        [Input("nodePrebuildinstall")]
        public Input<bool>? NodePrebuildinstall { get; set; }

        /// <summary>
        /// Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        /// </summary>
        [Input("nodeTypescript")]
        public Input<bool>? NodeTypescript { get; set; }

        /// <summary>
        /// Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        /// </summary>
        [Input("nodeYarn")]
        public Input<bool>? NodeYarn { get; set; }

        /// <summary>
        /// (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        /// </summary>
        [Input("phpScript")]
        public Input<bool>? PhpScript { get; set; }

        public BuiltinProcessMonitoringState()
        {
        }
        public static new BuiltinProcessMonitoringState Empty => new BuiltinProcessMonitoringState();
    }
}
