// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    /// <summary>
    /// &gt; This resource requires the API token scopes **Read security problems** (`securityProblems.read`) and **Write security problems** (`securityProblems.write`)
    /// 
    /// &gt; This resource is excluded by default in the export utility, please explicitly specify the resource to retrieve existing configuration.
    /// 
    /// ## Dynatrace Documentation
    /// 
    /// - Runtime Vulnerability Analytics - https://www.dynatrace.com/support/help/platform-modules/application-security/vulnerability-analytics
    /// 
    /// - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:appsec.third-party-vulnerability-kubernetes-label-rule-settings`)
    /// 
    /// ## Resource Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Dynatrace = Pulumiverse.Dynatrace;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var _name_ = new Dynatrace.VulnerabilityThirdPartyK8s("#name#", new()
    ///     {
    ///         Enabled = false,
    ///         KubernetesLabelConditions = new Dynatrace.Inputs.VulnerabilityThirdPartyK8sKubernetesLabelConditionsArgs
    ///         {
    ///             KubernetesLabelConditions = new[]
    ///             {
    ///                 new Dynatrace.Inputs.VulnerabilityThirdPartyK8sKubernetesLabelConditionsKubernetesLabelConditionArgs
    ///                 {
    ///                     KubernetesLabelKey = "kubernetes.azure.com/mode",
    ///                     KubernetesLabelValue = "#name#",
    ///                     Matcher = "NOT_EQUALS",
    ///                 },
    ///                 new Dynatrace.Inputs.VulnerabilityThirdPartyK8sKubernetesLabelConditionsKubernetesLabelConditionArgs
    ///                 {
    ///                     KubernetesLabelKey = "agentpool",
    ///                     KubernetesLabelValue = "#name#",
    ///                     Matcher = "CONTAINS",
    ///                 },
    ///             },
    ///         },
    ///         Metadata = new Dynatrace.Inputs.VulnerabilityThirdPartyK8sMetadataArgs
    ///         {
    ///             Comment = "#name#",
    ///         },
    ///         RuleName = "#name#",
    ///         VulnerabilityDetectionControl = new Dynatrace.Inputs.VulnerabilityThirdPartyK8sVulnerabilityDetectionControlArgs
    ///         {
    ///             MonitoringMode = "MONITORING_OFF",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DynatraceResourceType("dynatrace:index/vulnerabilityThirdPartyK8s:VulnerabilityThirdPartyK8s")]
    public partial class VulnerabilityThirdPartyK8s : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Output("insertAfter")]
        public Output<string> InsertAfter { get; private set; } = null!;

        /// <summary>
        /// When you add multiple conditions, the rule applies if all conditions apply.
        /// </summary>
        [Output("kubernetesLabelConditions")]
        public Output<Outputs.VulnerabilityThirdPartyK8sKubernetesLabelConditions?> KubernetesLabelConditions { get; private set; } = null!;

        /// <summary>
        /// Step 3: Leave comment (optional)
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.VulnerabilityThirdPartyK8sMetadata> Metadata { get; private set; } = null!;

        /// <summary>
        /// Rule name
        /// </summary>
        [Output("ruleName")]
        public Output<string?> RuleName { get; private set; } = null!;

        /// <summary>
        /// Step 1: Select third-party vulnerability detection behavior
        /// </summary>
        [Output("vulnerabilityDetectionControl")]
        public Output<Outputs.VulnerabilityThirdPartyK8sVulnerabilityDetectionControl> VulnerabilityDetectionControl { get; private set; } = null!;


        /// <summary>
        /// Create a VulnerabilityThirdPartyK8s resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VulnerabilityThirdPartyK8s(string name, VulnerabilityThirdPartyK8sArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/vulnerabilityThirdPartyK8s:VulnerabilityThirdPartyK8s", name, args ?? new VulnerabilityThirdPartyK8sArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VulnerabilityThirdPartyK8s(string name, Input<string> id, VulnerabilityThirdPartyK8sState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/vulnerabilityThirdPartyK8s:VulnerabilityThirdPartyK8s", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VulnerabilityThirdPartyK8s resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VulnerabilityThirdPartyK8s Get(string name, Input<string> id, VulnerabilityThirdPartyK8sState? state = null, CustomResourceOptions? options = null)
        {
            return new VulnerabilityThirdPartyK8s(name, id, state, options);
        }
    }

    public sealed class VulnerabilityThirdPartyK8sArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// When you add multiple conditions, the rule applies if all conditions apply.
        /// </summary>
        [Input("kubernetesLabelConditions")]
        public Input<Inputs.VulnerabilityThirdPartyK8sKubernetesLabelConditionsArgs>? KubernetesLabelConditions { get; set; }

        /// <summary>
        /// Step 3: Leave comment (optional)
        /// </summary>
        [Input("metadata", required: true)]
        public Input<Inputs.VulnerabilityThirdPartyK8sMetadataArgs> Metadata { get; set; } = null!;

        /// <summary>
        /// Rule name
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Step 1: Select third-party vulnerability detection behavior
        /// </summary>
        [Input("vulnerabilityDetectionControl", required: true)]
        public Input<Inputs.VulnerabilityThirdPartyK8sVulnerabilityDetectionControlArgs> VulnerabilityDetectionControl { get; set; } = null!;

        public VulnerabilityThirdPartyK8sArgs()
        {
        }
        public static new VulnerabilityThirdPartyK8sArgs Empty => new VulnerabilityThirdPartyK8sArgs();
    }

    public sealed class VulnerabilityThirdPartyK8sState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// When you add multiple conditions, the rule applies if all conditions apply.
        /// </summary>
        [Input("kubernetesLabelConditions")]
        public Input<Inputs.VulnerabilityThirdPartyK8sKubernetesLabelConditionsGetArgs>? KubernetesLabelConditions { get; set; }

        /// <summary>
        /// Step 3: Leave comment (optional)
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.VulnerabilityThirdPartyK8sMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// Rule name
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Step 1: Select third-party vulnerability detection behavior
        /// </summary>
        [Input("vulnerabilityDetectionControl")]
        public Input<Inputs.VulnerabilityThirdPartyK8sVulnerabilityDetectionControlGetArgs>? VulnerabilityDetectionControl { get; set; }

        public VulnerabilityThirdPartyK8sState()
        {
        }
        public static new VulnerabilityThirdPartyK8sState Empty => new VulnerabilityThirdPartyK8sState();
    }
}
