// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/k8sMonitoring:K8sMonitoring")]
    public partial class K8sMonitoring : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Monitor Kubernetes namespaces, services, workloads, and pods
        /// </summary>
        [Output("cloudApplicationPipelineEnabled")]
        public Output<bool> CloudApplicationPipelineEnabled { get; private set; } = null!;

        /// <summary>
        /// Define Kubernetes event filters to ingest events into your environment. For more details, see the
        /// [documentation](https://dt-url.net/2201p0u).
        /// </summary>
        [Output("eventPatterns")]
        public Output<Outputs.K8sMonitoringEventPatterns?> EventPatterns { get; private set; } = null!;

        /// <summary>
        /// All events are monitored unless event filters are specified. All ingested events are subject to licensing by default.
        /// </summary>
        [Output("eventProcessingActive")]
        public Output<bool> EventProcessingActive { get; private set; } = null!;

        /// <summary>
        /// Include only events specified by Events Field Selectors
        /// </summary>
        [Output("filterEvents")]
        public Output<bool?> FilterEvents { get; private set; } = null!;

        /// <summary>
        /// For a list of included events, see the [documentation](https://dt-url.net/l61d02no).
        /// </summary>
        [Output("includeAllFdiEvents")]
        public Output<bool?> IncludeAllFdiEvents { get; private set; } = null!;

        /// <summary>
        /// Workload and node resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size,
        /// this may increase the CPU/memory resource consumption of your ActiveGate.
        /// </summary>
        [Output("openMetricsBuiltinEnabled")]
        public Output<bool> OpenMetricsBuiltinEnabled { get; private set; } = null!;

        /// <summary>
        /// For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).
        /// </summary>
        [Output("openMetricsPipelineEnabled")]
        public Output<bool> OpenMetricsPipelineEnabled { get; private set; } = null!;

        /// <summary>
        /// To enable dashboards and alerts, add the Kubernetes persistent volume claims extension to your environment.
        /// </summary>
        [Output("pvcMonitoringEnabled")]
        public Output<bool?> PvcMonitoringEnabled { get; private set; } = null!;

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;


        /// <summary>
        /// Create a K8sMonitoring resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public K8sMonitoring(string name, K8sMonitoringArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/k8sMonitoring:K8sMonitoring", name, args ?? new K8sMonitoringArgs(), MakeResourceOptions(options, ""))
        {
        }

        private K8sMonitoring(string name, Input<string> id, K8sMonitoringState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/k8sMonitoring:K8sMonitoring", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing K8sMonitoring resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static K8sMonitoring Get(string name, Input<string> id, K8sMonitoringState? state = null, CustomResourceOptions? options = null)
        {
            return new K8sMonitoring(name, id, state, options);
        }
    }

    public sealed class K8sMonitoringArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Monitor Kubernetes namespaces, services, workloads, and pods
        /// </summary>
        [Input("cloudApplicationPipelineEnabled", required: true)]
        public Input<bool> CloudApplicationPipelineEnabled { get; set; } = null!;

        /// <summary>
        /// Define Kubernetes event filters to ingest events into your environment. For more details, see the
        /// [documentation](https://dt-url.net/2201p0u).
        /// </summary>
        [Input("eventPatterns")]
        public Input<Inputs.K8sMonitoringEventPatternsArgs>? EventPatterns { get; set; }

        /// <summary>
        /// All events are monitored unless event filters are specified. All ingested events are subject to licensing by default.
        /// </summary>
        [Input("eventProcessingActive", required: true)]
        public Input<bool> EventProcessingActive { get; set; } = null!;

        /// <summary>
        /// Include only events specified by Events Field Selectors
        /// </summary>
        [Input("filterEvents")]
        public Input<bool>? FilterEvents { get; set; }

        /// <summary>
        /// For a list of included events, see the [documentation](https://dt-url.net/l61d02no).
        /// </summary>
        [Input("includeAllFdiEvents")]
        public Input<bool>? IncludeAllFdiEvents { get; set; }

        /// <summary>
        /// Workload and node resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size,
        /// this may increase the CPU/memory resource consumption of your ActiveGate.
        /// </summary>
        [Input("openMetricsBuiltinEnabled", required: true)]
        public Input<bool> OpenMetricsBuiltinEnabled { get; set; } = null!;

        /// <summary>
        /// For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).
        /// </summary>
        [Input("openMetricsPipelineEnabled", required: true)]
        public Input<bool> OpenMetricsPipelineEnabled { get; set; } = null!;

        /// <summary>
        /// To enable dashboards and alerts, add the Kubernetes persistent volume claims extension to your environment.
        /// </summary>
        [Input("pvcMonitoringEnabled")]
        public Input<bool>? PvcMonitoringEnabled { get; set; }

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public K8sMonitoringArgs()
        {
        }
        public static new K8sMonitoringArgs Empty => new K8sMonitoringArgs();
    }

    public sealed class K8sMonitoringState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Monitor Kubernetes namespaces, services, workloads, and pods
        /// </summary>
        [Input("cloudApplicationPipelineEnabled")]
        public Input<bool>? CloudApplicationPipelineEnabled { get; set; }

        /// <summary>
        /// Define Kubernetes event filters to ingest events into your environment. For more details, see the
        /// [documentation](https://dt-url.net/2201p0u).
        /// </summary>
        [Input("eventPatterns")]
        public Input<Inputs.K8sMonitoringEventPatternsGetArgs>? EventPatterns { get; set; }

        /// <summary>
        /// All events are monitored unless event filters are specified. All ingested events are subject to licensing by default.
        /// </summary>
        [Input("eventProcessingActive")]
        public Input<bool>? EventProcessingActive { get; set; }

        /// <summary>
        /// Include only events specified by Events Field Selectors
        /// </summary>
        [Input("filterEvents")]
        public Input<bool>? FilterEvents { get; set; }

        /// <summary>
        /// For a list of included events, see the [documentation](https://dt-url.net/l61d02no).
        /// </summary>
        [Input("includeAllFdiEvents")]
        public Input<bool>? IncludeAllFdiEvents { get; set; }

        /// <summary>
        /// Workload and node resource metrics are based on a subset of cAdvisor metrics. Depending on your Kubernetes cluster size,
        /// this may increase the CPU/memory resource consumption of your ActiveGate.
        /// </summary>
        [Input("openMetricsBuiltinEnabled")]
        public Input<bool>? OpenMetricsBuiltinEnabled { get; set; }

        /// <summary>
        /// For annotation guidance, see the [documentation](https://dt-url.net/g42i0ppw).
        /// </summary>
        [Input("openMetricsPipelineEnabled")]
        public Input<bool>? OpenMetricsPipelineEnabled { get; set; }

        /// <summary>
        /// To enable dashboards and alerts, add the Kubernetes persistent volume claims extension to your environment.
        /// </summary>
        [Input("pvcMonitoringEnabled")]
        public Input<bool>? PvcMonitoringEnabled { get; set; }

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public K8sMonitoringState()
        {
        }
        public static new K8sMonitoringState Empty => new K8sMonitoringState();
    }
}
