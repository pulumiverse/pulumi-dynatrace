// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/settingsPermissions:SettingsPermissions")]
    public partial class SettingsPermissions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Defines the default access level granted to all users in this environment. Allowed values are `read`, `write`, or `none`
        /// </summary>
        [Output("allUsers")]
        public Output<string?> AllUsers { get; private set; } = null!;

        [Output("groups")]
        public Output<Outputs.SettingsPermissionsGroups?> Groups { get; private set; } = null!;

        /// <summary>
        /// The ID of the settings object for which access is to be granted. Here, you can use the `id` attribute of the respective settings object resource
        /// </summary>
        [Output("settingsObjectId")]
        public Output<string> SettingsObjectId { get; private set; } = null!;

        [Output("users")]
        public Output<Outputs.SettingsPermissionsUsers?> Users { get; private set; } = null!;


        /// <summary>
        /// Create a SettingsPermissions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SettingsPermissions(string name, SettingsPermissionsArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/settingsPermissions:SettingsPermissions", name, args ?? new SettingsPermissionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SettingsPermissions(string name, Input<string> id, SettingsPermissionsState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/settingsPermissions:SettingsPermissions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SettingsPermissions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SettingsPermissions Get(string name, Input<string> id, SettingsPermissionsState? state = null, CustomResourceOptions? options = null)
        {
            return new SettingsPermissions(name, id, state, options);
        }
    }

    public sealed class SettingsPermissionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines the default access level granted to all users in this environment. Allowed values are `read`, `write`, or `none`
        /// </summary>
        [Input("allUsers")]
        public Input<string>? AllUsers { get; set; }

        [Input("groups")]
        public Input<Inputs.SettingsPermissionsGroupsArgs>? Groups { get; set; }

        /// <summary>
        /// The ID of the settings object for which access is to be granted. Here, you can use the `id` attribute of the respective settings object resource
        /// </summary>
        [Input("settingsObjectId", required: true)]
        public Input<string> SettingsObjectId { get; set; } = null!;

        [Input("users")]
        public Input<Inputs.SettingsPermissionsUsersArgs>? Users { get; set; }

        public SettingsPermissionsArgs()
        {
        }
        public static new SettingsPermissionsArgs Empty => new SettingsPermissionsArgs();
    }

    public sealed class SettingsPermissionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines the default access level granted to all users in this environment. Allowed values are `read`, `write`, or `none`
        /// </summary>
        [Input("allUsers")]
        public Input<string>? AllUsers { get; set; }

        [Input("groups")]
        public Input<Inputs.SettingsPermissionsGroupsGetArgs>? Groups { get; set; }

        /// <summary>
        /// The ID of the settings object for which access is to be granted. Here, you can use the `id` attribute of the respective settings object resource
        /// </summary>
        [Input("settingsObjectId")]
        public Input<string>? SettingsObjectId { get; set; }

        [Input("users")]
        public Input<Inputs.SettingsPermissionsUsersGetArgs>? Users { get; set; }

        public SettingsPermissionsState()
        {
        }
        public static new SettingsPermissionsState Empty => new SettingsPermissionsState();
    }
}
