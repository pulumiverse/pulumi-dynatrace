// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    public static class GetAttackAlerting
    {
        /// <summary>
        /// The `dynatrace.AttackAlerting` data source allows the attack alerting profile ID to be retrieved by its name.
        /// 
        /// - `Name` (String) - The name of the attack alerting profile
        /// 
        /// If multiple services match the given criteria, the first result will be retrieved.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Dynatrace.GetAttackAlerting.Invoke(new()
        ///     {
        ///         Name = "Terraform Example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAttackAlertingResult =&gt; getAttackAlertingResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetAttackAlertingResult> InvokeAsync(GetAttackAlertingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAttackAlertingResult>("dynatrace:index/getAttackAlerting:getAttackAlerting", args ?? new GetAttackAlertingArgs(), options.WithDefaults());

        /// <summary>
        /// The `dynatrace.AttackAlerting` data source allows the attack alerting profile ID to be retrieved by its name.
        /// 
        /// - `Name` (String) - The name of the attack alerting profile
        /// 
        /// If multiple services match the given criteria, the first result will be retrieved.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Dynatrace.GetAttackAlerting.Invoke(new()
        ///     {
        ///         Name = "Terraform Example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAttackAlertingResult =&gt; getAttackAlertingResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetAttackAlertingResult> Invoke(GetAttackAlertingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttackAlertingResult>("dynatrace:index/getAttackAlerting:getAttackAlerting", args ?? new GetAttackAlertingInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The `dynatrace.AttackAlerting` data source allows the attack alerting profile ID to be retrieved by its name.
        /// 
        /// - `Name` (String) - The name of the attack alerting profile
        /// 
        /// If multiple services match the given criteria, the first result will be retrieved.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Dynatrace.GetAttackAlerting.Invoke(new()
        ///     {
        ///         Name = "Terraform Example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getAttackAlertingResult =&gt; getAttackAlertingResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetAttackAlertingResult> Invoke(GetAttackAlertingInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttackAlertingResult>("dynatrace:index/getAttackAlerting:getAttackAlerting", args ?? new GetAttackAlertingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAttackAlertingArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetAttackAlertingArgs()
        {
        }
        public static new GetAttackAlertingArgs Empty => new GetAttackAlertingArgs();
    }

    public sealed class GetAttackAlertingInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetAttackAlertingInvokeArgs()
        {
        }
        public static new GetAttackAlertingInvokeArgs Empty => new GetAttackAlertingInvokeArgs();
    }


    [OutputType]
    public sealed class GetAttackAlertingResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetAttackAlertingResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
