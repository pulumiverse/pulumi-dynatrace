// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/agToken:AgToken")]
    public partial class AgToken : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The expiration date of the token.
        /// 
        ///     You can use one of the following formats:
        /// 
        ///     * Timestamp in UTC milliseconds.
        ///     * Human-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space character instead of the T. Seconds and fractions of a second are optional.
        ///     * Relative timeframe, back from now. The format is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You can also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are:
        ///       - m: minutes
        ///       - h: hours
        ///       - d: days
        ///       - w: weeks
        ///       - M: months
        ///       - y: years
        /// </summary>
        [Output("expirationDate")]
        public Output<string?> ExpirationDate { get; private set; } = null!;

        /// <summary>
        /// The name of the token.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)
        /// </summary>
        [Output("seed")]
        public Output<bool?> Seed { get; private set; } = null!;

        /// <summary>
        /// The tenant token. This information isn't directly related to the Active Gate Token. It's included for convenience. You require the permission `InstallerDownload` for that attribute to get populated
        /// </summary>
        [Output("tenantToken")]
        public Output<string> TenantToken { get; private set; } = null!;

        /// <summary>
        /// The secret of the token.
        /// </summary>
        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        /// <summary>
        /// The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AgToken resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AgToken(string name, AgTokenArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/agToken:AgToken", name, args ?? new AgTokenArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AgToken(string name, Input<string> id, AgTokenState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/agToken:AgToken", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                AdditionalSecretOutputs =
                {
                    "tenantToken",
                    "token",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AgToken resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AgToken Get(string name, Input<string> id, AgTokenState? state = null, CustomResourceOptions? options = null)
        {
            return new AgToken(name, id, state, options);
        }
    }

    public sealed class AgTokenArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The expiration date of the token.
        /// 
        ///     You can use one of the following formats:
        /// 
        ///     * Timestamp in UTC milliseconds.
        ///     * Human-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space character instead of the T. Seconds and fractions of a second are optional.
        ///     * Relative timeframe, back from now. The format is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You can also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are:
        ///       - m: minutes
        ///       - h: hours
        ///       - d: days
        ///       - w: weeks
        ///       - M: months
        ///       - y: years
        /// </summary>
        [Input("expirationDate")]
        public Input<string>? ExpirationDate { get; set; }

        /// <summary>
        /// The name of the token.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)
        /// </summary>
        [Input("seed")]
        public Input<bool>? Seed { get; set; }

        /// <summary>
        /// The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public AgTokenArgs()
        {
        }
        public static new AgTokenArgs Empty => new AgTokenArgs();
    }

    public sealed class AgTokenState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The expiration date of the token.
        /// 
        ///     You can use one of the following formats:
        /// 
        ///     * Timestamp in UTC milliseconds.
        ///     * Human-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space character instead of the T. Seconds and fractions of a second are optional.
        ///     * Relative timeframe, back from now. The format is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds all the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You can also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are:
        ///       - m: minutes
        ///       - h: hours
        ///       - d: days
        ///       - w: weeks
        ///       - M: months
        ///       - y: years
        /// </summary>
        [Input("expirationDate")]
        public Input<string>? ExpirationDate { get; set; }

        /// <summary>
        /// The name of the token.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)
        /// </summary>
        [Input("seed")]
        public Input<bool>? Seed { get; set; }

        [Input("tenantToken")]
        private Input<string>? _tenantToken;

        /// <summary>
        /// The tenant token. This information isn't directly related to the Active Gate Token. It's included for convenience. You require the permission `InstallerDownload` for that attribute to get populated
        /// </summary>
        public Input<string>? TenantToken
        {
            get => _tenantToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _tenantToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// The secret of the token.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AgTokenState()
        {
        }
        public static new AgTokenState Empty => new AgTokenState();
    }
}
