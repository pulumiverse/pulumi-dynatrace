// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/goldenState:GoldenState")]
    public partial class GoldenState : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The IDs for resource of type `dynatrace.AixExtension` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceAixExtensions")]
        public Output<ImmutableArray<string>> DynatraceAixExtensions { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Alerting` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceAlertings")]
        public Output<ImmutableArray<string>> DynatraceAlertings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AnsibleTowerNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceAnsibleTowerNotifications")]
        public Output<ImmutableArray<string>> DynatraceAnsibleTowerNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ApplicationDetectionRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceApplicationDetectionRules")]
        public Output<ImmutableArray<string>> DynatraceApplicationDetectionRules { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ApplicationErrorRules` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceApplicationErrorRules")]
        public Output<ImmutableArray<string>> DynatraceApplicationErrorRules { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AutotagV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceAutotagV2s")]
        public Output<ImmutableArray<string>> DynatraceAutotagV2s { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AwsCredentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceAwsCredentials")]
        public Output<ImmutableArray<string>> DynatraceAwsCredentials { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AzureCredentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceAzureCredentials")]
        public Output<ImmutableArray<string>> DynatraceAzureCredentials { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.BrowserMonitor` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceBrowserMonitors")]
        public Output<ImmutableArray<string>> DynatraceBrowserMonitors { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedMobileMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCalculatedMobileMetrics")]
        public Output<ImmutableArray<string>> DynatraceCalculatedMobileMetrics { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedServiceMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCalculatedServiceMetrics")]
        public Output<ImmutableArray<string>> DynatraceCalculatedServiceMetrics { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedSyntheticMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCalculatedSyntheticMetrics")]
        public Output<ImmutableArray<string>> DynatraceCalculatedSyntheticMetrics { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedWebMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCalculatedWebMetrics")]
        public Output<ImmutableArray<string>> DynatraceCalculatedWebMetrics { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Credentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCredentials")]
        public Output<ImmutableArray<string>> DynatraceCredentials { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCustomAppAnomalies")]
        public Output<ImmutableArray<string>> DynatraceCustomAppAnomalies { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppCrashRate` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCustomAppCrashRates")]
        public Output<ImmutableArray<string>> DynatraceCustomAppCrashRates { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCustomAppEnablements")]
        public Output<ImmutableArray<string>> DynatraceCustomAppEnablements { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomService` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceCustomServices")]
        public Output<ImmutableArray<string>> DynatraceCustomServices { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DataPrivacy` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceDataPrivacies")]
        public Output<ImmutableArray<string>> DynatraceDataPrivacies { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DatabaseAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceDatabaseAnomaliesV2s")]
        public Output<ImmutableArray<string>> DynatraceDatabaseAnomaliesV2s { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DeclarativeGrouping` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceDeclarativeGroupings")]
        public Output<ImmutableArray<string>> DynatraceDeclarativeGroupings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceDiskAnomaliesV2s")]
        public Output<ImmutableArray<string>> DynatraceDiskAnomaliesV2s { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskOptions` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceDiskOptions")]
        public Output<ImmutableArray<string>> DynatraceDiskOptions { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskSpecificAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceDiskSpecificAnomaliesV2s")]
        public Output<ImmutableArray<string>> DynatraceDiskSpecificAnomaliesV2s { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.EmailNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceEmailNotifications")]
        public Output<ImmutableArray<string>> DynatraceEmailNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ExtensionExecutionController` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceExtensionExecutionControllers")]
        public Output<ImmutableArray<string>> DynatraceExtensionExecutionControllers { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.GenericTypes` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceGenericTypes")]
        public Output<ImmutableArray<string>> DynatraceGenericTypes { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceHostAnomaliesV2s")]
        public Output<ImmutableArray<string>> DynatraceHostAnomaliesV2s { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceHostNamings")]
        public Output<ImmutableArray<string>> DynatraceHostNamings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostProcessGroupMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceHostProcessGroupMonitorings")]
        public Output<ImmutableArray<string>> DynatraceHostProcessGroupMonitorings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HttpMonitor` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceHttpMonitors")]
        public Output<ImmutableArray<string>> DynatraceHttpMonitors { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ImsBridges` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceImsBridges")]
        public Output<ImmutableArray<string>> DynatraceImsBridges { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.JiraNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceJiraNotifications")]
        public Output<ImmutableArray<string>> DynatraceJiraNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.K8sNamespaceAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceK8sNamespaceAnomalies")]
        public Output<ImmutableArray<string>> DynatraceK8sNamespaceAnomalies { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.KeyRequests` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceKeyRequests")]
        public Output<ImmutableArray<string>> DynatraceKeyRequests { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.LogMetrics` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceLogMetrics")]
        public Output<ImmutableArray<string>> DynatraceLogMetrics { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Maintenance` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMaintenances")]
        public Output<ImmutableArray<string>> DynatraceMaintenances { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ManagementZoneV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceManagementZoneV2s")]
        public Output<ImmutableArray<string>> DynatraceManagementZoneV2s { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MetricEvents` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMetricEvents")]
        public Output<ImmutableArray<string>> DynatraceMetricEvents { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMobileAppAnomalies")]
        public Output<ImmutableArray<string>> DynatraceMobileAppAnomalies { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppCrashRate` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMobileAppCrashRates")]
        public Output<ImmutableArray<string>> DynatraceMobileAppCrashRates { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMobileAppEnablements")]
        public Output<ImmutableArray<string>> DynatraceMobileAppEnablements { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileApplication` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMobileApplications")]
        public Output<ImmutableArray<string>> DynatraceMobileApplications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesApache` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesApaches")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesApaches { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesDotnet` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesDotnets")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesDotnets { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesGo` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesGos")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesGos { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesIis` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesIis")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesIis { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesJava` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesJavas")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesJavas { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesNginx` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesNginxes")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesNginxes { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesNodejs` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesNodejs")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesNodejs { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesOpentracing` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesOpentracings")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesOpentracings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesPhp` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesPhps")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesPhps { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesVarnish` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesVarnishes")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesVarnishes { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesWsmb` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMonitoredTechnologiesWsmbs")]
        public Output<ImmutableArray<string>> DynatraceMonitoredTechnologiesWsmbs { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MutedRequests` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceMutedRequests")]
        public Output<ImmutableArray<string>> DynatraceMutedRequests { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Nettracer` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceNettracers")]
        public Output<ImmutableArray<string>> DynatraceNettracers { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.OneagentFeatures` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceOneagentFeatures")]
        public Output<ImmutableArray<string>> DynatraceOneagentFeatures { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.OpsGenieNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceOpsGenieNotifications")]
        public Output<ImmutableArray<string>> DynatraceOpsGenieNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.PagerDutyNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatracePagerDutyNotifications")]
        public Output<ImmutableArray<string>> DynatracePagerDutyNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.PgAlerting` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatracePgAlertings")]
        public Output<ImmutableArray<string>> DynatracePgAlertings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessAvailability` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessAvailabilities")]
        public Output<ImmutableArray<string>> DynatraceProcessAvailabilities { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupDetectionFlags` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessGroupDetectionFlags")]
        public Output<ImmutableArray<string>> DynatraceProcessGroupDetectionFlags { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupDetection` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessGroupDetections")]
        public Output<ImmutableArray<string>> DynatraceProcessGroupDetections { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessGroupMonitorings")]
        public Output<ImmutableArray<string>> DynatraceProcessGroupMonitorings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupRum` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessGroupRums")]
        public Output<ImmutableArray<string>> DynatraceProcessGroupRums { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupSimpleDetection` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessGroupSimpleDetections")]
        public Output<ImmutableArray<string>> DynatraceProcessGroupSimpleDetections { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessMonitoringRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessMonitoringRules")]
        public Output<ImmutableArray<string>> DynatraceProcessMonitoringRules { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessMonitorings")]
        public Output<ImmutableArray<string>> DynatraceProcessMonitorings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessVisibility` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessVisibilities")]
        public Output<ImmutableArray<string>> DynatraceProcessVisibilities { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessgroupNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceProcessgroupNamings")]
        public Output<ImmutableArray<string>> DynatraceProcessgroupNamings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.QueueManager` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceQueueManagers")]
        public Output<ImmutableArray<string>> DynatraceQueueManagers { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.QueueSharingGroups` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceQueueSharingGroups")]
        public Output<ImmutableArray<string>> DynatraceQueueSharingGroups { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RequestAttribute` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceRequestAttributes")]
        public Output<ImmutableArray<string>> DynatraceRequestAttributes { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RequestNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceRequestNamings")]
        public Output<ImmutableArray<string>> DynatraceRequestNamings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumAdvancedCorrelation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceRumAdvancedCorrelations")]
        public Output<ImmutableArray<string>> DynatraceRumAdvancedCorrelations { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumIpLocations` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceRumIpLocations")]
        public Output<ImmutableArray<string>> DynatraceRumIpLocations { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumProviderBreakdown` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceRumProviderBreakdowns")]
        public Output<ImmutableArray<string>> DynatraceRumProviderBreakdowns { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceFailure` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceServiceFailures")]
        public Output<ImmutableArray<string>> DynatraceServiceFailures { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceHttpFailure` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceServiceHttpFailures")]
        public Output<ImmutableArray<string>> DynatraceServiceHttpFailures { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceServiceNamings")]
        public Output<ImmutableArray<string>> DynatraceServiceNamings { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceNowNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceServiceNowNotifications")]
        public Output<ImmutableArray<string>> DynatraceServiceNowNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SessionReplayWebPrivacy` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceSessionReplayWebPrivacies")]
        public Output<ImmutableArray<string>> DynatraceSessionReplayWebPrivacies { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SlackNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceSlackNotifications")]
        public Output<ImmutableArray<string>> DynatraceSlackNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SloV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceSloV2s")]
        public Output<ImmutableArray<string>> DynatraceSloV2s { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SpanCaptureRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceSpanCaptureRules")]
        public Output<ImmutableArray<string>> DynatraceSpanCaptureRules { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SpanContextPropagation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceSpanContextPropagations")]
        public Output<ImmutableArray<string>> DynatraceSpanContextPropagations { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SyntheticLocation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceSyntheticLocations")]
        public Output<ImmutableArray<string>> DynatraceSyntheticLocations { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.TrelloNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceTrelloNotifications")]
        public Output<ImmutableArray<string>> DynatraceTrelloNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.UpdateWindows` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceUpdateWindows")]
        public Output<ImmutableArray<string>> DynatraceUpdateWindows { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.UsabilityAnalytics` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceUsabilityAnalytics")]
        public Output<ImmutableArray<string>> DynatraceUsabilityAnalytics { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.VictorOpsNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceVictorOpsNotifications")]
        public Output<ImmutableArray<string>> DynatraceVictorOpsNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceWebAppAnomalies")]
        public Output<ImmutableArray<string>> DynatraceWebAppAnomalies { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppBeaconOrigins` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceWebAppBeaconOrigins")]
        public Output<ImmutableArray<string>> DynatraceWebAppBeaconOrigins { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceWebAppEnablements")]
        public Output<ImmutableArray<string>> DynatraceWebAppEnablements { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppResourceCleanup` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceWebAppResourceCleanups")]
        public Output<ImmutableArray<string>> DynatraceWebAppResourceCleanups { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppResourceTypes` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceWebAppResourceTypes")]
        public Output<ImmutableArray<string>> DynatraceWebAppResourceTypes { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebApplication` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceWebApplications")]
        public Output<ImmutableArray<string>> DynatraceWebApplications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebhookNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceWebhookNotifications")]
        public Output<ImmutableArray<string>> DynatraceWebhookNotifications { get; private set; } = null!;

        /// <summary>
        /// The IDs for resource of type `dynatrace.XmattersNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        [Output("dynatraceXmattersNotifications")]
        public Output<ImmutableArray<string>> DynatraceXmattersNotifications { get; private set; } = null!;

        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;


        /// <summary>
        /// Create a GoldenState resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GoldenState(string name, GoldenStateArgs? args = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/goldenState:GoldenState", name, args ?? new GoldenStateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GoldenState(string name, Input<string> id, GoldenStateState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/goldenState:GoldenState", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GoldenState resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GoldenState Get(string name, Input<string> id, GoldenStateState? state = null, CustomResourceOptions? options = null)
        {
            return new GoldenState(name, id, state, options);
        }
    }

    public sealed class GoldenStateArgs : global::Pulumi.ResourceArgs
    {
        [Input("dynatraceAixExtensions")]
        private InputList<string>? _dynatraceAixExtensions;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AixExtension` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAixExtensions
        {
            get => _dynatraceAixExtensions ?? (_dynatraceAixExtensions = new InputList<string>());
            set => _dynatraceAixExtensions = value;
        }

        [Input("dynatraceAlertings")]
        private InputList<string>? _dynatraceAlertings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Alerting` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAlertings
        {
            get => _dynatraceAlertings ?? (_dynatraceAlertings = new InputList<string>());
            set => _dynatraceAlertings = value;
        }

        [Input("dynatraceAnsibleTowerNotifications")]
        private InputList<string>? _dynatraceAnsibleTowerNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AnsibleTowerNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAnsibleTowerNotifications
        {
            get => _dynatraceAnsibleTowerNotifications ?? (_dynatraceAnsibleTowerNotifications = new InputList<string>());
            set => _dynatraceAnsibleTowerNotifications = value;
        }

        [Input("dynatraceApplicationDetectionRules")]
        private InputList<string>? _dynatraceApplicationDetectionRules;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ApplicationDetectionRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceApplicationDetectionRules
        {
            get => _dynatraceApplicationDetectionRules ?? (_dynatraceApplicationDetectionRules = new InputList<string>());
            set => _dynatraceApplicationDetectionRules = value;
        }

        [Input("dynatraceApplicationErrorRules")]
        private InputList<string>? _dynatraceApplicationErrorRules;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ApplicationErrorRules` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceApplicationErrorRules
        {
            get => _dynatraceApplicationErrorRules ?? (_dynatraceApplicationErrorRules = new InputList<string>());
            set => _dynatraceApplicationErrorRules = value;
        }

        [Input("dynatraceAutotagV2s")]
        private InputList<string>? _dynatraceAutotagV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AutotagV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAutotagV2s
        {
            get => _dynatraceAutotagV2s ?? (_dynatraceAutotagV2s = new InputList<string>());
            set => _dynatraceAutotagV2s = value;
        }

        [Input("dynatraceAwsCredentials")]
        private InputList<string>? _dynatraceAwsCredentials;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AwsCredentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAwsCredentials
        {
            get => _dynatraceAwsCredentials ?? (_dynatraceAwsCredentials = new InputList<string>());
            set => _dynatraceAwsCredentials = value;
        }

        [Input("dynatraceAzureCredentials")]
        private InputList<string>? _dynatraceAzureCredentials;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AzureCredentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAzureCredentials
        {
            get => _dynatraceAzureCredentials ?? (_dynatraceAzureCredentials = new InputList<string>());
            set => _dynatraceAzureCredentials = value;
        }

        [Input("dynatraceBrowserMonitors")]
        private InputList<string>? _dynatraceBrowserMonitors;

        /// <summary>
        /// The IDs for resource of type `dynatrace.BrowserMonitor` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceBrowserMonitors
        {
            get => _dynatraceBrowserMonitors ?? (_dynatraceBrowserMonitors = new InputList<string>());
            set => _dynatraceBrowserMonitors = value;
        }

        [Input("dynatraceCalculatedMobileMetrics")]
        private InputList<string>? _dynatraceCalculatedMobileMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedMobileMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCalculatedMobileMetrics
        {
            get => _dynatraceCalculatedMobileMetrics ?? (_dynatraceCalculatedMobileMetrics = new InputList<string>());
            set => _dynatraceCalculatedMobileMetrics = value;
        }

        [Input("dynatraceCalculatedServiceMetrics")]
        private InputList<string>? _dynatraceCalculatedServiceMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedServiceMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCalculatedServiceMetrics
        {
            get => _dynatraceCalculatedServiceMetrics ?? (_dynatraceCalculatedServiceMetrics = new InputList<string>());
            set => _dynatraceCalculatedServiceMetrics = value;
        }

        [Input("dynatraceCalculatedSyntheticMetrics")]
        private InputList<string>? _dynatraceCalculatedSyntheticMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedSyntheticMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCalculatedSyntheticMetrics
        {
            get => _dynatraceCalculatedSyntheticMetrics ?? (_dynatraceCalculatedSyntheticMetrics = new InputList<string>());
            set => _dynatraceCalculatedSyntheticMetrics = value;
        }

        [Input("dynatraceCalculatedWebMetrics")]
        private InputList<string>? _dynatraceCalculatedWebMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedWebMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCalculatedWebMetrics
        {
            get => _dynatraceCalculatedWebMetrics ?? (_dynatraceCalculatedWebMetrics = new InputList<string>());
            set => _dynatraceCalculatedWebMetrics = value;
        }

        [Input("dynatraceCredentials")]
        private InputList<string>? _dynatraceCredentials;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Credentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCredentials
        {
            get => _dynatraceCredentials ?? (_dynatraceCredentials = new InputList<string>());
            set => _dynatraceCredentials = value;
        }

        [Input("dynatraceCustomAppAnomalies")]
        private InputList<string>? _dynatraceCustomAppAnomalies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCustomAppAnomalies
        {
            get => _dynatraceCustomAppAnomalies ?? (_dynatraceCustomAppAnomalies = new InputList<string>());
            set => _dynatraceCustomAppAnomalies = value;
        }

        [Input("dynatraceCustomAppCrashRates")]
        private InputList<string>? _dynatraceCustomAppCrashRates;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppCrashRate` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCustomAppCrashRates
        {
            get => _dynatraceCustomAppCrashRates ?? (_dynatraceCustomAppCrashRates = new InputList<string>());
            set => _dynatraceCustomAppCrashRates = value;
        }

        [Input("dynatraceCustomAppEnablements")]
        private InputList<string>? _dynatraceCustomAppEnablements;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCustomAppEnablements
        {
            get => _dynatraceCustomAppEnablements ?? (_dynatraceCustomAppEnablements = new InputList<string>());
            set => _dynatraceCustomAppEnablements = value;
        }

        [Input("dynatraceCustomServices")]
        private InputList<string>? _dynatraceCustomServices;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomService` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCustomServices
        {
            get => _dynatraceCustomServices ?? (_dynatraceCustomServices = new InputList<string>());
            set => _dynatraceCustomServices = value;
        }

        [Input("dynatraceDataPrivacies")]
        private InputList<string>? _dynatraceDataPrivacies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DataPrivacy` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDataPrivacies
        {
            get => _dynatraceDataPrivacies ?? (_dynatraceDataPrivacies = new InputList<string>());
            set => _dynatraceDataPrivacies = value;
        }

        [Input("dynatraceDatabaseAnomaliesV2s")]
        private InputList<string>? _dynatraceDatabaseAnomaliesV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DatabaseAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDatabaseAnomaliesV2s
        {
            get => _dynatraceDatabaseAnomaliesV2s ?? (_dynatraceDatabaseAnomaliesV2s = new InputList<string>());
            set => _dynatraceDatabaseAnomaliesV2s = value;
        }

        [Input("dynatraceDeclarativeGroupings")]
        private InputList<string>? _dynatraceDeclarativeGroupings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DeclarativeGrouping` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDeclarativeGroupings
        {
            get => _dynatraceDeclarativeGroupings ?? (_dynatraceDeclarativeGroupings = new InputList<string>());
            set => _dynatraceDeclarativeGroupings = value;
        }

        [Input("dynatraceDiskAnomaliesV2s")]
        private InputList<string>? _dynatraceDiskAnomaliesV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDiskAnomaliesV2s
        {
            get => _dynatraceDiskAnomaliesV2s ?? (_dynatraceDiskAnomaliesV2s = new InputList<string>());
            set => _dynatraceDiskAnomaliesV2s = value;
        }

        [Input("dynatraceDiskOptions")]
        private InputList<string>? _dynatraceDiskOptions;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskOptions` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDiskOptions
        {
            get => _dynatraceDiskOptions ?? (_dynatraceDiskOptions = new InputList<string>());
            set => _dynatraceDiskOptions = value;
        }

        [Input("dynatraceDiskSpecificAnomaliesV2s")]
        private InputList<string>? _dynatraceDiskSpecificAnomaliesV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskSpecificAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDiskSpecificAnomaliesV2s
        {
            get => _dynatraceDiskSpecificAnomaliesV2s ?? (_dynatraceDiskSpecificAnomaliesV2s = new InputList<string>());
            set => _dynatraceDiskSpecificAnomaliesV2s = value;
        }

        [Input("dynatraceEmailNotifications")]
        private InputList<string>? _dynatraceEmailNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.EmailNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceEmailNotifications
        {
            get => _dynatraceEmailNotifications ?? (_dynatraceEmailNotifications = new InputList<string>());
            set => _dynatraceEmailNotifications = value;
        }

        [Input("dynatraceExtensionExecutionControllers")]
        private InputList<string>? _dynatraceExtensionExecutionControllers;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ExtensionExecutionController` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceExtensionExecutionControllers
        {
            get => _dynatraceExtensionExecutionControllers ?? (_dynatraceExtensionExecutionControllers = new InputList<string>());
            set => _dynatraceExtensionExecutionControllers = value;
        }

        [Input("dynatraceGenericTypes")]
        private InputList<string>? _dynatraceGenericTypes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.GenericTypes` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceGenericTypes
        {
            get => _dynatraceGenericTypes ?? (_dynatraceGenericTypes = new InputList<string>());
            set => _dynatraceGenericTypes = value;
        }

        [Input("dynatraceHostAnomaliesV2s")]
        private InputList<string>? _dynatraceHostAnomaliesV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceHostAnomaliesV2s
        {
            get => _dynatraceHostAnomaliesV2s ?? (_dynatraceHostAnomaliesV2s = new InputList<string>());
            set => _dynatraceHostAnomaliesV2s = value;
        }

        [Input("dynatraceHostNamings")]
        private InputList<string>? _dynatraceHostNamings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceHostNamings
        {
            get => _dynatraceHostNamings ?? (_dynatraceHostNamings = new InputList<string>());
            set => _dynatraceHostNamings = value;
        }

        [Input("dynatraceHostProcessGroupMonitorings")]
        private InputList<string>? _dynatraceHostProcessGroupMonitorings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostProcessGroupMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceHostProcessGroupMonitorings
        {
            get => _dynatraceHostProcessGroupMonitorings ?? (_dynatraceHostProcessGroupMonitorings = new InputList<string>());
            set => _dynatraceHostProcessGroupMonitorings = value;
        }

        [Input("dynatraceHttpMonitors")]
        private InputList<string>? _dynatraceHttpMonitors;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HttpMonitor` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceHttpMonitors
        {
            get => _dynatraceHttpMonitors ?? (_dynatraceHttpMonitors = new InputList<string>());
            set => _dynatraceHttpMonitors = value;
        }

        [Input("dynatraceImsBridges")]
        private InputList<string>? _dynatraceImsBridges;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ImsBridges` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceImsBridges
        {
            get => _dynatraceImsBridges ?? (_dynatraceImsBridges = new InputList<string>());
            set => _dynatraceImsBridges = value;
        }

        [Input("dynatraceJiraNotifications")]
        private InputList<string>? _dynatraceJiraNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.JiraNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceJiraNotifications
        {
            get => _dynatraceJiraNotifications ?? (_dynatraceJiraNotifications = new InputList<string>());
            set => _dynatraceJiraNotifications = value;
        }

        [Input("dynatraceK8sNamespaceAnomalies")]
        private InputList<string>? _dynatraceK8sNamespaceAnomalies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.K8sNamespaceAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceK8sNamespaceAnomalies
        {
            get => _dynatraceK8sNamespaceAnomalies ?? (_dynatraceK8sNamespaceAnomalies = new InputList<string>());
            set => _dynatraceK8sNamespaceAnomalies = value;
        }

        [Input("dynatraceKeyRequests")]
        private InputList<string>? _dynatraceKeyRequests;

        /// <summary>
        /// The IDs for resource of type `dynatrace.KeyRequests` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceKeyRequests
        {
            get => _dynatraceKeyRequests ?? (_dynatraceKeyRequests = new InputList<string>());
            set => _dynatraceKeyRequests = value;
        }

        [Input("dynatraceLogMetrics")]
        private InputList<string>? _dynatraceLogMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.LogMetrics` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceLogMetrics
        {
            get => _dynatraceLogMetrics ?? (_dynatraceLogMetrics = new InputList<string>());
            set => _dynatraceLogMetrics = value;
        }

        [Input("dynatraceMaintenances")]
        private InputList<string>? _dynatraceMaintenances;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Maintenance` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMaintenances
        {
            get => _dynatraceMaintenances ?? (_dynatraceMaintenances = new InputList<string>());
            set => _dynatraceMaintenances = value;
        }

        [Input("dynatraceManagementZoneV2s")]
        private InputList<string>? _dynatraceManagementZoneV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ManagementZoneV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceManagementZoneV2s
        {
            get => _dynatraceManagementZoneV2s ?? (_dynatraceManagementZoneV2s = new InputList<string>());
            set => _dynatraceManagementZoneV2s = value;
        }

        [Input("dynatraceMetricEvents")]
        private InputList<string>? _dynatraceMetricEvents;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MetricEvents` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMetricEvents
        {
            get => _dynatraceMetricEvents ?? (_dynatraceMetricEvents = new InputList<string>());
            set => _dynatraceMetricEvents = value;
        }

        [Input("dynatraceMobileAppAnomalies")]
        private InputList<string>? _dynatraceMobileAppAnomalies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMobileAppAnomalies
        {
            get => _dynatraceMobileAppAnomalies ?? (_dynatraceMobileAppAnomalies = new InputList<string>());
            set => _dynatraceMobileAppAnomalies = value;
        }

        [Input("dynatraceMobileAppCrashRates")]
        private InputList<string>? _dynatraceMobileAppCrashRates;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppCrashRate` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMobileAppCrashRates
        {
            get => _dynatraceMobileAppCrashRates ?? (_dynatraceMobileAppCrashRates = new InputList<string>());
            set => _dynatraceMobileAppCrashRates = value;
        }

        [Input("dynatraceMobileAppEnablements")]
        private InputList<string>? _dynatraceMobileAppEnablements;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMobileAppEnablements
        {
            get => _dynatraceMobileAppEnablements ?? (_dynatraceMobileAppEnablements = new InputList<string>());
            set => _dynatraceMobileAppEnablements = value;
        }

        [Input("dynatraceMobileApplications")]
        private InputList<string>? _dynatraceMobileApplications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileApplication` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMobileApplications
        {
            get => _dynatraceMobileApplications ?? (_dynatraceMobileApplications = new InputList<string>());
            set => _dynatraceMobileApplications = value;
        }

        [Input("dynatraceMonitoredTechnologiesApaches")]
        private InputList<string>? _dynatraceMonitoredTechnologiesApaches;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesApache` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesApaches
        {
            get => _dynatraceMonitoredTechnologiesApaches ?? (_dynatraceMonitoredTechnologiesApaches = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesApaches = value;
        }

        [Input("dynatraceMonitoredTechnologiesDotnets")]
        private InputList<string>? _dynatraceMonitoredTechnologiesDotnets;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesDotnet` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesDotnets
        {
            get => _dynatraceMonitoredTechnologiesDotnets ?? (_dynatraceMonitoredTechnologiesDotnets = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesDotnets = value;
        }

        [Input("dynatraceMonitoredTechnologiesGos")]
        private InputList<string>? _dynatraceMonitoredTechnologiesGos;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesGo` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesGos
        {
            get => _dynatraceMonitoredTechnologiesGos ?? (_dynatraceMonitoredTechnologiesGos = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesGos = value;
        }

        [Input("dynatraceMonitoredTechnologiesIis")]
        private InputList<string>? _dynatraceMonitoredTechnologiesIis;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesIis` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesIis
        {
            get => _dynatraceMonitoredTechnologiesIis ?? (_dynatraceMonitoredTechnologiesIis = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesIis = value;
        }

        [Input("dynatraceMonitoredTechnologiesJavas")]
        private InputList<string>? _dynatraceMonitoredTechnologiesJavas;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesJava` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesJavas
        {
            get => _dynatraceMonitoredTechnologiesJavas ?? (_dynatraceMonitoredTechnologiesJavas = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesJavas = value;
        }

        [Input("dynatraceMonitoredTechnologiesNginxes")]
        private InputList<string>? _dynatraceMonitoredTechnologiesNginxes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesNginx` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesNginxes
        {
            get => _dynatraceMonitoredTechnologiesNginxes ?? (_dynatraceMonitoredTechnologiesNginxes = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesNginxes = value;
        }

        [Input("dynatraceMonitoredTechnologiesNodejs")]
        private InputList<string>? _dynatraceMonitoredTechnologiesNodejs;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesNodejs` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesNodejs
        {
            get => _dynatraceMonitoredTechnologiesNodejs ?? (_dynatraceMonitoredTechnologiesNodejs = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesNodejs = value;
        }

        [Input("dynatraceMonitoredTechnologiesOpentracings")]
        private InputList<string>? _dynatraceMonitoredTechnologiesOpentracings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesOpentracing` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesOpentracings
        {
            get => _dynatraceMonitoredTechnologiesOpentracings ?? (_dynatraceMonitoredTechnologiesOpentracings = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesOpentracings = value;
        }

        [Input("dynatraceMonitoredTechnologiesPhps")]
        private InputList<string>? _dynatraceMonitoredTechnologiesPhps;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesPhp` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesPhps
        {
            get => _dynatraceMonitoredTechnologiesPhps ?? (_dynatraceMonitoredTechnologiesPhps = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesPhps = value;
        }

        [Input("dynatraceMonitoredTechnologiesVarnishes")]
        private InputList<string>? _dynatraceMonitoredTechnologiesVarnishes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesVarnish` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesVarnishes
        {
            get => _dynatraceMonitoredTechnologiesVarnishes ?? (_dynatraceMonitoredTechnologiesVarnishes = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesVarnishes = value;
        }

        [Input("dynatraceMonitoredTechnologiesWsmbs")]
        private InputList<string>? _dynatraceMonitoredTechnologiesWsmbs;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesWsmb` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesWsmbs
        {
            get => _dynatraceMonitoredTechnologiesWsmbs ?? (_dynatraceMonitoredTechnologiesWsmbs = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesWsmbs = value;
        }

        [Input("dynatraceMutedRequests")]
        private InputList<string>? _dynatraceMutedRequests;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MutedRequests` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMutedRequests
        {
            get => _dynatraceMutedRequests ?? (_dynatraceMutedRequests = new InputList<string>());
            set => _dynatraceMutedRequests = value;
        }

        [Input("dynatraceNettracers")]
        private InputList<string>? _dynatraceNettracers;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Nettracer` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceNettracers
        {
            get => _dynatraceNettracers ?? (_dynatraceNettracers = new InputList<string>());
            set => _dynatraceNettracers = value;
        }

        [Input("dynatraceOneagentFeatures")]
        private InputList<string>? _dynatraceOneagentFeatures;

        /// <summary>
        /// The IDs for resource of type `dynatrace.OneagentFeatures` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceOneagentFeatures
        {
            get => _dynatraceOneagentFeatures ?? (_dynatraceOneagentFeatures = new InputList<string>());
            set => _dynatraceOneagentFeatures = value;
        }

        [Input("dynatraceOpsGenieNotifications")]
        private InputList<string>? _dynatraceOpsGenieNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.OpsGenieNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceOpsGenieNotifications
        {
            get => _dynatraceOpsGenieNotifications ?? (_dynatraceOpsGenieNotifications = new InputList<string>());
            set => _dynatraceOpsGenieNotifications = value;
        }

        [Input("dynatracePagerDutyNotifications")]
        private InputList<string>? _dynatracePagerDutyNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.PagerDutyNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatracePagerDutyNotifications
        {
            get => _dynatracePagerDutyNotifications ?? (_dynatracePagerDutyNotifications = new InputList<string>());
            set => _dynatracePagerDutyNotifications = value;
        }

        [Input("dynatracePgAlertings")]
        private InputList<string>? _dynatracePgAlertings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.PgAlerting` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatracePgAlertings
        {
            get => _dynatracePgAlertings ?? (_dynatracePgAlertings = new InputList<string>());
            set => _dynatracePgAlertings = value;
        }

        [Input("dynatraceProcessAvailabilities")]
        private InputList<string>? _dynatraceProcessAvailabilities;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessAvailability` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessAvailabilities
        {
            get => _dynatraceProcessAvailabilities ?? (_dynatraceProcessAvailabilities = new InputList<string>());
            set => _dynatraceProcessAvailabilities = value;
        }

        [Input("dynatraceProcessGroupDetectionFlags")]
        private InputList<string>? _dynatraceProcessGroupDetectionFlags;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupDetectionFlags` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupDetectionFlags
        {
            get => _dynatraceProcessGroupDetectionFlags ?? (_dynatraceProcessGroupDetectionFlags = new InputList<string>());
            set => _dynatraceProcessGroupDetectionFlags = value;
        }

        [Input("dynatraceProcessGroupDetections")]
        private InputList<string>? _dynatraceProcessGroupDetections;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupDetection` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupDetections
        {
            get => _dynatraceProcessGroupDetections ?? (_dynatraceProcessGroupDetections = new InputList<string>());
            set => _dynatraceProcessGroupDetections = value;
        }

        [Input("dynatraceProcessGroupMonitorings")]
        private InputList<string>? _dynatraceProcessGroupMonitorings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupMonitorings
        {
            get => _dynatraceProcessGroupMonitorings ?? (_dynatraceProcessGroupMonitorings = new InputList<string>());
            set => _dynatraceProcessGroupMonitorings = value;
        }

        [Input("dynatraceProcessGroupRums")]
        private InputList<string>? _dynatraceProcessGroupRums;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupRum` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupRums
        {
            get => _dynatraceProcessGroupRums ?? (_dynatraceProcessGroupRums = new InputList<string>());
            set => _dynatraceProcessGroupRums = value;
        }

        [Input("dynatraceProcessGroupSimpleDetections")]
        private InputList<string>? _dynatraceProcessGroupSimpleDetections;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupSimpleDetection` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupSimpleDetections
        {
            get => _dynatraceProcessGroupSimpleDetections ?? (_dynatraceProcessGroupSimpleDetections = new InputList<string>());
            set => _dynatraceProcessGroupSimpleDetections = value;
        }

        [Input("dynatraceProcessMonitoringRules")]
        private InputList<string>? _dynatraceProcessMonitoringRules;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessMonitoringRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessMonitoringRules
        {
            get => _dynatraceProcessMonitoringRules ?? (_dynatraceProcessMonitoringRules = new InputList<string>());
            set => _dynatraceProcessMonitoringRules = value;
        }

        [Input("dynatraceProcessMonitorings")]
        private InputList<string>? _dynatraceProcessMonitorings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessMonitorings
        {
            get => _dynatraceProcessMonitorings ?? (_dynatraceProcessMonitorings = new InputList<string>());
            set => _dynatraceProcessMonitorings = value;
        }

        [Input("dynatraceProcessVisibilities")]
        private InputList<string>? _dynatraceProcessVisibilities;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessVisibility` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessVisibilities
        {
            get => _dynatraceProcessVisibilities ?? (_dynatraceProcessVisibilities = new InputList<string>());
            set => _dynatraceProcessVisibilities = value;
        }

        [Input("dynatraceProcessgroupNamings")]
        private InputList<string>? _dynatraceProcessgroupNamings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessgroupNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessgroupNamings
        {
            get => _dynatraceProcessgroupNamings ?? (_dynatraceProcessgroupNamings = new InputList<string>());
            set => _dynatraceProcessgroupNamings = value;
        }

        [Input("dynatraceQueueManagers")]
        private InputList<string>? _dynatraceQueueManagers;

        /// <summary>
        /// The IDs for resource of type `dynatrace.QueueManager` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceQueueManagers
        {
            get => _dynatraceQueueManagers ?? (_dynatraceQueueManagers = new InputList<string>());
            set => _dynatraceQueueManagers = value;
        }

        [Input("dynatraceQueueSharingGroups")]
        private InputList<string>? _dynatraceQueueSharingGroups;

        /// <summary>
        /// The IDs for resource of type `dynatrace.QueueSharingGroups` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceQueueSharingGroups
        {
            get => _dynatraceQueueSharingGroups ?? (_dynatraceQueueSharingGroups = new InputList<string>());
            set => _dynatraceQueueSharingGroups = value;
        }

        [Input("dynatraceRequestAttributes")]
        private InputList<string>? _dynatraceRequestAttributes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RequestAttribute` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRequestAttributes
        {
            get => _dynatraceRequestAttributes ?? (_dynatraceRequestAttributes = new InputList<string>());
            set => _dynatraceRequestAttributes = value;
        }

        [Input("dynatraceRequestNamings")]
        private InputList<string>? _dynatraceRequestNamings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RequestNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRequestNamings
        {
            get => _dynatraceRequestNamings ?? (_dynatraceRequestNamings = new InputList<string>());
            set => _dynatraceRequestNamings = value;
        }

        [Input("dynatraceRumAdvancedCorrelations")]
        private InputList<string>? _dynatraceRumAdvancedCorrelations;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumAdvancedCorrelation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRumAdvancedCorrelations
        {
            get => _dynatraceRumAdvancedCorrelations ?? (_dynatraceRumAdvancedCorrelations = new InputList<string>());
            set => _dynatraceRumAdvancedCorrelations = value;
        }

        [Input("dynatraceRumIpLocations")]
        private InputList<string>? _dynatraceRumIpLocations;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumIpLocations` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRumIpLocations
        {
            get => _dynatraceRumIpLocations ?? (_dynatraceRumIpLocations = new InputList<string>());
            set => _dynatraceRumIpLocations = value;
        }

        [Input("dynatraceRumProviderBreakdowns")]
        private InputList<string>? _dynatraceRumProviderBreakdowns;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumProviderBreakdown` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRumProviderBreakdowns
        {
            get => _dynatraceRumProviderBreakdowns ?? (_dynatraceRumProviderBreakdowns = new InputList<string>());
            set => _dynatraceRumProviderBreakdowns = value;
        }

        [Input("dynatraceServiceFailures")]
        private InputList<string>? _dynatraceServiceFailures;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceFailure` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceServiceFailures
        {
            get => _dynatraceServiceFailures ?? (_dynatraceServiceFailures = new InputList<string>());
            set => _dynatraceServiceFailures = value;
        }

        [Input("dynatraceServiceHttpFailures")]
        private InputList<string>? _dynatraceServiceHttpFailures;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceHttpFailure` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceServiceHttpFailures
        {
            get => _dynatraceServiceHttpFailures ?? (_dynatraceServiceHttpFailures = new InputList<string>());
            set => _dynatraceServiceHttpFailures = value;
        }

        [Input("dynatraceServiceNamings")]
        private InputList<string>? _dynatraceServiceNamings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceServiceNamings
        {
            get => _dynatraceServiceNamings ?? (_dynatraceServiceNamings = new InputList<string>());
            set => _dynatraceServiceNamings = value;
        }

        [Input("dynatraceServiceNowNotifications")]
        private InputList<string>? _dynatraceServiceNowNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceNowNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceServiceNowNotifications
        {
            get => _dynatraceServiceNowNotifications ?? (_dynatraceServiceNowNotifications = new InputList<string>());
            set => _dynatraceServiceNowNotifications = value;
        }

        [Input("dynatraceSessionReplayWebPrivacies")]
        private InputList<string>? _dynatraceSessionReplayWebPrivacies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SessionReplayWebPrivacy` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSessionReplayWebPrivacies
        {
            get => _dynatraceSessionReplayWebPrivacies ?? (_dynatraceSessionReplayWebPrivacies = new InputList<string>());
            set => _dynatraceSessionReplayWebPrivacies = value;
        }

        [Input("dynatraceSlackNotifications")]
        private InputList<string>? _dynatraceSlackNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SlackNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSlackNotifications
        {
            get => _dynatraceSlackNotifications ?? (_dynatraceSlackNotifications = new InputList<string>());
            set => _dynatraceSlackNotifications = value;
        }

        [Input("dynatraceSloV2s")]
        private InputList<string>? _dynatraceSloV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SloV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSloV2s
        {
            get => _dynatraceSloV2s ?? (_dynatraceSloV2s = new InputList<string>());
            set => _dynatraceSloV2s = value;
        }

        [Input("dynatraceSpanCaptureRules")]
        private InputList<string>? _dynatraceSpanCaptureRules;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SpanCaptureRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSpanCaptureRules
        {
            get => _dynatraceSpanCaptureRules ?? (_dynatraceSpanCaptureRules = new InputList<string>());
            set => _dynatraceSpanCaptureRules = value;
        }

        [Input("dynatraceSpanContextPropagations")]
        private InputList<string>? _dynatraceSpanContextPropagations;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SpanContextPropagation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSpanContextPropagations
        {
            get => _dynatraceSpanContextPropagations ?? (_dynatraceSpanContextPropagations = new InputList<string>());
            set => _dynatraceSpanContextPropagations = value;
        }

        [Input("dynatraceSyntheticLocations")]
        private InputList<string>? _dynatraceSyntheticLocations;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SyntheticLocation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSyntheticLocations
        {
            get => _dynatraceSyntheticLocations ?? (_dynatraceSyntheticLocations = new InputList<string>());
            set => _dynatraceSyntheticLocations = value;
        }

        [Input("dynatraceTrelloNotifications")]
        private InputList<string>? _dynatraceTrelloNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.TrelloNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceTrelloNotifications
        {
            get => _dynatraceTrelloNotifications ?? (_dynatraceTrelloNotifications = new InputList<string>());
            set => _dynatraceTrelloNotifications = value;
        }

        [Input("dynatraceUpdateWindows")]
        private InputList<string>? _dynatraceUpdateWindows;

        /// <summary>
        /// The IDs for resource of type `dynatrace.UpdateWindows` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceUpdateWindows
        {
            get => _dynatraceUpdateWindows ?? (_dynatraceUpdateWindows = new InputList<string>());
            set => _dynatraceUpdateWindows = value;
        }

        [Input("dynatraceUsabilityAnalytics")]
        private InputList<string>? _dynatraceUsabilityAnalytics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.UsabilityAnalytics` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceUsabilityAnalytics
        {
            get => _dynatraceUsabilityAnalytics ?? (_dynatraceUsabilityAnalytics = new InputList<string>());
            set => _dynatraceUsabilityAnalytics = value;
        }

        [Input("dynatraceVictorOpsNotifications")]
        private InputList<string>? _dynatraceVictorOpsNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.VictorOpsNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceVictorOpsNotifications
        {
            get => _dynatraceVictorOpsNotifications ?? (_dynatraceVictorOpsNotifications = new InputList<string>());
            set => _dynatraceVictorOpsNotifications = value;
        }

        [Input("dynatraceWebAppAnomalies")]
        private InputList<string>? _dynatraceWebAppAnomalies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppAnomalies
        {
            get => _dynatraceWebAppAnomalies ?? (_dynatraceWebAppAnomalies = new InputList<string>());
            set => _dynatraceWebAppAnomalies = value;
        }

        [Input("dynatraceWebAppBeaconOrigins")]
        private InputList<string>? _dynatraceWebAppBeaconOrigins;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppBeaconOrigins` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppBeaconOrigins
        {
            get => _dynatraceWebAppBeaconOrigins ?? (_dynatraceWebAppBeaconOrigins = new InputList<string>());
            set => _dynatraceWebAppBeaconOrigins = value;
        }

        [Input("dynatraceWebAppEnablements")]
        private InputList<string>? _dynatraceWebAppEnablements;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppEnablements
        {
            get => _dynatraceWebAppEnablements ?? (_dynatraceWebAppEnablements = new InputList<string>());
            set => _dynatraceWebAppEnablements = value;
        }

        [Input("dynatraceWebAppResourceCleanups")]
        private InputList<string>? _dynatraceWebAppResourceCleanups;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppResourceCleanup` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppResourceCleanups
        {
            get => _dynatraceWebAppResourceCleanups ?? (_dynatraceWebAppResourceCleanups = new InputList<string>());
            set => _dynatraceWebAppResourceCleanups = value;
        }

        [Input("dynatraceWebAppResourceTypes")]
        private InputList<string>? _dynatraceWebAppResourceTypes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppResourceTypes` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppResourceTypes
        {
            get => _dynatraceWebAppResourceTypes ?? (_dynatraceWebAppResourceTypes = new InputList<string>());
            set => _dynatraceWebAppResourceTypes = value;
        }

        [Input("dynatraceWebApplications")]
        private InputList<string>? _dynatraceWebApplications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebApplication` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebApplications
        {
            get => _dynatraceWebApplications ?? (_dynatraceWebApplications = new InputList<string>());
            set => _dynatraceWebApplications = value;
        }

        [Input("dynatraceWebhookNotifications")]
        private InputList<string>? _dynatraceWebhookNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebhookNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebhookNotifications
        {
            get => _dynatraceWebhookNotifications ?? (_dynatraceWebhookNotifications = new InputList<string>());
            set => _dynatraceWebhookNotifications = value;
        }

        [Input("dynatraceXmattersNotifications")]
        private InputList<string>? _dynatraceXmattersNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.XmattersNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceXmattersNotifications
        {
            get => _dynatraceXmattersNotifications ?? (_dynatraceXmattersNotifications = new InputList<string>());
            set => _dynatraceXmattersNotifications = value;
        }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        public GoldenStateArgs()
        {
        }
        public static new GoldenStateArgs Empty => new GoldenStateArgs();
    }

    public sealed class GoldenStateState : global::Pulumi.ResourceArgs
    {
        [Input("dynatraceAixExtensions")]
        private InputList<string>? _dynatraceAixExtensions;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AixExtension` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAixExtensions
        {
            get => _dynatraceAixExtensions ?? (_dynatraceAixExtensions = new InputList<string>());
            set => _dynatraceAixExtensions = value;
        }

        [Input("dynatraceAlertings")]
        private InputList<string>? _dynatraceAlertings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Alerting` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAlertings
        {
            get => _dynatraceAlertings ?? (_dynatraceAlertings = new InputList<string>());
            set => _dynatraceAlertings = value;
        }

        [Input("dynatraceAnsibleTowerNotifications")]
        private InputList<string>? _dynatraceAnsibleTowerNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AnsibleTowerNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAnsibleTowerNotifications
        {
            get => _dynatraceAnsibleTowerNotifications ?? (_dynatraceAnsibleTowerNotifications = new InputList<string>());
            set => _dynatraceAnsibleTowerNotifications = value;
        }

        [Input("dynatraceApplicationDetectionRules")]
        private InputList<string>? _dynatraceApplicationDetectionRules;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ApplicationDetectionRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceApplicationDetectionRules
        {
            get => _dynatraceApplicationDetectionRules ?? (_dynatraceApplicationDetectionRules = new InputList<string>());
            set => _dynatraceApplicationDetectionRules = value;
        }

        [Input("dynatraceApplicationErrorRules")]
        private InputList<string>? _dynatraceApplicationErrorRules;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ApplicationErrorRules` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceApplicationErrorRules
        {
            get => _dynatraceApplicationErrorRules ?? (_dynatraceApplicationErrorRules = new InputList<string>());
            set => _dynatraceApplicationErrorRules = value;
        }

        [Input("dynatraceAutotagV2s")]
        private InputList<string>? _dynatraceAutotagV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AutotagV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAutotagV2s
        {
            get => _dynatraceAutotagV2s ?? (_dynatraceAutotagV2s = new InputList<string>());
            set => _dynatraceAutotagV2s = value;
        }

        [Input("dynatraceAwsCredentials")]
        private InputList<string>? _dynatraceAwsCredentials;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AwsCredentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAwsCredentials
        {
            get => _dynatraceAwsCredentials ?? (_dynatraceAwsCredentials = new InputList<string>());
            set => _dynatraceAwsCredentials = value;
        }

        [Input("dynatraceAzureCredentials")]
        private InputList<string>? _dynatraceAzureCredentials;

        /// <summary>
        /// The IDs for resource of type `dynatrace.AzureCredentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceAzureCredentials
        {
            get => _dynatraceAzureCredentials ?? (_dynatraceAzureCredentials = new InputList<string>());
            set => _dynatraceAzureCredentials = value;
        }

        [Input("dynatraceBrowserMonitors")]
        private InputList<string>? _dynatraceBrowserMonitors;

        /// <summary>
        /// The IDs for resource of type `dynatrace.BrowserMonitor` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceBrowserMonitors
        {
            get => _dynatraceBrowserMonitors ?? (_dynatraceBrowserMonitors = new InputList<string>());
            set => _dynatraceBrowserMonitors = value;
        }

        [Input("dynatraceCalculatedMobileMetrics")]
        private InputList<string>? _dynatraceCalculatedMobileMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedMobileMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCalculatedMobileMetrics
        {
            get => _dynatraceCalculatedMobileMetrics ?? (_dynatraceCalculatedMobileMetrics = new InputList<string>());
            set => _dynatraceCalculatedMobileMetrics = value;
        }

        [Input("dynatraceCalculatedServiceMetrics")]
        private InputList<string>? _dynatraceCalculatedServiceMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedServiceMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCalculatedServiceMetrics
        {
            get => _dynatraceCalculatedServiceMetrics ?? (_dynatraceCalculatedServiceMetrics = new InputList<string>());
            set => _dynatraceCalculatedServiceMetrics = value;
        }

        [Input("dynatraceCalculatedSyntheticMetrics")]
        private InputList<string>? _dynatraceCalculatedSyntheticMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedSyntheticMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCalculatedSyntheticMetrics
        {
            get => _dynatraceCalculatedSyntheticMetrics ?? (_dynatraceCalculatedSyntheticMetrics = new InputList<string>());
            set => _dynatraceCalculatedSyntheticMetrics = value;
        }

        [Input("dynatraceCalculatedWebMetrics")]
        private InputList<string>? _dynatraceCalculatedWebMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CalculatedWebMetric` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCalculatedWebMetrics
        {
            get => _dynatraceCalculatedWebMetrics ?? (_dynatraceCalculatedWebMetrics = new InputList<string>());
            set => _dynatraceCalculatedWebMetrics = value;
        }

        [Input("dynatraceCredentials")]
        private InputList<string>? _dynatraceCredentials;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Credentials` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCredentials
        {
            get => _dynatraceCredentials ?? (_dynatraceCredentials = new InputList<string>());
            set => _dynatraceCredentials = value;
        }

        [Input("dynatraceCustomAppAnomalies")]
        private InputList<string>? _dynatraceCustomAppAnomalies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCustomAppAnomalies
        {
            get => _dynatraceCustomAppAnomalies ?? (_dynatraceCustomAppAnomalies = new InputList<string>());
            set => _dynatraceCustomAppAnomalies = value;
        }

        [Input("dynatraceCustomAppCrashRates")]
        private InputList<string>? _dynatraceCustomAppCrashRates;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppCrashRate` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCustomAppCrashRates
        {
            get => _dynatraceCustomAppCrashRates ?? (_dynatraceCustomAppCrashRates = new InputList<string>());
            set => _dynatraceCustomAppCrashRates = value;
        }

        [Input("dynatraceCustomAppEnablements")]
        private InputList<string>? _dynatraceCustomAppEnablements;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCustomAppEnablements
        {
            get => _dynatraceCustomAppEnablements ?? (_dynatraceCustomAppEnablements = new InputList<string>());
            set => _dynatraceCustomAppEnablements = value;
        }

        [Input("dynatraceCustomServices")]
        private InputList<string>? _dynatraceCustomServices;

        /// <summary>
        /// The IDs for resource of type `dynatrace.CustomService` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceCustomServices
        {
            get => _dynatraceCustomServices ?? (_dynatraceCustomServices = new InputList<string>());
            set => _dynatraceCustomServices = value;
        }

        [Input("dynatraceDataPrivacies")]
        private InputList<string>? _dynatraceDataPrivacies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DataPrivacy` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDataPrivacies
        {
            get => _dynatraceDataPrivacies ?? (_dynatraceDataPrivacies = new InputList<string>());
            set => _dynatraceDataPrivacies = value;
        }

        [Input("dynatraceDatabaseAnomaliesV2s")]
        private InputList<string>? _dynatraceDatabaseAnomaliesV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DatabaseAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDatabaseAnomaliesV2s
        {
            get => _dynatraceDatabaseAnomaliesV2s ?? (_dynatraceDatabaseAnomaliesV2s = new InputList<string>());
            set => _dynatraceDatabaseAnomaliesV2s = value;
        }

        [Input("dynatraceDeclarativeGroupings")]
        private InputList<string>? _dynatraceDeclarativeGroupings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DeclarativeGrouping` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDeclarativeGroupings
        {
            get => _dynatraceDeclarativeGroupings ?? (_dynatraceDeclarativeGroupings = new InputList<string>());
            set => _dynatraceDeclarativeGroupings = value;
        }

        [Input("dynatraceDiskAnomaliesV2s")]
        private InputList<string>? _dynatraceDiskAnomaliesV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDiskAnomaliesV2s
        {
            get => _dynatraceDiskAnomaliesV2s ?? (_dynatraceDiskAnomaliesV2s = new InputList<string>());
            set => _dynatraceDiskAnomaliesV2s = value;
        }

        [Input("dynatraceDiskOptions")]
        private InputList<string>? _dynatraceDiskOptions;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskOptions` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDiskOptions
        {
            get => _dynatraceDiskOptions ?? (_dynatraceDiskOptions = new InputList<string>());
            set => _dynatraceDiskOptions = value;
        }

        [Input("dynatraceDiskSpecificAnomaliesV2s")]
        private InputList<string>? _dynatraceDiskSpecificAnomaliesV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.DiskSpecificAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceDiskSpecificAnomaliesV2s
        {
            get => _dynatraceDiskSpecificAnomaliesV2s ?? (_dynatraceDiskSpecificAnomaliesV2s = new InputList<string>());
            set => _dynatraceDiskSpecificAnomaliesV2s = value;
        }

        [Input("dynatraceEmailNotifications")]
        private InputList<string>? _dynatraceEmailNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.EmailNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceEmailNotifications
        {
            get => _dynatraceEmailNotifications ?? (_dynatraceEmailNotifications = new InputList<string>());
            set => _dynatraceEmailNotifications = value;
        }

        [Input("dynatraceExtensionExecutionControllers")]
        private InputList<string>? _dynatraceExtensionExecutionControllers;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ExtensionExecutionController` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceExtensionExecutionControllers
        {
            get => _dynatraceExtensionExecutionControllers ?? (_dynatraceExtensionExecutionControllers = new InputList<string>());
            set => _dynatraceExtensionExecutionControllers = value;
        }

        [Input("dynatraceGenericTypes")]
        private InputList<string>? _dynatraceGenericTypes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.GenericTypes` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceGenericTypes
        {
            get => _dynatraceGenericTypes ?? (_dynatraceGenericTypes = new InputList<string>());
            set => _dynatraceGenericTypes = value;
        }

        [Input("dynatraceHostAnomaliesV2s")]
        private InputList<string>? _dynatraceHostAnomaliesV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostAnomaliesV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceHostAnomaliesV2s
        {
            get => _dynatraceHostAnomaliesV2s ?? (_dynatraceHostAnomaliesV2s = new InputList<string>());
            set => _dynatraceHostAnomaliesV2s = value;
        }

        [Input("dynatraceHostNamings")]
        private InputList<string>? _dynatraceHostNamings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceHostNamings
        {
            get => _dynatraceHostNamings ?? (_dynatraceHostNamings = new InputList<string>());
            set => _dynatraceHostNamings = value;
        }

        [Input("dynatraceHostProcessGroupMonitorings")]
        private InputList<string>? _dynatraceHostProcessGroupMonitorings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HostProcessGroupMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceHostProcessGroupMonitorings
        {
            get => _dynatraceHostProcessGroupMonitorings ?? (_dynatraceHostProcessGroupMonitorings = new InputList<string>());
            set => _dynatraceHostProcessGroupMonitorings = value;
        }

        [Input("dynatraceHttpMonitors")]
        private InputList<string>? _dynatraceHttpMonitors;

        /// <summary>
        /// The IDs for resource of type `dynatrace.HttpMonitor` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceHttpMonitors
        {
            get => _dynatraceHttpMonitors ?? (_dynatraceHttpMonitors = new InputList<string>());
            set => _dynatraceHttpMonitors = value;
        }

        [Input("dynatraceImsBridges")]
        private InputList<string>? _dynatraceImsBridges;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ImsBridges` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceImsBridges
        {
            get => _dynatraceImsBridges ?? (_dynatraceImsBridges = new InputList<string>());
            set => _dynatraceImsBridges = value;
        }

        [Input("dynatraceJiraNotifications")]
        private InputList<string>? _dynatraceJiraNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.JiraNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceJiraNotifications
        {
            get => _dynatraceJiraNotifications ?? (_dynatraceJiraNotifications = new InputList<string>());
            set => _dynatraceJiraNotifications = value;
        }

        [Input("dynatraceK8sNamespaceAnomalies")]
        private InputList<string>? _dynatraceK8sNamespaceAnomalies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.K8sNamespaceAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceK8sNamespaceAnomalies
        {
            get => _dynatraceK8sNamespaceAnomalies ?? (_dynatraceK8sNamespaceAnomalies = new InputList<string>());
            set => _dynatraceK8sNamespaceAnomalies = value;
        }

        [Input("dynatraceKeyRequests")]
        private InputList<string>? _dynatraceKeyRequests;

        /// <summary>
        /// The IDs for resource of type `dynatrace.KeyRequests` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceKeyRequests
        {
            get => _dynatraceKeyRequests ?? (_dynatraceKeyRequests = new InputList<string>());
            set => _dynatraceKeyRequests = value;
        }

        [Input("dynatraceLogMetrics")]
        private InputList<string>? _dynatraceLogMetrics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.LogMetrics` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceLogMetrics
        {
            get => _dynatraceLogMetrics ?? (_dynatraceLogMetrics = new InputList<string>());
            set => _dynatraceLogMetrics = value;
        }

        [Input("dynatraceMaintenances")]
        private InputList<string>? _dynatraceMaintenances;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Maintenance` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMaintenances
        {
            get => _dynatraceMaintenances ?? (_dynatraceMaintenances = new InputList<string>());
            set => _dynatraceMaintenances = value;
        }

        [Input("dynatraceManagementZoneV2s")]
        private InputList<string>? _dynatraceManagementZoneV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ManagementZoneV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceManagementZoneV2s
        {
            get => _dynatraceManagementZoneV2s ?? (_dynatraceManagementZoneV2s = new InputList<string>());
            set => _dynatraceManagementZoneV2s = value;
        }

        [Input("dynatraceMetricEvents")]
        private InputList<string>? _dynatraceMetricEvents;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MetricEvents` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMetricEvents
        {
            get => _dynatraceMetricEvents ?? (_dynatraceMetricEvents = new InputList<string>());
            set => _dynatraceMetricEvents = value;
        }

        [Input("dynatraceMobileAppAnomalies")]
        private InputList<string>? _dynatraceMobileAppAnomalies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMobileAppAnomalies
        {
            get => _dynatraceMobileAppAnomalies ?? (_dynatraceMobileAppAnomalies = new InputList<string>());
            set => _dynatraceMobileAppAnomalies = value;
        }

        [Input("dynatraceMobileAppCrashRates")]
        private InputList<string>? _dynatraceMobileAppCrashRates;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppCrashRate` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMobileAppCrashRates
        {
            get => _dynatraceMobileAppCrashRates ?? (_dynatraceMobileAppCrashRates = new InputList<string>());
            set => _dynatraceMobileAppCrashRates = value;
        }

        [Input("dynatraceMobileAppEnablements")]
        private InputList<string>? _dynatraceMobileAppEnablements;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMobileAppEnablements
        {
            get => _dynatraceMobileAppEnablements ?? (_dynatraceMobileAppEnablements = new InputList<string>());
            set => _dynatraceMobileAppEnablements = value;
        }

        [Input("dynatraceMobileApplications")]
        private InputList<string>? _dynatraceMobileApplications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MobileApplication` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMobileApplications
        {
            get => _dynatraceMobileApplications ?? (_dynatraceMobileApplications = new InputList<string>());
            set => _dynatraceMobileApplications = value;
        }

        [Input("dynatraceMonitoredTechnologiesApaches")]
        private InputList<string>? _dynatraceMonitoredTechnologiesApaches;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesApache` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesApaches
        {
            get => _dynatraceMonitoredTechnologiesApaches ?? (_dynatraceMonitoredTechnologiesApaches = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesApaches = value;
        }

        [Input("dynatraceMonitoredTechnologiesDotnets")]
        private InputList<string>? _dynatraceMonitoredTechnologiesDotnets;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesDotnet` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesDotnets
        {
            get => _dynatraceMonitoredTechnologiesDotnets ?? (_dynatraceMonitoredTechnologiesDotnets = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesDotnets = value;
        }

        [Input("dynatraceMonitoredTechnologiesGos")]
        private InputList<string>? _dynatraceMonitoredTechnologiesGos;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesGo` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesGos
        {
            get => _dynatraceMonitoredTechnologiesGos ?? (_dynatraceMonitoredTechnologiesGos = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesGos = value;
        }

        [Input("dynatraceMonitoredTechnologiesIis")]
        private InputList<string>? _dynatraceMonitoredTechnologiesIis;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesIis` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesIis
        {
            get => _dynatraceMonitoredTechnologiesIis ?? (_dynatraceMonitoredTechnologiesIis = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesIis = value;
        }

        [Input("dynatraceMonitoredTechnologiesJavas")]
        private InputList<string>? _dynatraceMonitoredTechnologiesJavas;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesJava` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesJavas
        {
            get => _dynatraceMonitoredTechnologiesJavas ?? (_dynatraceMonitoredTechnologiesJavas = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesJavas = value;
        }

        [Input("dynatraceMonitoredTechnologiesNginxes")]
        private InputList<string>? _dynatraceMonitoredTechnologiesNginxes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesNginx` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesNginxes
        {
            get => _dynatraceMonitoredTechnologiesNginxes ?? (_dynatraceMonitoredTechnologiesNginxes = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesNginxes = value;
        }

        [Input("dynatraceMonitoredTechnologiesNodejs")]
        private InputList<string>? _dynatraceMonitoredTechnologiesNodejs;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesNodejs` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesNodejs
        {
            get => _dynatraceMonitoredTechnologiesNodejs ?? (_dynatraceMonitoredTechnologiesNodejs = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesNodejs = value;
        }

        [Input("dynatraceMonitoredTechnologiesOpentracings")]
        private InputList<string>? _dynatraceMonitoredTechnologiesOpentracings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesOpentracing` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesOpentracings
        {
            get => _dynatraceMonitoredTechnologiesOpentracings ?? (_dynatraceMonitoredTechnologiesOpentracings = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesOpentracings = value;
        }

        [Input("dynatraceMonitoredTechnologiesPhps")]
        private InputList<string>? _dynatraceMonitoredTechnologiesPhps;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesPhp` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesPhps
        {
            get => _dynatraceMonitoredTechnologiesPhps ?? (_dynatraceMonitoredTechnologiesPhps = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesPhps = value;
        }

        [Input("dynatraceMonitoredTechnologiesVarnishes")]
        private InputList<string>? _dynatraceMonitoredTechnologiesVarnishes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesVarnish` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesVarnishes
        {
            get => _dynatraceMonitoredTechnologiesVarnishes ?? (_dynatraceMonitoredTechnologiesVarnishes = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesVarnishes = value;
        }

        [Input("dynatraceMonitoredTechnologiesWsmbs")]
        private InputList<string>? _dynatraceMonitoredTechnologiesWsmbs;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MonitoredTechnologiesWsmb` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMonitoredTechnologiesWsmbs
        {
            get => _dynatraceMonitoredTechnologiesWsmbs ?? (_dynatraceMonitoredTechnologiesWsmbs = new InputList<string>());
            set => _dynatraceMonitoredTechnologiesWsmbs = value;
        }

        [Input("dynatraceMutedRequests")]
        private InputList<string>? _dynatraceMutedRequests;

        /// <summary>
        /// The IDs for resource of type `dynatrace.MutedRequests` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceMutedRequests
        {
            get => _dynatraceMutedRequests ?? (_dynatraceMutedRequests = new InputList<string>());
            set => _dynatraceMutedRequests = value;
        }

        [Input("dynatraceNettracers")]
        private InputList<string>? _dynatraceNettracers;

        /// <summary>
        /// The IDs for resource of type `dynatrace.Nettracer` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceNettracers
        {
            get => _dynatraceNettracers ?? (_dynatraceNettracers = new InputList<string>());
            set => _dynatraceNettracers = value;
        }

        [Input("dynatraceOneagentFeatures")]
        private InputList<string>? _dynatraceOneagentFeatures;

        /// <summary>
        /// The IDs for resource of type `dynatrace.OneagentFeatures` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceOneagentFeatures
        {
            get => _dynatraceOneagentFeatures ?? (_dynatraceOneagentFeatures = new InputList<string>());
            set => _dynatraceOneagentFeatures = value;
        }

        [Input("dynatraceOpsGenieNotifications")]
        private InputList<string>? _dynatraceOpsGenieNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.OpsGenieNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceOpsGenieNotifications
        {
            get => _dynatraceOpsGenieNotifications ?? (_dynatraceOpsGenieNotifications = new InputList<string>());
            set => _dynatraceOpsGenieNotifications = value;
        }

        [Input("dynatracePagerDutyNotifications")]
        private InputList<string>? _dynatracePagerDutyNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.PagerDutyNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatracePagerDutyNotifications
        {
            get => _dynatracePagerDutyNotifications ?? (_dynatracePagerDutyNotifications = new InputList<string>());
            set => _dynatracePagerDutyNotifications = value;
        }

        [Input("dynatracePgAlertings")]
        private InputList<string>? _dynatracePgAlertings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.PgAlerting` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatracePgAlertings
        {
            get => _dynatracePgAlertings ?? (_dynatracePgAlertings = new InputList<string>());
            set => _dynatracePgAlertings = value;
        }

        [Input("dynatraceProcessAvailabilities")]
        private InputList<string>? _dynatraceProcessAvailabilities;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessAvailability` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessAvailabilities
        {
            get => _dynatraceProcessAvailabilities ?? (_dynatraceProcessAvailabilities = new InputList<string>());
            set => _dynatraceProcessAvailabilities = value;
        }

        [Input("dynatraceProcessGroupDetectionFlags")]
        private InputList<string>? _dynatraceProcessGroupDetectionFlags;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupDetectionFlags` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupDetectionFlags
        {
            get => _dynatraceProcessGroupDetectionFlags ?? (_dynatraceProcessGroupDetectionFlags = new InputList<string>());
            set => _dynatraceProcessGroupDetectionFlags = value;
        }

        [Input("dynatraceProcessGroupDetections")]
        private InputList<string>? _dynatraceProcessGroupDetections;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupDetection` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupDetections
        {
            get => _dynatraceProcessGroupDetections ?? (_dynatraceProcessGroupDetections = new InputList<string>());
            set => _dynatraceProcessGroupDetections = value;
        }

        [Input("dynatraceProcessGroupMonitorings")]
        private InputList<string>? _dynatraceProcessGroupMonitorings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupMonitorings
        {
            get => _dynatraceProcessGroupMonitorings ?? (_dynatraceProcessGroupMonitorings = new InputList<string>());
            set => _dynatraceProcessGroupMonitorings = value;
        }

        [Input("dynatraceProcessGroupRums")]
        private InputList<string>? _dynatraceProcessGroupRums;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupRum` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupRums
        {
            get => _dynatraceProcessGroupRums ?? (_dynatraceProcessGroupRums = new InputList<string>());
            set => _dynatraceProcessGroupRums = value;
        }

        [Input("dynatraceProcessGroupSimpleDetections")]
        private InputList<string>? _dynatraceProcessGroupSimpleDetections;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessGroupSimpleDetection` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessGroupSimpleDetections
        {
            get => _dynatraceProcessGroupSimpleDetections ?? (_dynatraceProcessGroupSimpleDetections = new InputList<string>());
            set => _dynatraceProcessGroupSimpleDetections = value;
        }

        [Input("dynatraceProcessMonitoringRules")]
        private InputList<string>? _dynatraceProcessMonitoringRules;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessMonitoringRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessMonitoringRules
        {
            get => _dynatraceProcessMonitoringRules ?? (_dynatraceProcessMonitoringRules = new InputList<string>());
            set => _dynatraceProcessMonitoringRules = value;
        }

        [Input("dynatraceProcessMonitorings")]
        private InputList<string>? _dynatraceProcessMonitorings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessMonitoring` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessMonitorings
        {
            get => _dynatraceProcessMonitorings ?? (_dynatraceProcessMonitorings = new InputList<string>());
            set => _dynatraceProcessMonitorings = value;
        }

        [Input("dynatraceProcessVisibilities")]
        private InputList<string>? _dynatraceProcessVisibilities;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessVisibility` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessVisibilities
        {
            get => _dynatraceProcessVisibilities ?? (_dynatraceProcessVisibilities = new InputList<string>());
            set => _dynatraceProcessVisibilities = value;
        }

        [Input("dynatraceProcessgroupNamings")]
        private InputList<string>? _dynatraceProcessgroupNamings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ProcessgroupNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceProcessgroupNamings
        {
            get => _dynatraceProcessgroupNamings ?? (_dynatraceProcessgroupNamings = new InputList<string>());
            set => _dynatraceProcessgroupNamings = value;
        }

        [Input("dynatraceQueueManagers")]
        private InputList<string>? _dynatraceQueueManagers;

        /// <summary>
        /// The IDs for resource of type `dynatrace.QueueManager` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceQueueManagers
        {
            get => _dynatraceQueueManagers ?? (_dynatraceQueueManagers = new InputList<string>());
            set => _dynatraceQueueManagers = value;
        }

        [Input("dynatraceQueueSharingGroups")]
        private InputList<string>? _dynatraceQueueSharingGroups;

        /// <summary>
        /// The IDs for resource of type `dynatrace.QueueSharingGroups` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceQueueSharingGroups
        {
            get => _dynatraceQueueSharingGroups ?? (_dynatraceQueueSharingGroups = new InputList<string>());
            set => _dynatraceQueueSharingGroups = value;
        }

        [Input("dynatraceRequestAttributes")]
        private InputList<string>? _dynatraceRequestAttributes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RequestAttribute` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRequestAttributes
        {
            get => _dynatraceRequestAttributes ?? (_dynatraceRequestAttributes = new InputList<string>());
            set => _dynatraceRequestAttributes = value;
        }

        [Input("dynatraceRequestNamings")]
        private InputList<string>? _dynatraceRequestNamings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RequestNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRequestNamings
        {
            get => _dynatraceRequestNamings ?? (_dynatraceRequestNamings = new InputList<string>());
            set => _dynatraceRequestNamings = value;
        }

        [Input("dynatraceRumAdvancedCorrelations")]
        private InputList<string>? _dynatraceRumAdvancedCorrelations;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumAdvancedCorrelation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRumAdvancedCorrelations
        {
            get => _dynatraceRumAdvancedCorrelations ?? (_dynatraceRumAdvancedCorrelations = new InputList<string>());
            set => _dynatraceRumAdvancedCorrelations = value;
        }

        [Input("dynatraceRumIpLocations")]
        private InputList<string>? _dynatraceRumIpLocations;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumIpLocations` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRumIpLocations
        {
            get => _dynatraceRumIpLocations ?? (_dynatraceRumIpLocations = new InputList<string>());
            set => _dynatraceRumIpLocations = value;
        }

        [Input("dynatraceRumProviderBreakdowns")]
        private InputList<string>? _dynatraceRumProviderBreakdowns;

        /// <summary>
        /// The IDs for resource of type `dynatrace.RumProviderBreakdown` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceRumProviderBreakdowns
        {
            get => _dynatraceRumProviderBreakdowns ?? (_dynatraceRumProviderBreakdowns = new InputList<string>());
            set => _dynatraceRumProviderBreakdowns = value;
        }

        [Input("dynatraceServiceFailures")]
        private InputList<string>? _dynatraceServiceFailures;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceFailure` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceServiceFailures
        {
            get => _dynatraceServiceFailures ?? (_dynatraceServiceFailures = new InputList<string>());
            set => _dynatraceServiceFailures = value;
        }

        [Input("dynatraceServiceHttpFailures")]
        private InputList<string>? _dynatraceServiceHttpFailures;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceHttpFailure` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceServiceHttpFailures
        {
            get => _dynatraceServiceHttpFailures ?? (_dynatraceServiceHttpFailures = new InputList<string>());
            set => _dynatraceServiceHttpFailures = value;
        }

        [Input("dynatraceServiceNamings")]
        private InputList<string>? _dynatraceServiceNamings;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceNaming` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceServiceNamings
        {
            get => _dynatraceServiceNamings ?? (_dynatraceServiceNamings = new InputList<string>());
            set => _dynatraceServiceNamings = value;
        }

        [Input("dynatraceServiceNowNotifications")]
        private InputList<string>? _dynatraceServiceNowNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.ServiceNowNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceServiceNowNotifications
        {
            get => _dynatraceServiceNowNotifications ?? (_dynatraceServiceNowNotifications = new InputList<string>());
            set => _dynatraceServiceNowNotifications = value;
        }

        [Input("dynatraceSessionReplayWebPrivacies")]
        private InputList<string>? _dynatraceSessionReplayWebPrivacies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SessionReplayWebPrivacy` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSessionReplayWebPrivacies
        {
            get => _dynatraceSessionReplayWebPrivacies ?? (_dynatraceSessionReplayWebPrivacies = new InputList<string>());
            set => _dynatraceSessionReplayWebPrivacies = value;
        }

        [Input("dynatraceSlackNotifications")]
        private InputList<string>? _dynatraceSlackNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SlackNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSlackNotifications
        {
            get => _dynatraceSlackNotifications ?? (_dynatraceSlackNotifications = new InputList<string>());
            set => _dynatraceSlackNotifications = value;
        }

        [Input("dynatraceSloV2s")]
        private InputList<string>? _dynatraceSloV2s;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SloV2` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSloV2s
        {
            get => _dynatraceSloV2s ?? (_dynatraceSloV2s = new InputList<string>());
            set => _dynatraceSloV2s = value;
        }

        [Input("dynatraceSpanCaptureRules")]
        private InputList<string>? _dynatraceSpanCaptureRules;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SpanCaptureRule` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSpanCaptureRules
        {
            get => _dynatraceSpanCaptureRules ?? (_dynatraceSpanCaptureRules = new InputList<string>());
            set => _dynatraceSpanCaptureRules = value;
        }

        [Input("dynatraceSpanContextPropagations")]
        private InputList<string>? _dynatraceSpanContextPropagations;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SpanContextPropagation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSpanContextPropagations
        {
            get => _dynatraceSpanContextPropagations ?? (_dynatraceSpanContextPropagations = new InputList<string>());
            set => _dynatraceSpanContextPropagations = value;
        }

        [Input("dynatraceSyntheticLocations")]
        private InputList<string>? _dynatraceSyntheticLocations;

        /// <summary>
        /// The IDs for resource of type `dynatrace.SyntheticLocation` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceSyntheticLocations
        {
            get => _dynatraceSyntheticLocations ?? (_dynatraceSyntheticLocations = new InputList<string>());
            set => _dynatraceSyntheticLocations = value;
        }

        [Input("dynatraceTrelloNotifications")]
        private InputList<string>? _dynatraceTrelloNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.TrelloNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceTrelloNotifications
        {
            get => _dynatraceTrelloNotifications ?? (_dynatraceTrelloNotifications = new InputList<string>());
            set => _dynatraceTrelloNotifications = value;
        }

        [Input("dynatraceUpdateWindows")]
        private InputList<string>? _dynatraceUpdateWindows;

        /// <summary>
        /// The IDs for resource of type `dynatrace.UpdateWindows` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceUpdateWindows
        {
            get => _dynatraceUpdateWindows ?? (_dynatraceUpdateWindows = new InputList<string>());
            set => _dynatraceUpdateWindows = value;
        }

        [Input("dynatraceUsabilityAnalytics")]
        private InputList<string>? _dynatraceUsabilityAnalytics;

        /// <summary>
        /// The IDs for resource of type `dynatrace.UsabilityAnalytics` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceUsabilityAnalytics
        {
            get => _dynatraceUsabilityAnalytics ?? (_dynatraceUsabilityAnalytics = new InputList<string>());
            set => _dynatraceUsabilityAnalytics = value;
        }

        [Input("dynatraceVictorOpsNotifications")]
        private InputList<string>? _dynatraceVictorOpsNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.VictorOpsNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceVictorOpsNotifications
        {
            get => _dynatraceVictorOpsNotifications ?? (_dynatraceVictorOpsNotifications = new InputList<string>());
            set => _dynatraceVictorOpsNotifications = value;
        }

        [Input("dynatraceWebAppAnomalies")]
        private InputList<string>? _dynatraceWebAppAnomalies;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppAnomalies` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppAnomalies
        {
            get => _dynatraceWebAppAnomalies ?? (_dynatraceWebAppAnomalies = new InputList<string>());
            set => _dynatraceWebAppAnomalies = value;
        }

        [Input("dynatraceWebAppBeaconOrigins")]
        private InputList<string>? _dynatraceWebAppBeaconOrigins;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppBeaconOrigins` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppBeaconOrigins
        {
            get => _dynatraceWebAppBeaconOrigins ?? (_dynatraceWebAppBeaconOrigins = new InputList<string>());
            set => _dynatraceWebAppBeaconOrigins = value;
        }

        [Input("dynatraceWebAppEnablements")]
        private InputList<string>? _dynatraceWebAppEnablements;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppEnablement` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppEnablements
        {
            get => _dynatraceWebAppEnablements ?? (_dynatraceWebAppEnablements = new InputList<string>());
            set => _dynatraceWebAppEnablements = value;
        }

        [Input("dynatraceWebAppResourceCleanups")]
        private InputList<string>? _dynatraceWebAppResourceCleanups;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppResourceCleanup` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppResourceCleanups
        {
            get => _dynatraceWebAppResourceCleanups ?? (_dynatraceWebAppResourceCleanups = new InputList<string>());
            set => _dynatraceWebAppResourceCleanups = value;
        }

        [Input("dynatraceWebAppResourceTypes")]
        private InputList<string>? _dynatraceWebAppResourceTypes;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebAppResourceTypes` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebAppResourceTypes
        {
            get => _dynatraceWebAppResourceTypes ?? (_dynatraceWebAppResourceTypes = new InputList<string>());
            set => _dynatraceWebAppResourceTypes = value;
        }

        [Input("dynatraceWebApplications")]
        private InputList<string>? _dynatraceWebApplications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebApplication` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebApplications
        {
            get => _dynatraceWebApplications ?? (_dynatraceWebApplications = new InputList<string>());
            set => _dynatraceWebApplications = value;
        }

        [Input("dynatraceWebhookNotifications")]
        private InputList<string>? _dynatraceWebhookNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.WebhookNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceWebhookNotifications
        {
            get => _dynatraceWebhookNotifications ?? (_dynatraceWebhookNotifications = new InputList<string>());
            set => _dynatraceWebhookNotifications = value;
        }

        [Input("dynatraceXmattersNotifications")]
        private InputList<string>? _dynatraceXmattersNotifications;

        /// <summary>
        /// The IDs for resource of type `dynatrace.XmattersNotification` this `dynatrace.GoldenState` should ignore (and therefore neither warn about their existence nor attempt to delete them). Specify `[]` if you expect no such resources to exist in Dynatrace. Omit this attribute if you don't care about these kinds of resources regarding the golden state of the environment.
        /// </summary>
        public InputList<string> DynatraceXmattersNotifications
        {
            get => _dynatraceXmattersNotifications ?? (_dynatraceXmattersNotifications = new InputList<string>());
            set => _dynatraceXmattersNotifications = value;
        }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        public GoldenStateState()
        {
        }
        public static new GoldenStateState Empty => new GoldenStateState();
    }
}
