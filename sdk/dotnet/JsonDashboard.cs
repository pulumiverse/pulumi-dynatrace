// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/jsonDashboard:JsonDashboard")]
    public partial class JsonDashboard : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Contains the JSON Code of the Dashboard
        /// </summary>
        [Output("contents")]
        public Output<string> Contents { get; private set; } = null!;

        /// <summary>
        /// ID of the dashboard, used with the json*dashboard*base resource and variables to create circular dependencies between dashboards for hyperlinks. See the documentation for `dynatrace.JsonDashboardBase` for a concrete example.
        /// </summary>
        [Output("linkId")]
        public Output<string> LinkId { get; private set; } = null!;


        /// <summary>
        /// Create a JsonDashboard resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public JsonDashboard(string name, JsonDashboardArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/jsonDashboard:JsonDashboard", name, args ?? new JsonDashboardArgs(), MakeResourceOptions(options, ""))
        {
        }

        private JsonDashboard(string name, Input<string> id, JsonDashboardState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/jsonDashboard:JsonDashboard", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing JsonDashboard resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static JsonDashboard Get(string name, Input<string> id, JsonDashboardState? state = null, CustomResourceOptions? options = null)
        {
            return new JsonDashboard(name, id, state, options);
        }
    }

    public sealed class JsonDashboardArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contains the JSON Code of the Dashboard
        /// </summary>
        [Input("contents", required: true)]
        public Input<string> Contents { get; set; } = null!;

        /// <summary>
        /// ID of the dashboard, used with the json*dashboard*base resource and variables to create circular dependencies between dashboards for hyperlinks. See the documentation for `dynatrace.JsonDashboardBase` for a concrete example.
        /// </summary>
        [Input("linkId")]
        public Input<string>? LinkId { get; set; }

        public JsonDashboardArgs()
        {
        }
        public static new JsonDashboardArgs Empty => new JsonDashboardArgs();
    }

    public sealed class JsonDashboardState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Contains the JSON Code of the Dashboard
        /// </summary>
        [Input("contents")]
        public Input<string>? Contents { get; set; }

        /// <summary>
        /// ID of the dashboard, used with the json*dashboard*base resource and variables to create circular dependencies between dashboards for hyperlinks. See the documentation for `dynatrace.JsonDashboardBase` for a concrete example.
        /// </summary>
        [Input("linkId")]
        public Input<string>? LinkId { get; set; }

        public JsonDashboardState()
        {
        }
        public static new JsonDashboardState Empty => new JsonDashboardState();
    }
}
