// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/ebpfServiceDiscovery:EbpfServiceDiscovery")]
    public partial class EbpfServiceDiscovery : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When disabled, Dynatrace can only detect services in Full stack mode.
        /// </summary>
        [Output("ebpf")]
        public Output<bool> Ebpf { get; private set; } = null!;

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;


        /// <summary>
        /// Create a EbpfServiceDiscovery resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EbpfServiceDiscovery(string name, EbpfServiceDiscoveryArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/ebpfServiceDiscovery:EbpfServiceDiscovery", name, args ?? new EbpfServiceDiscoveryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EbpfServiceDiscovery(string name, Input<string> id, EbpfServiceDiscoveryState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/ebpfServiceDiscovery:EbpfServiceDiscovery", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EbpfServiceDiscovery resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EbpfServiceDiscovery Get(string name, Input<string> id, EbpfServiceDiscoveryState? state = null, CustomResourceOptions? options = null)
        {
            return new EbpfServiceDiscovery(name, id, state, options);
        }
    }

    public sealed class EbpfServiceDiscoveryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When disabled, Dynatrace can only detect services in Full stack mode.
        /// </summary>
        [Input("ebpf", required: true)]
        public Input<bool> Ebpf { get; set; } = null!;

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public EbpfServiceDiscoveryArgs()
        {
        }
        public static new EbpfServiceDiscoveryArgs Empty => new EbpfServiceDiscoveryArgs();
    }

    public sealed class EbpfServiceDiscoveryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When disabled, Dynatrace can only detect services in Full stack mode.
        /// </summary>
        [Input("ebpf")]
        public Input<bool>? Ebpf { get; set; }

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public EbpfServiceDiscoveryState()
        {
        }
        public static new EbpfServiceDiscoveryState Empty => new EbpfServiceDiscoveryState();
    }
}
