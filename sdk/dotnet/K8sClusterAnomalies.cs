// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/k8sClusterAnomalies:K8sClusterAnomalies")]
    public partial class K8sClusterAnomalies : global::Pulumi.CustomResource
    {
        /// <summary>
        /// no documentation available
        /// </summary>
        [Output("cpuRequestsSaturation")]
        public Output<Outputs.K8sClusterAnomaliesCpuRequestsSaturation> CpuRequestsSaturation { get; private set; } = null!;

        /// <summary>
        /// no documentation available
        /// </summary>
        [Output("memoryRequestsSaturation")]
        public Output<Outputs.K8sClusterAnomaliesMemoryRequestsSaturation> MemoryRequestsSaturation { get; private set; } = null!;

        /// <summary>
        /// no documentation available
        /// </summary>
        [Output("monitoringIssues")]
        public Output<Outputs.K8sClusterAnomaliesMonitoringIssues> MonitoringIssues { get; private set; } = null!;

        /// <summary>
        /// no documentation available
        /// </summary>
        [Output("podsSaturation")]
        public Output<Outputs.K8sClusterAnomaliesPodsSaturation> PodsSaturation { get; private set; } = null!;

        /// <summary>
        /// Alerts if cluster has not been ready for a given amount of time
        /// </summary>
        [Output("readinessIssues")]
        public Output<Outputs.K8sClusterAnomaliesReadinessIssues> ReadinessIssues { get; private set; } = null!;

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;


        /// <summary>
        /// Create a K8sClusterAnomalies resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public K8sClusterAnomalies(string name, K8sClusterAnomaliesArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/k8sClusterAnomalies:K8sClusterAnomalies", name, args ?? new K8sClusterAnomaliesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private K8sClusterAnomalies(string name, Input<string> id, K8sClusterAnomaliesState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/k8sClusterAnomalies:K8sClusterAnomalies", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing K8sClusterAnomalies resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static K8sClusterAnomalies Get(string name, Input<string> id, K8sClusterAnomaliesState? state = null, CustomResourceOptions? options = null)
        {
            return new K8sClusterAnomalies(name, id, state, options);
        }
    }

    public sealed class K8sClusterAnomaliesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("cpuRequestsSaturation", required: true)]
        public Input<Inputs.K8sClusterAnomaliesCpuRequestsSaturationArgs> CpuRequestsSaturation { get; set; } = null!;

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("memoryRequestsSaturation", required: true)]
        public Input<Inputs.K8sClusterAnomaliesMemoryRequestsSaturationArgs> MemoryRequestsSaturation { get; set; } = null!;

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("monitoringIssues", required: true)]
        public Input<Inputs.K8sClusterAnomaliesMonitoringIssuesArgs> MonitoringIssues { get; set; } = null!;

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("podsSaturation", required: true)]
        public Input<Inputs.K8sClusterAnomaliesPodsSaturationArgs> PodsSaturation { get; set; } = null!;

        /// <summary>
        /// Alerts if cluster has not been ready for a given amount of time
        /// </summary>
        [Input("readinessIssues", required: true)]
        public Input<Inputs.K8sClusterAnomaliesReadinessIssuesArgs> ReadinessIssues { get; set; } = null!;

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public K8sClusterAnomaliesArgs()
        {
        }
        public static new K8sClusterAnomaliesArgs Empty => new K8sClusterAnomaliesArgs();
    }

    public sealed class K8sClusterAnomaliesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("cpuRequestsSaturation")]
        public Input<Inputs.K8sClusterAnomaliesCpuRequestsSaturationGetArgs>? CpuRequestsSaturation { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("memoryRequestsSaturation")]
        public Input<Inputs.K8sClusterAnomaliesMemoryRequestsSaturationGetArgs>? MemoryRequestsSaturation { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("monitoringIssues")]
        public Input<Inputs.K8sClusterAnomaliesMonitoringIssuesGetArgs>? MonitoringIssues { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("podsSaturation")]
        public Input<Inputs.K8sClusterAnomaliesPodsSaturationGetArgs>? PodsSaturation { get; set; }

        /// <summary>
        /// Alerts if cluster has not been ready for a given amount of time
        /// </summary>
        [Input("readinessIssues")]
        public Input<Inputs.K8sClusterAnomaliesReadinessIssuesGetArgs>? ReadinessIssues { get; set; }

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public K8sClusterAnomaliesState()
        {
        }
        public static new K8sClusterAnomaliesState Empty => new K8sClusterAnomaliesState();
    }
}
