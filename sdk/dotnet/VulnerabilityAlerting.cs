// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/vulnerabilityAlerting:VulnerabilityAlerting")]
    public partial class VulnerabilityAlerting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Alerting profile is enabled (`True`) or disabled (`False`)
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// List of risk levels to alert
        /// </summary>
        [Output("enabledRiskLevels")]
        public Output<ImmutableArray<string>> EnabledRiskLevels { get; private set; } = null!;

        /// <summary>
        /// List of events to alert
        /// </summary>
        [Output("enabledTriggerEvents")]
        public Output<ImmutableArray<string>> EnabledTriggerEvents { get; private set; } = null!;

        /// <summary>
        /// Alert only if the following management zone is affected (optional)
        /// </summary>
        [Output("managementZone")]
        public Output<string?> ManagementZone { get; private set; } = null!;

        /// <summary>
        /// Alerting profile name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a VulnerabilityAlerting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public VulnerabilityAlerting(string name, VulnerabilityAlertingArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/vulnerabilityAlerting:VulnerabilityAlerting", name, args ?? new VulnerabilityAlertingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private VulnerabilityAlerting(string name, Input<string> id, VulnerabilityAlertingState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/vulnerabilityAlerting:VulnerabilityAlerting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing VulnerabilityAlerting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static VulnerabilityAlerting Get(string name, Input<string> id, VulnerabilityAlertingState? state = null, CustomResourceOptions? options = null)
        {
            return new VulnerabilityAlerting(name, id, state, options);
        }
    }

    public sealed class VulnerabilityAlertingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alerting profile is enabled (`True`) or disabled (`False`)
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        [Input("enabledRiskLevels")]
        private InputList<string>? _enabledRiskLevels;

        /// <summary>
        /// List of risk levels to alert
        /// </summary>
        public InputList<string> EnabledRiskLevels
        {
            get => _enabledRiskLevels ?? (_enabledRiskLevels = new InputList<string>());
            set => _enabledRiskLevels = value;
        }

        [Input("enabledTriggerEvents")]
        private InputList<string>? _enabledTriggerEvents;

        /// <summary>
        /// List of events to alert
        /// </summary>
        public InputList<string> EnabledTriggerEvents
        {
            get => _enabledTriggerEvents ?? (_enabledTriggerEvents = new InputList<string>());
            set => _enabledTriggerEvents = value;
        }

        /// <summary>
        /// Alert only if the following management zone is affected (optional)
        /// </summary>
        [Input("managementZone")]
        public Input<string>? ManagementZone { get; set; }

        /// <summary>
        /// Alerting profile name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public VulnerabilityAlertingArgs()
        {
        }
        public static new VulnerabilityAlertingArgs Empty => new VulnerabilityAlertingArgs();
    }

    public sealed class VulnerabilityAlertingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alerting profile is enabled (`True`) or disabled (`False`)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("enabledRiskLevels")]
        private InputList<string>? _enabledRiskLevels;

        /// <summary>
        /// List of risk levels to alert
        /// </summary>
        public InputList<string> EnabledRiskLevels
        {
            get => _enabledRiskLevels ?? (_enabledRiskLevels = new InputList<string>());
            set => _enabledRiskLevels = value;
        }

        [Input("enabledTriggerEvents")]
        private InputList<string>? _enabledTriggerEvents;

        /// <summary>
        /// List of events to alert
        /// </summary>
        public InputList<string> EnabledTriggerEvents
        {
            get => _enabledTriggerEvents ?? (_enabledTriggerEvents = new InputList<string>());
            set => _enabledTriggerEvents = value;
        }

        /// <summary>
        /// Alert only if the following management zone is affected (optional)
        /// </summary>
        [Input("managementZone")]
        public Input<string>? ManagementZone { get; set; }

        /// <summary>
        /// Alerting profile name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public VulnerabilityAlertingState()
        {
        }
        public static new VulnerabilityAlertingState Empty => new VulnerabilityAlertingState();
    }
}
