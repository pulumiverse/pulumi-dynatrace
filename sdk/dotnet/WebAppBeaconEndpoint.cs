// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/webAppBeaconEndpoint:WebAppBeaconEndpoint")]
    public partial class WebAppBeaconEndpoint : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The scope of this setting
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// You can specify either path segments or an absolute URL.
        /// </summary>
        [Output("url")]
        public Output<string?> Url { get; private set; } = null!;

        /// <summary>
        /// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
        /// </summary>
        [Output("useCors")]
        public Output<bool?> UseCors { get; private set; } = null!;


        /// <summary>
        /// Create a WebAppBeaconEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAppBeaconEndpoint(string name, WebAppBeaconEndpointArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/webAppBeaconEndpoint:WebAppBeaconEndpoint", name, args ?? new WebAppBeaconEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAppBeaconEndpoint(string name, Input<string> id, WebAppBeaconEndpointState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/webAppBeaconEndpoint:WebAppBeaconEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAppBeaconEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAppBeaconEndpoint Get(string name, Input<string> id, WebAppBeaconEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAppBeaconEndpoint(name, id, state, options);
        }
    }

    public sealed class WebAppBeaconEndpointArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this setting
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// You can specify either path segments or an absolute URL.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
        /// </summary>
        [Input("useCors")]
        public Input<bool>? UseCors { get; set; }

        public WebAppBeaconEndpointArgs()
        {
        }
        public static new WebAppBeaconEndpointArgs Empty => new WebAppBeaconEndpointArgs();
    }

    public sealed class WebAppBeaconEndpointState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this setting
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// You can specify either path segments or an absolute URL.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
        /// </summary>
        [Input("useCors")]
        public Input<bool>? UseCors { get; set; }

        public WebAppBeaconEndpointState()
        {
        }
        public static new WebAppBeaconEndpointState Empty => new WebAppBeaconEndpointState();
    }
}
