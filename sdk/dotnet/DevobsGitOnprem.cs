// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/devobsGitOnprem:DevobsGitOnprem")]
    public partial class DevobsGitOnprem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Possible Values: `AzureOnPrem`, `BitbucketOnPrem`, `GithubOnPrem`, `GitlabOnPrem`
        /// </summary>
        [Output("gitProvider")]
        public Output<string> GitProvider { get; private set; } = null!;

        /// <summary>
        /// If turned on, requests to your Gitlab server will have the `credentials` option set to `include`. Otherwise, it will be set to `omit`.
        /// </summary>
        [Output("includeCredentials")]
        public Output<bool?> IncludeCredentials { get; private set; } = null!;

        /// <summary>
        /// An HTTP/HTTPS URL of your server
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a DevobsGitOnprem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DevobsGitOnprem(string name, DevobsGitOnpremArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/devobsGitOnprem:DevobsGitOnprem", name, args ?? new DevobsGitOnpremArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DevobsGitOnprem(string name, Input<string> id, DevobsGitOnpremState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/devobsGitOnprem:DevobsGitOnprem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DevobsGitOnprem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DevobsGitOnprem Get(string name, Input<string> id, DevobsGitOnpremState? state = null, CustomResourceOptions? options = null)
        {
            return new DevobsGitOnprem(name, id, state, options);
        }
    }

    public sealed class DevobsGitOnpremArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Possible Values: `AzureOnPrem`, `BitbucketOnPrem`, `GithubOnPrem`, `GitlabOnPrem`
        /// </summary>
        [Input("gitProvider", required: true)]
        public Input<string> GitProvider { get; set; } = null!;

        /// <summary>
        /// If turned on, requests to your Gitlab server will have the `credentials` option set to `include`. Otherwise, it will be set to `omit`.
        /// </summary>
        [Input("includeCredentials")]
        public Input<bool>? IncludeCredentials { get; set; }

        /// <summary>
        /// An HTTP/HTTPS URL of your server
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public DevobsGitOnpremArgs()
        {
        }
        public static new DevobsGitOnpremArgs Empty => new DevobsGitOnpremArgs();
    }

    public sealed class DevobsGitOnpremState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Possible Values: `AzureOnPrem`, `BitbucketOnPrem`, `GithubOnPrem`, `GitlabOnPrem`
        /// </summary>
        [Input("gitProvider")]
        public Input<string>? GitProvider { get; set; }

        /// <summary>
        /// If turned on, requests to your Gitlab server will have the `credentials` option set to `include`. Otherwise, it will be set to `omit`.
        /// </summary>
        [Input("includeCredentials")]
        public Input<bool>? IncludeCredentials { get; set; }

        /// <summary>
        /// An HTTP/HTTPS URL of your server
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public DevobsGitOnpremState()
        {
        }
        public static new DevobsGitOnpremState Empty => new DevobsGitOnpremState();
    }
}
