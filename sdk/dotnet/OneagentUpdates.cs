// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/oneagentUpdates:OneagentUpdates")]
    public partial class OneagentUpdates : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Maintenance windows
        /// </summary>
        [Output("maintenanceWindows")]
        public Output<Outputs.OneagentUpdatesMaintenanceWindows?> MaintenanceWindows { get; private set; } = null!;

        /// <summary>
        /// Revision
        /// </summary>
        [Output("revision")]
        public Output<string?> Revision { get; private set; } = null!;

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        /// <summary>
        /// Target version
        /// </summary>
        [Output("targetVersion")]
        public Output<string?> TargetVersion { get; private set; } = null!;

        /// <summary>
        /// Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
        /// </summary>
        [Output("updateMode")]
        public Output<string> UpdateMode { get; private set; } = null!;


        /// <summary>
        /// Create a OneagentUpdates resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OneagentUpdates(string name, OneagentUpdatesArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/oneagentUpdates:OneagentUpdates", name, args ?? new OneagentUpdatesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OneagentUpdates(string name, Input<string> id, OneagentUpdatesState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/oneagentUpdates:OneagentUpdates", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OneagentUpdates resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OneagentUpdates Get(string name, Input<string> id, OneagentUpdatesState? state = null, CustomResourceOptions? options = null)
        {
            return new OneagentUpdates(name, id, state, options);
        }
    }

    public sealed class OneagentUpdatesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Maintenance windows
        /// </summary>
        [Input("maintenanceWindows")]
        public Input<Inputs.OneagentUpdatesMaintenanceWindowsArgs>? MaintenanceWindows { get; set; }

        /// <summary>
        /// Revision
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Target version
        /// </summary>
        [Input("targetVersion")]
        public Input<string>? TargetVersion { get; set; }

        /// <summary>
        /// Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
        /// </summary>
        [Input("updateMode", required: true)]
        public Input<string> UpdateMode { get; set; } = null!;

        public OneagentUpdatesArgs()
        {
        }
        public static new OneagentUpdatesArgs Empty => new OneagentUpdatesArgs();
    }

    public sealed class OneagentUpdatesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Maintenance windows
        /// </summary>
        [Input("maintenanceWindows")]
        public Input<Inputs.OneagentUpdatesMaintenanceWindowsGetArgs>? MaintenanceWindows { get; set; }

        /// <summary>
        /// Revision
        /// </summary>
        [Input("revision")]
        public Input<string>? Revision { get; set; }

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Target version
        /// </summary>
        [Input("targetVersion")]
        public Input<string>? TargetVersion { get; set; }

        /// <summary>
        /// Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
        /// </summary>
        [Input("updateMode")]
        public Input<string>? UpdateMode { get; set; }

        public OneagentUpdatesState()
        {
        }
        public static new OneagentUpdatesState Empty => new OneagentUpdatesState();
    }
}
