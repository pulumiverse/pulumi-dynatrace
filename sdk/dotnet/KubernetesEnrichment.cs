// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/kubernetesEnrichment:KubernetesEnrichment")]
    public partial class KubernetesEnrichment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Dynatrace allows to use metadata defined on Kubernetes nodes, namespaces, and pods to set security and cost allocation attributes and dimensions for metrics, events, log, spans, and entities associated with the respective Kubernetes resource.
        /// </summary>
        [Output("rules")]
        public Output<Outputs.KubernetesEnrichmentRules?> Rules { get; private set; } = null!;

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;


        /// <summary>
        /// Create a KubernetesEnrichment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KubernetesEnrichment(string name, KubernetesEnrichmentArgs? args = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/kubernetesEnrichment:KubernetesEnrichment", name, args ?? new KubernetesEnrichmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KubernetesEnrichment(string name, Input<string> id, KubernetesEnrichmentState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/kubernetesEnrichment:KubernetesEnrichment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KubernetesEnrichment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KubernetesEnrichment Get(string name, Input<string> id, KubernetesEnrichmentState? state = null, CustomResourceOptions? options = null)
        {
            return new KubernetesEnrichment(name, id, state, options);
        }
    }

    public sealed class KubernetesEnrichmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Dynatrace allows to use metadata defined on Kubernetes nodes, namespaces, and pods to set security and cost allocation attributes and dimensions for metrics, events, log, spans, and entities associated with the respective Kubernetes resource.
        /// </summary>
        [Input("rules")]
        public Input<Inputs.KubernetesEnrichmentRulesArgs>? Rules { get; set; }

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public KubernetesEnrichmentArgs()
        {
        }
        public static new KubernetesEnrichmentArgs Empty => new KubernetesEnrichmentArgs();
    }

    public sealed class KubernetesEnrichmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Dynatrace allows to use metadata defined on Kubernetes nodes, namespaces, and pods to set security and cost allocation attributes and dimensions for metrics, events, log, spans, and entities associated with the respective Kubernetes resource.
        /// </summary>
        [Input("rules")]
        public Input<Inputs.KubernetesEnrichmentRulesGetArgs>? Rules { get; set; }

        /// <summary>
        /// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public KubernetesEnrichmentState()
        {
        }
        public static new KubernetesEnrichmentState Empty => new KubernetesEnrichmentState();
    }
}
