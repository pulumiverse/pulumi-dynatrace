// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    /// <summary>
    /// &gt; This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)
    /// 
    /// ## Dynatrace Documentation
    /// 
    /// - Set up request naming - https://www.dynatrace.com/support/help/how-to-use-dynatrace/services/service-monitoring-settings/set-up-request-naming
    /// 
    /// - Request naming API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/service-api/request-naming-api
    /// </summary>
    [DynatraceResourceType("dynatrace:index/requestNamings:RequestNamings")]
    public partial class RequestNamings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The IDs of the request namings in the order they should be taken into consideration
        /// </summary>
        [Output("ids")]
        public Output<ImmutableArray<string>> Ids { get; private set; } = null!;


        /// <summary>
        /// Create a RequestNamings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RequestNamings(string name, RequestNamingsArgs? args = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/requestNamings:RequestNamings", name, args ?? new RequestNamingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RequestNamings(string name, Input<string> id, RequestNamingsState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/requestNamings:RequestNamings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RequestNamings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RequestNamings Get(string name, Input<string> id, RequestNamingsState? state = null, CustomResourceOptions? options = null)
        {
            return new RequestNamings(name, id, state, options);
        }
    }

    public sealed class RequestNamingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The IDs of the request namings in the order they should be taken into consideration
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        public RequestNamingsArgs()
        {
        }
        public static new RequestNamingsArgs Empty => new RequestNamingsArgs();
    }

    public sealed class RequestNamingsState : global::Pulumi.ResourceArgs
    {
        [Input("ids")]
        private InputList<string>? _ids;

        /// <summary>
        /// The IDs of the request namings in the order they should be taken into consideration
        /// </summary>
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        public RequestNamingsState()
        {
        }
        public static new RequestNamingsState Empty => new RequestNamingsState();
    }
}
