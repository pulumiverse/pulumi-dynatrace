// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    /// <summary>
    /// &gt; Configuration overlaps with dynatrace_web_application.
    /// 
    /// &gt; This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)
    /// 
    /// ## Dynatrace Documentation
    /// 
    /// - Exclude IP addresses, browsers, bots, and spiders from monitoring for web applications - https://docs.dynatrace.com/docs/shortlink/rum-exclude-bots
    /// 
    /// - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:rum.web.ipaddress-exclusion`)
    /// 
    /// ## Resource Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Dynatrace = Pulumiverse.Dynatrace;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var _name_ = new Dynatrace.WebAppIpAddressExclusion("#name#", new()
    ///     {
    ///         ApplicationId = "APPLICATION-1234567890000000",
    ///         IpAddressExclusionInclude = false,
    ///         IpExclusionList = new Dynatrace.Inputs.WebAppIpAddressExclusionIpExclusionListArgs
    ///         {
    ///             IpExclusions = new[]
    ///             {
    ///                 new Dynatrace.Inputs.WebAppIpAddressExclusionIpExclusionListIpExclusionArgs
    ///                 {
    ///                     Ip = "192.168.1.5",
    ///                 },
    ///                 new Dynatrace.Inputs.WebAppIpAddressExclusionIpExclusionListIpExclusionArgs
    ///                 {
    ///                     Ip = "10.0.0.1",
    ///                     IpTo = "10.0.0.5",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DynatraceResourceType("dynatrace:index/webAppIpAddressExclusion:WebAppIpAddressExclusion")]
    public partial class WebAppIpAddressExclusion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// These are the only IP addresses that should be monitored
        /// </summary>
        [Output("ipAddressExclusionInclude")]
        public Output<bool> IpAddressExclusionInclude { get; private set; } = null!;

        /// <summary>
        /// **Examples:**
        /// 
        ///    - 84.112.10.5
        ///    - fe80::10a1:c6b2:5f68:785d
        /// </summary>
        [Output("ipExclusionList")]
        public Output<Outputs.WebAppIpAddressExclusionIpExclusionList?> IpExclusionList { get; private set; } = null!;


        /// <summary>
        /// Create a WebAppIpAddressExclusion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAppIpAddressExclusion(string name, WebAppIpAddressExclusionArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/webAppIpAddressExclusion:WebAppIpAddressExclusion", name, args ?? new WebAppIpAddressExclusionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAppIpAddressExclusion(string name, Input<string> id, WebAppIpAddressExclusionState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/webAppIpAddressExclusion:WebAppIpAddressExclusion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAppIpAddressExclusion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAppIpAddressExclusion Get(string name, Input<string> id, WebAppIpAddressExclusionState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAppIpAddressExclusion(name, id, state, options);
        }
    }

    public sealed class WebAppIpAddressExclusionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// These are the only IP addresses that should be monitored
        /// </summary>
        [Input("ipAddressExclusionInclude", required: true)]
        public Input<bool> IpAddressExclusionInclude { get; set; } = null!;

        /// <summary>
        /// **Examples:**
        /// 
        ///    - 84.112.10.5
        ///    - fe80::10a1:c6b2:5f68:785d
        /// </summary>
        [Input("ipExclusionList")]
        public Input<Inputs.WebAppIpAddressExclusionIpExclusionListArgs>? IpExclusionList { get; set; }

        public WebAppIpAddressExclusionArgs()
        {
        }
        public static new WebAppIpAddressExclusionArgs Empty => new WebAppIpAddressExclusionArgs();
    }

    public sealed class WebAppIpAddressExclusionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// These are the only IP addresses that should be monitored
        /// </summary>
        [Input("ipAddressExclusionInclude")]
        public Input<bool>? IpAddressExclusionInclude { get; set; }

        /// <summary>
        /// **Examples:**
        /// 
        ///    - 84.112.10.5
        ///    - fe80::10a1:c6b2:5f68:785d
        /// </summary>
        [Input("ipExclusionList")]
        public Input<Inputs.WebAppIpAddressExclusionIpExclusionListGetArgs>? IpExclusionList { get; set; }

        public WebAppIpAddressExclusionState()
        {
        }
        public static new WebAppIpAddressExclusionState Empty => new WebAppIpAddressExclusionState();
    }
}
