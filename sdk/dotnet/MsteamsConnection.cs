// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/msteamsConnection:MsteamsConnection")]
    public partial class MsteamsConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional
        /// </summary>
        [Output("channelName")]
        public Output<string?> ChannelName { get; private set; } = null!;

        /// <summary>
        /// The name of the Microsoft Teams connection
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Optional
        /// </summary>
        [Output("teamName")]
        public Output<string?> TeamName { get; private set; } = null!;

        /// <summary>
        /// The Webhook URL that links to the channel
        /// </summary>
        [Output("webhook")]
        public Output<string> Webhook { get; private set; } = null!;


        /// <summary>
        /// Create a MsteamsConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MsteamsConnection(string name, MsteamsConnectionArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/msteamsConnection:MsteamsConnection", name, args ?? new MsteamsConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MsteamsConnection(string name, Input<string> id, MsteamsConnectionState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/msteamsConnection:MsteamsConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                AdditionalSecretOutputs =
                {
                    "webhook",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MsteamsConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MsteamsConnection Get(string name, Input<string> id, MsteamsConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new MsteamsConnection(name, id, state, options);
        }
    }

    public sealed class MsteamsConnectionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional
        /// </summary>
        [Input("channelName")]
        public Input<string>? ChannelName { get; set; }

        /// <summary>
        /// The name of the Microsoft Teams connection
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Optional
        /// </summary>
        [Input("teamName")]
        public Input<string>? TeamName { get; set; }

        [Input("webhook", required: true)]
        private Input<string>? _webhook;

        /// <summary>
        /// The Webhook URL that links to the channel
        /// </summary>
        public Input<string>? Webhook
        {
            get => _webhook;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _webhook = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public MsteamsConnectionArgs()
        {
        }
        public static new MsteamsConnectionArgs Empty => new MsteamsConnectionArgs();
    }

    public sealed class MsteamsConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional
        /// </summary>
        [Input("channelName")]
        public Input<string>? ChannelName { get; set; }

        /// <summary>
        /// The name of the Microsoft Teams connection
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Optional
        /// </summary>
        [Input("teamName")]
        public Input<string>? TeamName { get; set; }

        [Input("webhook")]
        private Input<string>? _webhook;

        /// <summary>
        /// The Webhook URL that links to the channel
        /// </summary>
        public Input<string>? Webhook
        {
            get => _webhook;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _webhook = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public MsteamsConnectionState()
        {
        }
        public static new MsteamsConnectionState Empty => new MsteamsConnectionState();
    }
}
