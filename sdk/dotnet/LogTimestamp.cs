// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/logTimestamp:LogTimestamp")]
    public partial class LogTimestamp : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Name
        /// </summary>
        [Output("configItemTitle")]
        public Output<string> ConfigItemTitle { get; private set; } = null!;

        /// <summary>
        /// Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
        /// </summary>
        [Output("dateSearchLimit")]
        public Output<int?> DateSearchLimit { get; private set; } = null!;

        /// <summary>
        /// Date-time pattern
        /// </summary>
        [Output("dateTimePattern")]
        public Output<string> DateTimePattern { get; private set; } = null!;

        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Optional field. Enter a fragment of the line text that starts the entry. No support for wildcards - the text is treated literally.
        /// </summary>
        [Output("entryBoundary")]
        public Output<Outputs.LogTimestampEntryBoundary?> EntryBoundary { get; private set; } = null!;

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Output("insertAfter")]
        public Output<string> InsertAfter { get; private set; } = null!;

        /// <summary>
        /// no documentation available
        /// </summary>
        [Output("matchers")]
        public Output<Outputs.LogTimestampMatchers?> Matchers { get; private set; } = null!;

        /// <summary>
        /// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        /// <summary>
        /// Timezone
        /// </summary>
        [Output("timezone")]
        public Output<string> Timezone { get; private set; } = null!;


        /// <summary>
        /// Create a LogTimestamp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogTimestamp(string name, LogTimestampArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/logTimestamp:LogTimestamp", name, args ?? new LogTimestampArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogTimestamp(string name, Input<string> id, LogTimestampState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/logTimestamp:LogTimestamp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogTimestamp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogTimestamp Get(string name, Input<string> id, LogTimestampState? state = null, CustomResourceOptions? options = null)
        {
            return new LogTimestamp(name, id, state, options);
        }
    }

    public sealed class LogTimestampArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name
        /// </summary>
        [Input("configItemTitle", required: true)]
        public Input<string> ConfigItemTitle { get; set; } = null!;

        /// <summary>
        /// Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
        /// </summary>
        [Input("dateSearchLimit")]
        public Input<int>? DateSearchLimit { get; set; }

        /// <summary>
        /// Date-time pattern
        /// </summary>
        [Input("dateTimePattern", required: true)]
        public Input<string> DateTimePattern { get; set; } = null!;

        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Optional field. Enter a fragment of the line text that starts the entry. No support for wildcards - the text is treated literally.
        /// </summary>
        [Input("entryBoundary")]
        public Input<Inputs.LogTimestampEntryBoundaryArgs>? EntryBoundary { get; set; }

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("matchers")]
        public Input<Inputs.LogTimestampMatchersArgs>? Matchers { get; set; }

        /// <summary>
        /// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Timezone
        /// </summary>
        [Input("timezone", required: true)]
        public Input<string> Timezone { get; set; } = null!;

        public LogTimestampArgs()
        {
        }
        public static new LogTimestampArgs Empty => new LogTimestampArgs();
    }

    public sealed class LogTimestampState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name
        /// </summary>
        [Input("configItemTitle")]
        public Input<string>? ConfigItemTitle { get; set; }

        /// <summary>
        /// Defines the number of characters in every log line (starting from the first character in the line) where the timestamp is searched.
        /// </summary>
        [Input("dateSearchLimit")]
        public Input<int>? DateSearchLimit { get; set; }

        /// <summary>
        /// Date-time pattern
        /// </summary>
        [Input("dateTimePattern")]
        public Input<string>? DateTimePattern { get; set; }

        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Optional field. Enter a fragment of the line text that starts the entry. No support for wildcards - the text is treated literally.
        /// </summary>
        [Input("entryBoundary")]
        public Input<Inputs.LogTimestampEntryBoundaryGetArgs>? EntryBoundary { get; set; }

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("matchers")]
        public Input<Inputs.LogTimestampMatchersGetArgs>? Matchers { get; set; }

        /// <summary>
        /// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Timezone
        /// </summary>
        [Input("timezone")]
        public Input<string>? Timezone { get; set; }

        public LogTimestampState()
        {
        }
        public static new LogTimestampState Empty => new LogTimestampState();
    }
}
