// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/attackAllowlist:AttackAllowlist")]
    public partial class AttackAllowlist : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Step 1: Define attack control for chosen criteria
        /// </summary>
        [Output("attackHandling")]
        public Output<Outputs.AttackAllowlistAttackHandling> AttackHandling { get; private set; } = null!;

        /// <summary>
        /// Step 1: Define criteria. Please specify at least one of source IP or attack pattern.
        /// </summary>
        [Output("criteria")]
        public Output<Outputs.AttackAllowlistCriteria?> Criteria { get; private set; } = null!;

        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Output("enabled")]
        public Output<bool> Enabled { get; private set; } = null!;

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Output("insertAfter")]
        public Output<string> InsertAfter { get; private set; } = null!;

        /// <summary>
        /// Step 4: Leave comment (optional)
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.AttackAllowlistMetadata> Metadata { get; private set; } = null!;

        /// <summary>
        /// When you add multiple conditions, the rule applies if all conditions apply.
        /// </summary>
        [Output("resourceAttributeConditions")]
        public Output<Outputs.AttackAllowlistResourceAttributeConditions?> ResourceAttributeConditions { get; private set; } = null!;

        /// <summary>
        /// Rule name
        /// </summary>
        [Output("ruleName")]
        public Output<string?> RuleName { get; private set; } = null!;

        /// <summary>
        /// Provide conditions that must be met by the detection finding you want to allowlist.
        /// </summary>
        [Output("rules")]
        public Output<Outputs.AttackAllowlistRules> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a AttackAllowlist resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AttackAllowlist(string name, AttackAllowlistArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/attackAllowlist:AttackAllowlist", name, args ?? new AttackAllowlistArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AttackAllowlist(string name, Input<string> id, AttackAllowlistState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/attackAllowlist:AttackAllowlist", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AttackAllowlist resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AttackAllowlist Get(string name, Input<string> id, AttackAllowlistState? state = null, CustomResourceOptions? options = null)
        {
            return new AttackAllowlist(name, id, state, options);
        }
    }

    public sealed class AttackAllowlistArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Step 1: Define attack control for chosen criteria
        /// </summary>
        [Input("attackHandling", required: true)]
        public Input<Inputs.AttackAllowlistAttackHandlingArgs> AttackHandling { get; set; } = null!;

        /// <summary>
        /// Step 1: Define criteria. Please specify at least one of source IP or attack pattern.
        /// </summary>
        [Input("criteria")]
        public Input<Inputs.AttackAllowlistCriteriaArgs>? Criteria { get; set; }

        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// Step 4: Leave comment (optional)
        /// </summary>
        [Input("metadata", required: true)]
        public Input<Inputs.AttackAllowlistMetadataArgs> Metadata { get; set; } = null!;

        /// <summary>
        /// When you add multiple conditions, the rule applies if all conditions apply.
        /// </summary>
        [Input("resourceAttributeConditions")]
        public Input<Inputs.AttackAllowlistResourceAttributeConditionsArgs>? ResourceAttributeConditions { get; set; }

        /// <summary>
        /// Rule name
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Provide conditions that must be met by the detection finding you want to allowlist.
        /// </summary>
        [Input("rules", required: true)]
        public Input<Inputs.AttackAllowlistRulesArgs> Rules { get; set; } = null!;

        public AttackAllowlistArgs()
        {
        }
        public static new AttackAllowlistArgs Empty => new AttackAllowlistArgs();
    }

    public sealed class AttackAllowlistState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Step 1: Define attack control for chosen criteria
        /// </summary>
        [Input("attackHandling")]
        public Input<Inputs.AttackAllowlistAttackHandlingGetArgs>? AttackHandling { get; set; }

        /// <summary>
        /// Step 1: Define criteria. Please specify at least one of source IP or attack pattern.
        /// </summary>
        [Input("criteria")]
        public Input<Inputs.AttackAllowlistCriteriaGetArgs>? Criteria { get; set; }

        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// Step 4: Leave comment (optional)
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.AttackAllowlistMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// When you add multiple conditions, the rule applies if all conditions apply.
        /// </summary>
        [Input("resourceAttributeConditions")]
        public Input<Inputs.AttackAllowlistResourceAttributeConditionsGetArgs>? ResourceAttributeConditions { get; set; }

        /// <summary>
        /// Rule name
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        /// <summary>
        /// Provide conditions that must be met by the detection finding you want to allowlist.
        /// </summary>
        [Input("rules")]
        public Input<Inputs.AttackAllowlistRulesGetArgs>? Rules { get; set; }

        public AttackAllowlistState()
        {
        }
        public static new AttackAllowlistState Empty => new AttackAllowlistState();
    }
}
