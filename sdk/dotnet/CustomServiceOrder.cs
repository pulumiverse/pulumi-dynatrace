// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/customServiceOrder:CustomServiceOrder")]
    public partial class CustomServiceOrder : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The IDs of Custom Services for .Net in the desired order
        /// </summary>
        [Output("dotnets")]
        public Output<ImmutableArray<string>> Dotnets { get; private set; } = null!;

        /// <summary>
        /// The IDs of Custom Services for Golang in the desired order
        /// </summary>
        [Output("golangs")]
        public Output<ImmutableArray<string>> Golangs { get; private set; } = null!;

        /// <summary>
        /// The IDs of Custom Services for Java in the desired order
        /// </summary>
        [Output("javas")]
        public Output<ImmutableArray<string>> Javas { get; private set; } = null!;

        /// <summary>
        /// The IDs of Custom Services for NodeJS in the desired order
        /// </summary>
        [Output("nodejs")]
        public Output<ImmutableArray<string>> Nodejs { get; private set; } = null!;

        /// <summary>
        /// The IDs of Custom Services for PHP in the desired order
        /// </summary>
        [Output("phps")]
        public Output<ImmutableArray<string>> Phps { get; private set; } = null!;


        /// <summary>
        /// Create a CustomServiceOrder resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomServiceOrder(string name, CustomServiceOrderArgs? args = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/customServiceOrder:CustomServiceOrder", name, args ?? new CustomServiceOrderArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomServiceOrder(string name, Input<string> id, CustomServiceOrderState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/customServiceOrder:CustomServiceOrder", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomServiceOrder resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomServiceOrder Get(string name, Input<string> id, CustomServiceOrderState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomServiceOrder(name, id, state, options);
        }
    }

    public sealed class CustomServiceOrderArgs : global::Pulumi.ResourceArgs
    {
        [Input("dotnets")]
        private InputList<string>? _dotnets;

        /// <summary>
        /// The IDs of Custom Services for .Net in the desired order
        /// </summary>
        public InputList<string> Dotnets
        {
            get => _dotnets ?? (_dotnets = new InputList<string>());
            set => _dotnets = value;
        }

        [Input("golangs")]
        private InputList<string>? _golangs;

        /// <summary>
        /// The IDs of Custom Services for Golang in the desired order
        /// </summary>
        public InputList<string> Golangs
        {
            get => _golangs ?? (_golangs = new InputList<string>());
            set => _golangs = value;
        }

        [Input("javas")]
        private InputList<string>? _javas;

        /// <summary>
        /// The IDs of Custom Services for Java in the desired order
        /// </summary>
        public InputList<string> Javas
        {
            get => _javas ?? (_javas = new InputList<string>());
            set => _javas = value;
        }

        [Input("nodejs")]
        private InputList<string>? _nodejs;

        /// <summary>
        /// The IDs of Custom Services for NodeJS in the desired order
        /// </summary>
        public InputList<string> Nodejs
        {
            get => _nodejs ?? (_nodejs = new InputList<string>());
            set => _nodejs = value;
        }

        [Input("phps")]
        private InputList<string>? _phps;

        /// <summary>
        /// The IDs of Custom Services for PHP in the desired order
        /// </summary>
        public InputList<string> Phps
        {
            get => _phps ?? (_phps = new InputList<string>());
            set => _phps = value;
        }

        public CustomServiceOrderArgs()
        {
        }
        public static new CustomServiceOrderArgs Empty => new CustomServiceOrderArgs();
    }

    public sealed class CustomServiceOrderState : global::Pulumi.ResourceArgs
    {
        [Input("dotnets")]
        private InputList<string>? _dotnets;

        /// <summary>
        /// The IDs of Custom Services for .Net in the desired order
        /// </summary>
        public InputList<string> Dotnets
        {
            get => _dotnets ?? (_dotnets = new InputList<string>());
            set => _dotnets = value;
        }

        [Input("golangs")]
        private InputList<string>? _golangs;

        /// <summary>
        /// The IDs of Custom Services for Golang in the desired order
        /// </summary>
        public InputList<string> Golangs
        {
            get => _golangs ?? (_golangs = new InputList<string>());
            set => _golangs = value;
        }

        [Input("javas")]
        private InputList<string>? _javas;

        /// <summary>
        /// The IDs of Custom Services for Java in the desired order
        /// </summary>
        public InputList<string> Javas
        {
            get => _javas ?? (_javas = new InputList<string>());
            set => _javas = value;
        }

        [Input("nodejs")]
        private InputList<string>? _nodejs;

        /// <summary>
        /// The IDs of Custom Services for NodeJS in the desired order
        /// </summary>
        public InputList<string> Nodejs
        {
            get => _nodejs ?? (_nodejs = new InputList<string>());
            set => _nodejs = value;
        }

        [Input("phps")]
        private InputList<string>? _phps;

        /// <summary>
        /// The IDs of Custom Services for PHP in the desired order
        /// </summary>
        public InputList<string> Phps
        {
            get => _phps ?? (_phps = new InputList<string>());
            set => _phps = value;
        }

        public CustomServiceOrderState()
        {
        }
        public static new CustomServiceOrderState Empty => new CustomServiceOrderState();
    }
}
