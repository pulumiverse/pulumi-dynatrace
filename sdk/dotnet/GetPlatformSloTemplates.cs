// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    public static class GetPlatformSloTemplates
    {
        /// <summary>
        /// &gt; To utilize this data source, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **View SLOs** (`slo:slos:read`) and **View SLO objective templates** (`slo:objective-templates:read`).
        /// 
        /// The SLO objective templates data source allows to retrieve a list of all templates.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPlatformSloTemplates = Dynatrace.GetPlatformSloTemplates.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["test"] = testPlatformSloTemplates,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetPlatformSloTemplatesResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPlatformSloTemplatesResult>("dynatrace:index/getPlatformSloTemplates:getPlatformSloTemplates", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// &gt; To utilize this data source, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **View SLOs** (`slo:slos:read`) and **View SLO objective templates** (`slo:objective-templates:read`).
        /// 
        /// The SLO objective templates data source allows to retrieve a list of all templates.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPlatformSloTemplates = Dynatrace.GetPlatformSloTemplates.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["test"] = testPlatformSloTemplates,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPlatformSloTemplatesResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPlatformSloTemplatesResult>("dynatrace:index/getPlatformSloTemplates:getPlatformSloTemplates", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// &gt; To utilize this data source, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **View SLOs** (`slo:slos:read`) and **View SLO objective templates** (`slo:objective-templates:read`).
        /// 
        /// The SLO objective templates data source allows to retrieve a list of all templates.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var testPlatformSloTemplates = Dynatrace.GetPlatformSloTemplates.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["test"] = testPlatformSloTemplates,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetPlatformSloTemplatesResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPlatformSloTemplatesResult>("dynatrace:index/getPlatformSloTemplates:getPlatformSloTemplates", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetPlatformSloTemplatesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetPlatformSloTemplatesTemplateResult> Templates;

        [OutputConstructor]
        private GetPlatformSloTemplatesResult(
            string id,

            ImmutableArray<Outputs.GetPlatformSloTemplatesTemplateResult> templates)
        {
            Id = id;
            Templates = templates;
        }
    }
}
