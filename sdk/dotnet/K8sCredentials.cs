// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/k8sCredentials:K8sCredentials")]
    public partial class K8sCredentials : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Monitoring is enabled (`True`) or disabled (`False`) for given credentials configuration.  If not set on creation, the `True` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Output("active")]
        public Output<bool?> Active { get; private set; } = null!;

        /// <summary>
        /// Active Gate group to filter active gates for this credentials.
        /// </summary>
        [Output("activeGateGroup")]
        public Output<string?> ActiveGateGroup { get; private set; } = null!;

        /// <summary>
        /// The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `Null`.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Output("authToken")]
        public Output<string?> AuthToken { get; private set; } = null!;

        /// <summary>
        /// The check of SSL certificates is enabled (`True`) or disabled (`False`) for the Kubernetes cluster.  If not set on creation, the `True` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Output("certificateCheckEnabled")]
        public Output<bool?> CertificateCheckEnabled { get; private set; } = null!;

        /// <summary>
        /// Inclusion of all Davis relevant events is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
        /// </summary>
        [Output("davisEventsIntegrationEnabled")]
        public Output<bool?> DavisEventsIntegrationEnabled { get; private set; } = null!;

        /// <summary>
        /// The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
        /// </summary>
        [Output("endpointUrl")]
        public Output<string?> EndpointUrl { get; private set; } = null!;

        /// <summary>
        /// Event analysis and alerting is (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Output("eventAnalysisAndAlertingEnabled")]
        public Output<bool?> EventAnalysisAndAlertingEnabled { get; private set; } = null!;

        /// <summary>
        /// Kubernetes event filters based on field-selectors. If set to `Null` on creation, no events field selectors are subscribed. If set to `Null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.
        /// </summary>
        [Output("eventsFieldSelectors")]
        public Output<ImmutableArray<Outputs.K8sCredentialsEventsFieldSelector>> EventsFieldSelectors { get; private set; } = null!;

        /// <summary>
        /// Monitoring of events is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `False` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Output("eventsIntegrationEnabled")]
        public Output<bool?> EventsIntegrationEnabled { get; private set; } = null!;

        /// <summary>
        /// Verify hostname in certificate against Kubernetes API URL
        /// </summary>
        [Output("hostnameVerification")]
        public Output<bool?> HostnameVerification { get; private set; } = null!;

        /// <summary>
        /// The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
        /// </summary>
        [Output("label")]
        public Output<string> Label { get; private set; } = null!;

        /// <summary>
        /// Prometheus exporters integration is enabled (`True`) or disabled (`False`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
        /// </summary>
        [Output("prometheusExporters")]
        public Output<bool?> PrometheusExporters { get; private set; } = null!;

        /// <summary>
        /// Any attributes that aren't yet supported by this provider
        /// </summary>
        [Output("unknowns")]
        public Output<string?> Unknowns { get; private set; } = null!;

        /// <summary>
        /// Workload and cloud application processing is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Output("workloadIntegrationEnabled")]
        public Output<bool?> WorkloadIntegrationEnabled { get; private set; } = null!;


        /// <summary>
        /// Create a K8sCredentials resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public K8sCredentials(string name, K8sCredentialsArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/k8sCredentials:K8sCredentials", name, args ?? new K8sCredentialsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private K8sCredentials(string name, Input<string> id, K8sCredentialsState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/k8sCredentials:K8sCredentials", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
                AdditionalSecretOutputs =
                {
                    "authToken",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing K8sCredentials resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static K8sCredentials Get(string name, Input<string> id, K8sCredentialsState? state = null, CustomResourceOptions? options = null)
        {
            return new K8sCredentials(name, id, state, options);
        }
    }

    public sealed class K8sCredentialsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Monitoring is enabled (`True`) or disabled (`False`) for given credentials configuration.  If not set on creation, the `True` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// Active Gate group to filter active gates for this credentials.
        /// </summary>
        [Input("activeGateGroup")]
        public Input<string>? ActiveGateGroup { get; set; }

        [Input("authToken")]
        private Input<string>? _authToken;

        /// <summary>
        /// The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `Null`.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        public Input<string>? AuthToken
        {
            get => _authToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _authToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The check of SSL certificates is enabled (`True`) or disabled (`False`) for the Kubernetes cluster.  If not set on creation, the `True` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("certificateCheckEnabled")]
        public Input<bool>? CertificateCheckEnabled { get; set; }

        /// <summary>
        /// Inclusion of all Davis relevant events is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
        /// </summary>
        [Input("davisEventsIntegrationEnabled")]
        public Input<bool>? DavisEventsIntegrationEnabled { get; set; }

        /// <summary>
        /// The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
        /// </summary>
        [Input("endpointUrl")]
        public Input<string>? EndpointUrl { get; set; }

        /// <summary>
        /// Event analysis and alerting is (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("eventAnalysisAndAlertingEnabled")]
        public Input<bool>? EventAnalysisAndAlertingEnabled { get; set; }

        [Input("eventsFieldSelectors")]
        private InputList<Inputs.K8sCredentialsEventsFieldSelectorArgs>? _eventsFieldSelectors;

        /// <summary>
        /// Kubernetes event filters based on field-selectors. If set to `Null` on creation, no events field selectors are subscribed. If set to `Null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.
        /// </summary>
        public InputList<Inputs.K8sCredentialsEventsFieldSelectorArgs> EventsFieldSelectors
        {
            get => _eventsFieldSelectors ?? (_eventsFieldSelectors = new InputList<Inputs.K8sCredentialsEventsFieldSelectorArgs>());
            set => _eventsFieldSelectors = value;
        }

        /// <summary>
        /// Monitoring of events is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `False` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("eventsIntegrationEnabled")]
        public Input<bool>? EventsIntegrationEnabled { get; set; }

        /// <summary>
        /// Verify hostname in certificate against Kubernetes API URL
        /// </summary>
        [Input("hostnameVerification")]
        public Input<bool>? HostnameVerification { get; set; }

        /// <summary>
        /// The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
        /// </summary>
        [Input("label", required: true)]
        public Input<string> Label { get; set; } = null!;

        /// <summary>
        /// Prometheus exporters integration is enabled (`True`) or disabled (`False`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
        /// </summary>
        [Input("prometheusExporters")]
        public Input<bool>? PrometheusExporters { get; set; }

        /// <summary>
        /// Any attributes that aren't yet supported by this provider
        /// </summary>
        [Input("unknowns")]
        public Input<string>? Unknowns { get; set; }

        /// <summary>
        /// Workload and cloud application processing is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("workloadIntegrationEnabled")]
        public Input<bool>? WorkloadIntegrationEnabled { get; set; }

        public K8sCredentialsArgs()
        {
        }
        public static new K8sCredentialsArgs Empty => new K8sCredentialsArgs();
    }

    public sealed class K8sCredentialsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Monitoring is enabled (`True`) or disabled (`False`) for given credentials configuration.  If not set on creation, the `True` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// Active Gate group to filter active gates for this credentials.
        /// </summary>
        [Input("activeGateGroup")]
        public Input<string>? ActiveGateGroup { get; set; }

        [Input("authToken")]
        private Input<string>? _authToken;

        /// <summary>
        /// The service account bearer token for the Kubernetes API server.  Submit your token on creation or update of the configuration. For security reasons, GET requests return this field as `Null`.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        public Input<string>? AuthToken
        {
            get => _authToken;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _authToken = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The check of SSL certificates is enabled (`True`) or disabled (`False`) for the Kubernetes cluster.  If not set on creation, the `True` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("certificateCheckEnabled")]
        public Input<bool>? CertificateCheckEnabled { get; set; }

        /// <summary>
        /// Inclusion of all Davis relevant events is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected
        /// </summary>
        [Input("davisEventsIntegrationEnabled")]
        public Input<bool>? DavisEventsIntegrationEnabled { get; set; }

        /// <summary>
        /// The URL of the Kubernetes API server.  It must be unique within a Dynatrace environment.  The URL must valid according to RFC 2396. Leading or trailing whitespaces are not allowed.
        /// </summary>
        [Input("endpointUrl")]
        public Input<string>? EndpointUrl { get; set; }

        /// <summary>
        /// Event analysis and alerting is (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("eventAnalysisAndAlertingEnabled")]
        public Input<bool>? EventAnalysisAndAlertingEnabled { get; set; }

        [Input("eventsFieldSelectors")]
        private InputList<Inputs.K8sCredentialsEventsFieldSelectorGetArgs>? _eventsFieldSelectors;

        /// <summary>
        /// Kubernetes event filters based on field-selectors. If set to `Null` on creation, no events field selectors are subscribed. If set to `Null` on update, no change of stored events field selectors is applied. Set an empty list to clear all events field selectors.
        /// </summary>
        public InputList<Inputs.K8sCredentialsEventsFieldSelectorGetArgs> EventsFieldSelectors
        {
            get => _eventsFieldSelectors ?? (_eventsFieldSelectors = new InputList<Inputs.K8sCredentialsEventsFieldSelectorGetArgs>());
            set => _eventsFieldSelectors = value;
        }

        /// <summary>
        /// Monitoring of events is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. Event monitoring depends on the active state of this configuration to be true.  If not set on creation, the `False` value is used.  If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("eventsIntegrationEnabled")]
        public Input<bool>? EventsIntegrationEnabled { get; set; }

        /// <summary>
        /// Verify hostname in certificate against Kubernetes API URL
        /// </summary>
        [Input("hostnameVerification")]
        public Input<bool>? HostnameVerification { get; set; }

        /// <summary>
        /// The name of the Kubernetes credentials configuration.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
        /// </summary>
        [Input("label")]
        public Input<string>? Label { get; set; }

        /// <summary>
        /// Prometheus exporters integration is enabled (`True`) or disabled (`False`) for the Kubernetes cluster.If the field is omitted during an update, the old value remains unaffected
        /// </summary>
        [Input("prometheusExporters")]
        public Input<bool>? PrometheusExporters { get; set; }

        /// <summary>
        /// Any attributes that aren't yet supported by this provider
        /// </summary>
        [Input("unknowns")]
        public Input<string>? Unknowns { get; set; }

        /// <summary>
        /// Workload and cloud application processing is enabled (`True`) or disabled (`False`) for the Kubernetes cluster. If the field is omitted during an update, the old value remains unaffected.
        /// </summary>
        [Input("workloadIntegrationEnabled")]
        public Input<bool>? WorkloadIntegrationEnabled { get; set; }

        public K8sCredentialsState()
        {
        }
        public static new K8sCredentialsState Empty => new K8sCredentialsState();
    }
}
