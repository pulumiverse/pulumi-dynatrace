// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Additional event handlers and wrappers
        /// </summary>
        [Input("additionalEventHandlers", required: true)]
        public Input<Inputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs> AdditionalEventHandlers { get; set; } = null!;

        /// <summary>
        /// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
        /// </summary>
        [Input("eventWrapperSettings")]
        public Input<Inputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs>? EventWrapperSettings { get; set; }

        /// <summary>
        /// Global event capture settings
        /// </summary>
        [Input("globalEventCaptureSettings")]
        public Input<Inputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs>? GlobalEventCaptureSettings { get; set; }

        /// <summary>
        /// Instrumentation of unsupported Ajax frameworks enabled/disabled
        /// </summary>
        [Input("instrumentUnsupportedAjaxFrameworks")]
        public Input<bool>? InstrumentUnsupportedAjaxFrameworks { get; set; }

        /// <summary>
        /// Maximum character length for action names. Valid values range from 5 to 10000.
        /// </summary>
        [Input("maxActionNameLength", required: true)]
        public Input<int> MaxActionNameLength { get; set; } = null!;

        /// <summary>
        /// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
        /// </summary>
        [Input("maxErrorsToCapture", required: true)]
        public Input<int> MaxErrorsToCapture { get; set; } = null!;

        /// <summary>
        /// Proxy wrapper enabled/disabled
        /// </summary>
        [Input("proxyWrapperEnabled")]
        public Input<bool>? ProxyWrapperEnabled { get; set; }

        /// <summary>
        /// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `&lt;` and `&gt;`.
        /// </summary>
        [Input("specialCharactersToEscape")]
        public Input<string>? SpecialCharactersToEscape { get; set; }

        /// <summary>
        /// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
        /// </summary>
        [Input("syncBeaconFirefox")]
        public Input<bool>? SyncBeaconFirefox { get; set; }

        /// <summary>
        /// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
        /// </summary>
        [Input("syncBeaconInternetExplorer")]
        public Input<bool>? SyncBeaconInternetExplorer { get; set; }

        /// <summary>
        /// User action name attribute
        /// </summary>
        [Input("userActionNameAttribute")]
        public Input<string>? UserActionNameAttribute { get; set; }

        public WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs()
        {
        }
        public static new WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs Empty => new WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs();
    }
}
