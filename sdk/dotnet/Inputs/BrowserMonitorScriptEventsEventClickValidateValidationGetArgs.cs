// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class BrowserMonitorScriptEventsEventClickValidateValidationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The condition of the validation. `False` means the validation succeeds if the specified content/element is found. `True` means the validation fails if the specified content/element is found
        /// </summary>
        [Input("failIfFound")]
        public Input<bool>? FailIfFound { get; set; }

        /// <summary>
        /// The content to look for on the page.
        /// Regular expressions are allowed. In that case set `isRegex` as `True`. Required for `ContentMatch`, optional for `ElementMatch`.
        /// </summary>
        [Input("match")]
        public Input<string>? Match { get; set; }

        /// <summary>
        /// Defines whether `Match` is plain text (`False`) or a regular expression (`True`)
        /// </summary>
        [Input("regex")]
        public Input<bool>? Regex { get; set; }

        /// <summary>
        /// The elemnt to look for on the page
        /// </summary>
        [Input("target")]
        public Input<Inputs.BrowserMonitorScriptEventsEventClickValidateValidationTargetGetArgs>? Target { get; set; }

        /// <summary>
        /// The goal of the validation. `ContentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `ElementMatch` (check page for the specific element).
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public BrowserMonitorScriptEventsEventClickValidateValidationGetArgs()
        {
        }
        public static new BrowserMonitorScriptEventsEventClickValidateValidationGetArgs Empty => new BrowserMonitorScriptEventsEventClickValidateValidationGetArgs();
    }
}
