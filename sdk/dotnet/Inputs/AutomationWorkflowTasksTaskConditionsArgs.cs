// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class AutomationWorkflowTasksTaskConditionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A custom condition that needs to be met for the current task to get executed
        /// </summary>
        [Input("custom")]
        public Input<string>? Custom { get; set; }

        /// <summary>
        /// Possible values are `SKIP` and `STOP`
        /// </summary>
        [Input("else")]
        public Input<string>? Else { get; set; }

        [Input("states")]
        private InputMap<string>? _states;

        /// <summary>
        /// key/value pairs where the `key` is the name of another task and the value the status it needs to be for the current task to get executed. Possible values are `SUCCESS`, `ERROR`, `ANY`, `OK` (Success or Skipped) and `NOK` (Error or Cancelled)
        /// </summary>
        public InputMap<string> States
        {
            get => _states ?? (_states = new InputMap<string>());
            set => _states = value;
        }

        public AutomationWorkflowTasksTaskConditionsArgs()
        {
        }
        public static new AutomationWorkflowTasksTaskConditionsArgs Empty => new AutomationWorkflowTasksTaskConditionsArgs();
    }
}
