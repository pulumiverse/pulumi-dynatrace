// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorDavisEventExtractionProcessorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name or description of the processor
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Indicates if the object is active
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Identifier of the processor. Must be unique within a stage.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Matching condition to apply on incoming records
        /// </summary>
        [Input("matcher", required: true)]
        public Input<string> Matcher { get; set; } = null!;

        [Input("properties", required: true)]
        private InputList<Inputs.OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorDavisEventExtractionProcessorPropertyArgs>? _properties;

        /// <summary>
        /// List of properties for the extracted davis event
        /// </summary>
        public InputList<Inputs.OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorDavisEventExtractionProcessorPropertyArgs> Properties
        {
            get => _properties ?? (_properties = new InputList<Inputs.OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorDavisEventExtractionProcessorPropertyArgs>());
            set => _properties = value;
        }

        /// <summary>
        /// Sample data related to the processor for documentation or testing
        /// </summary>
        [Input("sampleData")]
        public Input<string>? SampleData { get; set; }

        public OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorDavisEventExtractionProcessorArgs()
        {
        }
        public static new OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorDavisEventExtractionProcessorArgs Empty => new OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorDavisEventExtractionProcessorArgs();
    }
}
