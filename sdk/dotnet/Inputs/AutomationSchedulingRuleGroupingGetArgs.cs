// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class AutomationSchedulingRuleGroupingGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("combines", required: true)]
        private InputList<string>? _combines;

        /// <summary>
        /// The IDs of scheduling rules determining the days the schedule should apply to
        /// </summary>
        public InputList<string> Combines
        {
            get => _combines ?? (_combines = new InputList<string>());
            set => _combines = value;
        }

        [Input("intersects")]
        private InputList<string>? _intersects;

        /// <summary>
        /// The IDs of scheduling rules determining the days the schedule is allowed apply to. If specified, only days that are covered by `Combine` and `Intersect` are valid days for the schedule
        /// </summary>
        public InputList<string> Intersects
        {
            get => _intersects ?? (_intersects = new InputList<string>());
            set => _intersects = value;
        }

        [Input("subtracts")]
        private InputList<string>? _subtracts;

        /// <summary>
        /// The IDs of scheduling rules determing the days the schedule must not apply. If specified it reduces down the set of days covered by `Combine` and `Intersect`
        /// </summary>
        public InputList<string> Subtracts
        {
            get => _subtracts ?? (_subtracts = new InputList<string>());
            set => _subtracts = value;
        }

        public AutomationSchedulingRuleGroupingGetArgs()
        {
        }
        public static new AutomationSchedulingRuleGroupingGetArgs Empty => new AutomationSchedulingRuleGroupingGetArgs();
    }
}
