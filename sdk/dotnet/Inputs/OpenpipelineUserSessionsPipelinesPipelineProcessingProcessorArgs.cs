// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Processor to apply a DQL script
        /// </summary>
        [Input("dqlProcessor")]
        public Input<Inputs.OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorDqlProcessorArgs>? DqlProcessor { get; set; }

        /// <summary>
        /// Processor to drop the record either during the processing stage or at the endpoint
        /// </summary>
        [Input("dropProcessor")]
        public Input<Inputs.OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorDropProcessorArgs>? DropProcessor { get; set; }

        /// <summary>
        /// Processor to add fields
        /// </summary>
        [Input("fieldsAddProcessor")]
        public Input<Inputs.OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorFieldsAddProcessorArgs>? FieldsAddProcessor { get; set; }

        /// <summary>
        /// Processor to remove fields
        /// </summary>
        [Input("fieldsRemoveProcessor")]
        public Input<Inputs.OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorFieldsRemoveProcessorArgs>? FieldsRemoveProcessor { get; set; }

        /// <summary>
        /// Processor to rename fields
        /// </summary>
        [Input("fieldsRenameProcessor")]
        public Input<Inputs.OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorFieldsRenameProcessorArgs>? FieldsRenameProcessor { get; set; }

        /// <summary>
        /// Processor to apply a technology processors
        /// </summary>
        [Input("technologyProcessor")]
        public Input<Inputs.OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorTechnologyProcessorArgs>? TechnologyProcessor { get; set; }

        public OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorArgs()
        {
        }
        public static new OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorArgs Empty => new OpenpipelineUserSessionsPipelinesPipelineProcessingProcessorArgs();
    }
}
