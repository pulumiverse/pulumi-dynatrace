// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class PgAnomaliesAvailabilityGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// How to monitor the availability of the process group:  * `PROCESS_IMPACT`: Alert if any process of the group becomes unavailable.  * `MINIMUM_THRESHOLD`: Alert if the number of active processes in the group falls below the specified threshold.  * `OFF`: Availability monitoring is disabled.
        /// </summary>
        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        /// <summary>
        /// Alert if the number of active processes in the group is lower than this value.
        /// </summary>
        [Input("minimumThreshold")]
        public Input<int>? MinimumThreshold { get; set; }

        public PgAnomaliesAvailabilityGetArgs()
        {
        }
        public static new PgAnomaliesAvailabilityGetArgs Empty => new PgAnomaliesAvailabilityGetArgs();
    }
}
