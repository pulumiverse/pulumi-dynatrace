// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class DiskEdgeAnomalyDetectorsAlertsAlertArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("sampleCountThresholds")]
        public Input<Inputs.DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholdsArgs>? SampleCountThresholds { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("sampleCountThresholdsImmediately")]
        public Input<Inputs.DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholdsImmediatelyArgs>? SampleCountThresholdsImmediately { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("thresholdMebibytes")]
        public Input<double>? ThresholdMebibytes { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("thresholdMilliseconds")]
        public Input<double>? ThresholdMilliseconds { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("thresholdNumber")]
        public Input<double>? ThresholdNumber { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("thresholdPercent")]
        public Input<double>? ThresholdPercent { get; set; }

        /// <summary>
        /// Possible Values: `AVAILABLE_DISK_SPACE_MEBIBYTES_BELOW`, `AVAILABLE_DISK_SPACE_PERCENT_BELOW`, `AVAILABLE_INODES_NUMBER_BELOW`, `AVAILABLE_INODES_PERCENT_BELOW`, `READ_ONLY_FILE_SYSTEM`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`
        /// </summary>
        [Input("trigger", required: true)]
        public Input<string> Trigger { get; set; } = null!;

        public DiskEdgeAnomalyDetectorsAlertsAlertArgs()
        {
        }
        public static new DiskEdgeAnomalyDetectorsAlertsAlertArgs Empty => new DiskEdgeAnomalyDetectorsAlertsAlertArgs();
    }
}
