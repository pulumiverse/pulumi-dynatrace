// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("excludedElements")]
        private InputList<string>? _excludedElements;

        /// <summary>
        /// Query CSS selectors to specify mutation nodes (elements that change) to ignore in Visually complete and Speed index calculation
        /// </summary>
        public InputList<string> ExcludedElements
        {
            get => _excludedElements ?? (_excludedElements = new InputList<string>());
            set => _excludedElements = value;
        }

        [Input("excludedUrls")]
        private InputList<string>? _excludedUrls;

        /// <summary>
        /// Parameters for Visually complete and Speed index calculation
        /// </summary>
        public InputList<string> ExcludedUrls
        {
            get => _excludedUrls ?? (_excludedUrls = new InputList<string>());
            set => _excludedUrls = value;
        }

        /// <summary>
        /// Use this setting to define the minimum visible area per element (in pixels) for an element to be counted towards Visually complete and Speed index
        /// </summary>
        [Input("imageSizeThreshold", required: true)]
        public Input<int> ImageSizeThreshold { get; set; } = null!;

        /// <summary>
        /// The time the Visually complete module waits for inactivity and no further mutations on the page after the load action
        /// </summary>
        [Input("inactivityTimeout", required: true)]
        public Input<int> InactivityTimeout { get; set; } = null!;

        /// <summary>
        /// The time the Visually complete module waits after an XHR or custom action closes to start the calculation
        /// </summary>
        [Input("mutationTimeout", required: true)]
        public Input<int> MutationTimeout { get; set; } = null!;

        public BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsGetArgs()
        {
        }
        public static new BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsGetArgs Empty => new BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptionsGetArgs();
    }
}
