// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class NetworkMonitorOutageHandlingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of consecutive failures for all locations
        /// </summary>
        [Input("globalConsecutiveOutageCountThreshold")]
        public Input<int>? GlobalConsecutiveOutageCountThreshold { get; set; }

        /// <summary>
        /// Generate a problem and send an alert when the monitor is unavailable at all configured locations
        /// </summary>
        [Input("globalOutages")]
        public Input<bool>? GlobalOutages { get; set; }

        /// <summary>
        /// Number of consecutive failures
        /// </summary>
        [Input("localConsecutiveOutageCountThreshold")]
        public Input<int>? LocalConsecutiveOutageCountThreshold { get; set; }

        /// <summary>
        /// Number of failing locations
        /// </summary>
        [Input("localLocationOutageCountThreshold")]
        public Input<int>? LocalLocationOutageCountThreshold { get; set; }

        /// <summary>
        /// Generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location
        /// </summary>
        [Input("localOutages")]
        public Input<bool>? LocalOutages { get; set; }

        public NetworkMonitorOutageHandlingArgs()
        {
        }
        public static new NetworkMonitorOutageHandlingArgs Empty => new NetworkMonitorOutageHandlingArgs();
    }
}
