// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class WebAppAnomaliesErrorRateErrorRateFixedGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// To avoid over-alerting for low traffic applications
        /// </summary>
        [Input("errorRateReqPerMin", required: true)]
        public Input<double> ErrorRateReqPerMin { get; set; } = null!;

        /// <summary>
        /// Possible Values: `Low`, `Medium`, `High`
        /// </summary>
        [Input("errorRateSensitivity", required: true)]
        public Input<string> ErrorRateSensitivity { get; set; } = null!;

        /// <summary>
        /// Alert if this custom error rate threshold is exceeded during any 5-minute-period
        /// </summary>
        [Input("maxFailureRateIncrease", required: true)]
        public Input<double> MaxFailureRateIncrease { get; set; } = null!;

        /// <summary>
        /// Amount of minutes the observed traffic has to stay in abnormal state before alert
        /// </summary>
        [Input("minutesAbnormalState", required: true)]
        public Input<double> MinutesAbnormalState { get; set; } = null!;

        public WebAppAnomaliesErrorRateErrorRateFixedGetArgs()
        {
        }
        public static new WebAppAnomaliesErrorRateErrorRateFixedGetArgs Empty => new WebAppAnomaliesErrorRateErrorRateFixedGetArgs();
    }
}
