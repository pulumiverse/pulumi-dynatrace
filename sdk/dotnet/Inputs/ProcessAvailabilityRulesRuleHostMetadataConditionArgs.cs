// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class ProcessAvailabilityRulesRuleHostMetadataConditionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When enabled, the condition requires a metadata key to exist and match the constraints; when disabled, the key is optional but must still match the constrains if it is present.
        /// </summary>
        [Input("keyMustExist")]
        public Input<bool>? KeyMustExist { get; set; }

        /// <summary>
        /// This string has to match a required format.
        /// 
        /// - `$contains(production)` – Matches if `production` appears anywhere in the host metadata value.
        /// - `$eq(production)` – Matches if `production` matches the host metadata value exactly.
        /// - `$prefix(production)` – Matches if `production` matches the prefix of the host metadata value.
        /// - `$suffix(production)` – Matches if `production` matches the suffix of the host metadata value.
        /// 
        /// Available logic operations:
        /// - `$not($eq(production))` – Matches if the host metadata value is different from `production`.
        /// - `$and($prefix(production),$suffix(main))` – Matches if host metadata value starts with `production` and ends with `main`.
        /// - `$or($prefix(production),$suffix(main))` – Matches if host metadata value starts with `production` or ends with `main`.
        /// 
        /// Brackets **(** and **)** that are part of the matched property **must be escaped with a tilde (~)**
        /// </summary>
        [Input("metadataCondition", required: true)]
        public Input<string> MetadataCondition { get; set; } = null!;

        /// <summary>
        /// Key
        /// </summary>
        [Input("metadataKey", required: true)]
        public Input<string> MetadataKey { get; set; } = null!;

        public ProcessAvailabilityRulesRuleHostMetadataConditionArgs()
        {
        }
        public static new ProcessAvailabilityRulesRuleHostMetadataConditionArgs Empty => new ProcessAvailabilityRulesRuleHostMetadataConditionArgs();
    }
}
