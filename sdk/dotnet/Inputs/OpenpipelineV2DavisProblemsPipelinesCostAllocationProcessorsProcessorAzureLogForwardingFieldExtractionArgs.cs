// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class OpenpipelineV2DavisProblemsPipelinesCostAllocationProcessorsProcessorAzureLogForwardingFieldExtractionArgs : global::Pulumi.ResourceArgs
    {
        [Input("excludes")]
        private InputList<string>? _excludes;

        /// <summary>
        /// Fields
        /// </summary>
        public InputList<string> Excludes
        {
            get => _excludes ?? (_excludes = new InputList<string>());
            set => _excludes = value;
        }

        /// <summary>
        /// Fields
        /// </summary>
        [Input("include")]
        public Input<Inputs.OpenpipelineV2DavisProblemsPipelinesCostAllocationProcessorsProcessorAzureLogForwardingFieldExtractionIncludeArgs>? Include { get; set; }

        /// <summary>
        /// Possible Values: `Exclude`, `Include`, `IncludeAll`
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public OpenpipelineV2DavisProblemsPipelinesCostAllocationProcessorsProcessorAzureLogForwardingFieldExtractionArgs()
        {
        }
        public static new OpenpipelineV2DavisProblemsPipelinesCostAllocationProcessorsProcessorAzureLogForwardingFieldExtractionArgs Empty => new OpenpipelineV2DavisProblemsPipelinesCostAllocationProcessorsProcessorAzureLogForwardingFieldExtractionArgs();
    }
}
