// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataConditionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When enabled, the condition requires a metadata key to exist and match the constraints; when disabled, the key is optional but must still match the constrains if it is present.
        /// </summary>
        [Input("keyMustExist")]
        public Input<bool>? KeyMustExist { get; set; }

        /// <summary>
        /// This string has to match a required format.
        /// </summary>
        [Input("metadataCondition", required: true)]
        public Input<string> MetadataCondition { get; set; } = null!;

        /// <summary>
        /// Key
        /// </summary>
        [Input("metadataKey", required: true)]
        public Input<string> MetadataKey { get; set; } = null!;

        public OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataConditionGetArgs()
        {
        }
        public static new OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataConditionGetArgs Empty => new OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataConditionGetArgs();
    }
}
