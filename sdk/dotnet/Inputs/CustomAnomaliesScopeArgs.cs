// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class CustomAnomaliesScopeArgs : global::Pulumi.ResourceArgs
    {
        [Input("customDeviceGroupNames")]
        private InputList<Inputs.CustomAnomaliesScopeCustomDeviceGroupNameArgs>? _customDeviceGroupNames;

        /// <summary>
        /// A scope filter for the related custom device group name
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeCustomDeviceGroupNameArgs> CustomDeviceGroupNames
        {
            get => _customDeviceGroupNames ?? (_customDeviceGroupNames = new InputList<Inputs.CustomAnomaliesScopeCustomDeviceGroupNameArgs>());
            set => _customDeviceGroupNames = value;
        }

        [Input("entities")]
        private InputList<Inputs.CustomAnomaliesScopeEntityArgs>? _entities;

        /// <summary>
        /// A scope filter for a monitored entity identifier
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeEntityArgs> Entities
        {
            get => _entities ?? (_entities = new InputList<Inputs.CustomAnomaliesScopeEntityArgs>());
            set => _entities = value;
        }

        [Input("hostGroupNames")]
        private InputList<Inputs.CustomAnomaliesScopeHostGroupNameArgs>? _hostGroupNames;

        /// <summary>
        /// A scope filter for the related host group name
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeHostGroupNameArgs> HostGroupNames
        {
            get => _hostGroupNames ?? (_hostGroupNames = new InputList<Inputs.CustomAnomaliesScopeHostGroupNameArgs>());
            set => _hostGroupNames = value;
        }

        [Input("hostNames")]
        private InputList<Inputs.CustomAnomaliesScopeHostNameArgs>? _hostNames;

        /// <summary>
        /// A scope filter for the related host name
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeHostNameArgs> HostNames
        {
            get => _hostNames ?? (_hostNames = new InputList<Inputs.CustomAnomaliesScopeHostNameArgs>());
            set => _hostNames = value;
        }

        [Input("managementZones")]
        private InputList<Inputs.CustomAnomaliesScopeManagementZoneArgs>? _managementZones;

        /// <summary>
        /// A scope filter for a management zone identifier
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeManagementZoneArgs> ManagementZones
        {
            get => _managementZones ?? (_managementZones = new InputList<Inputs.CustomAnomaliesScopeManagementZoneArgs>());
            set => _managementZones = value;
        }

        [Input("names")]
        private InputList<Inputs.CustomAnomaliesScopeNameArgs>? _names;

        /// <summary>
        /// A scope filter for a monitored entity name
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeNameArgs> Names
        {
            get => _names ?? (_names = new InputList<Inputs.CustomAnomaliesScopeNameArgs>());
            set => _names = value;
        }

        [Input("processGroupIds")]
        private InputList<Inputs.CustomAnomaliesScopeProcessGroupIdArgs>? _processGroupIds;

        /// <summary>
        /// A scope filter for a process group identifier
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeProcessGroupIdArgs> ProcessGroupIds
        {
            get => _processGroupIds ?? (_processGroupIds = new InputList<Inputs.CustomAnomaliesScopeProcessGroupIdArgs>());
            set => _processGroupIds = value;
        }

        [Input("processGroupNames")]
        private InputList<Inputs.CustomAnomaliesScopeProcessGroupNameArgs>? _processGroupNames;

        /// <summary>
        /// A scope filter for the related process group name
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeProcessGroupNameArgs> ProcessGroupNames
        {
            get => _processGroupNames ?? (_processGroupNames = new InputList<Inputs.CustomAnomaliesScopeProcessGroupNameArgs>());
            set => _processGroupNames = value;
        }

        [Input("scopes")]
        private InputList<Inputs.CustomAnomaliesScopeScopeArgs>? _scopes;

        /// <summary>
        /// A generic scope filter
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeScopeArgs> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<Inputs.CustomAnomaliesScopeScopeArgs>());
            set => _scopes = value;
        }

        [Input("tags")]
        private InputList<Inputs.CustomAnomaliesScopeTagArgs>? _tags;

        /// <summary>
        /// A scope filter for tags on entities
        /// </summary>
        public InputList<Inputs.CustomAnomaliesScopeTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.CustomAnomaliesScopeTagArgs>());
            set => _tags = value;
        }

        public CustomAnomaliesScopeArgs()
        {
        }
        public static new CustomAnomaliesScopeArgs Empty => new CustomAnomaliesScopeArgs();
    }
}
