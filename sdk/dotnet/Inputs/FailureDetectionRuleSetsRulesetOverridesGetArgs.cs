// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class FailureDetectionRuleSetsRulesetOverridesGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Define escaped exceptions that should force success.. Evaluated expression: `iAny(`span.events`[][`span_event.name`] == "exception" and `span.events`[][`exception.escaped`] != false)`
        /// 
        /// Failure detection result: `reason="exception"`, `verdict="success"`, `exception_ids`
        /// </summary>
        [Input("forceSuccessOnExceptions")]
        public Input<Inputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnExceptionsGetArgs>? ForceSuccessOnExceptions { get; set; }

        /// <summary>
        /// Evaluated attribute: `rpc.grpc.status_code`
        /// 
        /// Failure detection result: `reason="grpc_code"`, `verdict="success"`
        /// </summary>
        [Input("forceSuccessOnGrpcResponseStatusCodes")]
        public Input<Inputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnGrpcResponseStatusCodesGetArgs>? ForceSuccessOnGrpcResponseStatusCodes { get; set; }

        /// <summary>
        /// Evaluated attribute: `http.response.status_code`
        /// 
        /// Failure detection result: `reason="http_code"`, `verdict="success"`
        /// </summary>
        [Input("forceSuccessOnHttpResponseStatusCodes")]
        public Input<Inputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnHttpResponseStatusCodesGetArgs>? ForceSuccessOnHttpResponseStatusCodes { get; set; }

        /// <summary>
        /// Evaluated attribute: `span.status_code`
        /// </summary>
        [Input("forceSuccessOnSpanStatusOk", required: true)]
        public Input<Inputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnSpanStatusOkGetArgs> ForceSuccessOnSpanStatusOk { get; set; } = null!;

        /// <summary>
        /// Override failures based on span and request attribute conditions.. Failure detection result: `reason="custom_rule"`, `verdict="success"`, `custom_rule_name`
        /// </summary>
        [Input("forceSuccessWithCustomRules")]
        public Input<Inputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessWithCustomRulesGetArgs>? ForceSuccessWithCustomRules { get; set; }

        public FailureDetectionRuleSetsRulesetOverridesGetArgs()
        {
        }
        public static new FailureDetectionRuleSetsRulesetOverridesGetArgs Empty => new FailureDetectionRuleSetsRulesetOverridesGetArgs();
    }
}
