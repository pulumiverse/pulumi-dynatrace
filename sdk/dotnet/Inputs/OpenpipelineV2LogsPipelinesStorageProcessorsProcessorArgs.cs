// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class OpenpipelineV2LogsPipelinesStorageProcessorsProcessorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Azure log forwarding processor attributes
        /// </summary>
        [Input("azureLogForwarding")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorAzureLogForwardingArgs>? AzureLogForwarding { get; set; }

        /// <summary>
        /// Bizevent extraction processor attributes
        /// </summary>
        [Input("bizevent")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorBizeventArgs>? Bizevent { get; set; }

        /// <summary>
        /// Bucket assignment processor attributes
        /// </summary>
        [Input("bucketAssignment")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorBucketAssignmentArgs>? BucketAssignment { get; set; }

        /// <summary>
        /// Cost allocation processor attributes
        /// </summary>
        [Input("costAllocation")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorCostAllocationArgs>? CostAllocation { get; set; }

        /// <summary>
        /// Counter metric processor attributes
        /// </summary>
        [Input("counterMetric")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorCounterMetricArgs>? CounterMetric { get; set; }

        /// <summary>
        /// Davis event extraction processor attributes
        /// </summary>
        [Input("davis")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorDavisArgs>? Davis { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// DQL processor attributes
        /// </summary>
        [Input("dql")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorDqlArgs>? Dql { get; set; }

        /// <summary>
        /// This setting is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled", required: true)]
        public Input<bool> Enabled { get; set; } = null!;

        /// <summary>
        /// Fields add processor attributes
        /// </summary>
        [Input("fieldsAdd")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorFieldsAddArgs>? FieldsAdd { get; set; }

        /// <summary>
        /// Fields remove processor attributes
        /// </summary>
        [Input("fieldsRemove")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorFieldsRemoveArgs>? FieldsRemove { get; set; }

        /// <summary>
        /// Fields rename processor attributes
        /// </summary>
        [Input("fieldsRename")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorFieldsRenameArgs>? FieldsRename { get; set; }

        /// <summary>
        /// Histogram metric processor attributes
        /// </summary>
        [Input("histogramMetric")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorHistogramMetricArgs>? HistogramMetric { get; set; }

        /// <summary>
        /// Processor identifier
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// [See our documentation](https://dt-url.net/bp234rv)
        /// </summary>
        [Input("matcher")]
        public Input<string>? Matcher { get; set; }

        /// <summary>
        /// Product allocation processor attributes
        /// </summary>
        [Input("productAllocation")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorProductAllocationArgs>? ProductAllocation { get; set; }

        /// <summary>
        /// Sample data
        /// </summary>
        [Input("sampleData")]
        public Input<string>? SampleData { get; set; }

        /// <summary>
        /// Sampling-aware counter metric processor attributes
        /// </summary>
        [Input("samplingAwareCounterMetric")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorSamplingAwareCounterMetricArgs>? SamplingAwareCounterMetric { get; set; }

        /// <summary>
        /// Sampling aware value metric processor attributes
        /// </summary>
        [Input("samplingAwareValueMetric")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorSamplingAwareValueMetricArgs>? SamplingAwareValueMetric { get; set; }

        /// <summary>
        /// Security context processor attributes
        /// </summary>
        [Input("securityContext")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorSecurityContextArgs>? SecurityContext { get; set; }

        /// <summary>
        /// Security event extraction processor attributes
        /// </summary>
        [Input("securityEvent")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorSecurityEventArgs>? SecurityEvent { get; set; }

        /// <summary>
        /// Technology processor attributes
        /// </summary>
        [Input("technology")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorTechnologyArgs>? Technology { get; set; }

        /// <summary>
        /// Possible Values: `AzureLogForwarding`, `Bizevent`, `BucketAssignment`, `CostAllocation`, `CounterMetric`, `Davis`, `Dql`, `Drop`, `FieldsAdd`, `FieldsRemove`, `FieldsRename`, `HistogramMetric`, `NoStorage`, `ProductAllocation`, `SamplingAwareCounterMetric`, `SamplingAwareValueMetric`, `SecurityContext`, `SecurityEvent`, `Technology`, `ValueMetric`
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Value metric processor attributes
        /// </summary>
        [Input("valueMetric")]
        public Input<Inputs.OpenpipelineV2LogsPipelinesStorageProcessorsProcessorValueMetricArgs>? ValueMetric { get; set; }

        public OpenpipelineV2LogsPipelinesStorageProcessorsProcessorArgs()
        {
        }
        public static new OpenpipelineV2LogsPipelinesStorageProcessorsProcessorArgs Empty => new OpenpipelineV2LogsPipelinesStorageProcessorsProcessorArgs();
    }
}
