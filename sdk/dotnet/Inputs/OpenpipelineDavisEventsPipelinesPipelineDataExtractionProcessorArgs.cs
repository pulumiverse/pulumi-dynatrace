// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Processor to extract a Azure log.
        /// </summary>
        [Input("azureLogForwardingProcessor")]
        public Input<Inputs.OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorAzureLogForwardingProcessorArgs>? AzureLogForwardingProcessor { get; set; }

        /// <summary>
        /// Processor to extract a bizevent.
        /// Fields event.type and event.provider can only be assigned to a constant or field value.
        /// A multi-value constant is not supported for those fields.
        /// </summary>
        [Input("bizeventExtractionProcessor")]
        public Input<Inputs.OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorBizeventExtractionProcessorArgs>? BizeventExtractionProcessor { get; set; }

        /// <summary>
        /// Processor to apply a DQL script
        /// </summary>
        [Input("davisEventExtractionProcessor")]
        public Input<Inputs.OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorDavisEventExtractionProcessorArgs>? DavisEventExtractionProcessor { get; set; }

        /// <summary>
        /// Processor to extract a security event.
        /// </summary>
        [Input("securityEventExtractionProcessor")]
        public Input<Inputs.OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorSecurityEventExtractionProcessorArgs>? SecurityEventExtractionProcessor { get; set; }

        public OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorArgs()
        {
        }
        public static new OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorArgs Empty => new OpenpipelineDavisEventsPipelinesPipelineDataExtractionProcessorArgs();
    }
}
