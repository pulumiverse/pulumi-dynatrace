// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class AutomationWorkflowTriggerEventConfigDavisProblemArgs : global::Pulumi.ResourceArgs
    {
        [Input("categories", required: true)]
        private InputList<Inputs.AutomationWorkflowTriggerEventConfigDavisProblemCategoryArgs>? _categories;
        public InputList<Inputs.AutomationWorkflowTriggerEventConfigDavisProblemCategoryArgs> Categories
        {
            get => _categories ?? (_categories = new InputList<Inputs.AutomationWorkflowTriggerEventConfigDavisProblemCategoryArgs>());
            set => _categories = value;
        }

        [Input("customFilter")]
        public Input<string>? CustomFilter { get; set; }

        [Input("entityTags")]
        private InputMap<string>? _entityTags;

        /// <summary>
        /// key/value pairs for entity tags to match for. For tags that don't require a value, just specify an empty string as value. Omit this attribute if all entities should match
        /// </summary>
        public InputMap<string> EntityTags
        {
            get => _entityTags ?? (_entityTags = new InputMap<string>());
            set => _entityTags = value;
        }

        /// <summary>
        /// Specifies whether all or just any of the configured entity tags need to match. Possible values: `All` and `Any`. Omit this attribute if all entities should match
        /// </summary>
        [Input("entityTagsMatch")]
        public Input<string>? EntityTagsMatch { get; set; }

        /// <summary>
        /// If set to `True` closing a problem also is considered an event that triggers the execution
        /// </summary>
        [Input("onProblemClose")]
        public Input<bool>? OnProblemClose { get; set; }

        public AutomationWorkflowTriggerEventConfigDavisProblemArgs()
        {
        }
        public static new AutomationWorkflowTriggerEventConfigDavisProblemArgs Empty => new AutomationWorkflowTriggerEventConfigDavisProblemArgs();
    }
}
