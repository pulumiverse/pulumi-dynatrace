// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class EndpointDetectionRulesRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Limits the scope of the endpoint detection rule using [DQL matcher](https://dt-url.net/l603wby) conditions on span and resource attributes.. A rule is applied only if the condition matches, otherwise the ruleset evaluation continues.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specify attribute placeholders in curly braces, e.g. {http.route} or {rpc.method}.. Attribute value placeholders should be specified in curly braces, e.g. {http.route}, {rpc.method}. All attributes used in the placeholder are required for the rule to apply. If any of them is missing, the rule will not be applied and ruleset evaluation continues.
        /// 
        /// If the resolved endpoint name on a given span is empty, the request will be ignored.
        /// </summary>
        [Input("endpointNameTemplate")]
        public Input<string>? EndpointNameTemplate { get; set; }

        /// <summary>
        /// Possible Values: `DETECT_REQUEST_ON_ENDPOINT`, `SUPPRESS_REQUEST`
        /// </summary>
        [Input("ifConditionMatches", required: true)]
        public Input<string> IfConditionMatches { get; set; } = null!;

        /// <summary>
        /// Rule name
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        public EndpointDetectionRulesRuleArgs()
        {
        }
        public static new EndpointDetectionRulesRuleArgs Empty => new EndpointDetectionRulesRuleArgs();
    }
}
