// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class FailureDetectionRuleSetsRulesetGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Limits the scope of the failure detection ruleset using [DQL matcher](https://dt-url.net/l603wby) conditions on span and resource attributes.. A ruleset is applied only if the condition matches, otherwise the evaluation continues.
        /// 
        /// If empty, the condition will always match.
        /// </summary>
        [Input("condition")]
        public Input<string>? Condition { get; set; }

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Define failure reasons based on span and request attributes.. Failure detection result: `reason="CustomRule"`, `verdict="failure"`, `CustomRuleName`
        /// </summary>
        [Input("failOnCustomRules")]
        public Input<Inputs.FailureDetectionRuleSetsRulesetFailOnCustomRulesGetArgs>? FailOnCustomRules { get; set; }

        /// <summary>
        /// Evaluated expression: `iAny(`span.events`[][`span_event.name`] == "exception" and`span.events`[][`exception.escaped`] != false)`
        /// </summary>
        [Input("failOnExceptions", required: true)]
        public Input<Inputs.FailureDetectionRuleSetsRulesetFailOnExceptionsGetArgs> FailOnExceptions { get; set; } = null!;

        /// <summary>
        /// Evaluated attribute: `rpc.grpc.status_code`
        /// 
        /// Failure detection result: `reason="GrpcCode"`, `verdict="failure"`
        /// </summary>
        [Input("failOnGrpcStatusCodes", required: true)]
        public Input<Inputs.FailureDetectionRuleSetsRulesetFailOnGrpcStatusCodesGetArgs> FailOnGrpcStatusCodes { get; set; } = null!;

        /// <summary>
        /// Evaluated attribute: `http.response.status_code`
        /// 
        /// Failure detection result: `reason="HttpCode"`, `verdict="failure"`
        /// </summary>
        [Input("failOnHttpResponseStatusCodes", required: true)]
        public Input<Inputs.FailureDetectionRuleSetsRulesetFailOnHttpResponseStatusCodesGetArgs> FailOnHttpResponseStatusCodes { get; set; } = null!;

        /// <summary>
        /// Evaluated attribute: `span.status_code`
        /// 
        /// Failure detection result: `reason="SpanStatus"`, `verdict="failure"`
        /// </summary>
        [Input("failOnSpanStatusError", required: true)]
        public Input<Inputs.FailureDetectionRuleSetsRulesetFailOnSpanStatusErrorGetArgs> FailOnSpanStatusError { get; set; } = null!;

        /// <summary>
        /// no documentation available
        /// </summary>
        [Input("overrides", required: true)]
        public Input<Inputs.FailureDetectionRuleSetsRulesetOverridesGetArgs> Overrides { get; set; } = null!;

        /// <summary>
        /// Ruleset name
        /// </summary>
        [Input("rulesetName", required: true)]
        public Input<string> RulesetName { get; set; } = null!;

        public FailureDetectionRuleSetsRulesetGetArgs()
        {
        }
        public static new FailureDetectionRuleSetsRulesetGetArgs Empty => new FailureDetectionRuleSetsRulesetGetArgs();
    }
}
