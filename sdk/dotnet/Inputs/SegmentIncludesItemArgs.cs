// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Inputs
{

    public sealed class SegmentIncludesItemArgs : global::Pulumi.ResourceArgs
    {
        [Input("applyTos")]
        private InputList<string>? _applyTos;

        /// <summary>
        /// [Experimental] The tables that the entity-filter will be applied to`
        /// </summary>
        public InputList<string> ApplyTos
        {
            get => _applyTos ?? (_applyTos = new InputList<string>());
            set => _applyTos = value;
        }

        /// <summary>
        /// The data object that the filter will be applied to. Use '*all*data_object' to apply it to all dataObjects
        /// </summary>
        [Input("dataObject", required: true)]
        public Input<string> DataObject { get; set; } = null!;

        /// <summary>
        /// Data will be filtered by this value
        /// </summary>
        [Input("filter", required: true)]
        public Input<string> Filter { get; set; } = null!;

        /// <summary>
        /// [Experimental] The relationship of an include which has to be be specified when the data object is an entity view
        /// </summary>
        [Input("relationship")]
        public Input<Inputs.SegmentIncludesItemRelationshipArgs>? Relationship { get; set; }

        public SegmentIncludesItemArgs()
        {
        }
        public static new SegmentIncludesItemArgs Empty => new SegmentIncludesItemArgs();
    }
}
