// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/serviceAnomalies:ServiceAnomalies")]
    public partial class ServiceAnomalies : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.
        /// </summary>
        [Output("failureRates")]
        public Output<Outputs.ServiceAnomaliesFailureRates?> FailureRates { get; private set; } = null!;

        /// <summary>
        /// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
        /// </summary>
        [Output("load")]
        public Output<Outputs.ServiceAnomaliesLoad?> Load { get; private set; } = null!;

        /// <summary>
        /// The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.
        /// </summary>
        [Output("loadDrops")]
        public Output<Outputs.ServiceAnomaliesLoadDrops?> LoadDrops { get; private set; } = null!;

        /// <summary>
        /// Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.
        /// </summary>
        [Output("responseTimes")]
        public Output<Outputs.ServiceAnomaliesResponseTimes?> ResponseTimes { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceAnomalies resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceAnomalies(string name, ServiceAnomaliesArgs? args = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/serviceAnomalies:ServiceAnomalies", name, args ?? new ServiceAnomaliesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceAnomalies(string name, Input<string> id, ServiceAnomaliesState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/serviceAnomalies:ServiceAnomalies", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceAnomalies resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceAnomalies Get(string name, Input<string> id, ServiceAnomaliesState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceAnomalies(name, id, state, options);
        }
    }

    public sealed class ServiceAnomaliesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.
        /// </summary>
        [Input("failureRates")]
        public Input<Inputs.ServiceAnomaliesFailureRatesArgs>? FailureRates { get; set; }

        /// <summary>
        /// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
        /// </summary>
        [Input("load")]
        public Input<Inputs.ServiceAnomaliesLoadArgs>? Load { get; set; }

        /// <summary>
        /// The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.
        /// </summary>
        [Input("loadDrops")]
        public Input<Inputs.ServiceAnomaliesLoadDropsArgs>? LoadDrops { get; set; }

        /// <summary>
        /// Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.
        /// </summary>
        [Input("responseTimes")]
        public Input<Inputs.ServiceAnomaliesResponseTimesArgs>? ResponseTimes { get; set; }

        public ServiceAnomaliesArgs()
        {
        }
        public static new ServiceAnomaliesArgs Empty => new ServiceAnomaliesArgs();
    }

    public sealed class ServiceAnomaliesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration of failure rate increase detection. Detecting failure rate increases will be disabled if this block is omitted.
        /// </summary>
        [Input("failureRates")]
        public Input<Inputs.ServiceAnomaliesFailureRatesGetArgs>? FailureRates { get; set; }

        /// <summary>
        /// The configuration of load spikes detection. Detecting load spikes will be disabled if this block is omitted.
        /// </summary>
        [Input("load")]
        public Input<Inputs.ServiceAnomaliesLoadGetArgs>? Load { get; set; }

        /// <summary>
        /// The configuration of load drops detection. Detecting load drops will be disabled if this block is omitted.
        /// </summary>
        [Input("loadDrops")]
        public Input<Inputs.ServiceAnomaliesLoadDropsGetArgs>? LoadDrops { get; set; }

        /// <summary>
        /// Configuration of response time degradation detection. Detecting response time degradation will be disabled if this block is omitted.
        /// </summary>
        [Input("responseTimes")]
        public Input<Inputs.ServiceAnomaliesResponseTimesGetArgs>? ResponseTimes { get; set; }

        public ServiceAnomaliesState()
        {
        }
        public static new ServiceAnomaliesState Empty => new ServiceAnomaliesState();
    }
}
