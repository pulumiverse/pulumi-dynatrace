// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    /// <summary>
    /// &gt; **Dynatrace SaaS only**
    /// 
    /// &gt; To utilize this resource, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **Allow IAM policy configuration for environments** (`iam-policies-management`) and **View environments** (`account-env-read`).
    /// 
    /// &gt; This resource is excluded by default in the export utility, please explicitly specify the resource to retrieve existing configuration.
    /// 
    /// ## Dynatrace Documentation
    /// 
    /// - Dynatrace IAM Group Permissions - https://docs.dynatrace.com/docs/manage/identity-access-management/permission-management/manage-user-permissions-policies
    /// 
    /// - Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started
    /// 
    /// ## Resource Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Dynatrace = Pulumiverse.Dynatrace;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var thisIamPolicyBoundary = new Dynatrace.IamPolicyBoundary("thisIamPolicyBoundary", new()
    ///     {
    ///         Query = "environment:management-zone startsWith \"[Foo]\";",
    ///     });
    /// 
    ///     var thisIamGroup = new Dynatrace.IamGroup("thisIamGroup");
    /// 
    ///     var thisIamPolicy = new Dynatrace.IamPolicy("thisIamPolicy", new()
    ///     {
    ///         Account = "########-####-####-####-############",
    ///         StatementQuery = "ALLOW settings:objects:read, settings:schemas:read WHERE settings:schemaId = \"#########\";",
    ///     });
    /// 
    ///     var thisIamPolicyBindingsV2 = new Dynatrace.IamPolicyBindingsV2("thisIamPolicyBindingsV2", new()
    ///     {
    ///         Environment = "########",
    ///         Group = thisIamGroup.Id,
    ///         Policies = new[]
    ///         {
    ///             new Dynatrace.Inputs.IamPolicyBindingsV2PolicyArgs
    ///             {
    ///                 Id = thisIamPolicy.Id,
    ///                 Boundaries = new[]
    ///                 {
    ///                     thisIamPolicyBoundary.Id,
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DynatraceResourceType("dynatrace:index/iamPolicyBoundary:IamPolicyBoundary")]
    public partial class IamPolicyBoundary : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the policy
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The boundary query
        /// </summary>
        [Output("query")]
        public Output<string> Query { get; private set; } = null!;


        /// <summary>
        /// Create a IamPolicyBoundary resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamPolicyBoundary(string name, IamPolicyBoundaryArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/iamPolicyBoundary:IamPolicyBoundary", name, args ?? new IamPolicyBoundaryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamPolicyBoundary(string name, Input<string> id, IamPolicyBoundaryState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/iamPolicyBoundary:IamPolicyBoundary", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamPolicyBoundary resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamPolicyBoundary Get(string name, Input<string> id, IamPolicyBoundaryState? state = null, CustomResourceOptions? options = null)
        {
            return new IamPolicyBoundary(name, id, state, options);
        }
    }

    public sealed class IamPolicyBoundaryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the policy
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The boundary query
        /// </summary>
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        public IamPolicyBoundaryArgs()
        {
        }
        public static new IamPolicyBoundaryArgs Empty => new IamPolicyBoundaryArgs();
    }

    public sealed class IamPolicyBoundaryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the policy
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The boundary query
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        public IamPolicyBoundaryState()
        {
        }
        public static new IamPolicyBoundaryState Empty => new IamPolicyBoundaryState();
    }
}
