// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/rumProviderBreakdown:RumProviderBreakdown")]
    public partial class RumProviderBreakdown : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Domain name pattern
        /// </summary>
        [Output("domainNamePatternList")]
        public Output<Outputs.RumProviderBreakdownDomainNamePatternList> DomainNamePatternList { get; private set; } = null!;

        /// <summary>
        /// Specify an URL for the provider's brand icon
        /// </summary>
        [Output("iconUrl")]
        public Output<string?> IconUrl { get; private set; } = null!;

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Output("insertAfter")]
        public Output<string> InsertAfter { get; private set; } = null!;

        /// <summary>
        /// Send the patterns of this provider to Dynatrace to help us improve 3rd-party detection.
        /// </summary>
        [Output("reportPublicImprovement")]
        public Output<bool> ReportPublicImprovement { get; private set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Output("resourceName")]
        public Output<string> ResourceName { get; private set; } = null!;

        /// <summary>
        /// Possible Values: `FirstParty`, `ThirdParty`, `Cdn`
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;


        /// <summary>
        /// Create a RumProviderBreakdown resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RumProviderBreakdown(string name, RumProviderBreakdownArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/rumProviderBreakdown:RumProviderBreakdown", name, args ?? new RumProviderBreakdownArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RumProviderBreakdown(string name, Input<string> id, RumProviderBreakdownState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/rumProviderBreakdown:RumProviderBreakdown", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RumProviderBreakdown resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RumProviderBreakdown Get(string name, Input<string> id, RumProviderBreakdownState? state = null, CustomResourceOptions? options = null)
        {
            return new RumProviderBreakdown(name, id, state, options);
        }
    }

    public sealed class RumProviderBreakdownArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain name pattern
        /// </summary>
        [Input("domainNamePatternList", required: true)]
        public Input<Inputs.RumProviderBreakdownDomainNamePatternListArgs> DomainNamePatternList { get; set; } = null!;

        /// <summary>
        /// Specify an URL for the provider's brand icon
        /// </summary>
        [Input("iconUrl")]
        public Input<string>? IconUrl { get; set; }

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// Send the patterns of this provider to Dynatrace to help us improve 3rd-party detection.
        /// </summary>
        [Input("reportPublicImprovement", required: true)]
        public Input<bool> ReportPublicImprovement { get; set; } = null!;

        /// <summary>
        /// Resource name
        /// </summary>
        [Input("resourceName", required: true)]
        public Input<string> ResourceName { get; set; } = null!;

        /// <summary>
        /// Possible Values: `FirstParty`, `ThirdParty`, `Cdn`
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public RumProviderBreakdownArgs()
        {
        }
        public static new RumProviderBreakdownArgs Empty => new RumProviderBreakdownArgs();
    }

    public sealed class RumProviderBreakdownState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain name pattern
        /// </summary>
        [Input("domainNamePatternList")]
        public Input<Inputs.RumProviderBreakdownDomainNamePatternListGetArgs>? DomainNamePatternList { get; set; }

        /// <summary>
        /// Specify an URL for the provider's brand icon
        /// </summary>
        [Input("iconUrl")]
        public Input<string>? IconUrl { get; set; }

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// Send the patterns of this provider to Dynatrace to help us improve 3rd-party detection.
        /// </summary>
        [Input("reportPublicImprovement")]
        public Input<bool>? ReportPublicImprovement { get; set; }

        /// <summary>
        /// Resource name
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// Possible Values: `FirstParty`, `ThirdParty`, `Cdn`
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        public RumProviderBreakdownState()
        {
        }
        public static new RumProviderBreakdownState Empty => new RumProviderBreakdownState();
    }
}
