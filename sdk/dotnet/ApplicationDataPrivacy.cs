// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/applicationDataPrivacy:ApplicationDataPrivacy")]
    public partial class ApplicationDataPrivacy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) Set to `True` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
        /// </summary>
        [Output("dataCaptureOptIn")]
        public Output<bool?> DataCaptureOptIn { get; private set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) How to handle the "Do Not Track" header:
        /// </summary>
        [Output("doNotTrackBehaviour")]
        public Output<string> DoNotTrackBehaviour { get; private set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) Set to `True` to set persistent cookie in order to recognize returning devices
        /// </summary>
        [Output("persistentCookieForUserTracking")]
        public Output<bool?> PersistentCookieForUserTracking { get; private set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay
        /// </summary>
        [Output("sessionReplayDataPrivacy")]
        public Output<Outputs.ApplicationDataPrivacySessionReplayDataPrivacy> SessionReplayDataPrivacy { get; private set; } = null!;

        /// <summary>
        /// Dynatrace entity ID of the web application
        /// </summary>
        [Output("webApplicationId")]
        public Output<string> WebApplicationId { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationDataPrivacy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationDataPrivacy(string name, ApplicationDataPrivacyArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/applicationDataPrivacy:ApplicationDataPrivacy", name, args ?? new ApplicationDataPrivacyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationDataPrivacy(string name, Input<string> id, ApplicationDataPrivacyState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/applicationDataPrivacy:ApplicationDataPrivacy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationDataPrivacy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationDataPrivacy Get(string name, Input<string> id, ApplicationDataPrivacyState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationDataPrivacy(name, id, state, options);
        }
    }

    public sealed class ApplicationDataPrivacyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) Set to `True` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
        /// </summary>
        [Input("dataCaptureOptIn")]
        public Input<bool>? DataCaptureOptIn { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) How to handle the "Do Not Track" header:
        /// </summary>
        [Input("doNotTrackBehaviour", required: true)]
        public Input<string> DoNotTrackBehaviour { get; set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) Set to `True` to set persistent cookie in order to recognize returning devices
        /// </summary>
        [Input("persistentCookieForUserTracking")]
        public Input<bool>? PersistentCookieForUserTracking { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay
        /// </summary>
        [Input("sessionReplayDataPrivacy", required: true)]
        public Input<Inputs.ApplicationDataPrivacySessionReplayDataPrivacyArgs> SessionReplayDataPrivacy { get; set; } = null!;

        /// <summary>
        /// Dynatrace entity ID of the web application
        /// </summary>
        [Input("webApplicationId", required: true)]
        public Input<string> WebApplicationId { get; set; } = null!;

        public ApplicationDataPrivacyArgs()
        {
        }
        public static new ApplicationDataPrivacyArgs Empty => new ApplicationDataPrivacyArgs();
    }

    public sealed class ApplicationDataPrivacyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) Set to `True` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
        /// </summary>
        [Input("dataCaptureOptIn")]
        public Input<bool>? DataCaptureOptIn { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) How to handle the "Do Not Track" header:
        /// </summary>
        [Input("doNotTrackBehaviour")]
        public Input<string>? DoNotTrackBehaviour { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.DataPrivacy`) Set to `True` to set persistent cookie in order to recognize returning devices
        /// </summary>
        [Input("persistentCookieForUserTracking")]
        public Input<bool>? PersistentCookieForUserTracking { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay
        /// </summary>
        [Input("sessionReplayDataPrivacy")]
        public Input<Inputs.ApplicationDataPrivacySessionReplayDataPrivacyGetArgs>? SessionReplayDataPrivacy { get; set; }

        /// <summary>
        /// Dynatrace entity ID of the web application
        /// </summary>
        [Input("webApplicationId")]
        public Input<string>? WebApplicationId { get; set; }

        public ApplicationDataPrivacyState()
        {
        }
        public static new ApplicationDataPrivacyState Empty => new ApplicationDataPrivacyState();
    }
}
