// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    /// <summary>
    /// &gt; `dynatrace.AutotagV2` is the primary resource to manage auto tags. This particular resource allows you to manage a subset of tags of a given auto tag ID. The benefit of this is that it allows the flexibility of multiple users to manage the same automatically applied tag.
    /// 
    /// &gt; This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)
    /// 
    /// ## Dynatrace Documentation
    /// 
    /// - Define and apply tags - https://www.dynatrace.com/support/help/how-to-use-dynatrace/tags-and-metadata/setup/how-to-define-tags
    /// 
    /// - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:tags.auto-tagging`)
    /// 
    /// The full documentation of the export feature is available [here](https://dt-url.net/h203qmc).
    /// 
    /// ## Resource Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Dynatrace = Pulumiverse.Dynatrace;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sampleAutotagV2 = new Dynatrace.AutotagV2("sampleAutotagV2", new()
    ///     {
    ///         RulesMaintainedExternally = true,
    ///     });
    /// 
    ///     //Be careful when maintaining `dynatrace_autotag_rules` in separate modules.
    ///     //Do not execute `pulumi up` in parallel when several modules contain 
    ///     //`dynatrace_autotag_rules` referring to the same `dynatrace_autotag_v2`.
    ///     var sampleAutotagRules = new Dynatrace.AutotagRules("sampleAutotagRules", new()
    ///     {
    ///         AutoTagId = sampleAutotagV2.Id,
    ///         Rules = new Dynatrace.Inputs.AutotagRulesRulesArgs
    ///         {
    ///             Rules = new[]
    ///             {
    ///                 new Dynatrace.Inputs.AutotagRulesRulesRuleArgs
    ///                 {
    ///                     Type = "SELECTOR",
    ///                     Enabled = true,
    ///                     EntitySelector = "type(SERVICE),tag(sample)",
    ///                     ValueFormat = "disabled",
    ///                     ValueNormalization = "Leave text as-is",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DynatraceResourceType("dynatrace:index/autotagRules:AutotagRules")]
    public partial class AutotagRules : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Automatically applied tag ID
        /// </summary>
        [Output("autoTagId")]
        public Output<string> AutoTagId { get; private set; } = null!;

        /// <summary>
        /// For internal use: current state of rules in JSON format
        /// </summary>
        [Output("currentState")]
        public Output<string> CurrentState { get; private set; } = null!;

        /// <summary>
        /// Rules
        /// </summary>
        [Output("rules")]
        public Output<Outputs.AutotagRulesRules?> Rules { get; private set; } = null!;


        /// <summary>
        /// Create a AutotagRules resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutotagRules(string name, AutotagRulesArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/autotagRules:AutotagRules", name, args ?? new AutotagRulesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutotagRules(string name, Input<string> id, AutotagRulesState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/autotagRules:AutotagRules", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutotagRules resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutotagRules Get(string name, Input<string> id, AutotagRulesState? state = null, CustomResourceOptions? options = null)
        {
            return new AutotagRules(name, id, state, options);
        }
    }

    public sealed class AutotagRulesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Automatically applied tag ID
        /// </summary>
        [Input("autoTagId", required: true)]
        public Input<string> AutoTagId { get; set; } = null!;

        /// <summary>
        /// For internal use: current state of rules in JSON format
        /// </summary>
        [Input("currentState")]
        public Input<string>? CurrentState { get; set; }

        /// <summary>
        /// Rules
        /// </summary>
        [Input("rules")]
        public Input<Inputs.AutotagRulesRulesArgs>? Rules { get; set; }

        public AutotagRulesArgs()
        {
        }
        public static new AutotagRulesArgs Empty => new AutotagRulesArgs();
    }

    public sealed class AutotagRulesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Automatically applied tag ID
        /// </summary>
        [Input("autoTagId")]
        public Input<string>? AutoTagId { get; set; }

        /// <summary>
        /// For internal use: current state of rules in JSON format
        /// </summary>
        [Input("currentState")]
        public Input<string>? CurrentState { get; set; }

        /// <summary>
        /// Rules
        /// </summary>
        [Input("rules")]
        public Input<Inputs.AutotagRulesRulesGetArgs>? Rules { get; set; }

        public AutotagRulesState()
        {
        }
        public static new AutotagRulesState Empty => new AutotagRulesState();
    }
}
