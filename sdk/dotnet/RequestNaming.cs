// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/requestNaming:RequestNaming")]
    public partial class RequestNaming : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The set of conditions for the request naming rule usage. 
        /// 
        ///  You can specify several conditions. The request has to match **all** the specified conditions for the rule to trigger
        /// </summary>
        [Output("conditions")]
        public Output<Outputs.RequestNamingConditions> Conditions { get; private set; } = null!;

        /// <summary>
        /// The rule is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Specifies the management zones for which this rule should be applied
        /// </summary>
        [Output("managementZones")]
        public Output<ImmutableArray<string>> ManagementZones { get; private set; } = null!;

        /// <summary>
        /// The name to be assigned to matching requests
        /// </summary>
        [Output("namingPattern")]
        public Output<string> NamingPattern { get; private set; } = null!;

        /// <summary>
        /// The list of custom placeholders to be used in the naming pattern. 
        /// 
        ///  It enables you to extract a request attribute value or other request attribute and use it in the request naming pattern.
        /// </summary>
        [Output("placeholders")]
        public Output<Outputs.RequestNamingPlaceholders?> Placeholders { get; private set; } = null!;

        /// <summary>
        /// allows for configuring properties that are not explicitly supported by the current version of this provider
        /// </summary>
        [Output("unknowns")]
        public Output<string?> Unknowns { get; private set; } = null!;


        /// <summary>
        /// Create a RequestNaming resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RequestNaming(string name, RequestNamingArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/requestNaming:RequestNaming", name, args ?? new RequestNamingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RequestNaming(string name, Input<string> id, RequestNamingState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/requestNaming:RequestNaming", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RequestNaming resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RequestNaming Get(string name, Input<string> id, RequestNamingState? state = null, CustomResourceOptions? options = null)
        {
            return new RequestNaming(name, id, state, options);
        }
    }

    public sealed class RequestNamingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The set of conditions for the request naming rule usage. 
        /// 
        ///  You can specify several conditions. The request has to match **all** the specified conditions for the rule to trigger
        /// </summary>
        [Input("conditions", required: true)]
        public Input<Inputs.RequestNamingConditionsArgs> Conditions { get; set; } = null!;

        /// <summary>
        /// The rule is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("managementZones")]
        private InputList<string>? _managementZones;

        /// <summary>
        /// Specifies the management zones for which this rule should be applied
        /// </summary>
        public InputList<string> ManagementZones
        {
            get => _managementZones ?? (_managementZones = new InputList<string>());
            set => _managementZones = value;
        }

        /// <summary>
        /// The name to be assigned to matching requests
        /// </summary>
        [Input("namingPattern", required: true)]
        public Input<string> NamingPattern { get; set; } = null!;

        /// <summary>
        /// The list of custom placeholders to be used in the naming pattern. 
        /// 
        ///  It enables you to extract a request attribute value or other request attribute and use it in the request naming pattern.
        /// </summary>
        [Input("placeholders")]
        public Input<Inputs.RequestNamingPlaceholdersArgs>? Placeholders { get; set; }

        /// <summary>
        /// allows for configuring properties that are not explicitly supported by the current version of this provider
        /// </summary>
        [Input("unknowns")]
        public Input<string>? Unknowns { get; set; }

        public RequestNamingArgs()
        {
        }
        public static new RequestNamingArgs Empty => new RequestNamingArgs();
    }

    public sealed class RequestNamingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The set of conditions for the request naming rule usage. 
        /// 
        ///  You can specify several conditions. The request has to match **all** the specified conditions for the rule to trigger
        /// </summary>
        [Input("conditions")]
        public Input<Inputs.RequestNamingConditionsGetArgs>? Conditions { get; set; }

        /// <summary>
        /// The rule is enabled (`true`) or disabled (`false`)
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("managementZones")]
        private InputList<string>? _managementZones;

        /// <summary>
        /// Specifies the management zones for which this rule should be applied
        /// </summary>
        public InputList<string> ManagementZones
        {
            get => _managementZones ?? (_managementZones = new InputList<string>());
            set => _managementZones = value;
        }

        /// <summary>
        /// The name to be assigned to matching requests
        /// </summary>
        [Input("namingPattern")]
        public Input<string>? NamingPattern { get; set; }

        /// <summary>
        /// The list of custom placeholders to be used in the naming pattern. 
        /// 
        ///  It enables you to extract a request attribute value or other request attribute and use it in the request naming pattern.
        /// </summary>
        [Input("placeholders")]
        public Input<Inputs.RequestNamingPlaceholdersGetArgs>? Placeholders { get; set; }

        /// <summary>
        /// allows for configuring properties that are not explicitly supported by the current version of this provider
        /// </summary>
        [Input("unknowns")]
        public Input<string>? Unknowns { get; set; }

        public RequestNamingState()
        {
        }
        public static new RequestNamingState Empty => new RequestNamingState();
    }
}
