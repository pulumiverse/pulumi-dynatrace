// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/platformBucket:PlatformBucket")]
    public partial class PlatformBucket : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the bucket definition when visualized within the UI
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The name / id of the bucket definition
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The retention of stored data in days
        /// </summary>
        [Output("retention")]
        public Output<int> Retention { get; private set; } = null!;

        /// <summary>
        /// The status of the bucket definition. Usually has the value `active` unless an update or delete is currently happening
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The table the bucket definition applies to. Possible values are `logs`, `spans`,	`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition
        /// </summary>
        [Output("table")]
        public Output<string> Table { get; private set; } = null!;


        /// <summary>
        /// Create a PlatformBucket resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PlatformBucket(string name, PlatformBucketArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/platformBucket:PlatformBucket", name, args ?? new PlatformBucketArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PlatformBucket(string name, Input<string> id, PlatformBucketState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/platformBucket:PlatformBucket", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PlatformBucket resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PlatformBucket Get(string name, Input<string> id, PlatformBucketState? state = null, CustomResourceOptions? options = null)
        {
            return new PlatformBucket(name, id, state, options);
        }
    }

    public sealed class PlatformBucketArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket definition when visualized within the UI
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The name / id of the bucket definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The retention of stored data in days
        /// </summary>
        [Input("retention", required: true)]
        public Input<int> Retention { get; set; } = null!;

        /// <summary>
        /// The table the bucket definition applies to. Possible values are `logs`, `spans`,	`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition
        /// </summary>
        [Input("table", required: true)]
        public Input<string> Table { get; set; } = null!;

        public PlatformBucketArgs()
        {
        }
        public static new PlatformBucketArgs Empty => new PlatformBucketArgs();
    }

    public sealed class PlatformBucketState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the bucket definition when visualized within the UI
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The name / id of the bucket definition
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The retention of stored data in days
        /// </summary>
        [Input("retention")]
        public Input<int>? Retention { get; set; }

        /// <summary>
        /// The status of the bucket definition. Usually has the value `active` unless an update or delete is currently happening
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The table the bucket definition applies to. Possible values are `logs`, `spans`,	`events` and `bizevents`. Changing this attribute will result in deleting and re-creating the bucket definition
        /// </summary>
        [Input("table")]
        public Input<string>? Table { get; set; }

        public PlatformBucketState()
        {
        }
        public static new PlatformBucketState Empty => new PlatformBucketState();
    }
}
