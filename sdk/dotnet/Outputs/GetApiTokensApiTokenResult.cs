// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class GetApiTokensApiTokenResult
    {
        /// <summary>
        /// Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
        /// </summary>
        public readonly string CreationDate;
        /// <summary>
        /// The token is enabled (true) or disabled (false), default disabled (false).
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// The expiration date of the token.
        /// </summary>
        public readonly string? ExpirationDate;
        /// <summary>
        /// Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
        /// </summary>
        public readonly string LastUsedDate;
        /// <summary>
        /// Token last used IP address.
        /// </summary>
        public readonly string LastUsedIpAddress;
        /// <summary>
        /// Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').
        /// </summary>
        public readonly string ModifiedDate;
        /// <summary>
        /// The name of the token.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The owner of the token
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// The token is a personal access token (true) or an API token (false).
        /// </summary>
        public readonly bool? PersonalAccessToken;
        /// <summary>
        /// A list of the scopes to be assigned to the token.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// The secret of the token.
        /// </summary>
        public readonly string Token;

        [OutputConstructor]
        private GetApiTokensApiTokenResult(
            string creationDate,

            bool? enabled,

            string? expirationDate,

            string lastUsedDate,

            string lastUsedIpAddress,

            string modifiedDate,

            string name,

            string owner,

            bool? personalAccessToken,

            ImmutableArray<string> scopes,

            string token)
        {
            CreationDate = creationDate;
            Enabled = enabled;
            ExpirationDate = expirationDate;
            LastUsedDate = lastUsedDate;
            LastUsedIpAddress = lastUsedIpAddress;
            ModifiedDate = modifiedDate;
            Name = name;
            Owner = owner;
            PersonalAccessToken = personalAccessToken;
            Scopes = scopes;
            Token = token;
        }
    }
}
