// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class FailureDetectionRuleSetsRuleset
    {
        /// <summary>
        /// Limits the scope of the failure detection ruleset using [DQL matcher](https://dt-url.net/l603wby) conditions on span and resource attributes.. A ruleset is applied only if the condition matches, otherwise the evaluation continues.
        /// 
        /// If empty, the condition will always match.
        /// </summary>
        public readonly string? Condition;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Define failure reasons based on span and request attributes.. Failure detection result: `reason="custom_rule"`, `verdict="failure"`, `custom_rule_name`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetFailOnCustomRules? FailOnCustomRules;
        /// <summary>
        /// Evaluated expression: `iAny(`span.events`[][`span_event.name`] == "exception" and`span.events`[][`exception.escaped`] != false)`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetFailOnExceptions FailOnExceptions;
        /// <summary>
        /// Evaluated attribute: `rpc.grpc.status_code`
        /// 
        /// Failure detection result: `reason="grpc_code"`, `verdict="failure"`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetFailOnGrpcStatusCodes FailOnGrpcStatusCodes;
        /// <summary>
        /// Evaluated attribute: `http.response.status_code`
        /// 
        /// Failure detection result: `reason="http_code"`, `verdict="failure"`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetFailOnHttpResponseStatusCodes FailOnHttpResponseStatusCodes;
        /// <summary>
        /// Evaluated attribute: `span.status_code`
        /// 
        /// Failure detection result: `reason="span_status"`, `verdict="failure"`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetFailOnSpanStatusError FailOnSpanStatusError;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetOverrides Overrides;
        /// <summary>
        /// Ruleset name
        /// </summary>
        public readonly string RulesetName;

        [OutputConstructor]
        private FailureDetectionRuleSetsRuleset(
            string? condition,

            string? description,

            Outputs.FailureDetectionRuleSetsRulesetFailOnCustomRules? failOnCustomRules,

            Outputs.FailureDetectionRuleSetsRulesetFailOnExceptions failOnExceptions,

            Outputs.FailureDetectionRuleSetsRulesetFailOnGrpcStatusCodes failOnGrpcStatusCodes,

            Outputs.FailureDetectionRuleSetsRulesetFailOnHttpResponseStatusCodes failOnHttpResponseStatusCodes,

            Outputs.FailureDetectionRuleSetsRulesetFailOnSpanStatusError failOnSpanStatusError,

            Outputs.FailureDetectionRuleSetsRulesetOverrides overrides,

            string rulesetName)
        {
            Condition = condition;
            Description = description;
            FailOnCustomRules = failOnCustomRules;
            FailOnExceptions = failOnExceptions;
            FailOnGrpcStatusCodes = failOnGrpcStatusCodes;
            FailOnHttpResponseStatusCodes = failOnHttpResponseStatusCodes;
            FailOnSpanStatusError = failOnSpanStatusError;
            Overrides = overrides;
            RulesetName = rulesetName;
        }
    }
}
