// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class AppsecNotificationSecurityProblemBasedWebhookPayload
    {
        /// <summary>
        /// This is the content your notification message will include when users view it.  
        /// In case a value of a security problem is not set, the placeholder will be replaced by an empty string.. **Note:** Security notifications contain sensitive information. Excessive usage of placeholders in the custom payload might leak information to untrusted parties.  
        ///   
        /// Available placeholders:  
        /// **{SecurityProblemId}**: The unique identifier assigned by Dynatrace, for example, "S-1234".  
        /// **{Title}**: A short summary of the type of vulnerability that was found, for example, "Remote Code Execution".  
        /// **{Description}**: A more detailed description of the vulnerability.  
        /// **{CvssScore}**: CVSS score of the identified vulnerability, for example, "10.0". Can be empty. 
        /// **{DavisSecurityScore}**: [Davis Security Score](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security/davis-security-score/) is an enhanced risk-calculation score based on the CVSS, for example, "10.0".  
        /// **{Severity}**: The security problem severity, for example, "Critical" or "Medium".  
        /// **{SecurityProblemUrl}**: URL of the security problem in Dynatrace.  
        /// **{AffectedEntities}**: Details about the entities affected by the security problem in a json array.  
        /// **{ManagementZones}**: Comma-separated list of all management zones affected by the vulnerability at the time of detection.  
        /// **{Tags}**: Comma-separated list of tags that are defined for a vulnerability's affected entities. For example: "PROD, owner:John". Assign the tag's key in square brackets: **{Tags[key]}** to get all associated values. For example: "{Tags[owner]}" will be resolved as "John". Tags without an assigned value will be resolved as empty string.  
        /// **{Exposed}**: Describes whether one or more affected process is exposed to the public Internet. Can be "true" or "false".  
        /// **{DataAssetsReachable}**: Describes whether one or more affected process can reach data assets. Can be "true" or "false".  
        /// **{ExploitAvailable}**: Describes whether there's an exploit available for the vulnerability. Can be "true" or "false".
        /// </summary>
        public readonly string Payload;

        [OutputConstructor]
        private AppsecNotificationSecurityProblemBasedWebhookPayload(string payload)
        {
            Payload = payload;
        }
    }
}
