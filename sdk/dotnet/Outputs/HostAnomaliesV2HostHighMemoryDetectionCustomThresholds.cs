// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class HostAnomaliesV2HostHighMemoryDetectionCustomThresholds
    {
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly Outputs.HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholds EventThresholds;
        /// <summary>
        /// Alert if the memory page fault rate on Unix systems is higher than this threshold for the defined amount of samples
        /// </summary>
        public readonly int PageFaultsPerSecondNonWindows;
        /// <summary>
        /// Alert if the memory page fault rate on Windows is higher than this threshold for the defined amount of samples
        /// </summary>
        public readonly int PageFaultsPerSecondWindows;
        /// <summary>
        /// Alert if the memory usage on Unix systems is higher than this threshold
        /// </summary>
        public readonly int UsedMemoryPercentageNonWindows;
        /// <summary>
        /// Alert if the memory usage on Windows is higher than this threshold
        /// </summary>
        public readonly int UsedMemoryPercentageWindows;

        [OutputConstructor]
        private HostAnomaliesV2HostHighMemoryDetectionCustomThresholds(
            Outputs.HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholds eventThresholds,

            int pageFaultsPerSecondNonWindows,

            int pageFaultsPerSecondWindows,

            int usedMemoryPercentageNonWindows,

            int usedMemoryPercentageWindows)
        {
            EventThresholds = eventThresholds;
            PageFaultsPerSecondNonWindows = pageFaultsPerSecondNonWindows;
            PageFaultsPerSecondWindows = pageFaultsPerSecondWindows;
            UsedMemoryPercentageNonWindows = usedMemoryPercentageNonWindows;
            UsedMemoryPercentageWindows = usedMemoryPercentageWindows;
        }
    }
}
