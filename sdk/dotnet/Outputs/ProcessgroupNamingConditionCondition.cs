// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class ProcessgroupNamingConditionCondition
    {
        /// <summary>
        /// Comparison for `APPLICATION_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionApplicationTypeComparison> ApplicationTypeComparisons;
        /// <summary>
        /// Comparison for `APPLICATION_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionApplicationType> ApplicationTypes;
        /// <summary>
        /// Comparison for `AZURE_COMPUTE_MODE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionAzureComputeModeComparison> AzureComputeModeComparisons;
        /// <summary>
        /// Comparison for `AZURE_COMPUTE_MODE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionAzureComputeMode> AzureComputeModes;
        /// <summary>
        /// Comparison for `AZURE_SKU` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionAzureSkuComparision> AzureSkuComparisions;
        /// <summary>
        /// Comparison for `AZURE_SKU` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionAzureSkus> AzureSkus;
        /// <summary>
        /// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionBaseComparisonBasic> BaseComparisonBasics;
        /// <summary>
        /// Fallback for not yet known type
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionBaseConditionKey> BaseConditionKeys;
        /// <summary>
        /// Comparison for `BITNESS` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionBitnessComparision> BitnessComparisions;
        /// <summary>
        /// Comparison for `BITNESS` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionBitness> Bitnesses;
        /// <summary>
        /// Comparison for `CLOUD_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCloudTypeComparison> CloudTypeComparisons;
        /// <summary>
        /// Comparison for `CLOUD_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCloudType> CloudTypes;
        /// <summary>
        /// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionComparison> Comparisons;
        /// <summary>
        /// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomApplicationTypeComparison> CustomApplicationTypeComparisons;
        /// <summary>
        /// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomApplicationType> CustomApplicationTypes;
        /// <summary>
        /// Key for Custom Host Metadata
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey> CustomHostMetadataConditionKeys;
        /// <summary>
        /// Key for Custom Host Metadata
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomHostMetadata> CustomHostMetadatas;
        /// <summary>
        /// Key for Custom Process Metadata
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey> CustomProcessMetadataConditionKeys;
        /// <summary>
        /// Key for Custom Process Metadata
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomProcessMetadata> CustomProcessMetadatas;
        /// <summary>
        /// Comparison for `DATABASE_TOPOLOGY` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionDatabaseTopology> DatabaseTopologies;
        /// <summary>
        /// Comparison for `DATABASE_TOPOLOGY` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionDatabaseTopologyComparison> DatabaseTopologyComparisons;
        /// <summary>
        /// Comparison for `DCRUM_DECODER_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionDcrumDecoderComparison> DcrumDecoderComparisons;
        /// <summary>
        /// Comparison for `DCRUM_DECODER_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionDcrumDecoder> DcrumDecoders;
        /// <summary>
        /// Comparison for `ENTITY_ID` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionEntity> Entities;
        /// <summary>
        /// Comparison for `ENTITY_ID` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionEntityIdComparison> EntityIdComparisons;
        /// <summary>
        /// Comparison for `SIMPLE_HOST_TECH` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionHostTech> HostTeches;
        /// <summary>
        /// `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionHypervisorTypeComparision> HypervisorTypeComparisions;
        /// <summary>
        /// Comparison for `HYPERVISOR_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionHypervisor> Hypervisors;
        /// <summary>
        /// Comparison for `INDEXED_NAME` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedNameComparison> IndexedNameComparisons;
        /// <summary>
        /// Comparison for `INDEXED_NAME` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedName> IndexedNames;
        /// <summary>
        /// Comparison for `INDEXED_STRING` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedStringComparison> IndexedStringComparisons;
        /// <summary>
        /// Comparison for `INDEXED_STRING` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedString> IndexedStrings;
        /// <summary>
        /// Comparison for `INDEXED_TAG` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedTagComparison> IndexedTagComparisons;
        /// <summary>
        /// Comparison for `INDEXED_TAG` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedTag> IndexedTags;
        /// <summary>
        /// Comparison for `INTEGER` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIntegerComparison> IntegerComparisons;
        /// <summary>
        /// Comparison for `INTEGER` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionInteger> Integers;
        /// <summary>
        /// Comparison for `IP_ADDRESS` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIpaddressComparison> IpaddressComparisons;
        /// <summary>
        /// Comparison for `IP_ADDRESS` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIpaddress> Ipaddresses;
        /// <summary>
        /// Fallback for not yet known type
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionKey> Keys;
        /// <summary>
        /// Comparison for `MOBILE_PLATFORM` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionMobilePlatformComparison> MobilePlatformComparisons;
        /// <summary>
        /// Comparison for `MOBILE_PLATFORM` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionMobilePlatform> MobilePlatforms;
        /// <summary>
        /// Comparison for `OS_ARCHITECTURE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionOsArch> OsArches;
        /// <summary>
        /// Comparison for `OS_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionOsType> OsTypes;
        /// <summary>
        /// Comparison for `OS_ARCHITECTURE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionOsarchitectureComparison> OsarchitectureComparisons;
        /// <summary>
        /// Comparison for `OS_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionOstypeComparison> OstypeComparisons;
        /// <summary>
        /// Comparison for `PAAS_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionPaasTypeComparison> PaasTypeComparisons;
        /// <summary>
        /// Comparison for `PAAS_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionPaasType> PaasTypes;
        /// <summary>
        /// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionProcessMetadataConditionKey> ProcessMetadataConditionKeys;
        /// <summary>
        /// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionProcessMetadata> ProcessMetadatas;
        /// <summary>
        /// Comparison for `SERVICE_TOPOLOGY` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionServiceTopology> ServiceTopologies;
        /// <summary>
        /// Comparison for `SERVICE_TOPOLOGY` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionServiceTopologyComparison> ServiceTopologyComparisons;
        /// <summary>
        /// Comparison for `SERVICE_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionServiceTypeComparison> ServiceTypeComparisons;
        /// <summary>
        /// Comparison for `SERVICE_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionServiceType> ServiceTypes;
        /// <summary>
        /// Comparison for `SIMPLE_HOST_TECH` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionSimpleHostTechComparison> SimpleHostTechComparisons;
        /// <summary>
        /// Comparison for `SIMPLE_TECH` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionSimpleTechComparison> SimpleTechComparisons;
        /// <summary>
        /// Comparison for `STRING` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionStringComparison> StringComparisons;
        /// <summary>
        /// The key for dynamic attributes of the `STRING` type
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionStringConditionKey> StringConditionKeys;
        /// <summary>
        /// The key for dynamic attributes of the `STRING` type
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionStringKey> StringKeys;
        /// <summary>
        /// Comparison for `STRING` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionString> Strings;
        /// <summary>
        /// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison> SyntheticEngineTypeComparisons;
        /// <summary>
        /// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionSyntheticEngine> SyntheticEngines;
        /// <summary>
        /// Comparison for `TAG` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionTagComparison> TagComparisons;
        /// <summary>
        /// Comparison for `TAG` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionTag> Tags;
        /// <summary>
        /// Comparison for `SIMPLE_TECH` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ProcessgroupNamingConditionConditionTech> Teches;
        /// <summary>
        /// Any attributes that aren't yet supported by this provider
        /// </summary>
        public readonly string? Unknowns;

        [OutputConstructor]
        private ProcessgroupNamingConditionCondition(
            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionApplicationTypeComparison> applicationTypeComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionApplicationType> applicationTypes,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionAzureComputeModeComparison> azureComputeModeComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionAzureComputeMode> azureComputeModes,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionAzureSkuComparision> azureSkuComparisions,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionAzureSkus> azureSkus,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionBaseComparisonBasic> baseComparisonBasics,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionBaseConditionKey> baseConditionKeys,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionBitnessComparision> bitnessComparisions,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionBitness> bitnesses,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCloudTypeComparison> cloudTypeComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCloudType> cloudTypes,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionComparison> comparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomApplicationTypeComparison> customApplicationTypeComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomApplicationType> customApplicationTypes,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey> customHostMetadataConditionKeys,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomHostMetadata> customHostMetadatas,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey> customProcessMetadataConditionKeys,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionCustomProcessMetadata> customProcessMetadatas,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionDatabaseTopology> databaseTopologies,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionDatabaseTopologyComparison> databaseTopologyComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionDcrumDecoderComparison> dcrumDecoderComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionDcrumDecoder> dcrumDecoders,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionEntity> entities,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionEntityIdComparison> entityIdComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionHostTech> hostTeches,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionHypervisorTypeComparision> hypervisorTypeComparisions,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionHypervisor> hypervisors,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedNameComparison> indexedNameComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedName> indexedNames,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedStringComparison> indexedStringComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedString> indexedStrings,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedTagComparison> indexedTagComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIndexedTag> indexedTags,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIntegerComparison> integerComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionInteger> integers,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIpaddressComparison> ipaddressComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionIpaddress> ipaddresses,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionKey> keys,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionMobilePlatformComparison> mobilePlatformComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionMobilePlatform> mobilePlatforms,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionOsArch> osArches,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionOsType> osTypes,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionOsarchitectureComparison> osarchitectureComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionOstypeComparison> ostypeComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionPaasTypeComparison> paasTypeComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionPaasType> paasTypes,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionProcessMetadataConditionKey> processMetadataConditionKeys,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionProcessMetadata> processMetadatas,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionServiceTopology> serviceTopologies,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionServiceTopologyComparison> serviceTopologyComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionServiceTypeComparison> serviceTypeComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionServiceType> serviceTypes,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionSimpleHostTechComparison> simpleHostTechComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionSimpleTechComparison> simpleTechComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionStringComparison> stringComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionStringConditionKey> stringConditionKeys,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionStringKey> stringKeys,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionString> strings,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison> syntheticEngineTypeComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionSyntheticEngine> syntheticEngines,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionTagComparison> tagComparisons,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionTag> tags,

            ImmutableArray<Outputs.ProcessgroupNamingConditionConditionTech> teches,

            string? unknowns)
        {
            ApplicationTypeComparisons = applicationTypeComparisons;
            ApplicationTypes = applicationTypes;
            AzureComputeModeComparisons = azureComputeModeComparisons;
            AzureComputeModes = azureComputeModes;
            AzureSkuComparisions = azureSkuComparisions;
            AzureSkus = azureSkus;
            BaseComparisonBasics = baseComparisonBasics;
            BaseConditionKeys = baseConditionKeys;
            BitnessComparisions = bitnessComparisions;
            Bitnesses = bitnesses;
            CloudTypeComparisons = cloudTypeComparisons;
            CloudTypes = cloudTypes;
            Comparisons = comparisons;
            CustomApplicationTypeComparisons = customApplicationTypeComparisons;
            CustomApplicationTypes = customApplicationTypes;
            CustomHostMetadataConditionKeys = customHostMetadataConditionKeys;
            CustomHostMetadatas = customHostMetadatas;
            CustomProcessMetadataConditionKeys = customProcessMetadataConditionKeys;
            CustomProcessMetadatas = customProcessMetadatas;
            DatabaseTopologies = databaseTopologies;
            DatabaseTopologyComparisons = databaseTopologyComparisons;
            DcrumDecoderComparisons = dcrumDecoderComparisons;
            DcrumDecoders = dcrumDecoders;
            Entities = entities;
            EntityIdComparisons = entityIdComparisons;
            HostTeches = hostTeches;
            HypervisorTypeComparisions = hypervisorTypeComparisions;
            Hypervisors = hypervisors;
            IndexedNameComparisons = indexedNameComparisons;
            IndexedNames = indexedNames;
            IndexedStringComparisons = indexedStringComparisons;
            IndexedStrings = indexedStrings;
            IndexedTagComparisons = indexedTagComparisons;
            IndexedTags = indexedTags;
            IntegerComparisons = integerComparisons;
            Integers = integers;
            IpaddressComparisons = ipaddressComparisons;
            Ipaddresses = ipaddresses;
            Keys = keys;
            MobilePlatformComparisons = mobilePlatformComparisons;
            MobilePlatforms = mobilePlatforms;
            OsArches = osArches;
            OsTypes = osTypes;
            OsarchitectureComparisons = osarchitectureComparisons;
            OstypeComparisons = ostypeComparisons;
            PaasTypeComparisons = paasTypeComparisons;
            PaasTypes = paasTypes;
            ProcessMetadataConditionKeys = processMetadataConditionKeys;
            ProcessMetadatas = processMetadatas;
            ServiceTopologies = serviceTopologies;
            ServiceTopologyComparisons = serviceTopologyComparisons;
            ServiceTypeComparisons = serviceTypeComparisons;
            ServiceTypes = serviceTypes;
            SimpleHostTechComparisons = simpleHostTechComparisons;
            SimpleTechComparisons = simpleTechComparisons;
            StringComparisons = stringComparisons;
            StringConditionKeys = stringConditionKeys;
            StringKeys = stringKeys;
            Strings = strings;
            SyntheticEngineTypeComparisons = syntheticEngineTypeComparisons;
            SyntheticEngines = syntheticEngines;
            TagComparisons = tagComparisons;
            Tags = tags;
            Teches = teches;
            Unknowns = unknowns;
        }
    }
}
