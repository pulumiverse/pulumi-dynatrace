// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class NotificationServiceNow
    {
        /// <summary>
        /// The configuration is enabled (`True`) or disabled (`False`)
        /// </summary>
        public readonly bool Active;
        /// <summary>
        /// The ID of the associated alerting profile
        /// </summary>
        public readonly string AlertingProfile;
        /// <summary>
        /// The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the **url** field. You can only use one of them
        /// </summary>
        public readonly string? InstanceName;
        /// <summary>
        /// The content of the ServiceNow description.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// The name of the notification configuration
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The username to the ServiceNow account
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// Send events into ServiceNow ITOM (`True`)
        /// </summary>
        public readonly bool SendEvents;
        /// <summary>
        /// Send incidents into ServiceNow ITSM (`True`)
        /// </summary>
        public readonly bool SendIncidents;
        /// <summary>
        /// allows for configuring properties that are not explicitly supported by the current version of this provider
        /// </summary>
        public readonly string? Unknowns;
        /// <summary>
        /// The URL of the on-premise ServiceNow installation.   This field is mutually exclusive with the **instanceName** field. You can only use one of them
        /// </summary>
        public readonly string? Url;
        /// <summary>
        /// The username of the ServiceNow account.   Make sure that your user account has the `RestService`, `WebRequestAdmin`, and `x_dynat_ruxit.Integration` roles
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private NotificationServiceNow(
            bool active,

            string alertingProfile,

            string? instanceName,

            string message,

            string name,

            string? password,

            bool sendEvents,

            bool sendIncidents,

            string? unknowns,

            string? url,

            string username)
        {
            Active = active;
            AlertingProfile = alertingProfile;
            InstanceName = instanceName;
            Message = message;
            Name = name;
            Password = password;
            SendEvents = sendEvents;
            SendIncidents = sendIncidents;
            Unknowns = unknowns;
            Url = url;
            Username = username;
        }
    }
}
