// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class GetSyntheticNodesNodeResult
    {
        /// <summary>
        /// The version of the Active Gate
        /// </summary>
        public readonly string ActiveGateVersion;
        /// <summary>
        /// Specifies whether the Active Gate  has the Auto update option enabled
        /// </summary>
        public readonly bool AutoUpdate;
        /// <summary>
        /// Specifies whether Browser Monitors are enabled or not
        /// </summary>
        public readonly bool BrowserMonitors;
        /// <summary>
        /// The health check status of the synthetic node
        /// </summary>
        public readonly string HealthCheckStatus;
        /// <summary>
        /// The hostname of a node
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// The ID of a node for usage within `dynatrace.SyntheticLocation`
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The known IP addresses of the node
        /// </summary>
        public readonly ImmutableArray<string> Ips;
        /// <summary>
        /// Specifies whether the Active Gate has the One Agent routing enabled
        /// </summary>
        public readonly bool OneAgentRouting;
        /// <summary>
        /// The Active Gate's host operating system
        /// </summary>
        public readonly string OperatingSystem;
        /// <summary>
        /// The version of the synthetic player
        /// </summary>
        public readonly string PlayerVersion;
        /// <summary>
        /// The status of the synthetic node
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The version of a node
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetSyntheticNodesNodeResult(
            string activeGateVersion,

            bool autoUpdate,

            bool browserMonitors,

            string healthCheckStatus,

            string hostname,

            string id,

            ImmutableArray<string> ips,

            bool oneAgentRouting,

            string operatingSystem,

            string playerVersion,

            string status,

            string version)
        {
            ActiveGateVersion = activeGateVersion;
            AutoUpdate = autoUpdate;
            BrowserMonitors = browserMonitors;
            HealthCheckStatus = healthCheckStatus;
            Hostname = hostname;
            Id = id;
            Ips = ips;
            OneAgentRouting = oneAgentRouting;
            OperatingSystem = operatingSystem;
            PlayerVersion = playerVersion;
            Status = status;
            Version = version;
        }
    }
}
