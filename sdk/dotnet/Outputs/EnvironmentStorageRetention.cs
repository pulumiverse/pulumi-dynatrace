// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class EnvironmentStorageRetention
    {
        /// <summary>
        /// Log monitoring retention settings on environment level in days. Not editable when Log monitoring is not allowed by license or not configured on cluster level. Can be set to any value from 5 to 90 days
        /// </summary>
        public readonly int? Logs;
        /// <summary>
        /// Real user monitoring retention settings on environment level in days. Can be set to any value from 1 to 35 days
        /// </summary>
        public readonly int Rum;
        /// <summary>
        /// Service code level retention settings on environment level in days. Service code level retention time can't be greater than service request level retention time and both can't exceed one year
        /// </summary>
        public readonly int ServiceCodeLevel;
        /// <summary>
        /// Service request level retention settings on environment level in days. Service code level retention time can't be greater than service request level retention time and both can't exceed one year
        /// </summary>
        public readonly int ServiceRequestLevel;
        /// <summary>
        /// Session replay retention settings on environment level in days. Can be set to any value from 1 to 35 days
        /// </summary>
        public readonly int SessionReplay;
        /// <summary>
        /// Synthetic monitoring retention settings on environment level in days. Can be set to any value from 1 to 35 days
        /// </summary>
        public readonly int Synthetic;

        [OutputConstructor]
        private EnvironmentStorageRetention(
            int? logs,

            int rum,

            int serviceCodeLevel,

            int serviceRequestLevel,

            int sessionReplay,

            int synthetic)
        {
            Logs = logs;
            Rum = rum;
            ServiceCodeLevel = serviceCodeLevel;
            ServiceRequestLevel = serviceRequestLevel;
            SessionReplay = sessionReplay;
            Synthetic = synthetic;
        }
    }
}
