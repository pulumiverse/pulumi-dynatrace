// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class OpenpipelineV2SystemEventsIngestsourcesProcessingProcessorsProcessorSamplingAwareValueMetric
    {
        /// <summary>
        /// Possible Values: `Disabled`, `Enabled`
        /// </summary>
        public readonly string? Aggregation;
        /// <summary>
        /// Default value with metric value
        /// </summary>
        public readonly string? DefaultValue;
        /// <summary>
        /// List of dimensions
        /// </summary>
        public readonly Outputs.OpenpipelineV2SystemEventsIngestsourcesProcessingProcessorsProcessorSamplingAwareValueMetricDimensions? Dimensions;
        /// <summary>
        /// Field with metric value
        /// </summary>
        public readonly string? Field;
        /// <summary>
        /// Possible Values: `Duration`, `Field`
        /// </summary>
        public readonly string Measurement;
        /// <summary>
        /// Metric key
        /// </summary>
        public readonly string MetricKey;
        /// <summary>
        /// Possible Values: `Disabled`, `Enabled`
        /// </summary>
        public readonly string? Sampling;

        [OutputConstructor]
        private OpenpipelineV2SystemEventsIngestsourcesProcessingProcessorsProcessorSamplingAwareValueMetric(
            string? aggregation,

            string? defaultValue,

            Outputs.OpenpipelineV2SystemEventsIngestsourcesProcessingProcessorsProcessorSamplingAwareValueMetricDimensions? dimensions,

            string? field,

            string measurement,

            string metricKey,

            string? sampling)
        {
            Aggregation = aggregation;
            DefaultValue = defaultValue;
            Dimensions = dimensions;
            Field = field;
            Measurement = measurement;
            MetricKey = metricKey;
            Sampling = sampling;
        }
    }
}
