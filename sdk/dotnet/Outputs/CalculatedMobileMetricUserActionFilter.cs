// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class CalculatedMobileMetricUserActionFilter
    {
        /// <summary>
        /// Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.
        /// </summary>
        public readonly int? ActionDurationFromMilliseconds;
        /// <summary>
        /// Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.
        /// </summary>
        public readonly int? ActionDurationToMilliseconds;
        /// <summary>
        /// Only actions with the specified Apdex score are included in the metric calculation. Possible values: [ Frustrated, Satisfied, Tolerating, Unknown ]
        /// </summary>
        public readonly string? Apdex;
        /// <summary>
        /// Only actions coming from this app version are included in the metric calculation.
        /// </summary>
        public readonly string? AppVersion;
        /// <summary>
        /// Only actions coming from this carrier type are included in the metric calculation.
        /// </summary>
        public readonly string? Carrier;
        /// <summary>
        /// Only actions of users from this city are included in the metric calculation. Specify geolocation ID here.
        /// </summary>
        public readonly string? City;
        /// <summary>
        /// Only actions coming from this connection type are included in the metric calculation. Possible values: [ LAN, MOBILE, OFFLINE, UNKNOWN, WIFI ]
        /// </summary>
        public readonly string? ConnectionType;
        /// <summary>
        /// Only actions of users from this continent are included in the metric calculation. Specify geolocation ID here.
        /// </summary>
        public readonly string? Continent;
        /// <summary>
        /// Only actions of users from this country are included in the metric calculation. Specify geolocation ID here.
        /// </summary>
        public readonly string? Country;
        /// <summary>
        /// Only actions coming from this app version are included in the metric calculation.
        /// </summary>
        public readonly string? Device;
        /// <summary>
        /// The request error status of the actions to be included in the metric calculation: `true` or `false`
        /// </summary>
        public readonly bool? HasHttpError;
        /// <summary>
        /// The error status of the actions to be included in the metric calculation: `true` or `false`
        /// </summary>
        public readonly bool? HasReportedError;
        /// <summary>
        /// Only actions coming from this internet service provider are included in the metric calculation.
        /// </summary>
        public readonly string? Isp;
        /// <summary>
        /// Only actions coming from devices of this manufacturer are included in the metric calculation.
        /// </summary>
        public readonly string? Manufacturer;
        /// <summary>
        /// Filter by network technology
        /// </summary>
        public readonly string? NetworkTechnology;
        /// <summary>
        /// Only actions coming from devices with this display orientation are included in the metric calculation. Possible values: [ LANDSCAPE, PORTRAIT, UNKNOWN ]
        /// </summary>
        public readonly string? Orientation;
        /// <summary>
        /// Only actions coming from this OS family are included in the metric calculation.
        /// </summary>
        public readonly string? OsFamily;
        /// <summary>
        /// Only actions coming from this OS version are included in the metric calculation.
        /// </summary>
        public readonly string? OsVersion;
        /// <summary>
        /// Only actions of users from this region are included in the metric calculation. Specify geolocation ID here.
        /// </summary>
        public readonly string? Region;
        /// <summary>
        /// Only actions coming from devices with this display resolution are included in the metric calculation. Possible values: [ CGA, DCI2K, DCI4K, DVGA, FHD, FWVGA, FWXGA, GHDPlus, HD, HQVGA, HQVGA2, HSXGA, HUXGA, HVGA, HXGA, NTSC, PAL, QHD, QQVGA, QSXGA, QUXGA, QVGA, QWXGA, QXGA, SVGA, SXGA, SXGAMinus, SXGAPlus, UGA, UHD16K, UHD4K, UHD8K, UHDPlus, UNKNOWN, UWQHD, UXGA, VGA, WHSXGA, WHUXGA, WHXGA, WQSXGA, WQUXGA, WQVGA, WQVGA2, WQVGA3, WQXGA, WQXGA2, WSVGA, WSVGA2, WSXGA, WSXGAPlus, WUXGA, WVGA, WVGA2, WXGA, WXGA2, WXGA3, WXGAPlus, XGA, XGAPLUS, _1280x854, nHD, qHD ]
        /// </summary>
        public readonly string? Resolution;
        /// <summary>
        /// Only actions with this name are included in the metric calculation.
        /// </summary>
        public readonly string? UserActionName;

        [OutputConstructor]
        private CalculatedMobileMetricUserActionFilter(
            int? actionDurationFromMilliseconds,

            int? actionDurationToMilliseconds,

            string? apdex,

            string? appVersion,

            string? carrier,

            string? city,

            string? connectionType,

            string? continent,

            string? country,

            string? device,

            bool? hasHttpError,

            bool? hasReportedError,

            string? isp,

            string? manufacturer,

            string? networkTechnology,

            string? orientation,

            string? osFamily,

            string? osVersion,

            string? region,

            string? resolution,

            string? userActionName)
        {
            ActionDurationFromMilliseconds = actionDurationFromMilliseconds;
            ActionDurationToMilliseconds = actionDurationToMilliseconds;
            Apdex = apdex;
            AppVersion = appVersion;
            Carrier = carrier;
            City = city;
            ConnectionType = connectionType;
            Continent = continent;
            Country = country;
            Device = device;
            HasHttpError = hasHttpError;
            HasReportedError = hasReportedError;
            Isp = isp;
            Manufacturer = manufacturer;
            NetworkTechnology = networkTechnology;
            Orientation = orientation;
            OsFamily = osFamily;
            OsVersion = osVersion;
            Region = region;
            Resolution = resolution;
            UserActionName = userActionName;
        }
    }
}
