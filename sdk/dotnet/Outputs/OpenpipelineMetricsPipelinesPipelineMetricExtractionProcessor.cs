// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class OpenpipelineMetricsPipelinesPipelineMetricExtractionProcessor
    {
        /// <summary>
        /// Processor to write the occurrences as a metric
        /// </summary>
        public readonly Outputs.OpenpipelineMetricsPipelinesPipelineMetricExtractionProcessorCounterMetricExtractionProcessor? CounterMetricExtractionProcessor;
        /// <summary>
        /// Processor to extract a value from a field as a metric
        /// </summary>
        public readonly Outputs.OpenpipelineMetricsPipelinesPipelineMetricExtractionProcessorValueMetricExtractionProcessor? ValueMetricExtractionProcessor;

        [OutputConstructor]
        private OpenpipelineMetricsPipelinesPipelineMetricExtractionProcessor(
            Outputs.OpenpipelineMetricsPipelinesPipelineMetricExtractionProcessorCounterMetricExtractionProcessor? counterMetricExtractionProcessor,

            Outputs.OpenpipelineMetricsPipelinesPipelineMetricExtractionProcessorValueMetricExtractionProcessor? valueMetricExtractionProcessor)
        {
            CounterMetricExtractionProcessor = counterMetricExtractionProcessor;
            ValueMetricExtractionProcessor = valueMetricExtractionProcessor;
        }
    }
}
