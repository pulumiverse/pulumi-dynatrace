// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class OpenpipelineDavisEventsPipelinesPipelineMetricExtractionProcessorSamplingAwareValueMetricExtractionProcessor
    {
        /// <summary>
        /// Indicates whether aggregation is considered for metric extraction. Possible values: 'DISABLED', 'ENABLED'
        /// </summary>
        public readonly string? Aggregation;
        /// <summary>
        /// The default value to use if the given field value could not be extracted. String value must be a number
        /// </summary>
        public readonly string? DefaultValue;
        /// <summary>
        /// Name or description of the processor
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// List of unique dimensions to add to the metric.
        /// Dimensions are represented in the format '({dimensionName}=)?{sourceField}'.
        /// '{dimensionName}' is optional if {sourceField} represents a valid metric dimension name.
        /// '{sourceField}' has to represent a valid DQL field accessor and it can access a nested field (for example, 'field[field2][0]')
        /// </summary>
        public readonly ImmutableArray<string> Dimensions;
        /// <summary>
        /// Indicates if the object is active
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The field from which to extract the value for the metric, or 'null' for a duration measurement
        /// </summary>
        public readonly string? Field;
        /// <summary>
        /// Identifier of the processor. Must be unique within a stage.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Matching condition to apply on incoming records
        /// </summary>
        public readonly string Matcher;
        /// <summary>
        /// Indicates whether the metric value should be the specified field or duration. Possible values: 'DURATION', 'FIELD'
        /// </summary>
        public readonly string Measurement;
        /// <summary>
        /// The key of the metric to write
        /// </summary>
        public readonly string MetricKey;
        /// <summary>
        /// Sample data related to the processor for documentation or testing
        /// </summary>
        public readonly string? SampleData;
        /// <summary>
        /// Indicates whether sampling is considered for metric extraction. Possible values: 'DISABLED', 'ENABLED'
        /// </summary>
        public readonly string? Sampling;

        [OutputConstructor]
        private OpenpipelineDavisEventsPipelinesPipelineMetricExtractionProcessorSamplingAwareValueMetricExtractionProcessor(
            string? aggregation,

            string? defaultValue,

            string description,

            ImmutableArray<string> dimensions,

            bool enabled,

            string? field,

            string id,

            string matcher,

            string measurement,

            string metricKey,

            string? sampleData,

            string? sampling)
        {
            Aggregation = aggregation;
            DefaultValue = defaultValue;
            Description = description;
            Dimensions = dimensions;
            Enabled = enabled;
            Field = field;
            Id = id;
            Matcher = matcher;
            Measurement = measurement;
            MetricKey = metricKey;
            SampleData = sampleData;
            Sampling = sampling;
        }
    }
}
