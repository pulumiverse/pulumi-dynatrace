// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class BrowserMonitorScriptEventsEventJavascriptWait
    {
        /// <summary>
        /// The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `Time`, not applicable otherwise.
        /// </summary>
        public readonly int? Milliseconds;
        /// <summary>
        /// he maximum amount of time to wait for a certain element to appear, in millisecondsâ€”if exceeded, the action is marked as failed.
        /// The maximum allowed value is 60000. Required for the type `Validation`, not applicable otherwise..
        /// </summary>
        public readonly int? Timeout;
        /// <summary>
        /// The elements to wait for. Required for the `Validation` type, not applicable otherwise.
        /// </summary>
        public readonly Outputs.BrowserMonitorScriptEventsEventJavascriptWaitValidation? Validation;
        /// <summary>
        /// The time to wait before the next event is triggered. Possible values are `PageComplete` (wait for the page to load completely), `Network` (wait for background network activity to complete), `NextAction` (wait for the next action), `Time` (wait for a specified periodof time) and `Validation` (wait for a specific element to appear)
        /// </summary>
        public readonly string WaitFor;

        [OutputConstructor]
        private BrowserMonitorScriptEventsEventJavascriptWait(
            int? milliseconds,

            int? timeout,

            Outputs.BrowserMonitorScriptEventsEventJavascriptWaitValidation? validation,

            string waitFor)
        {
            Milliseconds = milliseconds;
            Timeout = timeout;
            Validation = validation;
            WaitFor = waitFor;
        }
    }
}
