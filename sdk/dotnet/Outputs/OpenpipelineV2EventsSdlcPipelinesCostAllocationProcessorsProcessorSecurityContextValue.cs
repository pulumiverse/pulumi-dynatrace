// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class OpenpipelineV2EventsSdlcPipelinesCostAllocationProcessorsProcessorSecurityContextValue
    {
        /// <summary>
        /// Constant value
        /// </summary>
        public readonly string? Constant;
        /// <summary>
        /// Value from field
        /// </summary>
        public readonly Outputs.OpenpipelineV2EventsSdlcPipelinesCostAllocationProcessorsProcessorSecurityContextValueField? Field;
        /// <summary>
        /// Constant multi value
        /// </summary>
        public readonly ImmutableArray<string> MultiValueConstants;
        /// <summary>
        /// Possible Values: `Constant`, `Field`, `MultiValueConstant`
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private OpenpipelineV2EventsSdlcPipelinesCostAllocationProcessorsProcessorSecurityContextValue(
            string? constant,

            Outputs.OpenpipelineV2EventsSdlcPipelinesCostAllocationProcessorsProcessorSecurityContextValueField? field,

            ImmutableArray<string> multiValueConstants,

            string type)
        {
            Constant = constant;
            Field = field;
            MultiValueConstants = multiValueConstants;
            Type = type;
        }
    }
}
