// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter
    {
        /// <summary>
        /// Entity types affected by tag
        /// </summary>
        public readonly ImmutableArray<string> EntityTypes;
        /// <summary>
        /// The display name used to identify this generic filter
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The entity type for which the suggestions should be provided.
        /// </summary>
        public readonly string? SuggestionsFromEntityType;
        /// <summary>
        /// The tag key for this filter
        /// </summary>
        public readonly string? TagKey;

        [OutputConstructor]
        private DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter(
            ImmutableArray<string> entityTypes,

            string? name,

            string? suggestionsFromEntityType,

            string? tagKey)
        {
            EntityTypes = entityTypes;
            Name = name;
            SuggestionsFromEntityType = suggestionsFromEntityType;
            TagKey = tagKey;
        }
    }
}
