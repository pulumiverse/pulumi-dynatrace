// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class MobileApplicationPropertiesApiValue
    {
        /// <summary>
        /// The aggregation type of the property. It defines how multiple values of the property are aggregated. Possible values are `SUM`, `MIN`, `MAX`, `FIRST` and `LAST`
        /// </summary>
        public readonly string? Aggregation;
        /// <summary>
        /// The cleanup rule of the property. Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
        /// </summary>
        public readonly string? CleanupRule;
        /// <summary>
        /// The display name of the property
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The unique key of the mobile session or user action property
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// The name of the reported value
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// If `true`, the property is stored as a session property
        /// </summary>
        public readonly bool? StoreAsSessionProperty;
        /// <summary>
        /// If `true`, the property is stored as a user action property
        /// </summary>
        public readonly bool? StoreAsUserActionProperty;
        /// <summary>
        /// The data type of the property. Possible values are `DOUBLE`, `LONG` and `STRING`
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private MobileApplicationPropertiesApiValue(
            string? aggregation,

            string? cleanupRule,

            string? displayName,

            string key,

            string? name,

            bool? storeAsSessionProperty,

            bool? storeAsUserActionProperty,

            string type)
        {
            Aggregation = aggregation;
            CleanupRule = cleanupRule;
            DisplayName = displayName;
            Key = key;
            Name = name;
            StoreAsSessionProperty = storeAsSessionProperty;
            StoreAsUserActionProperty = storeAsUserActionProperty;
            Type = type;
        }
    }
}
