// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class CloudappWorkloaddetectionKubernetes
    {
        /// <summary>
        /// This setting is enabled (`True`) or disabled (`False`)
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Define rules to merge similar Kubernetes workloads into process groups. 
        /// 
        ///  You can use workload properties like namespace name, base pod name or container name as well as the [environment variables DT_RELEASE_STAGE and DT_RELEASE_PRODUCT](https://dt-url.net/sb02v2a) for grouping processes of similar workloads. The first applicable rule will be applied. If no rule matches, “Namespace name” + “Base pod name” + “Container name” is used as fallback.
        /// </summary>
        public readonly Outputs.CloudappWorkloaddetectionKubernetesFilters? Filters;

        [OutputConstructor]
        private CloudappWorkloaddetectionKubernetes(
            bool enabled,

            Outputs.CloudappWorkloaddetectionKubernetesFilters? filters)
        {
            Enabled = enabled;
            Filters = filters;
        }
    }
}
