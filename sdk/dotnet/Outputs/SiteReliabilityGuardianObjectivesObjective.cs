// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class SiteReliabilityGuardianObjectivesObjective
    {
        /// <summary>
        /// Enable auto adaptive threshold
        /// </summary>
        public readonly bool? AutoAdaptiveThresholdEnabled;
        /// <summary>
        /// Possible Values: `GREATER_THAN_OR_EQUAL`, `LESS_THAN_OR_EQUAL`
        /// </summary>
        public readonly string ComparisonOperator;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Display Unit
        /// </summary>
        public readonly Outputs.SiteReliabilityGuardianObjectivesObjectiveDisplayUnit? DisplayUnit;
        /// <summary>
        /// DQL query
        /// </summary>
        public readonly string? DqlQuery;
        /// <summary>
        /// Objective name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Possible Values: `DQL`, `REFERENCE_SLO`
        /// </summary>
        public readonly string ObjectiveType;
        /// <summary>
        /// Please enter the metric key of your desired SLO. SLO metric keys have to start with 'func:slo.'
        /// </summary>
        public readonly string? ReferenceSlo;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly Outputs.SiteReliabilityGuardianObjectivesObjectiveSegments? Segments;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly double? Target;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly double? Warning;

        [OutputConstructor]
        private SiteReliabilityGuardianObjectivesObjective(
            bool? autoAdaptiveThresholdEnabled,

            string comparisonOperator,

            string? description,

            Outputs.SiteReliabilityGuardianObjectivesObjectiveDisplayUnit? displayUnit,

            string? dqlQuery,

            string name,

            string objectiveType,

            string? referenceSlo,

            Outputs.SiteReliabilityGuardianObjectivesObjectiveSegments? segments,

            double? target,

            double? warning)
        {
            AutoAdaptiveThresholdEnabled = autoAdaptiveThresholdEnabled;
            ComparisonOperator = comparisonOperator;
            Description = description;
            DisplayUnit = displayUnit;
            DqlQuery = dqlQuery;
            Name = name;
            ObjectiveType = objectiveType;
            ReferenceSlo = referenceSlo;
            Segments = segments;
            Target = target;
            Warning = warning;
        }
    }
}
