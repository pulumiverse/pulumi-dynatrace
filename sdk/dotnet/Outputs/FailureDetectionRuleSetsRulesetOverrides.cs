// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class FailureDetectionRuleSetsRulesetOverrides
    {
        /// <summary>
        /// Define escaped exceptions that should force success.. Evaluated expression: `iAny(`span.events`[][`span_event.name`] == "exception" and `span.events`[][`exception.escaped`] != false)`
        /// 
        /// Failure detection result: `reason="exception"`, `verdict="success"`, `exception_ids`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnExceptions? ForceSuccessOnExceptions;
        /// <summary>
        /// Evaluated attribute: `rpc.grpc.status_code`
        /// 
        /// Failure detection result: `reason="grpc_code"`, `verdict="success"`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnGrpcResponseStatusCodes? ForceSuccessOnGrpcResponseStatusCodes;
        /// <summary>
        /// Evaluated attribute: `http.response.status_code`
        /// 
        /// Failure detection result: `reason="http_code"`, `verdict="success"`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnHttpResponseStatusCodes? ForceSuccessOnHttpResponseStatusCodes;
        /// <summary>
        /// Evaluated attribute: `span.status_code`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnSpanStatusOk ForceSuccessOnSpanStatusOk;
        /// <summary>
        /// Override failures based on span and request attribute conditions.. Failure detection result: `reason="custom_rule"`, `verdict="success"`, `custom_rule_name`
        /// </summary>
        public readonly Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessWithCustomRules? ForceSuccessWithCustomRules;

        [OutputConstructor]
        private FailureDetectionRuleSetsRulesetOverrides(
            Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnExceptions? forceSuccessOnExceptions,

            Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnGrpcResponseStatusCodes? forceSuccessOnGrpcResponseStatusCodes,

            Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnHttpResponseStatusCodes? forceSuccessOnHttpResponseStatusCodes,

            Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessOnSpanStatusOk forceSuccessOnSpanStatusOk,

            Outputs.FailureDetectionRuleSetsRulesetOverridesForceSuccessWithCustomRules? forceSuccessWithCustomRules)
        {
            ForceSuccessOnExceptions = forceSuccessOnExceptions;
            ForceSuccessOnGrpcResponseStatusCodes = forceSuccessOnGrpcResponseStatusCodes;
            ForceSuccessOnHttpResponseStatusCodes = forceSuccessOnHttpResponseStatusCodes;
            ForceSuccessOnSpanStatusOk = forceSuccessOnSpanStatusOk;
            ForceSuccessWithCustomRules = forceSuccessWithCustomRules;
        }
    }
}
