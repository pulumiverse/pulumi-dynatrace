// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions
    {
        /// <summary>
        /// Query CSS selectors to specify mutation nodes (elements that change) to ignore in Visually complete and Speed index calculation
        /// </summary>
        public readonly ImmutableArray<string> ExcludedElements;
        /// <summary>
        /// Parameters for Visually complete and Speed index calculation
        /// </summary>
        public readonly ImmutableArray<string> ExcludedUrls;
        /// <summary>
        /// Use this setting to define the minimum visible area per element (in pixels) for an element to be counted towards Visually complete and Speed index
        /// </summary>
        public readonly int ImageSizeThreshold;
        /// <summary>
        /// The time the Visually complete module waits for inactivity and no further mutations on the page after the load action
        /// </summary>
        public readonly int InactivityTimeout;
        /// <summary>
        /// The time the Visually complete module waits after an XHR or custom action closes to start the calculation
        /// </summary>
        public readonly int MutationTimeout;

        [OutputConstructor]
        private BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions(
            ImmutableArray<string> excludedElements,

            ImmutableArray<string> excludedUrls,

            int imageSizeThreshold,

            int inactivityTimeout,

            int mutationTimeout)
        {
            ExcludedElements = excludedElements;
            ExcludedUrls = excludedUrls;
            ImageSizeThreshold = imageSizeThreshold;
            InactivityTimeout = inactivityTimeout;
            MutationTimeout = mutationTimeout;
        }
    }
}
