// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class BrowserMonitorScriptEventsEventClickValidateValidation
    {
        /// <summary>
        /// The condition of the validation. `False` means the validation succeeds if the specified content/element is found. `True` means the validation fails if the specified content/element is found
        /// </summary>
        public readonly bool? FailIfFound;
        /// <summary>
        /// The content to look for on the page.
        /// Regular expressions are allowed. In that case set `isRegex` as `True`. Required for `ContentMatch`, optional for `ElementMatch`.
        /// </summary>
        public readonly string? Match;
        /// <summary>
        /// Defines whether `Match` is plain text (`False`) or a regular expression (`True`)
        /// </summary>
        public readonly bool? Regex;
        /// <summary>
        /// The elemnt to look for on the page
        /// </summary>
        public readonly Outputs.BrowserMonitorScriptEventsEventClickValidateValidationTarget? Target;
        /// <summary>
        /// The goal of the validation. `ContentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `ElementMatch` (check page for the specific element).
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private BrowserMonitorScriptEventsEventClickValidateValidation(
            bool? failIfFound,

            string? match,

            bool? regex,

            Outputs.BrowserMonitorScriptEventsEventClickValidateValidationTarget? target,

            string type)
        {
            FailIfFound = failIfFound;
            Match = match;
            Regex = regex;
            Target = target;
            Type = type;
        }
    }
}
