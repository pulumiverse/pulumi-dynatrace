// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class ManagementZoneRule
    {
        /// <summary>
        /// A list of matching rules for the management zone. The management zone applies only if **all** conditions are fulfilled
        /// </summary>
        public readonly ImmutableArray<Outputs.ManagementZoneRuleCondition> Conditions;
        /// <summary>
        /// The rule is enabled (`True`) or disabled (`False`)
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// How to apply the management zone to underlying entities:
        ///    - `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services
        ///    - `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services
        ///    - `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups
        ///    - `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by matching process groups
        ///    - `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts
        ///    - `CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`: Apply to custom devices in matching custom device groups
        ///    - `AZURE_TO_PG`: Apply to process groups connected to matching Azure entities
        ///    - `AZURE_TO_SERVICE`: Apply to services provided by matching Azure entities
        /// </summary>
        public readonly ImmutableArray<string> PropagationTypes;
        /// <summary>
        /// The type of Dynatrace entities the management zone can be applied to
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// allows for configuring properties that are not explicitly supported by the current version of this provider
        /// </summary>
        public readonly string? Unknowns;

        [OutputConstructor]
        private ManagementZoneRule(
            ImmutableArray<Outputs.ManagementZoneRuleCondition> conditions,

            bool? enabled,

            ImmutableArray<string> propagationTypes,

            string type,

            string? unknowns)
        {
            Conditions = conditions;
            Enabled = enabled;
            PropagationTypes = propagationTypes;
            Type = type;
            Unknowns = unknowns;
        }
    }
}
