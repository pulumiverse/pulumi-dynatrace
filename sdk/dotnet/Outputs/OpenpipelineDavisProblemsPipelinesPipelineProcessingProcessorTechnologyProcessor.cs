// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class OpenpipelineDavisProblemsPipelinesPipelineProcessingProcessorTechnologyProcessor
    {
        /// <summary>
        /// Optional customer-defined matching condition, that is used in place of the main technology matcher.
        /// </summary>
        public readonly string? CustomMatcher;
        /// <summary>
        /// Indicates if the object is active
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Identifier of the processor. Must be unique within a stage.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Sample data related to the processor for documentation or testing
        /// </summary>
        public readonly string? SampleData;
        /// <summary>
        /// The reference identifier to a specific technology. This technology is applied on the record.
        /// </summary>
        public readonly string TechnologyId;

        [OutputConstructor]
        private OpenpipelineDavisProblemsPipelinesPipelineProcessingProcessorTechnologyProcessor(
            string? customMatcher,

            bool enabled,

            string id,

            string? sampleData,

            string technologyId)
        {
            CustomMatcher = customMatcher;
            Enabled = enabled;
            Id = id;
            SampleData = sampleData;
            TechnologyId = technologyId;
        }
    }
}
