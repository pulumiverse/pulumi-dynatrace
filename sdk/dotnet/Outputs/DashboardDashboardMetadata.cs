// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class DashboardDashboardMetadata
    {
        /// <summary>
        /// The tile uses consistent colors when rendering its content
        /// </summary>
        public readonly bool? ConsistentColors;
        /// <summary>
        /// Dashboard filter configuration of a dashboard
        /// </summary>
        public readonly Outputs.DashboardDashboardMetadataDynamicFilters? DynamicFilters;
        /// <summary>
        /// Global filter Settings for the Dashboard
        /// </summary>
        public readonly Outputs.DashboardDashboardMetadataFilter? Filter;
        /// <summary>
        /// the name of the dashboard
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// the owner of the dashboard
        /// </summary>
        public readonly string Owner;
        /// <summary>
        /// the dashboard is a preset (`true`) or not (`false`). Default is `false`.
        /// </summary>
        public readonly bool? Preset;
        /// <summary>
        /// the dashboard is shared (`true`) or private (`false`)
        /// </summary>
        public readonly bool? Shared;
        /// <summary>
        /// represents sharing configuration of a dashboard
        /// </summary>
        public readonly Outputs.DashboardDashboardMetadataSharingDetails? SharingDetails;
        /// <summary>
        /// a set of tags assigned to the dashboard
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// No documentation available
        /// </summary>
        public readonly string? TilesNameSize;
        /// <summary>
        /// allows for configuring properties that are not explicitly supported by the current version of this provider
        /// </summary>
        public readonly string? Unknowns;
        /// <summary>
        /// a set of all possible global dashboard filters that can be applied to dashboard
        /// </summary>
        public readonly ImmutableArray<string> ValidFilterKeys;

        [OutputConstructor]
        private DashboardDashboardMetadata(
            bool? consistentColors,

            Outputs.DashboardDashboardMetadataDynamicFilters? dynamicFilters,

            Outputs.DashboardDashboardMetadataFilter? filter,

            string name,

            string owner,

            bool? preset,

            bool? shared,

            Outputs.DashboardDashboardMetadataSharingDetails? sharingDetails,

            ImmutableArray<string> tags,

            string? tilesNameSize,

            string? unknowns,

            ImmutableArray<string> validFilterKeys)
        {
            ConsistentColors = consistentColors;
            DynamicFilters = dynamicFilters;
            Filter = filter;
            Name = name;
            Owner = owner;
            Preset = preset;
            Shared = shared;
            SharingDetails = sharingDetails;
            Tags = tags;
            TilesNameSize = tilesNameSize;
            Unknowns = unknowns;
            ValidFilterKeys = validFilterKeys;
        }
    }
}
