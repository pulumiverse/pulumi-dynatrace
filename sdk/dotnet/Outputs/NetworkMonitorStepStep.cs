// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class NetworkMonitorStepStep
    {
        /// <summary>
        /// The list of constraints which apply to all requests in the step
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkMonitorStepStepConstraint> Constraints;
        /// <summary>
        /// Step name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Key/value pairs of properties which apply to all requests in the step
        /// </summary>
        public readonly ImmutableDictionary<string, string> Properties;
        /// <summary>
        /// Request configurations
        /// </summary>
        public readonly ImmutableArray<Outputs.NetworkMonitorStepStepRequestConfiguration> RequestConfigurations;
        /// <summary>
        /// Request type, possible values `ICMP`, `TCP`, `DNS`
        /// </summary>
        public readonly string RequestType;
        /// <summary>
        /// Target filter
        /// </summary>
        public readonly string? TargetFilter;
        /// <summary>
        /// Target list
        /// </summary>
        public readonly ImmutableArray<string> TargetLists;

        [OutputConstructor]
        private NetworkMonitorStepStep(
            ImmutableArray<Outputs.NetworkMonitorStepStepConstraint> constraints,

            string name,

            ImmutableDictionary<string, string> properties,

            ImmutableArray<Outputs.NetworkMonitorStepStepRequestConfiguration> requestConfigurations,

            string requestType,

            string? targetFilter,

            ImmutableArray<string> targetLists)
        {
            Constraints = constraints;
            Name = name;
            Properties = properties;
            RequestConfigurations = requestConfigurations;
            RequestType = requestType;
            TargetFilter = targetFilter;
            TargetLists = targetLists;
        }
    }
}
