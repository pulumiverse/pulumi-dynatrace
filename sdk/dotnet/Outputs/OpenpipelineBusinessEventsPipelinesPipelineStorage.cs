// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class OpenpipelineBusinessEventsPipelinesPipelineStorage
    {
        /// <summary>
        /// Default bucket assigned to records which do not match any other storage processor
        /// </summary>
        public readonly string? CatchAllBucketName;
        /// <summary>
        /// Groups all processors applicable for the StorageStage.
        /// Applicable processors are BucketAssignmentProcessor and NoStorageProcessor.
        /// </summary>
        public readonly ImmutableArray<Outputs.OpenpipelineBusinessEventsPipelinesPipelineStorageProcessor> Processors;

        [OutputConstructor]
        private OpenpipelineBusinessEventsPipelinesPipelineStorage(
            string? catchAllBucketName,

            ImmutableArray<Outputs.OpenpipelineBusinessEventsPipelinesPipelineStorageProcessor> processors)
        {
            CatchAllBucketName = catchAllBucketName;
            Processors = processors;
        }
    }
}
