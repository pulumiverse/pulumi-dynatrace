// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class CalculatedSyntheticMetricFilter
    {
        /// <summary>
        /// Only user actions of the specified type are included in the metric calculation
        /// </summary>
        public readonly string? ActionType;
        /// <summary>
        /// Only executions finished with the specified error code are included in the metric calculation.
        /// </summary>
        public readonly int? ErrorCode;
        /// <summary>
        /// Only the specified browser clickpath event is included in the metric calculation. Specify the Dynatrace entity ID of the event here.
        /// </summary>
        public readonly string? Event;
        /// <summary>
        /// The execution status of the monitors to be included in the metric calculation: `true` or `false`
        /// </summary>
        public readonly bool? HasError;
        /// <summary>
        /// Only executions from the specified location are included in the metric calculation. Specify the Dynatrace entity ID of the location here.
        /// </summary>
        public readonly string? Location;

        [OutputConstructor]
        private CalculatedSyntheticMetricFilter(
            string? actionType,

            int? errorCode,

            string? @event,

            bool? hasError,

            string? location)
        {
            ActionType = actionType;
            ErrorCode = errorCode;
            Event = @event;
            HasError = hasError;
            Location = location;
        }
    }
}
