// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class ServiceNamingConditionCondition
    {
        /// <summary>
        /// Comparison for `APPLICATION_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionApplicationTypeComparison> ApplicationTypeComparisons;
        /// <summary>
        /// Comparison for `APPLICATION_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionApplicationType> ApplicationTypes;
        /// <summary>
        /// Comparison for `AZURE_COMPUTE_MODE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionAzureComputeModeComparison> AzureComputeModeComparisons;
        /// <summary>
        /// Comparison for `AZURE_COMPUTE_MODE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionAzureComputeMode> AzureComputeModes;
        /// <summary>
        /// Comparison for `AZURE_SKU` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionAzureSkuComparision> AzureSkuComparisions;
        /// <summary>
        /// Comparison for `AZURE_SKU` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionAzureSkus> AzureSkus;
        /// <summary>
        /// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionBaseComparisonBasic> BaseComparisonBasics;
        /// <summary>
        /// Fallback for not yet known type
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionBaseConditionKey> BaseConditionKeys;
        /// <summary>
        /// Comparison for `BITNESS` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionBitnessComparision> BitnessComparisions;
        /// <summary>
        /// Comparison for `BITNESS` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionBitness> Bitnesses;
        /// <summary>
        /// Comparison for `CLOUD_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionCloudTypeComparison> CloudTypeComparisons;
        /// <summary>
        /// Comparison for `CLOUD_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionCloudType> CloudTypes;
        /// <summary>
        /// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionComparison> Comparisons;
        /// <summary>
        /// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionCustomApplicationTypeComparison> CustomApplicationTypeComparisons;
        /// <summary>
        /// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionCustomApplicationType> CustomApplicationTypes;
        /// <summary>
        /// Key for Custom Host Metadata
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionCustomHostMetadataConditionKey> CustomHostMetadataConditionKeys;
        /// <summary>
        /// Key for Custom Host Metadata
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionCustomHostMetadata> CustomHostMetadatas;
        /// <summary>
        /// Key for Custom Process Metadata
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionCustomProcessMetadataConditionKey> CustomProcessMetadataConditionKeys;
        /// <summary>
        /// Key for Custom Process Metadata
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionCustomProcessMetadata> CustomProcessMetadatas;
        /// <summary>
        /// Comparison for `DATABASE_TOPOLOGY` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionDatabaseTopology> DatabaseTopologies;
        /// <summary>
        /// Comparison for `DATABASE_TOPOLOGY` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionDatabaseTopologyComparison> DatabaseTopologyComparisons;
        /// <summary>
        /// Comparison for `DCRUM_DECODER_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionDcrumDecoderComparison> DcrumDecoderComparisons;
        /// <summary>
        /// Comparison for `DCRUM_DECODER_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionDcrumDecoder> DcrumDecoders;
        /// <summary>
        /// Comparison for `ENTITY_ID` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionEntity> Entities;
        /// <summary>
        /// Comparison for `ENTITY_ID` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionEntityIdComparison> EntityIdComparisons;
        /// <summary>
        /// Comparison for `SIMPLE_HOST_TECH` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionHostTech> HostTeches;
        /// <summary>
        /// `hypervisor_type_comparision` is deprecated. Use `hypervisor` instead
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionHypervisorTypeComparision> HypervisorTypeComparisions;
        /// <summary>
        /// Comparison for `HYPERVISOR_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionHypervisor> Hypervisors;
        /// <summary>
        /// Comparison for `INDEXED_NAME` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedNameComparison> IndexedNameComparisons;
        /// <summary>
        /// Comparison for `INDEXED_NAME` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedName> IndexedNames;
        /// <summary>
        /// Comparison for `INDEXED_STRING` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedStringComparison> IndexedStringComparisons;
        /// <summary>
        /// Comparison for `INDEXED_STRING` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedString> IndexedStrings;
        /// <summary>
        /// Comparison for `INDEXED_TAG` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedTagComparison> IndexedTagComparisons;
        /// <summary>
        /// Comparison for `INDEXED_TAG` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedTag> IndexedTags;
        /// <summary>
        /// Comparison for `INTEGER` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIntegerComparison> IntegerComparisons;
        /// <summary>
        /// Comparison for `INTEGER` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionInteger> Integers;
        /// <summary>
        /// Comparison for `IP_ADDRESS` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIpaddressComparison> IpaddressComparisons;
        /// <summary>
        /// Comparison for `IP_ADDRESS` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionIpaddress> Ipaddresses;
        /// <summary>
        /// Fallback for not yet known type
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionKey> Keys;
        /// <summary>
        /// Comparison for `MOBILE_PLATFORM` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionMobilePlatformComparison> MobilePlatformComparisons;
        /// <summary>
        /// Comparison for `MOBILE_PLATFORM` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionMobilePlatform> MobilePlatforms;
        /// <summary>
        /// Comparison for `OS_ARCHITECTURE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionOsArch> OsArches;
        /// <summary>
        /// Comparison for `OS_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionOsType> OsTypes;
        /// <summary>
        /// Comparison for `OS_ARCHITECTURE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionOsarchitectureComparison> OsarchitectureComparisons;
        /// <summary>
        /// Comparison for `OS_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionOstypeComparison> OstypeComparisons;
        /// <summary>
        /// Comparison for `PAAS_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionPaasTypeComparison> PaasTypeComparisons;
        /// <summary>
        /// Comparison for `PAAS_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionPaasType> PaasTypes;
        /// <summary>
        /// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionProcessMetadataConditionKey> ProcessMetadataConditionKeys;
        /// <summary>
        /// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionProcessMetadata> ProcessMetadatas;
        /// <summary>
        /// Comparison for `SERVICE_TOPOLOGY` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionServiceTopology> ServiceTopologies;
        /// <summary>
        /// Comparison for `SERVICE_TOPOLOGY` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionServiceTopologyComparison> ServiceTopologyComparisons;
        /// <summary>
        /// Comparison for `SERVICE_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionServiceTypeComparison> ServiceTypeComparisons;
        /// <summary>
        /// Comparison for `SERVICE_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionServiceType> ServiceTypes;
        /// <summary>
        /// Comparison for `SIMPLE_HOST_TECH` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionSimpleHostTechComparison> SimpleHostTechComparisons;
        /// <summary>
        /// Comparison for `SIMPLE_TECH` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionSimpleTechComparison> SimpleTechComparisons;
        /// <summary>
        /// Comparison for `STRING` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionStringComparison> StringComparisons;
        /// <summary>
        /// The key for dynamic attributes of the `STRING` type
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionStringConditionKey> StringConditionKeys;
        /// <summary>
        /// The key for dynamic attributes of the `STRING` type
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionStringKey> StringKeys;
        /// <summary>
        /// Comparison for `STRING` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionString> Strings;
        /// <summary>
        /// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionSyntheticEngineTypeComparison> SyntheticEngineTypeComparisons;
        /// <summary>
        /// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionSyntheticEngine> SyntheticEngines;
        /// <summary>
        /// Comparison for `TAG` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionTagComparison> TagComparisons;
        /// <summary>
        /// Comparison for `TAG` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionTag> Tags;
        /// <summary>
        /// Comparison for `SIMPLE_TECH` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.ServiceNamingConditionConditionTech> Teches;
        /// <summary>
        /// Any attributes that aren't yet supported by this provider
        /// </summary>
        public readonly string? Unknowns;

        [OutputConstructor]
        private ServiceNamingConditionCondition(
            ImmutableArray<Outputs.ServiceNamingConditionConditionApplicationTypeComparison> applicationTypeComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionApplicationType> applicationTypes,

            ImmutableArray<Outputs.ServiceNamingConditionConditionAzureComputeModeComparison> azureComputeModeComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionAzureComputeMode> azureComputeModes,

            ImmutableArray<Outputs.ServiceNamingConditionConditionAzureSkuComparision> azureSkuComparisions,

            ImmutableArray<Outputs.ServiceNamingConditionConditionAzureSkus> azureSkus,

            ImmutableArray<Outputs.ServiceNamingConditionConditionBaseComparisonBasic> baseComparisonBasics,

            ImmutableArray<Outputs.ServiceNamingConditionConditionBaseConditionKey> baseConditionKeys,

            ImmutableArray<Outputs.ServiceNamingConditionConditionBitnessComparision> bitnessComparisions,

            ImmutableArray<Outputs.ServiceNamingConditionConditionBitness> bitnesses,

            ImmutableArray<Outputs.ServiceNamingConditionConditionCloudTypeComparison> cloudTypeComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionCloudType> cloudTypes,

            ImmutableArray<Outputs.ServiceNamingConditionConditionComparison> comparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionCustomApplicationTypeComparison> customApplicationTypeComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionCustomApplicationType> customApplicationTypes,

            ImmutableArray<Outputs.ServiceNamingConditionConditionCustomHostMetadataConditionKey> customHostMetadataConditionKeys,

            ImmutableArray<Outputs.ServiceNamingConditionConditionCustomHostMetadata> customHostMetadatas,

            ImmutableArray<Outputs.ServiceNamingConditionConditionCustomProcessMetadataConditionKey> customProcessMetadataConditionKeys,

            ImmutableArray<Outputs.ServiceNamingConditionConditionCustomProcessMetadata> customProcessMetadatas,

            ImmutableArray<Outputs.ServiceNamingConditionConditionDatabaseTopology> databaseTopologies,

            ImmutableArray<Outputs.ServiceNamingConditionConditionDatabaseTopologyComparison> databaseTopologyComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionDcrumDecoderComparison> dcrumDecoderComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionDcrumDecoder> dcrumDecoders,

            ImmutableArray<Outputs.ServiceNamingConditionConditionEntity> entities,

            ImmutableArray<Outputs.ServiceNamingConditionConditionEntityIdComparison> entityIdComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionHostTech> hostTeches,

            ImmutableArray<Outputs.ServiceNamingConditionConditionHypervisorTypeComparision> hypervisorTypeComparisions,

            ImmutableArray<Outputs.ServiceNamingConditionConditionHypervisor> hypervisors,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedNameComparison> indexedNameComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedName> indexedNames,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedStringComparison> indexedStringComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedString> indexedStrings,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedTagComparison> indexedTagComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIndexedTag> indexedTags,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIntegerComparison> integerComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionInteger> integers,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIpaddressComparison> ipaddressComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionIpaddress> ipaddresses,

            ImmutableArray<Outputs.ServiceNamingConditionConditionKey> keys,

            ImmutableArray<Outputs.ServiceNamingConditionConditionMobilePlatformComparison> mobilePlatformComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionMobilePlatform> mobilePlatforms,

            ImmutableArray<Outputs.ServiceNamingConditionConditionOsArch> osArches,

            ImmutableArray<Outputs.ServiceNamingConditionConditionOsType> osTypes,

            ImmutableArray<Outputs.ServiceNamingConditionConditionOsarchitectureComparison> osarchitectureComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionOstypeComparison> ostypeComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionPaasTypeComparison> paasTypeComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionPaasType> paasTypes,

            ImmutableArray<Outputs.ServiceNamingConditionConditionProcessMetadataConditionKey> processMetadataConditionKeys,

            ImmutableArray<Outputs.ServiceNamingConditionConditionProcessMetadata> processMetadatas,

            ImmutableArray<Outputs.ServiceNamingConditionConditionServiceTopology> serviceTopologies,

            ImmutableArray<Outputs.ServiceNamingConditionConditionServiceTopologyComparison> serviceTopologyComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionServiceTypeComparison> serviceTypeComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionServiceType> serviceTypes,

            ImmutableArray<Outputs.ServiceNamingConditionConditionSimpleHostTechComparison> simpleHostTechComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionSimpleTechComparison> simpleTechComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionStringComparison> stringComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionStringConditionKey> stringConditionKeys,

            ImmutableArray<Outputs.ServiceNamingConditionConditionStringKey> stringKeys,

            ImmutableArray<Outputs.ServiceNamingConditionConditionString> strings,

            ImmutableArray<Outputs.ServiceNamingConditionConditionSyntheticEngineTypeComparison> syntheticEngineTypeComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionSyntheticEngine> syntheticEngines,

            ImmutableArray<Outputs.ServiceNamingConditionConditionTagComparison> tagComparisons,

            ImmutableArray<Outputs.ServiceNamingConditionConditionTag> tags,

            ImmutableArray<Outputs.ServiceNamingConditionConditionTech> teches,

            string? unknowns)
        {
            ApplicationTypeComparisons = applicationTypeComparisons;
            ApplicationTypes = applicationTypes;
            AzureComputeModeComparisons = azureComputeModeComparisons;
            AzureComputeModes = azureComputeModes;
            AzureSkuComparisions = azureSkuComparisions;
            AzureSkus = azureSkus;
            BaseComparisonBasics = baseComparisonBasics;
            BaseConditionKeys = baseConditionKeys;
            BitnessComparisions = bitnessComparisions;
            Bitnesses = bitnesses;
            CloudTypeComparisons = cloudTypeComparisons;
            CloudTypes = cloudTypes;
            Comparisons = comparisons;
            CustomApplicationTypeComparisons = customApplicationTypeComparisons;
            CustomApplicationTypes = customApplicationTypes;
            CustomHostMetadataConditionKeys = customHostMetadataConditionKeys;
            CustomHostMetadatas = customHostMetadatas;
            CustomProcessMetadataConditionKeys = customProcessMetadataConditionKeys;
            CustomProcessMetadatas = customProcessMetadatas;
            DatabaseTopologies = databaseTopologies;
            DatabaseTopologyComparisons = databaseTopologyComparisons;
            DcrumDecoderComparisons = dcrumDecoderComparisons;
            DcrumDecoders = dcrumDecoders;
            Entities = entities;
            EntityIdComparisons = entityIdComparisons;
            HostTeches = hostTeches;
            HypervisorTypeComparisions = hypervisorTypeComparisions;
            Hypervisors = hypervisors;
            IndexedNameComparisons = indexedNameComparisons;
            IndexedNames = indexedNames;
            IndexedStringComparisons = indexedStringComparisons;
            IndexedStrings = indexedStrings;
            IndexedTagComparisons = indexedTagComparisons;
            IndexedTags = indexedTags;
            IntegerComparisons = integerComparisons;
            Integers = integers;
            IpaddressComparisons = ipaddressComparisons;
            Ipaddresses = ipaddresses;
            Keys = keys;
            MobilePlatformComparisons = mobilePlatformComparisons;
            MobilePlatforms = mobilePlatforms;
            OsArches = osArches;
            OsTypes = osTypes;
            OsarchitectureComparisons = osarchitectureComparisons;
            OstypeComparisons = ostypeComparisons;
            PaasTypeComparisons = paasTypeComparisons;
            PaasTypes = paasTypes;
            ProcessMetadataConditionKeys = processMetadataConditionKeys;
            ProcessMetadatas = processMetadatas;
            ServiceTopologies = serviceTopologies;
            ServiceTopologyComparisons = serviceTopologyComparisons;
            ServiceTypeComparisons = serviceTypeComparisons;
            ServiceTypes = serviceTypes;
            SimpleHostTechComparisons = simpleHostTechComparisons;
            SimpleTechComparisons = simpleTechComparisons;
            StringComparisons = stringComparisons;
            StringConditionKeys = stringConditionKeys;
            StringKeys = stringKeys;
            Strings = strings;
            SyntheticEngineTypeComparisons = syntheticEngineTypeComparisons;
            SyntheticEngines = syntheticEngines;
            TagComparisons = tagComparisons;
            Tags = tags;
            Teches = teches;
            Unknowns = unknowns;
        }
    }
}
