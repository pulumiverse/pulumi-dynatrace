// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class EndpointDetectionRulesRule
    {
        /// <summary>
        /// Limits the scope of the endpoint detection rule using [DQL matcher](https://dt-url.net/l603wby) conditions on span and resource attributes.. A rule is applied only if the condition matches, otherwise the ruleset evaluation continues.
        /// </summary>
        public readonly string? Condition;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Specify attribute placeholders in curly braces, e.g. {http.route} or {rpc.method}.. Attribute value placeholders should be specified in curly braces, e.g. {http.route}, {rpc.method}. All attributes used in the placeholder are required for the rule to apply. If any of them is missing, the rule will not be applied and ruleset evaluation continues.
        /// 
        /// If the resolved endpoint name on a given span is empty, the request will be ignored.
        /// </summary>
        public readonly string? EndpointNameTemplate;
        /// <summary>
        /// Possible Values: `DETECT_REQUEST_ON_ENDPOINT`, `SUPPRESS_REQUEST`
        /// </summary>
        public readonly string IfConditionMatches;
        /// <summary>
        /// Rule name
        /// </summary>
        public readonly string RuleName;

        [OutputConstructor]
        private EndpointDetectionRulesRule(
            string? condition,

            string? description,

            string? endpointNameTemplate,

            string ifConditionMatches,

            string ruleName)
        {
            Condition = condition;
            Description = description;
            EndpointNameTemplate = endpointNameTemplate;
            IfConditionMatches = ifConditionMatches;
            RuleName = ruleName;
        }
    }
}
