// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class BrowserMonitorScriptEventsEventNavigate
    {
        /// <summary>
        /// The login credentials to bypass the browser login mask
        /// </summary>
        public readonly Outputs.BrowserMonitorScriptEventsEventNavigateAuthentication? Authentication;
        /// <summary>
        /// The tab on which the page should open
        /// </summary>
        public readonly Outputs.BrowserMonitorScriptEventsEventNavigateTarget? Target;
        /// <summary>
        /// The URL to navigate to
        /// </summary>
        public readonly string Url;
        /// <summary>
        /// The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element
        /// </summary>
        public readonly Outputs.BrowserMonitorScriptEventsEventNavigateValidate? Validate;
        /// <summary>
        /// The wait condition for the event—defines how long Dynatrace should wait before the next action is executed
        /// </summary>
        public readonly Outputs.BrowserMonitorScriptEventsEventNavigateWait? Wait;

        [OutputConstructor]
        private BrowserMonitorScriptEventsEventNavigate(
            Outputs.BrowserMonitorScriptEventsEventNavigateAuthentication? authentication,

            Outputs.BrowserMonitorScriptEventsEventNavigateTarget? target,

            string url,

            Outputs.BrowserMonitorScriptEventsEventNavigateValidate? validate,

            Outputs.BrowserMonitorScriptEventsEventNavigateWait? wait)
        {
            Authentication = authentication;
            Target = target;
            Url = url;
            Validate = validate;
            Wait = wait;
        }
    }
}
