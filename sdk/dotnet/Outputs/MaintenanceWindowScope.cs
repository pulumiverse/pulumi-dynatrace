// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class MaintenanceWindowScope
    {
        /// <summary>
        /// A list of Dynatrace entities (for example, hosts or services) to be included in the scope.  Allowed values are Dynatrace entity IDs
        /// </summary>
        public readonly ImmutableArray<string> Entities;
        /// <summary>
        /// A list of matching rules for dynamic scope formation.  If several rules are set, the OR logic applies
        /// </summary>
        public readonly ImmutableArray<Outputs.MaintenanceWindowScopeMatch> Matches;
        /// <summary>
        /// allows for configuring properties that are not explicitly supported by the current version of this provider
        /// </summary>
        public readonly string? Unknowns;

        [OutputConstructor]
        private MaintenanceWindowScope(
            ImmutableArray<string> entities,

            ImmutableArray<Outputs.MaintenanceWindowScopeMatch> matches,

            string? unknowns)
        {
            Entities = entities;
            Matches = matches;
            Unknowns = unknowns;
        }
    }
}
