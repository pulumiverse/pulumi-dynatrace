// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class WebApplicationMonitoringSettingsContentCaptureTimeoutSettings
    {
        /// <summary>
        /// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
        /// </summary>
        public readonly int TemporaryActionLimit;
        /// <summary>
        /// The total timeout of all cascaded timeouts that should still be able to create a temporary action
        /// </summary>
        public readonly int TemporaryActionTotalTimeout;
        /// <summary>
        /// Timed action support enabled/disabled.
        /// </summary>
        public readonly bool? TimedActionSupport;

        [OutputConstructor]
        private WebApplicationMonitoringSettingsContentCaptureTimeoutSettings(
            int temporaryActionLimit,

            int temporaryActionTotalTimeout,

            bool? timedActionSupport)
        {
            TemporaryActionLimit = temporaryActionLimit;
            TemporaryActionTotalTimeout = temporaryActionTotalTimeout;
            TimedActionSupport = timedActionSupport;
        }
    }
}
