// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class OpenpipelineV2EventsSdlcPipelinesProcessingProcessorsProcessorBizevent
    {
        /// <summary>
        /// Event provider
        /// </summary>
        public readonly Outputs.OpenpipelineV2EventsSdlcPipelinesProcessingProcessorsProcessorBizeventEventProvider EventProvider;
        /// <summary>
        /// Event type
        /// </summary>
        public readonly Outputs.OpenpipelineV2EventsSdlcPipelinesProcessingProcessorsProcessorBizeventEventType? EventType;
        /// <summary>
        /// Field extraction
        /// </summary>
        public readonly Outputs.OpenpipelineV2EventsSdlcPipelinesProcessingProcessorsProcessorBizeventFieldExtraction FieldExtraction;

        [OutputConstructor]
        private OpenpipelineV2EventsSdlcPipelinesProcessingProcessorsProcessorBizevent(
            Outputs.OpenpipelineV2EventsSdlcPipelinesProcessingProcessorsProcessorBizeventEventProvider eventProvider,

            Outputs.OpenpipelineV2EventsSdlcPipelinesProcessingProcessorsProcessorBizeventEventType? eventType,

            Outputs.OpenpipelineV2EventsSdlcPipelinesProcessingProcessorsProcessorBizeventFieldExtraction fieldExtraction)
        {
            EventProvider = eventProvider;
            EventType = eventType;
            FieldExtraction = fieldExtraction;
        }
    }
}
