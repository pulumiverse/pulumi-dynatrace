// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class EnvironmentStorageLimits
    {
        /// <summary>
        /// Log monitoring storage usage and limit information on environment level in bytes. Not editable when Log monitoring is not allowed by license or not configured on cluster level. 0 for unlimited.
        /// </summary>
        public readonly int? Logs;
        /// <summary>
        /// Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.
        /// </summary>
        public readonly int? SessionReplay;
        /// <summary>
        /// Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.
        /// </summary>
        public readonly int? SymbolFiles;
        /// <summary>
        /// Transaction storage usage and limit information on environment level in bytes. 0 for unlimited.
        /// </summary>
        public readonly int? Transactions;

        [OutputConstructor]
        private EnvironmentStorageLimits(
            int? logs,

            int? sessionReplay,

            int? symbolFiles,

            int? transactions)
        {
            Logs = logs;
            SessionReplay = sessionReplay;
            SymbolFiles = symbolFiles;
            Transactions = transactions;
        }
    }
}
