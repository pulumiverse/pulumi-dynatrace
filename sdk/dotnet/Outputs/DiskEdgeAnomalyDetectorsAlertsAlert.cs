// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace.Outputs
{

    [OutputType]
    public sealed class DiskEdgeAnomalyDetectorsAlertsAlert
    {
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly Outputs.DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholds? SampleCountThresholds;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly Outputs.DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholdsImmediately? SampleCountThresholdsImmediately;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly double? ThresholdMebibytes;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly double? ThresholdMilliseconds;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly double? ThresholdNumber;
        /// <summary>
        /// no documentation available
        /// </summary>
        public readonly double? ThresholdPercent;
        /// <summary>
        /// Possible Values: `AVAILABLE_DISK_SPACE_MEBIBYTES_BELOW`, `AVAILABLE_DISK_SPACE_PERCENT_BELOW`, `AVAILABLE_INODES_NUMBER_BELOW`, `AVAILABLE_INODES_PERCENT_BELOW`, `READ_ONLY_FILE_SYSTEM`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`
        /// </summary>
        public readonly string Trigger;

        [OutputConstructor]
        private DiskEdgeAnomalyDetectorsAlertsAlert(
            Outputs.DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholds? sampleCountThresholds,

            Outputs.DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholdsImmediately? sampleCountThresholdsImmediately,

            double? thresholdMebibytes,

            double? thresholdMilliseconds,

            double? thresholdNumber,

            double? thresholdPercent,

            string trigger)
        {
            SampleCountThresholds = sampleCountThresholds;
            SampleCountThresholdsImmediately = sampleCountThresholdsImmediately;
            ThresholdMebibytes = thresholdMebibytes;
            ThresholdMilliseconds = thresholdMilliseconds;
            ThresholdNumber = thresholdNumber;
            ThresholdPercent = thresholdPercent;
            Trigger = trigger;
        }
    }
}
