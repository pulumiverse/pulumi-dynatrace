// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    public static class GetSyntheticLocations
    {
        /// <summary>
        /// The synthetic locations data source allows the location IDs to be retrieved based off of provided parameters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// using Dynatrace = Pulumiverse.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Dynatrace.GetSyntheticLocations.Invoke(new()
        ///     {
        ///         Name = "Sydney",
        ///     });
        /// 
        ///     var _name_ = new Dynatrace.HttpMonitor("#name#", new()
        ///     {
        ///         Enabled = true,
        ///         Frequency = 60,
        ///         Locations = new[]
        ///         {
        ///             test.Apply(getSyntheticLocationsResult =&gt; getSyntheticLocationsResult.Locations?.EntityId),
        ///         },
        ///         AnomalyDetections = new[]
        ///         {
        ///             new Dynatrace.Inputs.HttpMonitorAnomalyDetectionArgs
        ///             {
        ///                 LoadingTimeThresholds = new[]
        ///                 {
        ///                     new Dynatrace.Inputs.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs
        ///                     {
        ///                         Enabled = true,
        ///                     },
        ///                 },
        ///                 OutageHandlings = new[]
        ///                 {
        ///                     new Dynatrace.Inputs.HttpMonitorAnomalyDetectionOutageHandlingArgs
        ///                     {
        ///                         GlobalOutage = true,
        ///                         LocalOutage = false,
        ///                         RetryOnError = false,
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         Script = new Dynatrace.Inputs.HttpMonitorScriptArgs
        ///         {
        ///             Requests = new[]
        ///             {
        ///                 new Dynatrace.Inputs.HttpMonitorScriptRequestArgs
        ///                 {
        ///                     Description = "google.com",
        ///                     Method = "GET",
        ///                     Url = "https://www.google.com",
        ///                     Configuration = new Dynatrace.Inputs.HttpMonitorScriptRequestConfigurationArgs
        ///                     {
        ///                         AcceptAnyCertificate = true,
        ///                         FollowRedirects = true,
        ///                     },
        ///                     Validation = new Dynatrace.Inputs.HttpMonitorScriptRequestValidationArgs
        ///                     {
        ///                         Rules = new[]
        ///                         {
        ///                             new Dynatrace.Inputs.HttpMonitorScriptRequestValidationRuleArgs
        ///                             {
        ///                                 Type = "httpStatusesList",
        ///                                 PassIfFound = false,
        ///                                 Value = "&gt;=400",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSyntheticLocationsResult> InvokeAsync(GetSyntheticLocationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSyntheticLocationsResult>("dynatrace:index/getSyntheticLocations:getSyntheticLocations", args ?? new GetSyntheticLocationsArgs(), options.WithDefaults());

        /// <summary>
        /// The synthetic locations data source allows the location IDs to be retrieved based off of provided parameters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// using Dynatrace = Pulumiverse.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Dynatrace.GetSyntheticLocations.Invoke(new()
        ///     {
        ///         Name = "Sydney",
        ///     });
        /// 
        ///     var _name_ = new Dynatrace.HttpMonitor("#name#", new()
        ///     {
        ///         Enabled = true,
        ///         Frequency = 60,
        ///         Locations = new[]
        ///         {
        ///             test.Apply(getSyntheticLocationsResult =&gt; getSyntheticLocationsResult.Locations?.EntityId),
        ///         },
        ///         AnomalyDetections = new[]
        ///         {
        ///             new Dynatrace.Inputs.HttpMonitorAnomalyDetectionArgs
        ///             {
        ///                 LoadingTimeThresholds = new[]
        ///                 {
        ///                     new Dynatrace.Inputs.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs
        ///                     {
        ///                         Enabled = true,
        ///                     },
        ///                 },
        ///                 OutageHandlings = new[]
        ///                 {
        ///                     new Dynatrace.Inputs.HttpMonitorAnomalyDetectionOutageHandlingArgs
        ///                     {
        ///                         GlobalOutage = true,
        ///                         LocalOutage = false,
        ///                         RetryOnError = false,
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         Script = new Dynatrace.Inputs.HttpMonitorScriptArgs
        ///         {
        ///             Requests = new[]
        ///             {
        ///                 new Dynatrace.Inputs.HttpMonitorScriptRequestArgs
        ///                 {
        ///                     Description = "google.com",
        ///                     Method = "GET",
        ///                     Url = "https://www.google.com",
        ///                     Configuration = new Dynatrace.Inputs.HttpMonitorScriptRequestConfigurationArgs
        ///                     {
        ///                         AcceptAnyCertificate = true,
        ///                         FollowRedirects = true,
        ///                     },
        ///                     Validation = new Dynatrace.Inputs.HttpMonitorScriptRequestValidationArgs
        ///                     {
        ///                         Rules = new[]
        ///                         {
        ///                             new Dynatrace.Inputs.HttpMonitorScriptRequestValidationRuleArgs
        ///                             {
        ///                                 Type = "httpStatusesList",
        ///                                 PassIfFound = false,
        ///                                 Value = "&gt;=400",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSyntheticLocationsResult> Invoke(GetSyntheticLocationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSyntheticLocationsResult>("dynatrace:index/getSyntheticLocations:getSyntheticLocations", args ?? new GetSyntheticLocationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The synthetic locations data source allows the location IDs to be retrieved based off of provided parameters.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// using Dynatrace = Pulumiverse.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var test = Dynatrace.GetSyntheticLocations.Invoke(new()
        ///     {
        ///         Name = "Sydney",
        ///     });
        /// 
        ///     var _name_ = new Dynatrace.HttpMonitor("#name#", new()
        ///     {
        ///         Enabled = true,
        ///         Frequency = 60,
        ///         Locations = new[]
        ///         {
        ///             test.Apply(getSyntheticLocationsResult =&gt; getSyntheticLocationsResult.Locations?.EntityId),
        ///         },
        ///         AnomalyDetections = new[]
        ///         {
        ///             new Dynatrace.Inputs.HttpMonitorAnomalyDetectionArgs
        ///             {
        ///                 LoadingTimeThresholds = new[]
        ///                 {
        ///                     new Dynatrace.Inputs.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs
        ///                     {
        ///                         Enabled = true,
        ///                     },
        ///                 },
        ///                 OutageHandlings = new[]
        ///                 {
        ///                     new Dynatrace.Inputs.HttpMonitorAnomalyDetectionOutageHandlingArgs
        ///                     {
        ///                         GlobalOutage = true,
        ///                         LocalOutage = false,
        ///                         RetryOnError = false,
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///         Script = new Dynatrace.Inputs.HttpMonitorScriptArgs
        ///         {
        ///             Requests = new[]
        ///             {
        ///                 new Dynatrace.Inputs.HttpMonitorScriptRequestArgs
        ///                 {
        ///                     Description = "google.com",
        ///                     Method = "GET",
        ///                     Url = "https://www.google.com",
        ///                     Configuration = new Dynatrace.Inputs.HttpMonitorScriptRequestConfigurationArgs
        ///                     {
        ///                         AcceptAnyCertificate = true,
        ///                         FollowRedirects = true,
        ///                     },
        ///                     Validation = new Dynatrace.Inputs.HttpMonitorScriptRequestValidationArgs
        ///                     {
        ///                         Rules = new[]
        ///                         {
        ///                             new Dynatrace.Inputs.HttpMonitorScriptRequestValidationRuleArgs
        ///                             {
        ///                                 Type = "httpStatusesList",
        ///                                 PassIfFound = false,
        ///                                 Value = "&gt;=400",
        ///                             },
        ///                         },
        ///                     },
        ///                 },
        ///             },
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSyntheticLocationsResult> Invoke(GetSyntheticLocationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSyntheticLocationsResult>("dynatrace:index/getSyntheticLocations:getSyntheticLocations", args ?? new GetSyntheticLocationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSyntheticLocationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("id")]
        public string? Id { get; set; }

        [Input("locations")]
        public Inputs.GetSyntheticLocationsLocationsArgs? Locations { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        public GetSyntheticLocationsArgs()
        {
        }
        public static new GetSyntheticLocationsArgs Empty => new GetSyntheticLocationsArgs();
    }

    public sealed class GetSyntheticLocationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("locations")]
        public Input<Inputs.GetSyntheticLocationsLocationsInputArgs>? Locations { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        public GetSyntheticLocationsInvokeArgs()
        {
        }
        public static new GetSyntheticLocationsInvokeArgs Empty => new GetSyntheticLocationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSyntheticLocationsResult
    {
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string? Id;
        public readonly Outputs.GetSyntheticLocationsLocationsResult Locations;
        public readonly string? Name;

        [OutputConstructor]
        private GetSyntheticLocationsResult(
            string? id,

            Outputs.GetSyntheticLocationsLocationsResult locations,

            string? name)
        {
            Id = id;
            Locations = locations;
            Name = name;
        }
    }
}
