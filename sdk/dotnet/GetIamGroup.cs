// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    public static class GetIamGroup
    {
        /// <summary>
        /// &gt; **Dynatrace SaaS only**
        /// 
        /// &gt; To utilize this resource, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permission: **Allow read access for identity resources (users and groups)** (`account-idm-read`).
        /// 
        /// The IAM group data source allows the group ID to be retrieved by its name.
        /// 
        /// - `name` (String) - The name of the IAM group
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Dynatrace.GetIamGroup.Invoke(new()
        ///     {
        ///         Name = "Terraform Example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["groups"] = example.Apply(getIamGroupResult =&gt; getIamGroupResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetIamGroupResult> InvokeAsync(GetIamGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetIamGroupResult>("dynatrace:index/getIamGroup:getIamGroup", args ?? new GetIamGroupArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; **Dynatrace SaaS only**
        /// 
        /// &gt; To utilize this resource, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permission: **Allow read access for identity resources (users and groups)** (`account-idm-read`).
        /// 
        /// The IAM group data source allows the group ID to be retrieved by its name.
        /// 
        /// - `name` (String) - The name of the IAM group
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Dynatrace = Pulumi.Dynatrace;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Dynatrace.GetIamGroup.Invoke(new()
        ///     {
        ///         Name = "Terraform Example",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["groups"] = example.Apply(getIamGroupResult =&gt; getIamGroupResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetIamGroupResult> Invoke(GetIamGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetIamGroupResult>("dynatrace:index/getIamGroup:getIamGroup", args ?? new GetIamGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetIamGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetIamGroupArgs()
        {
        }
        public static new GetIamGroupArgs Empty => new GetIamGroupArgs();
    }

    public sealed class GetIamGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetIamGroupInvokeArgs()
        {
        }
        public static new GetIamGroupInvokeArgs Empty => new GetIamGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetIamGroupResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetIamGroupResult(
            string id,

            string name)
        {
            Id = id;
            Name = name;
        }
    }
}
