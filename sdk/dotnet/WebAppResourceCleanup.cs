// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/webAppResourceCleanup:WebAppResourceCleanup")]
    public partial class WebAppResourceCleanup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Output("insertAfter")]
        public Output<string> InsertAfter { get; private set; } = null!;

        /// <summary>
        /// For example: *Mask journeyId*
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// For example: `(.*)(journeyId=)-?\d+(.*)`
        /// </summary>
        [Output("regularExpression")]
        public Output<string> RegularExpression { get; private set; } = null!;

        /// <summary>
        /// For example: `$1$2\*$3`
        /// </summary>
        [Output("replaceWith")]
        public Output<string> ReplaceWith { get; private set; } = null!;


        /// <summary>
        /// Create a WebAppResourceCleanup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebAppResourceCleanup(string name, WebAppResourceCleanupArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/webAppResourceCleanup:WebAppResourceCleanup", name, args ?? new WebAppResourceCleanupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebAppResourceCleanup(string name, Input<string> id, WebAppResourceCleanupState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/webAppResourceCleanup:WebAppResourceCleanup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebAppResourceCleanup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebAppResourceCleanup Get(string name, Input<string> id, WebAppResourceCleanupState? state = null, CustomResourceOptions? options = null)
        {
            return new WebAppResourceCleanup(name, id, state, options);
        }
    }

    public sealed class WebAppResourceCleanupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// For example: *Mask journeyId*
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// For example: `(.*)(journeyId=)-?\d+(.*)`
        /// </summary>
        [Input("regularExpression", required: true)]
        public Input<string> RegularExpression { get; set; } = null!;

        /// <summary>
        /// For example: `$1$2\*$3`
        /// </summary>
        [Input("replaceWith", required: true)]
        public Input<string> ReplaceWith { get; set; } = null!;

        public WebAppResourceCleanupArgs()
        {
        }
        public static new WebAppResourceCleanupArgs Empty => new WebAppResourceCleanupArgs();
    }

    public sealed class WebAppResourceCleanupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// For example: *Mask journeyId*
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// For example: `(.*)(journeyId=)-?\d+(.*)`
        /// </summary>
        [Input("regularExpression")]
        public Input<string>? RegularExpression { get; set; }

        /// <summary>
        /// For example: `$1$2\*$3`
        /// </summary>
        [Input("replaceWith")]
        public Input<string>? ReplaceWith { get; set; }

        public WebAppResourceCleanupState()
        {
        }
        public static new WebAppResourceCleanupState Empty => new WebAppResourceCleanupState();
    }
}
