// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/keyRequests:KeyRequests")]
    public partial class KeyRequests : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ids of the key requests
        /// </summary>
        [Output("keyRequestIds")]
        public Output<ImmutableDictionary<string, string>> KeyRequestIds { get; private set; } = null!;

        /// <summary>
        /// The names of the key requests
        /// </summary>
        [Output("names")]
        public Output<ImmutableArray<string>> Names { get; private set; } = null!;

        /// <summary>
        /// ID of Dynatrace Service, eg. SERVICE-123ABC45678EFGH
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;


        /// <summary>
        /// Create a KeyRequests resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KeyRequests(string name, KeyRequestsArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/keyRequests:KeyRequests", name, args ?? new KeyRequestsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KeyRequests(string name, Input<string> id, KeyRequestsState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/keyRequests:KeyRequests", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KeyRequests resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KeyRequests Get(string name, Input<string> id, KeyRequestsState? state = null, CustomResourceOptions? options = null)
        {
            return new KeyRequests(name, id, state, options);
        }
    }

    public sealed class KeyRequestsArgs : global::Pulumi.ResourceArgs
    {
        [Input("keyRequestIds")]
        private InputMap<string>? _keyRequestIds;

        /// <summary>
        /// The ids of the key requests
        /// </summary>
        public InputMap<string> KeyRequestIds
        {
            get => _keyRequestIds ?? (_keyRequestIds = new InputMap<string>());
            set => _keyRequestIds = value;
        }

        [Input("names")]
        private InputList<string>? _names;

        /// <summary>
        /// The names of the key requests
        /// </summary>
        public InputList<string> Names
        {
            get => _names ?? (_names = new InputList<string>());
            set => _names = value;
        }

        /// <summary>
        /// ID of Dynatrace Service, eg. SERVICE-123ABC45678EFGH
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        public KeyRequestsArgs()
        {
        }
        public static new KeyRequestsArgs Empty => new KeyRequestsArgs();
    }

    public sealed class KeyRequestsState : global::Pulumi.ResourceArgs
    {
        [Input("keyRequestIds")]
        private InputMap<string>? _keyRequestIds;

        /// <summary>
        /// The ids of the key requests
        /// </summary>
        public InputMap<string> KeyRequestIds
        {
            get => _keyRequestIds ?? (_keyRequestIds = new InputMap<string>());
            set => _keyRequestIds = value;
        }

        [Input("names")]
        private InputList<string>? _names;

        /// <summary>
        /// The names of the key requests
        /// </summary>
        public InputList<string> Names
        {
            get => _names ?? (_names = new InputList<string>());
            set => _names = value;
        }

        /// <summary>
        /// ID of Dynatrace Service, eg. SERVICE-123ABC45678EFGH
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        public KeyRequestsState()
        {
        }
        public static new KeyRequestsState Empty => new KeyRequestsState();
    }
}
