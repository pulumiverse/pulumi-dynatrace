// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/oneagentSideMasking:OneagentSideMasking")]
    public partial class OneagentSideMasking : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Exclude email addresses from URLs
        /// </summary>
        [Output("isEmailMaskingEnabled")]
        public Output<bool> IsEmailMaskingEnabled { get; private set; } = null!;

        /// <summary>
        /// Exclude IBANs and payment card numbers from URLs
        /// </summary>
        [Output("isFinancialMaskingEnabled")]
        public Output<bool> IsFinancialMaskingEnabled { get; private set; } = null!;

        /// <summary>
        /// Exclude hexadecimal IDs and consecutive numbers above 5 digits from URLs
        /// </summary>
        [Output("isNumbersMaskingEnabled")]
        public Output<bool> IsNumbersMaskingEnabled { get; private set; } = null!;

        /// <summary>
        /// Exclude query parameters from URLs and web requests
        /// </summary>
        [Output("isQueryMaskingEnabled")]
        public Output<bool> IsQueryMaskingEnabled { get; private set; } = null!;

        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Output("processGroupId")]
        public Output<string?> ProcessGroupId { get; private set; } = null!;


        /// <summary>
        /// Create a OneagentSideMasking resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OneagentSideMasking(string name, OneagentSideMaskingArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/oneagentSideMasking:OneagentSideMasking", name, args ?? new OneagentSideMaskingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OneagentSideMasking(string name, Input<string> id, OneagentSideMaskingState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/oneagentSideMasking:OneagentSideMasking", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OneagentSideMasking resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OneagentSideMasking Get(string name, Input<string> id, OneagentSideMaskingState? state = null, CustomResourceOptions? options = null)
        {
            return new OneagentSideMasking(name, id, state, options);
        }
    }

    public sealed class OneagentSideMaskingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Exclude email addresses from URLs
        /// </summary>
        [Input("isEmailMaskingEnabled", required: true)]
        public Input<bool> IsEmailMaskingEnabled { get; set; } = null!;

        /// <summary>
        /// Exclude IBANs and payment card numbers from URLs
        /// </summary>
        [Input("isFinancialMaskingEnabled", required: true)]
        public Input<bool> IsFinancialMaskingEnabled { get; set; } = null!;

        /// <summary>
        /// Exclude hexadecimal IDs and consecutive numbers above 5 digits from URLs
        /// </summary>
        [Input("isNumbersMaskingEnabled", required: true)]
        public Input<bool> IsNumbersMaskingEnabled { get; set; } = null!;

        /// <summary>
        /// Exclude query parameters from URLs and web requests
        /// </summary>
        [Input("isQueryMaskingEnabled", required: true)]
        public Input<bool> IsQueryMaskingEnabled { get; set; } = null!;

        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("processGroupId")]
        public Input<string>? ProcessGroupId { get; set; }

        public OneagentSideMaskingArgs()
        {
        }
        public static new OneagentSideMaskingArgs Empty => new OneagentSideMaskingArgs();
    }

    public sealed class OneagentSideMaskingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Exclude email addresses from URLs
        /// </summary>
        [Input("isEmailMaskingEnabled")]
        public Input<bool>? IsEmailMaskingEnabled { get; set; }

        /// <summary>
        /// Exclude IBANs and payment card numbers from URLs
        /// </summary>
        [Input("isFinancialMaskingEnabled")]
        public Input<bool>? IsFinancialMaskingEnabled { get; set; }

        /// <summary>
        /// Exclude hexadecimal IDs and consecutive numbers above 5 digits from URLs
        /// </summary>
        [Input("isNumbersMaskingEnabled")]
        public Input<bool>? IsNumbersMaskingEnabled { get; set; }

        /// <summary>
        /// Exclude query parameters from URLs and web requests
        /// </summary>
        [Input("isQueryMaskingEnabled")]
        public Input<bool>? IsQueryMaskingEnabled { get; set; }

        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("processGroupId")]
        public Input<string>? ProcessGroupId { get; set; }

        public OneagentSideMaskingState()
        {
        }
        public static new OneagentSideMaskingState Empty => new OneagentSideMaskingState();
    }
}
