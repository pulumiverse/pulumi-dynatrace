// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/sessionReplayResourceCapture:SessionReplayResourceCapture")]
    public partial class SessionReplayResourceCapture : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Output("applicationId")]
        public Output<string?> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.WebApplication`) When turned on, Dynatrace captures resources for up to 0.1% of user sessions recorded with Session Replay. For details, see [Resource capture](https://dt-url.net/sr-resource-capturing).
        /// </summary>
        [Output("enableResourceCapturing")]
        public Output<bool> EnableResourceCapturing { get; private set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.WebApplication`) Add exclusion rules to avoid the capture of resources from certain pages.
        /// </summary>
        [Output("resourceCaptureUrlExclusionPatternLists")]
        public Output<ImmutableArray<string>> ResourceCaptureUrlExclusionPatternLists { get; private set; } = null!;


        /// <summary>
        /// Create a SessionReplayResourceCapture resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SessionReplayResourceCapture(string name, SessionReplayResourceCaptureArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/sessionReplayResourceCapture:SessionReplayResourceCapture", name, args ?? new SessionReplayResourceCaptureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SessionReplayResourceCapture(string name, Input<string> id, SessionReplayResourceCaptureState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/sessionReplayResourceCapture:SessionReplayResourceCapture", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SessionReplayResourceCapture resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SessionReplayResourceCapture Get(string name, Input<string> id, SessionReplayResourceCaptureState? state = null, CustomResourceOptions? options = null)
        {
            return new SessionReplayResourceCapture(name, id, state, options);
        }
    }

    public sealed class SessionReplayResourceCaptureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.WebApplication`) When turned on, Dynatrace captures resources for up to 0.1% of user sessions recorded with Session Replay. For details, see [Resource capture](https://dt-url.net/sr-resource-capturing).
        /// </summary>
        [Input("enableResourceCapturing", required: true)]
        public Input<bool> EnableResourceCapturing { get; set; } = null!;

        [Input("resourceCaptureUrlExclusionPatternLists")]
        private InputList<string>? _resourceCaptureUrlExclusionPatternLists;

        /// <summary>
        /// (Field has overlap with `dynatrace.WebApplication`) Add exclusion rules to avoid the capture of resources from certain pages.
        /// </summary>
        public InputList<string> ResourceCaptureUrlExclusionPatternLists
        {
            get => _resourceCaptureUrlExclusionPatternLists ?? (_resourceCaptureUrlExclusionPatternLists = new InputList<string>());
            set => _resourceCaptureUrlExclusionPatternLists = value;
        }

        public SessionReplayResourceCaptureArgs()
        {
        }
        public static new SessionReplayResourceCaptureArgs Empty => new SessionReplayResourceCaptureArgs();
    }

    public sealed class SessionReplayResourceCaptureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.WebApplication`) When turned on, Dynatrace captures resources for up to 0.1% of user sessions recorded with Session Replay. For details, see [Resource capture](https://dt-url.net/sr-resource-capturing).
        /// </summary>
        [Input("enableResourceCapturing")]
        public Input<bool>? EnableResourceCapturing { get; set; }

        [Input("resourceCaptureUrlExclusionPatternLists")]
        private InputList<string>? _resourceCaptureUrlExclusionPatternLists;

        /// <summary>
        /// (Field has overlap with `dynatrace.WebApplication`) Add exclusion rules to avoid the capture of resources from certain pages.
        /// </summary>
        public InputList<string> ResourceCaptureUrlExclusionPatternLists
        {
            get => _resourceCaptureUrlExclusionPatternLists ?? (_resourceCaptureUrlExclusionPatternLists = new InputList<string>());
            set => _resourceCaptureUrlExclusionPatternLists = value;
        }

        public SessionReplayResourceCaptureState()
        {
        }
        public static new SessionReplayResourceCaptureState Empty => new SessionReplayResourceCaptureState();
    }
}
