// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    /// <summary>
    /// &gt; **Dynatrace SaaS only**
    /// 
    /// &gt; To utilize this resource, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **Allow read access for identity resources (users and groups)** (`account-idm-read`) and **Allow write access for identity resources (users and groups)** (`account-idm-write`).
    /// 
    /// &gt; This resource is excluded by default in the export utility, please explicitly specify the resource to retrieve existing configuration.
    /// 
    /// ## Dynatrace Documentation
    /// 
    /// - Dynatrace IAM - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions
    /// 
    /// - Settings API - https://www.dynatrace.com/support/help/how-to-use-dynatrace/user-management-and-sso/manage-groups-and-permissions/iam/iam-getting-started
    /// 
    /// ## Resource Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Dynatrace = Pulumiverse.Dynatrace;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var permA = new Dynatrace.IamPermission("permA", new()
    ///     {
    ///         Account = "023733f0-86d8-47d1-88bd-7f5cc2e22eb8",
    ///         Group = "74ec0a82-8010-4f11-8579-b29a5ba865f0",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DynatraceResourceType("dynatrace:index/iamPermission:IamPermission")]
    public partial class IamPermission : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The UUID of the account this permission is valid for
        /// </summary>
        [Output("account")]
        public Output<string?> Account { get; private set; } = null!;

        /// <summary>
        /// The environment this permission is valid (`https://&lt;environmentid&gt;.live.dynatrace.com`). Also required in when trying to specify a management zone permission.
        /// </summary>
        [Output("environment")]
        public Output<string?> Environment { get; private set; } = null!;

        /// <summary>
        /// The ID of the group this permission is valid for
        /// </summary>
        [Output("group")]
        public Output<string> Group { get; private set; } = null!;

        /// <summary>
        /// The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.
        /// </summary>
        [Output("managementZone")]
        public Output<string?> ManagementZone { get; private set; } = null!;

        /// <summary>
        /// Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a IamPermission resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamPermission(string name, IamPermissionArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/iamPermission:IamPermission", name, args ?? new IamPermissionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IamPermission(string name, Input<string> id, IamPermissionState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/iamPermission:IamPermission", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IamPermission resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IamPermission Get(string name, Input<string> id, IamPermissionState? state = null, CustomResourceOptions? options = null)
        {
            return new IamPermission(name, id, state, options);
        }
    }

    public sealed class IamPermissionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UUID of the account this permission is valid for
        /// </summary>
        [Input("account")]
        public Input<string>? Account { get; set; }

        /// <summary>
        /// The environment this permission is valid (`https://&lt;environmentid&gt;.live.dynatrace.com`). Also required in when trying to specify a management zone permission.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// The ID of the group this permission is valid for
        /// </summary>
        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        /// <summary>
        /// The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.
        /// </summary>
        [Input("managementZone")]
        public Input<string>? ManagementZone { get; set; }

        /// <summary>
        /// Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IamPermissionArgs()
        {
        }
        public static new IamPermissionArgs Empty => new IamPermissionArgs();
    }

    public sealed class IamPermissionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UUID of the account this permission is valid for
        /// </summary>
        [Input("account")]
        public Input<string>? Account { get; set; }

        /// <summary>
        /// The environment this permission is valid (`https://&lt;environmentid&gt;.live.dynatrace.com`). Also required in when trying to specify a management zone permission.
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// The ID of the group this permission is valid for
        /// </summary>
        [Input("group")]
        public Input<string>? Group { get; set; }

        /// <summary>
        /// The management zone this permission is valid for. You need to use the attribute `legacy_id` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`. The attribute `environment` is required to get specified also in order to identify the management zone uniquely.
        /// </summary>
        [Input("managementZone")]
        public Input<string>? ManagementZone { get; set; }

        /// <summary>
        /// Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public IamPermissionState()
        {
        }
        public static new IamPermissionState Empty => new IamPermissionState();
    }
}
