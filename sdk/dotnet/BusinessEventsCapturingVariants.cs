// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/businessEventsCapturingVariants:BusinessEventsCapturingVariants")]
    public partial class BusinessEventsCapturingVariants : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
        /// </summary>
        [Output("contentTypeMatcher")]
        public Output<string> ContentTypeMatcher { get; private set; } = null!;

        /// <summary>
        /// Content-type match value
        /// </summary>
        [Output("contentTypeValue")]
        public Output<string> ContentTypeValue { get; private set; } = null!;

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Output("insertAfter")]
        public Output<string> InsertAfter { get; private set; } = null!;

        /// <summary>
        /// Possible Values: `JSON`, `Raw`, `Text`, `URLencoded`, `XML`
        /// </summary>
        [Output("parser")]
        public Output<string> Parser { get; private set; } = null!;

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;


        /// <summary>
        /// Create a BusinessEventsCapturingVariants resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BusinessEventsCapturingVariants(string name, BusinessEventsCapturingVariantsArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/businessEventsCapturingVariants:BusinessEventsCapturingVariants", name, args ?? new BusinessEventsCapturingVariantsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BusinessEventsCapturingVariants(string name, Input<string> id, BusinessEventsCapturingVariantsState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/businessEventsCapturingVariants:BusinessEventsCapturingVariants", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BusinessEventsCapturingVariants resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BusinessEventsCapturingVariants Get(string name, Input<string> id, BusinessEventsCapturingVariantsState? state = null, CustomResourceOptions? options = null)
        {
            return new BusinessEventsCapturingVariants(name, id, state, options);
        }
    }

    public sealed class BusinessEventsCapturingVariantsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
        /// </summary>
        [Input("contentTypeMatcher", required: true)]
        public Input<string> ContentTypeMatcher { get; set; } = null!;

        /// <summary>
        /// Content-type match value
        /// </summary>
        [Input("contentTypeValue", required: true)]
        public Input<string> ContentTypeValue { get; set; } = null!;

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// Possible Values: `JSON`, `Raw`, `Text`, `URLencoded`, `XML`
        /// </summary>
        [Input("parser", required: true)]
        public Input<string> Parser { get; set; } = null!;

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public BusinessEventsCapturingVariantsArgs()
        {
        }
        public static new BusinessEventsCapturingVariantsArgs Empty => new BusinessEventsCapturingVariantsArgs();
    }

    public sealed class BusinessEventsCapturingVariantsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
        /// </summary>
        [Input("contentTypeMatcher")]
        public Input<string>? ContentTypeMatcher { get; set; }

        /// <summary>
        /// Content-type match value
        /// </summary>
        [Input("contentTypeValue")]
        public Input<string>? ContentTypeValue { get; set; }

        /// <summary>
        /// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
        /// </summary>
        [Input("insertAfter")]
        public Input<string>? InsertAfter { get; set; }

        /// <summary>
        /// Possible Values: `JSON`, `Raw`, `Text`, `URLencoded`, `XML`
        /// </summary>
        [Input("parser")]
        public Input<string>? Parser { get; set; }

        /// <summary>
        /// The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        public BusinessEventsCapturingVariantsState()
        {
        }
        public static new BusinessEventsCapturingVariantsState Empty => new BusinessEventsCapturingVariantsState();
    }
}
