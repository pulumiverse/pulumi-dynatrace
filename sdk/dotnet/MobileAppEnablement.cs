// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/mobileAppEnablement:MobileAppEnablement")]
    public partial class MobileAppEnablement : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Output("applicationId")]
        public Output<string?> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.MobileApplication`) Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.
        /// </summary>
        [Output("rum")]
        public Output<Outputs.MobileAppEnablementRum> Rum { get; private set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.MobileApplication`) [Session Replay on crashes](https://dt-url.net/session-replay) gives you additional context for crash analysis in the form of video-like screen recordings that replay user actions immediately preceding a detected crash, while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).
        /// </summary>
        [Output("sessionReplay")]
        public Output<Outputs.MobileAppEnablementSessionReplay> SessionReplay { get; private set; } = null!;


        /// <summary>
        /// Create a MobileAppEnablement resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MobileAppEnablement(string name, MobileAppEnablementArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/mobileAppEnablement:MobileAppEnablement", name, args ?? new MobileAppEnablementArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MobileAppEnablement(string name, Input<string> id, MobileAppEnablementState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/mobileAppEnablement:MobileAppEnablement", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MobileAppEnablement resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MobileAppEnablement Get(string name, Input<string> id, MobileAppEnablementState? state = null, CustomResourceOptions? options = null)
        {
            return new MobileAppEnablement(name, id, state, options);
        }
    }

    public sealed class MobileAppEnablementArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.MobileApplication`) Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.
        /// </summary>
        [Input("rum", required: true)]
        public Input<Inputs.MobileAppEnablementRumArgs> Rum { get; set; } = null!;

        /// <summary>
        /// (Field has overlap with `dynatrace.MobileApplication`) [Session Replay on crashes](https://dt-url.net/session-replay) gives you additional context for crash analysis in the form of video-like screen recordings that replay user actions immediately preceding a detected crash, while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).
        /// </summary>
        [Input("sessionReplay", required: true)]
        public Input<Inputs.MobileAppEnablementSessionReplayArgs> SessionReplay { get; set; } = null!;

        public MobileAppEnablementArgs()
        {
        }
        public static new MobileAppEnablementArgs Empty => new MobileAppEnablementArgs();
    }

    public sealed class MobileAppEnablementState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.MobileApplication`) Capture and analyze all user actions within your application. Enable [Real User Monitoring (RUM)](https://dt-url.net/1n2b0prq) to monitor and improve your application's performance, identify errors, and gain insight into your user's behavior and experience.
        /// </summary>
        [Input("rum")]
        public Input<Inputs.MobileAppEnablementRumGetArgs>? Rum { get; set; }

        /// <summary>
        /// (Field has overlap with `dynatrace.MobileApplication`) [Session Replay on crashes](https://dt-url.net/session-replay) gives you additional context for crash analysis in the form of video-like screen recordings that replay user actions immediately preceding a detected crash, while providing [best-in-class security and data protection](https://dt-url.net/b303zxj).
        /// </summary>
        [Input("sessionReplay")]
        public Input<Inputs.MobileAppEnablementSessionReplayGetArgs>? SessionReplay { get; set; }

        public MobileAppEnablementState()
        {
        }
        public static new MobileAppEnablementState Empty => new MobileAppEnablementState();
    }
}
