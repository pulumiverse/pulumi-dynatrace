// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/applicationDetectionRule:ApplicationDetectionRule")]
    public partial class ApplicationDetectionRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Dynatrace entity ID of the application, for example APPLICATION-4A3B43
        /// </summary>
        [Output("applicationIdentifier")]
        public Output<string> ApplicationIdentifier { get; private set; } = null!;

        /// <summary>
        /// The condition of an application detection rule
        /// </summary>
        [Output("filterConfig")]
        public Output<Outputs.ApplicationDetectionRuleFilterConfig> FilterConfig { get; private set; } = null!;

        /// <summary>
        /// The unique name of the Application detection rule
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The order of the rule in the rules list
        /// </summary>
        [Output("order")]
        public Output<string?> Order { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationDetectionRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationDetectionRule(string name, ApplicationDetectionRuleArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/applicationDetectionRule:ApplicationDetectionRule", name, args ?? new ApplicationDetectionRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationDetectionRule(string name, Input<string> id, ApplicationDetectionRuleState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/applicationDetectionRule:ApplicationDetectionRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationDetectionRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationDetectionRule Get(string name, Input<string> id, ApplicationDetectionRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationDetectionRule(name, id, state, options);
        }
    }

    public sealed class ApplicationDetectionRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Dynatrace entity ID of the application, for example APPLICATION-4A3B43
        /// </summary>
        [Input("applicationIdentifier", required: true)]
        public Input<string> ApplicationIdentifier { get; set; } = null!;

        /// <summary>
        /// The condition of an application detection rule
        /// </summary>
        [Input("filterConfig", required: true)]
        public Input<Inputs.ApplicationDetectionRuleFilterConfigArgs> FilterConfig { get; set; } = null!;

        /// <summary>
        /// The unique name of the Application detection rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The order of the rule in the rules list
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        public ApplicationDetectionRuleArgs()
        {
        }
        public static new ApplicationDetectionRuleArgs Empty => new ApplicationDetectionRuleArgs();
    }

    public sealed class ApplicationDetectionRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Dynatrace entity ID of the application, for example APPLICATION-4A3B43
        /// </summary>
        [Input("applicationIdentifier")]
        public Input<string>? ApplicationIdentifier { get; set; }

        /// <summary>
        /// The condition of an application detection rule
        /// </summary>
        [Input("filterConfig")]
        public Input<Inputs.ApplicationDetectionRuleFilterConfigGetArgs>? FilterConfig { get; set; }

        /// <summary>
        /// The unique name of the Application detection rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The order of the rule in the rules list
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        public ApplicationDetectionRuleState()
        {
        }
        public static new ApplicationDetectionRuleState Empty => new ApplicationDetectionRuleState();
    }
}
