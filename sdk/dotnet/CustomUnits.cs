// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/customUnits:CustomUnits")]
    public partial class CustomUnits : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Unit description should provide additional information about the new unit
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Unit name has to be unique and is used as identifier.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Unit plural name represent the plural form of the unit name.
        /// </summary>
        [Output("pluralName")]
        public Output<string> PluralName { get; private set; } = null!;

        /// <summary>
        /// Unit symbol has to be unique.
        /// </summary>
        [Output("symbol")]
        public Output<string> Symbol { get; private set; } = null!;


        /// <summary>
        /// Create a CustomUnits resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomUnits(string name, CustomUnitsArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/customUnits:CustomUnits", name, args ?? new CustomUnitsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomUnits(string name, Input<string> id, CustomUnitsState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/customUnits:CustomUnits", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomUnits resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomUnits Get(string name, Input<string> id, CustomUnitsState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomUnits(name, id, state, options);
        }
    }

    public sealed class CustomUnitsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unit description should provide additional information about the new unit
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// Unit name has to be unique and is used as identifier.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unit plural name represent the plural form of the unit name.
        /// </summary>
        [Input("pluralName", required: true)]
        public Input<string> PluralName { get; set; } = null!;

        /// <summary>
        /// Unit symbol has to be unique.
        /// </summary>
        [Input("symbol", required: true)]
        public Input<string> Symbol { get; set; } = null!;

        public CustomUnitsArgs()
        {
        }
        public static new CustomUnitsArgs Empty => new CustomUnitsArgs();
    }

    public sealed class CustomUnitsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unit description should provide additional information about the new unit
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Unit name has to be unique and is used as identifier.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Unit plural name represent the plural form of the unit name.
        /// </summary>
        [Input("pluralName")]
        public Input<string>? PluralName { get; set; }

        /// <summary>
        /// Unit symbol has to be unique.
        /// </summary>
        [Input("symbol")]
        public Input<string>? Symbol { get; set; }

        public CustomUnitsState()
        {
        }
        public static new CustomUnitsState Empty => new CustomUnitsState();
    }
}
