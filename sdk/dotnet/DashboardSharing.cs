// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    /// <summary>
    /// &gt; This is a child resource of dynatrace_json_dashboard, therefore it is automatically retrieved with the dashboard.
    /// 
    /// &gt; This resource requires the API token scopes **Read configuration** (`ReadConfig`) and **Write configuration** (`WriteConfig`)
    /// 
    /// ## Dynatrace Documentation
    /// 
    /// - Share Dynatrace dashboards - https://www.dynatrace.com/support/help/how-to-use-dynatrace/dashboards-and-charts/dashboards/share-dashboards
    /// 
    /// - Dashboards API - https://www.dynatrace.com/support/help/dynatrace-api/configuration-api/dashboards-api
    /// </summary>
    [DynatraceResourceType("dynatrace:index/dashboardSharing:DashboardSharing")]
    public partial class DashboardSharing : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Dynatrace entity ID of the dashboard
        /// </summary>
        [Output("dashboardId")]
        public Output<string> DashboardId { get; private set; } = null!;

        /// <summary>
        /// The dashboard is shared (`True`) or private (`False`). Make sure that this value is aligned with the attribute `Shared` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// Reserved for internal use by the provider
        /// </summary>
        [Output("muted")]
        public Output<bool> Muted { get; private set; } = null!;

        /// <summary>
        /// Access permissions of the dashboard
        /// </summary>
        [Output("permissions")]
        public Output<Outputs.DashboardSharingPermissions?> Permissions { get; private set; } = null!;

        /// <summary>
        /// If `True` the dashboard will be marked as preset. Setting this attribute to `True` will automatically enforce a specific set of permissions - Dashboards flagged as Preset are shared by default. Make sure that this value is aligned with the attribute `Preset` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.
        /// </summary>
        [Output("preset")]
        public Output<bool?> Preset { get; private set; } = null!;

        /// <summary>
        /// Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard
        /// </summary>
        [Output("public")]
        public Output<Outputs.DashboardSharingPublic?> Public { get; private set; } = null!;


        /// <summary>
        /// Create a DashboardSharing resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DashboardSharing(string name, DashboardSharingArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/dashboardSharing:DashboardSharing", name, args ?? new DashboardSharingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DashboardSharing(string name, Input<string> id, DashboardSharingState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/dashboardSharing:DashboardSharing", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DashboardSharing resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DashboardSharing Get(string name, Input<string> id, DashboardSharingState? state = null, CustomResourceOptions? options = null)
        {
            return new DashboardSharing(name, id, state, options);
        }
    }

    public sealed class DashboardSharingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Dynatrace entity ID of the dashboard
        /// </summary>
        [Input("dashboardId", required: true)]
        public Input<string> DashboardId { get; set; } = null!;

        /// <summary>
        /// The dashboard is shared (`True`) or private (`False`). Make sure that this value is aligned with the attribute `Shared` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Access permissions of the dashboard
        /// </summary>
        [Input("permissions")]
        public Input<Inputs.DashboardSharingPermissionsArgs>? Permissions { get; set; }

        /// <summary>
        /// If `True` the dashboard will be marked as preset. Setting this attribute to `True` will automatically enforce a specific set of permissions - Dashboards flagged as Preset are shared by default. Make sure that this value is aligned with the attribute `Preset` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.
        /// </summary>
        [Input("preset")]
        public Input<bool>? Preset { get; set; }

        /// <summary>
        /// Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard
        /// </summary>
        [Input("public")]
        public Input<Inputs.DashboardSharingPublicArgs>? Public { get; set; }

        public DashboardSharingArgs()
        {
        }
        public static new DashboardSharingArgs Empty => new DashboardSharingArgs();
    }

    public sealed class DashboardSharingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Dynatrace entity ID of the dashboard
        /// </summary>
        [Input("dashboardId")]
        public Input<string>? DashboardId { get; set; }

        /// <summary>
        /// The dashboard is shared (`True`) or private (`False`). Make sure that this value is aligned with the attribute `Shared` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Reserved for internal use by the provider
        /// </summary>
        [Input("muted")]
        public Input<bool>? Muted { get; set; }

        /// <summary>
        /// Access permissions of the dashboard
        /// </summary>
        [Input("permissions")]
        public Input<Inputs.DashboardSharingPermissionsGetArgs>? Permissions { get; set; }

        /// <summary>
        /// If `True` the dashboard will be marked as preset. Setting this attribute to `True` will automatically enforce a specific set of permissions - Dashboards flagged as Preset are shared by default. Make sure that this value is aligned with the attribute `Preset` of the resources `dynatrace.Dashboard` and `dynatrace.JsonDashboard`. Otherwise you will encounter non-empty plans.
        /// </summary>
        [Input("preset")]
        public Input<bool>? Preset { get; set; }

        /// <summary>
        /// Configuration of the [anonymous access](https://dt-url.net/ov03sf1) to the dashboard
        /// </summary>
        [Input("public")]
        public Input<Inputs.DashboardSharingPublicGetArgs>? Public { get; set; }

        public DashboardSharingState()
        {
        }
        public static new DashboardSharingState Empty => new DashboardSharingState();
    }
}
