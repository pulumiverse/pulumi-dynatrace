// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Dynatrace
{
    [DynatraceResourceType("dynatrace:index/mobileAppAnomalies:MobileAppAnomalies")]
    public partial class MobileAppAnomalies : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Error rate increase
        /// </summary>
        [Output("errorRateIncrease")]
        public Output<Outputs.MobileAppAnomaliesErrorRateIncrease> ErrorRateIncrease { get; private set; } = null!;

        /// <summary>
        /// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        /// <summary>
        /// Slow user actions
        /// </summary>
        [Output("slowUserActions")]
        public Output<Outputs.MobileAppAnomaliesSlowUserActions> SlowUserActions { get; private set; } = null!;

        /// <summary>
        /// Unexpected high load
        /// </summary>
        [Output("unexpectedHighLoad")]
        public Output<Outputs.MobileAppAnomaliesUnexpectedHighLoad> UnexpectedHighLoad { get; private set; } = null!;

        /// <summary>
        /// Unexpected low load
        /// </summary>
        [Output("unexpectedLowLoad")]
        public Output<Outputs.MobileAppAnomaliesUnexpectedLowLoad> UnexpectedLowLoad { get; private set; } = null!;


        /// <summary>
        /// Create a MobileAppAnomalies resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MobileAppAnomalies(string name, MobileAppAnomaliesArgs args, CustomResourceOptions? options = null)
            : base("dynatrace:index/mobileAppAnomalies:MobileAppAnomalies", name, args ?? new MobileAppAnomaliesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MobileAppAnomalies(string name, Input<string> id, MobileAppAnomaliesState? state = null, CustomResourceOptions? options = null)
            : base("dynatrace:index/mobileAppAnomalies:MobileAppAnomalies", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumiverse",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MobileAppAnomalies resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MobileAppAnomalies Get(string name, Input<string> id, MobileAppAnomaliesState? state = null, CustomResourceOptions? options = null)
        {
            return new MobileAppAnomalies(name, id, state, options);
        }
    }

    public sealed class MobileAppAnomaliesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Error rate increase
        /// </summary>
        [Input("errorRateIncrease", required: true)]
        public Input<Inputs.MobileAppAnomaliesErrorRateIncreaseArgs> ErrorRateIncrease { get; set; } = null!;

        /// <summary>
        /// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Slow user actions
        /// </summary>
        [Input("slowUserActions", required: true)]
        public Input<Inputs.MobileAppAnomaliesSlowUserActionsArgs> SlowUserActions { get; set; } = null!;

        /// <summary>
        /// Unexpected high load
        /// </summary>
        [Input("unexpectedHighLoad", required: true)]
        public Input<Inputs.MobileAppAnomaliesUnexpectedHighLoadArgs> UnexpectedHighLoad { get; set; } = null!;

        /// <summary>
        /// Unexpected low load
        /// </summary>
        [Input("unexpectedLowLoad", required: true)]
        public Input<Inputs.MobileAppAnomaliesUnexpectedLowLoadArgs> UnexpectedLowLoad { get; set; } = null!;

        public MobileAppAnomaliesArgs()
        {
        }
        public static new MobileAppAnomaliesArgs Empty => new MobileAppAnomaliesArgs();
    }

    public sealed class MobileAppAnomaliesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Error rate increase
        /// </summary>
        [Input("errorRateIncrease")]
        public Input<Inputs.MobileAppAnomaliesErrorRateIncreaseGetArgs>? ErrorRateIncrease { get; set; }

        /// <summary>
        /// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// Slow user actions
        /// </summary>
        [Input("slowUserActions")]
        public Input<Inputs.MobileAppAnomaliesSlowUserActionsGetArgs>? SlowUserActions { get; set; }

        /// <summary>
        /// Unexpected high load
        /// </summary>
        [Input("unexpectedHighLoad")]
        public Input<Inputs.MobileAppAnomaliesUnexpectedHighLoadGetArgs>? UnexpectedHighLoad { get; set; }

        /// <summary>
        /// Unexpected low load
        /// </summary>
        [Input("unexpectedLowLoad")]
        public Input<Inputs.MobileAppAnomaliesUnexpectedLowLoadGetArgs>? UnexpectedLowLoad { get; set; }

        public MobileAppAnomaliesState()
        {
        }
        public static new MobileAppAnomaliesState Empty => new MobileAppAnomaliesState();
    }
}
