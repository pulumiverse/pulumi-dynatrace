# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['DiscoveryDefaultRulesArgs', 'DiscoveryDefaultRules']

@pulumi.input_type
class DiscoveryDefaultRulesArgs:
    def __init__(__self__, *,
                 rule: pulumi.Input['DiscoveryDefaultRulesRuleArgs'],
                 settings: pulumi.Input['DiscoveryDefaultRulesSettingsArgs']):
        """
        The set of arguments for constructing a DiscoveryDefaultRules resource.
        :param pulumi.Input['DiscoveryDefaultRulesRuleArgs'] rule: Rule:
        :param pulumi.Input['DiscoveryDefaultRulesSettingsArgs'] settings: Settings:
        """
        pulumi.set(__self__, "rule", rule)
        pulumi.set(__self__, "settings", settings)

    @property
    @pulumi.getter
    def rule(self) -> pulumi.Input['DiscoveryDefaultRulesRuleArgs']:
        """
        Rule:
        """
        return pulumi.get(self, "rule")

    @rule.setter
    def rule(self, value: pulumi.Input['DiscoveryDefaultRulesRuleArgs']):
        pulumi.set(self, "rule", value)

    @property
    @pulumi.getter
    def settings(self) -> pulumi.Input['DiscoveryDefaultRulesSettingsArgs']:
        """
        Settings:
        """
        return pulumi.get(self, "settings")

    @settings.setter
    def settings(self, value: pulumi.Input['DiscoveryDefaultRulesSettingsArgs']):
        pulumi.set(self, "settings", value)


@pulumi.input_type
class _DiscoveryDefaultRulesState:
    def __init__(__self__, *,
                 rule: Optional[pulumi.Input['DiscoveryDefaultRulesRuleArgs']] = None,
                 settings: Optional[pulumi.Input['DiscoveryDefaultRulesSettingsArgs']] = None):
        """
        Input properties used for looking up and filtering DiscoveryDefaultRules resources.
        :param pulumi.Input['DiscoveryDefaultRulesRuleArgs'] rule: Rule:
        :param pulumi.Input['DiscoveryDefaultRulesSettingsArgs'] settings: Settings:
        """
        if rule is not None:
            pulumi.set(__self__, "rule", rule)
        if settings is not None:
            pulumi.set(__self__, "settings", settings)

    @property
    @pulumi.getter
    def rule(self) -> Optional[pulumi.Input['DiscoveryDefaultRulesRuleArgs']]:
        """
        Rule:
        """
        return pulumi.get(self, "rule")

    @rule.setter
    def rule(self, value: Optional[pulumi.Input['DiscoveryDefaultRulesRuleArgs']]):
        pulumi.set(self, "rule", value)

    @property
    @pulumi.getter
    def settings(self) -> Optional[pulumi.Input['DiscoveryDefaultRulesSettingsArgs']]:
        """
        Settings:
        """
        return pulumi.get(self, "settings")

    @settings.setter
    def settings(self, value: Optional[pulumi.Input['DiscoveryDefaultRulesSettingsArgs']]):
        pulumi.set(self, "settings", value)


class DiscoveryDefaultRules(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 rule: Optional[pulumi.Input[Union['DiscoveryDefaultRulesRuleArgs', 'DiscoveryDefaultRulesRuleArgsDict']]] = None,
                 settings: Optional[pulumi.Input[Union['DiscoveryDefaultRulesSettingsArgs', 'DiscoveryDefaultRulesSettingsArgsDict']]] = None,
                 __props__=None):
        """
        Create a DiscoveryDefaultRules resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['DiscoveryDefaultRulesRuleArgs', 'DiscoveryDefaultRulesRuleArgsDict']] rule: Rule:
        :param pulumi.Input[Union['DiscoveryDefaultRulesSettingsArgs', 'DiscoveryDefaultRulesSettingsArgsDict']] settings: Settings:
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DiscoveryDefaultRulesArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a DiscoveryDefaultRules resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param DiscoveryDefaultRulesArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DiscoveryDefaultRulesArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 rule: Optional[pulumi.Input[Union['DiscoveryDefaultRulesRuleArgs', 'DiscoveryDefaultRulesRuleArgsDict']]] = None,
                 settings: Optional[pulumi.Input[Union['DiscoveryDefaultRulesSettingsArgs', 'DiscoveryDefaultRulesSettingsArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DiscoveryDefaultRulesArgs.__new__(DiscoveryDefaultRulesArgs)

            if rule is None and not opts.urn:
                raise TypeError("Missing required property 'rule'")
            __props__.__dict__["rule"] = rule
            if settings is None and not opts.urn:
                raise TypeError("Missing required property 'settings'")
            __props__.__dict__["settings"] = settings
        super(DiscoveryDefaultRules, __self__).__init__(
            'dynatrace:index/discoveryDefaultRules:DiscoveryDefaultRules',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            rule: Optional[pulumi.Input[Union['DiscoveryDefaultRulesRuleArgs', 'DiscoveryDefaultRulesRuleArgsDict']]] = None,
            settings: Optional[pulumi.Input[Union['DiscoveryDefaultRulesSettingsArgs', 'DiscoveryDefaultRulesSettingsArgsDict']]] = None) -> 'DiscoveryDefaultRules':
        """
        Get an existing DiscoveryDefaultRules resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['DiscoveryDefaultRulesRuleArgs', 'DiscoveryDefaultRulesRuleArgsDict']] rule: Rule:
        :param pulumi.Input[Union['DiscoveryDefaultRulesSettingsArgs', 'DiscoveryDefaultRulesSettingsArgsDict']] settings: Settings:
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DiscoveryDefaultRulesState.__new__(_DiscoveryDefaultRulesState)

        __props__.__dict__["rule"] = rule
        __props__.__dict__["settings"] = settings
        return DiscoveryDefaultRules(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def rule(self) -> pulumi.Output['outputs.DiscoveryDefaultRulesRule']:
        """
        Rule:
        """
        return pulumi.get(self, "rule")

    @property
    @pulumi.getter
    def settings(self) -> pulumi.Output['outputs.DiscoveryDefaultRulesSettings']:
        """
        Settings:
        """
        return pulumi.get(self, "settings")

