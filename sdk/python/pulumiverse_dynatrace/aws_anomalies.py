# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['AwsAnomaliesArgs', 'AwsAnomalies']

@pulumi.input_type
class AwsAnomaliesArgs:
    def __init__(__self__, *,
                 ec2_candidate_high_cpu_detection: pulumi.Input['AwsAnomaliesEc2CandidateHighCpuDetectionArgs'],
                 elb_high_connection_errors_detection: pulumi.Input['AwsAnomaliesElbHighConnectionErrorsDetectionArgs'],
                 lambda_high_error_rate_detection: pulumi.Input['AwsAnomaliesLambdaHighErrorRateDetectionArgs'],
                 rds_high_cpu_detection: pulumi.Input['AwsAnomaliesRdsHighCpuDetectionArgs'],
                 rds_high_memory_detection: pulumi.Input['AwsAnomaliesRdsHighMemoryDetectionArgs'],
                 rds_high_write_read_latency_detection: pulumi.Input['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs'],
                 rds_low_storage_detection: pulumi.Input['AwsAnomaliesRdsLowStorageDetectionArgs'],
                 rds_restarts_sequence_detection: pulumi.Input['AwsAnomaliesRdsRestartsSequenceDetectionArgs']):
        """
        The set of arguments for constructing a AwsAnomalies resource.
        :param pulumi.Input['AwsAnomaliesEc2CandidateHighCpuDetectionArgs'] ec2_candidate_high_cpu_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesElbHighConnectionErrorsDetectionArgs'] elb_high_connection_errors_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesLambdaHighErrorRateDetectionArgs'] lambda_high_error_rate_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsHighCpuDetectionArgs'] rds_high_cpu_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsHighMemoryDetectionArgs'] rds_high_memory_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs'] rds_high_write_read_latency_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsLowStorageDetectionArgs'] rds_low_storage_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsRestartsSequenceDetectionArgs'] rds_restarts_sequence_detection: no documentation available
        """
        pulumi.set(__self__, "ec2_candidate_high_cpu_detection", ec2_candidate_high_cpu_detection)
        pulumi.set(__self__, "elb_high_connection_errors_detection", elb_high_connection_errors_detection)
        pulumi.set(__self__, "lambda_high_error_rate_detection", lambda_high_error_rate_detection)
        pulumi.set(__self__, "rds_high_cpu_detection", rds_high_cpu_detection)
        pulumi.set(__self__, "rds_high_memory_detection", rds_high_memory_detection)
        pulumi.set(__self__, "rds_high_write_read_latency_detection", rds_high_write_read_latency_detection)
        pulumi.set(__self__, "rds_low_storage_detection", rds_low_storage_detection)
        pulumi.set(__self__, "rds_restarts_sequence_detection", rds_restarts_sequence_detection)

    @property
    @pulumi.getter(name="ec2CandidateHighCpuDetection")
    def ec2_candidate_high_cpu_detection(self) -> pulumi.Input['AwsAnomaliesEc2CandidateHighCpuDetectionArgs']:
        """
        no documentation available
        """
        return pulumi.get(self, "ec2_candidate_high_cpu_detection")

    @ec2_candidate_high_cpu_detection.setter
    def ec2_candidate_high_cpu_detection(self, value: pulumi.Input['AwsAnomaliesEc2CandidateHighCpuDetectionArgs']):
        pulumi.set(self, "ec2_candidate_high_cpu_detection", value)

    @property
    @pulumi.getter(name="elbHighConnectionErrorsDetection")
    def elb_high_connection_errors_detection(self) -> pulumi.Input['AwsAnomaliesElbHighConnectionErrorsDetectionArgs']:
        """
        no documentation available
        """
        return pulumi.get(self, "elb_high_connection_errors_detection")

    @elb_high_connection_errors_detection.setter
    def elb_high_connection_errors_detection(self, value: pulumi.Input['AwsAnomaliesElbHighConnectionErrorsDetectionArgs']):
        pulumi.set(self, "elb_high_connection_errors_detection", value)

    @property
    @pulumi.getter(name="lambdaHighErrorRateDetection")
    def lambda_high_error_rate_detection(self) -> pulumi.Input['AwsAnomaliesLambdaHighErrorRateDetectionArgs']:
        """
        no documentation available
        """
        return pulumi.get(self, "lambda_high_error_rate_detection")

    @lambda_high_error_rate_detection.setter
    def lambda_high_error_rate_detection(self, value: pulumi.Input['AwsAnomaliesLambdaHighErrorRateDetectionArgs']):
        pulumi.set(self, "lambda_high_error_rate_detection", value)

    @property
    @pulumi.getter(name="rdsHighCpuDetection")
    def rds_high_cpu_detection(self) -> pulumi.Input['AwsAnomaliesRdsHighCpuDetectionArgs']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_cpu_detection")

    @rds_high_cpu_detection.setter
    def rds_high_cpu_detection(self, value: pulumi.Input['AwsAnomaliesRdsHighCpuDetectionArgs']):
        pulumi.set(self, "rds_high_cpu_detection", value)

    @property
    @pulumi.getter(name="rdsHighMemoryDetection")
    def rds_high_memory_detection(self) -> pulumi.Input['AwsAnomaliesRdsHighMemoryDetectionArgs']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_memory_detection")

    @rds_high_memory_detection.setter
    def rds_high_memory_detection(self, value: pulumi.Input['AwsAnomaliesRdsHighMemoryDetectionArgs']):
        pulumi.set(self, "rds_high_memory_detection", value)

    @property
    @pulumi.getter(name="rdsHighWriteReadLatencyDetection")
    def rds_high_write_read_latency_detection(self) -> pulumi.Input['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_write_read_latency_detection")

    @rds_high_write_read_latency_detection.setter
    def rds_high_write_read_latency_detection(self, value: pulumi.Input['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs']):
        pulumi.set(self, "rds_high_write_read_latency_detection", value)

    @property
    @pulumi.getter(name="rdsLowStorageDetection")
    def rds_low_storage_detection(self) -> pulumi.Input['AwsAnomaliesRdsLowStorageDetectionArgs']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_low_storage_detection")

    @rds_low_storage_detection.setter
    def rds_low_storage_detection(self, value: pulumi.Input['AwsAnomaliesRdsLowStorageDetectionArgs']):
        pulumi.set(self, "rds_low_storage_detection", value)

    @property
    @pulumi.getter(name="rdsRestartsSequenceDetection")
    def rds_restarts_sequence_detection(self) -> pulumi.Input['AwsAnomaliesRdsRestartsSequenceDetectionArgs']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_restarts_sequence_detection")

    @rds_restarts_sequence_detection.setter
    def rds_restarts_sequence_detection(self, value: pulumi.Input['AwsAnomaliesRdsRestartsSequenceDetectionArgs']):
        pulumi.set(self, "rds_restarts_sequence_detection", value)


@pulumi.input_type
class _AwsAnomaliesState:
    def __init__(__self__, *,
                 ec2_candidate_high_cpu_detection: Optional[pulumi.Input['AwsAnomaliesEc2CandidateHighCpuDetectionArgs']] = None,
                 elb_high_connection_errors_detection: Optional[pulumi.Input['AwsAnomaliesElbHighConnectionErrorsDetectionArgs']] = None,
                 lambda_high_error_rate_detection: Optional[pulumi.Input['AwsAnomaliesLambdaHighErrorRateDetectionArgs']] = None,
                 rds_high_cpu_detection: Optional[pulumi.Input['AwsAnomaliesRdsHighCpuDetectionArgs']] = None,
                 rds_high_memory_detection: Optional[pulumi.Input['AwsAnomaliesRdsHighMemoryDetectionArgs']] = None,
                 rds_high_write_read_latency_detection: Optional[pulumi.Input['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs']] = None,
                 rds_low_storage_detection: Optional[pulumi.Input['AwsAnomaliesRdsLowStorageDetectionArgs']] = None,
                 rds_restarts_sequence_detection: Optional[pulumi.Input['AwsAnomaliesRdsRestartsSequenceDetectionArgs']] = None):
        """
        Input properties used for looking up and filtering AwsAnomalies resources.
        :param pulumi.Input['AwsAnomaliesEc2CandidateHighCpuDetectionArgs'] ec2_candidate_high_cpu_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesElbHighConnectionErrorsDetectionArgs'] elb_high_connection_errors_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesLambdaHighErrorRateDetectionArgs'] lambda_high_error_rate_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsHighCpuDetectionArgs'] rds_high_cpu_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsHighMemoryDetectionArgs'] rds_high_memory_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs'] rds_high_write_read_latency_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsLowStorageDetectionArgs'] rds_low_storage_detection: no documentation available
        :param pulumi.Input['AwsAnomaliesRdsRestartsSequenceDetectionArgs'] rds_restarts_sequence_detection: no documentation available
        """
        if ec2_candidate_high_cpu_detection is not None:
            pulumi.set(__self__, "ec2_candidate_high_cpu_detection", ec2_candidate_high_cpu_detection)
        if elb_high_connection_errors_detection is not None:
            pulumi.set(__self__, "elb_high_connection_errors_detection", elb_high_connection_errors_detection)
        if lambda_high_error_rate_detection is not None:
            pulumi.set(__self__, "lambda_high_error_rate_detection", lambda_high_error_rate_detection)
        if rds_high_cpu_detection is not None:
            pulumi.set(__self__, "rds_high_cpu_detection", rds_high_cpu_detection)
        if rds_high_memory_detection is not None:
            pulumi.set(__self__, "rds_high_memory_detection", rds_high_memory_detection)
        if rds_high_write_read_latency_detection is not None:
            pulumi.set(__self__, "rds_high_write_read_latency_detection", rds_high_write_read_latency_detection)
        if rds_low_storage_detection is not None:
            pulumi.set(__self__, "rds_low_storage_detection", rds_low_storage_detection)
        if rds_restarts_sequence_detection is not None:
            pulumi.set(__self__, "rds_restarts_sequence_detection", rds_restarts_sequence_detection)

    @property
    @pulumi.getter(name="ec2CandidateHighCpuDetection")
    def ec2_candidate_high_cpu_detection(self) -> Optional[pulumi.Input['AwsAnomaliesEc2CandidateHighCpuDetectionArgs']]:
        """
        no documentation available
        """
        return pulumi.get(self, "ec2_candidate_high_cpu_detection")

    @ec2_candidate_high_cpu_detection.setter
    def ec2_candidate_high_cpu_detection(self, value: Optional[pulumi.Input['AwsAnomaliesEc2CandidateHighCpuDetectionArgs']]):
        pulumi.set(self, "ec2_candidate_high_cpu_detection", value)

    @property
    @pulumi.getter(name="elbHighConnectionErrorsDetection")
    def elb_high_connection_errors_detection(self) -> Optional[pulumi.Input['AwsAnomaliesElbHighConnectionErrorsDetectionArgs']]:
        """
        no documentation available
        """
        return pulumi.get(self, "elb_high_connection_errors_detection")

    @elb_high_connection_errors_detection.setter
    def elb_high_connection_errors_detection(self, value: Optional[pulumi.Input['AwsAnomaliesElbHighConnectionErrorsDetectionArgs']]):
        pulumi.set(self, "elb_high_connection_errors_detection", value)

    @property
    @pulumi.getter(name="lambdaHighErrorRateDetection")
    def lambda_high_error_rate_detection(self) -> Optional[pulumi.Input['AwsAnomaliesLambdaHighErrorRateDetectionArgs']]:
        """
        no documentation available
        """
        return pulumi.get(self, "lambda_high_error_rate_detection")

    @lambda_high_error_rate_detection.setter
    def lambda_high_error_rate_detection(self, value: Optional[pulumi.Input['AwsAnomaliesLambdaHighErrorRateDetectionArgs']]):
        pulumi.set(self, "lambda_high_error_rate_detection", value)

    @property
    @pulumi.getter(name="rdsHighCpuDetection")
    def rds_high_cpu_detection(self) -> Optional[pulumi.Input['AwsAnomaliesRdsHighCpuDetectionArgs']]:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_cpu_detection")

    @rds_high_cpu_detection.setter
    def rds_high_cpu_detection(self, value: Optional[pulumi.Input['AwsAnomaliesRdsHighCpuDetectionArgs']]):
        pulumi.set(self, "rds_high_cpu_detection", value)

    @property
    @pulumi.getter(name="rdsHighMemoryDetection")
    def rds_high_memory_detection(self) -> Optional[pulumi.Input['AwsAnomaliesRdsHighMemoryDetectionArgs']]:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_memory_detection")

    @rds_high_memory_detection.setter
    def rds_high_memory_detection(self, value: Optional[pulumi.Input['AwsAnomaliesRdsHighMemoryDetectionArgs']]):
        pulumi.set(self, "rds_high_memory_detection", value)

    @property
    @pulumi.getter(name="rdsHighWriteReadLatencyDetection")
    def rds_high_write_read_latency_detection(self) -> Optional[pulumi.Input['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs']]:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_write_read_latency_detection")

    @rds_high_write_read_latency_detection.setter
    def rds_high_write_read_latency_detection(self, value: Optional[pulumi.Input['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs']]):
        pulumi.set(self, "rds_high_write_read_latency_detection", value)

    @property
    @pulumi.getter(name="rdsLowStorageDetection")
    def rds_low_storage_detection(self) -> Optional[pulumi.Input['AwsAnomaliesRdsLowStorageDetectionArgs']]:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_low_storage_detection")

    @rds_low_storage_detection.setter
    def rds_low_storage_detection(self, value: Optional[pulumi.Input['AwsAnomaliesRdsLowStorageDetectionArgs']]):
        pulumi.set(self, "rds_low_storage_detection", value)

    @property
    @pulumi.getter(name="rdsRestartsSequenceDetection")
    def rds_restarts_sequence_detection(self) -> Optional[pulumi.Input['AwsAnomaliesRdsRestartsSequenceDetectionArgs']]:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_restarts_sequence_detection")

    @rds_restarts_sequence_detection.setter
    def rds_restarts_sequence_detection(self, value: Optional[pulumi.Input['AwsAnomaliesRdsRestartsSequenceDetectionArgs']]):
        pulumi.set(self, "rds_restarts_sequence_detection", value)


class AwsAnomalies(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ec2_candidate_high_cpu_detection: Optional[pulumi.Input[Union['AwsAnomaliesEc2CandidateHighCpuDetectionArgs', 'AwsAnomaliesEc2CandidateHighCpuDetectionArgsDict']]] = None,
                 elb_high_connection_errors_detection: Optional[pulumi.Input[Union['AwsAnomaliesElbHighConnectionErrorsDetectionArgs', 'AwsAnomaliesElbHighConnectionErrorsDetectionArgsDict']]] = None,
                 lambda_high_error_rate_detection: Optional[pulumi.Input[Union['AwsAnomaliesLambdaHighErrorRateDetectionArgs', 'AwsAnomaliesLambdaHighErrorRateDetectionArgsDict']]] = None,
                 rds_high_cpu_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighCpuDetectionArgs', 'AwsAnomaliesRdsHighCpuDetectionArgsDict']]] = None,
                 rds_high_memory_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighMemoryDetectionArgs', 'AwsAnomaliesRdsHighMemoryDetectionArgsDict']]] = None,
                 rds_high_write_read_latency_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs', 'AwsAnomaliesRdsHighWriteReadLatencyDetectionArgsDict']]] = None,
                 rds_low_storage_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsLowStorageDetectionArgs', 'AwsAnomaliesRdsLowStorageDetectionArgsDict']]] = None,
                 rds_restarts_sequence_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsRestartsSequenceDetectionArgs', 'AwsAnomaliesRdsRestartsSequenceDetectionArgsDict']]] = None,
                 __props__=None):
        """
        Create a AwsAnomalies resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['AwsAnomaliesEc2CandidateHighCpuDetectionArgs', 'AwsAnomaliesEc2CandidateHighCpuDetectionArgsDict']] ec2_candidate_high_cpu_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesElbHighConnectionErrorsDetectionArgs', 'AwsAnomaliesElbHighConnectionErrorsDetectionArgsDict']] elb_high_connection_errors_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesLambdaHighErrorRateDetectionArgs', 'AwsAnomaliesLambdaHighErrorRateDetectionArgsDict']] lambda_high_error_rate_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsHighCpuDetectionArgs', 'AwsAnomaliesRdsHighCpuDetectionArgsDict']] rds_high_cpu_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsHighMemoryDetectionArgs', 'AwsAnomaliesRdsHighMemoryDetectionArgsDict']] rds_high_memory_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs', 'AwsAnomaliesRdsHighWriteReadLatencyDetectionArgsDict']] rds_high_write_read_latency_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsLowStorageDetectionArgs', 'AwsAnomaliesRdsLowStorageDetectionArgsDict']] rds_low_storage_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsRestartsSequenceDetectionArgs', 'AwsAnomaliesRdsRestartsSequenceDetectionArgsDict']] rds_restarts_sequence_detection: no documentation available
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: AwsAnomaliesArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a AwsAnomalies resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param AwsAnomaliesArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(AwsAnomaliesArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ec2_candidate_high_cpu_detection: Optional[pulumi.Input[Union['AwsAnomaliesEc2CandidateHighCpuDetectionArgs', 'AwsAnomaliesEc2CandidateHighCpuDetectionArgsDict']]] = None,
                 elb_high_connection_errors_detection: Optional[pulumi.Input[Union['AwsAnomaliesElbHighConnectionErrorsDetectionArgs', 'AwsAnomaliesElbHighConnectionErrorsDetectionArgsDict']]] = None,
                 lambda_high_error_rate_detection: Optional[pulumi.Input[Union['AwsAnomaliesLambdaHighErrorRateDetectionArgs', 'AwsAnomaliesLambdaHighErrorRateDetectionArgsDict']]] = None,
                 rds_high_cpu_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighCpuDetectionArgs', 'AwsAnomaliesRdsHighCpuDetectionArgsDict']]] = None,
                 rds_high_memory_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighMemoryDetectionArgs', 'AwsAnomaliesRdsHighMemoryDetectionArgsDict']]] = None,
                 rds_high_write_read_latency_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs', 'AwsAnomaliesRdsHighWriteReadLatencyDetectionArgsDict']]] = None,
                 rds_low_storage_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsLowStorageDetectionArgs', 'AwsAnomaliesRdsLowStorageDetectionArgsDict']]] = None,
                 rds_restarts_sequence_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsRestartsSequenceDetectionArgs', 'AwsAnomaliesRdsRestartsSequenceDetectionArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = AwsAnomaliesArgs.__new__(AwsAnomaliesArgs)

            if ec2_candidate_high_cpu_detection is None and not opts.urn:
                raise TypeError("Missing required property 'ec2_candidate_high_cpu_detection'")
            __props__.__dict__["ec2_candidate_high_cpu_detection"] = ec2_candidate_high_cpu_detection
            if elb_high_connection_errors_detection is None and not opts.urn:
                raise TypeError("Missing required property 'elb_high_connection_errors_detection'")
            __props__.__dict__["elb_high_connection_errors_detection"] = elb_high_connection_errors_detection
            if lambda_high_error_rate_detection is None and not opts.urn:
                raise TypeError("Missing required property 'lambda_high_error_rate_detection'")
            __props__.__dict__["lambda_high_error_rate_detection"] = lambda_high_error_rate_detection
            if rds_high_cpu_detection is None and not opts.urn:
                raise TypeError("Missing required property 'rds_high_cpu_detection'")
            __props__.__dict__["rds_high_cpu_detection"] = rds_high_cpu_detection
            if rds_high_memory_detection is None and not opts.urn:
                raise TypeError("Missing required property 'rds_high_memory_detection'")
            __props__.__dict__["rds_high_memory_detection"] = rds_high_memory_detection
            if rds_high_write_read_latency_detection is None and not opts.urn:
                raise TypeError("Missing required property 'rds_high_write_read_latency_detection'")
            __props__.__dict__["rds_high_write_read_latency_detection"] = rds_high_write_read_latency_detection
            if rds_low_storage_detection is None and not opts.urn:
                raise TypeError("Missing required property 'rds_low_storage_detection'")
            __props__.__dict__["rds_low_storage_detection"] = rds_low_storage_detection
            if rds_restarts_sequence_detection is None and not opts.urn:
                raise TypeError("Missing required property 'rds_restarts_sequence_detection'")
            __props__.__dict__["rds_restarts_sequence_detection"] = rds_restarts_sequence_detection
        super(AwsAnomalies, __self__).__init__(
            'dynatrace:index/awsAnomalies:AwsAnomalies',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ec2_candidate_high_cpu_detection: Optional[pulumi.Input[Union['AwsAnomaliesEc2CandidateHighCpuDetectionArgs', 'AwsAnomaliesEc2CandidateHighCpuDetectionArgsDict']]] = None,
            elb_high_connection_errors_detection: Optional[pulumi.Input[Union['AwsAnomaliesElbHighConnectionErrorsDetectionArgs', 'AwsAnomaliesElbHighConnectionErrorsDetectionArgsDict']]] = None,
            lambda_high_error_rate_detection: Optional[pulumi.Input[Union['AwsAnomaliesLambdaHighErrorRateDetectionArgs', 'AwsAnomaliesLambdaHighErrorRateDetectionArgsDict']]] = None,
            rds_high_cpu_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighCpuDetectionArgs', 'AwsAnomaliesRdsHighCpuDetectionArgsDict']]] = None,
            rds_high_memory_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighMemoryDetectionArgs', 'AwsAnomaliesRdsHighMemoryDetectionArgsDict']]] = None,
            rds_high_write_read_latency_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs', 'AwsAnomaliesRdsHighWriteReadLatencyDetectionArgsDict']]] = None,
            rds_low_storage_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsLowStorageDetectionArgs', 'AwsAnomaliesRdsLowStorageDetectionArgsDict']]] = None,
            rds_restarts_sequence_detection: Optional[pulumi.Input[Union['AwsAnomaliesRdsRestartsSequenceDetectionArgs', 'AwsAnomaliesRdsRestartsSequenceDetectionArgsDict']]] = None) -> 'AwsAnomalies':
        """
        Get an existing AwsAnomalies resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['AwsAnomaliesEc2CandidateHighCpuDetectionArgs', 'AwsAnomaliesEc2CandidateHighCpuDetectionArgsDict']] ec2_candidate_high_cpu_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesElbHighConnectionErrorsDetectionArgs', 'AwsAnomaliesElbHighConnectionErrorsDetectionArgsDict']] elb_high_connection_errors_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesLambdaHighErrorRateDetectionArgs', 'AwsAnomaliesLambdaHighErrorRateDetectionArgsDict']] lambda_high_error_rate_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsHighCpuDetectionArgs', 'AwsAnomaliesRdsHighCpuDetectionArgsDict']] rds_high_cpu_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsHighMemoryDetectionArgs', 'AwsAnomaliesRdsHighMemoryDetectionArgsDict']] rds_high_memory_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsHighWriteReadLatencyDetectionArgs', 'AwsAnomaliesRdsHighWriteReadLatencyDetectionArgsDict']] rds_high_write_read_latency_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsLowStorageDetectionArgs', 'AwsAnomaliesRdsLowStorageDetectionArgsDict']] rds_low_storage_detection: no documentation available
        :param pulumi.Input[Union['AwsAnomaliesRdsRestartsSequenceDetectionArgs', 'AwsAnomaliesRdsRestartsSequenceDetectionArgsDict']] rds_restarts_sequence_detection: no documentation available
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _AwsAnomaliesState.__new__(_AwsAnomaliesState)

        __props__.__dict__["ec2_candidate_high_cpu_detection"] = ec2_candidate_high_cpu_detection
        __props__.__dict__["elb_high_connection_errors_detection"] = elb_high_connection_errors_detection
        __props__.__dict__["lambda_high_error_rate_detection"] = lambda_high_error_rate_detection
        __props__.__dict__["rds_high_cpu_detection"] = rds_high_cpu_detection
        __props__.__dict__["rds_high_memory_detection"] = rds_high_memory_detection
        __props__.__dict__["rds_high_write_read_latency_detection"] = rds_high_write_read_latency_detection
        __props__.__dict__["rds_low_storage_detection"] = rds_low_storage_detection
        __props__.__dict__["rds_restarts_sequence_detection"] = rds_restarts_sequence_detection
        return AwsAnomalies(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ec2CandidateHighCpuDetection")
    def ec2_candidate_high_cpu_detection(self) -> pulumi.Output['outputs.AwsAnomaliesEc2CandidateHighCpuDetection']:
        """
        no documentation available
        """
        return pulumi.get(self, "ec2_candidate_high_cpu_detection")

    @property
    @pulumi.getter(name="elbHighConnectionErrorsDetection")
    def elb_high_connection_errors_detection(self) -> pulumi.Output['outputs.AwsAnomaliesElbHighConnectionErrorsDetection']:
        """
        no documentation available
        """
        return pulumi.get(self, "elb_high_connection_errors_detection")

    @property
    @pulumi.getter(name="lambdaHighErrorRateDetection")
    def lambda_high_error_rate_detection(self) -> pulumi.Output['outputs.AwsAnomaliesLambdaHighErrorRateDetection']:
        """
        no documentation available
        """
        return pulumi.get(self, "lambda_high_error_rate_detection")

    @property
    @pulumi.getter(name="rdsHighCpuDetection")
    def rds_high_cpu_detection(self) -> pulumi.Output['outputs.AwsAnomaliesRdsHighCpuDetection']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_cpu_detection")

    @property
    @pulumi.getter(name="rdsHighMemoryDetection")
    def rds_high_memory_detection(self) -> pulumi.Output['outputs.AwsAnomaliesRdsHighMemoryDetection']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_memory_detection")

    @property
    @pulumi.getter(name="rdsHighWriteReadLatencyDetection")
    def rds_high_write_read_latency_detection(self) -> pulumi.Output['outputs.AwsAnomaliesRdsHighWriteReadLatencyDetection']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_high_write_read_latency_detection")

    @property
    @pulumi.getter(name="rdsLowStorageDetection")
    def rds_low_storage_detection(self) -> pulumi.Output['outputs.AwsAnomaliesRdsLowStorageDetection']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_low_storage_detection")

    @property
    @pulumi.getter(name="rdsRestartsSequenceDetection")
    def rds_restarts_sequence_detection(self) -> pulumi.Output['outputs.AwsAnomaliesRdsRestartsSequenceDetection']:
        """
        no documentation available
        """
        return pulumi.get(self, "rds_restarts_sequence_detection")

