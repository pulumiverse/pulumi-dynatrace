# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetAwsCredentialsResult',
    'AwaitableGetAwsCredentialsResult',
    'get_aws_credentials',
    'get_aws_credentials_output',
]

@pulumi.output_type
class GetAwsCredentialsResult:
    """
    A collection of values returned by getAwsCredentials.
    """
    def __init__(__self__, id=None, label=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if label and not isinstance(label, str):
            raise TypeError("Expected argument 'label' to be a str")
        pulumi.set(__self__, "label", label)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def label(self) -> str:
        return pulumi.get(self, "label")


class AwaitableGetAwsCredentialsResult(GetAwsCredentialsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAwsCredentialsResult(
            id=self.id,
            label=self.label)


def get_aws_credentials(label: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAwsCredentialsResult:
    """
    The `AwsCredentials` data source allows the AWS credential ID to be retrieved by its label.

    - `label` (String) - The label/name of the AWS credential
    """
    __args__ = dict()
    __args__['label'] = label
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('dynatrace:index/getAwsCredentials:getAwsCredentials', __args__, opts=opts, typ=GetAwsCredentialsResult).value

    return AwaitableGetAwsCredentialsResult(
        id=pulumi.get(__ret__, 'id'),
        label=pulumi.get(__ret__, 'label'))
def get_aws_credentials_output(label: Optional[pulumi.Input[str]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAwsCredentialsResult]:
    """
    The `AwsCredentials` data source allows the AWS credential ID to be retrieved by its label.

    - `label` (String) - The label/name of the AWS credential
    """
    __args__ = dict()
    __args__['label'] = label
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('dynatrace:index/getAwsCredentials:getAwsCredentials', __args__, opts=opts, typ=GetAwsCredentialsResult)
    return __ret__.apply(lambda __response__: GetAwsCredentialsResult(
        id=pulumi.get(__response__, 'id'),
        label=pulumi.get(__response__, 'label')))
