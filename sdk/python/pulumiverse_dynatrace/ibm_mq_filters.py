# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['IbmMqFiltersArgs', 'IbmMqFilters']

@pulumi.input_type
class IbmMqFiltersArgs:
    def __init__(__self__, *,
                 cics_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cics_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_cr_trn_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_cr_trn_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a IbmMqFilters resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] cics_mq_queue_id_excludes: CICS: Excluded MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] cics_mq_queue_id_includes: CICS: Included MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_cr_trn_id_excludes: When you add a transaction ID to the exclude list remaining transactions are still monitored.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_cr_trn_id_includes: When you add a transaction ID to the include list, all the remaining transactions are ignored.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_mq_queue_id_excludes: IMS: Excluded MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_mq_queue_id_includes: IMS: Included MQ queues
        """
        if cics_mq_queue_id_excludes is not None:
            pulumi.set(__self__, "cics_mq_queue_id_excludes", cics_mq_queue_id_excludes)
        if cics_mq_queue_id_includes is not None:
            pulumi.set(__self__, "cics_mq_queue_id_includes", cics_mq_queue_id_includes)
        if ims_cr_trn_id_excludes is not None:
            pulumi.set(__self__, "ims_cr_trn_id_excludes", ims_cr_trn_id_excludes)
        if ims_cr_trn_id_includes is not None:
            pulumi.set(__self__, "ims_cr_trn_id_includes", ims_cr_trn_id_includes)
        if ims_mq_queue_id_excludes is not None:
            pulumi.set(__self__, "ims_mq_queue_id_excludes", ims_mq_queue_id_excludes)
        if ims_mq_queue_id_includes is not None:
            pulumi.set(__self__, "ims_mq_queue_id_includes", ims_mq_queue_id_includes)

    @property
    @pulumi.getter(name="cicsMqQueueIdExcludes")
    def cics_mq_queue_id_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        CICS: Excluded MQ queues
        """
        return pulumi.get(self, "cics_mq_queue_id_excludes")

    @cics_mq_queue_id_excludes.setter
    def cics_mq_queue_id_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "cics_mq_queue_id_excludes", value)

    @property
    @pulumi.getter(name="cicsMqQueueIdIncludes")
    def cics_mq_queue_id_includes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        CICS: Included MQ queues
        """
        return pulumi.get(self, "cics_mq_queue_id_includes")

    @cics_mq_queue_id_includes.setter
    def cics_mq_queue_id_includes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "cics_mq_queue_id_includes", value)

    @property
    @pulumi.getter(name="imsCrTrnIdExcludes")
    def ims_cr_trn_id_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        When you add a transaction ID to the exclude list remaining transactions are still monitored.
        """
        return pulumi.get(self, "ims_cr_trn_id_excludes")

    @ims_cr_trn_id_excludes.setter
    def ims_cr_trn_id_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ims_cr_trn_id_excludes", value)

    @property
    @pulumi.getter(name="imsCrTrnIdIncludes")
    def ims_cr_trn_id_includes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        When you add a transaction ID to the include list, all the remaining transactions are ignored.
        """
        return pulumi.get(self, "ims_cr_trn_id_includes")

    @ims_cr_trn_id_includes.setter
    def ims_cr_trn_id_includes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ims_cr_trn_id_includes", value)

    @property
    @pulumi.getter(name="imsMqQueueIdExcludes")
    def ims_mq_queue_id_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        IMS: Excluded MQ queues
        """
        return pulumi.get(self, "ims_mq_queue_id_excludes")

    @ims_mq_queue_id_excludes.setter
    def ims_mq_queue_id_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ims_mq_queue_id_excludes", value)

    @property
    @pulumi.getter(name="imsMqQueueIdIncludes")
    def ims_mq_queue_id_includes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        IMS: Included MQ queues
        """
        return pulumi.get(self, "ims_mq_queue_id_includes")

    @ims_mq_queue_id_includes.setter
    def ims_mq_queue_id_includes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ims_mq_queue_id_includes", value)


@pulumi.input_type
class _IbmMqFiltersState:
    def __init__(__self__, *,
                 cics_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cics_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_cr_trn_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_cr_trn_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering IbmMqFilters resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] cics_mq_queue_id_excludes: CICS: Excluded MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] cics_mq_queue_id_includes: CICS: Included MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_cr_trn_id_excludes: When you add a transaction ID to the exclude list remaining transactions are still monitored.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_cr_trn_id_includes: When you add a transaction ID to the include list, all the remaining transactions are ignored.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_mq_queue_id_excludes: IMS: Excluded MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_mq_queue_id_includes: IMS: Included MQ queues
        """
        if cics_mq_queue_id_excludes is not None:
            pulumi.set(__self__, "cics_mq_queue_id_excludes", cics_mq_queue_id_excludes)
        if cics_mq_queue_id_includes is not None:
            pulumi.set(__self__, "cics_mq_queue_id_includes", cics_mq_queue_id_includes)
        if ims_cr_trn_id_excludes is not None:
            pulumi.set(__self__, "ims_cr_trn_id_excludes", ims_cr_trn_id_excludes)
        if ims_cr_trn_id_includes is not None:
            pulumi.set(__self__, "ims_cr_trn_id_includes", ims_cr_trn_id_includes)
        if ims_mq_queue_id_excludes is not None:
            pulumi.set(__self__, "ims_mq_queue_id_excludes", ims_mq_queue_id_excludes)
        if ims_mq_queue_id_includes is not None:
            pulumi.set(__self__, "ims_mq_queue_id_includes", ims_mq_queue_id_includes)

    @property
    @pulumi.getter(name="cicsMqQueueIdExcludes")
    def cics_mq_queue_id_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        CICS: Excluded MQ queues
        """
        return pulumi.get(self, "cics_mq_queue_id_excludes")

    @cics_mq_queue_id_excludes.setter
    def cics_mq_queue_id_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "cics_mq_queue_id_excludes", value)

    @property
    @pulumi.getter(name="cicsMqQueueIdIncludes")
    def cics_mq_queue_id_includes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        CICS: Included MQ queues
        """
        return pulumi.get(self, "cics_mq_queue_id_includes")

    @cics_mq_queue_id_includes.setter
    def cics_mq_queue_id_includes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "cics_mq_queue_id_includes", value)

    @property
    @pulumi.getter(name="imsCrTrnIdExcludes")
    def ims_cr_trn_id_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        When you add a transaction ID to the exclude list remaining transactions are still monitored.
        """
        return pulumi.get(self, "ims_cr_trn_id_excludes")

    @ims_cr_trn_id_excludes.setter
    def ims_cr_trn_id_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ims_cr_trn_id_excludes", value)

    @property
    @pulumi.getter(name="imsCrTrnIdIncludes")
    def ims_cr_trn_id_includes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        When you add a transaction ID to the include list, all the remaining transactions are ignored.
        """
        return pulumi.get(self, "ims_cr_trn_id_includes")

    @ims_cr_trn_id_includes.setter
    def ims_cr_trn_id_includes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ims_cr_trn_id_includes", value)

    @property
    @pulumi.getter(name="imsMqQueueIdExcludes")
    def ims_mq_queue_id_excludes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        IMS: Excluded MQ queues
        """
        return pulumi.get(self, "ims_mq_queue_id_excludes")

    @ims_mq_queue_id_excludes.setter
    def ims_mq_queue_id_excludes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ims_mq_queue_id_excludes", value)

    @property
    @pulumi.getter(name="imsMqQueueIdIncludes")
    def ims_mq_queue_id_includes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        IMS: Included MQ queues
        """
        return pulumi.get(self, "ims_mq_queue_id_includes")

    @ims_mq_queue_id_includes.setter
    def ims_mq_queue_id_includes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "ims_mq_queue_id_includes", value)


class IbmMqFilters(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cics_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cics_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_cr_trn_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_cr_trn_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Create a IbmMqFilters resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] cics_mq_queue_id_excludes: CICS: Excluded MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] cics_mq_queue_id_includes: CICS: Included MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_cr_trn_id_excludes: When you add a transaction ID to the exclude list remaining transactions are still monitored.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_cr_trn_id_includes: When you add a transaction ID to the include list, all the remaining transactions are ignored.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_mq_queue_id_excludes: IMS: Excluded MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_mq_queue_id_includes: IMS: Included MQ queues
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[IbmMqFiltersArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a IbmMqFilters resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param IbmMqFiltersArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IbmMqFiltersArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 cics_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 cics_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_cr_trn_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_cr_trn_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 ims_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IbmMqFiltersArgs.__new__(IbmMqFiltersArgs)

            __props__.__dict__["cics_mq_queue_id_excludes"] = cics_mq_queue_id_excludes
            __props__.__dict__["cics_mq_queue_id_includes"] = cics_mq_queue_id_includes
            __props__.__dict__["ims_cr_trn_id_excludes"] = ims_cr_trn_id_excludes
            __props__.__dict__["ims_cr_trn_id_includes"] = ims_cr_trn_id_includes
            __props__.__dict__["ims_mq_queue_id_excludes"] = ims_mq_queue_id_excludes
            __props__.__dict__["ims_mq_queue_id_includes"] = ims_mq_queue_id_includes
        super(IbmMqFilters, __self__).__init__(
            'dynatrace:index/ibmMqFilters:IbmMqFilters',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            cics_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            cics_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ims_cr_trn_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ims_cr_trn_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ims_mq_queue_id_excludes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            ims_mq_queue_id_includes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None) -> 'IbmMqFilters':
        """
        Get an existing IbmMqFilters resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] cics_mq_queue_id_excludes: CICS: Excluded MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] cics_mq_queue_id_includes: CICS: Included MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_cr_trn_id_excludes: When you add a transaction ID to the exclude list remaining transactions are still monitored.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_cr_trn_id_includes: When you add a transaction ID to the include list, all the remaining transactions are ignored.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_mq_queue_id_excludes: IMS: Excluded MQ queues
        :param pulumi.Input[Sequence[pulumi.Input[str]]] ims_mq_queue_id_includes: IMS: Included MQ queues
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IbmMqFiltersState.__new__(_IbmMqFiltersState)

        __props__.__dict__["cics_mq_queue_id_excludes"] = cics_mq_queue_id_excludes
        __props__.__dict__["cics_mq_queue_id_includes"] = cics_mq_queue_id_includes
        __props__.__dict__["ims_cr_trn_id_excludes"] = ims_cr_trn_id_excludes
        __props__.__dict__["ims_cr_trn_id_includes"] = ims_cr_trn_id_includes
        __props__.__dict__["ims_mq_queue_id_excludes"] = ims_mq_queue_id_excludes
        __props__.__dict__["ims_mq_queue_id_includes"] = ims_mq_queue_id_includes
        return IbmMqFilters(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="cicsMqQueueIdExcludes")
    def cics_mq_queue_id_excludes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        CICS: Excluded MQ queues
        """
        return pulumi.get(self, "cics_mq_queue_id_excludes")

    @property
    @pulumi.getter(name="cicsMqQueueIdIncludes")
    def cics_mq_queue_id_includes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        CICS: Included MQ queues
        """
        return pulumi.get(self, "cics_mq_queue_id_includes")

    @property
    @pulumi.getter(name="imsCrTrnIdExcludes")
    def ims_cr_trn_id_excludes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        When you add a transaction ID to the exclude list remaining transactions are still monitored.
        """
        return pulumi.get(self, "ims_cr_trn_id_excludes")

    @property
    @pulumi.getter(name="imsCrTrnIdIncludes")
    def ims_cr_trn_id_includes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        When you add a transaction ID to the include list, all the remaining transactions are ignored.
        """
        return pulumi.get(self, "ims_cr_trn_id_includes")

    @property
    @pulumi.getter(name="imsMqQueueIdExcludes")
    def ims_mq_queue_id_excludes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        IMS: Excluded MQ queues
        """
        return pulumi.get(self, "ims_mq_queue_id_excludes")

    @property
    @pulumi.getter(name="imsMqQueueIdIncludes")
    def ims_mq_queue_id_includes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        IMS: Included MQ queues
        """
        return pulumi.get(self, "ims_mq_queue_id_includes")

