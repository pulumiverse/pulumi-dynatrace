# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetApplicationDetectionRulesResult',
    'AwaitableGetApplicationDetectionRulesResult',
    'get_application_detection_rules',
    'get_application_detection_rules_output',
]

@pulumi.output_type
class GetApplicationDetectionRulesResult:
    """
    A collection of values returned by getApplicationDetectionRules.
    """
    def __init__(__self__, id=None, values=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if values and not isinstance(values, list):
            raise TypeError("Expected argument 'values' to be a list")
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def values(self) -> Sequence['outputs.GetApplicationDetectionRulesValueResult']:
        return pulumi.get(self, "values")


class AwaitableGetApplicationDetectionRulesResult(GetApplicationDetectionRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetApplicationDetectionRulesResult(
            id=self.id,
            values=self.values)


def get_application_detection_rules(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetApplicationDetectionRulesResult:
    """
    The application detection rules data source allows retrieval of all existing rules.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_dynatrace as dynatrace

    test = dynatrace.get_application_detection_rules()
    pulumi.export("applicationDetectionRules", test)
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('dynatrace:index/getApplicationDetectionRules:getApplicationDetectionRules', __args__, opts=opts, typ=GetApplicationDetectionRulesResult).value

    return AwaitableGetApplicationDetectionRulesResult(
        id=pulumi.get(__ret__, 'id'),
        values=pulumi.get(__ret__, 'values'))
def get_application_detection_rules_output(opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetApplicationDetectionRulesResult]:
    """
    The application detection rules data source allows retrieval of all existing rules.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_dynatrace as dynatrace

    test = dynatrace.get_application_detection_rules()
    pulumi.export("applicationDetectionRules", test)
    ```
    """
    __args__ = dict()
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('dynatrace:index/getApplicationDetectionRules:getApplicationDetectionRules', __args__, opts=opts, typ=GetApplicationDetectionRulesResult)
    return __ret__.apply(lambda __response__: GetApplicationDetectionRulesResult(
        id=pulumi.get(__response__, 'id'),
        values=pulumi.get(__response__, 'values')))
