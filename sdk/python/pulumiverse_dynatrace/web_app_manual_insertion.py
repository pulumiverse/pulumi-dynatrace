# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['WebAppManualInsertionArgs', 'WebAppManualInsertion']

@pulumi.input_type
class WebAppManualInsertionArgs:
    def __init__(__self__, *,
                 application_id: pulumi.Input[_builtins.str],
                 code_snippet: pulumi.Input['WebAppManualInsertionCodeSnippetArgs'],
                 javascript_tag: pulumi.Input['WebAppManualInsertionJavascriptTagArgs'],
                 oneagent_javascript_tag: Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagArgs']] = None,
                 oneagent_javascript_tag_sri: Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagSriArgs']] = None):
        """
        The set of arguments for constructing a WebAppManualInsertion resource.
        :param pulumi.Input[_builtins.str] application_id: The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        :param pulumi.Input['WebAppManualInsertionCodeSnippetArgs'] code_snippet: Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
        :param pulumi.Input['WebAppManualInsertionJavascriptTagArgs'] javascript_tag: JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
        :param pulumi.Input['WebAppManualInsertionOneagentJavascriptTagArgs'] oneagent_javascript_tag: OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
        :param pulumi.Input['WebAppManualInsertionOneagentJavascriptTagSriArgs'] oneagent_javascript_tag_sri: OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
        """
        pulumi.set(__self__, "application_id", application_id)
        pulumi.set(__self__, "code_snippet", code_snippet)
        pulumi.set(__self__, "javascript_tag", javascript_tag)
        if oneagent_javascript_tag is not None:
            pulumi.set(__self__, "oneagent_javascript_tag", oneagent_javascript_tag)
        if oneagent_javascript_tag_sri is not None:
            pulumi.set(__self__, "oneagent_javascript_tag_sri", oneagent_javascript_tag_sri)

    @_builtins.property
    @pulumi.getter(name="applicationId")
    def application_id(self) -> pulumi.Input[_builtins.str]:
        """
        The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        """
        return pulumi.get(self, "application_id")

    @application_id.setter
    def application_id(self, value: pulumi.Input[_builtins.str]):
        pulumi.set(self, "application_id", value)

    @_builtins.property
    @pulumi.getter(name="codeSnippet")
    def code_snippet(self) -> pulumi.Input['WebAppManualInsertionCodeSnippetArgs']:
        """
        Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
        """
        return pulumi.get(self, "code_snippet")

    @code_snippet.setter
    def code_snippet(self, value: pulumi.Input['WebAppManualInsertionCodeSnippetArgs']):
        pulumi.set(self, "code_snippet", value)

    @_builtins.property
    @pulumi.getter(name="javascriptTag")
    def javascript_tag(self) -> pulumi.Input['WebAppManualInsertionJavascriptTagArgs']:
        """
        JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
        """
        return pulumi.get(self, "javascript_tag")

    @javascript_tag.setter
    def javascript_tag(self, value: pulumi.Input['WebAppManualInsertionJavascriptTagArgs']):
        pulumi.set(self, "javascript_tag", value)

    @_builtins.property
    @pulumi.getter(name="oneagentJavascriptTag")
    def oneagent_javascript_tag(self) -> Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagArgs']]:
        """
        OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
        """
        return pulumi.get(self, "oneagent_javascript_tag")

    @oneagent_javascript_tag.setter
    def oneagent_javascript_tag(self, value: Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagArgs']]):
        pulumi.set(self, "oneagent_javascript_tag", value)

    @_builtins.property
    @pulumi.getter(name="oneagentJavascriptTagSri")
    def oneagent_javascript_tag_sri(self) -> Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagSriArgs']]:
        """
        OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
        """
        return pulumi.get(self, "oneagent_javascript_tag_sri")

    @oneagent_javascript_tag_sri.setter
    def oneagent_javascript_tag_sri(self, value: Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagSriArgs']]):
        pulumi.set(self, "oneagent_javascript_tag_sri", value)


@pulumi.input_type
class _WebAppManualInsertionState:
    def __init__(__self__, *,
                 application_id: Optional[pulumi.Input[_builtins.str]] = None,
                 code_snippet: Optional[pulumi.Input['WebAppManualInsertionCodeSnippetArgs']] = None,
                 javascript_tag: Optional[pulumi.Input['WebAppManualInsertionJavascriptTagArgs']] = None,
                 oneagent_javascript_tag: Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagArgs']] = None,
                 oneagent_javascript_tag_sri: Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagSriArgs']] = None):
        """
        Input properties used for looking up and filtering WebAppManualInsertion resources.
        :param pulumi.Input[_builtins.str] application_id: The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        :param pulumi.Input['WebAppManualInsertionCodeSnippetArgs'] code_snippet: Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
        :param pulumi.Input['WebAppManualInsertionJavascriptTagArgs'] javascript_tag: JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
        :param pulumi.Input['WebAppManualInsertionOneagentJavascriptTagArgs'] oneagent_javascript_tag: OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
        :param pulumi.Input['WebAppManualInsertionOneagentJavascriptTagSriArgs'] oneagent_javascript_tag_sri: OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
        """
        if application_id is not None:
            pulumi.set(__self__, "application_id", application_id)
        if code_snippet is not None:
            pulumi.set(__self__, "code_snippet", code_snippet)
        if javascript_tag is not None:
            pulumi.set(__self__, "javascript_tag", javascript_tag)
        if oneagent_javascript_tag is not None:
            pulumi.set(__self__, "oneagent_javascript_tag", oneagent_javascript_tag)
        if oneagent_javascript_tag_sri is not None:
            pulumi.set(__self__, "oneagent_javascript_tag_sri", oneagent_javascript_tag_sri)

    @_builtins.property
    @pulumi.getter(name="applicationId")
    def application_id(self) -> Optional[pulumi.Input[_builtins.str]]:
        """
        The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        """
        return pulumi.get(self, "application_id")

    @application_id.setter
    def application_id(self, value: Optional[pulumi.Input[_builtins.str]]):
        pulumi.set(self, "application_id", value)

    @_builtins.property
    @pulumi.getter(name="codeSnippet")
    def code_snippet(self) -> Optional[pulumi.Input['WebAppManualInsertionCodeSnippetArgs']]:
        """
        Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
        """
        return pulumi.get(self, "code_snippet")

    @code_snippet.setter
    def code_snippet(self, value: Optional[pulumi.Input['WebAppManualInsertionCodeSnippetArgs']]):
        pulumi.set(self, "code_snippet", value)

    @_builtins.property
    @pulumi.getter(name="javascriptTag")
    def javascript_tag(self) -> Optional[pulumi.Input['WebAppManualInsertionJavascriptTagArgs']]:
        """
        JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
        """
        return pulumi.get(self, "javascript_tag")

    @javascript_tag.setter
    def javascript_tag(self, value: Optional[pulumi.Input['WebAppManualInsertionJavascriptTagArgs']]):
        pulumi.set(self, "javascript_tag", value)

    @_builtins.property
    @pulumi.getter(name="oneagentJavascriptTag")
    def oneagent_javascript_tag(self) -> Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagArgs']]:
        """
        OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
        """
        return pulumi.get(self, "oneagent_javascript_tag")

    @oneagent_javascript_tag.setter
    def oneagent_javascript_tag(self, value: Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagArgs']]):
        pulumi.set(self, "oneagent_javascript_tag", value)

    @_builtins.property
    @pulumi.getter(name="oneagentJavascriptTagSri")
    def oneagent_javascript_tag_sri(self) -> Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagSriArgs']]:
        """
        OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
        """
        return pulumi.get(self, "oneagent_javascript_tag_sri")

    @oneagent_javascript_tag_sri.setter
    def oneagent_javascript_tag_sri(self, value: Optional[pulumi.Input['WebAppManualInsertionOneagentJavascriptTagSriArgs']]):
        pulumi.set(self, "oneagent_javascript_tag_sri", value)


@pulumi.type_token("dynatrace:index/webAppManualInsertion:WebAppManualInsertion")
class WebAppManualInsertion(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 application_id: Optional[pulumi.Input[_builtins.str]] = None,
                 code_snippet: Optional[pulumi.Input[Union['WebAppManualInsertionCodeSnippetArgs', 'WebAppManualInsertionCodeSnippetArgsDict']]] = None,
                 javascript_tag: Optional[pulumi.Input[Union['WebAppManualInsertionJavascriptTagArgs', 'WebAppManualInsertionJavascriptTagArgsDict']]] = None,
                 oneagent_javascript_tag: Optional[pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagArgs', 'WebAppManualInsertionOneagentJavascriptTagArgsDict']]] = None,
                 oneagent_javascript_tag_sri: Optional[pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagSriArgs', 'WebAppManualInsertionOneagentJavascriptTagSriArgsDict']]] = None,
                 __props__=None):
        """
        > This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)

        ## Dynatrace Documentation

        - Select a snippet format - https://docs.dynatrace.com/docs/shortlink/snippet-formats

        - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:rum.web.manual-insertion`)

        ## Resource Example Usage

        ```python
        import pulumi
        import pulumiverse_dynatrace as dynatrace

        _name_ = dynatrace.WebAppManualInsertion("#name#",
            application_id="APPLICATION-1234567890000000",
            code_snippet={
                "code_snippet_type": "SYNCHRONOUSLY",
            },
            javascript_tag={
                "cache_duration": "1",
                "crossorigin_anonymous": True,
            })
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] application_id: The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        :param pulumi.Input[Union['WebAppManualInsertionCodeSnippetArgs', 'WebAppManualInsertionCodeSnippetArgsDict']] code_snippet: Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
        :param pulumi.Input[Union['WebAppManualInsertionJavascriptTagArgs', 'WebAppManualInsertionJavascriptTagArgsDict']] javascript_tag: JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
        :param pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagArgs', 'WebAppManualInsertionOneagentJavascriptTagArgsDict']] oneagent_javascript_tag: OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
        :param pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagSriArgs', 'WebAppManualInsertionOneagentJavascriptTagSriArgsDict']] oneagent_javascript_tag_sri: OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: WebAppManualInsertionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        > This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)

        ## Dynatrace Documentation

        - Select a snippet format - https://docs.dynatrace.com/docs/shortlink/snippet-formats

        - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:rum.web.manual-insertion`)

        ## Resource Example Usage

        ```python
        import pulumi
        import pulumiverse_dynatrace as dynatrace

        _name_ = dynatrace.WebAppManualInsertion("#name#",
            application_id="APPLICATION-1234567890000000",
            code_snippet={
                "code_snippet_type": "SYNCHRONOUSLY",
            },
            javascript_tag={
                "cache_duration": "1",
                "crossorigin_anonymous": True,
            })
        ```

        :param str resource_name: The name of the resource.
        :param WebAppManualInsertionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(WebAppManualInsertionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 application_id: Optional[pulumi.Input[_builtins.str]] = None,
                 code_snippet: Optional[pulumi.Input[Union['WebAppManualInsertionCodeSnippetArgs', 'WebAppManualInsertionCodeSnippetArgsDict']]] = None,
                 javascript_tag: Optional[pulumi.Input[Union['WebAppManualInsertionJavascriptTagArgs', 'WebAppManualInsertionJavascriptTagArgsDict']]] = None,
                 oneagent_javascript_tag: Optional[pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagArgs', 'WebAppManualInsertionOneagentJavascriptTagArgsDict']]] = None,
                 oneagent_javascript_tag_sri: Optional[pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagSriArgs', 'WebAppManualInsertionOneagentJavascriptTagSriArgsDict']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = WebAppManualInsertionArgs.__new__(WebAppManualInsertionArgs)

            if application_id is None and not opts.urn:
                raise TypeError("Missing required property 'application_id'")
            __props__.__dict__["application_id"] = application_id
            if code_snippet is None and not opts.urn:
                raise TypeError("Missing required property 'code_snippet'")
            __props__.__dict__["code_snippet"] = code_snippet
            if javascript_tag is None and not opts.urn:
                raise TypeError("Missing required property 'javascript_tag'")
            __props__.__dict__["javascript_tag"] = javascript_tag
            __props__.__dict__["oneagent_javascript_tag"] = oneagent_javascript_tag
            __props__.__dict__["oneagent_javascript_tag_sri"] = oneagent_javascript_tag_sri
        super(WebAppManualInsertion, __self__).__init__(
            'dynatrace:index/webAppManualInsertion:WebAppManualInsertion',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            application_id: Optional[pulumi.Input[_builtins.str]] = None,
            code_snippet: Optional[pulumi.Input[Union['WebAppManualInsertionCodeSnippetArgs', 'WebAppManualInsertionCodeSnippetArgsDict']]] = None,
            javascript_tag: Optional[pulumi.Input[Union['WebAppManualInsertionJavascriptTagArgs', 'WebAppManualInsertionJavascriptTagArgsDict']]] = None,
            oneagent_javascript_tag: Optional[pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagArgs', 'WebAppManualInsertionOneagentJavascriptTagArgsDict']]] = None,
            oneagent_javascript_tag_sri: Optional[pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagSriArgs', 'WebAppManualInsertionOneagentJavascriptTagSriArgsDict']]] = None) -> 'WebAppManualInsertion':
        """
        Get an existing WebAppManualInsertion resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[_builtins.str] application_id: The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        :param pulumi.Input[Union['WebAppManualInsertionCodeSnippetArgs', 'WebAppManualInsertionCodeSnippetArgsDict']] code_snippet: Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
        :param pulumi.Input[Union['WebAppManualInsertionJavascriptTagArgs', 'WebAppManualInsertionJavascriptTagArgsDict']] javascript_tag: JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
        :param pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagArgs', 'WebAppManualInsertionOneagentJavascriptTagArgsDict']] oneagent_javascript_tag: OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
        :param pulumi.Input[Union['WebAppManualInsertionOneagentJavascriptTagSriArgs', 'WebAppManualInsertionOneagentJavascriptTagSriArgsDict']] oneagent_javascript_tag_sri: OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _WebAppManualInsertionState.__new__(_WebAppManualInsertionState)

        __props__.__dict__["application_id"] = application_id
        __props__.__dict__["code_snippet"] = code_snippet
        __props__.__dict__["javascript_tag"] = javascript_tag
        __props__.__dict__["oneagent_javascript_tag"] = oneagent_javascript_tag
        __props__.__dict__["oneagent_javascript_tag_sri"] = oneagent_javascript_tag_sri
        return WebAppManualInsertion(resource_name, opts=opts, __props__=__props__)

    @_builtins.property
    @pulumi.getter(name="applicationId")
    def application_id(self) -> pulumi.Output[_builtins.str]:
        """
        The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        """
        return pulumi.get(self, "application_id")

    @_builtins.property
    @pulumi.getter(name="codeSnippet")
    def code_snippet(self) -> pulumi.Output['outputs.WebAppManualInsertionCodeSnippet']:
        """
        Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
        """
        return pulumi.get(self, "code_snippet")

    @_builtins.property
    @pulumi.getter(name="javascriptTag")
    def javascript_tag(self) -> pulumi.Output['outputs.WebAppManualInsertionJavascriptTag']:
        """
        JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
        """
        return pulumi.get(self, "javascript_tag")

    @_builtins.property
    @pulumi.getter(name="oneagentJavascriptTag")
    def oneagent_javascript_tag(self) -> pulumi.Output[Optional['outputs.WebAppManualInsertionOneagentJavascriptTag']]:
        """
        OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
        """
        return pulumi.get(self, "oneagent_javascript_tag")

    @_builtins.property
    @pulumi.getter(name="oneagentJavascriptTagSri")
    def oneagent_javascript_tag_sri(self) -> pulumi.Output[Optional['outputs.WebAppManualInsertionOneagentJavascriptTagSri']]:
        """
        OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
        """
        return pulumi.get(self, "oneagent_javascript_tag_sri")

