# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['OneagentDefaultVersionArgs', 'OneagentDefaultVersion']

@pulumi.input_type
class OneagentDefaultVersionArgs:
    def __init__(__self__, *,
                 default_version: pulumi.Input[str],
                 revision: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a OneagentDefaultVersion resource.
        :param pulumi.Input[str] default_version: Default version
        :param pulumi.Input[str] revision: Revision
        """
        pulumi.set(__self__, "default_version", default_version)
        if revision is not None:
            pulumi.set(__self__, "revision", revision)

    @property
    @pulumi.getter(name="defaultVersion")
    def default_version(self) -> pulumi.Input[str]:
        """
        Default version
        """
        return pulumi.get(self, "default_version")

    @default_version.setter
    def default_version(self, value: pulumi.Input[str]):
        pulumi.set(self, "default_version", value)

    @property
    @pulumi.getter
    def revision(self) -> Optional[pulumi.Input[str]]:
        """
        Revision
        """
        return pulumi.get(self, "revision")

    @revision.setter
    def revision(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "revision", value)


@pulumi.input_type
class _OneagentDefaultVersionState:
    def __init__(__self__, *,
                 default_version: Optional[pulumi.Input[str]] = None,
                 revision: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OneagentDefaultVersion resources.
        :param pulumi.Input[str] default_version: Default version
        :param pulumi.Input[str] revision: Revision
        """
        if default_version is not None:
            pulumi.set(__self__, "default_version", default_version)
        if revision is not None:
            pulumi.set(__self__, "revision", revision)

    @property
    @pulumi.getter(name="defaultVersion")
    def default_version(self) -> Optional[pulumi.Input[str]]:
        """
        Default version
        """
        return pulumi.get(self, "default_version")

    @default_version.setter
    def default_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "default_version", value)

    @property
    @pulumi.getter
    def revision(self) -> Optional[pulumi.Input[str]]:
        """
        Revision
        """
        return pulumi.get(self, "revision")

    @revision.setter
    def revision(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "revision", value)


class OneagentDefaultVersion(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 default_version: Optional[pulumi.Input[str]] = None,
                 revision: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a OneagentDefaultVersion resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] default_version: Default version
        :param pulumi.Input[str] revision: Revision
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OneagentDefaultVersionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a OneagentDefaultVersion resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param OneagentDefaultVersionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OneagentDefaultVersionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 default_version: Optional[pulumi.Input[str]] = None,
                 revision: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OneagentDefaultVersionArgs.__new__(OneagentDefaultVersionArgs)

            if default_version is None and not opts.urn:
                raise TypeError("Missing required property 'default_version'")
            __props__.__dict__["default_version"] = default_version
            __props__.__dict__["revision"] = revision
        super(OneagentDefaultVersion, __self__).__init__(
            'dynatrace:index/oneagentDefaultVersion:OneagentDefaultVersion',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            default_version: Optional[pulumi.Input[str]] = None,
            revision: Optional[pulumi.Input[str]] = None) -> 'OneagentDefaultVersion':
        """
        Get an existing OneagentDefaultVersion resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] default_version: Default version
        :param pulumi.Input[str] revision: Revision
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OneagentDefaultVersionState.__new__(_OneagentDefaultVersionState)

        __props__.__dict__["default_version"] = default_version
        __props__.__dict__["revision"] = revision
        return OneagentDefaultVersion(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="defaultVersion")
    def default_version(self) -> pulumi.Output[str]:
        """
        Default version
        """
        return pulumi.get(self, "default_version")

    @property
    @pulumi.getter
    def revision(self) -> pulumi.Output[Optional[str]]:
        """
        Revision
        """
        return pulumi.get(self, "revision")

