# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['BuiltinProcessMonitoringArgs', 'BuiltinProcessMonitoring']

@pulumi.input_type
class BuiltinProcessMonitoringArgs:
    def __init__(__self__, *,
                 aspnetcore: Optional[pulumi.Input[bool]] = None,
                 aspnetcore_agentlistener: Optional[pulumi.Input[bool]] = None,
                 aspnetcore_agentworker: Optional[pulumi.Input[bool]] = None,
                 cf: Optional[pulumi.Input[bool]] = None,
                 cf_appsmanagerjs: Optional[pulumi.Input[bool]] = None,
                 container: Optional[pulumi.Input[bool]] = None,
                 docker_pauseamd64: Optional[pulumi.Input[bool]] = None,
                 exe_adapter: Optional[pulumi.Input[bool]] = None,
                 exe_agentlistener: Optional[pulumi.Input[bool]] = None,
                 exe_agentworker: Optional[pulumi.Input[bool]] = None,
                 exe_auctioneer: Optional[pulumi.Input[bool]] = None,
                 exe_auditbeat: Optional[pulumi.Input[bool]] = None,
                 exe_bbs: Optional[pulumi.Input[bool]] = None,
                 exe_caddy: Optional[pulumi.Input[bool]] = None,
                 exe_caliconode: Optional[pulumi.Input[bool]] = None,
                 exe_casclient: Optional[pulumi.Input[bool]] = None,
                 exe_ccuploader: Optional[pulumi.Input[bool]] = None,
                 exe_doppler: Optional[pulumi.Input[bool]] = None,
                 exe_filebeat: Optional[pulumi.Input[bool]] = None,
                 exe_flexnetjobexecutorservice: Optional[pulumi.Input[bool]] = None,
                 exe_flexnetmaintenanceremotingservice: Optional[pulumi.Input[bool]] = None,
                 exe_functionbeat: Optional[pulumi.Input[bool]] = None,
                 exe_gorouter: Optional[pulumi.Input[bool]] = None,
                 exe_grootfs: Optional[pulumi.Input[bool]] = None,
                 exe_heartbeat: Optional[pulumi.Input[bool]] = None,
                 exe_influxd: Optional[pulumi.Input[bool]] = None,
                 exe_locket: Optional[pulumi.Input[bool]] = None,
                 exe_metricbeat: Optional[pulumi.Input[bool]] = None,
                 exe_metron: Optional[pulumi.Input[bool]] = None,
                 exe_mqsi: Optional[pulumi.Input[bool]] = None,
                 exe_oc: Optional[pulumi.Input[bool]] = None,
                 exe_openhandlecollector: Optional[pulumi.Input[bool]] = None,
                 exe_optcnibinhostlocal: Optional[pulumi.Input[bool]] = None,
                 exe_packetbeat: Optional[pulumi.Input[bool]] = None,
                 exe_phpcgi: Optional[pulumi.Input[bool]] = None,
                 exe_rep: Optional[pulumi.Input[bool]] = None,
                 exe_routeemitter: Optional[pulumi.Input[bool]] = None,
                 exe_routeregistrar: Optional[pulumi.Input[bool]] = None,
                 exe_routingapi: Optional[pulumi.Input[bool]] = None,
                 exe_schedular: Optional[pulumi.Input[bool]] = None,
                 exe_silkdaemon: Optional[pulumi.Input[bool]] = None,
                 exe_switchboard: Optional[pulumi.Input[bool]] = None,
                 exe_syslogdrainbinder: Optional[pulumi.Input[bool]] = None,
                 exe_tardis: Optional[pulumi.Input[bool]] = None,
                 exe_tmpbuildpacks: Optional[pulumi.Input[bool]] = None,
                 exe_tpswatcher: Optional[pulumi.Input[bool]] = None,
                 exe_trafficcontroller: Optional[pulumi.Input[bool]] = None,
                 exe_uipath: Optional[pulumi.Input[bool]] = None,
                 exe_userbinpiper: Optional[pulumi.Input[bool]] = None,
                 exe_w3wp: Optional[pulumi.Input[bool]] = None,
                 go_static: Optional[pulumi.Input[bool]] = None,
                 host_group_id: Optional[pulumi.Input[str]] = None,
                 jar_dtibmmqconnector: Optional[pulumi.Input[bool]] = None,
                 jar_eclipseequinox: Optional[pulumi.Input[bool]] = None,
                 k8s_cassandraoperator: Optional[pulumi.Input[bool]] = None,
                 k8s_containerpod: Optional[pulumi.Input[bool]] = None,
                 k8s_namespace: Optional[pulumi.Input[bool]] = None,
                 node_binpm2: Optional[pulumi.Input[bool]] = None,
                 node_corepack: Optional[pulumi.Input[bool]] = None,
                 node_grunt: Optional[pulumi.Input[bool]] = None,
                 node_gulpcli: Optional[pulumi.Input[bool]] = None,
                 node_nodegyp: Optional[pulumi.Input[bool]] = None,
                 node_nodepregyp: Optional[pulumi.Input[bool]] = None,
                 node_npm: Optional[pulumi.Input[bool]] = None,
                 node_prebuildinstall: Optional[pulumi.Input[bool]] = None,
                 node_typescript: Optional[pulumi.Input[bool]] = None,
                 node_yarn: Optional[pulumi.Input[bool]] = None,
                 php_script: Optional[pulumi.Input[bool]] = None):
        """
        The set of arguments for constructing a BuiltinProcessMonitoring resource.
        :param pulumi.Input[bool] aspnetcore: Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        :param pulumi.Input[bool] aspnetcore_agentlistener: Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        :param pulumi.Input[bool] aspnetcore_agentworker: Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        :param pulumi.Input[bool] cf: Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        :param pulumi.Input[bool] cf_appsmanagerjs: Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        :param pulumi.Input[bool] container: Rule id: 41 - Do monitor processes if container name exists
        :param pulumi.Input[bool] docker_pauseamd64: Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        :param pulumi.Input[bool] exe_adapter: Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        :param pulumi.Input[bool] exe_agentlistener: Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        :param pulumi.Input[bool] exe_agentworker: Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        :param pulumi.Input[bool] exe_auctioneer: Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        :param pulumi.Input[bool] exe_auditbeat: Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        :param pulumi.Input[bool] exe_bbs: Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        :param pulumi.Input[bool] exe_caddy: Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        :param pulumi.Input[bool] exe_caliconode: Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        :param pulumi.Input[bool] exe_casclient: Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        :param pulumi.Input[bool] exe_ccuploader: Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        :param pulumi.Input[bool] exe_doppler: Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        :param pulumi.Input[bool] exe_filebeat: Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        :param pulumi.Input[bool] exe_flexnetjobexecutorservice: Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        :param pulumi.Input[bool] exe_flexnetmaintenanceremotingservice: Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        :param pulumi.Input[bool] exe_functionbeat: Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        :param pulumi.Input[bool] exe_gorouter: Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        :param pulumi.Input[bool] exe_grootfs: Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        :param pulumi.Input[bool] exe_heartbeat: Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        :param pulumi.Input[bool] exe_influxd: Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        :param pulumi.Input[bool] exe_locket: Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        :param pulumi.Input[bool] exe_metricbeat: Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        :param pulumi.Input[bool] exe_metron: Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        :param pulumi.Input[bool] exe_mqsi: Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        :param pulumi.Input[bool] exe_oc: Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        :param pulumi.Input[bool] exe_openhandlecollector: Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        :param pulumi.Input[bool] exe_optcnibinhostlocal: Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        :param pulumi.Input[bool] exe_packetbeat: Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        :param pulumi.Input[bool] exe_phpcgi: Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        :param pulumi.Input[bool] exe_rep: Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        :param pulumi.Input[bool] exe_routeemitter: Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        :param pulumi.Input[bool] exe_routeregistrar: Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        :param pulumi.Input[bool] exe_routingapi: Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        :param pulumi.Input[bool] exe_schedular: Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        :param pulumi.Input[bool] exe_silkdaemon: Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        :param pulumi.Input[bool] exe_switchboard: Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        :param pulumi.Input[bool] exe_syslogdrainbinder: Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        :param pulumi.Input[bool] exe_tardis: Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        :param pulumi.Input[bool] exe_tmpbuildpacks: Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        :param pulumi.Input[bool] exe_tpswatcher: Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        :param pulumi.Input[bool] exe_trafficcontroller: Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        :param pulumi.Input[bool] exe_uipath: Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        :param pulumi.Input[bool] exe_userbinpiper: Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        :param pulumi.Input[bool] exe_w3wp: Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        :param pulumi.Input[bool] go_static: Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        :param pulumi.Input[str] host_group_id: The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        :param pulumi.Input[bool] jar_dtibmmqconnector: Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        :param pulumi.Input[bool] jar_eclipseequinox: Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        :param pulumi.Input[bool] k8s_cassandraoperator: Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        :param pulumi.Input[bool] k8s_containerpod: Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        :param pulumi.Input[bool] k8s_namespace: Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        :param pulumi.Input[bool] node_binpm2: Do not monitor processes if Node.js script equals 'bin/pm2'
        :param pulumi.Input[bool] node_corepack: Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        :param pulumi.Input[bool] node_grunt: Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        :param pulumi.Input[bool] node_gulpcli: Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        :param pulumi.Input[bool] node_nodegyp: Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        :param pulumi.Input[bool] node_nodepregyp: Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        :param pulumi.Input[bool] node_npm: Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        :param pulumi.Input[bool] node_prebuildinstall: Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        :param pulumi.Input[bool] node_typescript: Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        :param pulumi.Input[bool] node_yarn: Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        :param pulumi.Input[bool] php_script: (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        """
        if aspnetcore is not None:
            pulumi.set(__self__, "aspnetcore", aspnetcore)
        if aspnetcore_agentlistener is not None:
            pulumi.set(__self__, "aspnetcore_agentlistener", aspnetcore_agentlistener)
        if aspnetcore_agentworker is not None:
            pulumi.set(__self__, "aspnetcore_agentworker", aspnetcore_agentworker)
        if cf is not None:
            pulumi.set(__self__, "cf", cf)
        if cf_appsmanagerjs is not None:
            pulumi.set(__self__, "cf_appsmanagerjs", cf_appsmanagerjs)
        if container is not None:
            pulumi.set(__self__, "container", container)
        if docker_pauseamd64 is not None:
            pulumi.set(__self__, "docker_pauseamd64", docker_pauseamd64)
        if exe_adapter is not None:
            pulumi.set(__self__, "exe_adapter", exe_adapter)
        if exe_agentlistener is not None:
            pulumi.set(__self__, "exe_agentlistener", exe_agentlistener)
        if exe_agentworker is not None:
            pulumi.set(__self__, "exe_agentworker", exe_agentworker)
        if exe_auctioneer is not None:
            pulumi.set(__self__, "exe_auctioneer", exe_auctioneer)
        if exe_auditbeat is not None:
            pulumi.set(__self__, "exe_auditbeat", exe_auditbeat)
        if exe_bbs is not None:
            pulumi.set(__self__, "exe_bbs", exe_bbs)
        if exe_caddy is not None:
            pulumi.set(__self__, "exe_caddy", exe_caddy)
        if exe_caliconode is not None:
            pulumi.set(__self__, "exe_caliconode", exe_caliconode)
        if exe_casclient is not None:
            pulumi.set(__self__, "exe_casclient", exe_casclient)
        if exe_ccuploader is not None:
            pulumi.set(__self__, "exe_ccuploader", exe_ccuploader)
        if exe_doppler is not None:
            pulumi.set(__self__, "exe_doppler", exe_doppler)
        if exe_filebeat is not None:
            pulumi.set(__self__, "exe_filebeat", exe_filebeat)
        if exe_flexnetjobexecutorservice is not None:
            pulumi.set(__self__, "exe_flexnetjobexecutorservice", exe_flexnetjobexecutorservice)
        if exe_flexnetmaintenanceremotingservice is not None:
            pulumi.set(__self__, "exe_flexnetmaintenanceremotingservice", exe_flexnetmaintenanceremotingservice)
        if exe_functionbeat is not None:
            pulumi.set(__self__, "exe_functionbeat", exe_functionbeat)
        if exe_gorouter is not None:
            pulumi.set(__self__, "exe_gorouter", exe_gorouter)
        if exe_grootfs is not None:
            pulumi.set(__self__, "exe_grootfs", exe_grootfs)
        if exe_heartbeat is not None:
            pulumi.set(__self__, "exe_heartbeat", exe_heartbeat)
        if exe_influxd is not None:
            pulumi.set(__self__, "exe_influxd", exe_influxd)
        if exe_locket is not None:
            pulumi.set(__self__, "exe_locket", exe_locket)
        if exe_metricbeat is not None:
            pulumi.set(__self__, "exe_metricbeat", exe_metricbeat)
        if exe_metron is not None:
            pulumi.set(__self__, "exe_metron", exe_metron)
        if exe_mqsi is not None:
            pulumi.set(__self__, "exe_mqsi", exe_mqsi)
        if exe_oc is not None:
            pulumi.set(__self__, "exe_oc", exe_oc)
        if exe_openhandlecollector is not None:
            pulumi.set(__self__, "exe_openhandlecollector", exe_openhandlecollector)
        if exe_optcnibinhostlocal is not None:
            pulumi.set(__self__, "exe_optcnibinhostlocal", exe_optcnibinhostlocal)
        if exe_packetbeat is not None:
            pulumi.set(__self__, "exe_packetbeat", exe_packetbeat)
        if exe_phpcgi is not None:
            pulumi.set(__self__, "exe_phpcgi", exe_phpcgi)
        if exe_rep is not None:
            pulumi.set(__self__, "exe_rep", exe_rep)
        if exe_routeemitter is not None:
            pulumi.set(__self__, "exe_routeemitter", exe_routeemitter)
        if exe_routeregistrar is not None:
            pulumi.set(__self__, "exe_routeregistrar", exe_routeregistrar)
        if exe_routingapi is not None:
            pulumi.set(__self__, "exe_routingapi", exe_routingapi)
        if exe_schedular is not None:
            pulumi.set(__self__, "exe_schedular", exe_schedular)
        if exe_silkdaemon is not None:
            pulumi.set(__self__, "exe_silkdaemon", exe_silkdaemon)
        if exe_switchboard is not None:
            pulumi.set(__self__, "exe_switchboard", exe_switchboard)
        if exe_syslogdrainbinder is not None:
            pulumi.set(__self__, "exe_syslogdrainbinder", exe_syslogdrainbinder)
        if exe_tardis is not None:
            pulumi.set(__self__, "exe_tardis", exe_tardis)
        if exe_tmpbuildpacks is not None:
            pulumi.set(__self__, "exe_tmpbuildpacks", exe_tmpbuildpacks)
        if exe_tpswatcher is not None:
            pulumi.set(__self__, "exe_tpswatcher", exe_tpswatcher)
        if exe_trafficcontroller is not None:
            pulumi.set(__self__, "exe_trafficcontroller", exe_trafficcontroller)
        if exe_uipath is not None:
            pulumi.set(__self__, "exe_uipath", exe_uipath)
        if exe_userbinpiper is not None:
            pulumi.set(__self__, "exe_userbinpiper", exe_userbinpiper)
        if exe_w3wp is not None:
            pulumi.set(__self__, "exe_w3wp", exe_w3wp)
        if go_static is not None:
            pulumi.set(__self__, "go_static", go_static)
        if host_group_id is not None:
            pulumi.set(__self__, "host_group_id", host_group_id)
        if jar_dtibmmqconnector is not None:
            pulumi.set(__self__, "jar_dtibmmqconnector", jar_dtibmmqconnector)
        if jar_eclipseequinox is not None:
            pulumi.set(__self__, "jar_eclipseequinox", jar_eclipseequinox)
        if k8s_cassandraoperator is not None:
            pulumi.set(__self__, "k8s_cassandraoperator", k8s_cassandraoperator)
        if k8s_containerpod is not None:
            pulumi.set(__self__, "k8s_containerpod", k8s_containerpod)
        if k8s_namespace is not None:
            pulumi.set(__self__, "k8s_namespace", k8s_namespace)
        if node_binpm2 is not None:
            pulumi.set(__self__, "node_binpm2", node_binpm2)
        if node_corepack is not None:
            pulumi.set(__self__, "node_corepack", node_corepack)
        if node_grunt is not None:
            pulumi.set(__self__, "node_grunt", node_grunt)
        if node_gulpcli is not None:
            pulumi.set(__self__, "node_gulpcli", node_gulpcli)
        if node_nodegyp is not None:
            pulumi.set(__self__, "node_nodegyp", node_nodegyp)
        if node_nodepregyp is not None:
            pulumi.set(__self__, "node_nodepregyp", node_nodepregyp)
        if node_npm is not None:
            pulumi.set(__self__, "node_npm", node_npm)
        if node_prebuildinstall is not None:
            pulumi.set(__self__, "node_prebuildinstall", node_prebuildinstall)
        if node_typescript is not None:
            pulumi.set(__self__, "node_typescript", node_typescript)
        if node_yarn is not None:
            pulumi.set(__self__, "node_yarn", node_yarn)
        if php_script is not None:
            pulumi.set(__self__, "php_script", php_script)

    @property
    @pulumi.getter
    def aspnetcore(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        """
        return pulumi.get(self, "aspnetcore")

    @aspnetcore.setter
    def aspnetcore(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "aspnetcore", value)

    @property
    @pulumi.getter(name="aspnetcoreAgentlistener")
    def aspnetcore_agentlistener(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        """
        return pulumi.get(self, "aspnetcore_agentlistener")

    @aspnetcore_agentlistener.setter
    def aspnetcore_agentlistener(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "aspnetcore_agentlistener", value)

    @property
    @pulumi.getter(name="aspnetcoreAgentworker")
    def aspnetcore_agentworker(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        """
        return pulumi.get(self, "aspnetcore_agentworker")

    @aspnetcore_agentworker.setter
    def aspnetcore_agentworker(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "aspnetcore_agentworker", value)

    @property
    @pulumi.getter
    def cf(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        """
        return pulumi.get(self, "cf")

    @cf.setter
    def cf(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cf", value)

    @property
    @pulumi.getter(name="cfAppsmanagerjs")
    def cf_appsmanagerjs(self) -> Optional[pulumi.Input[bool]]:
        """
        Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        """
        return pulumi.get(self, "cf_appsmanagerjs")

    @cf_appsmanagerjs.setter
    def cf_appsmanagerjs(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cf_appsmanagerjs", value)

    @property
    @pulumi.getter
    def container(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 41 - Do monitor processes if container name exists
        """
        return pulumi.get(self, "container")

    @container.setter
    def container(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "container", value)

    @property
    @pulumi.getter(name="dockerPauseamd64")
    def docker_pauseamd64(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        """
        return pulumi.get(self, "docker_pauseamd64")

    @docker_pauseamd64.setter
    def docker_pauseamd64(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "docker_pauseamd64", value)

    @property
    @pulumi.getter(name="exeAdapter")
    def exe_adapter(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        """
        return pulumi.get(self, "exe_adapter")

    @exe_adapter.setter
    def exe_adapter(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_adapter", value)

    @property
    @pulumi.getter(name="exeAgentlistener")
    def exe_agentlistener(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        """
        return pulumi.get(self, "exe_agentlistener")

    @exe_agentlistener.setter
    def exe_agentlistener(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_agentlistener", value)

    @property
    @pulumi.getter(name="exeAgentworker")
    def exe_agentworker(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        """
        return pulumi.get(self, "exe_agentworker")

    @exe_agentworker.setter
    def exe_agentworker(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_agentworker", value)

    @property
    @pulumi.getter(name="exeAuctioneer")
    def exe_auctioneer(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        """
        return pulumi.get(self, "exe_auctioneer")

    @exe_auctioneer.setter
    def exe_auctioneer(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_auctioneer", value)

    @property
    @pulumi.getter(name="exeAuditbeat")
    def exe_auditbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        """
        return pulumi.get(self, "exe_auditbeat")

    @exe_auditbeat.setter
    def exe_auditbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_auditbeat", value)

    @property
    @pulumi.getter(name="exeBbs")
    def exe_bbs(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        """
        return pulumi.get(self, "exe_bbs")

    @exe_bbs.setter
    def exe_bbs(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_bbs", value)

    @property
    @pulumi.getter(name="exeCaddy")
    def exe_caddy(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        """
        return pulumi.get(self, "exe_caddy")

    @exe_caddy.setter
    def exe_caddy(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_caddy", value)

    @property
    @pulumi.getter(name="exeCaliconode")
    def exe_caliconode(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        """
        return pulumi.get(self, "exe_caliconode")

    @exe_caliconode.setter
    def exe_caliconode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_caliconode", value)

    @property
    @pulumi.getter(name="exeCasclient")
    def exe_casclient(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        """
        return pulumi.get(self, "exe_casclient")

    @exe_casclient.setter
    def exe_casclient(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_casclient", value)

    @property
    @pulumi.getter(name="exeCcuploader")
    def exe_ccuploader(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        """
        return pulumi.get(self, "exe_ccuploader")

    @exe_ccuploader.setter
    def exe_ccuploader(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_ccuploader", value)

    @property
    @pulumi.getter(name="exeDoppler")
    def exe_doppler(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        """
        return pulumi.get(self, "exe_doppler")

    @exe_doppler.setter
    def exe_doppler(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_doppler", value)

    @property
    @pulumi.getter(name="exeFilebeat")
    def exe_filebeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        """
        return pulumi.get(self, "exe_filebeat")

    @exe_filebeat.setter
    def exe_filebeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_filebeat", value)

    @property
    @pulumi.getter(name="exeFlexnetjobexecutorservice")
    def exe_flexnetjobexecutorservice(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        """
        return pulumi.get(self, "exe_flexnetjobexecutorservice")

    @exe_flexnetjobexecutorservice.setter
    def exe_flexnetjobexecutorservice(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_flexnetjobexecutorservice", value)

    @property
    @pulumi.getter(name="exeFlexnetmaintenanceremotingservice")
    def exe_flexnetmaintenanceremotingservice(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        """
        return pulumi.get(self, "exe_flexnetmaintenanceremotingservice")

    @exe_flexnetmaintenanceremotingservice.setter
    def exe_flexnetmaintenanceremotingservice(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_flexnetmaintenanceremotingservice", value)

    @property
    @pulumi.getter(name="exeFunctionbeat")
    def exe_functionbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        """
        return pulumi.get(self, "exe_functionbeat")

    @exe_functionbeat.setter
    def exe_functionbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_functionbeat", value)

    @property
    @pulumi.getter(name="exeGorouter")
    def exe_gorouter(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        """
        return pulumi.get(self, "exe_gorouter")

    @exe_gorouter.setter
    def exe_gorouter(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_gorouter", value)

    @property
    @pulumi.getter(name="exeGrootfs")
    def exe_grootfs(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        """
        return pulumi.get(self, "exe_grootfs")

    @exe_grootfs.setter
    def exe_grootfs(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_grootfs", value)

    @property
    @pulumi.getter(name="exeHeartbeat")
    def exe_heartbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        """
        return pulumi.get(self, "exe_heartbeat")

    @exe_heartbeat.setter
    def exe_heartbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_heartbeat", value)

    @property
    @pulumi.getter(name="exeInfluxd")
    def exe_influxd(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        """
        return pulumi.get(self, "exe_influxd")

    @exe_influxd.setter
    def exe_influxd(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_influxd", value)

    @property
    @pulumi.getter(name="exeLocket")
    def exe_locket(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        """
        return pulumi.get(self, "exe_locket")

    @exe_locket.setter
    def exe_locket(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_locket", value)

    @property
    @pulumi.getter(name="exeMetricbeat")
    def exe_metricbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        """
        return pulumi.get(self, "exe_metricbeat")

    @exe_metricbeat.setter
    def exe_metricbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_metricbeat", value)

    @property
    @pulumi.getter(name="exeMetron")
    def exe_metron(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        """
        return pulumi.get(self, "exe_metron")

    @exe_metron.setter
    def exe_metron(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_metron", value)

    @property
    @pulumi.getter(name="exeMqsi")
    def exe_mqsi(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        """
        return pulumi.get(self, "exe_mqsi")

    @exe_mqsi.setter
    def exe_mqsi(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_mqsi", value)

    @property
    @pulumi.getter(name="exeOc")
    def exe_oc(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        """
        return pulumi.get(self, "exe_oc")

    @exe_oc.setter
    def exe_oc(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_oc", value)

    @property
    @pulumi.getter(name="exeOpenhandlecollector")
    def exe_openhandlecollector(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        """
        return pulumi.get(self, "exe_openhandlecollector")

    @exe_openhandlecollector.setter
    def exe_openhandlecollector(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_openhandlecollector", value)

    @property
    @pulumi.getter(name="exeOptcnibinhostlocal")
    def exe_optcnibinhostlocal(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        """
        return pulumi.get(self, "exe_optcnibinhostlocal")

    @exe_optcnibinhostlocal.setter
    def exe_optcnibinhostlocal(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_optcnibinhostlocal", value)

    @property
    @pulumi.getter(name="exePacketbeat")
    def exe_packetbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        """
        return pulumi.get(self, "exe_packetbeat")

    @exe_packetbeat.setter
    def exe_packetbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_packetbeat", value)

    @property
    @pulumi.getter(name="exePhpcgi")
    def exe_phpcgi(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        """
        return pulumi.get(self, "exe_phpcgi")

    @exe_phpcgi.setter
    def exe_phpcgi(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_phpcgi", value)

    @property
    @pulumi.getter(name="exeRep")
    def exe_rep(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        """
        return pulumi.get(self, "exe_rep")

    @exe_rep.setter
    def exe_rep(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_rep", value)

    @property
    @pulumi.getter(name="exeRouteemitter")
    def exe_routeemitter(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        """
        return pulumi.get(self, "exe_routeemitter")

    @exe_routeemitter.setter
    def exe_routeemitter(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_routeemitter", value)

    @property
    @pulumi.getter(name="exeRouteregistrar")
    def exe_routeregistrar(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        """
        return pulumi.get(self, "exe_routeregistrar")

    @exe_routeregistrar.setter
    def exe_routeregistrar(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_routeregistrar", value)

    @property
    @pulumi.getter(name="exeRoutingapi")
    def exe_routingapi(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        """
        return pulumi.get(self, "exe_routingapi")

    @exe_routingapi.setter
    def exe_routingapi(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_routingapi", value)

    @property
    @pulumi.getter(name="exeSchedular")
    def exe_schedular(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        """
        return pulumi.get(self, "exe_schedular")

    @exe_schedular.setter
    def exe_schedular(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_schedular", value)

    @property
    @pulumi.getter(name="exeSilkdaemon")
    def exe_silkdaemon(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        """
        return pulumi.get(self, "exe_silkdaemon")

    @exe_silkdaemon.setter
    def exe_silkdaemon(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_silkdaemon", value)

    @property
    @pulumi.getter(name="exeSwitchboard")
    def exe_switchboard(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        """
        return pulumi.get(self, "exe_switchboard")

    @exe_switchboard.setter
    def exe_switchboard(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_switchboard", value)

    @property
    @pulumi.getter(name="exeSyslogdrainbinder")
    def exe_syslogdrainbinder(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        """
        return pulumi.get(self, "exe_syslogdrainbinder")

    @exe_syslogdrainbinder.setter
    def exe_syslogdrainbinder(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_syslogdrainbinder", value)

    @property
    @pulumi.getter(name="exeTardis")
    def exe_tardis(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        """
        return pulumi.get(self, "exe_tardis")

    @exe_tardis.setter
    def exe_tardis(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_tardis", value)

    @property
    @pulumi.getter(name="exeTmpbuildpacks")
    def exe_tmpbuildpacks(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        """
        return pulumi.get(self, "exe_tmpbuildpacks")

    @exe_tmpbuildpacks.setter
    def exe_tmpbuildpacks(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_tmpbuildpacks", value)

    @property
    @pulumi.getter(name="exeTpswatcher")
    def exe_tpswatcher(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        """
        return pulumi.get(self, "exe_tpswatcher")

    @exe_tpswatcher.setter
    def exe_tpswatcher(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_tpswatcher", value)

    @property
    @pulumi.getter(name="exeTrafficcontroller")
    def exe_trafficcontroller(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        """
        return pulumi.get(self, "exe_trafficcontroller")

    @exe_trafficcontroller.setter
    def exe_trafficcontroller(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_trafficcontroller", value)

    @property
    @pulumi.getter(name="exeUipath")
    def exe_uipath(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        """
        return pulumi.get(self, "exe_uipath")

    @exe_uipath.setter
    def exe_uipath(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_uipath", value)

    @property
    @pulumi.getter(name="exeUserbinpiper")
    def exe_userbinpiper(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        """
        return pulumi.get(self, "exe_userbinpiper")

    @exe_userbinpiper.setter
    def exe_userbinpiper(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_userbinpiper", value)

    @property
    @pulumi.getter(name="exeW3wp")
    def exe_w3wp(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        """
        return pulumi.get(self, "exe_w3wp")

    @exe_w3wp.setter
    def exe_w3wp(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_w3wp", value)

    @property
    @pulumi.getter(name="goStatic")
    def go_static(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        """
        return pulumi.get(self, "go_static")

    @go_static.setter
    def go_static(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "go_static", value)

    @property
    @pulumi.getter(name="hostGroupId")
    def host_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        """
        return pulumi.get(self, "host_group_id")

    @host_group_id.setter
    def host_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_group_id", value)

    @property
    @pulumi.getter(name="jarDtibmmqconnector")
    def jar_dtibmmqconnector(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        """
        return pulumi.get(self, "jar_dtibmmqconnector")

    @jar_dtibmmqconnector.setter
    def jar_dtibmmqconnector(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "jar_dtibmmqconnector", value)

    @property
    @pulumi.getter(name="jarEclipseequinox")
    def jar_eclipseequinox(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        """
        return pulumi.get(self, "jar_eclipseequinox")

    @jar_eclipseequinox.setter
    def jar_eclipseequinox(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "jar_eclipseequinox", value)

    @property
    @pulumi.getter(name="k8sCassandraoperator")
    def k8s_cassandraoperator(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        """
        return pulumi.get(self, "k8s_cassandraoperator")

    @k8s_cassandraoperator.setter
    def k8s_cassandraoperator(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "k8s_cassandraoperator", value)

    @property
    @pulumi.getter(name="k8sContainerpod")
    def k8s_containerpod(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        """
        return pulumi.get(self, "k8s_containerpod")

    @k8s_containerpod.setter
    def k8s_containerpod(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "k8s_containerpod", value)

    @property
    @pulumi.getter(name="k8sNamespace")
    def k8s_namespace(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        """
        return pulumi.get(self, "k8s_namespace")

    @k8s_namespace.setter
    def k8s_namespace(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "k8s_namespace", value)

    @property
    @pulumi.getter(name="nodeBinpm2")
    def node_binpm2(self) -> Optional[pulumi.Input[bool]]:
        """
        Do not monitor processes if Node.js script equals 'bin/pm2'
        """
        return pulumi.get(self, "node_binpm2")

    @node_binpm2.setter
    def node_binpm2(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_binpm2", value)

    @property
    @pulumi.getter(name="nodeCorepack")
    def node_corepack(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        """
        return pulumi.get(self, "node_corepack")

    @node_corepack.setter
    def node_corepack(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_corepack", value)

    @property
    @pulumi.getter(name="nodeGrunt")
    def node_grunt(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        """
        return pulumi.get(self, "node_grunt")

    @node_grunt.setter
    def node_grunt(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_grunt", value)

    @property
    @pulumi.getter(name="nodeGulpcli")
    def node_gulpcli(self) -> Optional[pulumi.Input[bool]]:
        """
        Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        """
        return pulumi.get(self, "node_gulpcli")

    @node_gulpcli.setter
    def node_gulpcli(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_gulpcli", value)

    @property
    @pulumi.getter(name="nodeNodegyp")
    def node_nodegyp(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        """
        return pulumi.get(self, "node_nodegyp")

    @node_nodegyp.setter
    def node_nodegyp(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_nodegyp", value)

    @property
    @pulumi.getter(name="nodeNodepregyp")
    def node_nodepregyp(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        """
        return pulumi.get(self, "node_nodepregyp")

    @node_nodepregyp.setter
    def node_nodepregyp(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_nodepregyp", value)

    @property
    @pulumi.getter(name="nodeNpm")
    def node_npm(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        """
        return pulumi.get(self, "node_npm")

    @node_npm.setter
    def node_npm(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_npm", value)

    @property
    @pulumi.getter(name="nodePrebuildinstall")
    def node_prebuildinstall(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        """
        return pulumi.get(self, "node_prebuildinstall")

    @node_prebuildinstall.setter
    def node_prebuildinstall(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_prebuildinstall", value)

    @property
    @pulumi.getter(name="nodeTypescript")
    def node_typescript(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        """
        return pulumi.get(self, "node_typescript")

    @node_typescript.setter
    def node_typescript(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_typescript", value)

    @property
    @pulumi.getter(name="nodeYarn")
    def node_yarn(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        """
        return pulumi.get(self, "node_yarn")

    @node_yarn.setter
    def node_yarn(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_yarn", value)

    @property
    @pulumi.getter(name="phpScript")
    def php_script(self) -> Optional[pulumi.Input[bool]]:
        """
        (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        """
        return pulumi.get(self, "php_script")

    @php_script.setter
    def php_script(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "php_script", value)


@pulumi.input_type
class _BuiltinProcessMonitoringState:
    def __init__(__self__, *,
                 aspnetcore: Optional[pulumi.Input[bool]] = None,
                 aspnetcore_agentlistener: Optional[pulumi.Input[bool]] = None,
                 aspnetcore_agentworker: Optional[pulumi.Input[bool]] = None,
                 cf: Optional[pulumi.Input[bool]] = None,
                 cf_appsmanagerjs: Optional[pulumi.Input[bool]] = None,
                 container: Optional[pulumi.Input[bool]] = None,
                 docker_pauseamd64: Optional[pulumi.Input[bool]] = None,
                 exe_adapter: Optional[pulumi.Input[bool]] = None,
                 exe_agentlistener: Optional[pulumi.Input[bool]] = None,
                 exe_agentworker: Optional[pulumi.Input[bool]] = None,
                 exe_auctioneer: Optional[pulumi.Input[bool]] = None,
                 exe_auditbeat: Optional[pulumi.Input[bool]] = None,
                 exe_bbs: Optional[pulumi.Input[bool]] = None,
                 exe_caddy: Optional[pulumi.Input[bool]] = None,
                 exe_caliconode: Optional[pulumi.Input[bool]] = None,
                 exe_casclient: Optional[pulumi.Input[bool]] = None,
                 exe_ccuploader: Optional[pulumi.Input[bool]] = None,
                 exe_doppler: Optional[pulumi.Input[bool]] = None,
                 exe_filebeat: Optional[pulumi.Input[bool]] = None,
                 exe_flexnetjobexecutorservice: Optional[pulumi.Input[bool]] = None,
                 exe_flexnetmaintenanceremotingservice: Optional[pulumi.Input[bool]] = None,
                 exe_functionbeat: Optional[pulumi.Input[bool]] = None,
                 exe_gorouter: Optional[pulumi.Input[bool]] = None,
                 exe_grootfs: Optional[pulumi.Input[bool]] = None,
                 exe_heartbeat: Optional[pulumi.Input[bool]] = None,
                 exe_influxd: Optional[pulumi.Input[bool]] = None,
                 exe_locket: Optional[pulumi.Input[bool]] = None,
                 exe_metricbeat: Optional[pulumi.Input[bool]] = None,
                 exe_metron: Optional[pulumi.Input[bool]] = None,
                 exe_mqsi: Optional[pulumi.Input[bool]] = None,
                 exe_oc: Optional[pulumi.Input[bool]] = None,
                 exe_openhandlecollector: Optional[pulumi.Input[bool]] = None,
                 exe_optcnibinhostlocal: Optional[pulumi.Input[bool]] = None,
                 exe_packetbeat: Optional[pulumi.Input[bool]] = None,
                 exe_phpcgi: Optional[pulumi.Input[bool]] = None,
                 exe_rep: Optional[pulumi.Input[bool]] = None,
                 exe_routeemitter: Optional[pulumi.Input[bool]] = None,
                 exe_routeregistrar: Optional[pulumi.Input[bool]] = None,
                 exe_routingapi: Optional[pulumi.Input[bool]] = None,
                 exe_schedular: Optional[pulumi.Input[bool]] = None,
                 exe_silkdaemon: Optional[pulumi.Input[bool]] = None,
                 exe_switchboard: Optional[pulumi.Input[bool]] = None,
                 exe_syslogdrainbinder: Optional[pulumi.Input[bool]] = None,
                 exe_tardis: Optional[pulumi.Input[bool]] = None,
                 exe_tmpbuildpacks: Optional[pulumi.Input[bool]] = None,
                 exe_tpswatcher: Optional[pulumi.Input[bool]] = None,
                 exe_trafficcontroller: Optional[pulumi.Input[bool]] = None,
                 exe_uipath: Optional[pulumi.Input[bool]] = None,
                 exe_userbinpiper: Optional[pulumi.Input[bool]] = None,
                 exe_w3wp: Optional[pulumi.Input[bool]] = None,
                 go_static: Optional[pulumi.Input[bool]] = None,
                 host_group_id: Optional[pulumi.Input[str]] = None,
                 jar_dtibmmqconnector: Optional[pulumi.Input[bool]] = None,
                 jar_eclipseequinox: Optional[pulumi.Input[bool]] = None,
                 k8s_cassandraoperator: Optional[pulumi.Input[bool]] = None,
                 k8s_containerpod: Optional[pulumi.Input[bool]] = None,
                 k8s_namespace: Optional[pulumi.Input[bool]] = None,
                 node_binpm2: Optional[pulumi.Input[bool]] = None,
                 node_corepack: Optional[pulumi.Input[bool]] = None,
                 node_grunt: Optional[pulumi.Input[bool]] = None,
                 node_gulpcli: Optional[pulumi.Input[bool]] = None,
                 node_nodegyp: Optional[pulumi.Input[bool]] = None,
                 node_nodepregyp: Optional[pulumi.Input[bool]] = None,
                 node_npm: Optional[pulumi.Input[bool]] = None,
                 node_prebuildinstall: Optional[pulumi.Input[bool]] = None,
                 node_typescript: Optional[pulumi.Input[bool]] = None,
                 node_yarn: Optional[pulumi.Input[bool]] = None,
                 php_script: Optional[pulumi.Input[bool]] = None):
        """
        Input properties used for looking up and filtering BuiltinProcessMonitoring resources.
        :param pulumi.Input[bool] aspnetcore: Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        :param pulumi.Input[bool] aspnetcore_agentlistener: Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        :param pulumi.Input[bool] aspnetcore_agentworker: Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        :param pulumi.Input[bool] cf: Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        :param pulumi.Input[bool] cf_appsmanagerjs: Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        :param pulumi.Input[bool] container: Rule id: 41 - Do monitor processes if container name exists
        :param pulumi.Input[bool] docker_pauseamd64: Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        :param pulumi.Input[bool] exe_adapter: Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        :param pulumi.Input[bool] exe_agentlistener: Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        :param pulumi.Input[bool] exe_agentworker: Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        :param pulumi.Input[bool] exe_auctioneer: Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        :param pulumi.Input[bool] exe_auditbeat: Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        :param pulumi.Input[bool] exe_bbs: Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        :param pulumi.Input[bool] exe_caddy: Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        :param pulumi.Input[bool] exe_caliconode: Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        :param pulumi.Input[bool] exe_casclient: Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        :param pulumi.Input[bool] exe_ccuploader: Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        :param pulumi.Input[bool] exe_doppler: Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        :param pulumi.Input[bool] exe_filebeat: Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        :param pulumi.Input[bool] exe_flexnetjobexecutorservice: Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        :param pulumi.Input[bool] exe_flexnetmaintenanceremotingservice: Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        :param pulumi.Input[bool] exe_functionbeat: Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        :param pulumi.Input[bool] exe_gorouter: Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        :param pulumi.Input[bool] exe_grootfs: Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        :param pulumi.Input[bool] exe_heartbeat: Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        :param pulumi.Input[bool] exe_influxd: Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        :param pulumi.Input[bool] exe_locket: Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        :param pulumi.Input[bool] exe_metricbeat: Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        :param pulumi.Input[bool] exe_metron: Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        :param pulumi.Input[bool] exe_mqsi: Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        :param pulumi.Input[bool] exe_oc: Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        :param pulumi.Input[bool] exe_openhandlecollector: Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        :param pulumi.Input[bool] exe_optcnibinhostlocal: Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        :param pulumi.Input[bool] exe_packetbeat: Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        :param pulumi.Input[bool] exe_phpcgi: Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        :param pulumi.Input[bool] exe_rep: Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        :param pulumi.Input[bool] exe_routeemitter: Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        :param pulumi.Input[bool] exe_routeregistrar: Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        :param pulumi.Input[bool] exe_routingapi: Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        :param pulumi.Input[bool] exe_schedular: Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        :param pulumi.Input[bool] exe_silkdaemon: Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        :param pulumi.Input[bool] exe_switchboard: Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        :param pulumi.Input[bool] exe_syslogdrainbinder: Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        :param pulumi.Input[bool] exe_tardis: Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        :param pulumi.Input[bool] exe_tmpbuildpacks: Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        :param pulumi.Input[bool] exe_tpswatcher: Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        :param pulumi.Input[bool] exe_trafficcontroller: Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        :param pulumi.Input[bool] exe_uipath: Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        :param pulumi.Input[bool] exe_userbinpiper: Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        :param pulumi.Input[bool] exe_w3wp: Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        :param pulumi.Input[bool] go_static: Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        :param pulumi.Input[str] host_group_id: The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        :param pulumi.Input[bool] jar_dtibmmqconnector: Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        :param pulumi.Input[bool] jar_eclipseequinox: Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        :param pulumi.Input[bool] k8s_cassandraoperator: Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        :param pulumi.Input[bool] k8s_containerpod: Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        :param pulumi.Input[bool] k8s_namespace: Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        :param pulumi.Input[bool] node_binpm2: Do not monitor processes if Node.js script equals 'bin/pm2'
        :param pulumi.Input[bool] node_corepack: Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        :param pulumi.Input[bool] node_grunt: Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        :param pulumi.Input[bool] node_gulpcli: Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        :param pulumi.Input[bool] node_nodegyp: Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        :param pulumi.Input[bool] node_nodepregyp: Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        :param pulumi.Input[bool] node_npm: Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        :param pulumi.Input[bool] node_prebuildinstall: Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        :param pulumi.Input[bool] node_typescript: Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        :param pulumi.Input[bool] node_yarn: Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        :param pulumi.Input[bool] php_script: (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        """
        if aspnetcore is not None:
            pulumi.set(__self__, "aspnetcore", aspnetcore)
        if aspnetcore_agentlistener is not None:
            pulumi.set(__self__, "aspnetcore_agentlistener", aspnetcore_agentlistener)
        if aspnetcore_agentworker is not None:
            pulumi.set(__self__, "aspnetcore_agentworker", aspnetcore_agentworker)
        if cf is not None:
            pulumi.set(__self__, "cf", cf)
        if cf_appsmanagerjs is not None:
            pulumi.set(__self__, "cf_appsmanagerjs", cf_appsmanagerjs)
        if container is not None:
            pulumi.set(__self__, "container", container)
        if docker_pauseamd64 is not None:
            pulumi.set(__self__, "docker_pauseamd64", docker_pauseamd64)
        if exe_adapter is not None:
            pulumi.set(__self__, "exe_adapter", exe_adapter)
        if exe_agentlistener is not None:
            pulumi.set(__self__, "exe_agentlistener", exe_agentlistener)
        if exe_agentworker is not None:
            pulumi.set(__self__, "exe_agentworker", exe_agentworker)
        if exe_auctioneer is not None:
            pulumi.set(__self__, "exe_auctioneer", exe_auctioneer)
        if exe_auditbeat is not None:
            pulumi.set(__self__, "exe_auditbeat", exe_auditbeat)
        if exe_bbs is not None:
            pulumi.set(__self__, "exe_bbs", exe_bbs)
        if exe_caddy is not None:
            pulumi.set(__self__, "exe_caddy", exe_caddy)
        if exe_caliconode is not None:
            pulumi.set(__self__, "exe_caliconode", exe_caliconode)
        if exe_casclient is not None:
            pulumi.set(__self__, "exe_casclient", exe_casclient)
        if exe_ccuploader is not None:
            pulumi.set(__self__, "exe_ccuploader", exe_ccuploader)
        if exe_doppler is not None:
            pulumi.set(__self__, "exe_doppler", exe_doppler)
        if exe_filebeat is not None:
            pulumi.set(__self__, "exe_filebeat", exe_filebeat)
        if exe_flexnetjobexecutorservice is not None:
            pulumi.set(__self__, "exe_flexnetjobexecutorservice", exe_flexnetjobexecutorservice)
        if exe_flexnetmaintenanceremotingservice is not None:
            pulumi.set(__self__, "exe_flexnetmaintenanceremotingservice", exe_flexnetmaintenanceremotingservice)
        if exe_functionbeat is not None:
            pulumi.set(__self__, "exe_functionbeat", exe_functionbeat)
        if exe_gorouter is not None:
            pulumi.set(__self__, "exe_gorouter", exe_gorouter)
        if exe_grootfs is not None:
            pulumi.set(__self__, "exe_grootfs", exe_grootfs)
        if exe_heartbeat is not None:
            pulumi.set(__self__, "exe_heartbeat", exe_heartbeat)
        if exe_influxd is not None:
            pulumi.set(__self__, "exe_influxd", exe_influxd)
        if exe_locket is not None:
            pulumi.set(__self__, "exe_locket", exe_locket)
        if exe_metricbeat is not None:
            pulumi.set(__self__, "exe_metricbeat", exe_metricbeat)
        if exe_metron is not None:
            pulumi.set(__self__, "exe_metron", exe_metron)
        if exe_mqsi is not None:
            pulumi.set(__self__, "exe_mqsi", exe_mqsi)
        if exe_oc is not None:
            pulumi.set(__self__, "exe_oc", exe_oc)
        if exe_openhandlecollector is not None:
            pulumi.set(__self__, "exe_openhandlecollector", exe_openhandlecollector)
        if exe_optcnibinhostlocal is not None:
            pulumi.set(__self__, "exe_optcnibinhostlocal", exe_optcnibinhostlocal)
        if exe_packetbeat is not None:
            pulumi.set(__self__, "exe_packetbeat", exe_packetbeat)
        if exe_phpcgi is not None:
            pulumi.set(__self__, "exe_phpcgi", exe_phpcgi)
        if exe_rep is not None:
            pulumi.set(__self__, "exe_rep", exe_rep)
        if exe_routeemitter is not None:
            pulumi.set(__self__, "exe_routeemitter", exe_routeemitter)
        if exe_routeregistrar is not None:
            pulumi.set(__self__, "exe_routeregistrar", exe_routeregistrar)
        if exe_routingapi is not None:
            pulumi.set(__self__, "exe_routingapi", exe_routingapi)
        if exe_schedular is not None:
            pulumi.set(__self__, "exe_schedular", exe_schedular)
        if exe_silkdaemon is not None:
            pulumi.set(__self__, "exe_silkdaemon", exe_silkdaemon)
        if exe_switchboard is not None:
            pulumi.set(__self__, "exe_switchboard", exe_switchboard)
        if exe_syslogdrainbinder is not None:
            pulumi.set(__self__, "exe_syslogdrainbinder", exe_syslogdrainbinder)
        if exe_tardis is not None:
            pulumi.set(__self__, "exe_tardis", exe_tardis)
        if exe_tmpbuildpacks is not None:
            pulumi.set(__self__, "exe_tmpbuildpacks", exe_tmpbuildpacks)
        if exe_tpswatcher is not None:
            pulumi.set(__self__, "exe_tpswatcher", exe_tpswatcher)
        if exe_trafficcontroller is not None:
            pulumi.set(__self__, "exe_trafficcontroller", exe_trafficcontroller)
        if exe_uipath is not None:
            pulumi.set(__self__, "exe_uipath", exe_uipath)
        if exe_userbinpiper is not None:
            pulumi.set(__self__, "exe_userbinpiper", exe_userbinpiper)
        if exe_w3wp is not None:
            pulumi.set(__self__, "exe_w3wp", exe_w3wp)
        if go_static is not None:
            pulumi.set(__self__, "go_static", go_static)
        if host_group_id is not None:
            pulumi.set(__self__, "host_group_id", host_group_id)
        if jar_dtibmmqconnector is not None:
            pulumi.set(__self__, "jar_dtibmmqconnector", jar_dtibmmqconnector)
        if jar_eclipseequinox is not None:
            pulumi.set(__self__, "jar_eclipseequinox", jar_eclipseequinox)
        if k8s_cassandraoperator is not None:
            pulumi.set(__self__, "k8s_cassandraoperator", k8s_cassandraoperator)
        if k8s_containerpod is not None:
            pulumi.set(__self__, "k8s_containerpod", k8s_containerpod)
        if k8s_namespace is not None:
            pulumi.set(__self__, "k8s_namespace", k8s_namespace)
        if node_binpm2 is not None:
            pulumi.set(__self__, "node_binpm2", node_binpm2)
        if node_corepack is not None:
            pulumi.set(__self__, "node_corepack", node_corepack)
        if node_grunt is not None:
            pulumi.set(__self__, "node_grunt", node_grunt)
        if node_gulpcli is not None:
            pulumi.set(__self__, "node_gulpcli", node_gulpcli)
        if node_nodegyp is not None:
            pulumi.set(__self__, "node_nodegyp", node_nodegyp)
        if node_nodepregyp is not None:
            pulumi.set(__self__, "node_nodepregyp", node_nodepregyp)
        if node_npm is not None:
            pulumi.set(__self__, "node_npm", node_npm)
        if node_prebuildinstall is not None:
            pulumi.set(__self__, "node_prebuildinstall", node_prebuildinstall)
        if node_typescript is not None:
            pulumi.set(__self__, "node_typescript", node_typescript)
        if node_yarn is not None:
            pulumi.set(__self__, "node_yarn", node_yarn)
        if php_script is not None:
            pulumi.set(__self__, "php_script", php_script)

    @property
    @pulumi.getter
    def aspnetcore(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        """
        return pulumi.get(self, "aspnetcore")

    @aspnetcore.setter
    def aspnetcore(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "aspnetcore", value)

    @property
    @pulumi.getter(name="aspnetcoreAgentlistener")
    def aspnetcore_agentlistener(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        """
        return pulumi.get(self, "aspnetcore_agentlistener")

    @aspnetcore_agentlistener.setter
    def aspnetcore_agentlistener(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "aspnetcore_agentlistener", value)

    @property
    @pulumi.getter(name="aspnetcoreAgentworker")
    def aspnetcore_agentworker(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        """
        return pulumi.get(self, "aspnetcore_agentworker")

    @aspnetcore_agentworker.setter
    def aspnetcore_agentworker(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "aspnetcore_agentworker", value)

    @property
    @pulumi.getter
    def cf(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        """
        return pulumi.get(self, "cf")

    @cf.setter
    def cf(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cf", value)

    @property
    @pulumi.getter(name="cfAppsmanagerjs")
    def cf_appsmanagerjs(self) -> Optional[pulumi.Input[bool]]:
        """
        Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        """
        return pulumi.get(self, "cf_appsmanagerjs")

    @cf_appsmanagerjs.setter
    def cf_appsmanagerjs(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "cf_appsmanagerjs", value)

    @property
    @pulumi.getter
    def container(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 41 - Do monitor processes if container name exists
        """
        return pulumi.get(self, "container")

    @container.setter
    def container(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "container", value)

    @property
    @pulumi.getter(name="dockerPauseamd64")
    def docker_pauseamd64(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        """
        return pulumi.get(self, "docker_pauseamd64")

    @docker_pauseamd64.setter
    def docker_pauseamd64(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "docker_pauseamd64", value)

    @property
    @pulumi.getter(name="exeAdapter")
    def exe_adapter(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        """
        return pulumi.get(self, "exe_adapter")

    @exe_adapter.setter
    def exe_adapter(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_adapter", value)

    @property
    @pulumi.getter(name="exeAgentlistener")
    def exe_agentlistener(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        """
        return pulumi.get(self, "exe_agentlistener")

    @exe_agentlistener.setter
    def exe_agentlistener(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_agentlistener", value)

    @property
    @pulumi.getter(name="exeAgentworker")
    def exe_agentworker(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        """
        return pulumi.get(self, "exe_agentworker")

    @exe_agentworker.setter
    def exe_agentworker(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_agentworker", value)

    @property
    @pulumi.getter(name="exeAuctioneer")
    def exe_auctioneer(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        """
        return pulumi.get(self, "exe_auctioneer")

    @exe_auctioneer.setter
    def exe_auctioneer(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_auctioneer", value)

    @property
    @pulumi.getter(name="exeAuditbeat")
    def exe_auditbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        """
        return pulumi.get(self, "exe_auditbeat")

    @exe_auditbeat.setter
    def exe_auditbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_auditbeat", value)

    @property
    @pulumi.getter(name="exeBbs")
    def exe_bbs(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        """
        return pulumi.get(self, "exe_bbs")

    @exe_bbs.setter
    def exe_bbs(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_bbs", value)

    @property
    @pulumi.getter(name="exeCaddy")
    def exe_caddy(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        """
        return pulumi.get(self, "exe_caddy")

    @exe_caddy.setter
    def exe_caddy(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_caddy", value)

    @property
    @pulumi.getter(name="exeCaliconode")
    def exe_caliconode(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        """
        return pulumi.get(self, "exe_caliconode")

    @exe_caliconode.setter
    def exe_caliconode(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_caliconode", value)

    @property
    @pulumi.getter(name="exeCasclient")
    def exe_casclient(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        """
        return pulumi.get(self, "exe_casclient")

    @exe_casclient.setter
    def exe_casclient(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_casclient", value)

    @property
    @pulumi.getter(name="exeCcuploader")
    def exe_ccuploader(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        """
        return pulumi.get(self, "exe_ccuploader")

    @exe_ccuploader.setter
    def exe_ccuploader(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_ccuploader", value)

    @property
    @pulumi.getter(name="exeDoppler")
    def exe_doppler(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        """
        return pulumi.get(self, "exe_doppler")

    @exe_doppler.setter
    def exe_doppler(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_doppler", value)

    @property
    @pulumi.getter(name="exeFilebeat")
    def exe_filebeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        """
        return pulumi.get(self, "exe_filebeat")

    @exe_filebeat.setter
    def exe_filebeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_filebeat", value)

    @property
    @pulumi.getter(name="exeFlexnetjobexecutorservice")
    def exe_flexnetjobexecutorservice(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        """
        return pulumi.get(self, "exe_flexnetjobexecutorservice")

    @exe_flexnetjobexecutorservice.setter
    def exe_flexnetjobexecutorservice(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_flexnetjobexecutorservice", value)

    @property
    @pulumi.getter(name="exeFlexnetmaintenanceremotingservice")
    def exe_flexnetmaintenanceremotingservice(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        """
        return pulumi.get(self, "exe_flexnetmaintenanceremotingservice")

    @exe_flexnetmaintenanceremotingservice.setter
    def exe_flexnetmaintenanceremotingservice(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_flexnetmaintenanceremotingservice", value)

    @property
    @pulumi.getter(name="exeFunctionbeat")
    def exe_functionbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        """
        return pulumi.get(self, "exe_functionbeat")

    @exe_functionbeat.setter
    def exe_functionbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_functionbeat", value)

    @property
    @pulumi.getter(name="exeGorouter")
    def exe_gorouter(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        """
        return pulumi.get(self, "exe_gorouter")

    @exe_gorouter.setter
    def exe_gorouter(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_gorouter", value)

    @property
    @pulumi.getter(name="exeGrootfs")
    def exe_grootfs(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        """
        return pulumi.get(self, "exe_grootfs")

    @exe_grootfs.setter
    def exe_grootfs(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_grootfs", value)

    @property
    @pulumi.getter(name="exeHeartbeat")
    def exe_heartbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        """
        return pulumi.get(self, "exe_heartbeat")

    @exe_heartbeat.setter
    def exe_heartbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_heartbeat", value)

    @property
    @pulumi.getter(name="exeInfluxd")
    def exe_influxd(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        """
        return pulumi.get(self, "exe_influxd")

    @exe_influxd.setter
    def exe_influxd(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_influxd", value)

    @property
    @pulumi.getter(name="exeLocket")
    def exe_locket(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        """
        return pulumi.get(self, "exe_locket")

    @exe_locket.setter
    def exe_locket(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_locket", value)

    @property
    @pulumi.getter(name="exeMetricbeat")
    def exe_metricbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        """
        return pulumi.get(self, "exe_metricbeat")

    @exe_metricbeat.setter
    def exe_metricbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_metricbeat", value)

    @property
    @pulumi.getter(name="exeMetron")
    def exe_metron(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        """
        return pulumi.get(self, "exe_metron")

    @exe_metron.setter
    def exe_metron(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_metron", value)

    @property
    @pulumi.getter(name="exeMqsi")
    def exe_mqsi(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        """
        return pulumi.get(self, "exe_mqsi")

    @exe_mqsi.setter
    def exe_mqsi(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_mqsi", value)

    @property
    @pulumi.getter(name="exeOc")
    def exe_oc(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        """
        return pulumi.get(self, "exe_oc")

    @exe_oc.setter
    def exe_oc(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_oc", value)

    @property
    @pulumi.getter(name="exeOpenhandlecollector")
    def exe_openhandlecollector(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        """
        return pulumi.get(self, "exe_openhandlecollector")

    @exe_openhandlecollector.setter
    def exe_openhandlecollector(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_openhandlecollector", value)

    @property
    @pulumi.getter(name="exeOptcnibinhostlocal")
    def exe_optcnibinhostlocal(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        """
        return pulumi.get(self, "exe_optcnibinhostlocal")

    @exe_optcnibinhostlocal.setter
    def exe_optcnibinhostlocal(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_optcnibinhostlocal", value)

    @property
    @pulumi.getter(name="exePacketbeat")
    def exe_packetbeat(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        """
        return pulumi.get(self, "exe_packetbeat")

    @exe_packetbeat.setter
    def exe_packetbeat(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_packetbeat", value)

    @property
    @pulumi.getter(name="exePhpcgi")
    def exe_phpcgi(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        """
        return pulumi.get(self, "exe_phpcgi")

    @exe_phpcgi.setter
    def exe_phpcgi(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_phpcgi", value)

    @property
    @pulumi.getter(name="exeRep")
    def exe_rep(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        """
        return pulumi.get(self, "exe_rep")

    @exe_rep.setter
    def exe_rep(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_rep", value)

    @property
    @pulumi.getter(name="exeRouteemitter")
    def exe_routeemitter(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        """
        return pulumi.get(self, "exe_routeemitter")

    @exe_routeemitter.setter
    def exe_routeemitter(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_routeemitter", value)

    @property
    @pulumi.getter(name="exeRouteregistrar")
    def exe_routeregistrar(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        """
        return pulumi.get(self, "exe_routeregistrar")

    @exe_routeregistrar.setter
    def exe_routeregistrar(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_routeregistrar", value)

    @property
    @pulumi.getter(name="exeRoutingapi")
    def exe_routingapi(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        """
        return pulumi.get(self, "exe_routingapi")

    @exe_routingapi.setter
    def exe_routingapi(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_routingapi", value)

    @property
    @pulumi.getter(name="exeSchedular")
    def exe_schedular(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        """
        return pulumi.get(self, "exe_schedular")

    @exe_schedular.setter
    def exe_schedular(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_schedular", value)

    @property
    @pulumi.getter(name="exeSilkdaemon")
    def exe_silkdaemon(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        """
        return pulumi.get(self, "exe_silkdaemon")

    @exe_silkdaemon.setter
    def exe_silkdaemon(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_silkdaemon", value)

    @property
    @pulumi.getter(name="exeSwitchboard")
    def exe_switchboard(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        """
        return pulumi.get(self, "exe_switchboard")

    @exe_switchboard.setter
    def exe_switchboard(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_switchboard", value)

    @property
    @pulumi.getter(name="exeSyslogdrainbinder")
    def exe_syslogdrainbinder(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        """
        return pulumi.get(self, "exe_syslogdrainbinder")

    @exe_syslogdrainbinder.setter
    def exe_syslogdrainbinder(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_syslogdrainbinder", value)

    @property
    @pulumi.getter(name="exeTardis")
    def exe_tardis(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        """
        return pulumi.get(self, "exe_tardis")

    @exe_tardis.setter
    def exe_tardis(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_tardis", value)

    @property
    @pulumi.getter(name="exeTmpbuildpacks")
    def exe_tmpbuildpacks(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        """
        return pulumi.get(self, "exe_tmpbuildpacks")

    @exe_tmpbuildpacks.setter
    def exe_tmpbuildpacks(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_tmpbuildpacks", value)

    @property
    @pulumi.getter(name="exeTpswatcher")
    def exe_tpswatcher(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        """
        return pulumi.get(self, "exe_tpswatcher")

    @exe_tpswatcher.setter
    def exe_tpswatcher(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_tpswatcher", value)

    @property
    @pulumi.getter(name="exeTrafficcontroller")
    def exe_trafficcontroller(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        """
        return pulumi.get(self, "exe_trafficcontroller")

    @exe_trafficcontroller.setter
    def exe_trafficcontroller(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_trafficcontroller", value)

    @property
    @pulumi.getter(name="exeUipath")
    def exe_uipath(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        """
        return pulumi.get(self, "exe_uipath")

    @exe_uipath.setter
    def exe_uipath(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_uipath", value)

    @property
    @pulumi.getter(name="exeUserbinpiper")
    def exe_userbinpiper(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        """
        return pulumi.get(self, "exe_userbinpiper")

    @exe_userbinpiper.setter
    def exe_userbinpiper(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_userbinpiper", value)

    @property
    @pulumi.getter(name="exeW3wp")
    def exe_w3wp(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        """
        return pulumi.get(self, "exe_w3wp")

    @exe_w3wp.setter
    def exe_w3wp(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exe_w3wp", value)

    @property
    @pulumi.getter(name="goStatic")
    def go_static(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        """
        return pulumi.get(self, "go_static")

    @go_static.setter
    def go_static(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "go_static", value)

    @property
    @pulumi.getter(name="hostGroupId")
    def host_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        """
        return pulumi.get(self, "host_group_id")

    @host_group_id.setter
    def host_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_group_id", value)

    @property
    @pulumi.getter(name="jarDtibmmqconnector")
    def jar_dtibmmqconnector(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        """
        return pulumi.get(self, "jar_dtibmmqconnector")

    @jar_dtibmmqconnector.setter
    def jar_dtibmmqconnector(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "jar_dtibmmqconnector", value)

    @property
    @pulumi.getter(name="jarEclipseequinox")
    def jar_eclipseequinox(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        """
        return pulumi.get(self, "jar_eclipseequinox")

    @jar_eclipseequinox.setter
    def jar_eclipseequinox(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "jar_eclipseequinox", value)

    @property
    @pulumi.getter(name="k8sCassandraoperator")
    def k8s_cassandraoperator(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        """
        return pulumi.get(self, "k8s_cassandraoperator")

    @k8s_cassandraoperator.setter
    def k8s_cassandraoperator(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "k8s_cassandraoperator", value)

    @property
    @pulumi.getter(name="k8sContainerpod")
    def k8s_containerpod(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        """
        return pulumi.get(self, "k8s_containerpod")

    @k8s_containerpod.setter
    def k8s_containerpod(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "k8s_containerpod", value)

    @property
    @pulumi.getter(name="k8sNamespace")
    def k8s_namespace(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        """
        return pulumi.get(self, "k8s_namespace")

    @k8s_namespace.setter
    def k8s_namespace(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "k8s_namespace", value)

    @property
    @pulumi.getter(name="nodeBinpm2")
    def node_binpm2(self) -> Optional[pulumi.Input[bool]]:
        """
        Do not monitor processes if Node.js script equals 'bin/pm2'
        """
        return pulumi.get(self, "node_binpm2")

    @node_binpm2.setter
    def node_binpm2(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_binpm2", value)

    @property
    @pulumi.getter(name="nodeCorepack")
    def node_corepack(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        """
        return pulumi.get(self, "node_corepack")

    @node_corepack.setter
    def node_corepack(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_corepack", value)

    @property
    @pulumi.getter(name="nodeGrunt")
    def node_grunt(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        """
        return pulumi.get(self, "node_grunt")

    @node_grunt.setter
    def node_grunt(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_grunt", value)

    @property
    @pulumi.getter(name="nodeGulpcli")
    def node_gulpcli(self) -> Optional[pulumi.Input[bool]]:
        """
        Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        """
        return pulumi.get(self, "node_gulpcli")

    @node_gulpcli.setter
    def node_gulpcli(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_gulpcli", value)

    @property
    @pulumi.getter(name="nodeNodegyp")
    def node_nodegyp(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        """
        return pulumi.get(self, "node_nodegyp")

    @node_nodegyp.setter
    def node_nodegyp(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_nodegyp", value)

    @property
    @pulumi.getter(name="nodeNodepregyp")
    def node_nodepregyp(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        """
        return pulumi.get(self, "node_nodepregyp")

    @node_nodepregyp.setter
    def node_nodepregyp(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_nodepregyp", value)

    @property
    @pulumi.getter(name="nodeNpm")
    def node_npm(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        """
        return pulumi.get(self, "node_npm")

    @node_npm.setter
    def node_npm(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_npm", value)

    @property
    @pulumi.getter(name="nodePrebuildinstall")
    def node_prebuildinstall(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        """
        return pulumi.get(self, "node_prebuildinstall")

    @node_prebuildinstall.setter
    def node_prebuildinstall(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_prebuildinstall", value)

    @property
    @pulumi.getter(name="nodeTypescript")
    def node_typescript(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        """
        return pulumi.get(self, "node_typescript")

    @node_typescript.setter
    def node_typescript(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_typescript", value)

    @property
    @pulumi.getter(name="nodeYarn")
    def node_yarn(self) -> Optional[pulumi.Input[bool]]:
        """
        Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        """
        return pulumi.get(self, "node_yarn")

    @node_yarn.setter
    def node_yarn(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "node_yarn", value)

    @property
    @pulumi.getter(name="phpScript")
    def php_script(self) -> Optional[pulumi.Input[bool]]:
        """
        (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        """
        return pulumi.get(self, "php_script")

    @php_script.setter
    def php_script(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "php_script", value)


class BuiltinProcessMonitoring(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 aspnetcore: Optional[pulumi.Input[bool]] = None,
                 aspnetcore_agentlistener: Optional[pulumi.Input[bool]] = None,
                 aspnetcore_agentworker: Optional[pulumi.Input[bool]] = None,
                 cf: Optional[pulumi.Input[bool]] = None,
                 cf_appsmanagerjs: Optional[pulumi.Input[bool]] = None,
                 container: Optional[pulumi.Input[bool]] = None,
                 docker_pauseamd64: Optional[pulumi.Input[bool]] = None,
                 exe_adapter: Optional[pulumi.Input[bool]] = None,
                 exe_agentlistener: Optional[pulumi.Input[bool]] = None,
                 exe_agentworker: Optional[pulumi.Input[bool]] = None,
                 exe_auctioneer: Optional[pulumi.Input[bool]] = None,
                 exe_auditbeat: Optional[pulumi.Input[bool]] = None,
                 exe_bbs: Optional[pulumi.Input[bool]] = None,
                 exe_caddy: Optional[pulumi.Input[bool]] = None,
                 exe_caliconode: Optional[pulumi.Input[bool]] = None,
                 exe_casclient: Optional[pulumi.Input[bool]] = None,
                 exe_ccuploader: Optional[pulumi.Input[bool]] = None,
                 exe_doppler: Optional[pulumi.Input[bool]] = None,
                 exe_filebeat: Optional[pulumi.Input[bool]] = None,
                 exe_flexnetjobexecutorservice: Optional[pulumi.Input[bool]] = None,
                 exe_flexnetmaintenanceremotingservice: Optional[pulumi.Input[bool]] = None,
                 exe_functionbeat: Optional[pulumi.Input[bool]] = None,
                 exe_gorouter: Optional[pulumi.Input[bool]] = None,
                 exe_grootfs: Optional[pulumi.Input[bool]] = None,
                 exe_heartbeat: Optional[pulumi.Input[bool]] = None,
                 exe_influxd: Optional[pulumi.Input[bool]] = None,
                 exe_locket: Optional[pulumi.Input[bool]] = None,
                 exe_metricbeat: Optional[pulumi.Input[bool]] = None,
                 exe_metron: Optional[pulumi.Input[bool]] = None,
                 exe_mqsi: Optional[pulumi.Input[bool]] = None,
                 exe_oc: Optional[pulumi.Input[bool]] = None,
                 exe_openhandlecollector: Optional[pulumi.Input[bool]] = None,
                 exe_optcnibinhostlocal: Optional[pulumi.Input[bool]] = None,
                 exe_packetbeat: Optional[pulumi.Input[bool]] = None,
                 exe_phpcgi: Optional[pulumi.Input[bool]] = None,
                 exe_rep: Optional[pulumi.Input[bool]] = None,
                 exe_routeemitter: Optional[pulumi.Input[bool]] = None,
                 exe_routeregistrar: Optional[pulumi.Input[bool]] = None,
                 exe_routingapi: Optional[pulumi.Input[bool]] = None,
                 exe_schedular: Optional[pulumi.Input[bool]] = None,
                 exe_silkdaemon: Optional[pulumi.Input[bool]] = None,
                 exe_switchboard: Optional[pulumi.Input[bool]] = None,
                 exe_syslogdrainbinder: Optional[pulumi.Input[bool]] = None,
                 exe_tardis: Optional[pulumi.Input[bool]] = None,
                 exe_tmpbuildpacks: Optional[pulumi.Input[bool]] = None,
                 exe_tpswatcher: Optional[pulumi.Input[bool]] = None,
                 exe_trafficcontroller: Optional[pulumi.Input[bool]] = None,
                 exe_uipath: Optional[pulumi.Input[bool]] = None,
                 exe_userbinpiper: Optional[pulumi.Input[bool]] = None,
                 exe_w3wp: Optional[pulumi.Input[bool]] = None,
                 go_static: Optional[pulumi.Input[bool]] = None,
                 host_group_id: Optional[pulumi.Input[str]] = None,
                 jar_dtibmmqconnector: Optional[pulumi.Input[bool]] = None,
                 jar_eclipseequinox: Optional[pulumi.Input[bool]] = None,
                 k8s_cassandraoperator: Optional[pulumi.Input[bool]] = None,
                 k8s_containerpod: Optional[pulumi.Input[bool]] = None,
                 k8s_namespace: Optional[pulumi.Input[bool]] = None,
                 node_binpm2: Optional[pulumi.Input[bool]] = None,
                 node_corepack: Optional[pulumi.Input[bool]] = None,
                 node_grunt: Optional[pulumi.Input[bool]] = None,
                 node_gulpcli: Optional[pulumi.Input[bool]] = None,
                 node_nodegyp: Optional[pulumi.Input[bool]] = None,
                 node_nodepregyp: Optional[pulumi.Input[bool]] = None,
                 node_npm: Optional[pulumi.Input[bool]] = None,
                 node_prebuildinstall: Optional[pulumi.Input[bool]] = None,
                 node_typescript: Optional[pulumi.Input[bool]] = None,
                 node_yarn: Optional[pulumi.Input[bool]] = None,
                 php_script: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        """
        Create a BuiltinProcessMonitoring resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] aspnetcore: Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        :param pulumi.Input[bool] aspnetcore_agentlistener: Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        :param pulumi.Input[bool] aspnetcore_agentworker: Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        :param pulumi.Input[bool] cf: Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        :param pulumi.Input[bool] cf_appsmanagerjs: Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        :param pulumi.Input[bool] container: Rule id: 41 - Do monitor processes if container name exists
        :param pulumi.Input[bool] docker_pauseamd64: Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        :param pulumi.Input[bool] exe_adapter: Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        :param pulumi.Input[bool] exe_agentlistener: Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        :param pulumi.Input[bool] exe_agentworker: Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        :param pulumi.Input[bool] exe_auctioneer: Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        :param pulumi.Input[bool] exe_auditbeat: Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        :param pulumi.Input[bool] exe_bbs: Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        :param pulumi.Input[bool] exe_caddy: Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        :param pulumi.Input[bool] exe_caliconode: Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        :param pulumi.Input[bool] exe_casclient: Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        :param pulumi.Input[bool] exe_ccuploader: Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        :param pulumi.Input[bool] exe_doppler: Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        :param pulumi.Input[bool] exe_filebeat: Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        :param pulumi.Input[bool] exe_flexnetjobexecutorservice: Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        :param pulumi.Input[bool] exe_flexnetmaintenanceremotingservice: Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        :param pulumi.Input[bool] exe_functionbeat: Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        :param pulumi.Input[bool] exe_gorouter: Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        :param pulumi.Input[bool] exe_grootfs: Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        :param pulumi.Input[bool] exe_heartbeat: Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        :param pulumi.Input[bool] exe_influxd: Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        :param pulumi.Input[bool] exe_locket: Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        :param pulumi.Input[bool] exe_metricbeat: Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        :param pulumi.Input[bool] exe_metron: Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        :param pulumi.Input[bool] exe_mqsi: Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        :param pulumi.Input[bool] exe_oc: Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        :param pulumi.Input[bool] exe_openhandlecollector: Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        :param pulumi.Input[bool] exe_optcnibinhostlocal: Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        :param pulumi.Input[bool] exe_packetbeat: Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        :param pulumi.Input[bool] exe_phpcgi: Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        :param pulumi.Input[bool] exe_rep: Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        :param pulumi.Input[bool] exe_routeemitter: Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        :param pulumi.Input[bool] exe_routeregistrar: Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        :param pulumi.Input[bool] exe_routingapi: Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        :param pulumi.Input[bool] exe_schedular: Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        :param pulumi.Input[bool] exe_silkdaemon: Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        :param pulumi.Input[bool] exe_switchboard: Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        :param pulumi.Input[bool] exe_syslogdrainbinder: Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        :param pulumi.Input[bool] exe_tardis: Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        :param pulumi.Input[bool] exe_tmpbuildpacks: Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        :param pulumi.Input[bool] exe_tpswatcher: Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        :param pulumi.Input[bool] exe_trafficcontroller: Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        :param pulumi.Input[bool] exe_uipath: Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        :param pulumi.Input[bool] exe_userbinpiper: Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        :param pulumi.Input[bool] exe_w3wp: Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        :param pulumi.Input[bool] go_static: Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        :param pulumi.Input[str] host_group_id: The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        :param pulumi.Input[bool] jar_dtibmmqconnector: Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        :param pulumi.Input[bool] jar_eclipseequinox: Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        :param pulumi.Input[bool] k8s_cassandraoperator: Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        :param pulumi.Input[bool] k8s_containerpod: Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        :param pulumi.Input[bool] k8s_namespace: Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        :param pulumi.Input[bool] node_binpm2: Do not monitor processes if Node.js script equals 'bin/pm2'
        :param pulumi.Input[bool] node_corepack: Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        :param pulumi.Input[bool] node_grunt: Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        :param pulumi.Input[bool] node_gulpcli: Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        :param pulumi.Input[bool] node_nodegyp: Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        :param pulumi.Input[bool] node_nodepregyp: Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        :param pulumi.Input[bool] node_npm: Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        :param pulumi.Input[bool] node_prebuildinstall: Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        :param pulumi.Input[bool] node_typescript: Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        :param pulumi.Input[bool] node_yarn: Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        :param pulumi.Input[bool] php_script: (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[BuiltinProcessMonitoringArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a BuiltinProcessMonitoring resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param BuiltinProcessMonitoringArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BuiltinProcessMonitoringArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 aspnetcore: Optional[pulumi.Input[bool]] = None,
                 aspnetcore_agentlistener: Optional[pulumi.Input[bool]] = None,
                 aspnetcore_agentworker: Optional[pulumi.Input[bool]] = None,
                 cf: Optional[pulumi.Input[bool]] = None,
                 cf_appsmanagerjs: Optional[pulumi.Input[bool]] = None,
                 container: Optional[pulumi.Input[bool]] = None,
                 docker_pauseamd64: Optional[pulumi.Input[bool]] = None,
                 exe_adapter: Optional[pulumi.Input[bool]] = None,
                 exe_agentlistener: Optional[pulumi.Input[bool]] = None,
                 exe_agentworker: Optional[pulumi.Input[bool]] = None,
                 exe_auctioneer: Optional[pulumi.Input[bool]] = None,
                 exe_auditbeat: Optional[pulumi.Input[bool]] = None,
                 exe_bbs: Optional[pulumi.Input[bool]] = None,
                 exe_caddy: Optional[pulumi.Input[bool]] = None,
                 exe_caliconode: Optional[pulumi.Input[bool]] = None,
                 exe_casclient: Optional[pulumi.Input[bool]] = None,
                 exe_ccuploader: Optional[pulumi.Input[bool]] = None,
                 exe_doppler: Optional[pulumi.Input[bool]] = None,
                 exe_filebeat: Optional[pulumi.Input[bool]] = None,
                 exe_flexnetjobexecutorservice: Optional[pulumi.Input[bool]] = None,
                 exe_flexnetmaintenanceremotingservice: Optional[pulumi.Input[bool]] = None,
                 exe_functionbeat: Optional[pulumi.Input[bool]] = None,
                 exe_gorouter: Optional[pulumi.Input[bool]] = None,
                 exe_grootfs: Optional[pulumi.Input[bool]] = None,
                 exe_heartbeat: Optional[pulumi.Input[bool]] = None,
                 exe_influxd: Optional[pulumi.Input[bool]] = None,
                 exe_locket: Optional[pulumi.Input[bool]] = None,
                 exe_metricbeat: Optional[pulumi.Input[bool]] = None,
                 exe_metron: Optional[pulumi.Input[bool]] = None,
                 exe_mqsi: Optional[pulumi.Input[bool]] = None,
                 exe_oc: Optional[pulumi.Input[bool]] = None,
                 exe_openhandlecollector: Optional[pulumi.Input[bool]] = None,
                 exe_optcnibinhostlocal: Optional[pulumi.Input[bool]] = None,
                 exe_packetbeat: Optional[pulumi.Input[bool]] = None,
                 exe_phpcgi: Optional[pulumi.Input[bool]] = None,
                 exe_rep: Optional[pulumi.Input[bool]] = None,
                 exe_routeemitter: Optional[pulumi.Input[bool]] = None,
                 exe_routeregistrar: Optional[pulumi.Input[bool]] = None,
                 exe_routingapi: Optional[pulumi.Input[bool]] = None,
                 exe_schedular: Optional[pulumi.Input[bool]] = None,
                 exe_silkdaemon: Optional[pulumi.Input[bool]] = None,
                 exe_switchboard: Optional[pulumi.Input[bool]] = None,
                 exe_syslogdrainbinder: Optional[pulumi.Input[bool]] = None,
                 exe_tardis: Optional[pulumi.Input[bool]] = None,
                 exe_tmpbuildpacks: Optional[pulumi.Input[bool]] = None,
                 exe_tpswatcher: Optional[pulumi.Input[bool]] = None,
                 exe_trafficcontroller: Optional[pulumi.Input[bool]] = None,
                 exe_uipath: Optional[pulumi.Input[bool]] = None,
                 exe_userbinpiper: Optional[pulumi.Input[bool]] = None,
                 exe_w3wp: Optional[pulumi.Input[bool]] = None,
                 go_static: Optional[pulumi.Input[bool]] = None,
                 host_group_id: Optional[pulumi.Input[str]] = None,
                 jar_dtibmmqconnector: Optional[pulumi.Input[bool]] = None,
                 jar_eclipseequinox: Optional[pulumi.Input[bool]] = None,
                 k8s_cassandraoperator: Optional[pulumi.Input[bool]] = None,
                 k8s_containerpod: Optional[pulumi.Input[bool]] = None,
                 k8s_namespace: Optional[pulumi.Input[bool]] = None,
                 node_binpm2: Optional[pulumi.Input[bool]] = None,
                 node_corepack: Optional[pulumi.Input[bool]] = None,
                 node_grunt: Optional[pulumi.Input[bool]] = None,
                 node_gulpcli: Optional[pulumi.Input[bool]] = None,
                 node_nodegyp: Optional[pulumi.Input[bool]] = None,
                 node_nodepregyp: Optional[pulumi.Input[bool]] = None,
                 node_npm: Optional[pulumi.Input[bool]] = None,
                 node_prebuildinstall: Optional[pulumi.Input[bool]] = None,
                 node_typescript: Optional[pulumi.Input[bool]] = None,
                 node_yarn: Optional[pulumi.Input[bool]] = None,
                 php_script: Optional[pulumi.Input[bool]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BuiltinProcessMonitoringArgs.__new__(BuiltinProcessMonitoringArgs)

            __props__.__dict__["aspnetcore"] = aspnetcore
            __props__.__dict__["aspnetcore_agentlistener"] = aspnetcore_agentlistener
            __props__.__dict__["aspnetcore_agentworker"] = aspnetcore_agentworker
            __props__.__dict__["cf"] = cf
            __props__.__dict__["cf_appsmanagerjs"] = cf_appsmanagerjs
            __props__.__dict__["container"] = container
            __props__.__dict__["docker_pauseamd64"] = docker_pauseamd64
            __props__.__dict__["exe_adapter"] = exe_adapter
            __props__.__dict__["exe_agentlistener"] = exe_agentlistener
            __props__.__dict__["exe_agentworker"] = exe_agentworker
            __props__.__dict__["exe_auctioneer"] = exe_auctioneer
            __props__.__dict__["exe_auditbeat"] = exe_auditbeat
            __props__.__dict__["exe_bbs"] = exe_bbs
            __props__.__dict__["exe_caddy"] = exe_caddy
            __props__.__dict__["exe_caliconode"] = exe_caliconode
            __props__.__dict__["exe_casclient"] = exe_casclient
            __props__.__dict__["exe_ccuploader"] = exe_ccuploader
            __props__.__dict__["exe_doppler"] = exe_doppler
            __props__.__dict__["exe_filebeat"] = exe_filebeat
            __props__.__dict__["exe_flexnetjobexecutorservice"] = exe_flexnetjobexecutorservice
            __props__.__dict__["exe_flexnetmaintenanceremotingservice"] = exe_flexnetmaintenanceremotingservice
            __props__.__dict__["exe_functionbeat"] = exe_functionbeat
            __props__.__dict__["exe_gorouter"] = exe_gorouter
            __props__.__dict__["exe_grootfs"] = exe_grootfs
            __props__.__dict__["exe_heartbeat"] = exe_heartbeat
            __props__.__dict__["exe_influxd"] = exe_influxd
            __props__.__dict__["exe_locket"] = exe_locket
            __props__.__dict__["exe_metricbeat"] = exe_metricbeat
            __props__.__dict__["exe_metron"] = exe_metron
            __props__.__dict__["exe_mqsi"] = exe_mqsi
            __props__.__dict__["exe_oc"] = exe_oc
            __props__.__dict__["exe_openhandlecollector"] = exe_openhandlecollector
            __props__.__dict__["exe_optcnibinhostlocal"] = exe_optcnibinhostlocal
            __props__.__dict__["exe_packetbeat"] = exe_packetbeat
            __props__.__dict__["exe_phpcgi"] = exe_phpcgi
            __props__.__dict__["exe_rep"] = exe_rep
            __props__.__dict__["exe_routeemitter"] = exe_routeemitter
            __props__.__dict__["exe_routeregistrar"] = exe_routeregistrar
            __props__.__dict__["exe_routingapi"] = exe_routingapi
            __props__.__dict__["exe_schedular"] = exe_schedular
            __props__.__dict__["exe_silkdaemon"] = exe_silkdaemon
            __props__.__dict__["exe_switchboard"] = exe_switchboard
            __props__.__dict__["exe_syslogdrainbinder"] = exe_syslogdrainbinder
            __props__.__dict__["exe_tardis"] = exe_tardis
            __props__.__dict__["exe_tmpbuildpacks"] = exe_tmpbuildpacks
            __props__.__dict__["exe_tpswatcher"] = exe_tpswatcher
            __props__.__dict__["exe_trafficcontroller"] = exe_trafficcontroller
            __props__.__dict__["exe_uipath"] = exe_uipath
            __props__.__dict__["exe_userbinpiper"] = exe_userbinpiper
            __props__.__dict__["exe_w3wp"] = exe_w3wp
            __props__.__dict__["go_static"] = go_static
            __props__.__dict__["host_group_id"] = host_group_id
            __props__.__dict__["jar_dtibmmqconnector"] = jar_dtibmmqconnector
            __props__.__dict__["jar_eclipseequinox"] = jar_eclipseequinox
            __props__.__dict__["k8s_cassandraoperator"] = k8s_cassandraoperator
            __props__.__dict__["k8s_containerpod"] = k8s_containerpod
            __props__.__dict__["k8s_namespace"] = k8s_namespace
            __props__.__dict__["node_binpm2"] = node_binpm2
            __props__.__dict__["node_corepack"] = node_corepack
            __props__.__dict__["node_grunt"] = node_grunt
            __props__.__dict__["node_gulpcli"] = node_gulpcli
            __props__.__dict__["node_nodegyp"] = node_nodegyp
            __props__.__dict__["node_nodepregyp"] = node_nodepregyp
            __props__.__dict__["node_npm"] = node_npm
            __props__.__dict__["node_prebuildinstall"] = node_prebuildinstall
            __props__.__dict__["node_typescript"] = node_typescript
            __props__.__dict__["node_yarn"] = node_yarn
            __props__.__dict__["php_script"] = php_script
        super(BuiltinProcessMonitoring, __self__).__init__(
            'dynatrace:index/builtinProcessMonitoring:BuiltinProcessMonitoring',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            aspnetcore: Optional[pulumi.Input[bool]] = None,
            aspnetcore_agentlistener: Optional[pulumi.Input[bool]] = None,
            aspnetcore_agentworker: Optional[pulumi.Input[bool]] = None,
            cf: Optional[pulumi.Input[bool]] = None,
            cf_appsmanagerjs: Optional[pulumi.Input[bool]] = None,
            container: Optional[pulumi.Input[bool]] = None,
            docker_pauseamd64: Optional[pulumi.Input[bool]] = None,
            exe_adapter: Optional[pulumi.Input[bool]] = None,
            exe_agentlistener: Optional[pulumi.Input[bool]] = None,
            exe_agentworker: Optional[pulumi.Input[bool]] = None,
            exe_auctioneer: Optional[pulumi.Input[bool]] = None,
            exe_auditbeat: Optional[pulumi.Input[bool]] = None,
            exe_bbs: Optional[pulumi.Input[bool]] = None,
            exe_caddy: Optional[pulumi.Input[bool]] = None,
            exe_caliconode: Optional[pulumi.Input[bool]] = None,
            exe_casclient: Optional[pulumi.Input[bool]] = None,
            exe_ccuploader: Optional[pulumi.Input[bool]] = None,
            exe_doppler: Optional[pulumi.Input[bool]] = None,
            exe_filebeat: Optional[pulumi.Input[bool]] = None,
            exe_flexnetjobexecutorservice: Optional[pulumi.Input[bool]] = None,
            exe_flexnetmaintenanceremotingservice: Optional[pulumi.Input[bool]] = None,
            exe_functionbeat: Optional[pulumi.Input[bool]] = None,
            exe_gorouter: Optional[pulumi.Input[bool]] = None,
            exe_grootfs: Optional[pulumi.Input[bool]] = None,
            exe_heartbeat: Optional[pulumi.Input[bool]] = None,
            exe_influxd: Optional[pulumi.Input[bool]] = None,
            exe_locket: Optional[pulumi.Input[bool]] = None,
            exe_metricbeat: Optional[pulumi.Input[bool]] = None,
            exe_metron: Optional[pulumi.Input[bool]] = None,
            exe_mqsi: Optional[pulumi.Input[bool]] = None,
            exe_oc: Optional[pulumi.Input[bool]] = None,
            exe_openhandlecollector: Optional[pulumi.Input[bool]] = None,
            exe_optcnibinhostlocal: Optional[pulumi.Input[bool]] = None,
            exe_packetbeat: Optional[pulumi.Input[bool]] = None,
            exe_phpcgi: Optional[pulumi.Input[bool]] = None,
            exe_rep: Optional[pulumi.Input[bool]] = None,
            exe_routeemitter: Optional[pulumi.Input[bool]] = None,
            exe_routeregistrar: Optional[pulumi.Input[bool]] = None,
            exe_routingapi: Optional[pulumi.Input[bool]] = None,
            exe_schedular: Optional[pulumi.Input[bool]] = None,
            exe_silkdaemon: Optional[pulumi.Input[bool]] = None,
            exe_switchboard: Optional[pulumi.Input[bool]] = None,
            exe_syslogdrainbinder: Optional[pulumi.Input[bool]] = None,
            exe_tardis: Optional[pulumi.Input[bool]] = None,
            exe_tmpbuildpacks: Optional[pulumi.Input[bool]] = None,
            exe_tpswatcher: Optional[pulumi.Input[bool]] = None,
            exe_trafficcontroller: Optional[pulumi.Input[bool]] = None,
            exe_uipath: Optional[pulumi.Input[bool]] = None,
            exe_userbinpiper: Optional[pulumi.Input[bool]] = None,
            exe_w3wp: Optional[pulumi.Input[bool]] = None,
            go_static: Optional[pulumi.Input[bool]] = None,
            host_group_id: Optional[pulumi.Input[str]] = None,
            jar_dtibmmqconnector: Optional[pulumi.Input[bool]] = None,
            jar_eclipseequinox: Optional[pulumi.Input[bool]] = None,
            k8s_cassandraoperator: Optional[pulumi.Input[bool]] = None,
            k8s_containerpod: Optional[pulumi.Input[bool]] = None,
            k8s_namespace: Optional[pulumi.Input[bool]] = None,
            node_binpm2: Optional[pulumi.Input[bool]] = None,
            node_corepack: Optional[pulumi.Input[bool]] = None,
            node_grunt: Optional[pulumi.Input[bool]] = None,
            node_gulpcli: Optional[pulumi.Input[bool]] = None,
            node_nodegyp: Optional[pulumi.Input[bool]] = None,
            node_nodepregyp: Optional[pulumi.Input[bool]] = None,
            node_npm: Optional[pulumi.Input[bool]] = None,
            node_prebuildinstall: Optional[pulumi.Input[bool]] = None,
            node_typescript: Optional[pulumi.Input[bool]] = None,
            node_yarn: Optional[pulumi.Input[bool]] = None,
            php_script: Optional[pulumi.Input[bool]] = None) -> 'BuiltinProcessMonitoring':
        """
        Get an existing BuiltinProcessMonitoring resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] aspnetcore: Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        :param pulumi.Input[bool] aspnetcore_agentlistener: Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        :param pulumi.Input[bool] aspnetcore_agentworker: Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        :param pulumi.Input[bool] cf: Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        :param pulumi.Input[bool] cf_appsmanagerjs: Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        :param pulumi.Input[bool] container: Rule id: 41 - Do monitor processes if container name exists
        :param pulumi.Input[bool] docker_pauseamd64: Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        :param pulumi.Input[bool] exe_adapter: Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        :param pulumi.Input[bool] exe_agentlistener: Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        :param pulumi.Input[bool] exe_agentworker: Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        :param pulumi.Input[bool] exe_auctioneer: Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        :param pulumi.Input[bool] exe_auditbeat: Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        :param pulumi.Input[bool] exe_bbs: Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        :param pulumi.Input[bool] exe_caddy: Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        :param pulumi.Input[bool] exe_caliconode: Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        :param pulumi.Input[bool] exe_casclient: Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        :param pulumi.Input[bool] exe_ccuploader: Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        :param pulumi.Input[bool] exe_doppler: Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        :param pulumi.Input[bool] exe_filebeat: Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        :param pulumi.Input[bool] exe_flexnetjobexecutorservice: Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        :param pulumi.Input[bool] exe_flexnetmaintenanceremotingservice: Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        :param pulumi.Input[bool] exe_functionbeat: Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        :param pulumi.Input[bool] exe_gorouter: Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        :param pulumi.Input[bool] exe_grootfs: Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        :param pulumi.Input[bool] exe_heartbeat: Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        :param pulumi.Input[bool] exe_influxd: Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        :param pulumi.Input[bool] exe_locket: Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        :param pulumi.Input[bool] exe_metricbeat: Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        :param pulumi.Input[bool] exe_metron: Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        :param pulumi.Input[bool] exe_mqsi: Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        :param pulumi.Input[bool] exe_oc: Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        :param pulumi.Input[bool] exe_openhandlecollector: Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        :param pulumi.Input[bool] exe_optcnibinhostlocal: Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        :param pulumi.Input[bool] exe_packetbeat: Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        :param pulumi.Input[bool] exe_phpcgi: Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        :param pulumi.Input[bool] exe_rep: Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        :param pulumi.Input[bool] exe_routeemitter: Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        :param pulumi.Input[bool] exe_routeregistrar: Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        :param pulumi.Input[bool] exe_routingapi: Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        :param pulumi.Input[bool] exe_schedular: Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        :param pulumi.Input[bool] exe_silkdaemon: Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        :param pulumi.Input[bool] exe_switchboard: Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        :param pulumi.Input[bool] exe_syslogdrainbinder: Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        :param pulumi.Input[bool] exe_tardis: Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        :param pulumi.Input[bool] exe_tmpbuildpacks: Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        :param pulumi.Input[bool] exe_tpswatcher: Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        :param pulumi.Input[bool] exe_trafficcontroller: Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        :param pulumi.Input[bool] exe_uipath: Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        :param pulumi.Input[bool] exe_userbinpiper: Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        :param pulumi.Input[bool] exe_w3wp: Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        :param pulumi.Input[bool] go_static: Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        :param pulumi.Input[str] host_group_id: The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        :param pulumi.Input[bool] jar_dtibmmqconnector: Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        :param pulumi.Input[bool] jar_eclipseequinox: Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        :param pulumi.Input[bool] k8s_cassandraoperator: Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        :param pulumi.Input[bool] k8s_containerpod: Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        :param pulumi.Input[bool] k8s_namespace: Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        :param pulumi.Input[bool] node_binpm2: Do not monitor processes if Node.js script equals 'bin/pm2'
        :param pulumi.Input[bool] node_corepack: Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        :param pulumi.Input[bool] node_grunt: Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        :param pulumi.Input[bool] node_gulpcli: Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        :param pulumi.Input[bool] node_nodegyp: Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        :param pulumi.Input[bool] node_nodepregyp: Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        :param pulumi.Input[bool] node_npm: Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        :param pulumi.Input[bool] node_prebuildinstall: Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        :param pulumi.Input[bool] node_typescript: Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        :param pulumi.Input[bool] node_yarn: Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        :param pulumi.Input[bool] php_script: (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BuiltinProcessMonitoringState.__new__(_BuiltinProcessMonitoringState)

        __props__.__dict__["aspnetcore"] = aspnetcore
        __props__.__dict__["aspnetcore_agentlistener"] = aspnetcore_agentlistener
        __props__.__dict__["aspnetcore_agentworker"] = aspnetcore_agentworker
        __props__.__dict__["cf"] = cf
        __props__.__dict__["cf_appsmanagerjs"] = cf_appsmanagerjs
        __props__.__dict__["container"] = container
        __props__.__dict__["docker_pauseamd64"] = docker_pauseamd64
        __props__.__dict__["exe_adapter"] = exe_adapter
        __props__.__dict__["exe_agentlistener"] = exe_agentlistener
        __props__.__dict__["exe_agentworker"] = exe_agentworker
        __props__.__dict__["exe_auctioneer"] = exe_auctioneer
        __props__.__dict__["exe_auditbeat"] = exe_auditbeat
        __props__.__dict__["exe_bbs"] = exe_bbs
        __props__.__dict__["exe_caddy"] = exe_caddy
        __props__.__dict__["exe_caliconode"] = exe_caliconode
        __props__.__dict__["exe_casclient"] = exe_casclient
        __props__.__dict__["exe_ccuploader"] = exe_ccuploader
        __props__.__dict__["exe_doppler"] = exe_doppler
        __props__.__dict__["exe_filebeat"] = exe_filebeat
        __props__.__dict__["exe_flexnetjobexecutorservice"] = exe_flexnetjobexecutorservice
        __props__.__dict__["exe_flexnetmaintenanceremotingservice"] = exe_flexnetmaintenanceremotingservice
        __props__.__dict__["exe_functionbeat"] = exe_functionbeat
        __props__.__dict__["exe_gorouter"] = exe_gorouter
        __props__.__dict__["exe_grootfs"] = exe_grootfs
        __props__.__dict__["exe_heartbeat"] = exe_heartbeat
        __props__.__dict__["exe_influxd"] = exe_influxd
        __props__.__dict__["exe_locket"] = exe_locket
        __props__.__dict__["exe_metricbeat"] = exe_metricbeat
        __props__.__dict__["exe_metron"] = exe_metron
        __props__.__dict__["exe_mqsi"] = exe_mqsi
        __props__.__dict__["exe_oc"] = exe_oc
        __props__.__dict__["exe_openhandlecollector"] = exe_openhandlecollector
        __props__.__dict__["exe_optcnibinhostlocal"] = exe_optcnibinhostlocal
        __props__.__dict__["exe_packetbeat"] = exe_packetbeat
        __props__.__dict__["exe_phpcgi"] = exe_phpcgi
        __props__.__dict__["exe_rep"] = exe_rep
        __props__.__dict__["exe_routeemitter"] = exe_routeemitter
        __props__.__dict__["exe_routeregistrar"] = exe_routeregistrar
        __props__.__dict__["exe_routingapi"] = exe_routingapi
        __props__.__dict__["exe_schedular"] = exe_schedular
        __props__.__dict__["exe_silkdaemon"] = exe_silkdaemon
        __props__.__dict__["exe_switchboard"] = exe_switchboard
        __props__.__dict__["exe_syslogdrainbinder"] = exe_syslogdrainbinder
        __props__.__dict__["exe_tardis"] = exe_tardis
        __props__.__dict__["exe_tmpbuildpacks"] = exe_tmpbuildpacks
        __props__.__dict__["exe_tpswatcher"] = exe_tpswatcher
        __props__.__dict__["exe_trafficcontroller"] = exe_trafficcontroller
        __props__.__dict__["exe_uipath"] = exe_uipath
        __props__.__dict__["exe_userbinpiper"] = exe_userbinpiper
        __props__.__dict__["exe_w3wp"] = exe_w3wp
        __props__.__dict__["go_static"] = go_static
        __props__.__dict__["host_group_id"] = host_group_id
        __props__.__dict__["jar_dtibmmqconnector"] = jar_dtibmmqconnector
        __props__.__dict__["jar_eclipseequinox"] = jar_eclipseequinox
        __props__.__dict__["k8s_cassandraoperator"] = k8s_cassandraoperator
        __props__.__dict__["k8s_containerpod"] = k8s_containerpod
        __props__.__dict__["k8s_namespace"] = k8s_namespace
        __props__.__dict__["node_binpm2"] = node_binpm2
        __props__.__dict__["node_corepack"] = node_corepack
        __props__.__dict__["node_grunt"] = node_grunt
        __props__.__dict__["node_gulpcli"] = node_gulpcli
        __props__.__dict__["node_nodegyp"] = node_nodegyp
        __props__.__dict__["node_nodepregyp"] = node_nodepregyp
        __props__.__dict__["node_npm"] = node_npm
        __props__.__dict__["node_prebuildinstall"] = node_prebuildinstall
        __props__.__dict__["node_typescript"] = node_typescript
        __props__.__dict__["node_yarn"] = node_yarn
        __props__.__dict__["php_script"] = php_script
        return BuiltinProcessMonitoring(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def aspnetcore(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
        """
        return pulumi.get(self, "aspnetcore")

    @property
    @pulumi.getter(name="aspnetcoreAgentlistener")
    def aspnetcore_agentlistener(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
        """
        return pulumi.get(self, "aspnetcore_agentlistener")

    @property
    @pulumi.getter(name="aspnetcoreAgentworker")
    def aspnetcore_agentworker(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
        """
        return pulumi.get(self, "aspnetcore_agentworker")

    @property
    @pulumi.getter
    def cf(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 37 - Do monitor processes if Cloud Foundry application exists
        """
        return pulumi.get(self, "cf")

    @property
    @pulumi.getter(name="cfAppsmanagerjs")
    def cf_appsmanagerjs(self) -> pulumi.Output[Optional[bool]]:
        """
        Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
        """
        return pulumi.get(self, "cf_appsmanagerjs")

    @property
    @pulumi.getter
    def container(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 41 - Do monitor processes if container name exists
        """
        return pulumi.get(self, "container")

    @property
    @pulumi.getter(name="dockerPauseamd64")
    def docker_pauseamd64(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
        """
        return pulumi.get(self, "docker_pauseamd64")

    @property
    @pulumi.getter(name="exeAdapter")
    def exe_adapter(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
        """
        return pulumi.get(self, "exe_adapter")

    @property
    @pulumi.getter(name="exeAgentlistener")
    def exe_agentlistener(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
        """
        return pulumi.get(self, "exe_agentlistener")

    @property
    @pulumi.getter(name="exeAgentworker")
    def exe_agentworker(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
        """
        return pulumi.get(self, "exe_agentworker")

    @property
    @pulumi.getter(name="exeAuctioneer")
    def exe_auctioneer(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
        """
        return pulumi.get(self, "exe_auctioneer")

    @property
    @pulumi.getter(name="exeAuditbeat")
    def exe_auditbeat(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
        """
        return pulumi.get(self, "exe_auditbeat")

    @property
    @pulumi.getter(name="exeBbs")
    def exe_bbs(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
        """
        return pulumi.get(self, "exe_bbs")

    @property
    @pulumi.getter(name="exeCaddy")
    def exe_caddy(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
        """
        return pulumi.get(self, "exe_caddy")

    @property
    @pulumi.getter(name="exeCaliconode")
    def exe_caliconode(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
        """
        return pulumi.get(self, "exe_caliconode")

    @property
    @pulumi.getter(name="exeCasclient")
    def exe_casclient(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
        """
        return pulumi.get(self, "exe_casclient")

    @property
    @pulumi.getter(name="exeCcuploader")
    def exe_ccuploader(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
        """
        return pulumi.get(self, "exe_ccuploader")

    @property
    @pulumi.getter(name="exeDoppler")
    def exe_doppler(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
        """
        return pulumi.get(self, "exe_doppler")

    @property
    @pulumi.getter(name="exeFilebeat")
    def exe_filebeat(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
        """
        return pulumi.get(self, "exe_filebeat")

    @property
    @pulumi.getter(name="exeFlexnetjobexecutorservice")
    def exe_flexnetjobexecutorservice(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
        """
        return pulumi.get(self, "exe_flexnetjobexecutorservice")

    @property
    @pulumi.getter(name="exeFlexnetmaintenanceremotingservice")
    def exe_flexnetmaintenanceremotingservice(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
        """
        return pulumi.get(self, "exe_flexnetmaintenanceremotingservice")

    @property
    @pulumi.getter(name="exeFunctionbeat")
    def exe_functionbeat(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
        """
        return pulumi.get(self, "exe_functionbeat")

    @property
    @pulumi.getter(name="exeGorouter")
    def exe_gorouter(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
        """
        return pulumi.get(self, "exe_gorouter")

    @property
    @pulumi.getter(name="exeGrootfs")
    def exe_grootfs(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
        """
        return pulumi.get(self, "exe_grootfs")

    @property
    @pulumi.getter(name="exeHeartbeat")
    def exe_heartbeat(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
        """
        return pulumi.get(self, "exe_heartbeat")

    @property
    @pulumi.getter(name="exeInfluxd")
    def exe_influxd(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
        """
        return pulumi.get(self, "exe_influxd")

    @property
    @pulumi.getter(name="exeLocket")
    def exe_locket(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 13 - Do monitor processes if EXE name equals 'locket'
        """
        return pulumi.get(self, "exe_locket")

    @property
    @pulumi.getter(name="exeMetricbeat")
    def exe_metricbeat(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
        """
        return pulumi.get(self, "exe_metricbeat")

    @property
    @pulumi.getter(name="exeMetron")
    def exe_metron(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 14 - Do monitor processes if EXE name equals 'metron'
        """
        return pulumi.get(self, "exe_metron")

    @property
    @pulumi.getter(name="exeMqsi")
    def exe_mqsi(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
        """
        return pulumi.get(self, "exe_mqsi")

    @property
    @pulumi.getter(name="exeOc")
    def exe_oc(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
        """
        return pulumi.get(self, "exe_oc")

    @property
    @pulumi.getter(name="exeOpenhandlecollector")
    def exe_openhandlecollector(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
        """
        return pulumi.get(self, "exe_openhandlecollector")

    @property
    @pulumi.getter(name="exeOptcnibinhostlocal")
    def exe_optcnibinhostlocal(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
        """
        return pulumi.get(self, "exe_optcnibinhostlocal")

    @property
    @pulumi.getter(name="exePacketbeat")
    def exe_packetbeat(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
        """
        return pulumi.get(self, "exe_packetbeat")

    @property
    @pulumi.getter(name="exePhpcgi")
    def exe_phpcgi(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
        """
        return pulumi.get(self, "exe_phpcgi")

    @property
    @pulumi.getter(name="exeRep")
    def exe_rep(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 16 - Do monitor processes if EXE name equals 'rep'
        """
        return pulumi.get(self, "exe_rep")

    @property
    @pulumi.getter(name="exeRouteemitter")
    def exe_routeemitter(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
        """
        return pulumi.get(self, "exe_routeemitter")

    @property
    @pulumi.getter(name="exeRouteregistrar")
    def exe_routeregistrar(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
        """
        return pulumi.get(self, "exe_routeregistrar")

    @property
    @pulumi.getter(name="exeRoutingapi")
    def exe_routingapi(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
        """
        return pulumi.get(self, "exe_routingapi")

    @property
    @pulumi.getter(name="exeSchedular")
    def exe_schedular(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
        """
        return pulumi.get(self, "exe_schedular")

    @property
    @pulumi.getter(name="exeSilkdaemon")
    def exe_silkdaemon(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
        """
        return pulumi.get(self, "exe_silkdaemon")

    @property
    @pulumi.getter(name="exeSwitchboard")
    def exe_switchboard(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
        """
        return pulumi.get(self, "exe_switchboard")

    @property
    @pulumi.getter(name="exeSyslogdrainbinder")
    def exe_syslogdrainbinder(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
        """
        return pulumi.get(self, "exe_syslogdrainbinder")

    @property
    @pulumi.getter(name="exeTardis")
    def exe_tardis(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
        """
        return pulumi.get(self, "exe_tardis")

    @property
    @pulumi.getter(name="exeTmpbuildpacks")
    def exe_tmpbuildpacks(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
        """
        return pulumi.get(self, "exe_tmpbuildpacks")

    @property
    @pulumi.getter(name="exeTpswatcher")
    def exe_tpswatcher(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
        """
        return pulumi.get(self, "exe_tpswatcher")

    @property
    @pulumi.getter(name="exeTrafficcontroller")
    def exe_trafficcontroller(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
        """
        return pulumi.get(self, "exe_trafficcontroller")

    @property
    @pulumi.getter(name="exeUipath")
    def exe_uipath(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
        """
        return pulumi.get(self, "exe_uipath")

    @property
    @pulumi.getter(name="exeUserbinpiper")
    def exe_userbinpiper(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
        """
        return pulumi.get(self, "exe_userbinpiper")

    @property
    @pulumi.getter(name="exeW3wp")
    def exe_w3wp(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
        """
        return pulumi.get(self, "exe_w3wp")

    @property
    @pulumi.getter(name="goStatic")
    def go_static(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
        """
        return pulumi.get(self, "go_static")

    @property
    @pulumi.getter(name="hostGroupId")
    def host_group_id(self) -> pulumi.Output[Optional[str]]:
        """
        The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
        """
        return pulumi.get(self, "host_group_id")

    @property
    @pulumi.getter(name="jarDtibmmqconnector")
    def jar_dtibmmqconnector(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
        """
        return pulumi.get(self, "jar_dtibmmqconnector")

    @property
    @pulumi.getter(name="jarEclipseequinox")
    def jar_eclipseequinox(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
        """
        return pulumi.get(self, "jar_eclipseequinox")

    @property
    @pulumi.getter(name="k8sCassandraoperator")
    def k8s_cassandraoperator(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
        """
        return pulumi.get(self, "k8s_cassandraoperator")

    @property
    @pulumi.getter(name="k8sContainerpod")
    def k8s_containerpod(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
        """
        return pulumi.get(self, "k8s_containerpod")

    @property
    @pulumi.getter(name="k8sNamespace")
    def k8s_namespace(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 40 - Do monitor processes if Kubernetes namespace exists
        """
        return pulumi.get(self, "k8s_namespace")

    @property
    @pulumi.getter(name="nodeBinpm2")
    def node_binpm2(self) -> pulumi.Output[Optional[bool]]:
        """
        Do not monitor processes if Node.js script equals 'bin/pm2'
        """
        return pulumi.get(self, "node_binpm2")

    @property
    @pulumi.getter(name="nodeCorepack")
    def node_corepack(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
        """
        return pulumi.get(self, "node_corepack")

    @property
    @pulumi.getter(name="nodeGrunt")
    def node_grunt(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
        """
        return pulumi.get(self, "node_grunt")

    @property
    @pulumi.getter(name="nodeGulpcli")
    def node_gulpcli(self) -> pulumi.Output[Optional[bool]]:
        """
        Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
        """
        return pulumi.get(self, "node_gulpcli")

    @property
    @pulumi.getter(name="nodeNodegyp")
    def node_nodegyp(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
        """
        return pulumi.get(self, "node_nodegyp")

    @property
    @pulumi.getter(name="nodeNodepregyp")
    def node_nodepregyp(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
        """
        return pulumi.get(self, "node_nodepregyp")

    @property
    @pulumi.getter(name="nodeNpm")
    def node_npm(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
        """
        return pulumi.get(self, "node_npm")

    @property
    @pulumi.getter(name="nodePrebuildinstall")
    def node_prebuildinstall(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
        """
        return pulumi.get(self, "node_prebuildinstall")

    @property
    @pulumi.getter(name="nodeTypescript")
    def node_typescript(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
        """
        return pulumi.get(self, "node_typescript")

    @property
    @pulumi.getter(name="nodeYarn")
    def node_yarn(self) -> pulumi.Output[Optional[bool]]:
        """
        Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
        """
        return pulumi.get(self, "node_yarn")

    @property
    @pulumi.getter(name="phpScript")
    def php_script(self) -> pulumi.Output[Optional[bool]]:
        """
        (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
        """
        return pulumi.get(self, "php_script")

