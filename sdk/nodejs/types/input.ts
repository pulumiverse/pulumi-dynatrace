// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface AlertingFilters {
    /**
     * A conditions for the metric usage
     */
    filters?: pulumi.Input<pulumi.Input<inputs.AlertingFiltersFilter>[]>;
}

export interface AlertingFiltersFilter {
    /**
     * Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
     */
    custom?: pulumi.Input<inputs.AlertingFiltersFilterCustom>;
    /**
     * Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
     */
    predefined?: pulumi.Input<inputs.AlertingFiltersFilterPredefined>;
}

export interface AlertingFiltersFilterCustom {
    /**
     * Configuration of a matching filter
     */
    description?: pulumi.Input<inputs.AlertingFiltersFilterCustomDescription>;
    /**
     * Configuration of a matching filter
     */
    metadata?: pulumi.Input<inputs.AlertingFiltersFilterCustomMetadata>;
    /**
     * Configuration of a matching filter
     */
    title?: pulumi.Input<inputs.AlertingFiltersFilterCustomTitle>;
}

export interface AlertingFiltersFilterCustomDescription {
    /**
     * The condition is case sensitive (`false`) or case insensitive (`true`).   If not set, then `false` is used, making the condition case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * The filter is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison.   You can reverse it by setting **negate** to `true`. Possible values are `BEGINS_WITH`, `CONTAINS`, `REGEX_MATCHES`, `ENDS_WITH` and `STRING_EQUALS`
     */
    operator: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<string>;
}

export interface AlertingFiltersFilterCustomMetadata {
    /**
     * Define filters for event properties. A maximum of 20 properties is allowed.
     */
    items: pulumi.Input<inputs.AlertingFiltersFilterCustomMetadataItems>;
}

export interface AlertingFiltersFilterCustomMetadataItems {
    filters: pulumi.Input<pulumi.Input<inputs.AlertingFiltersFilterCustomMetadataItemsFilter>[]>;
}

export interface AlertingFiltersFilterCustomMetadataItemsFilter {
    /**
     * GET /api/v2/eventProperties for list of available keys
     */
    key: pulumi.Input<string>;
    /**
     * no documentation available
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Value
     */
    value: pulumi.Input<string>;
}

export interface AlertingFiltersFilterCustomTitle {
    /**
     * The condition is case sensitive (`false`) or case insensitive (`true`).   If not set, then `false` is used, making the condition case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * The filter is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison.   You can reverse it by setting **negate** to `true`. Possible values are `BEGINS_WITH`, `CONTAINS`, `REGEX_MATCHES`, `ENDS_WITH` and `STRING_EQUALS`
     */
    operator: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<string>;
}

export interface AlertingFiltersFilterPredefined {
    /**
     * The alert triggers when the problem of specified severity arises while the specified event **is** happening (`false`) or while the specified event is **not** happening (`true`).   For example, if you chose the Slowdown (`PERFORMANCE`) severity and Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event with **negate** set to `true`, the alerting profile will trigger only when the slowdown problem is raised while there is no unexpected high traffic event.  Consider the following use case as an example. The Slowdown (`PERFORMANCE`) severity rule is set. Depending on the configuration of the event filter (Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event is used as an example), the options of the alerting profile is one of the following:* **negate** is set to `false`: The alert triggers when the slowdown problem is raised while unexpected high traffic event is happening.  * **negate** is set to `true`: The alert triggers when the slowdown problem is raised while there is no unexpected high traffic event.  * no event rule is set: The alert triggers when the slowdown problem is raised, regardless of any events
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of the predefined event. Possible values are `APPLICATION_ERROR_RATE_INCREASED`, `APPLICATION_SLOWDOWN`, `APPLICATION_UNEXPECTED_HIGH_LOAD`, `APPLICATION_UNEXPECTED_LOW_LOAD`, `AWS_LAMBDA_HIGH_ERROR_RATE`, `CUSTOM_APPLICATION_ERROR_RATE_INCREASED`, `CUSTOM_APPLICATION_SLOWDOWN`, `CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD`, `CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD`, `CUSTOM_APP_CRASH_RATE_INCREASED`, `DATABASE_CONNECTION_FAILURE`, `DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION`, `DATA_CENTER_SERVICE_UNAVAILABLE`, `EBS_VOLUME_HIGH_LATENCY`, `EC2_HIGH_CPU`, `ELB_HIGH_BACKEND_ERROR_RATE`, `ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION`, `ENTERPRISE_APPLICATION_UNAVAILABLE`, `ESXI_GUEST_ACTIVE_SWAP_WAIT`, `ESXI_GUEST_CPU_LIMIT_REACHED`, `ESXI_HOST_CPU_SATURATION`, `ESXI_HOST_DATASTORE_LOW_DISK_SPACE`, `ESXI_HOST_DISK_QUEUE_SLOW`, `ESXI_HOST_DISK_SLOW`, `ESXI_HOST_MEMORY_SATURATION`, `ESXI_HOST_NETWORK_PROBLEMS`, `ESXI_HOST_OVERLOADED_STORAGE`, `ESXI_VM_IMPACT_HOST_CPU_SATURATION`, `ESXI_VM_IMPACT_HOST_MEMORY_SATURATION`, `EXTERNAL_SYNTHETIC_TEST_OUTAGE`, `EXTERNAL_SYNTHETIC_TEST_SLOWDOWN`, `HOST_OF_SERVICE_UNAVAILABLE`, `HTTP_CHECK_GLOBAL_OUTAGE`, `HTTP_CHECK_LOCAL_OUTAGE`, `HTTP_CHECK_TEST_LOCATION_SLOWDOWN`, `MOBILE_APPLICATION_ERROR_RATE_INCREASED`, `MOBILE_APPLICATION_SLOWDOWN`, `MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD`, `MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD`, `MOBILE_APP_CRASH_RATE_INCREASED`, `MONITORING_UNAVAILABLE`, `OSI_DISK_LOW_INODES`, `OSI_GRACEFULLY_SHUTDOWN`, `OSI_HIGH_CPU`, `OSI_HIGH_MEMORY`, `OSI_LOW_DISK_SPACE`, `OSI_NIC_DROPPED_PACKETS_HIGH`, `OSI_NIC_ERRORS_HIGH`, `OSI_NIC_UTILIZATION_HIGH`, `OSI_SLOW_DISK`, `OSI_UNEXPECTEDLY_UNAVAILABLE`, `PGI_OF_SERVICE_UNAVAILABLE`, `PGI_UNAVAILABLE`, `PG_LOW_INSTANCE_COUNT`, `PROCESS_CRASHED`, `PROCESS_HIGH_GC_ACTIVITY`, `PROCESS_MEMORY_RESOURCE_EXHAUSTED`, `PROCESS_NA_HIGH_CONN_FAIL_RATE`, `PROCESS_NA_HIGH_LOSS_RATE`, `PROCESS_THREADS_RESOURCE_EXHAUSTED`, `RDS_HIGH_CPU`, `RDS_HIGH_LATENCY`, `RDS_LOW_MEMORY`, `RDS_LOW_STORAGE_SPACE`, `RDS_OF_SERVICE_UNAVAILABLE`, `RDS_RESTART_SEQUENCE`, `SERVICE_ERROR_RATE_INCREASED`, `SERVICE_SLOWDOWN`, `SERVICE_UNEXPECTED_HIGH_LOAD`, `SERVICE_UNEXPECTED_LOW_LOAD`, `SYNTHETIC_GLOBAL_OUTAGE`, `SYNTHETIC_LOCAL_OUTAGE`, `SYNTHETIC_NODE_OUTAGE`, `SYNTHETIC_PRIVATE_LOCATION_OUTAGE` and `SYNTHETIC_TEST_LOCATION_SLOWDOWN`
     */
    type: pulumi.Input<string>;
}

export interface AlertingProfileEventTypeFilter {
    /**
     * Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
     */
    customEventFilters?: pulumi.Input<pulumi.Input<inputs.AlertingProfileEventTypeFilterCustomEventFilter>[]>;
    /**
     * Configuration of a custom event filter. Filters custom events by title or description. If both specified, the AND logic applies
     */
    predefinedEventFilters?: pulumi.Input<pulumi.Input<inputs.AlertingProfileEventTypeFilterPredefinedEventFilter>[]>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AlertingProfileEventTypeFilterCustomEventFilter {
    /**
     * Configuration of a matching filter
     */
    customDescriptionFilters?: pulumi.Input<pulumi.Input<inputs.AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter>[]>;
    /**
     * Configuration of a matching filter
     */
    customTitleFilters?: pulumi.Input<pulumi.Input<inputs.AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter>[]>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AlertingProfileEventTypeFilterCustomEventFilterCustomDescriptionFilter {
    /**
     * The condition is case sensitive (`false`) or case insensitive (`true`).   If not set, then `false` is used, making the condition case sensitive
     */
    caseInsensitive?: pulumi.Input<boolean>;
    /**
     * The filter is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison.   You can reverse it by setting **negate** to `true`. Possible values are `BEGINS_WITH`, `CONTAINS`, `CONTAINS_REGEX`, `ENDS_WITH` and `EQUALS`
     */
    operator: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<string>;
}

export interface AlertingProfileEventTypeFilterCustomEventFilterCustomTitleFilter {
    /**
     * The condition is case sensitive (`false`) or case insensitive (`true`).   If not set, then `false` is used, making the condition case sensitive
     */
    caseInsensitive?: pulumi.Input<boolean>;
    /**
     * The filter is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Reverses the comparison **operator**. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison.   You can reverse it by setting **negate** to `true`. Possible values are `BEGINS_WITH`, `CONTAINS`, `CONTAINS_REGEX`, `ENDS_WITH` and `EQUALS`
     */
    operator: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<string>;
}

export interface AlertingProfileEventTypeFilterPredefinedEventFilter {
    /**
     * The type of the predefined event. Possible values are `APPLICATION_ERROR_RATE_INCREASED`, `APPLICATION_SLOWDOWN`, `APPLICATION_UNEXPECTED_HIGH_LOAD`, `APPLICATION_UNEXPECTED_LOW_LOAD`, `AWS_LAMBDA_HIGH_ERROR_RATE`, `CUSTOM_APPLICATION_ERROR_RATE_INCREASED`, `CUSTOM_APPLICATION_SLOWDOWN`, `CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD`, `CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD`, `CUSTOM_APP_CRASH_RATE_INCREASED`, `DATABASE_CONNECTION_FAILURE`, `DATA_CENTER_SERVICE_PERFORMANCE_DEGRADATION`, `DATA_CENTER_SERVICE_UNAVAILABLE`, `EBS_VOLUME_HIGH_LATENCY`, `EC2_HIGH_CPU`, `ELB_HIGH_BACKEND_ERROR_RATE`, `ENTERPRICE_APPLICATION_PERFORMANCE_DEGRADATION`, `ENTERPRISE_APPLICATION_UNAVAILABLE`, `ESXI_GUEST_ACTIVE_SWAP_WAIT`, `ESXI_GUEST_CPU_LIMIT_REACHED`, `ESXI_HOST_CPU_SATURATION`, `ESXI_HOST_DATASTORE_LOW_DISK_SPACE`, `ESXI_HOST_DISK_QUEUE_SLOW`, `ESXI_HOST_DISK_SLOW`, `ESXI_HOST_MEMORY_SATURATION`, `ESXI_HOST_NETWORK_PROBLEMS`, `ESXI_HOST_OVERLOADED_STORAGE`, `ESXI_VM_IMPACT_HOST_CPU_SATURATION`, `ESXI_VM_IMPACT_HOST_MEMORY_SATURATION`, `EXTERNAL_SYNTHETIC_TEST_OUTAGE`, `EXTERNAL_SYNTHETIC_TEST_SLOWDOWN`, `HOST_OF_SERVICE_UNAVAILABLE`, `HTTP_CHECK_GLOBAL_OUTAGE`, `HTTP_CHECK_LOCAL_OUTAGE`, `HTTP_CHECK_TEST_LOCATION_SLOWDOWN`, `MOBILE_APPLICATION_ERROR_RATE_INCREASED`, `MOBILE_APPLICATION_SLOWDOWN`, `MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD`, `MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD`, `MOBILE_APP_CRASH_RATE_INCREASED`, `MONITORING_UNAVAILABLE`, `OSI_DISK_LOW_INODES`, `OSI_GRACEFULLY_SHUTDOWN`, `OSI_HIGH_CPU`, `OSI_HIGH_MEMORY`, `OSI_LOW_DISK_SPACE`, `OSI_NIC_DROPPED_PACKETS_HIGH`, `OSI_NIC_ERRORS_HIGH`, `OSI_NIC_UTILIZATION_HIGH`, `OSI_SLOW_DISK`, `OSI_UNEXPECTEDLY_UNAVAILABLE`, `PGI_OF_SERVICE_UNAVAILABLE`, `PGI_UNAVAILABLE`, `PG_LOW_INSTANCE_COUNT`, `PROCESS_CRASHED`, `PROCESS_HIGH_GC_ACTIVITY`, `PROCESS_MEMORY_RESOURCE_EXHAUSTED`, `PROCESS_NA_HIGH_CONN_FAIL_RATE`, `PROCESS_NA_HIGH_LOSS_RATE`, `PROCESS_THREADS_RESOURCE_EXHAUSTED`, `RDS_HIGH_CPU`, `RDS_HIGH_LATENCY`, `RDS_LOW_MEMORY`, `RDS_LOW_STORAGE_SPACE`, `RDS_OF_SERVICE_UNAVAILABLE`, `RDS_RESTART_SEQUENCE`, `SERVICE_ERROR_RATE_INCREASED`, `SERVICE_SLOWDOWN`, `SERVICE_UNEXPECTED_HIGH_LOAD`, `SERVICE_UNEXPECTED_LOW_LOAD`, `SYNTHETIC_GLOBAL_OUTAGE`, `SYNTHETIC_LOCAL_OUTAGE`, `SYNTHETIC_NODE_OUTAGE`, `SYNTHETIC_PRIVATE_LOCATION_OUTAGE` and `SYNTHETIC_TEST_LOCATION_SLOWDOWN`
     */
    eventType: pulumi.Input<string>;
    /**
     * The alert triggers when the problem of specified severity arises while the specified event **is** happening (`false`) or while the specified event is **not** happening (`true`).   For example, if you chose the Slowdown (`PERFORMANCE`) severity and Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event with **negate** set to `true`, the alerting profile will trigger only when the slowdown problem is raised while there is no unexpected high traffic event.  Consider the following use case as an example. The Slowdown (`PERFORMANCE`) severity rule is set. Depending on the configuration of the event filter (Unexpected high traffic (`APPLICATION_UNEXPECTED_HIGH_LOAD`) event is used as an example), the behavior of the alerting profile is one of the following:* **negate** is set to `false`: The alert triggers when the slowdown problem is raised while unexpected high traffic event is happening.  * **negate** is set to `true`: The alert triggers when the slowdown problem is raised while there is no unexpected high traffic event.  * no event rule is set: The alert triggers when the slowdown problem is raised, regardless of any events
     */
    negate?: pulumi.Input<boolean>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AlertingProfileMetadata {
    /**
     * Dynatrace server version
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * A Sorted list of the version numbers of the configuration
     */
    configurationVersions?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * A Sorted list of the version numbers of the configuration
     */
    currentConfigurationVersions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AlertingProfileRule {
    /**
     * Send a notification if a problem remains open longer than *X* minutes
     */
    delayInMinutes: pulumi.Input<number>;
    /**
     * The severity level to trigger the alert. Possible values are `AVAILABILITY`,	`CUSTOM_ALERT`,	`ERROR`,`MONITORING_UNAVAILABLE`,`PERFORMANCE` and `RESOURCE_CONTENTION`.
     */
    severityLevel: pulumi.Input<string>;
    /**
     * Configuration of the tag filtering of the alerting profile
     */
    tagFilters: pulumi.Input<pulumi.Input<inputs.AlertingProfileRuleTagFilter>[]>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AlertingProfileRuleTagFilter {
    /**
     * The filtering mode:  * `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags.  * `NONE`: The rule applies to all monitored entities
     */
    includeMode: pulumi.Input<string>;
    /**
     * A list of required tags
     */
    tagFilters?: pulumi.Input<pulumi.Input<inputs.AlertingProfileRuleTagFilterTagFilter>[]>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AlertingProfileRuleTagFilterTagFilter {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface AlertingRules {
    /**
     * A conditions for the metric usage
     */
    rules?: pulumi.Input<pulumi.Input<inputs.AlertingRulesRule>[]>;
}

export interface AlertingRulesRule {
    /**
     * Send a notification if a problem remains open longer than *X* minutes
     */
    delayInMinutes: pulumi.Input<number>;
    /**
     * The filtering mode:  * `INCLUDE_ANY`: The rule applies to monitored entities that have at least one of the specified tags. You can specify up to 100 tags.  * `INCLUDE_ALL`: The rule applies to monitored entities that have **all** of the specified tags. You can specify up to 10 tags.  * `NONE`: The rule applies to all monitored entities
     */
    includeMode: pulumi.Input<string>;
    /**
     * The severity level to trigger the alert. Possible values are `AVAILABILITY`,	`CUSTOM_ALERT`,	`ERRORS`,`MONITORING_UNAVAILABLE`,`PERFORMANCE` and `RESOURCE_CONTENTION`.
     */
    severityLevel: pulumi.Input<string>;
    /**
     * Entities which contain any/all of the configured tags will match this alerting profile. It is recommended to use manual tags.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApiDetectionConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.ApiDetectionConditionsCondition>[]>;
}

export interface ApiDetectionConditionsCondition {
    /**
     * Possible Values: `FILE_NAME`, `FQCN`, `PACKAGE`
     */
    base: pulumi.Input<string>;
    /**
     * Possible Values: `BEGINS_WITH`, `CONTAINS`
     */
    matcher: pulumi.Input<string>;
    /**
     * no documentation available
     */
    pattern: pulumi.Input<string>;
}

export interface ApplicationAnomaliesFailureRate {
    /**
     * Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
     */
    auto?: pulumi.Input<inputs.ApplicationAnomaliesFailureRateAuto>;
    /**
     * Fixed thresholds for failure rate increase detection
     */
    thresholds?: pulumi.Input<inputs.ApplicationAnomaliesFailureRateThresholds>;
}

export interface ApplicationAnomaliesFailureRateAuto {
    /**
     * Absolute increase of failing service calls to trigger an alert, %
     */
    absolute: pulumi.Input<number>;
    /**
     * Relative increase of failing service calls to trigger an alert, %
     */
    relative: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ApplicationAnomaliesFailureRateThresholds {
    /**
     * Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert
     */
    sensitivity: pulumi.Input<string>;
    /**
     * Failure rate during any 5-minute period to trigger an alert, %
     */
    threshold: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ApplicationAnomaliesResponseTime {
    /**
     * Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
     */
    auto?: pulumi.Input<inputs.ApplicationAnomaliesResponseTimeAuto>;
    /**
     * Fixed thresholds for response time degradation detection
     */
    thresholds?: pulumi.Input<inputs.ApplicationAnomaliesResponseTimeThresholds>;
}

export interface ApplicationAnomaliesResponseTimeAuto {
    /**
     * Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
     */
    load: pulumi.Input<string>;
    /**
     * Alert if the response time degrades by more than *X* milliseconds
     */
    milliseconds: pulumi.Input<number>;
    /**
     * Alert if the response time degrades by more than *X* %
     */
    percent: pulumi.Input<number>;
    /**
     * Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
     */
    slowestMilliseconds: pulumi.Input<number>;
    /**
     * Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
     */
    slowestPercent: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ApplicationAnomaliesResponseTimeThresholds {
    /**
     * Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
     */
    load: pulumi.Input<string>;
    /**
     * Response time during any 5-minute period to trigger an alert, in milliseconds
     */
    milliseconds: pulumi.Input<number>;
    /**
     * Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers an alert
     */
    sensitivity: pulumi.Input<string>;
    /**
     * Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds
     */
    slowestMilliseconds: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ApplicationAnomaliesTraffic {
    /**
     * The configuration of traffic drops detection
     */
    drops?: pulumi.Input<inputs.ApplicationAnomaliesTrafficDrops>;
    /**
     * The configuration of traffic spikes detection
     */
    spikes?: pulumi.Input<inputs.ApplicationAnomaliesTrafficSpikes>;
}

export interface ApplicationAnomaliesTrafficDrops {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Alert if the observed traffic is less than *X* % of the expected value
     */
    percent?: pulumi.Input<number>;
}

export interface ApplicationAnomaliesTrafficSpikes {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Alert if the observed traffic is less than *X* % of the expected value
     */
    percent?: pulumi.Input<number>;
}

export interface ApplicationDataPrivacySessionReplayDataPrivacy {
    /**
     * (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Content masking settings for Session Replay.
     */
    contentMaskingSettings: pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings>;
    /**
     * (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) If `true`, session recording is disabled until JavaScriptAPI `dtrum.enableSessionReplay()` is called
     */
    optIn?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) A list of URLs to be excluded from recording
     */
    urlExclusionRules?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettings {
    /**
     * (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Configuration of the Session Replay masking during Playback
     */
    playback: pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback>;
    /**
     * (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Configuration of the Session Replay masking during Recording
     */
    recording: pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording>;
}

export interface ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlayback {
    /**
     * The type of the masking:
     */
    preset: pulumi.Input<string>;
    /**
     * A list of masking rules
     */
    rules?: pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules>;
}

export interface ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRules {
    /**
     * The masking rule defining how data is hidden
     */
    rules: pulumi.Input<pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule>[]>;
}

export interface ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsPlaybackRulesRule {
    /**
     * The selector for the element or the attribute to be masked.
     */
    selector: pulumi.Input<string>;
    /**
     * The type of the masking rule
     */
    type: pulumi.Input<string>;
    /**
     * Interactions with the element are (`true`) or are not (`false) masked
     */
    userInteractionHidden?: pulumi.Input<boolean>;
}

export interface ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecording {
    /**
     * The type of the masking:
     */
    preset: pulumi.Input<string>;
    /**
     * A list of masking rules
     */
    rules?: pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules>;
}

export interface ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRules {
    /**
     * The masking rule defining how data is hidden
     */
    rules: pulumi.Input<pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule>[]>;
}

export interface ApplicationDataPrivacySessionReplayDataPrivacyContentMaskingSettingsRecordingRulesRule {
    /**
     * The selector for the element or the attribute to be masked.
     */
    selector: pulumi.Input<string>;
    /**
     * The type of the masking rule
     */
    type: pulumi.Input<string>;
    /**
     * Interactions with the element are (`true`) or are not (`false) masked
     */
    userInteractionHidden?: pulumi.Input<boolean>;
}

export interface ApplicationDetectionRuleFilterConfig {
    /**
     * Where to look for the pattern value, possible values are `DOMAIN` or `URL`
     */
    applicationMatchTarget: pulumi.Input<string>;
    /**
     * The operator used for matching the application detection rule, possible values are `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `MATCHES`
     */
    applicationMatchType: pulumi.Input<string>;
    /**
     * The value to look for with the application detection rule
     */
    pattern: pulumi.Input<string>;
}

export interface ApplicationErrorRulesCustomErrors {
    /**
     * Configuration of the custom error in the web application
     */
    rules: pulumi.Input<pulumi.Input<inputs.ApplicationErrorRulesCustomErrorsRule>[]>;
}

export interface ApplicationErrorRulesCustomErrorsRule {
    /**
     * Capture (`true`) or ignore (`false`) the error
     */
    capture?: pulumi.Input<boolean>;
    /**
     * Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://dt-url.net/a963kd2)
     */
    customAlerting?: pulumi.Input<boolean>;
    /**
     * Include (`true`) or exclude (`false`) the error in Apdex calculation
     */
    impactApdex?: pulumi.Input<boolean>;
    /**
     * The matching operation for the **keyPattern**. Possible values are `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH` and `EQUALS`
     */
    keyMatcher?: pulumi.Input<string>;
    /**
     * The key of the error to look for
     */
    keyPattern?: pulumi.Input<string>;
    /**
     * The matching operation for the **valuePattern**. Possible values are `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH` and `EQUALS`.
     */
    valueMatcher?: pulumi.Input<string>;
    /**
     * The value of the error to look for
     */
    valuePattern?: pulumi.Input<string>;
}

export interface ApplicationErrorRulesHttpErrors {
    /**
     * Configuration of the HTTP error in the web application
     */
    rules: pulumi.Input<pulumi.Input<inputs.ApplicationErrorRulesHttpErrorsRule>[]>;
}

export interface ApplicationErrorRulesHttpErrorsRule {
    /**
     * Capture (`true`) or ignore (`false`) the error
     */
    capture?: pulumi.Input<boolean>;
    /**
     * If `true`, match by errors that have CSP Rule violations
     */
    considerBlockedRequests?: pulumi.Input<boolean>;
    /**
     * Include (`true`) or exclude (`false`) the error in Davis AI [problem detection and analysis](https://dt-url.net/a963kd2)
     */
    considerForAi?: pulumi.Input<boolean>;
    /**
     * If `true`, match by errors that have unknown HTTP status code
     */
    considerUnknownErrorCode?: pulumi.Input<boolean>;
    /**
     * The HTTP status code or status code range to match by.
     */
    errorCodes?: pulumi.Input<string>;
    /**
     * The matching rule for the URL. Popssible values are `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH` and `EQUALS`.
     */
    filter?: pulumi.Input<string>;
    /**
     * If `true`, filter errors by URL
     */
    filterByUrl?: pulumi.Input<boolean>;
    /**
     * Include (`true`) or exclude (`false`) the error in Apdex calculation
     */
    impactApdex?: pulumi.Input<boolean>;
    /**
     * The URL to look for
     */
    url?: pulumi.Input<string>;
}

export interface AppsecNotificationAttackCandidateBasedEmailPayload {
    /**
     * The template of the email notifications.  
     * In case a value of a security problem is not set, the placeholder will be replaced by an empty string.. **Note:** Security notifications contain sensitive information. Excessive usage of placeholders in the body might leak information to untrusted parties.  
     *   
     * Available placeholders:  
     * **{AttackDisplayId}**: The unique identifier assigned by Dynatrace, for example: "A-1234".  
     * **{Title}**: Location of the attack, for example: "com.dynatrace.Class.method():120"  
     * **{Type}**: The type of attack, for example: "SQL Injection".  
     * **{AttackUrl}**: URL of the attack in Dynatrace.  
     * **{ProcessGroupId}**: Details about the process group attacked.  
     * **{EntryPoint}**: The entry point of the attack into the process, for example: "/login". Can be empty.  
     * **{Status}**: The status of the attack, for example: "Exploited"  
     * **{Timestamp}**: When the attack happened.  
     * **{VulnerabilityName}**: Name of the associated code-level vulnerability, for example: "InMemoryDatabaseCaller.getAccountInfo():51". Can be empty.
     */
    body: pulumi.Input<string>;
    /**
     * The subject of the email notifications.. Available placeholders:  
     * **{AttackDisplayId}**: The unique identifier assigned by Dynatrace, for example, "A-1234".  
     * **{Title}**: Location of the attack, for example: "com.dynatrace.Class.method():120"  
     * **{Type}**: The type of attack, for example: "SQL Injection".  
     * **{AttackUrl}**: URL of the attack in Dynatrace.  
     * **{ProcessGroupId}**: Details about the process group attacked.  
     * **{EntryPoint}**: The entry point of the attack into the process, for example: "/login". Can be empty.  
     * **{Status}**: The status of the attack, for example: "Exploited"  
     * **{Timestamp}**: When the attack happened.  
     * **{VulnerabilityName}**: Name of the associated code-level vulnerability, for example: "InMemoryDatabaseCaller.getAccountInfo():51". Can be empty.
     */
    subject: pulumi.Input<string>;
}

export interface AppsecNotificationAttackCandidateBasedJiraPayload {
    /**
     * The description of the Jira issue to be created by this notification.  
     * In case a value of an attack is not set, the placeholder will be replaced by an empty string.. **Note:** Security notifications contain sensitive information. Excessive usage of placeholders in the description might leak information to untrusted parties.  
     *   
     * Available placeholders:  
     * **{AttackDisplayId}**: The unique identifier assigned by Dynatrace, for example: "A-1234".  
     * **{Title}**: Location of the attack, for example: "com.dynatrace.Class.method():120"  
     * **{Type}**: The type of attack, for example: "SQL Injection".  
     * **{AttackUrl}**: URL of the attack in Dynatrace.  
     * **{ProcessGroupId}**: Details about the process group attacked.  
     * **{EntryPoint}**: The entry point of the attack into the process, for example: "/login". Can be empty.  
     * **{Status}**: The status of the attack, for example: "Exploited"  
     * **{Timestamp}**: When the attack happened.  
     * **{VulnerabilityName}**: Name of the associated code-level vulnerability, for example: "InMemoryDatabaseCaller.getAccountInfo():51". Can be empty.
     */
    description: pulumi.Input<string>;
    /**
     * The summary of the Jira issue to be created by this notification.. **Note:** The Jira summary field must contain less than 255 characters. Any content exceeding this limit after evaluating the placeholders will be discarded.  
     *   
     * Available placeholders:  
     * **{AttackDisplayId}**: The unique identifier assigned by Dynatrace, for example, "A-1234".  
     * **{Title}**: Location of the attack, for example: "com.dynatrace.Class.method():120"  
     * **{Type}**: The type of attack, for example: "SQL Injection".  
     * **{AttackUrl}**: URL of the attack in Dynatrace.  
     * **{ProcessGroupId}**: Details about the process group attacked.  
     * **{EntryPoint}**: The entry point of the attack into the process, for example: "/login". Can be empty.  
     * **{Status}**: The status of the attack, for example: "Exploited"  
     * **{Timestamp}**: When the attack happened.  
     * **{VulnerabilityName}**: Name of the associated code-level vulnerability, for example: "InMemoryDatabaseCaller.getAccountInfo():51". Can be empty.
     */
    summary: pulumi.Input<string>;
}

export interface AppsecNotificationAttackCandidateBasedWebhookPayload {
    /**
     * This is the content your notification message will include when users view it.  
     * In case a value of an attack is not set, the placeholder will be replaced by an empty string.. **Note:** Security notifications contain sensitive information. Excessive usage of placeholders in the custom payload might leak information to untrusted parties.  
     *   
     * Available placeholders:  
     * **{AttackDisplayId}**: The unique identifier assigned by Dynatrace, for example: "A-1234".  
     * **{Title}**: Location of the attack, for example: "com.dynatrace.Class.method():120"  
     * **{Type}**: The type of attack, for example: "SQL Injection".  
     * **{AttackUrl}**: URL of the attack in Dynatrace.  
     * **{ProcessGroupId}**: Details about the process group attacked.  
     * **{EntryPoint}**: The entry point of the attack into the process, for example: "/login". Can be empty.  
     * **{Status}**: The status of the attack, for example: "Exploited"  
     * **{Timestamp}**: When the attack happened.  
     * **{VulnerabilityName}**: Name of the associated code-level vulnerability, for example: "InMemoryDatabaseCaller.getAccountInfo():51". Can be empty.
     */
    payload: pulumi.Input<string>;
}

export interface AppsecNotificationEmailConfiguration {
    /**
     * BCC
     */
    bccRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * CC
     */
    ccRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * To
     */
    recipients: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AppsecNotificationJiraConfiguration {
    /**
     * The API token for the Jira profile. Using password authentication [was deprecated by Jira](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-basic-auth-and-cookie-based-auth/)
     */
    apiToken: pulumi.Input<string>;
    /**
     * The type of the Jira issue to be created by this notification.
     *
     * To find all available issue types or create your own, in Jira, go to Project settings > Issue types.
     */
    issueType: pulumi.Input<string>;
    /**
     * The project key of the Jira issue to be created by this notification.
     */
    projectKey: pulumi.Input<string>;
    /**
     * The URL of the Jira API endpoint.
     */
    url: pulumi.Input<string>;
    /**
     * The username of the Jira profile.
     */
    username: pulumi.Input<string>;
}

export interface AppsecNotificationSecurityProblemBasedEmailPayload {
    /**
     * The template of the email notifications.  
     * In case a value of a security problem is not set, the placeholder will be replaced by an empty string.. **Note:** Security notifications contain sensitive information. Excessive usage of placeholders in the description might leak information to untrusted parties.  
     *   
     * Available placeholders:  
     * **{SecurityProblemId}**: The unique identifier assigned by Dynatrace, for example, "S-1234".  
     * **{Title}**: A short summary of the type of vulnerability that was found, for example, "Remote Code Execution".  
     * **{Description}**: A more detailed description of the vulnerability.  
     * **{CvssScore}**: CVSS score of the identified vulnerability, for example, "10.0". Can be empty. 
     * **{DavisSecurityScore}**: [Davis Security Score](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security/davis-security-score/) is an enhanced risk-calculation score based on the CVSS, for example, "10.0".  
     * **{Severity}**: The security problem severity, for example, "Critical" or "Medium".  
     * **{SecurityProblemUrl}**: URL of the security problem in Dynatrace.  
     * **{AffectedEntities}**: Details about the entities affected by the security problem in a json array.  
     * **{ManagementZones}**: Comma-separated list of all management zones affected by the vulnerability at the time of detection.  
     * **{Tags}**: Comma-separated list of tags that are defined for a vulnerability's affected entities. For example: "PROD, owner:John". Assign the tag's key in square brackets: **{Tags[key]}** to get all associated values. For example: "{Tags[owner]}" will be resolved as "John". Tags without an assigned value will be resolved as empty string.  
     * **{Exposed}**: Describes whether one or more affected process is exposed to the public Internet. Can be "true" or "false".  
     * **{DataAssetsReachable}**: Describes whether one or more affected process can reach data assets. Can be "true" or "false".  
     * **{ExploitAvailable}**: Describes whether there's an exploit available for the vulnerability. Can be "true" or "false".
     */
    body: pulumi.Input<string>;
    /**
     * The subject of the email notifications.. Available placeholders:  
     * **{SecurityProblemId}**: The unique identifier assigned by Dynatrace, for example, "S-1234".  
     * **{Title}**: A short summary of the type of vulnerability that was found, for example, "Remote Code Execution".  
     * **{CvssScore}**: CVSS score of the identified vulnerability, for example, "10.0". Can be empty. 
     * **{DavisSecurityScore}**: [Davis Security Score](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security/davis-security-score/) is an enhanced risk-calculation score based on the CVSS, for example, "10.0".  
     * **{Severity}**: The security problem severity, for example, "Critical" or "Medium".  
     * **{SecurityProblemUrl}**: URL of the security problem in Dynatrace.  
     * **{Exposed}**: Describes whether one or more affected process is exposed to the public Internet. Can be "true" or "false".  
     * **{DataAssetsReachable}**: Describes whether one or more affected process can reach data assets. Can be "true" or "false".  
     * **{ExploitAvailable}**: Describes whether there's an exploit available for the vulnerability. Can be "true" or "false".
     */
    subject: pulumi.Input<string>;
}

export interface AppsecNotificationSecurityProblemBasedJiraPayload {
    /**
     * The description of the Jira issue to be created by this notification.  
     * In case a value of a security problem is not set, the placeholder will be replaced by an empty string.. **Note:** Security notifications contain sensitive information. Excessive usage of placeholders in the description might leak information to untrusted parties.  
     *   
     * Available placeholders:  
     * **{SecurityProblemId}**: The unique identifier assigned by Dynatrace, for example, "S-1234".  
     * **{Title}**: A short summary of the type of vulnerability that was found, for example, "Remote Code Execution".  
     * **{Description}**: A more detailed description of the vulnerability.  
     * **{CvssScore}**: CVSS score of the identified vulnerability, for example, "10.0". Can be empty. 
     * **{DavisSecurityScore}**: [Davis Security Score](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security/davis-security-score/) is an enhanced risk-calculation score based on the CVSS, for example, "10.0".  
     * **{Severity}**: The security problem severity, for example, "Critical" or "Medium".  
     * **{SecurityProblemUrl}**: URL of the security problem in Dynatrace.  
     * **{AffectedEntities}**: Details about the entities affected by the security problem in a json array.  
     * **{ManagementZones}**: Comma-separated list of all management zones affected by the vulnerability at the time of detection.  
     * **{Tags}**: Comma-separated list of tags that are defined for a vulnerability's affected entities. For example: "PROD, owner:John". Assign the tag's key in square brackets: **{Tags[key]}** to get all associated values. For example: "{Tags[owner]}" will be resolved as "John". Tags without an assigned value will be resolved as empty string.  
     * **{Exposed}**: Describes whether one or more affected process is exposed to the public Internet. Can be "true" or "false".  
     * **{DataAssetsReachable}**: Describes whether one or more affected process can reach data assets. Can be "true" or "false".  
     * **{ExploitAvailable}**: Describes whether there's an exploit available for the vulnerability. Can be "true" or "false".
     */
    description: pulumi.Input<string>;
    /**
     * The summary of the Jira issue to be created by this notification.. **Note:** The Jira summary field must contain less than 255 characters. Any content exceeding this limit after evaluating the placeholders will be discarded.  
     *   
     * Available placeholders:  
     * **{SecurityProblemId}**: The unique identifier assigned by Dynatrace, for example, "S-1234".  
     * **{Title}**: A short summary of the type of vulnerability that was found, for example, "Remote Code Execution".  
     * **{CvssScore}**: CVSS score of the identified vulnerability, for example, "10.0". Can be empty. 
     * **{DavisSecurityScore}**: [Davis Security Score](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security/davis-security-score/) is an enhanced risk-calculation score based on the CVSS, for example, "10.0".  
     * **{Severity}**: The security problem severity, for example, "Critical" or "Medium".  
     * **{SecurityProblemUrl}**: URL of the security problem in Dynatrace.  
     * **{Exposed}**: Describes whether one or more affected process is exposed to the public Internet. Can be "true" or "false".  
     * **{DataAssetsReachable}**: Describes whether one or more affected process can reach data assets. Can be "true" or "false".  
     * **{ExploitAvailable}**: Describes whether there's an exploit available for the vulnerability. Can be "true" or "false".
     */
    summary: pulumi.Input<string>;
}

export interface AppsecNotificationSecurityProblemBasedWebhookPayload {
    /**
     * This is the content your notification message will include when users view it.  
     * In case a value of a security problem is not set, the placeholder will be replaced by an empty string.. **Note:** Security notifications contain sensitive information. Excessive usage of placeholders in the custom payload might leak information to untrusted parties.  
     *   
     * Available placeholders:  
     * **{SecurityProblemId}**: The unique identifier assigned by Dynatrace, for example, "S-1234".  
     * **{Title}**: A short summary of the type of vulnerability that was found, for example, "Remote Code Execution".  
     * **{Description}**: A more detailed description of the vulnerability.  
     * **{CvssScore}**: CVSS score of the identified vulnerability, for example, "10.0". Can be empty. 
     * **{DavisSecurityScore}**: [Davis Security Score](https://www.dynatrace.com/support/help/how-to-use-dynatrace/application-security/davis-security-score/) is an enhanced risk-calculation score based on the CVSS, for example, "10.0".  
     * **{Severity}**: The security problem severity, for example, "Critical" or "Medium".  
     * **{SecurityProblemUrl}**: URL of the security problem in Dynatrace.  
     * **{AffectedEntities}**: Details about the entities affected by the security problem in a json array.  
     * **{ManagementZones}**: Comma-separated list of all management zones affected by the vulnerability at the time of detection.  
     * **{Tags}**: Comma-separated list of tags that are defined for a vulnerability's affected entities. For example: "PROD, owner:John". Assign the tag's key in square brackets: **{Tags[key]}** to get all associated values. For example: "{Tags[owner]}" will be resolved as "John". Tags without an assigned value will be resolved as empty string.  
     * **{Exposed}**: Describes whether one or more affected process is exposed to the public Internet. Can be "true" or "false".  
     * **{DataAssetsReachable}**: Describes whether one or more affected process can reach data assets. Can be "true" or "false".  
     * **{ExploitAvailable}**: Describes whether there's an exploit available for the vulnerability. Can be "true" or "false".
     */
    payload: pulumi.Input<string>;
}

export interface AppsecNotificationWebhookConfiguration {
    /**
     * Accept any SSL certificate (including self-signed and invalid certificates)
     */
    acceptAnyCertificate: pulumi.Input<boolean>;
    /**
     * Use additional HTTP headers to attach any additional information, for example, configuration, authorization, or metadata.  
     *   
     * Note that JSON-based webhook endpoints require the addition of the **Content-Type: application/json** header to enable escaping of special characters and to avoid malformed JSON content.
     */
    headers?: pulumi.Input<inputs.AppsecNotificationWebhookConfigurationHeaders>;
    /**
     * Webhook endpoint URL
     */
    url: pulumi.Input<string>;
}

export interface AppsecNotificationWebhookConfigurationHeaders {
    headers: pulumi.Input<pulumi.Input<inputs.AppsecNotificationWebhookConfigurationHeadersHeader>[]>;
}

export interface AppsecNotificationWebhookConfigurationHeadersHeader {
    /**
     * no documentation available
     */
    name: pulumi.Input<string>;
    /**
     * Secret HTTP header value
     */
    secret: pulumi.Input<boolean>;
    /**
     * The secret value of the HTTP header. May contain an empty value.
     */
    secretValue?: pulumi.Input<string>;
    /**
     * The value of the HTTP header. May contain an empty value.
     */
    value?: pulumi.Input<string>;
}

export interface AttackAllowlistAttackHandling {
    /**
     * Possible Values: `MONITOR`, `OFF`
     */
    blockingStrategy: pulumi.Input<string>;
}

export interface AttackAllowlistCriteria {
    /**
     * Only consider attacks matching the specified pattern.
     */
    attackPattern?: pulumi.Input<string>;
    /**
     * Source IP
     */
    sourceIp?: pulumi.Input<string>;
}

export interface AttackAllowlistMetadata {
    /**
     * no documentation available
     */
    comment: pulumi.Input<string>;
}

export interface AttackRulesAttackHandling {
    /**
     * Possible Values: `BLOCK`, `MONITOR`, `OFF`
     */
    blockingStrategy: pulumi.Input<string>;
}

export interface AttackRulesCriteria {
    /**
     * Possible Values: `ANY`, `CMD_INJECTION`, `JNDI_INJECTION`, `SQL_INJECTION`, `SSRF`
     */
    attackType: pulumi.Input<string>;
    /**
     * Process group
     */
    processGroup?: pulumi.Input<string>;
}

export interface AttackRulesMetadata {
    /**
     * no documentation available
     */
    comment: pulumi.Input<string>;
}

export interface AttackSettingsDefaultAttackHandling {
    /**
     * (v1.290) Possible Values: `BLOCK`, `MONITOR`, `OFF`
     */
    blockingStrategyDotNet?: pulumi.Input<string>;
    /**
     * Possible Values: `BLOCK`, `MONITOR`, `OFF`
     */
    blockingStrategyJava: pulumi.Input<string>;
}

export interface AutomationBusinessCalendarHolidays {
    /**
     * A (unordered) list of holidays valid in this calendar
     */
    holidays: pulumi.Input<pulumi.Input<inputs.AutomationBusinessCalendarHolidaysHoliday>[]>;
}

export interface AutomationBusinessCalendarHolidaysHoliday {
    /**
     * The date of this holiday: Example `2017-07-04` for July 4th 2017
     */
    date: pulumi.Input<string>;
    /**
     * An official name for this holiday
     */
    title: pulumi.Input<string>;
}

export interface AutomationSchedulingRuleFixedOffset {
    /**
     * Every day of the scheduling rule referred to with `rule` will be offset by this amount of days
     */
    offset: pulumi.Input<number>;
    /**
     * Refers to a scheduling rule for which to produce valid days with an offset
     */
    rule: pulumi.Input<string>;
}

export interface AutomationSchedulingRuleGrouping {
    /**
     * The IDs of scheduling rules determining the days the schedule should apply to
     */
    combines: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IDs of scheduling rules determining the days the schedule is allowed apply to. If specified, only days that are covered by `combine` and `intersect` are valid days for the schedule
     */
    intersects?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IDs of scheduling rules determing the days the schedule must not apply. If specified it reduces down the set of days covered by `combine` and `intersect`
     */
    subtracts?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AutomationSchedulingRuleRecurrence {
    /**
     * The recurrence start. Example: `2017-07-04` represents July 4th 2017
     */
    datestart: pulumi.Input<string>;
    /**
     * Restricts the recurrence to specific days within a month. `1`, `2`, `3`, ... refers to the first, second, third day in the month. You can also specify negative values to refer to values relative to the last day. `-1` refers to the last day, `-2` refers to the second to the last day, ...
     */
    daysInMonths?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Restricts the recurrence to specific days within a year. `1`, `2`, `3`, ... refers to the first, second, third day of the year. You can also specify negative values to refer to values relative to the last day. `-1` refers to the last day, `-2` refers to the second to the last day, ...
     */
    daysInYears?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Restricts the recurrence to specific days relative to Easter Sunday. `0` will yield the Easter Sunday itself
     */
    easters?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Possible values are `YEARLY`, `MONTHLY`, `WEEKLY`, `DAILY`, `HOURLY`, `MINUTELY` and `SECONDLY`. Example: `frequency` = `DAILY` and `interval` = `2` schedules for every other day
     */
    frequency: pulumi.Input<string>;
    /**
     * The interval between each iteration. Default: 1. Example: `frequency` = `DAILY` and `interval` = `2` schedules for every other day
     */
    interval?: pulumi.Input<number>;
    /**
     * Restricts the recurrence to specific months. `1` for `January`, `2` for `February`, ..., `12` for `December`
     */
    months?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Restricts the recurrence to specific week days. Possible values are `MO`, `TU`, `WE`, `TH`, `FR`, `SA` and `SU`
     */
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Restricts the recurrence to specific weeks within a year. `1`, `2`, `3`, ... refers to the first, second, third week of the year. You can also specify negative values to refer to values relative to the last week. `-1` refers to the last week, `-2` refers to the second to the last week, ...
     */
    weeks?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Possible values are `WORKING` (Work days), `HOLIDAYS` (Holidays) and `OFF` (Weekends + Holidays)
     */
    workdays: pulumi.Input<string>;
}

export interface AutomationSchedulingRuleRelativeOffset {
    direction: pulumi.Input<string>;
    sourceRule: pulumi.Input<string>;
    targetRule: pulumi.Input<string>;
}

export interface AutomationWorkflowTasks {
    /**
     * TODO: No documentation available
     */
    tasks?: pulumi.Input<pulumi.Input<inputs.AutomationWorkflowTasksTask>[]>;
}

export interface AutomationWorkflowTasksTask {
    /**
     * Currently known and supported values are `dynatrace.automations:http-function`, `dynatrace.automations:run-javascript` and `dynatrace.automations:execute-dql-query`
     */
    action: pulumi.Input<string>;
    /**
     * Specifies whether a task should be skipped as a no operation or not
     */
    active?: pulumi.Input<boolean>;
    /**
     * Required if `withItems` is specified. By default loops execute sequentially with concurrency set to 1. You can increase how often it runs in parallel
     */
    concurrency?: pulumi.Input<string>;
    /**
     * Conditions that have to be met in order to execute that task
     */
    conditions?: pulumi.Input<inputs.AutomationWorkflowTasksTaskConditions>;
    /**
     * A description for this task
     */
    description?: pulumi.Input<string>;
    /**
     * Parameters and values for this task as JSON code. Contents depend on the kind of task - determined by the attribute `action`
     */
    input?: pulumi.Input<string>;
    /**
     * The name of the task
     */
    name: pulumi.Input<string>;
    /**
     * Layouting information about the task tile when visualized. If not specified Dynatrace will position the task tiles automatically
     */
    position?: pulumi.Input<inputs.AutomationWorkflowTasksTaskPosition>;
    /**
     * Configure whether to automatically rerun the task on failure. If not specified no retries will be attempted
     */
    retry?: pulumi.Input<inputs.AutomationWorkflowTasksTaskRetry>;
    /**
     * Specifies a default task timeout in seconds. 15 * 60 (15min) is used when not set. Minimum 1. Maximum 604800
     */
    timeout?: pulumi.Input<string>;
    /**
     * Iterates over items in a list, allowing actions to be executed repeatedly. Example: Specifying `item in [1, 2, 3]` here will execute the task three times for the numbers 1, 2 and 3 - with the current number available for scripting using the expression `{{ _.item }}`
     */
    withItems?: pulumi.Input<string>;
}

export interface AutomationWorkflowTasksTaskConditions {
    /**
     * A custom condition that needs to be met for the current task to get executed
     */
    custom?: pulumi.Input<string>;
    /**
     * Possible values are `SKIP` and `STOP`
     */
    else?: pulumi.Input<string>;
    /**
     * key/value pairs where the `key` is the name of another task and the value the status it needs to be for the current task to get executed. Possible values are `SUCCESS`, `ERROR`, `ANY`, `OK` (Success or Skipped) and `NOK` (Error or Cancelled)
     */
    states: pulumi.Input<{[key: string]: any}>;
}

export interface AutomationWorkflowTasksTaskPosition {
    /**
     * x-coordinate for layouting
     */
    x: pulumi.Input<number>;
    /**
     * y-coordinate for layouting
     */
    y: pulumi.Input<number>;
}

export interface AutomationWorkflowTasksTaskRetry {
    /**
     * Specifies a maximum number of times that a task can be repeated in case it fails on execution. You can specify either a number between 1 and 99 here or use an expression (`{{}}`). Default: 1
     */
    count?: pulumi.Input<string>;
    /**
     * Specifies a delay in seconds between subsequent task retries. You can specify either a number between 1 and 3600 here or an expression (`{{...}}`). Default: 1
     */
    delay?: pulumi.Input<string>;
    /**
     * Specifies whether retrying the failed iterations or the whole loop. Default: true
     */
    failedLoopIterationsOnly?: pulumi.Input<boolean>;
}

export interface AutomationWorkflowTrigger {
    /**
     * If specified the workflow is getting triggered based on events
     */
    event?: pulumi.Input<inputs.AutomationWorkflowTriggerEvent>;
    /**
     * If specified the workflow is getting triggered based on a schedule
     */
    schedule?: pulumi.Input<inputs.AutomationWorkflowTriggerSchedule>;
}

export interface AutomationWorkflowTriggerEvent {
    /**
     * If specified the workflow is getting triggered based on a schedule
     */
    active?: pulumi.Input<boolean>;
    /**
     * If specified the workflow is getting triggered based on events
     */
    config?: pulumi.Input<inputs.AutomationWorkflowTriggerEventConfig>;
}

export interface AutomationWorkflowTriggerEventConfig {
    /**
     * Contains trigger configuration based on Davis Events. Either `davisEvent`, `davisProblem`, `davisEvent` or `config` need to set
     */
    davisEvent?: pulumi.Input<inputs.AutomationWorkflowTriggerEventConfigDavisEvent>;
    /**
     * Contains trigger configuration based on Davis Problems. Either `davisEvent`, `davisProblem`, `davisEvent` or `config` need to set
     */
    davisProblem?: pulumi.Input<inputs.AutomationWorkflowTriggerEventConfigDavisProblem>;
    /**
     * Contains trigger configuration based on Davis Problems. Either `davisEvent`, `davisProblem`, `davisEvent` or `config` need to set
     */
    event?: pulumi.Input<inputs.AutomationWorkflowTriggerEventConfigEvent>;
    /**
     * The type of the trigger configuration to expect within attribute `value`. Only required if `config` is set. Must not be set if `davisEvent`, `davisProblem` or `event` are present
     */
    type?: pulumi.Input<string>;
    /**
     * Contains JSON encoded trigger configuration if the trigger type is neither `davisEvent`, `davisProblem` or `event`. It requires the attribute `type` to be set in combination
     */
    value?: pulumi.Input<string>;
}

export interface AutomationWorkflowTriggerEventConfigDavisEvent {
    /**
     * key/value pairs for entity tags to match for. For tags that don't require a value, just specify an empty string as value. Omit this attribute if all entities should match
     */
    entityTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether all or just any of the configured entity tags need to match. Possible values: `all` and `any`. Omit this attribute if all entities should match
     */
    entityTagsMatch?: pulumi.Input<string>;
    /**
     * If set to `true` closing a problem also is considered an event that triggers the execution
     */
    onProblemClose?: pulumi.Input<boolean>;
    /**
     * The types of davis events to trigger an execution. Possible values are `CUSTOM_ANNOTATION`, `APPLICATION_UNEXPECTED_HIGH_LOAD`, `APPLICATION_UNEXPECTED_LOW_LOAD`, `APPLICATION_OVERLOAD_PREVENTION`, `APPLICATION_SLOWDOWN`, `AVAILABILITY_EVENT`, `LOG_AVAILABILITY`, `EC2_HIGH_CPU`, `RDS_BACKUP_COMPLETED`, `RDS_BACKUP_STARTED`, `SYNTHETIC_GLOBAL_OUTAGE`, `SYNTHETIC_LOCAL_OUTAGE`, `SYNTHETIC_TEST_LOCATION_SLOWDOWN`, `CUSTOM_CONFIGURATION`, `PROCESS_NA_HIGH_CONN_FAIL_RATE`, `OSI_HIGH_CPU`, `CUSTOM_ALERT`, `CUSTOM_APP_CRASH_RATE_INCREASED`, `CUSTOM_APPLICATION_ERROR_RATE_INCREASED`, `CUSTOM_APPLICATION_UNEXPECTED_HIGH_LOAD`, `CUSTOM_APPLICATION_UNEXPECTED_LOW_LOAD`, `CUSTOM_APPLICATION_OVERLOAD_PREVENTION`, `CUSTOM_APPLICATION_SLOWDOWN`, `PGI_CUSTOM_AVAILABILITY`, `PGI_CUSTOM_ERROR`, `CUSTOM_INFO`, `PGI_CUSTOM_PERFORMANCE`, `CUSTOM_DEPLOYMENT`, `DEPLOYMENT_CHANGED_CHANGE`, `DEPLOYMENT_CHANGED_NEW`, `DEPLOYMENT_CHANGED_REMOVED`, `EBS_VOLUME_HIGH_LATENCY`, `ERROR_EVENT`, `LOG_ERROR`, `ESXI_HOST_CONNECTION_FAILED`, `ESXI_HOST_CONNECTION_LOST`, `ESXI_GUEST_CPU_LIMIT_REACHED`, `ESXI_GUEST_ACTIVE_SWAP_WAIT`, `ESXI_HOST_CPU_SATURATION`, `ESXI_HOST_MEMORY_SATURATION`, `ESXI_HOST_MAINTENANCE`, `ESXI_HOST_NETWORK_PROBLEMS`, `ESXI_HOST_NO_CONNECTION`, `ESXI_HOST_SHUTDOWN`, `ESXI_HOST_DISK_SLOW`, `ESXI_HOST_UP`, `ESXI_HOST_TIMEOUT`, `ESXI_VM_IMPACT_HOST_CPU_SATURATION`, `ESXI_VM_IMPACT_HOST_MEMORY_SATURATION`, `DATABASE_CONNECTION_FAILURE`, `RDS_AZ_FAILOVER_COMPLETED`, `RDS_AZ_FAILOVER_STARTED`, `SERVICE_ERROR_RATE_INCREASED`, `RDS_HIGH_LATENCY`, `OSI_NIC_UTILIZATION_HIGH`, `OSI_NIC_ERRORS_HIGH`, `PGI_HAPROXY_QUEUED_REQUESTS_HIGH`, `PGI_RMQ_HIGH_FILE_DESC_USAGE`, `PGI_RMQ_HIGH_MEM_USAGE`, `PGI_RMQ_HIGH_PROCESS_USAGE`, `PGI_RMQ_HIGH_SOCKETS_USAGE`, `OSI_NIC_DROPPED_PACKETS_HIGH`, `PGI_MYSQL_SLOW_QUERIES_RATE_HIGH`, `PGI_KEYSTONE_SLOW`, `PGI_HAPROXY_SESSION_USAGE_HIGH`, `HOST_LOG_AVAILABILITY`, `HOST_LOG_ERROR`, `OSI_GRACEFULLY_SHUTDOWN`, `HOST_LOG_MATCHED`, `OSI_UNEXPECTEDLY_UNAVAILABLE`, `HOST_LOG_PERFORMANCE`, `HOST_OF_SERVICE_UNAVAILABLE`, `HTTP_CHECK_GLOBAL_OUTAGE`, `HTTP_CHECK_LOCAL_OUTAGE`, `HTTP_CHECK_TEST_LOCATION_SLOWDOWN`, `ESXI_HOST_DISK_QUEUE_SLOW`, `LOG_MATCHED`, `APPLICATION_ERROR_RATE_INCREASED`, `APPLICATION_JS_FRAMEWORK_DETECTED`, `AWS_LAMBDA_HIGH_ERROR_RATE`, `ELB_HIGH_BACKEND_ERROR_RATE`, `ELB_HIGH_FRONTEND_ERROR_RATE`, `ELB_HIGH_UNHEALTHY_HOST_RATE`, `PROCESS_HIGH_GC_ACTIVITY`, `ESXI_HOST_DATASTORE_LOW_DISK_SPACE`, `OSI_DOCKER_DEVICEMAPPER_LOW_DATA_SPACE`, `OSI_LOW_DISK_SPACE`, `OSI_DOCKER_DEVICEMAPPER_LOW_METADATA_SPACE`, `OSI_DISK_LOW_INODES`, `PGI_RMQ_LOW_DISK_SPACE`, `RDS_LOW_STORAGE_SPACE`, `MARKED_FOR_TERMINATION`, `PROCESS_MEMORY_RESOURCE_EXHAUSTED`, `OSI_HIGH_MEMORY`, `MOBILE_APP_CRASH_RATE_INCREASED`, `MOBILE_APPLICATION_ERROR_RATE_INCREASED`, `MOBILE_APPLICATION_OVERLOAD_PREVENTION`, `MOBILE_APPLICATION_SLOWDOWN`, `MOBILE_APPLICATION_UNEXPECTED_HIGH_LOAD`, `MOBILE_APPLICATION_UNEXPECTED_LOW_LOAD`, `MONITORING_UNAVAILABLE`, `PROCESS_NA_HIGH_LOSS_RATE`, `PGI_KEYSTONE_UNHEALTHY`, `ESXI_HOST_OVERLOADED_STORAGE`, `PERFORMANCE_EVENT`, `LOG_PERFORMANCE`, `PGI_LOG_AVAILABILITY`, `PGI_CRASHED_INFO`, `PROCESS_CRASHED`, `PGI_LOG_ERROR`, `PG_LOW_INSTANCE_COUNT`, `PGI_LOG_MATCHED`, `PGI_MEMDUMP`, `PGI_LOG_PERFORMANCE`, `PROCESS_RESTART`, `PGI_UNAVAILABLE`, `RDS_HIGH_CPU`, `RDS_LOW_MEMORY`, `RDS_OF_SERVICE_UNAVAILABLE`, `RESOURCE_CONTENTION_EVENT`, `SERVICE_SLOWDOWN`, `RDS_RESTART`, `RDS_RESTART_SEQUENCE`, `PGI_OF_SERVICE_UNAVAILABLE`, `OSI_SLOW_DISK`, `SYNTHETIC_NODE_OUTAGE`, `SYNTHETIC_PRIVATE_LOCATION_OUTAGE`, `EXTERNAL_SYNTHETIC_TEST_OUTAGE`, `EXTERNAL_SYNTHETIC_TEST_SLOWDOWN`, `PROCESS_THREADS_RESOURCE_EXHAUSTED`, `SERVICE_UNEXPECTED_HIGH_LOAD`, `SERVICE_UNEXPECTED_LOW_LOAD`, `ESXI_VM_DISCONNECTED`, `OPENSTACK_VM_LAUNCH_FAILED`, `ESXI_HOST_VM_MOTION_LEFT`, `ESXI_HOST_VM_MOTION_ARRIVED`, `ESXI_VM_MOTION`, `OPENSTACK_VM_MOTION`, `ESXI_VM_POWER_OFF`, `ESXI_VM_SHUTDOWN`, `OPENSTACK_HOST_VM_SHUTDOWN`, `ESXI_VM_START`, `ESXI_HOST_VM_STARTED`, `OPENSTACK_HOST_VM_STARTED`
     */
    types: pulumi.Input<pulumi.Input<string>[]>;
}

export interface AutomationWorkflowTriggerEventConfigDavisProblem {
    categories: pulumi.Input<pulumi.Input<inputs.AutomationWorkflowTriggerEventConfigDavisProblemCategory>[]>;
    customFilter?: pulumi.Input<string>;
    /**
     * key/value pairs for entity tags to match for. For tags that don't require a value, just specify an empty string as value. Omit this attribute if all entities should match
     */
    entityTags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether all or just any of the configured entity tags need to match. Possible values: `all` and `any`. Omit this attribute if all entities should match
     */
    entityTagsMatch?: pulumi.Input<string>;
    /**
     * If set to `true` closing a problem also is considered an event that triggers the execution
     */
    onProblemClose?: pulumi.Input<boolean>;
}

export interface AutomationWorkflowTriggerEventConfigDavisProblemCategory {
    availability?: pulumi.Input<boolean>;
    custom?: pulumi.Input<boolean>;
    error?: pulumi.Input<boolean>;
    info?: pulumi.Input<boolean>;
    monitoringUnavailable?: pulumi.Input<boolean>;
    resource?: pulumi.Input<boolean>;
    slowdown?: pulumi.Input<boolean>;
}

export interface AutomationWorkflowTriggerEventConfigEvent {
    /**
     * Possible values: `events` or `bizevents`. Default: `events`
     */
    eventType?: pulumi.Input<string>;
    /**
     * A query based on DQL for events that trigger executions
     */
    query: pulumi.Input<string>;
}

export interface AutomationWorkflowTriggerSchedule {
    /**
     * The trigger is enabled (`true`) or not (`false`). Default is `false`
     */
    active?: pulumi.Input<boolean>;
    /**
     * Advanced restrictions for the schedule to trigger executions
     */
    filterParameters?: pulumi.Input<inputs.AutomationWorkflowTriggerScheduleFilterParameters>;
    /**
     * Refers to a configured rule that determines at which days the schedule should be active. If not specified it implies that the schedule is valid every day
     */
    rule?: pulumi.Input<string>;
    /**
     * A time zone the scheduled times to align with. If not specified it will be chosen automatically based on the location of the Dynatrace Server
     */
    timeZone?: pulumi.Input<string>;
    /**
     * Detailed configuration about the timing constraints that trigger the execution
     */
    trigger: pulumi.Input<inputs.AutomationWorkflowTriggerScheduleTrigger>;
}

export interface AutomationWorkflowTriggerScheduleFilterParameters {
    /**
     * If specified, the schedule will end triggering executions af the given amount of executions. Minimum: 1, Maximum: 10
     */
    count?: pulumi.Input<number>;
    /**
     * If specified, the schedule won't trigger executions before the given date
     */
    earliestStart?: pulumi.Input<string>;
    /**
     * If specified, the schedule won't trigger executions before the given time
     */
    earliestStartTime?: pulumi.Input<string>;
    /**
     * If specified, the schedule won't trigger exeuctions on the given dates
     */
    excludeDates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If specified, the schedule will trigger executions on the given dates, even if the main configuration prohibits it
     */
    includeDates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If specified, the schedule won't trigger executions after the given date
     */
    until?: pulumi.Input<string>;
}

export interface AutomationWorkflowTriggerScheduleTrigger {
    /**
     * Triggers the schedule every n minutes within a given time frame - specifying the end time on any valid day in 24h format (e.g. 14:22:44). Conflicts with `cron` and `time`. Required with `intervalMinutes` and `betweenStart`
     */
    betweenEnd?: pulumi.Input<string>;
    /**
     * Triggers the schedule every n minutes within a given time frame - specifying the start time on any valid day in 24h format (e.g. 13:22:44). Conflicts with `cron` and `time`. Required with `intervalMinutes` and `betweenEnd`
     */
    betweenStart?: pulumi.Input<string>;
    /**
     * Configures using cron syntax. Conflicts with `time`, `intervalMinutes`, `betweenStart` and `betweenEnd`
     */
    cron?: pulumi.Input<string>;
    /**
     * Triggers the schedule every n minutes within a given time frame. Minimum: 1, Maximum: 720. Required with `betweenStart` and `betweenEnd`. Conflicts with `cron` and `time`
     */
    intervalMinutes?: pulumi.Input<number>;
    /**
     * Specifies a fixed time the schedule will trigger at in 24h format (e.g. `14:23:59`). Conflicts with `cron`, `intervalMinutes`, `betweenStart` and `betweenEnd`
     */
    time?: pulumi.Input<string>;
}

export interface AutotagEntitySelectorBasedRule {
    /**
     * The rule is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Changes applied to the value after applying the value format. Possible values are `LEAVE_TEXT_AS_IS`, `TO_LOWER_CASE` and `TO_UPPER_CASE`. Default is `LEAVE_TEXT_AS_IS`
     */
    normalization?: pulumi.Input<string>;
    /**
     * The entity selector string, by which the entities are selected
     */
    selector?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the entity-selector-based auto-tag. If specified, the tag is used in the `name:valueFormat` format. 
     *
     * For example, you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`
     */
    valueFormat?: pulumi.Input<string>;
}

export interface AutotagRule {
    /**
     * A list of matching rules for the management zone. The management zone applies only if **all** conditions are fulfilled
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.AutotagRuleCondition>[]>;
    /**
     * The rule is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Changes applied to the value after applying the value format. Possible values are `LEAVE_TEXT_AS_IS`, `TO_LOWER_CASE` and `TO_UPPER_CASE`. Default is `LEAVE_TEXT_AS_IS`
     */
    normalization?: pulumi.Input<string>;
    /**
     * How to apply the management zone to underlying entities:
     *    - `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services
     *    - `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services
     *    - `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups
     *    - `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by matching process groups
     *    - `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts
     *    - `CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`: Apply to custom devices in matching custom device groups
     *    - `AZURE_TO_PG`: Apply to process groups connected to matching Azure entities
     *    - `AZURE_TO_SERVICE`: Apply to services provided by matching Azure entities
     */
    propagationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Dynatrace entities the management zone can be applied to
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the auto-tag. If specified, the tag is used in the `name:valueFormat` format.  For example, you can extend the `Infrastructure` tag to `Infrastructure:Windows` and `Infrastructure:Linux`.  You can use the following placeholders here:  * `{AwsAutoScalingGroup:Name}`  * `{AwsAvailabilityZone:Name}`  * `{AwsElasticLoadBalancer:Name}`  * `{AwsRelationalDatabaseService:DBName}`  * `{AwsRelationalDatabaseService:Endpoint}`  * `{AwsRelationalDatabaseService:Engine}`  * `{AwsRelationalDatabaseService:InstanceClass}`  * `{AwsRelationalDatabaseService:Name}`  * `{AwsRelationalDatabaseService:Port}`  * `{AzureRegion:Name}`  * `{AzureScaleSet:Name}`  * `{AzureVm:Name}`  * `{CloudFoundryOrganization:Name}`  * `{CustomDevice:DetectedName}`  * `{CustomDevice:DnsName}`  * `{CustomDevice:IpAddress}`  * `{CustomDevice:Port}`  * `{DockerContainerGroupInstance:ContainerName}`  * `{DockerContainerGroupInstance:FullImageName}`  * `{DockerContainerGroupInstance:ImageVersion}`  * `{DockerContainerGroupInstance:StrippedImageName}`  * `{ESXIHost:HardwareModel}`  * `{ESXIHost:HardwareVendor}`  * `{ESXIHost:Name}`  * `{ESXIHost:ProductName}`  * `{ESXIHost:ProductVersion}`  * `{Ec2Instance:AmiId}`  * `{Ec2Instance:BeanstalkEnvironmentName}`  * `{Ec2Instance:InstanceId}`  * `{Ec2Instance:InstanceType}`  * `{Ec2Instance:LocalHostName}`  * `{Ec2Instance:Name}`  * `{Ec2Instance:PublicHostName}`  * `{Ec2Instance:SecurityGroup}`  * `{GoogleComputeInstance:Id}`  * `{GoogleComputeInstance:IpAddresses}`  * `{GoogleComputeInstance:MachineType}`  * `{GoogleComputeInstance:Name}`  * `{GoogleComputeInstance:ProjectId}`  * `{GoogleComputeInstance:Project}`  * `{Host:AWSNameTag}`  * `{Host:AixLogicalCpuCount}`  * `{Host:AzureHostName}`  * `{Host:AzureSiteName}`  * `{Host:BoshDeploymentId}`  * `{Host:BoshInstanceId}`  * `{Host:BoshInstanceName}`  * `{Host:BoshName}`  * `{Host:BoshStemcellVersion}`  * `{Host:CpuCores}`  * `{Host:DetectedName}`  * `{Host:Environment:AppName}`  * `{Host:Environment:BoshReleaseVersion}`  * `{Host:Environment:Environment}`  * `{Host:Environment:Link}`  * `{Host:Environment:Organization}`  * `{Host:Environment:Owner}`  * `{Host:Environment:Support}`  * `{Host:IpAddress}`  * `{Host:LogicalCpuCores}`  * `{Host:OneAgentCustomHostName}`  * `{Host:OperatingSystemVersion}`  * `{Host:PaasMemoryLimit}`  * `{HostGroup:Name}`  * `{KubernetesCluster:Name}`  * `{KubernetesNode:DetectedName}`  * `{OpenstackAvailabilityZone:Name}`  * `{OpenstackZone:Name}`  * `{OpenstackComputeNode:Name}`  * `{OpenstackProject:Name}`  * `{OpenstackVm:UnstanceType}`  * `{OpenstackVm:Name}`  * `{OpenstackVm:SecurityGroup}`  * `{ProcessGroup:AmazonECRImageAccountId}`  * `{ProcessGroup:AmazonECRImageRegion}`  * `{ProcessGroup:AmazonECSCluster}`  * `{ProcessGroup:AmazonECSContainerName}`  * `{ProcessGroup:AmazonECSFamily}`  * `{ProcessGroup:AmazonECSRevision}`  * `{ProcessGroup:AmazonLambdaFunctionName}`  * `{ProcessGroup:AmazonRegion}`  * `{ProcessGroup:ApacheConfigPath}`  * `{ProcessGroup:ApacheSparkMasterIpAddress}`  * `{ProcessGroup:AspDotNetCoreApplicationPath}`  * `{ProcessGroup:AspDotNetCoreApplicationPath}`  * `{ProcessGroup:AzureHostName}`  * `{ProcessGroup:AzureSiteName}`  * `{ProcessGroup:CassandraClusterName}`  * `{ProcessGroup:CatalinaBase}`  * `{ProcessGroup:CatalinaHome}`  * `{ProcessGroup:CloudFoundryAppId}`  * `{ProcessGroup:CloudFoundryAppName}`  * `{ProcessGroup:CloudFoundryInstanceIndex}`  * `{ProcessGroup:CloudFoundrySpaceId}`  * `{ProcessGroup:CloudFoundrySpaceName}`  * `{ProcessGroup:ColdFusionJvmConfigFile}`  * `{ProcessGroup:ColdFusionServiceName}`  * `{ProcessGroup:CommandLineArgs}`  * `{ProcessGroup:DetectedName}`  * `{ProcessGroup:DotNetCommandPath}`  * `{ProcessGroup:DotNetCommand}`  * `{ProcessGroup:DotNetClusterId}`  * `{ProcessGroup:DotNetNodeId}`  * `{ProcessGroup:ElasticsearchClusterName}`  * `{ProcessGroup:ElasticsearchNodeName}`  * `{ProcessGroup:EquinoxConfigPath}`  * `{ProcessGroup:ExeName}`  * `{ProcessGroup:ExePath}`  * `{ProcessGroup:GlassFishDomainName}`  * `{ProcessGroup:GlassFishInstanceName}`  * `{ProcessGroup:GoogleAppEngineInstance}`  * `{ProcessGroup:GoogleAppEngineService}`  * `{ProcessGroup:GoogleCloudProject}`  * `{ProcessGroup:HybrisBinDirectory}`  * `{ProcessGroup:HybrisConfigDirectory}`  * `{ProcessGroup:HybrisConfigDirectory}`  * `{ProcessGroup:HybrisDataDirectory}`  * `{ProcessGroup:IBMCicsRegion}`  * `{ProcessGroup:IBMCtgName}`  * `{ProcessGroup:IBMImsConnectRegion}`  * `{ProcessGroup:IBMImsControlRegion}`  * `{ProcessGroup:IBMImsMessageProcessingRegion}`  * `{ProcessGroup:IBMImsSoapGwName}`  * `{ProcessGroup:IBMIntegrationNodeName}`  * `{ProcessGroup:IBMIntegrationServerName}`  * `{ProcessGroup:IISAppPool}`  * `{ProcessGroup:IISRoleName}`  * `{ProcessGroup:JbossHome}`  * `{ProcessGroup:JbossMode}`  * `{ProcessGroup:JbossServerName}`  * `{ProcessGroup:JavaJarFile}`  * `{ProcessGroup:JavaJarPath}`  * `{ProcessGroup:JavaMainCLass}`  * `{ProcessGroup:KubernetesBasePodName}`  * `{ProcessGroup:KubernetesContainerName}`  * `{ProcessGroup:KubernetesFullPodName}`  * `{ProcessGroup:KubernetesNamespace}`  * `{ProcessGroup:KubernetesPodUid}`  * `{ProcessGroup:MssqlInstanceName}`  * `{ProcessGroup:NodeJsAppBaseDirectory}`  * `{ProcessGroup:NodeJsAppName}`  * `{ProcessGroup:NodeJsScriptName}`  * `{ProcessGroup:OracleSid}`  * `{ProcessGroup:PHPScriptPath}`  * `{ProcessGroup:PHPWorkingDirectory}`  * `{ProcessGroup:Ports}`  * `{ProcessGroup:RubyAppRootPath}`  * `{ProcessGroup:RubyScriptPath}`  * `{ProcessGroup:SoftwareAGInstallRoot}`  * `{ProcessGroup:SoftwareAGProductPropertyName}`  * `{ProcessGroup:SpringBootAppName}`  * `{ProcessGroup:SpringBootProfileName}`  * `{ProcessGroup:SpringBootStartupClass}`  * `{ProcessGroup:TIBCOBusinessWorksAppNodeName}`  * `{ProcessGroup:TIBCOBusinessWorksAppSpaceName}`  * `{ProcessGroup:TIBCOBusinessWorksCeAppName}`  * `{ProcessGroup:TIBCOBusinessWorksCeVersion}`  * `{ProcessGroup:TIBCOBusinessWorksDomainName}`  * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFilePath}`  * `{ProcessGroup:TIBCOBusinessWorksEnginePropertyFile}`  * `{ProcessGroup:TIBCOBusinessWorksHome}`  * `{ProcessGroup:VarnishInstanceName}`  * `{ProcessGroup:WebLogicClusterName}`  * `{ProcessGroup:WebLogicDomainName}`  * `{ProcessGroup:WebLogicHome}`  * `{ProcessGroup:WebLogicName}`  * `{ProcessGroup:WebSphereCellName}`  * `{ProcessGroup:WebSphereClusterName}`  * `{ProcessGroup:WebSphereNodeName}`  * `{ProcessGroup:WebSphereServerName}`  * `{ProcessGroup:ActorSystem}`  * `{Service:STGServerName}`  * `{Service:DatabaseHostName}`  * `{Service:DatabaseName}`  * `{Service:DatabaseVendor}`  * `{Service:DetectedName}`  * `{Service:EndpointPath}`  * `{Service:EndpointPathGatewayUrl}`  * `{Service:IIBApplicationName}`  * `{Service:MessageListenerClassName}`  * `{Service:Port}`  * `{Service:PublicDomainName}`  * `{Service:RemoteEndpoint}`  * `{Service:RemoteName}`  * `{Service:WebApplicationId}`  * `{Service:WebContextRoot}`  * `{Service:WebServerName}`  * `{Service:WebServiceNamespace}`  * `{Service:WebServiceName}`  * `{VmwareDatacenter:Name}`  * `{VmwareVm:Name}`
     */
    valueFormat?: pulumi.Input<string>;
}

export interface AutotagRuleCondition {
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    applicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionApplicationTypeComparison>[]>;
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     */
    applicationTypes?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionApplicationType>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     */
    azureComputeModeComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionAzureComputeModeComparison>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     *
     * @deprecated You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
     */
    azureComputeModes?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionAzureComputeMode>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     *
     * @deprecated You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
     */
    azureSkuComparisions?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionAzureSkuComparision>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     */
    azureSkus?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionAzureSkus>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     *
     * @deprecated You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
     */
    baseComparisonBasics?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionBaseComparisonBasic>[]>;
    /**
     * Fallback for not yet known type
     *
     * @deprecated 'base_condition_key' is deprecated. You should use 'key'
     */
    baseConditionKeys?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionBaseConditionKey>[]>;
    /**
     * Comparison for `BITNESS` attributes
     *
     * @deprecated You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
     */
    bitnessComparisions?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionBitnessComparision>[]>;
    /**
     * Comparison for `BITNESS` attributes
     */
    bitnesses?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionBitness>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     *
     * @deprecated You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
     */
    cloudTypeComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionCloudTypeComparison>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     */
    cloudTypes?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionCloudType>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     */
    comparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    customApplicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionCustomApplicationTypeComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     */
    customApplicationTypes?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionCustomApplicationType>[]>;
    /**
     * Key for Custom Host Metadata
     *
     * @deprecated 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
     */
    customHostMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionCustomHostMetadataConditionKey>[]>;
    /**
     * Key for Custom Host Metadata
     */
    customHostMetadatas?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionCustomHostMetadata>[]>;
    /**
     * Key for Custom Process Metadata
     *
     * @deprecated 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
     */
    customProcessMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionCustomProcessMetadataConditionKey>[]>;
    /**
     * Key for Custom Process Metadata
     */
    customProcessMetadatas?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionCustomProcessMetadata>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     */
    databaseTopologies?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionDatabaseTopology>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    databaseTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionDatabaseTopologyComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     *
     * @deprecated You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
     */
    dcrumDecoderComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionDcrumDecoderComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     */
    dcrumDecoders?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionDcrumDecoder>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     */
    entities?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionEntity>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     *
     * @deprecated You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
     */
    entityIdComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionEntityIdComparison>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     */
    hostTeches?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionHostTech>[]>;
    /**
     * `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     *
     * @deprecated `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     */
    hypervisorTypeComparisions?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionHypervisorTypeComparision>[]>;
    /**
     * Comparison for `HYPERVISOR_TYPE` attributes
     */
    hypervisors?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionHypervisor>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     *
     * @deprecated You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedNameComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIndexedNameComparison>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     */
    indexedNames?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIndexedName>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     *
     * @deprecated You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedStringComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIndexedStringComparison>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     */
    indexedStrings?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIndexedString>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     *
     * @deprecated You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedTagComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIndexedTagComparison>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     */
    indexedTags?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIndexedTag>[]>;
    /**
     * Comparison for `INTEGER` attributes
     *
     * @deprecated You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
     */
    integerComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIntegerComparison>[]>;
    /**
     * Comparison for `INTEGER` attributes
     */
    integers?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionInteger>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     *
     * @deprecated You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
     */
    ipaddressComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIpaddressComparison>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     */
    ipaddresses?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionIpaddress>[]>;
    /**
     * Fallback for not yet known type
     */
    keys?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionKey>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     *
     * @deprecated You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
     */
    mobilePlatformComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionMobilePlatformComparison>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     */
    mobilePlatforms?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionMobilePlatform>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     */
    osArches?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionOsArch>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     */
    osTypes?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionOsType>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     *
     * @deprecated You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
     */
    osarchitectureComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionOsarchitectureComparison>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     *
     * @deprecated You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
     */
    ostypeComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionOstypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     *
     * @deprecated You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
     */
    paasTypeComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionPaasTypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     */
    paasTypes?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionPaasType>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     *
     * @deprecated 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
     */
    processMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionProcessMetadataConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     */
    processMetadatas?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionProcessMetadata>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     */
    serviceTopologies?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionServiceTopology>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionServiceTopologyComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     *
     * @deprecated You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTypeComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionServiceTypeComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     */
    serviceTypes?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionServiceType>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     *
     * @deprecated You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleHostTechComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionSimpleHostTechComparison>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     *
     * @deprecated You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleTechComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionSimpleTechComparison>[]>;
    /**
     * Comparison for `STRING` attributes
     *
     * @deprecated You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
     */
    stringComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionStringComparison>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     *
     * @deprecated 'string_condition_key' is deprecated. You should use 'string_key'
     */
    stringConditionKeys?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionStringConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     */
    stringKeys?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionStringKey>[]>;
    /**
     * Comparison for `STRING` attributes
     */
    strings?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionString>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     *
     * @deprecated You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
     */
    syntheticEngineTypeComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionSyntheticEngineTypeComparison>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     */
    syntheticEngines?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionSyntheticEngine>[]>;
    /**
     * Comparison for `TAG` attributes
     *
     * @deprecated You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
     */
    tagComparisons?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionTagComparison>[]>;
    /**
     * Comparison for `TAG` attributes
     */
    tags?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionTag>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     */
    teches?: pulumi.Input<pulumi.Input<inputs.AutotagRuleConditionTech>[]>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionApplicationType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionAzureComputeMode {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionAzureComputeModeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionAzureSkuComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be AZURE_SKU
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionAzureSkus {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionBaseComparisonBasic {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionBaseConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionBitness {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionBitnessComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be BITNESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCloudType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCloudTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CLOUD_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomApplicationType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CUSTOM_APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomHostMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.AutotagRuleConditionCustomHostMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomHostMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be HOST_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomHostMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomHostMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.AutotagRuleConditionCustomProcessMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be PROCESS_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomProcessMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionCustomProcessMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionDatabaseTopology {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionDatabaseTopologyComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DATABASE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionDcrumDecoder {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionDcrumDecoderComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DCRUM_DECODER_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionEntity {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionEntityIdComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be ENTITY_ID
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionHostTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.AutotagRuleConditionHostTechValue>;
}

export interface AutotagRuleConditionHostTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface AutotagRuleConditionHypervisor {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionHypervisorTypeComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be HYPERVISOR_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionIndexedName {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionIndexedNameComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_NAME
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionIndexedString {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionIndexedStringComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionIndexedTag {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.AutotagRuleConditionIndexedTagValue>;
}

export interface AutotagRuleConditionIndexedTagComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.AutotagRuleConditionIndexedTagComparisonValue>;
}

export interface AutotagRuleConditionIndexedTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionIndexedTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionInteger {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface AutotagRuleConditionIntegerComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INTEGER
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface AutotagRuleConditionIpaddress {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionIpaddressComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be IP_ADDRESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionMobilePlatform {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionMobilePlatformComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be MOBILE_PLATFORM
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionOsArch {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionOsType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionOsarchitectureComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_ARCHITECTURE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionOstypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionPaasType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionPaasTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be PAAS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be PROCESS_PREDEFINED_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionServiceTopology {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionServiceTopologyComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionServiceType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionServiceTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionSimpleHostTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_HOST_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.AutotagRuleConditionSimpleHostTechComparisonValue>;
}

export interface AutotagRuleConditionSimpleHostTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface AutotagRuleConditionSimpleTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.AutotagRuleConditionSimpleTechComparisonValue>;
}

export interface AutotagRuleConditionSimpleTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface AutotagRuleConditionString {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionStringComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionStringConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be `STRING`
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionStringKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface AutotagRuleConditionSyntheticEngine {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionSyntheticEngineTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SYNTHETIC_ENGINE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionTag {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.AutotagRuleConditionTagValue>;
}

export interface AutotagRuleConditionTagComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.AutotagRuleConditionTagComparisonValue>;
}

export interface AutotagRuleConditionTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface AutotagRuleConditionTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.AutotagRuleConditionTechValue>;
}

export interface AutotagRuleConditionTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface AutotagRulesRules {
    rules: pulumi.Input<pulumi.Input<inputs.AutotagRulesRulesRule>[]>;
}

export interface AutotagRulesRulesRule {
    /**
     * no documentation available
     */
    attributeRule?: pulumi.Input<inputs.AutotagRulesRulesRuleAttributeRule>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The documentation of the entity selector can be found [here](https://dt-url.net/apientityselector).
     */
    entitySelector?: pulumi.Input<string>;
    /**
     * Possible Values: `ME`, `SELECTOR`
     */
    type: pulumi.Input<string>;
    /**
     * Type '{' for placeholder suggestions
     */
    valueFormat?: pulumi.Input<string>;
    /**
     * Possible Values: `Leavetextas_is`, `Tolowercase`, `Touppercase`
     */
    valueNormalization: pulumi.Input<string>;
}

export interface AutotagRulesRulesRuleAttributeRule {
    /**
     * Apply to process groups connected to matching Azure entities
     */
    azureToPgpropagation?: pulumi.Input<boolean>;
    /**
     * Apply to services provided by matching Azure entities
     */
    azureToServicePropagation?: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    conditions: pulumi.Input<inputs.AutotagRulesRulesRuleAttributeRuleConditions>;
    /**
     * Possible Values: `APPLICATION`, `AWS_APPLICATION_LOAD_BALANCER`, `AWS_CLASSIC_LOAD_BALANCER`, `AWS_NETWORK_LOAD_BALANCER`, `AWS_RELATIONAL_DATABASE_SERVICE`, `AZURE`, `CUSTOM_APPLICATION`, `CUSTOM_DEVICE`, `DCRUM_APPLICATION`, `ESXI_HOST`, `EXTERNAL_SYNTHETIC_TEST`, `HOST`, `HTTP_CHECK`, `MOBILE_APPLICATION`, `PROCESS_GROUP`, `SERVICE`, `SYNTHETIC_TEST`
     */
    entityType: pulumi.Input<string>;
    /**
     * Apply to processes running on matching hosts
     */
    hostToPgpropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying hosts of matching process groups
     */
    pgToHostPropagation?: pulumi.Input<boolean>;
    /**
     * Apply to all services provided by the process groups
     */
    pgToServicePropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying hosts of matching services
     */
    serviceToHostPropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying process groups of matching services
     */
    serviceToPgpropagation?: pulumi.Input<boolean>;
}

export interface AutotagRulesRulesRuleAttributeRuleConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.AutotagRulesRulesRuleAttributeRuleConditionsCondition>[]>;
}

export interface AutotagRulesRulesRuleAttributeRuleConditionsCondition {
    /**
     * Case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Dynamic key
     */
    dynamicKey?: pulumi.Input<string>;
    /**
     * Key source
     */
    dynamicKeySource?: pulumi.Input<string>;
    /**
     * Value
     */
    entityId?: pulumi.Input<string>;
    /**
     * Value
     */
    enumValue?: pulumi.Input<string>;
    /**
     * Value
     */
    integerValue?: pulumi.Input<number>;
    /**
     * Possible Values: `APPMON_SERVER_NAME`, `APPMON_SYSTEM_PROFILE_NAME`, `AWS_ACCOUNT_ID`, `AWS_ACCOUNT_NAME`, `AWS_APPLICATION_LOAD_BALANCER_NAME`, `AWS_APPLICATION_LOAD_BALANCER_TAGS`, `AWS_AUTO_SCALING_GROUP_NAME`, `AWS_AUTO_SCALING_GROUP_TAGS`, `AWS_AVAILABILITY_ZONE_NAME`, `AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS`, `AWS_CLASSIC_LOAD_BALANCER_NAME`, `AWS_CLASSIC_LOAD_BALANCER_TAGS`, `AWS_NETWORK_LOAD_BALANCER_NAME`, `AWS_NETWORK_LOAD_BALANCER_TAGS`, `AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT`, `AWS_RELATIONAL_DATABASE_SERVICE_ENGINE`, `AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS`, `AWS_RELATIONAL_DATABASE_SERVICE_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_PORT`, `AWS_RELATIONAL_DATABASE_SERVICE_TAGS`, `AZURE_ENTITY_NAME`, `AZURE_ENTITY_TAGS`, `AZURE_MGMT_GROUP_NAME`, `AZURE_MGMT_GROUP_UUID`, `AZURE_REGION_NAME`, `AZURE_SCALE_SET_NAME`, `AZURE_SUBSCRIPTION_NAME`, `AZURE_SUBSCRIPTION_UUID`, `AZURE_TENANT_NAME`, `AZURE_TENANT_UUID`, `AZURE_VM_NAME`, `BROWSER_MONITOR_NAME`, `BROWSER_MONITOR_TAGS`, `CLOUD_APPLICATION_LABELS`, `CLOUD_APPLICATION_NAME`, `CLOUD_APPLICATION_NAMESPACE_LABELS`, `CLOUD_APPLICATION_NAMESPACE_NAME`, `CLOUD_FOUNDRY_FOUNDATION_NAME`, `CLOUD_FOUNDRY_ORG_NAME`, `CUSTOM_APPLICATION_NAME`, `CUSTOM_APPLICATION_PLATFORM`, `CUSTOM_APPLICATION_TAGS`, `CUSTOM_APPLICATION_TYPE`, `CUSTOM_DEVICE_DNS_ADDRESS`, `CUSTOM_DEVICE_GROUP_NAME`, `CUSTOM_DEVICE_GROUP_TAGS`, `CUSTOM_DEVICE_IP_ADDRESS`, `CUSTOM_DEVICE_METADATA`, `CUSTOM_DEVICE_NAME`, `CUSTOM_DEVICE_PORT`, `CUSTOM_DEVICE_TAGS`, `CUSTOM_DEVICE_TECHNOLOGY`, `DATA_CENTER_SERVICE_DECODER_TYPE`, `DATA_CENTER_SERVICE_IP_ADDRESS`, `DATA_CENTER_SERVICE_METADATA`, `DATA_CENTER_SERVICE_NAME`, `DATA_CENTER_SERVICE_PORT`, `DATA_CENTER_SERVICE_TAGS`, `DOCKER_CONTAINER_NAME`, `DOCKER_FULL_IMAGE_NAME`, `DOCKER_IMAGE_VERSION`, `EC2_INSTANCE_AMI_ID`, `EC2_INSTANCE_AWS_INSTANCE_TYPE`, `EC2_INSTANCE_AWS_SECURITY_GROUP`, `EC2_INSTANCE_BEANSTALK_ENV_NAME`, `EC2_INSTANCE_ID`, `EC2_INSTANCE_NAME`, `EC2_INSTANCE_PRIVATE_HOST_NAME`, `EC2_INSTANCE_PUBLIC_HOST_NAME`, `EC2_INSTANCE_TAGS`, `ENTERPRISE_APPLICATION_DECODER_TYPE`, `ENTERPRISE_APPLICATION_IP_ADDRESS`, `ENTERPRISE_APPLICATION_METADATA`, `ENTERPRISE_APPLICATION_NAME`, `ENTERPRISE_APPLICATION_PORT`, `ENTERPRISE_APPLICATION_TAGS`, `ESXI_HOST_CLUSTER_NAME`, `ESXI_HOST_HARDWARE_MODEL`, `ESXI_HOST_HARDWARE_VENDOR`, `ESXI_HOST_NAME`, `ESXI_HOST_PRODUCT_NAME`, `ESXI_HOST_PRODUCT_VERSION`, `ESXI_HOST_TAGS`, `EXTERNAL_MONITOR_ENGINE_DESCRIPTION`, `EXTERNAL_MONITOR_ENGINE_NAME`, `EXTERNAL_MONITOR_ENGINE_TYPE`, `EXTERNAL_MONITOR_NAME`, `EXTERNAL_MONITOR_TAGS`, `GEOLOCATION_SITE_NAME`, `GOOGLE_CLOUD_PLATFORM_ZONE_NAME`, `GOOGLE_COMPUTE_INSTANCE_ID`, `GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE`, `GOOGLE_COMPUTE_INSTANCE_NAME`, `GOOGLE_COMPUTE_INSTANCE_PROJECT`, `GOOGLE_COMPUTE_INSTANCE_PROJECT_ID`, `GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES`, `HOST_AIX_LOGICAL_CPU_COUNT`, `HOST_AIX_SIMULTANEOUS_THREADS`, `HOST_AIX_VIRTUAL_CPU_COUNT`, `HOST_ARCHITECTURE`, `HOST_AWS_NAME_TAG`, `HOST_AZURE_COMPUTE_MODE`, `HOST_AZURE_SKU`, `HOST_AZURE_WEB_APPLICATION_HOST_NAMES`, `HOST_AZURE_WEB_APPLICATION_SITE_NAMES`, `HOST_BITNESS`, `HOST_BOSH_AVAILABILITY_ZONE`, `HOST_BOSH_DEPLOYMENT_ID`, `HOST_BOSH_INSTANCE_ID`, `HOST_BOSH_INSTANCE_NAME`, `HOST_BOSH_NAME`, `HOST_BOSH_STEMCELL_VERSION`, `HOST_CLOUD_TYPE`, `HOST_CPU_CORES`, `HOST_CUSTOM_METADATA`, `HOST_DETECTED_NAME`, `HOST_GROUP_ID`, `HOST_GROUP_NAME`, `HOST_HYPERVISOR_TYPE`, `HOST_IP_ADDRESS`, `HOST_KUBERNETES_LABELS`, `HOST_LOGICAL_CPU_CORES`, `HOST_NAME`, `HOST_ONEAGENT_CUSTOM_HOST_NAME`, `HOST_OS_TYPE`, `HOST_OS_VERSION`, `HOST_PAAS_MEMORY_LIMIT`, `HOST_PAAS_TYPE`, `HOST_TAGS`, `HOST_TECHNOLOGY`, `HTTP_MONITOR_NAME`, `HTTP_MONITOR_TAGS`, `KUBERNETES_CLUSTER_NAME`, `KUBERNETES_NODE_NAME`, `KUBERNETES_SERVICE_NAME`, `MOBILE_APPLICATION_NAME`, `MOBILE_APPLICATION_PLATFORM`, `MOBILE_APPLICATION_TAGS`, `NAME_OF_COMPUTE_NODE`, `OPENSTACK_ACCOUNT_NAME`, `OPENSTACK_ACCOUNT_PROJECT_NAME`, `OPENSTACK_AVAILABILITY_ZONE_NAME`, `OPENSTACK_PROJECT_NAME`, `OPENSTACK_REGION_NAME`, `OPENSTACK_VM_INSTANCE_TYPE`, `OPENSTACK_VM_NAME`, `OPENSTACK_VM_SECURITY_GROUP`, `PROCESS_GROUP_AZURE_HOST_NAME`, `PROCESS_GROUP_AZURE_SITE_NAME`, `PROCESS_GROUP_CUSTOM_METADATA`, `PROCESS_GROUP_DETECTED_NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_LISTEN_PORT`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_PREDEFINED_METADATA`, `PROCESS_GROUP_TAGS`, `PROCESS_GROUP_TECHNOLOGY`, `PROCESS_GROUP_TECHNOLOGY_EDITION`, `PROCESS_GROUP_TECHNOLOGY_VERSION`, `QUEUE_NAME`, `QUEUE_TECHNOLOGY`, `QUEUE_VENDOR`, `SERVICE_AKKA_ACTOR_SYSTEM`, `SERVICE_CTG_SERVICE_NAME`, `SERVICE_DATABASE_HOST_NAME`, `SERVICE_DATABASE_NAME`, `SERVICE_DATABASE_TOPOLOGY`, `SERVICE_DATABASE_VENDOR`, `SERVICE_DETECTED_NAME`, `SERVICE_ESB_APPLICATION_NAME`, `SERVICE_IBM_CTG_GATEWAY_URL`, `SERVICE_MESSAGING_LISTENER_CLASS_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REMOTE_ENDPOINT`, `SERVICE_REMOTE_SERVICE_NAME`, `SERVICE_TAGS`, `SERVICE_TECHNOLOGY`, `SERVICE_TECHNOLOGY_EDITION`, `SERVICE_TECHNOLOGY_VERSION`, `SERVICE_TOPOLOGY`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_ENDPOINT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `VMWARE_DATACENTER_NAME`, `VMWARE_VM_NAME`, `WEB_APPLICATION_NAME`, `WEB_APPLICATION_NAME_PATTERN`, `WEB_APPLICATION_TAGS`, `WEB_APPLICATION_TYPE`
     */
    key: pulumi.Input<string>;
    /**
     * Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_IP_IN_RANGE`, `LOWER_THAN`, `LOWER_THAN_OR_EQUAL`, `NOT_BEGINS_WITH`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_GREATER_THAN`, `NOT_GREATER_THAN_OR_EQUAL`, `NOT_IS_IP_IN_RANGE`, `NOT_LOWER_THAN`, `NOT_LOWER_THAN_OR_EQUAL`, `NOT_REGEX_MATCHES`, `NOT_TAG_KEY_EQUALS`, `REGEX_MATCHES`, `TAG_KEY_EQUALS`
     */
    operator: pulumi.Input<string>;
    /**
     * Value
     */
    stringValue?: pulumi.Input<string>;
    /**
     * Format: `[CONTEXT]tagKey:tagValue`
     */
    tag?: pulumi.Input<string>;
}

export interface AutotagV2Rules {
    rules: pulumi.Input<pulumi.Input<inputs.AutotagV2RulesRule>[]>;
}

export interface AutotagV2RulesRule {
    /**
     * no documentation available
     */
    attributeRule?: pulumi.Input<inputs.AutotagV2RulesRuleAttributeRule>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The documentation of the entity selector can be found [here](https://dt-url.net/apientityselector).
     */
    entitySelector?: pulumi.Input<string>;
    /**
     * Possible Values: `ME`, `SELECTOR`
     */
    type: pulumi.Input<string>;
    /**
     * Type '{' for placeholder suggestions
     */
    valueFormat?: pulumi.Input<string>;
    /**
     * Possible Values: `Leavetextas_is`, `Tolowercase`, `Touppercase`
     */
    valueNormalization: pulumi.Input<string>;
}

export interface AutotagV2RulesRuleAttributeRule {
    /**
     * Apply to process groups connected to matching Azure entities
     */
    azureToPgpropagation?: pulumi.Input<boolean>;
    /**
     * Apply to services provided by matching Azure entities
     */
    azureToServicePropagation?: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    conditions: pulumi.Input<inputs.AutotagV2RulesRuleAttributeRuleConditions>;
    /**
     * Possible Values: `APPLICATION`, `AWS_APPLICATION_LOAD_BALANCER`, `AWS_CLASSIC_LOAD_BALANCER`, `AWS_NETWORK_LOAD_BALANCER`, `AWS_RELATIONAL_DATABASE_SERVICE`, `AZURE`, `CUSTOM_APPLICATION`, `CUSTOM_DEVICE`, `DCRUM_APPLICATION`, `ESXI_HOST`, `EXTERNAL_SYNTHETIC_TEST`, `HOST`, `HTTP_CHECK`, `MOBILE_APPLICATION`, `PROCESS_GROUP`, `SERVICE`, `SYNTHETIC_TEST`
     */
    entityType: pulumi.Input<string>;
    /**
     * Apply to processes running on matching hosts
     */
    hostToPgpropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying hosts of matching process groups
     */
    pgToHostPropagation?: pulumi.Input<boolean>;
    /**
     * Apply to all services provided by the process groups
     */
    pgToServicePropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying hosts of matching services
     */
    serviceToHostPropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying process groups of matching services
     */
    serviceToPgpropagation?: pulumi.Input<boolean>;
}

export interface AutotagV2RulesRuleAttributeRuleConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.AutotagV2RulesRuleAttributeRuleConditionsCondition>[]>;
}

export interface AutotagV2RulesRuleAttributeRuleConditionsCondition {
    /**
     * Case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Dynamic key
     */
    dynamicKey?: pulumi.Input<string>;
    /**
     * Key source
     */
    dynamicKeySource?: pulumi.Input<string>;
    /**
     * Value
     */
    entityId?: pulumi.Input<string>;
    /**
     * Value
     */
    enumValue?: pulumi.Input<string>;
    /**
     * Value
     */
    integerValue?: pulumi.Input<number>;
    /**
     * Possible Values: `APPMON_SERVER_NAME`, `APPMON_SYSTEM_PROFILE_NAME`, `AWS_ACCOUNT_ID`, `AWS_ACCOUNT_NAME`, `AWS_APPLICATION_LOAD_BALANCER_NAME`, `AWS_APPLICATION_LOAD_BALANCER_TAGS`, `AWS_AUTO_SCALING_GROUP_NAME`, `AWS_AUTO_SCALING_GROUP_TAGS`, `AWS_AVAILABILITY_ZONE_NAME`, `AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS`, `AWS_CLASSIC_LOAD_BALANCER_NAME`, `AWS_CLASSIC_LOAD_BALANCER_TAGS`, `AWS_NETWORK_LOAD_BALANCER_NAME`, `AWS_NETWORK_LOAD_BALANCER_TAGS`, `AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT`, `AWS_RELATIONAL_DATABASE_SERVICE_ENGINE`, `AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS`, `AWS_RELATIONAL_DATABASE_SERVICE_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_PORT`, `AWS_RELATIONAL_DATABASE_SERVICE_TAGS`, `AZURE_ENTITY_NAME`, `AZURE_ENTITY_TAGS`, `AZURE_MGMT_GROUP_NAME`, `AZURE_MGMT_GROUP_UUID`, `AZURE_REGION_NAME`, `AZURE_SCALE_SET_NAME`, `AZURE_SUBSCRIPTION_NAME`, `AZURE_SUBSCRIPTION_UUID`, `AZURE_TENANT_NAME`, `AZURE_TENANT_UUID`, `AZURE_VM_NAME`, `BROWSER_MONITOR_NAME`, `BROWSER_MONITOR_TAGS`, `CLOUD_APPLICATION_LABELS`, `CLOUD_APPLICATION_NAME`, `CLOUD_APPLICATION_NAMESPACE_LABELS`, `CLOUD_APPLICATION_NAMESPACE_NAME`, `CLOUD_FOUNDRY_FOUNDATION_NAME`, `CLOUD_FOUNDRY_ORG_NAME`, `CUSTOM_APPLICATION_NAME`, `CUSTOM_APPLICATION_PLATFORM`, `CUSTOM_APPLICATION_TAGS`, `CUSTOM_APPLICATION_TYPE`, `CUSTOM_DEVICE_DNS_ADDRESS`, `CUSTOM_DEVICE_GROUP_NAME`, `CUSTOM_DEVICE_GROUP_TAGS`, `CUSTOM_DEVICE_IP_ADDRESS`, `CUSTOM_DEVICE_METADATA`, `CUSTOM_DEVICE_NAME`, `CUSTOM_DEVICE_PORT`, `CUSTOM_DEVICE_TAGS`, `CUSTOM_DEVICE_TECHNOLOGY`, `DATA_CENTER_SERVICE_DECODER_TYPE`, `DATA_CENTER_SERVICE_IP_ADDRESS`, `DATA_CENTER_SERVICE_METADATA`, `DATA_CENTER_SERVICE_NAME`, `DATA_CENTER_SERVICE_PORT`, `DATA_CENTER_SERVICE_TAGS`, `DOCKER_CONTAINER_NAME`, `DOCKER_FULL_IMAGE_NAME`, `DOCKER_IMAGE_VERSION`, `EC2_INSTANCE_AMI_ID`, `EC2_INSTANCE_AWS_INSTANCE_TYPE`, `EC2_INSTANCE_AWS_SECURITY_GROUP`, `EC2_INSTANCE_BEANSTALK_ENV_NAME`, `EC2_INSTANCE_ID`, `EC2_INSTANCE_NAME`, `EC2_INSTANCE_PRIVATE_HOST_NAME`, `EC2_INSTANCE_PUBLIC_HOST_NAME`, `EC2_INSTANCE_TAGS`, `ENTERPRISE_APPLICATION_DECODER_TYPE`, `ENTERPRISE_APPLICATION_IP_ADDRESS`, `ENTERPRISE_APPLICATION_METADATA`, `ENTERPRISE_APPLICATION_NAME`, `ENTERPRISE_APPLICATION_PORT`, `ENTERPRISE_APPLICATION_TAGS`, `ESXI_HOST_CLUSTER_NAME`, `ESXI_HOST_HARDWARE_MODEL`, `ESXI_HOST_HARDWARE_VENDOR`, `ESXI_HOST_NAME`, `ESXI_HOST_PRODUCT_NAME`, `ESXI_HOST_PRODUCT_VERSION`, `ESXI_HOST_TAGS`, `EXTERNAL_MONITOR_ENGINE_DESCRIPTION`, `EXTERNAL_MONITOR_ENGINE_NAME`, `EXTERNAL_MONITOR_ENGINE_TYPE`, `EXTERNAL_MONITOR_NAME`, `EXTERNAL_MONITOR_TAGS`, `GEOLOCATION_SITE_NAME`, `GOOGLE_CLOUD_PLATFORM_ZONE_NAME`, `GOOGLE_COMPUTE_INSTANCE_ID`, `GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE`, `GOOGLE_COMPUTE_INSTANCE_NAME`, `GOOGLE_COMPUTE_INSTANCE_PROJECT`, `GOOGLE_COMPUTE_INSTANCE_PROJECT_ID`, `GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES`, `HOST_AIX_LOGICAL_CPU_COUNT`, `HOST_AIX_SIMULTANEOUS_THREADS`, `HOST_AIX_VIRTUAL_CPU_COUNT`, `HOST_ARCHITECTURE`, `HOST_AWS_NAME_TAG`, `HOST_AZURE_COMPUTE_MODE`, `HOST_AZURE_SKU`, `HOST_AZURE_WEB_APPLICATION_HOST_NAMES`, `HOST_AZURE_WEB_APPLICATION_SITE_NAMES`, `HOST_BITNESS`, `HOST_BOSH_AVAILABILITY_ZONE`, `HOST_BOSH_DEPLOYMENT_ID`, `HOST_BOSH_INSTANCE_ID`, `HOST_BOSH_INSTANCE_NAME`, `HOST_BOSH_NAME`, `HOST_BOSH_STEMCELL_VERSION`, `HOST_CLOUD_TYPE`, `HOST_CPU_CORES`, `HOST_CUSTOM_METADATA`, `HOST_DETECTED_NAME`, `HOST_GROUP_ID`, `HOST_GROUP_NAME`, `HOST_HYPERVISOR_TYPE`, `HOST_IP_ADDRESS`, `HOST_KUBERNETES_LABELS`, `HOST_LOGICAL_CPU_CORES`, `HOST_NAME`, `HOST_ONEAGENT_CUSTOM_HOST_NAME`, `HOST_OS_TYPE`, `HOST_OS_VERSION`, `HOST_PAAS_MEMORY_LIMIT`, `HOST_PAAS_TYPE`, `HOST_TAGS`, `HOST_TECHNOLOGY`, `HTTP_MONITOR_NAME`, `HTTP_MONITOR_TAGS`, `KUBERNETES_CLUSTER_NAME`, `KUBERNETES_NODE_NAME`, `KUBERNETES_SERVICE_NAME`, `MOBILE_APPLICATION_NAME`, `MOBILE_APPLICATION_PLATFORM`, `MOBILE_APPLICATION_TAGS`, `NAME_OF_COMPUTE_NODE`, `OPENSTACK_ACCOUNT_NAME`, `OPENSTACK_ACCOUNT_PROJECT_NAME`, `OPENSTACK_AVAILABILITY_ZONE_NAME`, `OPENSTACK_PROJECT_NAME`, `OPENSTACK_REGION_NAME`, `OPENSTACK_VM_INSTANCE_TYPE`, `OPENSTACK_VM_NAME`, `OPENSTACK_VM_SECURITY_GROUP`, `PROCESS_GROUP_AZURE_HOST_NAME`, `PROCESS_GROUP_AZURE_SITE_NAME`, `PROCESS_GROUP_CUSTOM_METADATA`, `PROCESS_GROUP_DETECTED_NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_LISTEN_PORT`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_PREDEFINED_METADATA`, `PROCESS_GROUP_TAGS`, `PROCESS_GROUP_TECHNOLOGY`, `PROCESS_GROUP_TECHNOLOGY_EDITION`, `PROCESS_GROUP_TECHNOLOGY_VERSION`, `QUEUE_NAME`, `QUEUE_TECHNOLOGY`, `QUEUE_VENDOR`, `SERVICE_AKKA_ACTOR_SYSTEM`, `SERVICE_CTG_SERVICE_NAME`, `SERVICE_DATABASE_HOST_NAME`, `SERVICE_DATABASE_NAME`, `SERVICE_DATABASE_TOPOLOGY`, `SERVICE_DATABASE_VENDOR`, `SERVICE_DETECTED_NAME`, `SERVICE_ESB_APPLICATION_NAME`, `SERVICE_IBM_CTG_GATEWAY_URL`, `SERVICE_MESSAGING_LISTENER_CLASS_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REMOTE_ENDPOINT`, `SERVICE_REMOTE_SERVICE_NAME`, `SERVICE_TAGS`, `SERVICE_TECHNOLOGY`, `SERVICE_TECHNOLOGY_EDITION`, `SERVICE_TECHNOLOGY_VERSION`, `SERVICE_TOPOLOGY`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_ENDPOINT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `VMWARE_DATACENTER_NAME`, `VMWARE_VM_NAME`, `WEB_APPLICATION_NAME`, `WEB_APPLICATION_NAME_PATTERN`, `WEB_APPLICATION_TAGS`, `WEB_APPLICATION_TYPE`
     */
    key: pulumi.Input<string>;
    /**
     * Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_IP_IN_RANGE`, `LOWER_THAN`, `LOWER_THAN_OR_EQUAL`, `NOT_BEGINS_WITH`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_GREATER_THAN`, `NOT_GREATER_THAN_OR_EQUAL`, `NOT_IS_IP_IN_RANGE`, `NOT_LOWER_THAN`, `NOT_LOWER_THAN_OR_EQUAL`, `NOT_REGEX_MATCHES`, `NOT_TAG_KEY_EQUALS`, `REGEX_MATCHES`, `TAG_KEY_EQUALS`
     */
    operator: pulumi.Input<string>;
    /**
     * Value
     */
    stringValue?: pulumi.Input<string>;
    /**
     * Format: `[CONTEXT]tagKey:tagValue`
     */
    tag?: pulumi.Input<string>;
}

export interface AwsAnomaliesEc2CandidateHighCpuDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.AwsAnomaliesEc2CandidateHighCpuDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface AwsAnomaliesEc2CandidateHighCpuDetectionCustomThresholds {
    /**
     * CPU usage is higher than
     */
    cpuUsage: pulumi.Input<number>;
}

export interface AwsAnomaliesElbHighConnectionErrorsDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.AwsAnomaliesElbHighConnectionErrorsDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface AwsAnomaliesElbHighConnectionErrorsDetectionCustomThresholds {
    /**
     * Number of backend connection errors is higher than
     */
    connectionErrorsPerMinute: pulumi.Input<number>;
}

export interface AwsAnomaliesLambdaHighErrorRateDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.AwsAnomaliesLambdaHighErrorRateDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface AwsAnomaliesLambdaHighErrorRateDetectionCustomThresholds {
    /**
     * Failed invocations rate is higher than
     */
    failedInvocationsRate: pulumi.Input<number>;
}

export interface AwsAnomaliesRdsHighCpuDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.AwsAnomaliesRdsHighCpuDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface AwsAnomaliesRdsHighCpuDetectionCustomThresholds {
    /**
     * CPU usage is higher than
     */
    cpuUsage: pulumi.Input<number>;
}

export interface AwsAnomaliesRdsHighMemoryDetection {
    /**
     * Alert if **both** conditions is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.AwsAnomaliesRdsHighMemoryDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface AwsAnomaliesRdsHighMemoryDetectionCustomThresholds {
    /**
     * Freeable memory is lower than
     */
    freeMemory: pulumi.Input<number>;
    /**
     * Swap usage is higher than
     */
    swapUsage: pulumi.Input<number>;
}

export interface AwsAnomaliesRdsHighWriteReadLatencyDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.AwsAnomaliesRdsHighWriteReadLatencyDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface AwsAnomaliesRdsHighWriteReadLatencyDetectionCustomThresholds {
    /**
     * Read/write latency is higher than
     */
    readWriteLatency: pulumi.Input<number>;
}

export interface AwsAnomaliesRdsLowStorageDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.AwsAnomaliesRdsLowStorageDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface AwsAnomaliesRdsLowStorageDetectionCustomThresholds {
    /**
     * Free storage space divided by allocated storage is lower than
     */
    freeStoragePercentage: pulumi.Input<number>;
}

export interface AwsAnomaliesRdsRestartsSequenceDetection {
    /**
     * Alert if the condition is met in 2 out of 20 samples
     */
    customThresholds?: pulumi.Input<inputs.AwsAnomaliesRdsRestartsSequenceDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface AwsAnomaliesRdsRestartsSequenceDetectionCustomThresholds {
    /**
     * Number of restarts per minute is equal or higher than
     */
    restartsPerMinute: pulumi.Input<number>;
}

export interface AwsCredentialsAuthenticationData {
    /**
     * the access key
     */
    accessKey?: pulumi.Input<string>;
    /**
     * the ID of the Amazon account
     */
    accountId?: pulumi.Input<string>;
    /**
     * (Read only) the external ID token for setting an IAM role. You can obtain it with the `GET /aws/iamExternalId` request
     */
    externalId?: pulumi.Input<string>;
    /**
     * the IAM role to be used by Dynatrace to get monitoring data
     */
    iamRole?: pulumi.Input<string>;
    /**
     * the secret access key
     */
    secretKey?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AwsCredentialsSupportingServicesToMonitor {
    /**
     * a list of metrics to be monitored for this service
     */
    monitoredMetrics?: pulumi.Input<pulumi.Input<inputs.AwsCredentialsSupportingServicesToMonitorMonitoredMetric>[]>;
    /**
     * the name of the supporting service
     */
    name?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AwsCredentialsSupportingServicesToMonitorMonitoredMetric {
    /**
     * a list of metric's dimensions names
     */
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * the name of the metric of the supporting service
     */
    name?: pulumi.Input<string>;
    /**
     * the statistic (aggregation) to be used for the metric. AVG*MIN*MAX value is 3 statistics at once: AVERAGE, MINIMUM and MAXIMUM
     */
    statistic?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AwsCredentialsTagsToMonitor {
    /**
     * the key of the AWS tag.
     */
    name?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * the value of the AWS tag
     */
    value?: pulumi.Input<string>;
}

export interface AwsServiceMetric {
    /**
     * a list of metric's dimensions names
     */
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * the name of the metric of the supporting service
     */
    name: pulumi.Input<string>;
    /**
     * Possible values are `AVERAGE`, `AVG_MIN_MAX`, `MAXIMUM`, `MINIMUM`, `SAMPLE_COUNT` and `SUM`
     */
    statistic?: pulumi.Input<string>;
}

export interface AzureCredentialsMonitorOnlyExcludingTagPair {
    /**
     * The name of the tag.
     */
    name?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag.   If set to `null`, then resources with any value of the tag are monitored.
     */
    value?: pulumi.Input<string>;
}

export interface AzureCredentialsMonitorOnlyTagPair {
    /**
     * The name of the tag.
     */
    name?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag.   If set to `null`, then resources with any value of the tag are monitored.
     */
    value?: pulumi.Input<string>;
}

export interface AzureCredentialsSupportingService {
    /**
     * A list of Azure tags to be monitored.  You can specify up to 10 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
     */
    monitoredMetrics?: pulumi.Input<pulumi.Input<inputs.AzureCredentialsSupportingServiceMonitoredMetric>[]>;
    /**
     * The name of the supporting service.
     */
    name?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AzureCredentialsSupportingServiceMonitoredMetric {
    /**
     * a list of metric's dimensions names
     */
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * the name of the metric of the supporting service
     */
    name?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface AzureServiceMetric {
    /**
     * a list of metric's dimensions names
     */
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * the name of the metric of the supporting service
     */
    name: pulumi.Input<string>;
}

export interface BrowserMonitorAnomalyDetection {
    /**
     * Thresholds for loading times
     */
    loadingTimeThresholds?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorAnomalyDetectionLoadingTimeThreshold>[]>;
    /**
     * Outage handling configuration
     */
    outageHandlings?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorAnomalyDetectionOutageHandling>[]>;
}

export interface BrowserMonitorAnomalyDetectionLoadingTimeThreshold {
    /**
     * Performance threshold is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The list of performance threshold rules
     */
    thresholds?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold>[]>;
}

export interface BrowserMonitorAnomalyDetectionLoadingTimeThresholdThreshold {
    /**
     * The list of performance threshold rules
     */
    thresholds: pulumi.Input<pulumi.Input<inputs.BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold>[]>;
}

export interface BrowserMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold {
    /**
     * Specify the event to which an ACTION threshold applies
     */
    eventIndex?: pulumi.Input<number>;
    /**
     * Specify the request to which an ACTION threshold applies
     */
    requestIndex?: pulumi.Input<number>;
    /**
     * The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)
     */
    type?: pulumi.Input<string>;
    /**
     * Notify if monitor takes longer than *X* milliseconds to load
     */
    valueMs: pulumi.Input<number>;
}

export interface BrowserMonitorAnomalyDetectionOutageHandling {
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) When enabled (`true`), generate a problem and send an alert when the monitor is unavailable at all configured locations
     */
    globalOutage?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) Global outage handling configuration.
     */
    globalOutagePolicies?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy>[]>;
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) When enabled (`true`), generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location
     */
    localOutage?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) Local outage handling configuration. 
     *
     *  Alert if **affectedLocations** of locations are unable to access the web application **consecutiveRuns** times consecutively
     */
    localOutagePolicies?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy>[]>;
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) Schedule retry if browser monitor execution results in a fail. For HTTP monitors this property is ignored
     */
    retryOnError?: pulumi.Input<boolean>;
}

export interface BrowserMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy {
    /**
     * The number of consecutive fails to trigger an alert
     */
    consecutiveRuns: pulumi.Input<number>;
}

export interface BrowserMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy {
    /**
     * The number of affected locations to trigger an alert
     */
    affectedLocations: pulumi.Input<number>;
    /**
     * The number of consecutive fails to trigger an alert
     */
    consecutiveRuns: pulumi.Input<number>;
}

export interface BrowserMonitorKeyPerformanceMetrics {
    /**
     * Defines the key performance metric for load actions. Supported values are `VISUALLY_COMPLETE`, `SPEED_INDEX`, `USER_ACTION_DURATION`, `TIME_TO_FIRST_BYTE`, `HTML_DOWNLOADED`, `DOM_INTERACTIVE`, `LOAD_EVENT_START` and `LOAD_EVENT_END`.
     */
    loadActionKpm: pulumi.Input<string>;
    /**
     * Defines the key performance metric for XHR actions. Supported values are `VISUALLY_COMPLETE`, `USER_ACTION_DURATION`, `TIME_TO_FIRST_BYTE` and `RESPONSE_END`.
     */
    xhrActionKpm: pulumi.Input<string>;
}

export interface BrowserMonitorPerformanceThresholds {
    thresholds: pulumi.Input<pulumi.Input<inputs.BrowserMonitorPerformanceThresholdsThreshold>[]>;
}

export interface BrowserMonitorPerformanceThresholdsThreshold {
    /**
     * Synthetic event
     */
    event: pulumi.Input<string>;
    /**
     * Threshold (in seconds)
     */
    threshold: pulumi.Input<number>;
}

export interface BrowserMonitorScript {
    /**
     * The setup of the monitor
     */
    configuration?: pulumi.Input<inputs.BrowserMonitorScriptConfiguration>;
    /**
     * Steps of the clickpath—the first step must always be of the `navigate` type
     */
    events?: pulumi.Input<inputs.BrowserMonitorScriptEvents>;
    /**
     * The type of monitor. Possible values are `clickpath` for clickpath monitors and `availability` for single-URL browser monitors. These monitors are only allowed to have one event of the `navigate` type
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptConfiguration {
    /**
     * The emulated device of the monitor—holds either the parameters of the custom device or the name and orientation of the preconfigured device.
     */
    bandwidth?: pulumi.Input<inputs.BrowserMonitorScriptConfigurationBandwidth>;
    /**
     * Block these URLs
     */
    blocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Bypass Content Security Policy of monitored pages
     */
    bypassCsp?: pulumi.Input<boolean>;
    /**
     * These cookies are added before execution of the first step
     */
    cookies?: pulumi.Input<inputs.BrowserMonitorScriptConfigurationCookies>;
    /**
     * The emulated device of the monitor—holds either the parameters of the custom device or the name and orientation of the preconfigured device.
     *
     * If not set, then the Desktop preconfigured device is used
     */
    device?: pulumi.Input<inputs.BrowserMonitorScriptConfigurationDevice>;
    /**
     * No documentation available
     */
    disableWebSecurity?: pulumi.Input<boolean>;
    /**
     * The list of HTTP headers to be sent with requests of the monitor
     */
    headers?: pulumi.Input<inputs.BrowserMonitorScriptConfigurationHeaders>;
    /**
     * Ignore specific status codes
     */
    ignoredErrorCodes?: pulumi.Input<inputs.BrowserMonitorScriptConfigurationIgnoredErrorCodes>;
    /**
     * Custom JavaScript Agent settings
     */
    javascriptSetttings?: pulumi.Input<inputs.BrowserMonitorScriptConfigurationJavascriptSetttings>;
    /**
     * Capture performance metrics for pages loaded in frames
     */
    monitorFrames?: pulumi.Input<boolean>;
    /**
     * The user agent of the request
     */
    userAgent?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptConfigurationBandwidth {
    /**
     * The download speed of the network, in bytes per second
     */
    download?: pulumi.Input<number>;
    /**
     * The latency of the network, in milliseconds
     */
    latency?: pulumi.Input<number>;
    /**
     * The type of the preconfigured network—when editing in the browser, press `Crtl+Spacebar` to see the list of available networks
     */
    networkType?: pulumi.Input<string>;
    /**
     * The upload speed of the network, in bytes per second
     */
    upload?: pulumi.Input<number>;
}

export interface BrowserMonitorScriptConfigurationCookies {
    /**
     * A request cookie
     */
    cookies: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptConfigurationCookiesCookie>[]>;
}

export interface BrowserMonitorScriptConfigurationCookiesCookie {
    /**
     * The domain of the cookie.
     */
    domain: pulumi.Input<string>;
    /**
     * The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`
     */
    name: pulumi.Input<string>;
    /**
     * The path of the cookie.
     */
    path?: pulumi.Input<string>;
    /**
     * The value of the cookie. The following symbols are not allowed: `;`, `,`, `\` and `"`.
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptConfigurationDevice {
    /**
     * The height of the screen in pixels.
     * The maximum allowed width is `1080`.
     */
    height?: pulumi.Input<number>;
    /**
     * The flag of the mobile device.
     * Set to `true` for mobile devices or `false` for a desktop or laptop.
     */
    mobile?: pulumi.Input<boolean>;
    /**
     * The name of the preconfigured device—when editing in the browser, press `Crtl+Spacebar` to see the list of available devices
     */
    name?: pulumi.Input<string>;
    /**
     * The orientation of the device. Possible values are `portrait` or `landscape`. Desktop and laptop devices are not allowed to use the `portrait` orientation
     */
    orientation?: pulumi.Input<string>;
    /**
     * The pixel ratio of the device.
     */
    scaleFactor?: pulumi.Input<number>;
    /**
     * The flag of the touchscreen.
     * Set to `true` if the device uses touchscreen. In that case, use can set interaction event as `tap`.
     */
    touchEnabled?: pulumi.Input<boolean>;
    /**
     * The width of the screen in pixels.
     * The maximum allowed width is `1920`.
     */
    width?: pulumi.Input<number>;
}

export interface BrowserMonitorScriptConfigurationHeaders {
    /**
     * contains an HTTP header of the request
     */
    headers: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptConfigurationHeadersHeader>[]>;
    /**
     * Restrict applying headers to a set of URLs
     */
    restrictions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface BrowserMonitorScriptConfigurationHeadersHeader {
    /**
     * The key of the header
     */
    name: pulumi.Input<string>;
    /**
     * The value of the header
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptConfigurationIgnoredErrorCodes {
    /**
     * Only apply to document request matching this regex
     */
    matchingDocumentRequests?: pulumi.Input<string>;
    /**
     * You can use exact number, range or status class mask. Multiple values can be separated by comma, i.e. 404, 405-410, 5xx
     */
    statusCodes: pulumi.Input<string>;
}

export interface BrowserMonitorScriptConfigurationJavascriptSetttings {
    /**
     * Additional Javascript Agent Properties
     */
    customProperties?: pulumi.Input<string>;
    /**
     * Custom JavaScript Agent settings
     */
    timeoutSettings?: pulumi.Input<inputs.BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings>;
    /**
     * Parameters for Visually complete and Speed index calculation
     */
    visuallyCompleteOptions?: pulumi.Input<inputs.BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions>;
}

export interface BrowserMonitorScriptConfigurationJavascriptSetttingsTimeoutSettings {
    /**
     * Track up to n cascading setTimeout calls
     */
    actionLimit: pulumi.Input<number>;
    /**
     * Limit cascading timeouts cumulatively to n ms
     */
    totalTimeout: pulumi.Input<number>;
}

export interface BrowserMonitorScriptConfigurationJavascriptSetttingsVisuallyCompleteOptions {
    /**
     * Query CSS selectors to specify mutation nodes (elements that change) to ignore in Visually complete and Speed index calculation
     */
    excludedElements?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Parameters for Visually complete and Speed index calculation
     */
    excludedUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Use this setting to define the minimum visible area per element (in pixels) for an element to be counted towards Visually complete and Speed index
     */
    imageSizeThreshold: pulumi.Input<number>;
    /**
     * The time the Visually complete module waits for inactivity and no further mutations on the page after the load action
     */
    inactivityTimeout: pulumi.Input<number>;
    /**
     * The time the Visually complete module waits after an XHR or custom action closes to start the calculation
     */
    mutationTimeout: pulumi.Input<number>;
}

export interface BrowserMonitorScriptEvents {
    /**
     * An event
     */
    events?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEvent>[]>;
}

export interface BrowserMonitorScriptEventsEvent {
    /**
     * Properties specified for a click event
     */
    click?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventClick>;
    /**
     * Properties specified for a cookie event
     */
    cookie?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventCookie>;
    /**
     * A short description of the event to appear in the UI
     */
    description: pulumi.Input<string>;
    /**
     * Properties specified for a javascript event
     */
    javascript?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascript>;
    /**
     * Properties specified for a key strokes event
     */
    keystrokes?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokes>;
    /**
     * Properties specified for a navigation event
     */
    navigate?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigate>;
    /**
     * Properties specified for a key strokes event.
     */
    select?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelect>;
    /**
     * Properties specified for a tap event
     */
    tap?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventTap>;
}

export interface BrowserMonitorScriptEventsEventClick {
    /**
     * the mouse button to be used for the click
     */
    button: pulumi.Input<number>;
    /**
     * The tab on which the page should open
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickTarget>;
    /**
     * The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element
     */
    validate?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickValidate>;
    /**
     * The wait condition for the event—defines how long Dynatrace should wait before the next action is executed
     */
    wait?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickWait>;
}

export interface BrowserMonitorScriptEventsEventClickTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventClickTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventClickTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventClickValidate {
    /**
     * The element to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validations: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickValidateValidation>[]>;
}

export interface BrowserMonitorScriptEventsEventClickValidateValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickValidateValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventClickValidateValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventClickValidateValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventClickValidateValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventClickWait {
    /**
     * The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.
     */
    milliseconds?: pulumi.Input<number>;
    /**
     * he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.
     * The maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..
     */
    timeout?: pulumi.Input<number>;
    /**
     * The elements to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validation?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickWaitValidation>;
    /**
     * The time to wait before the next event is triggered. Possible values are `pageComplete` (wait for the page to load completely), `network` (wait for background network activity to complete), `nextAction` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)
     */
    waitFor: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventClickWaitValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickWaitValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventClickWaitValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventClickWaitValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventClickWaitValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventCookie {
    /**
     * Every cookie must be unique within the list. However, you can use the same cookie again in other event
     */
    cookies: pulumi.Input<inputs.BrowserMonitorScriptEventsEventCookieCookies>;
}

export interface BrowserMonitorScriptEventsEventCookieCookies {
    /**
     * A request cookie
     */
    cookies: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventCookieCookiesCookie>[]>;
}

export interface BrowserMonitorScriptEventsEventCookieCookiesCookie {
    /**
     * The domain of the cookie.
     */
    domain: pulumi.Input<string>;
    /**
     * The name of the cookie. The following cookie names are now allowed: `dtCookie`, `dtLatC`, `dtPC`, `rxVisitor`, `rxlatency`, `rxpc`, `rxsession` and `rxvt`
     */
    name: pulumi.Input<string>;
    /**
     * The path of the cookie.
     */
    path?: pulumi.Input<string>;
    /**
     * The value of the cookie. The following symbols are not allowed: `;`, `,`, `\` and `"`.
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventJavascript {
    /**
     * The JavaScript code to be executed in this event
     */
    code: pulumi.Input<string>;
    /**
     * The tab on which the page should open
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascriptTarget>;
    /**
     * The wait condition for the event—defines how long Dynatrace should wait before the next action is executed
     */
    wait?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascriptWait>;
}

export interface BrowserMonitorScriptEventsEventJavascriptTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascriptTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventJavascriptTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventJavascriptTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventJavascriptWait {
    /**
     * The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.
     */
    milliseconds?: pulumi.Input<number>;
    /**
     * he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.
     * The maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..
     */
    timeout?: pulumi.Input<number>;
    /**
     * The elements to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validation?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascriptWaitValidation>;
    /**
     * The time to wait before the next event is triggered. Possible values are `pageComplete` (wait for the page to load completely), `network` (wait for background network activity to complete), `nextAction` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)
     */
    waitFor: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventJavascriptWaitValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventJavascriptWaitValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventJavascriptWaitValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokes {
    /**
     * Credentials for this event
     */
    credential?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesCredential>;
    /**
     * Indicates whether the `textValue` is encrypted (`true`) or not (`false`). Must not be specified if `credentials` from the vault are being used
     */
    masked?: pulumi.Input<boolean>;
    /**
     * Defines whether to blur the text field when it loses focus.
     * Set to `true` to trigger the blur the `textValue`
     */
    simulateBlurEvent?: pulumi.Input<boolean>;
    /**
     * Simulates pressing the 'Return' key after simulating other keystrokes. For example, to submit a form or trigger a login.
     */
    simulateReturnKey?: pulumi.Input<boolean>;
    /**
     * The tab on which the page should open
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesTarget>;
    /**
     * The text to enter. Must not be specified if `credentials` from the vault are being used
     */
    text?: pulumi.Input<string>;
    /**
     * The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element
     */
    validate?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesValidate>;
    /**
     * The wait condition for the event—defines how long Dynatrace should wait before the next action is executed
     */
    wait?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesWait>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesCredential {
    /**
     * Either `username` or `password`
     */
    field: pulumi.Input<string>;
    /**
     * The ID of the credential within the Credentials Vault
     */
    vaultId: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesValidate {
    /**
     * The element to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validations: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesValidateValidation>[]>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesValidateValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesValidateValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesValidateValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesWait {
    /**
     * The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.
     */
    milliseconds?: pulumi.Input<number>;
    /**
     * he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.
     * The maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..
     */
    timeout?: pulumi.Input<number>;
    /**
     * The elements to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validation?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesWaitValidation>;
    /**
     * The time to wait before the next event is triggered. Possible values are `pageComplete` (wait for the page to load completely), `network` (wait for background network activity to complete), `nextAction` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)
     */
    waitFor: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesWaitValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesWaitValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventKeystrokesWaitValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigate {
    /**
     * The login credentials to bypass the browser login mask
     */
    authentication?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateAuthentication>;
    /**
     * The tab on which the page should open
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateTarget>;
    /**
     * The URL to navigate to
     */
    url: pulumi.Input<string>;
    /**
     * The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element
     */
    validate?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateValidate>;
    /**
     * The wait condition for the event—defines how long Dynatrace should wait before the next action is executed
     */
    wait?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateWait>;
}

export interface BrowserMonitorScriptEventsEventNavigateAuthentication {
    /**
     * A reference to the entry within the credential vault
     */
    creds: pulumi.Input<string>;
    /**
     * The type of authentication
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventNavigateTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateValidate {
    /**
     * The element to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validations: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateValidateValidation>[]>;
}

export interface BrowserMonitorScriptEventsEventNavigateValidateValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateValidateValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateValidateValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventNavigateValidateValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateWait {
    /**
     * The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.
     */
    milliseconds?: pulumi.Input<number>;
    /**
     * he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.
     * The maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..
     */
    timeout?: pulumi.Input<number>;
    /**
     * The elements to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validation?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateWaitValidation>;
    /**
     * The time to wait before the next event is triggered. Possible values are `pageComplete` (wait for the page to load completely), `network` (wait for background network activity to complete), `nextAction` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)
     */
    waitFor: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateWaitValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateWaitValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateWaitValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventNavigateWaitValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelect {
    /**
     * The options to be selected
     */
    selections: pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectSelections>;
    /**
     * The tab on which the page should open
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectTarget>;
    /**
     * The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element
     */
    validate?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectValidate>;
    /**
     * The wait condition for the event—defines how long Dynatrace should wait before the next action is executed
     */
    wait?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectWait>;
}

export interface BrowserMonitorScriptEventsEventSelectSelections {
    /**
     * The option to be selected
     */
    options: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectSelectionsOption>[]>;
}

export interface BrowserMonitorScriptEventsEventSelectSelectionsOption {
    /**
     * The index of the option to be selected
     */
    index: pulumi.Input<number>;
    /**
     * The value of the option to be selected
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventSelectTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectValidate {
    /**
     * The element to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validations: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectValidateValidation>[]>;
}

export interface BrowserMonitorScriptEventsEventSelectValidateValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectValidateValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectValidateValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventSelectValidateValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectWait {
    /**
     * The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.
     */
    milliseconds?: pulumi.Input<number>;
    /**
     * he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.
     * The maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..
     */
    timeout?: pulumi.Input<number>;
    /**
     * The elements to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validation?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectWaitValidation>;
    /**
     * The time to wait before the next event is triggered. Possible values are `pageComplete` (wait for the page to load completely), `network` (wait for background network activity to complete), `nextAction` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)
     */
    waitFor: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectWaitValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectWaitValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectWaitValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventSelectWaitValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTap {
    /**
     * the mouse button to be used for the click
     */
    button: pulumi.Input<number>;
    /**
     * The tab on which the page should open
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapTarget>;
    /**
     * The validation rules for the event—helps you verify that your browser monitor loads the expected page content or page element
     */
    validate?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapValidate>;
    /**
     * The wait condition for the event—defines how long Dynatrace should wait before the next action is executed
     */
    wait?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapWait>;
}

export interface BrowserMonitorScriptEventsEventTapTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTapTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventTapTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTapValidate {
    /**
     * The element to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validations: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapValidateValidation>[]>;
}

export interface BrowserMonitorScriptEventsEventTapValidateValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapValidateValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTapValidateValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTapValidateValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventTapValidateValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTapWait {
    /**
     * The time to wait, in millisencods. The maximum allowed value is `60000`. Required for the type `time`, not applicable otherwise.
     */
    milliseconds?: pulumi.Input<number>;
    /**
     * he maximum amount of time to wait for a certain element to appear, in milliseconds—if exceeded, the action is marked as failed.
     * The maximum allowed value is 60000. Required for the type `validation`, not applicable otherwise..
     */
    timeout?: pulumi.Input<number>;
    /**
     * The elements to wait for. Required for the `validation` type, not applicable otherwise.
     */
    validation?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapWaitValidation>;
    /**
     * The time to wait before the next event is triggered. Possible values are `pageComplete` (wait for the page to load completely), `network` (wait for background network activity to complete), `nextAction` (wait for the next action), `time` (wait for a specified periodof time) and `validation` (wait for a specific element to appear)
     */
    waitFor: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTapWaitValidation {
    /**
     * The condition of the validation. `false` means the validation succeeds if the specified content/element is found. `true` means the validation fails if the specified content/element is found
     */
    failIfFound?: pulumi.Input<boolean>;
    /**
     * The content to look for on the page.
     * Regular expressions are allowed. In that case set `isRegex` as `true`. Required for `contentMatch`, optional for `elementMatch`.
     */
    match?: pulumi.Input<string>;
    /**
     * Defines whether `match` is plain text (`false`) or a regular expression (`true`)
     */
    regex?: pulumi.Input<boolean>;
    /**
     * The elemnt to look for on the page
     */
    target?: pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapWaitValidationTarget>;
    /**
     * The goal of the validation. `contentMatch` (check page for the specific content. Not allowed for validation inside of wait condition), `elementMatch` (check page for the specific element).
     */
    type: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTapWaitValidationTarget {
    /**
     * The list of locators identifying the desired element
     */
    locators?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator>[]>;
    /**
     * The tab of the target
     */
    window?: pulumi.Input<string>;
}

export interface BrowserMonitorScriptEventsEventTapWaitValidationTargetLocator {
    /**
     * A locator dentifyies the desired element
     */
    locators: pulumi.Input<pulumi.Input<inputs.BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator>[]>;
}

export interface BrowserMonitorScriptEventsEventTapWaitValidationTargetLocatorLocator {
    /**
     * Defines where to look for an element. `css` (CSS Selector) or `dom` (Javascript code)
     */
    type: pulumi.Input<string>;
    /**
     * The name of the element to be found
     */
    value: pulumi.Input<string>;
}

export interface BrowserMonitorTag {
    /**
     * Tag with source of a Dynatrace entity.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.BrowserMonitorTagTag>[]>;
}

export interface BrowserMonitorTagTag {
    /**
     * The origin of the tag. Supported values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`.
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag.
     *
     * Custom tags have the tag value here.
     */
    key: pulumi.Input<string>;
    /**
     * The source of the tag. Supported values are `USER`, `RULE_BASED` and `AUTO`.
     */
    source?: pulumi.Input<string>;
    /**
     * The value of the tag.
     *
     * Not applicable to custom tags.
     */
    value?: pulumi.Input<string>;
}

export interface BusinessEventsOneagentEvent {
    /**
     * Event category
     */
    category: pulumi.Input<inputs.BusinessEventsOneagentEventCategory>;
    /**
     * Additional attributes for the business event.
     */
    data?: pulumi.Input<inputs.BusinessEventsOneagentEventData>;
    /**
     * Event provider
     */
    provider: pulumi.Input<inputs.BusinessEventsOneagentEventProvider>;
    /**
     * Event type
     */
    type: pulumi.Input<inputs.BusinessEventsOneagentEventType>;
}

export interface BusinessEventsOneagentEventCategory {
    /**
     * [See our documentation](https://dt-url.net/ei034bx)
     */
    path?: pulumi.Input<string>;
    /**
     * Fixed value
     */
    source?: pulumi.Input<string>;
    /**
     * Possible Values: `Constant_string`, `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`
     */
    sourceType: pulumi.Input<string>;
}

export interface BusinessEventsOneagentEventData {
    eventDataFieldComplexes: pulumi.Input<pulumi.Input<inputs.BusinessEventsOneagentEventDataEventDataFieldComplex>[]>;
}

export interface BusinessEventsOneagentEventDataEventDataFieldComplex {
    /**
     * Field name to be added to data.
     */
    name: pulumi.Input<string>;
    /**
     * no documentation available
     */
    source: pulumi.Input<inputs.BusinessEventsOneagentEventDataEventDataFieldComplexSource>;
}

export interface BusinessEventsOneagentEventDataEventDataFieldComplexSource {
    /**
     * [See our documentation](https://dt-url.net/ei034bx)
     */
    path?: pulumi.Input<string>;
    /**
     * Fixed value
     */
    source?: pulumi.Input<string>;
    /**
     * Possible Values: `Constant_string`, `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`
     */
    sourceType: pulumi.Input<string>;
}

export interface BusinessEventsOneagentEventProvider {
    /**
     * [See our documentation](https://dt-url.net/ei034bx)
     */
    path?: pulumi.Input<string>;
    /**
     * Fixed value
     */
    source?: pulumi.Input<string>;
    /**
     * Possible Values: `Constant_string`, `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`
     */
    sourceType: pulumi.Input<string>;
}

export interface BusinessEventsOneagentEventType {
    /**
     * [See our documentation](https://dt-url.net/ei034bx)
     */
    path?: pulumi.Input<string>;
    /**
     * Fixed value
     */
    source?: pulumi.Input<string>;
    /**
     * Possible Values: `Constant_string`, `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`
     */
    sourceType: pulumi.Input<string>;
}

export interface BusinessEventsOneagentTriggers {
    triggers: pulumi.Input<pulumi.Input<inputs.BusinessEventsOneagentTriggersTrigger>[]>;
}

export interface BusinessEventsOneagentTriggersTrigger {
    /**
     * Case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    source: pulumi.Input<inputs.BusinessEventsOneagentTriggersTriggerSource>;
    /**
     * Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `N_CONTAINS`, `N_ENDS_WITH`, `N_EQUALS`, `N_EXISTS`, `N_STARTS_WITH`, `STARTS_WITH`
     */
    type: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value?: pulumi.Input<string>;
}

export interface BusinessEventsOneagentTriggersTriggerSource {
    /**
     * Possible Values: `Request_body`, `Request_headers`, `Request_method`, `Request_parameters`, `Request_path`, `Request_url`, `Response_body`, `Response_headers`, `Response_statusCode`
     */
    dataSource: pulumi.Input<string>;
    /**
     * [See our documentation](https://dt-url.net/ei034bx)
     */
    path?: pulumi.Input<string>;
}

export interface BusinessEventsProcessingRuleTesting {
    /**
     * Sample event to use for the test run. Only JSON format is supported.
     */
    sampleEvent: pulumi.Input<string>;
}

export interface BusinessEventsProcessingTransformationFields {
    transformationFields: pulumi.Input<pulumi.Input<inputs.BusinessEventsProcessingTransformationFieldsTransformationField>[]>;
}

export interface BusinessEventsProcessingTransformationFieldsTransformationField {
    /**
     * Is Array
     */
    array: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    name: pulumi.Input<string>;
    /**
     * no documentation available
     */
    optional: pulumi.Input<boolean>;
    /**
     * Read-only
     */
    readonly: pulumi.Input<boolean>;
    /**
     * Possible Values: `BOOLEAN`, `DOUBLE`, `DURATION`, `INT`, `IPADDR`, `LONG`, `STRING`, `TIMESTAMP`
     */
    type: pulumi.Input<string>;
}

export interface BusinessEventsSecurityContextSecurityContextRule {
    /**
     * Matcher
     */
    query: pulumi.Input<string>;
    /**
     * Rule name
     */
    ruleName: pulumi.Input<string>;
    /**
     * Literal value to be set
     */
    value?: pulumi.Input<string>;
    /**
     * Possible Values: `FIELD`, `LITERAL`
     */
    valueSource: pulumi.Input<string>;
    /**
     * Name of field used to copy value
     */
    valueSourceField?: pulumi.Input<string>;
}

export interface CalculatedMobileMetricDimension {
    /**
     * A dimensions for the metric usage
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.CalculatedMobileMetricDimensionDimension>[]>;
}

export interface CalculatedMobileMetricDimensionDimension {
    /**
     * The dimension of the metric. Possible values are `ApdexType`, `Browser`, `ErrorContext`, `ErrorOrigin`, `ErrorType`, `GeoLocation`, `StringProperty`, `UserActionType`
     */
    dimension: pulumi.Input<string>;
    /**
     * The number of top values to be calculated
     */
    topX: pulumi.Input<number>;
}

export interface CalculatedMobileMetricUserActionFilter {
    /**
     * Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.
     */
    actionDurationFromMilliseconds?: pulumi.Input<number>;
    /**
     * Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.
     */
    actionDurationToMilliseconds?: pulumi.Input<number>;
    /**
     * Only actions with the specified Apdex score are included in the metric calculation. Possible values: [ Frustrated, Satisfied, Tolerating, Unknown ]
     */
    apdex?: pulumi.Input<string>;
    /**
     * Only actions coming from this app version are included in the metric calculation.
     */
    appVersion?: pulumi.Input<string>;
    /**
     * Only actions coming from this carrier type are included in the metric calculation.
     */
    carrier?: pulumi.Input<string>;
    /**
     * Only actions of users from this city are included in the metric calculation. Specify geolocation ID here.
     */
    city?: pulumi.Input<string>;
    /**
     * Only actions coming from this connection type are included in the metric calculation. Possible values: [ LAN, MOBILE, OFFLINE, UNKNOWN, WIFI ]
     */
    connectionType?: pulumi.Input<string>;
    /**
     * Only actions of users from this continent are included in the metric calculation. Specify geolocation ID here.
     */
    continent?: pulumi.Input<string>;
    /**
     * Only actions of users from this country are included in the metric calculation. Specify geolocation ID here.
     */
    country?: pulumi.Input<string>;
    /**
     * Only actions coming from this app version are included in the metric calculation.
     */
    device?: pulumi.Input<string>;
    /**
     * The request error status of the actions to be included in the metric calculation: `true` or `false`
     */
    hasHttpError?: pulumi.Input<boolean>;
    /**
     * The error status of the actions to be included in the metric calculation: `true` or `false`
     */
    hasReportedError?: pulumi.Input<boolean>;
    /**
     * Only actions coming from this internet service provider are included in the metric calculation.
     */
    isp?: pulumi.Input<string>;
    /**
     * Only actions coming from devices of this manufacturer are included in the metric calculation.
     */
    manufacturer?: pulumi.Input<string>;
    /**
     * Filter by network technology
     */
    networkTechnology?: pulumi.Input<string>;
    /**
     * Only actions coming from devices with this display orientation are included in the metric calculation. Possible values: [ LANDSCAPE, PORTRAIT, UNKNOWN ]
     */
    orientation?: pulumi.Input<string>;
    /**
     * Only actions coming from this OS family are included in the metric calculation.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * Only actions coming from this OS version are included in the metric calculation.
     */
    osVersion?: pulumi.Input<string>;
    /**
     * Only actions of users from this region are included in the metric calculation. Specify geolocation ID here.
     */
    region?: pulumi.Input<string>;
    /**
     * Only actions coming from devices with this display resolution are included in the metric calculation. Possible values: [ CGA, DCI2K, DCI4K, DVGA, FHD, FWVGA, FWXGA, GHDPlus, HD, HQVGA, HQVGA2, HSXGA, HUXGA, HVGA, HXGA, NTSC, PAL, QHD, QQVGA, QSXGA, QUXGA, QVGA, QWXGA, QXGA, SVGA, SXGA, SXGAMinus, SXGAPlus, UGA, UHD16K, UHD4K, UHD8K, UHDPlus, UNKNOWN, UWQHD, UXGA, VGA, WHSXGA, WHUXGA, WHXGA, WQSXGA, WQUXGA, WQVGA, WQVGA2, WQVGA3, WQXGA, WQXGA2, WSVGA, WSVGA2, WSXGA, WSXGAPlus, WUXGA, WVGA, WVGA2, WXGA, WXGA2, WXGA3, WXGAPlus, XGA, XGAPLUS, _1280x854, nHD, qHD ]
     */
    resolution?: pulumi.Input<string>;
    /**
     * Only actions with this name are included in the metric calculation.
     */
    userActionName?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricCondition {
    /**
     * A conditions for the metric usage
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.CalculatedServiceMetricConditionCondition>[]>;
}

export interface CalculatedServiceMetricConditionCondition {
    /**
     * The attribute to be matched.  Note that for a service property attribute you must use the comparison of the `FAST_STRING` type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
     */
    attribute: pulumi.Input<string>;
    /**
     * Type-specific comparison for attributes
     */
    comparison: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparison>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparison {
    /**
     * Boolean Comparison for `BOOLEAN` attributes
     */
    boolean?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonBoolean>;
    /**
     * Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'
     */
    esbInputNodeType?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType>;
    /**
     * Comparison for `FAILED_STATE` attributes
     */
    failedState?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonFailedState>;
    /**
     * Comparison for `FAILURE_REASON` attributes
     */
    failureReason?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonFailureReason>;
    /**
     * Comparison for `FAST_STRING` attributes. Use it for all service property attributes
     */
    fastString?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonFastString>;
    /**
     * Comparison for `FLAW_STATE` attributes
     */
    flawState?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonFlawState>;
    /**
     * Comparison for `NUMBER` attributes
     */
    generic?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonGeneric>;
    /**
     * Comparison for `HTTP_METHOD` attributes
     */
    httpMethod?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonHttpMethod>;
    /**
     * Comparison for `HTTP_STATUS_CLASS` attributes
     */
    httpStatusClass?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonHttpStatusClass>;
    /**
     * Comparison for `IIB_INPUT_NODE_TYPE` attributes
     */
    iibInputNodeType?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonIibInputNodeType>;
    /**
     * Reverse the comparison **operator**. For example, it turns **equals** into **does not equal**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Comparison for `NUMBER` attributes
     */
    number?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonNumber>;
    /**
     * Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes
     */
    numberRequestAttribute?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     */
    serviceType?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonServiceType>;
    /**
     * Comparison for `STRING` attributes
     */
    string?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonString>;
    /**
     * Comparison for `STRING_REQUEST_ATTRIBUTE` attributes
     */
    stringRequestAttribute?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute>;
    /**
     * Comparison for `TAG` attributes
     */
    tag?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonTag>;
    /**
     * Comparison for `ZOS_CALL_TYPE` attributes
     */
    zosCallType?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonZosCallType>;
}

export interface CalculatedServiceMetricConditionConditionComparisonBoolean {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<boolean>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<boolean>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonEsbInputNodeType {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonFailedState {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `FAILED` and `FAILED`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `FAILED` and `FAILED`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonFailureReason {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonFastString {
    /**
     * The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `CONTAINS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonFlawState {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonGeneric {
    /**
     * Defines the actual set of fields depending on the value
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonHttpMethod {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonHttpStatusClass {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonIibInputNodeType {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonNumber {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonNumberRequestAttribute {
    /**
     * If `true`, the request attribute is matched on child service calls. Default is `false`
     */
    matchOnChildCalls?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
     */
    operator?: pulumi.Input<string>;
    /**
     * No documentation available for this attribute
     */
    requestAttribute: pulumi.Input<string>;
    /**
     * Defines valid sources of request attributes for conditions or placeholders
     */
    source?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSource {
    /**
     * Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
     */
    managementZone?: pulumi.Input<string>;
    /**
     * Use only request attributes from services that have this tag. Use either this or `managementZone`
     */
    serviceTag?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTag {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
     */
    context?: pulumi.Input<string>;
    /**
     * The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
     */
    key: pulumi.Input<string>;
    /**
     * has no documentation
     */
    tagKey?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey>;
    /**
     * The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
     */
    value?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonNumberRequestAttributeSourceServiceTagTagKey {
    /**
     * has no documentation
     */
    context?: pulumi.Input<string>;
    /**
     * has no documentation
     */
    key?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonServiceType {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonString {
    /**
     * The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonStringRequestAttribute {
    /**
     * The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * If `true`, the request attribute is matched on child service calls. Default is `false`
     */
    matchOnChildCalls?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
     */
    operator?: pulumi.Input<string>;
    /**
     * No documentation available for this attribute
     */
    requestAttribute: pulumi.Input<string>;
    /**
     * Defines valid sources of request attributes for conditions or placeholders
     */
    source?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSource {
    /**
     * Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
     */
    managementZone?: pulumi.Input<string>;
    /**
     * Use only request attributes from services that have this tag. Use either this or `managementZone`
     */
    serviceTag?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTag {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
     */
    context?: pulumi.Input<string>;
    /**
     * The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
     */
    key: pulumi.Input<string>;
    /**
     * has no documentation
     */
    tagKey?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey>;
    /**
     * The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
     */
    value?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonStringRequestAttributeSourceServiceTagTagKey {
    /**
     * has no documentation
     */
    context?: pulumi.Input<string>;
    /**
     * has no documentation
     */
    key?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonTag {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `TAG_KEY_EQUALS` and `TAG_KEY_EQUALS_ANY_OF`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The values to compare to
     */
    value?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonTagValue>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonTagValues>;
}

export interface CalculatedServiceMetricConditionConditionComparisonTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonTagValues {
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<inputs.CalculatedServiceMetricConditionConditionComparisonTagValuesValue>[]>;
}

export interface CalculatedServiceMetricConditionConditionComparisonTagValuesValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricConditionConditionComparisonZosCallType {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CalculatedServiceMetricDimensionDefinition {
    /**
     * The dimension value pattern. You can define custom placeholders in the `placeholders` field and use them here
     */
    dimension: pulumi.Input<string>;
    /**
     * The name of the dimension
     */
    name: pulumi.Input<string>;
    /**
     * The list of custom placeholders to be used in a dimension value pattern
     */
    placeholders?: pulumi.Input<inputs.CalculatedServiceMetricDimensionDefinitionPlaceholders>;
    /**
     * The number of top values to be calculated
     */
    topX: pulumi.Input<number>;
    /**
     * The aggregation of the dimension. Possible values are `AVERAGE`, `COUNT`, `MAX`, `MIN`, `OF_INTEREST_RATIO`, `OTHER_RATIO`, `SINGLE_VALUE` and `SUM`
     */
    topXAggregation: pulumi.Input<string>;
    /**
     * How to calculate the **topX** values. Possible values are `ASCENDING` and `DESCENDING`
     */
    topXDirection: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricDimensionDefinitionPlaceholders {
    /**
     * A custom placeholder to be used in a dimension value pattern
     */
    placeholders?: pulumi.Input<pulumi.Input<inputs.CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder>[]>;
}

export interface CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholder {
    /**
     * Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute, when **useFromChildCalls** is `true`. For the `COUNT` aggregation, the **kind** field is not applicable. Possible values are `COUNT`, `FIRST` and `LAST`.
     */
    aggregation?: pulumi.Input<string>;
    /**
     * The attribute to extract from. You can only use attributes of the **string** type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
     */
    attribute: pulumi.Input<string>;
    /**
     * Depending on the `kind` value:
     *
     *
     * * `REGEX_EXTRACTION`: The regular expression.
     *
     *
     * * `BETWEEN_DELIMITER`: The opening delimiter string to look for.
     *
     *
     * * All other values: The delimiter string to look for
     */
    delimiterOrRegex?: pulumi.Input<string>;
    /**
     * The closing delimiter string to look for. Required if the `kind` value is `BETWEEN_DELIMITER`. Not applicable otherwise
     */
    endDelimiter?: pulumi.Input<string>;
    /**
     * The type of extraction. Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted. When the `attribute` is `SERVICE_REQUEST_ATTRIBUTE` attribute and `aggregation` is `COUNT`, needs to be set to `ORIGINAL_TEXT`. Possible values are 	`AFTER_DELIMITER`, `BEFORE_DELIMITER`, `BETWEEN_DELIMITER`, `ORIGINAL_TEXT` and `REGEX_EXTRACTION`
     */
    kind: pulumi.Input<string>;
    /**
     * The name of the placeholder. Use it in the naming pattern as `{name}`
     */
    name: pulumi.Input<string>;
    /**
     * The format of the extracted string. Possible values are `ORIGINAL`, `TO_LOWER_CASE` and `TO_UPPER_CASE`
     */
    normalization?: pulumi.Input<string>;
    /**
     * The request attribute to extract from. Required if the `kind` value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise
     */
    requestAttribute?: pulumi.Input<string>;
    /**
     * Defines valid sources of request attributes for conditions or placeholders
     */
    source?: pulumi.Input<inputs.CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * If `true` request attribute will be taken from a child service call. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute. Defaults to `false`
     */
    useFromChildCalls?: pulumi.Input<boolean>;
}

export interface CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSource {
    /**
     * Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
     */
    managementZone?: pulumi.Input<string>;
    /**
     * Use only request attributes from services that have this tag. Use either this or `managementZone`
     */
    serviceTag?: pulumi.Input<inputs.CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTag {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
     */
    context?: pulumi.Input<string>;
    /**
     * The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
     */
    key: pulumi.Input<string>;
    /**
     * has no documentation
     */
    tagKey?: pulumi.Input<inputs.CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey>;
    /**
     * The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
     */
    value?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricDimensionDefinitionPlaceholdersPlaceholderSourceServiceTagTagKey {
    /**
     * has no documentation
     */
    context?: pulumi.Input<string>;
    /**
     * has no documentation
     */
    key?: pulumi.Input<string>;
}

export interface CalculatedServiceMetricMetricDefinition {
    /**
     * The metric to be captured. Possible values are `CPU_TIME`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DISK_IO_TIME`, `EXCEPTION_COUNT`, `FAILED_REQUEST_COUNT`, `FAILED_REQUEST_COUNT_CLIENT`, `FAILURE_RATE`, `FAILURE_RATE_CLIENT`, `HTTP_4XX_ERROR_COUNT`, `HTTP_4XX_ERROR_COUNT_CLIENT`, `HTTP_5XX_ERROR_COUNT`, `HTTP_5XX_ERROR_COUNT_CLIENT`, `IO_TIME`, `LOCK_TIME`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESSING_TIME`, `REQUEST_ATTRIBUTE`, `REQUEST_COUNT`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `SUCCESSFUL_REQUEST_COUNT`, `SUCCESSFUL_REQUEST_COUNT_CLIENT` and `WAIT_TIME`
     */
    metric: pulumi.Input<string>;
    /**
     * The request attribute to be captured. Only applicable when the **metric** parameter is set to `REQUEST_ATTRIBUTE`
     */
    requestAttribute?: pulumi.Input<string>;
}

export interface CalculatedSyntheticMetricDimension {
    /**
     * A dimensions for the metric usage
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.CalculatedSyntheticMetricDimensionDimension>[]>;
}

export interface CalculatedSyntheticMetricDimensionDimension {
    /**
     * The dimension of the metric. Possible values are `Event`, `Location`, `ResourceOrigin`
     */
    dimension: pulumi.Input<string>;
    /**
     * The number of top values to be calculated
     */
    topX?: pulumi.Input<number>;
}

export interface CalculatedSyntheticMetricFilter {
    /**
     * Only user actions of the specified type are included in the metric calculation
     */
    actionType?: pulumi.Input<string>;
    /**
     * Only executions finished with the specified error code are included in the metric calculation.
     */
    errorCode?: pulumi.Input<number>;
    /**
     * Only the specified browser clickpath event is included in the metric calculation. Specify the Dynatrace entity ID of the event here.
     */
    event?: pulumi.Input<string>;
    /**
     * The execution status of the monitors to be included in the metric calculation: `true` or `false`
     */
    hasError?: pulumi.Input<boolean>;
    /**
     * Only executions from the specified location are included in the metric calculation. Specify the Dynatrace entity ID of the location here.
     */
    location?: pulumi.Input<string>;
}

export interface CalculatedWebMetricDimension {
    /**
     * A dimensions for the metric usage
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.CalculatedWebMetricDimensionDimension>[]>;
}

export interface CalculatedWebMetricDimensionDimension {
    /**
     * The dimension of the metric. Possible values are `ApdexType`, `Browser`, `ErrorContext`, `ErrorOrigin`, `ErrorType`, `GeoLocation`, `StringProperty`, `UserActionType`
     */
    dimension: pulumi.Input<string>;
    /**
     * The key of the user action property. Only applicable for the StringProperty dimension.
     */
    propertyKey?: pulumi.Input<string>;
    /**
     * The number of top values to be calculated
     */
    topX: pulumi.Input<number>;
}

export interface CalculatedWebMetricMetricDefinition {
    /**
     * The metric to be captured. Possible values are `Apdex`, `ApplicationCache`, `Callback`, `CumulativeLayoutShift`, `DNSLookup`, `DOMComplete`, `DOMContentLoaded`, `DOMInteractive`, `DoubleProperty`, `ErrorCount`, `FirstContentfulPaint`, `FirstInputDelay`, `FirstInputStart`, `FirstPaint`, `HTMLDownloaded`, `LargestContentfulPaint`, `LoadEventEnd`, `LoadEventStart`, `LongProperty`, `LongTasksTime`, `NavigationStart`, `OnDOMContentLoaded`, `OnLoad`, `Processing`, `RedirectTime`, `Request`, `RequestStart`, `Response`, `SecureConnect`, `SpeedIndex`, `TCPConnect`, `TimeToFirstByte`, `UserActionDuration`, `VisuallyComplete`
     */
    metric: pulumi.Input<string>;
    /**
     * The key of the user action property. Only applicable for DoubleProperty and LongProperty metrics.
     */
    propertyKey?: pulumi.Input<string>;
}

export interface CalculatedWebMetricUserActionFilter {
    /**
     * Only actions with a duration more than or equal to this value (in milliseconds) are included in the metric calculation.
     */
    actionDurationFromMilliseconds?: pulumi.Input<number>;
    /**
     * Only actions with a duration less than or equal to this value (in milliseconds) are included in the metric calculation.
     */
    actionDurationToMilliseconds?: pulumi.Input<number>;
    /**
     * Only actions with the specified Apdex score are included in the metric calculation. Possible values: [ Frustrated, Satisfied, Tolerating, Unknown ]
     */
    apdex?: pulumi.Input<string>;
    /**
     * Only user actions coming from the specified browser family are included in the metric calculation.
     */
    browserFamily?: pulumi.Input<string>;
    /**
     * Only user actions coming from the specified browser type are included in the metric calculation.
     */
    browserType?: pulumi.Input<string>;
    /**
     * Only user actions coming from the specified browser version are included in the metric calculation.
     */
    browserVersion?: pulumi.Input<string>;
    /**
     * Only actions of users from this city are included in the metric calculation. Specify geolocation ID here.
     */
    city?: pulumi.Input<string>;
    /**
     * Only actions of users from this continent are included in the metric calculation. Specify geolocation ID here.
     */
    continent?: pulumi.Input<string>;
    /**
     * Only actions of users from this country are included in the metric calculation. Specify geolocation ID here.
     */
    country?: pulumi.Input<string>;
    /**
     * The status of custom actions in the metric calculation: `true` or `false`
     */
    customAction?: pulumi.Input<boolean>;
    /**
     * The custom error name of the actions to be included in the metric calculation.
     */
    customErrorName?: pulumi.Input<string>;
    /**
     * The custom error type of the actions to be included in the metric calculation.
     */
    customErrorType?: pulumi.Input<string>;
    /**
     * Only user actions coming from the specified domain are included in the metric calculation.
     */
    domain?: pulumi.Input<string>;
    /**
     * The error status of the actions to be included in the metric calculation: `true` or `false`
     */
    hasAnyError?: pulumi.Input<boolean>;
    /**
     * The custom error status of the actions to be included in the metric calculation: `true` or `false`
     */
    hasCustomErrors?: pulumi.Input<boolean>;
    /**
     * The request error status of the actions to be included in the metric calculation: `true` or `false`
     */
    hasHttpErrors?: pulumi.Input<boolean>;
    /**
     * The JavaScript error status of the actions to be included in the metric calculation: `true` or `false`
     */
    hasJavascriptErrors?: pulumi.Input<boolean>;
    /**
     * The HTTP error status code of the actions to be included in the metric calculation.
     */
    httpErrorCode?: pulumi.Input<number>;
    /**
     * Can be used in combination with httpErrorCode to define a range of error codes that will be included in the metric calculation.
     */
    httpErrorCodeTo?: pulumi.Input<number>;
    /**
     * The request path that has been determined to be the origin of an HTTP error of the actions to be included in the metric calculation.
     */
    httpPath?: pulumi.Input<string>;
    /**
     * Only actions coming from this IP address are included in the metric calculation.
     */
    ip?: pulumi.Input<string>;
    /**
     * The IPv6 status of the actions to be included in the metric calculation: `true` or `false`
     */
    ipV6Traffic?: pulumi.Input<boolean>;
    /**
     * The status of load actions in the metric calculation: `true` or `false`
     */
    loadAction?: pulumi.Input<boolean>;
    /**
     * Only actions coming from this OS family are included in the metric calculation.
     */
    osFamily?: pulumi.Input<string>;
    /**
     * Only actions coming from this OS version are included in the metric calculation.
     */
    osVersion?: pulumi.Input<string>;
    /**
     * The status of actions coming from real users in the metric calculation: `true` or `false`
     */
    realUser?: pulumi.Input<boolean>;
    /**
     * Only actions of users from this region are included in the metric calculation. Specify geolocation ID here.
     */
    region?: pulumi.Input<string>;
    /**
     * The status of actions coming from robots in the metric calculation: `true` or `false`
     */
    robot?: pulumi.Input<boolean>;
    /**
     * The status of actions coming from synthetic monitors in the metric calculation: `true` or `false`
     */
    synthetic?: pulumi.Input<boolean>;
    /**
     * Only actions on the specified group of views are included in the metric calculation.
     */
    targetViewGroup?: pulumi.Input<string>;
    /**
     * Specifies the match type of the view group filter, e.g. using Contains or Equals. Defaults to Equals.
     */
    targetViewGroupNameMatchType?: pulumi.Input<string>;
    /**
     * Only actions on the specified view are included in the metric calculation.
     */
    targetViewName?: pulumi.Input<string>;
    /**
     * Specifies the match type of the view name filter, e.g. using Contains or Equals. Defaults to Equals.
     */
    targetViewNameMatchType?: pulumi.Input<string>;
    /**
     * Only actions with this name are included in the metric calculation.
     */
    userActionName?: pulumi.Input<string>;
    /**
     * The definition of a calculated web metric.
     */
    userActionProperties?: pulumi.Input<pulumi.Input<inputs.CalculatedWebMetricUserActionFilterUserActionProperty>[]>;
    /**
     * The status of xhr actions in the metric calculation: `true` or `false`
     */
    xhrAction?: pulumi.Input<boolean>;
    /**
     * The status of route actions in the metric calculation: `true` or `false`
     */
    xhrRouteChangeAction?: pulumi.Input<boolean>;
}

export interface CalculatedWebMetricUserActionFilterUserActionProperty {
    /**
     * User Action Property
     */
    properties?: pulumi.Input<pulumi.Input<inputs.CalculatedWebMetricUserActionFilterUserActionPropertyProperty>[]>;
}

export interface CalculatedWebMetricUserActionFilterUserActionPropertyProperty {
    /**
     * Only actions that have a value greater than or equal to this are included in the metric calculation.
     */
    from?: pulumi.Input<number>;
    /**
     * The key of the action property we're checking.
     */
    key?: pulumi.Input<string>;
    /**
     * Specifies the match type of a string filter, e.g. using Contains or Equals.
     */
    matchType?: pulumi.Input<string>;
    /**
     * Only actions that have a value less than or equal to this are included in the metric calculation.
     */
    to?: pulumi.Input<number>;
    /**
     * Only actions that have this value in the specified property are included in the metric calculation.
     */
    value?: pulumi.Input<string>;
}

export interface CloudappWorkloaddetectionCloudFoundry {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface CloudappWorkloaddetectionDocker {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface CloudappWorkloaddetectionKubernetes {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Define rules to merge similar Kubernetes workloads into process groups. 
     *
     *  You can use workload properties like namespace name, base pod name or container name as well as the [environment variables DT_RELEASE_STAGE and DT_RELEASE_PRODUCT](https://dt-url.net/sb02v2a) for grouping processes of similar workloads. The first applicable rule will be applied. If no rule matches, “Namespace name” + “Base pod name” + “Container name” is used as fallback.
     */
    filters?: pulumi.Input<inputs.CloudappWorkloaddetectionKubernetesFilters>;
}

export interface CloudappWorkloaddetectionKubernetesFilters {
    filters: pulumi.Input<pulumi.Input<inputs.CloudappWorkloaddetectionKubernetesFiltersFilter>[]>;
}

export interface CloudappWorkloaddetectionKubernetesFiltersFilter {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * ID calculation based on
     */
    inclusionToggles: pulumi.Input<inputs.CloudappWorkloaddetectionKubernetesFiltersFilterInclusionToggles>;
    /**
     * When namespace
     */
    matchFilter: pulumi.Input<inputs.CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilter>;
}

export interface CloudappWorkloaddetectionKubernetesFiltersFilterInclusionToggles {
    /**
     * E.g. "cloud-credential-operator-" for "cloud-credential-operator-5ff6dbff57-gszgq"
     */
    incBasepod: pulumi.Input<boolean>;
    /**
     * Container name
     */
    incContainer: pulumi.Input<boolean>;
    /**
     * Namespace name
     */
    incNamespace: pulumi.Input<boolean>;
    /**
     * If Product is enabled and has no value, it defaults to Base pod name
     */
    incProduct: pulumi.Input<boolean>;
    /**
     * Stage
     */
    incStage: pulumi.Input<boolean>;
}

export interface CloudappWorkloaddetectionKubernetesFiltersFilterMatchFilter {
    /**
     * Possible Values: `CONTAINS`, `ENDS`, `EQUALS`, `EXISTS`, `NOT_CONTAINS`, `NOT_ENDS`, `NOT_EQUALS`, `NOT_STARTS`, `STARTS`
     */
    matchOperator: pulumi.Input<string>;
    /**
     * Namespace name
     */
    namespace?: pulumi.Input<string>;
}

export interface CredentialsCredentialUsageSummary {
    /**
     * The number of uses
     */
    count: pulumi.Input<number>;
    /**
     * Type of usage, `HTTP_MONITOR` or `BROWSER_MONITOR`
     */
    type: pulumi.Input<string>;
}

export interface CredentialsExternal {
    certificate?: pulumi.Input<string>;
    /**
     * Required for Azure Client Secret. No further documentation available
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Required for Azure Client Secret. No further documentation available
     */
    clientid?: pulumi.Input<string>;
    /**
     * No documentation available
     */
    credentialsUsedForExternalSynchronizations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * No documentation available
     */
    passwordSecretName?: pulumi.Input<string>;
    pathToCredentials?: pulumi.Input<string>;
    roleid?: pulumi.Input<string>;
    secretid?: pulumi.Input<string>;
    /**
     * Required for Azure Client Secret. No further documentation available
     */
    tenantid?: pulumi.Input<string>;
    /**
     * No documentation available
     */
    tokenSecretName?: pulumi.Input<string>;
    /**
     * No documentation available
     */
    usernameSecretName?: pulumi.Input<string>;
    vaultNamespace?: pulumi.Input<string>;
    /**
     * No documentation available
     */
    vaultUrl?: pulumi.Input<string>;
}

export interface CustomAnomaliesDimension {
    /**
     * A generic definition for a filter
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesDimensionDimension>[]>;
    /**
     * A filter for the metrics entity dimensions
     */
    entities?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesDimensionEntity>[]>;
    /**
     * A filter for the metrics string dimensions
     */
    strings?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesDimensionString>[]>;
}

export interface CustomAnomaliesDimensionDimension {
    /**
     * No documentation available
     */
    index?: pulumi.Input<number>;
    /**
     * The dimensions key on the metric
     */
    key?: pulumi.Input<string>;
    /**
     * No documentation available
     */
    name?: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesDimensionEntity {
    /**
     * A filter for a string value based on the given operator
     */
    filter: pulumi.Input<inputs.CustomAnomaliesDimensionEntityFilter>;
    /**
     * The dimensions key on the metric
     */
    key?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesDimensionEntityFilter {
    /**
     * The operator to match on
     */
    operator: pulumi.Input<string>;
    /**
     * The value to match on
     */
    value: pulumi.Input<string>;
}

export interface CustomAnomaliesDimensionString {
    /**
     * A filter for a string value based on the given operator
     */
    filter: pulumi.Input<inputs.CustomAnomaliesDimensionStringFilter>;
    /**
     * No documentation available
     */
    index?: pulumi.Input<number>;
    /**
     * The dimensions key on the metric
     */
    key?: pulumi.Input<string>;
    /**
     * No documentation available
     */
    name?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesDimensionStringFilter {
    /**
     * The operator to match on
     */
    operator: pulumi.Input<string>;
    /**
     * The value to match on
     */
    value: pulumi.Input<string>;
}

export interface CustomAnomaliesScope {
    /**
     * A scope filter for the related custom device group name
     */
    customDeviceGroupNames?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeCustomDeviceGroupName>[]>;
    /**
     * A scope filter for a monitored entity identifier
     */
    entities?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeEntity>[]>;
    /**
     * A scope filter for the related host group name
     */
    hostGroupNames?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeHostGroupName>[]>;
    /**
     * A scope filter for the related host name
     */
    hostNames?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeHostName>[]>;
    /**
     * A scope filter for a management zone identifier
     */
    managementZones?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeManagementZone>[]>;
    /**
     * A scope filter for a monitored entity name
     */
    names?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeName>[]>;
    /**
     * A scope filter for a process group identifier
     */
    processGroupIds?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeProcessGroupId>[]>;
    /**
     * A scope filter for the related process group name
     */
    processGroupNames?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeProcessGroupName>[]>;
    /**
     * A generic scope filter
     */
    scopes?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeScope>[]>;
    /**
     * A scope filter for tags on entities
     */
    tags?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesScopeTag>[]>;
}

export interface CustomAnomaliesScopeCustomDeviceGroupName {
    /**
     * A filter for a string value based on the given operator
     */
    filter: pulumi.Input<inputs.CustomAnomaliesScopeCustomDeviceGroupNameFilter>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeCustomDeviceGroupNameFilter {
    /**
     * The operator to match on
     */
    operator: pulumi.Input<string>;
    /**
     * The value to match on
     */
    value: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeEntity {
    /**
     * The monitored entities id to match on
     */
    id: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeHostGroupName {
    /**
     * A filter for a string value based on the given operator
     */
    filter: pulumi.Input<inputs.CustomAnomaliesScopeHostGroupNameFilter>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeHostGroupNameFilter {
    /**
     * The operator to match on
     */
    operator: pulumi.Input<string>;
    /**
     * The value to match on
     */
    value: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeHostName {
    /**
     * A filter for a string value based on the given operator
     */
    filter: pulumi.Input<inputs.CustomAnomaliesScopeHostNameFilter>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeHostNameFilter {
    /**
     * The operator to match on
     */
    operator: pulumi.Input<string>;
    /**
     * The value to match on
     */
    value: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeManagementZone {
    /**
     * The management zone id to match on
     */
    id?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeName {
    /**
     * A filter for a string value based on the given operator
     */
    filter: pulumi.Input<inputs.CustomAnomaliesScopeNameFilter>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeNameFilter {
    /**
     * The operator to match on
     */
    operator: pulumi.Input<string>;
    /**
     * The value to match on
     */
    value: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeProcessGroupId {
    /**
     * The process groups id to match on
     */
    id: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeProcessGroupName {
    /**
     * A filter for a string value based on the given operator
     */
    filter: pulumi.Input<inputs.CustomAnomaliesScopeProcessGroupNameFilter>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeProcessGroupNameFilter {
    /**
     * The operator to match on
     */
    operator: pulumi.Input<string>;
    /**
     * The value to match on
     */
    value: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeScope {
    /**
     * Defines the actual set of fields depending on the value
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeTag {
    /**
     * A filter for a string value based on the given operator
     */
    filter: pulumi.Input<inputs.CustomAnomaliesScopeTagFilter>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesScopeTagFilter {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface CustomAnomaliesStrategy {
    /**
     * An auto-adaptive baseline strategy to detect anomalies within metrics that show a regular change over time, as the baseline is also updated automatically. An example is to detect an anomaly in the number of received network packets or within the number of user actions over time
     */
    auto?: pulumi.Input<inputs.CustomAnomaliesStrategyAuto>;
    /**
     * A generic monitoring strategy
     */
    generics?: pulumi.Input<pulumi.Input<inputs.CustomAnomaliesStrategyGeneric>[]>;
    /**
     * A static threshold monitoring strategy to alert on hard limits within a given metric. An example is the violation of a critical memory limit
     */
    static?: pulumi.Input<inputs.CustomAnomaliesStrategyStatic>;
}

export interface CustomAnomaliesStrategyAuto {
    /**
     * The condition for the **threshold** value check: `ABOVE` or `BELOW`
     */
    alertCondition: pulumi.Input<string>;
    /**
     * If true, also one-minute samples without data are counted as violating samples
     */
    alertingOnMissingData?: pulumi.Input<boolean>;
    /**
     * The number of one-minute samples within the evaluation window that must go back to normal to close the event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of one-minute samples that form the sliding evaluation window
     */
    samples: pulumi.Input<number>;
    /**
     * Defines the factor of how many signal fluctuations are valid. Values above the baseline plus the signal fluctuation times the number of tolerated signal fluctuations are alerted
     */
    signalFluctuations: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface CustomAnomaliesStrategyGeneric {
    /**
     * Defines the actual set of fields depending on the value
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomAnomaliesStrategyStatic {
    /**
     * The condition for the **threshold** value check: `ABOVE` or `BELOW`
     */
    alertCondition: pulumi.Input<string>;
    /**
     * If true, also one-minute samples without data are counted as violating samples
     */
    alertingOnMissingData?: pulumi.Input<boolean>;
    /**
     * The number of one-minute samples within the evaluation window that must go back to normal to close the event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of one-minute samples that form the sliding evaluation window
     */
    samples: pulumi.Input<number>;
    /**
     * The value of the static threshold based on the specified unit
     */
    threshold: pulumi.Input<number>;
    /**
     * The unit of the threshold, matching the metric definition
     */
    unit: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The number of one-minute samples within the evaluation window that must violate the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface CustomAppAnomaliesErrorRateIncrease {
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Alert if the percentage of user actions affected by reported errors exceeds **both** the absolute threshold and the relative threshold
     */
    errorRateIncreaseAuto?: pulumi.Input<inputs.CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto>;
    /**
     * Alert if the custom reported error rate threshold is exceeded during any 5-minute period
     */
    errorRateIncreaseFixed?: pulumi.Input<inputs.CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed>;
}

export interface CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto {
    /**
     * Absolute threshold
     */
    thresholdAbsolute: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    thresholdRelative: pulumi.Input<number>;
}

export interface CustomAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed {
    /**
     * Possible Values: `Low`, `Medium`, `High`
     */
    sensitivity: pulumi.Input<string>;
    /**
     * Absolute threshold
     */
    thresholdAbsolute: pulumi.Input<number>;
}

export interface CustomAppAnomaliesSlowUserActions {
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    slowUserActionsAuto?: pulumi.Input<inputs.CustomAppAnomaliesSlowUserActionsSlowUserActionsAuto>;
    /**
     * no documentation available
     */
    slowUserActionsFixed?: pulumi.Input<inputs.CustomAppAnomaliesSlowUserActionsSlowUserActionsFixed>;
}

export interface CustomAppAnomaliesSlowUserActionsSlowUserActionsAuto {
    /**
     * To avoid over-alerting do not alert for low traffic applications with less than
     */
    durationAvoidOveralerting: pulumi.Input<inputs.CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting>;
    /**
     * Alert if the action duration of all user actions degrades beyond **both** the absolute and relative threshold:
     */
    durationThresholdAll: pulumi.Input<inputs.CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll>;
    /**
     * Alert if the action duration of the slowest 10% of user actions degrades beyond **both** the absolute and relative threshold:
     */
    durationThresholdSlowest: pulumi.Input<inputs.CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest>;
}

export interface CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting {
    /**
     * no documentation available
     */
    minActionRate: pulumi.Input<number>;
}

export interface CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll {
    /**
     * Absolute threshold
     */
    durationThreshold: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    slowdownPercentage: pulumi.Input<number>;
}

export interface CustomAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest {
    /**
     * Absolute threshold
     */
    durationThreshold: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    slowdownPercentage: pulumi.Input<number>;
}

export interface CustomAppAnomaliesSlowUserActionsSlowUserActionsFixed {
    /**
     * To avoid over-alerting do not alert for low traffic applications with less than
     */
    durationAvoidOveralerting: pulumi.Input<inputs.CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting>;
    /**
     * Alert if the action duration of all user actions degrades beyond the absolute threshold:
     */
    durationThresholdAllFixed: pulumi.Input<inputs.CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed>;
    /**
     * Alert if the action duration of the slowest 10% of user actions degrades beyond the absolute threshold:
     */
    durationThresholdSlowest: pulumi.Input<inputs.CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest>;
    /**
     * Possible Values: `Medium`, `High`, `Low`
     */
    sensitivity: pulumi.Input<string>;
}

export interface CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting {
    /**
     * no documentation available
     */
    minActionRate: pulumi.Input<number>;
}

export interface CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed {
    /**
     * Absolute threshold
     */
    durationThreshold: pulumi.Input<number>;
}

export interface CustomAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest {
    /**
     * Absolute threshold
     */
    durationThreshold: pulumi.Input<number>;
}

export interface CustomAppAnomaliesUnexpectedHighLoad {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
     */
    thresholdPercentage?: pulumi.Input<number>;
}

export interface CustomAppAnomaliesUnexpectedLowLoad {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic drops within your application.
     */
    thresholdPercentage?: pulumi.Input<number>;
}

export interface CustomAppCrashRateCrashRateIncrease {
    /**
     * Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users
     */
    crashRateIncreaseAuto?: pulumi.Input<inputs.CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto>;
    /**
     * Alert crash rate increases when the defined threshold is exceeded by a certain number of users
     */
    crashRateIncreaseFixed?: pulumi.Input<inputs.CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed>;
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto {
    /**
     * Dynatrace learns the typical crash rate for all app versions and will create an alert if the baseline is violated by more than a specified threshold. Analysis happens based on a sliding window of 10 minutes.
     */
    baselineViolationPercentage: pulumi.Input<number>;
    /**
     * Amount of users
     */
    concurrentUsers: pulumi.Input<number>;
    /**
     * Possible Values: `Low`, `Medium`, `High`
     */
    sensitivity: pulumi.Input<string>;
}

export interface CustomAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed {
    /**
     * Absolute threshold
     */
    absoluteCrashRate: pulumi.Input<number>;
    /**
     * Amount of users
     */
    concurrentUsers: pulumi.Input<number>;
}

export interface CustomAppEnablementRum {
    /**
     * (Field has overlap with `dynatrace.MobileApplication`) Percentage of user sessions captured and analyzed. By default, Dynatrace captures all user actions and user sessions for analysis. This approach ensures complete insight into your application’s performance and customer experience. You can optionally reduce the granularity of user-action and user-session analysis by capturing a lower percentage of user sessions. While this approach can reduce monitoring costs, it also results in lower visibility into how your customers are using your applications. For example, a setting of 10% results in Dynatrace analyzing only every tenth user session.
     */
    costAndTrafficControl: pulumi.Input<number>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface CustomServiceRule {
    /**
     * Additional annotations filter of the rule. Only classes where all listed annotations are available in the class itself or any of its superclasses are instrumented. Not applicable to PHP
     */
    annotations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The fully qualified class or interface to instrument (or a substring if matching to a string). Required for Java and .NET custom services. Not applicable to PHP
     */
    class?: pulumi.Input<inputs.CustomServiceRuleClass>;
    /**
     * Rule enabled/disabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The PHP file containing the class or methods to instrument. Required for PHP custom service. Not applicable to Java and .NET
     */
    file?: pulumi.Input<inputs.CustomServiceRuleFile>;
    /**
     * methods to instrument
     */
    methods: pulumi.Input<pulumi.Input<inputs.CustomServiceRuleMethod>[]>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface CustomServiceRuleClass {
    /**
     * Matcher applying to the class name (ENDS*WITH, EQUALS or STARTS*WITH). STARTS_WITH can only be used if there is at least one annotation defined. Default value is EQUALS
     */
    match?: pulumi.Input<string>;
    /**
     * The full name of the class / the name to match the class name with
     */
    name: pulumi.Input<string>;
}

export interface CustomServiceRuleFile {
    /**
     * Matcher applying to the file name (ENDS*WITH, EQUALS or STARTS*WITH). Default value is ENDS_WITH (if applicable)
     */
    match?: pulumi.Input<string>;
    /**
     * The full name of the file / the name to match the file name with
     */
    name: pulumi.Input<string>;
}

export interface CustomServiceRuleMethod {
    /**
     * Fully qualified types of argument the method expects
     */
    arguments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the method rule
     */
    id?: pulumi.Input<string>;
    /**
     * The modifiers of the method rule. Possible values are `ABSTRACT`, `EXTERN`, `FINAL`, `NATIVE` and `STATIC`
     */
    modifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The method to instrument
     */
    name: pulumi.Input<string>;
    /**
     * Fully qualified type the method returns
     */
    returns?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The visibility of the method rule. Possible values are `INTERNAL`, `PACKAGE_PROTECTED`, `PRIVATE`, `PROTECTED` and `PUBLIC`
     */
    visibility?: pulumi.Input<string>;
}

export interface CustomTagsTags {
    /**
     * A Tag Filter
     */
    filters?: pulumi.Input<pulumi.Input<inputs.CustomTagsTagsFilter>[]>;
}

export interface CustomTagsTagsFilter {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface DashboardDashboardMetadata {
    /**
     * The tile uses consistent colors when rendering its content
     */
    consistentColors?: pulumi.Input<boolean>;
    /**
     * Dashboard filter configuration of a dashboard
     */
    dynamicFilters?: pulumi.Input<inputs.DashboardDashboardMetadataDynamicFilters>;
    /**
     * Global filter Settings for the Dashboard
     */
    filter?: pulumi.Input<inputs.DashboardDashboardMetadataFilter>;
    /**
     * the name of the dashboard
     */
    name: pulumi.Input<string>;
    /**
     * the owner of the dashboard
     */
    owner: pulumi.Input<string>;
    /**
     * the dashboard is a preset (`true`) or not (`false`). Default is `false`.
     */
    preset?: pulumi.Input<boolean>;
    /**
     * the dashboard is shared (`true`) or private (`false`)
     *
     * @deprecated Please use the resource `dynatrace.DashboardSharing` to configure share settings
     */
    shared?: pulumi.Input<boolean>;
    /**
     * represents sharing configuration of a dashboard
     *
     * @deprecated Please use the resource `dynatrace.DashboardSharing` to configure share settings
     */
    sharingDetails?: pulumi.Input<inputs.DashboardDashboardMetadataSharingDetails>;
    /**
     * a set of tags assigned to the dashboard
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * No documentation available
     */
    tilesNameSize?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * a set of all possible global dashboard filters that can be applied to dashboard
     */
    validFilterKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DashboardDashboardMetadataDynamicFilters {
    /**
     * A set of all possible global dashboard filters that can be applied to a dashboard
     */
    filters: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A set of generic tag filters that can be applied to a dashboard
     */
    genericTagFilters?: pulumi.Input<inputs.DashboardDashboardMetadataDynamicFiltersGenericTagFilters>;
    /**
     * A set of entities applied for tag filter suggestions. You can fetch the list of possible values with the [GET all entity types](https://dt-url.net/dw03s7h)request. 
     *
     * Only applicable if the **filters** set includes `TAG_KEY:<tagname>`
     */
    tagSuggestionTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardDashboardMetadataDynamicFiltersGenericTagFilters {
    filters: pulumi.Input<pulumi.Input<inputs.DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter>[]>;
}

export interface DashboardDashboardMetadataDynamicFiltersGenericTagFiltersFilter {
    /**
     * Entity types affected by tag
     */
    entityTypes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The display name used to identify this generic filter
     */
    name?: pulumi.Input<string>;
    /**
     * The entity type for which the suggestions should be provided.
     */
    suggestionsFromEntityType?: pulumi.Input<string>;
    /**
     * The tag key for this filter
     */
    tagKey?: pulumi.Input<string>;
}

export interface DashboardDashboardMetadataFilter {
    /**
     * the management zone this dashboard applies to
     */
    managementZones?: pulumi.Input<pulumi.Input<inputs.DashboardDashboardMetadataFilterManagementZone>[]>;
    /**
     * the default timeframe of the dashboard
     */
    timeframe?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardDashboardMetadataFilterManagementZone {
    /**
     * a short description of the Dynatrace entity
     */
    description?: pulumi.Input<string>;
    /**
     * the ID of the Dynatrace entity
     */
    id: pulumi.Input<string>;
    /**
     * the name of the Dynatrace entity
     */
    name?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardDashboardMetadataSharingDetails {
    /**
     * If `true`, the dashboard is shared via link and authenticated users with the link can view
     */
    linkShared?: pulumi.Input<boolean>;
    /**
     * If `true`, the dashboard is published to anyone on this environment
     */
    published?: pulumi.Input<boolean>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardMetadata {
    /**
     * Dynatrace server version
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * A Sorted list of the version numbers of the configuration
     */
    configurationVersions?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * A Sorted list of the version numbers of the configuration
     */
    currentConfigurationVersions?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DashboardSharingPermissions {
    /**
     * Access permissions of the dashboard
     */
    permissions?: pulumi.Input<pulumi.Input<inputs.DashboardSharingPermissionsPermission>[]>;
}

export interface DashboardSharingPermissionsPermission {
    /**
     * The ID of the user or group to whom the permission is granted.
     */
    id?: pulumi.Input<string>;
    /**
     * The level of the permission:
     */
    level: pulumi.Input<string>;
    /**
     * The type of the permission:
     */
    type: pulumi.Input<string>;
}

export interface DashboardSharingPublic {
    /**
     * A list of management zones that can display data on the publicly shared dashboard.
     */
    managementZones: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of URLs for anonymous access to the dashboard indexed by management zone name
     */
    urls?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface DashboardTile {
    /**
     * The list of Dynatrace entities, assigned to the tile
     */
    assignedEntities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Auto Refresh is disabled (`true`)
     */
    autoRefreshDisabled?: pulumi.Input<boolean>;
    /**
     * the position and size of a tile
     */
    bounds?: pulumi.Input<inputs.DashboardTileBounds>;
    chartVisible?: pulumi.Input<boolean>;
    /**
     * The tile is configured and ready to use (`true`) or just placed on the dashboard (`false`)
     */
    configured?: pulumi.Input<boolean>;
    /**
     * The name of the tile, set by user
     */
    customName?: pulumi.Input<string>;
    /**
     * Include (`false') or exclude (`true`) maintenance windows from availability calculations
     */
    excludeMaintenanceWindows?: pulumi.Input<boolean>;
    /**
     * is filter applied to a tile. It overrides dashboard's filter
     */
    filter?: pulumi.Input<inputs.DashboardTileFilter>;
    /**
     * the position and size of a tile
     */
    filterConfig?: pulumi.Input<inputs.DashboardTileFilterConfig>;
    /**
     * The limit of the results, if not set will use the default value of the system
     */
    limit?: pulumi.Input<number>;
    /**
     * The markdown-formatted content of the tile
     */
    markdown?: pulumi.Input<string>;
    /**
     * The metric assigned to the tile
     */
    metric?: pulumi.Input<string>;
    /**
     * the name of the tile
     */
    name: pulumi.Input<string>;
    /**
     * The size of the tile name. Possible values are `small`, `medium` and `large`.
     */
    nameSize?: pulumi.Input<string>;
    /**
     * A [user session query](https://www.dynatrace.com/support/help/shortlink/usql-info) executed by the tile
     */
    query?: pulumi.Input<string>;
    /**
     * the type of the tile. Must be either `APPLICATION_WORLDMAP`, `RESOURCES`, `THIRD_PARTY_MOST_ACTIVE`, `UEM_CONVERSIONS_PER_GOAL`, `PROCESS_GROUPS_ONE` or `HOST` .
     */
    tileType: pulumi.Input<string>;
    /**
     * The comparison timeframe of the query. If specified, you additionally get the results of the same query with the specified time shift
     */
    timeFrameShift?: pulumi.Input<string>;
    /**
     * The attribute `type` exists for backwards compatibilty. Usage is discouraged. You should use `visualization` instead.
     */
    type?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The visualization of the tile. Possible values are: `COLUMN_CHART`, `FUNNEL`, `LINE_CHART`, `PIE_CHART`, `SINGLE_VALUE`, `TABLE`
     */
    visualization?: pulumi.Input<string>;
    /**
     * Configuration of a User session query visualization tile
     */
    visualizationConfig?: pulumi.Input<inputs.DashboardTileVisualizationConfig>;
}

export interface DashboardTileBounds {
    /**
     * the height of the tile, in pixels
     */
    height: pulumi.Input<number>;
    /**
     * the horizontal distance from the top left corner of the dashboard to the top left corner of the tile, in pixels
     */
    left: pulumi.Input<number>;
    /**
     * the vertical distance from the top left corner of the dashboard to the top left corner of the tile, in pixels
     */
    top: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * the width of the tile, in pixels
     */
    width: pulumi.Input<number>;
}

export interface DashboardTileFilter {
    /**
     * the management zone this tile applies to
     */
    managementZones?: pulumi.Input<pulumi.Input<inputs.DashboardTileFilterManagementZone>[]>;
    /**
     * the default timeframe of the tile
     */
    timeframe?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardTileFilterConfig {
    /**
     * Configuration of a custom chart
     */
    chartConfig?: pulumi.Input<inputs.DashboardTileFilterConfigChartConfig>;
    /**
     * The name of the tile, set by user
     */
    customName: pulumi.Input<string>;
    /**
     * The default name of the tile
     */
    defaultName: pulumi.Input<string>;
    /**
     * Configuration of a custom chart
     */
    filters?: pulumi.Input<inputs.DashboardTileFilterConfigFilters>;
    /**
     * The type of the filter. Possible values are `ALB`, `APPLICATION`, `APPLICATION_METHOD`, `APPMON`, `ASG`, `AWS_CREDENTIALS`, `AWS_CUSTOM_SERVICE`, `AWS_LAMBDA_FUNCTION`, `CLOUD_APPLICATION`, `CLOUD_APPLICATION_INSTANCE`, `CLOUD_APPLICATION_NAMESPACE`, `CONTAINER_GROUP_INSTANCE`, `CUSTOM_APPLICATION`, `CUSTOM_DEVICES`, `CUSTOM_SERVICES`, `DATABASE`, `DATABASE_KEY_REQUEST`, `DCRUM_APPLICATION`, `DCRUM_ENTITY`, `DYNAMO_DB`, `EBS`, `EC2`, `ELB`, `ENVIRONMENT`, `ESXI`, `EXTERNAL_SYNTHETIC_TEST`, `GLOBAL_BACKGROUND_ACTIVITY`, `HOST`, `IOT`, `KUBERNETES_CLUSTER`, `KUBERNETES_NODE`, `MDA_SERVICE`, `MIXED`, `MOBILE_APPLICATION`, `MONITORED_ENTITY`, `NLB`, `PG_BACKGROUND_ACTIVITY`, `PROBLEM`, `PROCESS_GROUP_INSTANCE`, `RDS`, `REMOTE_PLUGIN`, `SERVICE`, `SERVICE_KEY_REQUEST`, `SYNTHETIC_BROWSER_MONITOR`, `SYNTHETIC_HTTPCHECK`, `SYNTHETIC_HTTPCHECK_STEP`, `SYNTHETIC_LOCATION`, `SYNTHETIC_TEST`, `SYNTHETIC_TEST_STEP`, `UI_ENTITY`, `VIRTUAL_MACHINE`, `WEB_CHECK`.
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardTileFilterConfigChartConfig {
    /**
     * The optional custom y-axis limits
     */
    axisLimits?: pulumi.Input<{[key: string]: pulumi.Input<number>}>;
    /**
     * Either one of `Bit`, `BitPerHour`, `BitPerMinute`, `BitPerSecond`, `Byte`, `BytePerHour`, `BytePerMinute`, `BytePerSecond`, `Cores`, `Count`, `Day`, `DecibelMilliWatt`, `GibiByte`, `Giga`, `GigaByte`, `Hour`, `KibiByte`, `KibiBytePerHour`, `KibiBytePerMinute`, `KibiBytePerSecond`, `Kilo`, `KiloByte`, `KiloBytePerHour`, `KiloBytePerMinute`, `KiloBytePerSecond`, `MebiByte`, `MebiBytePerHour`, `MebiBytePerMinute`, `MebiBytePerSecond`, `Mega`, `MegaByte`, `MegaBytePerHour`, `MegaBytePerMinute`, `MegaBytePerSecond`, `MicroSecond`, `MilliCores`, `MilliSecond`, `MilliSecondPerMinute`, `Minute`, `Month`, `NanoSecond`, `NanoSecondPerMinute`, `NotApplicable`, `PerHour`, `PerMinute`, `PerSecond`, `Percent`, `Pixel`, `Promille`, `Ratio`, `Second`, `State`, `Unspecified`, `Week`, `Year`
     */
    leftAxisCustomUnit?: pulumi.Input<string>;
    /**
     * Defines if a legend should be shown
     */
    legend?: pulumi.Input<boolean>;
    /**
     * Additional information about charted metric
     */
    resultMetadatas?: pulumi.Input<pulumi.Input<inputs.DashboardTileFilterConfigChartConfigResultMetadata>[]>;
    /**
     * Either one of `Bit`, `BitPerHour`, `BitPerMinute`, `BitPerSecond`, `Byte`, `BytePerHour`, `BytePerMinute`, `BytePerSecond`, `Cores`, `Count`, `Day`, `DecibelMilliWatt`, `GibiByte`, `Giga`, `GigaByte`, `Hour`, `KibiByte`, `KibiBytePerHour`, `KibiBytePerMinute`, `KibiBytePerSecond`, `Kilo`, `KiloByte`, `KiloBytePerHour`, `KiloBytePerMinute`, `KiloBytePerSecond`, `MebiByte`, `MebiBytePerHour`, `MebiBytePerMinute`, `MebiBytePerSecond`, `Mega`, `MegaByte`, `MegaBytePerHour`, `MegaBytePerMinute`, `MegaBytePerSecond`, `MicroSecond`, `MilliCores`, `MilliSecond`, `MilliSecondPerMinute`, `Minute`, `Month`, `NanoSecond`, `NanoSecondPerMinute`, `NotApplicable`, `PerHour`, `PerMinute`, `PerSecond`, `Percent`, `Pixel`, `Promille`, `Ratio`, `Second`, `State`, `Unspecified`, `Week`, `Year`
     */
    rightAxisCustomUnit?: pulumi.Input<string>;
    /**
     * A list of charted metrics
     */
    series?: pulumi.Input<pulumi.Input<inputs.DashboardTileFilterConfigChartConfigSeries>[]>;
    /**
     * The type of the chart
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardTileFilterConfigChartConfigResultMetadata {
    /**
     * Additional metadata for charted metric
     */
    configs?: pulumi.Input<pulumi.Input<inputs.DashboardTileFilterConfigChartConfigResultMetadataConfig>[]>;
}

export interface DashboardTileFilterConfigChartConfigResultMetadataConfig {
    /**
     * The color of the metric in the chart, hex format
     */
    customColor?: pulumi.Input<string>;
    /**
     * A generated key by the Dynatrace Server
     */
    key?: pulumi.Input<string>;
    /**
     * The timestamp of the last metadata modification, in UTC milliseconds
     */
    lastModified?: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardTileFilterConfigChartConfigSeries {
    /**
     * The charted aggregation of the metric
     */
    aggregation: pulumi.Input<string>;
    aggregationRate?: pulumi.Input<string>;
    /**
     * Configuration of the charted metric splitting
     */
    dimensions?: pulumi.Input<pulumi.Input<inputs.DashboardTileFilterConfigChartConfigSeriesDimension>[]>;
    /**
     * The visualization of the timeseries chart
     */
    entityType: pulumi.Input<string>;
    /**
     * The name of the charted metric
     */
    metric: pulumi.Input<string>;
    /**
     * The charted percentile. Only applicable if the **aggregation** is set to `PERCENTILE`
     */
    percentile?: pulumi.Input<number>;
    /**
     * Sort ascending (`true`) or descending (`false`)
     */
    sortAscending?: pulumi.Input<boolean>;
    /**
     * Sort the column (`true`) or (`false`)
     */
    sortColumn?: pulumi.Input<boolean>;
    /**
     * The visualization of the timeseries chart. Possible values are `AREA`, `BAR` and `LINE`.
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardTileFilterConfigChartConfigSeriesDimension {
    entityDimension?: pulumi.Input<boolean>;
    /**
     * The ID of the dimension by which the metric is split
     */
    id: pulumi.Input<string>;
    /**
     * The name of the dimension by which the metric is split
     */
    name?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The splitting value
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DashboardTileFilterConfigFilters {
    /**
     * the tiles this Dashboard consist of
     */
    filters?: pulumi.Input<pulumi.Input<inputs.DashboardTileFilterConfigFiltersFilter>[]>;
}

export interface DashboardTileFilterConfigFiltersFilter {
    /**
     * The entity type (e.g. HOST, SERVICE, ...)
     */
    entityType: pulumi.Input<string>;
    /**
     * the tiles this Dashboard consist of
     */
    matches?: pulumi.Input<pulumi.Input<inputs.DashboardTileFilterConfigFiltersFilterMatch>[]>;
}

export interface DashboardTileFilterConfigFiltersFilterMatch {
    /**
     * The entity type (e.g. HOST, SERVICE, ...)
     */
    key: pulumi.Input<string>;
    /**
     * the tiles this Dashboard consist of
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface DashboardTileFilterManagementZone {
    /**
     * a short description of the Dynatrace entity
     */
    description?: pulumi.Input<string>;
    /**
     * the ID of the Dynatrace entity
     */
    id: pulumi.Input<string>;
    /**
     * the name of the Dynatrace entity
     */
    name?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardTileVisualizationConfig {
    /**
     * The axis bucketing when enabled groups similar series in the same virtual axis
     */
    hasAxisBucketing?: pulumi.Input<boolean>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DashboardsAllowlistAllowlist {
    urlpatterns: pulumi.Input<pulumi.Input<inputs.DashboardsAllowlistAllowlistUrlpattern>[]>;
}

export interface DashboardsAllowlistAllowlistUrlpattern {
    /**
     * Possible Values: `Equals`, `StartsWith`
     */
    rule: pulumi.Input<string>;
    /**
     * Pattern
     */
    template: pulumi.Input<string>;
}

export interface DashboardsGeneralDefaultDashboardList {
    defaultDashboards: pulumi.Input<pulumi.Input<inputs.DashboardsGeneralDefaultDashboardListDefaultDashboard>[]>;
}

export interface DashboardsGeneralDefaultDashboardListDefaultDashboard {
    /**
     * Preset dashboard to show as default landing page
     */
    dashboard: pulumi.Input<string>;
    /**
     * Show selected dashboard by default for this user group
     */
    userGroup: pulumi.Input<string>;
}

export interface DashboardsPresetsDashboardPresetsList {
    dashboardPresets: pulumi.Input<pulumi.Input<inputs.DashboardsPresetsDashboardPresetsListDashboardPreset>[]>;
}

export interface DashboardsPresetsDashboardPresetsListDashboardPreset {
    /**
     * Dashboard preset to limit visibility for
     */
    dashboardPreset: pulumi.Input<string>;
    /**
     * User group to show selected dashboard preset to
     */
    userGroup: pulumi.Input<string>;
}

export interface DataPrivacyDataCollection {
    /**
     * With [Data-collection and opt-in mode](https://dt-url.net/7l3p0p3h) enabled, Real User Monitoring data isn't captured until dtrum.enable() is called for specific user sessions.
     */
    optInModeEnabled: pulumi.Input<boolean>;
}

export interface DataPrivacyDoNotTrack {
    /**
     * Comply with "Do Not Track" browser settings
     */
    complyWithDoNotTrack: pulumi.Input<boolean>;
    /**
     * Possible Values: `Anonymous`, `Disable_rum`
     */
    doNotTrack?: pulumi.Input<string>;
}

export interface DataPrivacyMasking {
    /**
     * Possible Values: `All`, `Public`
     *
     * @deprecated This property is not supported anymore by the Dynatrace REST API (since schema version 4)
     */
    ipAddressMasking?: pulumi.Input<string>;
    /**
     * Dynatrace captures the IP addresses of your end-users to determine the regions from which they access your application. To learn more, visit [Mask IPs and GPS coordinates](https://dt-url.net/mask-end-users-ip-addresses).. Dynatrace also captures GPS data from mobile apps that provide their users with the option of sharing geolocation data. On the server side, Dynatrace captures IP addresses to enable detailed troubleshooting for Dynatrace service calls.
     *
     * Once enabled, IP address masking sets the last octet of monitored IPv4 addresses and the last 80 bits of IPv6 addresses to zeroes. GPS coordinates are rounded up to 1 decimal place (~10 km). This masking occurs in memory. Full IP addresses are never written to disk. Location lookups are made using anonymized IP addresses and GPS coordinates.
     *
     * @deprecated This property is not supported anymore by the Dynatrace REST API (since schema version 4)
     */
    ipAddressMaskingEnabled?: pulumi.Input<boolean>;
    /**
     * Dynatrace captures the URIs and request headers sent from desktop and mobile browsers. Dynatrace also captures full URIs on the server-side to enable detailed performance analysis of your applications. For complete details, visit [Mask personal data in URIs](https://dt-url.net/mask-personal-data-in-URIs).. URIs and request headers contain personal data. When this setting is enabled, Dynatrace automatically detects UUIDs, credit card numbers, email addresses, IP addresses, and other IDs and replaces those values with placeholders. The personal data is then masked in PurePath analysis, error analysis, user action naming for RUM, and elsewhere in Dynatrace.
     */
    personalDataUriMaskingEnabled: pulumi.Input<boolean>;
    /**
     * When Dynatrace detects a user action that triggers a page load or an AJAX/XHR action. To learn more about masking user actions, visit [Mask user actions](https://dt-url.net/mask-user-action).. When Dynatrace detects a user action that triggers a page load or an AJAX/XHR action, it constructs a name for the user action based on:
     *
     * - User event type (click on..., loading of page..., or keypress on...)
     * - Title, caption, label, value, ID, className, or other available property of the related HTML element (for example, an image, button, checkbox, or text input field).
     *
     * In most instances, the default approach to user-action naming works well, resulting in user-action names such as:
     *
     * - click on "Search" on page /search.html
     * - keypress on "Feedback" on page /contact.html
     * - touch on "Homescreen" of page /list.jsf
     *
     * In rare circumstances, confidential data (for example, email addresses, usernames, or account numbers) can be unintentionally included in user action names because the confidential data itself is included in an HTML element label, attribute, or other value (for example, click on "my Account Number: 1231231"...). If such confidential data appears in your application's user action names, enable the Mask user action names setting. This setting replaces specific HTML element names and values with generic HTML element names. With user-action name masking enabled, the user action names listed above appear as:
     *
     * - click on INPUT on page /search.html
     * - keypress on TEXTAREA on page /contact.html
     * - touch on DIV of page /list.jsf
     */
    userActionMaskingEnabled: pulumi.Input<boolean>;
}

export interface DataPrivacyUserTracking {
    /**
     * When enabled, Dynatrace places a [persistent cookie](https://dt-url.net/313o0p4n) on all end-user devices to identify returning users.
     */
    persistentCookieEnabled: pulumi.Input<boolean>;
}

export interface DatabaseAnomaliesDbConnectFailures {
    /**
     * Number of failed database connections during any **eval_period** minutes period to trigger an alert
     */
    connectionFailsCount?: pulumi.Input<number>;
    /**
     * The *X* minutes time period during which the **connection*fails*count** is evaluated
     */
    evalPeriod?: pulumi.Input<number>;
}

export interface DatabaseAnomaliesFailureRate {
    /**
     * Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
     */
    auto?: pulumi.Input<inputs.DatabaseAnomaliesFailureRateAuto>;
    /**
     * Fixed thresholds for failure rate increase detection
     */
    thresholds?: pulumi.Input<inputs.DatabaseAnomaliesFailureRateThresholds>;
}

export interface DatabaseAnomaliesFailureRateAuto {
    /**
     * Absolute increase of failing service calls to trigger an alert, %
     */
    absolute: pulumi.Input<number>;
    /**
     * Relative increase of failing service calls to trigger an alert, %
     */
    relative: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DatabaseAnomaliesFailureRateThresholds {
    /**
     * Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert
     */
    sensitivity: pulumi.Input<string>;
    /**
     * Failure rate during any 5-minute period to trigger an alert, %
     */
    threshold: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DatabaseAnomaliesLoad {
    /**
     * The configuration of traffic drops detection
     */
    drops?: pulumi.Input<inputs.DatabaseAnomaliesLoadDrops>;
    /**
     * The configuration of traffic spikes detection
     */
    spikes?: pulumi.Input<inputs.DatabaseAnomaliesLoadSpikes>;
}

export interface DatabaseAnomaliesLoadDrops {
    /**
     * Alert if the service stays in abnormal state for at least *X* minutes
     */
    minutes?: pulumi.Input<number>;
    /**
     * Alert if the observed load is more than *X* % of the expected value
     */
    percent?: pulumi.Input<number>;
}

export interface DatabaseAnomaliesLoadSpikes {
    /**
     * Alert if the service stays in abnormal state for at least *X* minutes
     */
    minutes?: pulumi.Input<number>;
    /**
     * Alert if the observed load is more than *X* % of the expected value
     */
    percent?: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DatabaseAnomaliesResponseTime {
    /**
     * Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
     */
    auto?: pulumi.Input<inputs.DatabaseAnomaliesResponseTimeAuto>;
    /**
     * Fixed thresholds for response time degradation detection
     */
    thresholds?: pulumi.Input<inputs.DatabaseAnomaliesResponseTimeThresholds>;
}

export interface DatabaseAnomaliesResponseTimeAuto {
    /**
     * Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
     */
    load: pulumi.Input<string>;
    /**
     * Alert if the response time degrades by more than *X* milliseconds
     */
    milliseconds: pulumi.Input<number>;
    /**
     * Alert if the response time degrades by more than *X* %
     */
    percent: pulumi.Input<number>;
    /**
     * Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
     */
    slowestMilliseconds: pulumi.Input<number>;
    /**
     * Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
     */
    slowestPercent: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DatabaseAnomaliesResponseTimeThresholds {
    /**
     * Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
     */
    load: pulumi.Input<string>;
    /**
     * Response time during any 5-minute period to trigger an alert, in milliseconds
     */
    milliseconds: pulumi.Input<number>;
    /**
     * Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers an alert
     */
    sensitivity: pulumi.Input<string>;
    /**
     * Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds
     */
    slowestMilliseconds: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface DatabaseAnomaliesV2DatabaseConnections {
    /**
     * Detect failed database connects
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Threshold
     */
    maxFailedConnects?: pulumi.Input<number>;
    /**
     * Time span
     */
    timePeriod?: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2FailureRate {
    /**
     * Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:
     */
    autoDetection?: pulumi.Input<inputs.DatabaseAnomaliesV2FailureRateAutoDetection>;
    /**
     * Detection mode for increases in failure rate
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect increases in failure rate
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Alert if a given failure rate is exceeded during any 5-minute-period
     */
    fixedDetection?: pulumi.Input<inputs.DatabaseAnomaliesV2FailureRateFixedDetection>;
}

export interface DatabaseAnomaliesV2FailureRateAutoDetection {
    /**
     * Absolute threshold
     */
    absoluteIncrease: pulumi.Input<number>;
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.DatabaseAnomaliesV2FailureRateAutoDetectionOverAlertingProtection>;
    /**
     * Relative threshold
     */
    relativeIncrease: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2FailureRateAutoDetectionOverAlertingProtection {
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Only alert if there are at least
     */
    requestsPerMinute: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2FailureRateFixedDetection {
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.DatabaseAnomaliesV2FailureRateFixedDetectionOverAlertingProtection>;
    /**
     * no documentation available
     */
    sensitivity: pulumi.Input<string>;
    /**
     * no documentation available
     */
    threshold: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2FailureRateFixedDetectionOverAlertingProtection {
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Only alert if there are at least
     */
    requestsPerMinute: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2LoadDrops {
    /**
     * Detect service load drops
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Threshold
     */
    loadDropPercent?: pulumi.Input<number>;
    /**
     * Time span
     */
    minutesAbnormalState?: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2LoadSpikes {
    /**
     * Detect service load spikes
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Threshold
     */
    loadSpikePercent?: pulumi.Input<number>;
    /**
     * Time span
     */
    minutesAbnormalState?: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2ResponseTime {
    /**
     * no documentation available
     */
    autoDetection?: pulumi.Input<inputs.DatabaseAnomaliesV2ResponseTimeAutoDetection>;
    /**
     * Detection mode for response time degradations
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect response time degradations
     */
    enabled: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    fixedDetection?: pulumi.Input<inputs.DatabaseAnomaliesV2ResponseTimeFixedDetection>;
}

export interface DatabaseAnomaliesV2ResponseTimeAutoDetection {
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.DatabaseAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection>;
    /**
     * Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:
     */
    responseTimeAll: pulumi.Input<inputs.DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll>;
    /**
     * Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
     */
    responseTimeSlowest: pulumi.Input<inputs.DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest>;
}

export interface DatabaseAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection {
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Only alert if there are at least
     */
    requestsPerMinute: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll {
    /**
     * Absolute threshold
     */
    degradationMilliseconds: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    degradationPercent: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest {
    /**
     * Absolute threshold
     */
    slowestDegradationMilliseconds: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    slowestDegradationPercent: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2ResponseTimeFixedDetection {
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.DatabaseAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection>;
    /**
     * Alert if the median response time of all requests degrades beyond this threshold within an observation period of 5 minutes:
     */
    responseTimeAll: pulumi.Input<inputs.DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll>;
    /**
     * Alert if the response time of the slowest 10% of requests degrades beyond this threshold within an observation period of 5 minutes:
     */
    responseTimeSlowest: pulumi.Input<inputs.DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest>;
    /**
     * no documentation available
     */
    sensitivity: pulumi.Input<string>;
}

export interface DatabaseAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection {
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Only alert if there are at least
     */
    requestsPerMinute: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll {
    /**
     * Threshold
     */
    degradationMilliseconds: pulumi.Input<number>;
}

export interface DatabaseAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest {
    /**
     * Threshold
     */
    slowestDegradationMilliseconds: pulumi.Input<number>;
}

export interface DavisAnomalyDetectorsAnalyzer {
    /**
     * Input fields for the specified analyzer
     */
    input?: pulumi.Input<inputs.DavisAnomalyDetectorsAnalyzerInput>;
    /**
     * Fully qualified name of the analyzer
     */
    name: pulumi.Input<string>;
}

export interface DavisAnomalyDetectorsAnalyzerInput {
    analyzerInputFields: pulumi.Input<pulumi.Input<inputs.DavisAnomalyDetectorsAnalyzerInputAnalyzerInputField>[]>;
}

export interface DavisAnomalyDetectorsAnalyzerInputAnalyzerInputField {
    /**
     * no documentation available
     */
    key: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface DavisAnomalyDetectorsEventTemplate {
    /**
     * Set of additional key-value properties to be attached to the triggered event.
     */
    properties?: pulumi.Input<inputs.DavisAnomalyDetectorsEventTemplateProperties>;
}

export interface DavisAnomalyDetectorsEventTemplateProperties {
    properties: pulumi.Input<pulumi.Input<inputs.DavisAnomalyDetectorsEventTemplatePropertiesProperty>[]>;
}

export interface DavisAnomalyDetectorsEventTemplatePropertiesProperty {
    /**
     * no documentation available
     */
    key: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface DavisAnomalyDetectorsExecutionSettings {
    /**
     * Minute offset of sliding evaluation window for metrics with latency
     */
    queryOffset?: pulumi.Input<number>;
}

export interface DduPoolEvents {
    /**
     * Is the limit configuration enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Type of the limit applied: MONTHLY or ANNUAL
     */
    type?: pulumi.Input<string>;
    /**
     * Value of the DDU limit applied for provided timerange
     */
    value?: pulumi.Input<number>;
}

export interface DduPoolLogMonitoring {
    /**
     * Is the limit configuration enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Type of the limit applied: MONTHLY or ANNUAL
     */
    type?: pulumi.Input<string>;
    /**
     * Value of the DDU limit applied for provided timerange
     */
    value?: pulumi.Input<number>;
}

export interface DduPoolMetrics {
    /**
     * Is the limit configuration enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Type of the limit applied: MONTHLY or ANNUAL
     */
    type?: pulumi.Input<string>;
    /**
     * Value of the DDU limit applied for provided timerange
     */
    value?: pulumi.Input<number>;
}

export interface DduPoolServerless {
    /**
     * Is the limit configuration enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Type of the limit applied: MONTHLY or ANNUAL
     */
    type?: pulumi.Input<string>;
    /**
     * Value of the DDU limit applied for provided timerange
     */
    value?: pulumi.Input<number>;
}

export interface DduPoolTraces {
    /**
     * Is the limit configuration enabled
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Type of the limit applied: MONTHLY or ANNUAL
     */
    type?: pulumi.Input<string>;
    /**
     * Value of the DDU limit applied for provided timerange
     */
    value?: pulumi.Input<number>;
}

export interface DeclarativeGroupingDetection {
    processDefinitions: pulumi.Input<pulumi.Input<inputs.DeclarativeGroupingDetectionProcessDefinition>[]>;
}

export interface DeclarativeGroupingDetectionProcessDefinition {
    /**
     * Process group identifier
     */
    id: pulumi.Input<string>;
    /**
     * This identifier is used by Dynatrace to recognize this process group.
     */
    processGroupName: pulumi.Input<string>;
    /**
     * Possible Values: `never`, `always`, `highResourceUsage`
     */
    report: pulumi.Input<string>;
    /**
     * Define process detection rules by selecting a process property and a condition. Each process group can have multiple detection rules associated with it.
     */
    rules?: pulumi.Input<inputs.DeclarativeGroupingDetectionProcessDefinitionRules>;
}

export interface DeclarativeGroupingDetectionProcessDefinitionRules {
    rules: pulumi.Input<pulumi.Input<inputs.DeclarativeGroupingDetectionProcessDefinitionRulesRule>[]>;
}

export interface DeclarativeGroupingDetectionProcessDefinitionRulesRule {
    /**
     * - $contains(svc) – Matches if svc appears anywhere in the process property value.
     * - $eq(svc.exe) – Matches if svc.exe matches the process property value exactly.
     * - $prefix(svc) – Matches if app matches the prefix of the process property value.
     * - $suffix(svc.py) – Matches if svc.py matches the suffix of the process property value.
     *
     * For example, $suffix(svc.py) would detect processes named loyaltysvc.py and paymentssvc.py.
     *
     * For more details, see [Declarative process grouping](https://dt-url.net/j142w57).
     */
    condition: pulumi.Input<string>;
    /**
     * Possible Values: `Executable`, `ExecutablePath`, `CommandLine`
     */
    property: pulumi.Input<string>;
}

export interface DirectSharesRecipients {
    /**
     * Recipient of the direct share
     */
    recipients?: pulumi.Input<pulumi.Input<inputs.DirectSharesRecipientsRecipient>[]>;
}

export interface DirectSharesRecipientsRecipient {
    /**
     * Identifier of the recipient
     */
    id: pulumi.Input<string>;
    /**
     * Type of the recipient. Possible values are `group' and`user'
     */
    type?: pulumi.Input<string>;
}

export interface DiskAnomaliesDiskName {
    /**
     * Possible values are: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS` and `STARTS_WITH`
     */
    operator: pulumi.Input<string>;
    /**
     * Value to compare to
     */
    value: pulumi.Input<string>;
}

export interface DiskAnomaliesTags {
    /**
     * A Tag Filter
     */
    filters?: pulumi.Input<pulumi.Input<inputs.DiskAnomaliesTagsFilter>[]>;
}

export interface DiskAnomaliesTagsFilter {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface DiskAnomaliesV2Disk {
    /**
     * no documentation available
     */
    diskLowInodesDetection: pulumi.Input<inputs.DiskAnomaliesV2DiskDiskLowInodesDetection>;
    /**
     * no documentation available
     */
    diskLowSpaceDetection: pulumi.Input<inputs.DiskAnomaliesV2DiskDiskLowSpaceDetection>;
    /**
     * no documentation available
     */
    diskSlowWritesAndReadsDetection: pulumi.Input<inputs.DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetection>;
}

export interface DiskAnomaliesV2DiskDiskLowInodesDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholds>;
    /**
     * Detection mode for low inodes number available
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect low inodes number available
     */
    enabled: pulumi.Input<boolean>;
}

export interface DiskAnomaliesV2DiskDiskLowInodesDetectionCustomThresholds {
    /**
     * Alert if the percentage of available inodes is lower than this threshold in 3 out of 5 samples
     */
    freeInodesPercentage: pulumi.Input<number>;
}

export interface DiskAnomaliesV2DiskDiskLowSpaceDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.DiskAnomaliesV2DiskDiskLowSpaceDetectionCustomThresholds>;
    /**
     * Detection mode for low disk space
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect low disk space
     */
    enabled: pulumi.Input<boolean>;
}

export interface DiskAnomaliesV2DiskDiskLowSpaceDetectionCustomThresholds {
    /**
     * Alert if free disk space is lower than this percentage in 3 out of 5 samples
     */
    freeSpacePercentage: pulumi.Input<number>;
}

export interface DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetectionCustomThresholds>;
    /**
     * Detection mode for slow running disks
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect slow-running disks
     */
    enabled: pulumi.Input<boolean>;
}

export interface DiskAnomaliesV2DiskDiskSlowWritesAndReadsDetectionCustomThresholds {
    /**
     * Alert if disk read time or write time is higher than this threshold in 3 out of 5 samples
     */
    writeAndReadTime: pulumi.Input<number>;
}

export interface DiskAnomalyRulesDiskNameFilter {
    /**
     * Possible Values: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
     */
    operator: pulumi.Input<string>;
    /**
     * Matching text
     */
    value?: pulumi.Input<string>;
}

export interface DiskAnomalyRulesSampleLimit {
    /**
     * .. within the last
     */
    samples: pulumi.Input<number>;
    /**
     * Minimum number of violating samples
     */
    violatingSamples: pulumi.Input<number>;
}

export interface DiskEdgeAnomalyDetectorsAlerts {
    alerts: pulumi.Input<pulumi.Input<inputs.DiskEdgeAnomalyDetectorsAlertsAlert>[]>;
}

export interface DiskEdgeAnomalyDetectorsAlertsAlert {
    /**
     * no documentation available
     */
    sampleCountThresholds?: pulumi.Input<inputs.DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholds>;
    /**
     * no documentation available
     */
    sampleCountThresholdsImmediately?: pulumi.Input<inputs.DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholdsImmediately>;
    /**
     * no documentation available
     */
    thresholdMebibytes?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    thresholdMilliseconds?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    thresholdNumber?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    thresholdPercent?: pulumi.Input<number>;
    /**
     * Possible Values: `AVAILABLE_DISK_SPACE_MEBIBYTES_BELOW`, `AVAILABLE_DISK_SPACE_PERCENT_BELOW`, `AVAILABLE_INODES_NUMBER_BELOW`, `AVAILABLE_INODES_PERCENT_BELOW`, `READ_ONLY_FILE_SYSTEM`, `READ_TIME_EXCEEDING`, `WRITE_TIME_EXCEEDING`
     */
    trigger: pulumi.Input<string>;
}

export interface DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower than the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface DiskEdgeAnomalyDetectorsAlertsAlertSampleCountThresholdsImmediately {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower than the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface DiskEdgeAnomalyDetectorsEventProperties {
    eventProperties: pulumi.Input<pulumi.Input<inputs.DiskEdgeAnomalyDetectorsEventPropertiesEventProperty>[]>;
}

export interface DiskEdgeAnomalyDetectorsEventPropertiesEventProperty {
    /**
     * Type 'dt.' for key hints.
     */
    metadataKey: pulumi.Input<string>;
    /**
     * no documentation available
     */
    metadataValue: pulumi.Input<string>;
}

export interface DiskEdgeAnomalyDetectorsHostMetadataConditions {
    hostMetadataConditions: pulumi.Input<pulumi.Input<inputs.DiskEdgeAnomalyDetectorsHostMetadataConditionsHostMetadataCondition>[]>;
}

export interface DiskEdgeAnomalyDetectorsHostMetadataConditionsHostMetadataCondition {
    /**
     * no documentation available
     */
    hostMetadataCondition: pulumi.Input<inputs.DiskEdgeAnomalyDetectorsHostMetadataConditionsHostMetadataConditionHostMetadataCondition>;
}

export interface DiskEdgeAnomalyDetectorsHostMetadataConditionsHostMetadataConditionHostMetadataCondition {
    /**
     * This string has to match a required format.
     */
    metadataCondition: pulumi.Input<string>;
    /**
     * Key
     */
    metadataKey: pulumi.Input<string>;
}

export interface DiskOptionsExclusions {
    exclusions: pulumi.Input<pulumi.Input<inputs.DiskOptionsExclusionsExclusion>[]>;
}

export interface DiskOptionsExclusionsExclusion {
    /**
     * **File system type field:** the type of the file system to be excluded from monitoring. Examples:
     *
     * * ext4
     * * ext3
     * * btrfs
     * * ext*
     *
     * ⚠️ File system types are case sensitive! 
     *
     * The wildcard in the last example means to exclude matching file systems such as types ext4 and ext3
     */
    filesystem?: pulumi.Input<string>;
    /**
     * **Disk or mount point path field:** the path to where the disk to be excluded from monitoring is mounted. Examples:
     *
     * * /mnt/my_disk
     * * /staff/emp1
     * * C:\
     * * /staff/*
     * * /disk*
     *
     *  ⚠️ Mount point paths are case sensitive! 
     *
     * The wildcard in **&#47;staff/*** means to exclude every child folder of /staff.
     *
     * The wildcard in **&#47;disk*** means to exclude every mount point starting with /disk, for example /disk1, /disk99,  /diskabc
     */
    mountpoint?: pulumi.Input<string>;
    /**
     * Possible Values: `OS_TYPE_AIX`, `OS_TYPE_DARWIN`, `OS_TYPE_HPUX`, `OS_TYPE_LINUX`, `OS_TYPE_SOLARIS`, `OS_TYPE_UNKNOWN`, `OS_TYPE_WINDOWS`, `OS_TYPE_ZOS`
     */
    os: pulumi.Input<string>;
}

export interface DiskSpecificAnomaliesV2DiskLowInodesDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.DiskSpecificAnomaliesV2DiskLowInodesDetectionCustomThresholds>;
    /**
     * Detection mode for low inodes number available
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect low inodes number available
     */
    enabled: pulumi.Input<boolean>;
}

export interface DiskSpecificAnomaliesV2DiskLowInodesDetectionCustomThresholds {
    /**
     * Alert if the percentage of available inodes is lower than this threshold in 3 out of 5 samples
     */
    freeInodesPercentage: pulumi.Input<number>;
}

export interface DiskSpecificAnomaliesV2DiskLowSpaceDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholds>;
    /**
     * Detection mode for low disk space
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect low disk space
     */
    enabled: pulumi.Input<boolean>;
}

export interface DiskSpecificAnomaliesV2DiskLowSpaceDetectionCustomThresholds {
    /**
     * Alert if free disk space is lower than this percentage in 3 out of 5 samples
     */
    freeSpacePercentage: pulumi.Input<number>;
}

export interface DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionCustomThresholds>;
    /**
     * Detection mode for slow running disks
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect slow-running disks
     */
    enabled: pulumi.Input<boolean>;
}

export interface DiskSpecificAnomaliesV2DiskSlowWritesAndReadsDetectionCustomThresholds {
    /**
     * Alert if disk read time or write time is higher than this threshold in 3 out of 5 samples
     */
    writeAndReadTime: pulumi.Input<number>;
}

export interface EnvironmentQuotas {
    /**
     * Davis Data Units consumption and quota information on environment level. Not set (and not editable) if Davis data units is not enabled
     */
    ddus?: pulumi.Input<inputs.EnvironmentQuotasDdus>;
    /**
     * DEM units consumption and quota information on environment level
     */
    demUnits?: pulumi.Input<inputs.EnvironmentQuotasDemUnits>;
    /**
     * Host units consumption and quota information on environment level
     */
    hostUnits?: pulumi.Input<number>;
    /**
     * Log Monitoring consumption and quota information on environment level. Not set (and not editable) if Log monitoring is not enabled. Not set (and not editable) if Log monitoring is migrated to Davis data on license level
     */
    logs?: pulumi.Input<inputs.EnvironmentQuotasLogs>;
    /**
     * Synthetic monitors consumption and quota information on environment level. Not set (and not editable) if neither Synthetic nor DEM units is enabled
     */
    synthetic?: pulumi.Input<inputs.EnvironmentQuotasSynthetic>;
    /**
     * User sessions consumption and quota information on environment level
     */
    userSessions?: pulumi.Input<inputs.EnvironmentQuotasUserSessions>;
}

export interface EnvironmentQuotasDdus {
    /**
     * Annual environment quota. Not set if unlimited
     */
    annual?: pulumi.Input<number>;
    /**
     * Monthly environment quota. Not set if unlimited
     */
    monthly?: pulumi.Input<number>;
}

export interface EnvironmentQuotasDemUnits {
    /**
     * Annual environment quota. Not set if unlimited
     */
    annual?: pulumi.Input<number>;
    /**
     * Monthly environment quota. Not set if unlimited
     */
    monthly?: pulumi.Input<number>;
}

export interface EnvironmentQuotasLogs {
    /**
     * Annual environment quota. Not set if unlimited
     */
    annual?: pulumi.Input<number>;
    /**
     * Monthly environment quota. Not set if unlimited
     */
    monthly?: pulumi.Input<number>;
}

export interface EnvironmentQuotasSynthetic {
    /**
     * Annual environment quota. Not set if unlimited
     */
    annual?: pulumi.Input<number>;
    /**
     * Monthly environment quota. Not set if unlimited
     */
    monthly?: pulumi.Input<number>;
}

export interface EnvironmentQuotasUserSessions {
    /**
     * Annual total User sessions environment quota. Not set if unlimited
     */
    annual?: pulumi.Input<number>;
    /**
     * Monthly total User sessions environment quota. Not set if unlimited
     */
    monthly?: pulumi.Input<number>;
}

export interface EnvironmentStorage {
    limits?: pulumi.Input<inputs.EnvironmentStorageLimits>;
    retention?: pulumi.Input<inputs.EnvironmentStorageRetention>;
    /**
     * Maximum number of newly monitored entry point PurePaths captured per process/minute on environment level. Can be set to any value from 100 to 100000
     */
    transactions: pulumi.Input<number>;
    /**
     * Maximum number of user actions generated per minute on environment level. Can be set to any value from 1 to 2147483646 or left unlimited by omitting this property
     */
    userActions?: pulumi.Input<number>;
}

export interface EnvironmentStorageLimits {
    /**
     * Log monitoring storage usage and limit information on environment level in bytes. Not editable when Log monitoring is not allowed by license or not configured on cluster level. 0 for unlimited.
     */
    logs?: pulumi.Input<number>;
    /**
     * Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.
     */
    sessionReplay?: pulumi.Input<number>;
    /**
     * Session replay storage usage and limit information on environment level in bytes. 0 for unlimited.
     */
    symbolFiles?: pulumi.Input<number>;
    /**
     * Transaction storage usage and limit information on environment level in bytes. 0 for unlimited.
     */
    transactions?: pulumi.Input<number>;
}

export interface EnvironmentStorageRetention {
    /**
     * Log monitoring retention settings on environment level in days. Not editable when Log monitoring is not allowed by license or not configured on cluster level. Can be set to any value from 5 to 90 days
     */
    logs?: pulumi.Input<number>;
    /**
     * Real user monitoring retention settings on environment level in days. Can be set to any value from 1 to 35 days
     */
    rum: pulumi.Input<number>;
    /**
     * Service code level retention settings on environment level in days. Service code level retention time can't be greater than service request level retention time and both can't exceed one year
     */
    serviceCodeLevel: pulumi.Input<number>;
    /**
     * Service request level retention settings on environment level in days. Service code level retention time can't be greater than service request level retention time and both can't exceed one year
     */
    serviceRequestLevel: pulumi.Input<number>;
    /**
     * Session replay retention settings on environment level in days. Can be set to any value from 1 to 35 days
     */
    sessionReplay: pulumi.Input<number>;
    /**
     * Synthetic monitoring retention settings on environment level in days. Can be set to any value from 1 to 35 days
     */
    synthetic: pulumi.Input<number>;
}

export interface FailureDetectionParametersBrokenLinks {
    /**
     * If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.
     */
    brokenLinkDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Consider 404 HTTP response codes as failures
     */
    http404NotFoundFailures: pulumi.Input<boolean>;
}

export interface FailureDetectionParametersExceptionRules {
    /**
     * Some custom error situations are only detectable via a return value or other means. To support such cases, [define a request attribute](https://dt-url.net/ys5k0p4y) that captures the required data. Then define a custom error rule that determines if the request has failed based on the value of the request attribute.
     */
    customErrorRules?: pulumi.Input<inputs.FailureDetectionParametersExceptionRulesCustomErrorRules>;
    /**
     * There may be situations where your application code handles exceptions gracefully in a manner that these failures aren't detected by Dynatrace. Use this setting to define specific gracefully-handled exceptions that should be treated as service failures.
     */
    customHandledExceptions?: pulumi.Input<inputs.FailureDetectionParametersExceptionRulesCustomHandledExceptions>;
    /**
     * Ignore all exceptions
     */
    ignoreAllExceptions: pulumi.Input<boolean>;
    /**
     * Ignore span failure detection
     */
    ignoreSpanFailureDetection: pulumi.Input<boolean>;
    /**
     * Some exceptions that are thrown by legacy or 3rd-party code indicate a specific response, not an error. Use this setting to instruct Dynatrace to treat such exceptions as non-failed requests.. If an exception matching any of the defined patterns occurs in a request, it will not be considered as a failure. Other exceptions occurring at the same request might still mark the request as failed.
     */
    ignoredExceptions?: pulumi.Input<inputs.FailureDetectionParametersExceptionRulesIgnoredExceptions>;
    /**
     * Define exceptions which indicate that a service call should not be considered as failed. E.g. an exception indicating that the client aborted the operation.. If an exception matching any of the defined patterns occurs on the entry node of the service, it will be considered successful. Compared to ignored exceptions, the request will be considered successful even if other exceptions occur in the same request.
     */
    successForcingExceptions?: pulumi.Input<inputs.FailureDetectionParametersExceptionRulesSuccessForcingExceptions>;
}

export interface FailureDetectionParametersExceptionRulesCustomErrorRules {
    customErrorRules: pulumi.Input<pulumi.Input<inputs.FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRule>[]>;
}

export interface FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRule {
    /**
     * Request attribute condition
     */
    condition: pulumi.Input<inputs.FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition>;
    /**
     * Request attribute
     */
    requestAttribute: pulumi.Input<string>;
}

export interface FailureDetectionParametersExceptionRulesCustomErrorRulesCustomErrorRuleCondition {
    /**
     * Case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Apply this comparison
     */
    compareOperationType: pulumi.Input<string>;
    /**
     * Value
     */
    doubleValue?: pulumi.Input<number>;
    /**
     * Value
     */
    intValue?: pulumi.Input<number>;
    /**
     * Value
     */
    textValue?: pulumi.Input<string>;
}

export interface FailureDetectionParametersExceptionRulesCustomHandledExceptions {
    customHandledExceptions: pulumi.Input<pulumi.Input<inputs.FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledException>[]>;
}

export interface FailureDetectionParametersExceptionRulesCustomHandledExceptionsCustomHandledException {
    /**
     * The pattern will match if it is contained within the actual class name.
     */
    classPattern?: pulumi.Input<string>;
    /**
     * Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
     */
    messagePattern?: pulumi.Input<string>;
}

export interface FailureDetectionParametersExceptionRulesIgnoredExceptions {
    customHandledExceptions: pulumi.Input<pulumi.Input<inputs.FailureDetectionParametersExceptionRulesIgnoredExceptionsCustomHandledException>[]>;
}

export interface FailureDetectionParametersExceptionRulesIgnoredExceptionsCustomHandledException {
    /**
     * The pattern will match if it is contained within the actual class name.
     */
    classPattern?: pulumi.Input<string>;
    /**
     * Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
     */
    messagePattern?: pulumi.Input<string>;
}

export interface FailureDetectionParametersExceptionRulesSuccessForcingExceptions {
    customHandledExceptions: pulumi.Input<pulumi.Input<inputs.FailureDetectionParametersExceptionRulesSuccessForcingExceptionsCustomHandledException>[]>;
}

export interface FailureDetectionParametersExceptionRulesSuccessForcingExceptionsCustomHandledException {
    /**
     * The pattern will match if it is contained within the actual class name.
     */
    classPattern?: pulumi.Input<string>;
    /**
     * Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
     */
    messagePattern?: pulumi.Input<string>;
}

export interface FailureDetectionParametersHttpResponseCodes {
    /**
     * HTTP response codes which indicate client side errors
     */
    clientSideErrors: pulumi.Input<string>;
    /**
     * Treat missing HTTP response code as client side error
     */
    failOnMissingResponseCodeClientSide: pulumi.Input<boolean>;
    /**
     * Treat missing HTTP response code as server side errors
     */
    failOnMissingResponseCodeServerSide: pulumi.Input<boolean>;
    /**
     * HTTP response codes which indicate an error on the server side
     */
    serverSideErrors: pulumi.Input<string>;
}

export interface FailureDetectionRulesConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.FailureDetectionRulesConditionsCondition>[]>;
}

export interface FailureDetectionRulesConditionsCondition {
    /**
     * Possible Values: `PG_NAME`, `PG_TAG`, `SERVICE_MANAGEMENT_ZONE`, `SERVICE_NAME`, `SERVICE_TAG`, `SERVICE_TYPE`
     */
    attribute: pulumi.Input<string>;
    /**
     * Condition to check the attribute against
     */
    predicate: pulumi.Input<inputs.FailureDetectionRulesConditionsConditionPredicate>;
}

export interface FailureDetectionRulesConditionsConditionPredicate {
    /**
     * Case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Management zones
     */
    managementZones?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Predicate type
     */
    predicateType: pulumi.Input<string>;
    /**
     * Service types
     */
    serviceTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tag keys
     */
    tagKeys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Tags (exact match)
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Names
     */
    textValues?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GenericRelationshipsSources {
    sources: pulumi.Input<pulumi.Input<inputs.GenericRelationshipsSourcesSource>[]>;
}

export interface GenericRelationshipsSourcesSource {
    /**
     * Specify a filter that needs to match in order for the extraction to happen.. Two different filters are supported: `$eq(value)` will ensure that the source matches exactly 'value', while `$prefix(value)` will ensure that the source begins with exactly 'value'.
     * If your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.
     */
    condition?: pulumi.Input<string>;
    /**
     * Specify all properties which should be compared. If all mapping rules match a relationship between entities will be created.
     */
    mappingRules?: pulumi.Input<inputs.GenericRelationshipsSourcesSourceMappingRules>;
    /**
     * Possible Values: `BusinessEvents`, `Entities`, `Events`, `Logs`, `Metrics`, `Spans`, `Topology`
     */
    sourceType: pulumi.Input<string>;
}

export interface GenericRelationshipsSourcesSourceMappingRules {
    mappingRules: pulumi.Input<pulumi.Input<inputs.GenericRelationshipsSourcesSourceMappingRulesMappingRule>[]>;
}

export interface GenericRelationshipsSourcesSourceMappingRulesMappingRule {
    /**
     * The case-sensitive name of a property of the destination type.
     */
    destinationProperty: pulumi.Input<string>;
    /**
     * Possible Values: `Leavetextas_is`, `Tolowercase`, `Touppercase`
     */
    destinationTransformation: pulumi.Input<string>;
    /**
     * The case-sensitive name of a property of the source type.
     */
    sourceProperty: pulumi.Input<string>;
    /**
     * Possible Values: `Leavetextas_is`, `Tolowercase`, `Touppercase`
     */
    sourceTransformation: pulumi.Input<string>;
}

export interface GenericTypesRules {
    rules: pulumi.Input<pulumi.Input<inputs.GenericTypesRulesRule>[]>;
}

export interface GenericTypesRulesRule {
    /**
     * All attribute extraction rules will be applied and found attributes will be added to the extracted type.
     */
    attributes?: pulumi.Input<inputs.GenericTypesRulesRuleAttributes>;
    /**
     * Define a pattern which is used to set the icon attribute of the entity. The extracted values must reference barista icon ids. You may define placeholders referencing data source dimensions.
     */
    iconPattern?: pulumi.Input<string>;
    /**
     * ID patterns are comprised of static text and placeholders referring to dimensions in the ingest data. An ID pattern **must** contain at least one placeholder to ensure that different entities will be created.. Take care that the pattern results in the same ID for the same entity. For example, using timestamp or counter-like dimensions as part of the ID would lead to the creation of new entities for each ingest data and is strongly discouraged!
     */
    idPattern: pulumi.Input<string>;
    /**
     * Define a pattern which is used to set the name attribute of the entity. You may define placeholders referencing data source dimensions.
     */
    instanceNamePattern?: pulumi.Input<string>;
    /**
     * In addition to the dimensions already referred to in the ID pattern, you may specify additional dimensions which must be present in order to evaluate this rule.
     */
    requiredDimensions?: pulumi.Input<inputs.GenericTypesRulesRuleRequiredDimensions>;
    /**
     * If you want to extract multiple entities of the same type from a single ingest line you need to define multiple rules with different roles.
     */
    role?: pulumi.Input<string>;
    /**
     * Specify all sources which should be evaluated for this rule. A rule is evaluated if any of the specified source filters match.
     */
    sources: pulumi.Input<inputs.GenericTypesRulesRuleSources>;
}

export interface GenericTypesRulesRuleAttributes {
    attributes: pulumi.Input<pulumi.Input<inputs.GenericTypesRulesRuleAttributesAttribute>[]>;
}

export interface GenericTypesRulesRuleAttributesAttribute {
    /**
     * The human readable attribute name for this extraction rule. Leave blank to use the key as the display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The attribute key is the unique name of the attribute.
     */
    key: pulumi.Input<string>;
    /**
     * Pattern for specifying the value for the extracted attribute. Can be a static value, placeholders or a combination of both.
     */
    pattern: pulumi.Input<string>;
}

export interface GenericTypesRulesRuleRequiredDimensions {
    requiredDimensions: pulumi.Input<pulumi.Input<inputs.GenericTypesRulesRuleRequiredDimensionsRequiredDimension>[]>;
}

export interface GenericTypesRulesRuleRequiredDimensionsRequiredDimension {
    /**
     * A dimension key which needs to exist in the ingest data to match this filter.
     */
    key: pulumi.Input<string>;
    /**
     * A dimension value pattern which needs to exist in the ingest data to match this filter.
     */
    valuePattern?: pulumi.Input<string>;
}

export interface GenericTypesRulesRuleSources {
    sources: pulumi.Input<pulumi.Input<inputs.GenericTypesRulesRuleSourcesSource>[]>;
}

export interface GenericTypesRulesRuleSourcesSource {
    /**
     * Specify a filter that needs to match in order for the extraction to happen.. Three different filters are supported: `$eq(value)` will ensure that the source matches exactly 'value', `$prefix(value)` will ensure that the source begins with exactly 'value', '$exists()' will ensure that any source with matching dimension filter exists.
     * If your value contains the characters '(', ')' or '~', you need to escape them by adding a '~' in front of them.
     */
    condition?: pulumi.Input<string>;
    /**
     * Possible Values: `BusinessEvents`, `Entities`, `Events`, `Logs`, `Metrics`, `Spans`, `Topology`
     */
    sourceType: pulumi.Input<string>;
}

export interface GetSyntheticLocationsLocations {
    /**
     * The cloud provider where the location is hosted.
     */
    cloudPlatform?: string;
    /**
     * The unique ID of the location
     */
    entityId?: string;
    /**
     * The list of IP addresses assigned to the location. 
     *
     *  Only applicable to `PUBLIC` locations
     */
    ips?: string[];
    /**
     * The name of the location
     */
    name?: string;
    /**
     * The release stage of the location
     */
    stage?: string;
    /**
     * The status of the location: 
     *
     * * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. 
     * * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. 
     * * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
     */
    status?: string;
    /**
     * The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
     */
    type?: string;
}

export interface GetSyntheticLocationsLocationsArgs {
    /**
     * The cloud provider where the location is hosted.
     */
    cloudPlatform?: pulumi.Input<string>;
    /**
     * The unique ID of the location
     */
    entityId?: pulumi.Input<string>;
    /**
     * The list of IP addresses assigned to the location. 
     *
     *  Only applicable to `PUBLIC` locations
     */
    ips?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the location
     */
    name?: pulumi.Input<string>;
    /**
     * The release stage of the location
     */
    stage?: pulumi.Input<string>;
    /**
     * The status of the location: 
     *
     * * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location. 
     * * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location. 
     * * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
     */
    status?: pulumi.Input<string>;
    /**
     * The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
     */
    type?: pulumi.Input<string>;
}

export interface GrailMetricsAllowlistAllowRules {
    allowRules: pulumi.Input<pulumi.Input<inputs.GrailMetricsAllowlistAllowRulesAllowRule>[]>;
}

export interface GrailMetricsAllowlistAllowRulesAllowRule {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Metric key
     */
    metricKey: pulumi.Input<string>;
    /**
     * Possible Values: `CONTAINS`, `EQUALS`, `STARTSWITH`
     */
    pattern: pulumi.Input<string>;
}

export interface HostAnomaliesConnections {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Alert (`true`) on graceful host shutdowns
     */
    enabledOnGracefulShutdowns: pulumi.Input<boolean>;
}

export interface HostAnomaliesCpu {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for high CPU saturation. If not set then the automatic mode is used
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesCpuThresholds>;
}

export interface HostAnomaliesCpuThresholds {
    /**
     * Alert if CPU usage is higher than *X*% in 3 out of 5 samples
     */
    saturation: pulumi.Input<number>;
}

export interface HostAnomaliesDisks {
    /**
     * Configuration of low disk inodes number detection
     */
    inodes?: pulumi.Input<inputs.HostAnomaliesDisksInodes>;
    /**
     * Configuration of low disk space detection
     */
    space?: pulumi.Input<inputs.HostAnomaliesDisksSpace>;
    /**
     * Configuration of slow running disks detection
     */
    speed?: pulumi.Input<inputs.HostAnomaliesDisksSpeed>;
}

export interface HostAnomaliesDisksInodes {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for low disk inodes number. If not set, automatic mode is used
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesDisksInodesThresholds>;
}

export interface HostAnomaliesDisksInodesThresholds {
    /**
     * Alert if percentage of available inodes is lower than *X*% in 3 out of 5 samples
     */
    percentage: pulumi.Input<number>;
}

export interface HostAnomaliesDisksSpace {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for low disk space. If not set, automatic mode is used
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesDisksSpaceThresholds>;
}

export interface HostAnomaliesDisksSpaceThresholds {
    /**
     * Alert if free disk space is lower than *X*% in 3 out of 5 samples
     */
    percentage: pulumi.Input<number>;
}

export interface HostAnomaliesDisksSpeed {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for slow running disks. If not set, the automatic mode is used
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesDisksSpeedThresholds>;
}

export interface HostAnomaliesDisksSpeedThresholds {
    /**
     * Alert if disk read/write time is higher than *X* milliseconds in 3 out of 5 samples
     */
    writeAndReadTime: pulumi.Input<number>;
}

export interface HostAnomaliesGc {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for high GC activity. If not set, automatic mode is used.   Meeting **any** of these conditions triggers an alert
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesGcThresholds>;
}

export interface HostAnomaliesGcThresholds {
    /**
     * GC suspension is higher than *X*% in 3 out of 5 samples
     */
    suspensionPercentage: pulumi.Input<number>;
    /**
     * GC time is higher than *X*% in 3 out of 5 samples
     */
    timePercentage: pulumi.Input<number>;
}

export interface HostAnomaliesJava {
    /**
     * Configuration of Java out of memory problems detection
     */
    outOfMemory?: pulumi.Input<inputs.HostAnomaliesJavaOutOfMemory>;
    /**
     * Configuration of Java out of threads problems detection
     */
    outOfThreads?: pulumi.Input<inputs.HostAnomaliesJavaOutOfThreads>;
}

export interface HostAnomaliesJavaOutOfMemory {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for Java out of memory. If not set, automatic mode is used
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesJavaOutOfMemoryThresholds>;
}

export interface HostAnomaliesJavaOutOfMemoryThresholds {
    /**
     * Alert if the number of Java out of memory exceptions is *X* per minute or higher
     */
    exceptionCount: pulumi.Input<number>;
}

export interface HostAnomaliesJavaOutOfThreads {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for Java out of threads detection. If not set, automatic mode is used
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesJavaOutOfThreadsThresholds>;
}

export interface HostAnomaliesJavaOutOfThreadsThresholds {
    /**
     * Alert if the number of Java out of threads exceptions is *X* per minute or higher
     */
    exceptionCount: pulumi.Input<number>;
}

export interface HostAnomaliesMemory {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for high memory usage. If not set then the automatic mode is used. **Both** conditions must be met to trigger an alert
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesMemoryThresholds>;
}

export interface HostAnomaliesMemoryThresholds {
    /**
     * Custom thresholds for Linux
     */
    linux: pulumi.Input<inputs.HostAnomaliesMemoryThresholdsLinux>;
    /**
     * Custom thresholds for Windows
     */
    windows: pulumi.Input<inputs.HostAnomaliesMemoryThresholdsWindows>;
}

export interface HostAnomaliesMemoryThresholdsLinux {
    /**
     * Memory page fault rate is higher than *X* faults per second
     */
    pageFaults: pulumi.Input<number>;
    /**
     * Memory usage is higher than *X*%
     */
    usage: pulumi.Input<number>;
}

export interface HostAnomaliesMemoryThresholdsWindows {
    /**
     * Memory page fault rate is higher than *X* faults per second
     */
    pageFaults: pulumi.Input<number>;
    /**
     * Memory usage is higher than *X*%
     */
    usage: pulumi.Input<number>;
}

export interface HostAnomaliesNetwork {
    /**
     * Configuration of TCP connectivity problems detection
     */
    connectivity?: pulumi.Input<inputs.HostAnomaliesNetworkConnectivity>;
    /**
     * Configuration of high number of dropped packets detection
     */
    droppedPackets?: pulumi.Input<inputs.HostAnomaliesNetworkDroppedPackets>;
    /**
     * Configuration of high number of network errors detection
     */
    errors?: pulumi.Input<inputs.HostAnomaliesNetworkErrors>;
    /**
     * Configuration of high retransmission rate detection
     */
    retransmission?: pulumi.Input<inputs.HostAnomaliesNetworkRetransmission>;
    /**
     * Configuration of high network utilization detection
     */
    utilization?: pulumi.Input<inputs.HostAnomaliesNetworkUtilization>;
}

export interface HostAnomaliesNetworkConnectivity {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for TCP connection problems. If not set, automatic mode is used.   **All** of these conditions must be met to trigger an alert
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesNetworkConnectivityThresholds>;
}

export interface HostAnomaliesNetworkConnectivityThresholds {
    /**
     * Number of failed connections is higher than *X* connections per minute in 3 out of 5 samples
     */
    failedConnections: pulumi.Input<number>;
    /**
     * Percentage of new connection failures is higher than *X*% in 3 out of 5 samples
     */
    newConnectionFailures: pulumi.Input<number>;
}

export interface HostAnomaliesNetworkDroppedPackets {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for dropped packets. If not set, automatic mode is used.   **All** of these conditions must be met to trigger an alert
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesNetworkDroppedPacketsThresholds>;
}

export interface HostAnomaliesNetworkDroppedPacketsThresholds {
    /**
     * Receive/transmit dropped packet percentage is higher than *X*% in 3 out of 5 samples
     */
    droppedPackets: pulumi.Input<number>;
    /**
     * Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples
     */
    totalPacketsRate: pulumi.Input<number>;
}

export interface HostAnomaliesNetworkErrors {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for network errors. If not set, automatic mode is used.   **All** of these conditions must be met to trigger an alert
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesNetworkErrorsThresholds>;
}

export interface HostAnomaliesNetworkErrorsThresholds {
    /**
     * Receive/transmit error packet percentage is higher than *X*% in 3 out of 5 samples
     */
    errorsPercentage: pulumi.Input<number>;
    /**
     * Total receive/transmit packets rate is higher than *X* packets per second in 3 out of 5 samples
     */
    totalPacketsRate: pulumi.Input<number>;
}

export interface HostAnomaliesNetworkRetransmission {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for high retransmission rate. If not set, automatic mode is used.   **All** of these conditions must be met to trigger an alert
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesNetworkRetransmissionThresholds>;
}

export interface HostAnomaliesNetworkRetransmissionThresholds {
    /**
     * Retransmission rate is higher than *X*% in 3 out of 5 samples
     */
    retransmissionRate: pulumi.Input<number>;
    /**
     * Number of retransmitted packets is higher than *X* packets per minute in 3 out of 5 samples
     */
    retransmittedPackets: pulumi.Input<number>;
}

export interface HostAnomaliesNetworkUtilization {
    /**
     * The detection is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Custom thresholds for high network utilization. If not set, automatic mode is used
     */
    thresholds?: pulumi.Input<inputs.HostAnomaliesNetworkUtilizationThresholds>;
}

export interface HostAnomaliesNetworkUtilizationThresholds {
    /**
     * Alert if sent/received traffic utilization is higher than *X*% in 3 out of 5 samples
     */
    utilization: pulumi.Input<number>;
}

export interface HostAnomaliesV2Host {
    /**
     * no documentation available
     */
    connectionLostDetection: pulumi.Input<inputs.HostAnomaliesV2HostConnectionLostDetection>;
    /**
     * no documentation available
     */
    highCpuSaturationDetection: pulumi.Input<inputs.HostAnomaliesV2HostHighCpuSaturationDetection>;
    /**
     * no documentation available
     */
    highGcActivityDetection: pulumi.Input<inputs.HostAnomaliesV2HostHighGcActivityDetection>;
    /**
     * no documentation available
     */
    highMemoryDetection: pulumi.Input<inputs.HostAnomaliesV2HostHighMemoryDetection>;
    /**
     * no documentation available
     */
    highSystemLoadDetection: pulumi.Input<inputs.HostAnomaliesV2HostHighSystemLoadDetection>;
    /**
     * no documentation available
     */
    outOfMemoryDetection: pulumi.Input<inputs.HostAnomaliesV2HostOutOfMemoryDetection>;
    /**
     * no documentation available
     */
    outOfThreadsDetection: pulumi.Input<inputs.HostAnomaliesV2HostOutOfThreadsDetection>;
}

export interface HostAnomaliesV2HostConnectionLostDetection {
    /**
     * Detect host or monitoring connection lost problems
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Graceful host shutdowns
     */
    onGracefulShutdowns?: pulumi.Input<string>;
}

export interface HostAnomaliesV2HostHighCpuSaturationDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholds>;
    /**
     * Detection mode for CPU saturation
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect CPU saturation on host
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholds {
    /**
     * Alert if the CPU usage is higher than this threshold for the defined amount of samples
     */
    cpuSaturation: pulumi.Input<number>;
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholdsEventThresholds>;
}

export interface HostAnomaliesV2HostHighCpuSaturationDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostHighGcActivityDetection {
    /**
     * Alert if the GC time **or** the GC suspension is exceeded
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2HostHighGcActivityDetectionCustomThresholds>;
    /**
     * Detection mode for high GC activity
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * You may also configure high GC activity alerting for .NET processes on [extensions events page](https://www.terraform.io/#settings/anomalydetection/extensionevents).
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2HostHighGcActivityDetectionCustomThresholds {
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2HostHighGcActivityDetectionCustomThresholdsEventThresholds>;
    /**
     * Alert if the GC suspension is higher than this threshold
     */
    gcSuspensionPercentage: pulumi.Input<number>;
    /**
     * Alert if GC time is higher than this threshold
     */
    gcTimePercentage: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostHighGcActivityDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostHighMemoryDetection {
    /**
     * Alert if **both** the memory usage and the memory page fault rate thresholds are exceeded on Windows or on Unix systems
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2HostHighMemoryDetectionCustomThresholds>;
    /**
     * Detection mode for high memory usage
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect high memory usage on host
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2HostHighMemoryDetectionCustomThresholds {
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholds>;
    /**
     * Alert if the memory page fault rate on Unix systems is higher than this threshold for the defined amount of samples
     */
    pageFaultsPerSecondNonWindows: pulumi.Input<number>;
    /**
     * Alert if the memory page fault rate on Windows is higher than this threshold for the defined amount of samples
     */
    pageFaultsPerSecondWindows: pulumi.Input<number>;
    /**
     * Alert if the memory usage on Unix systems is higher than this threshold
     */
    usedMemoryPercentageNonWindows: pulumi.Input<number>;
    /**
     * Alert if the memory usage on Windows is higher than this threshold
     */
    usedMemoryPercentageWindows: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostHighMemoryDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostHighSystemLoadDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholds {
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholdsEventThresholds>;
    /**
     * Alert if the System Load / Logical cpu core is higher than this threshold for the defined amount of samples
     */
    systemLoad: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostHighSystemLoadDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostOutOfMemoryDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholds>;
    /**
     * Detection mode for Java out of memory problem
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect Java out of memory problem
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholds {
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholdsEventThresholds>;
    /**
     * Alert if the number of Java out-of-memory exceptions is at least this value
     */
    outOfMemoryExceptionsNumber: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostOutOfMemoryDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostOutOfThreadsDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholds>;
    /**
     * Detection mode for Java out of threads problem
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect Java out of threads problem
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholds {
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholdsEventThresholds>;
    /**
     * Alert if the number of Java out-of-threads exceptions is at least this value
     */
    outOfThreadsExceptionsNumber: pulumi.Input<number>;
}

export interface HostAnomaliesV2HostOutOfThreadsDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2Network {
    /**
     * no documentation available
     */
    highNetworkDetection: pulumi.Input<inputs.HostAnomaliesV2NetworkHighNetworkDetection>;
    /**
     * no documentation available
     */
    networkDroppedPacketsDetection: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkDroppedPacketsDetection>;
    /**
     * no documentation available
     */
    networkErrorsDetection: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkErrorsDetection>;
    /**
     * no documentation available
     */
    networkHighRetransmissionDetection: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkHighRetransmissionDetection>;
    /**
     * no documentation available
     */
    networkTcpProblemsDetection: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkTcpProblemsDetection>;
}

export interface HostAnomaliesV2NetworkHighNetworkDetection {
    /**
     * no documentation available
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholds>;
    /**
     * Detection mode for high network utilization
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect high network utilization
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholds {
    /**
     * Alert if sent/received traffic utilization is higher than this threshold for the defined amount of samples
     */
    errorsPercentage: pulumi.Input<number>;
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholdsEventThresholds>;
}

export interface HostAnomaliesV2NetworkHighNetworkDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2NetworkNetworkDroppedPacketsDetection {
    /**
     * Alert if the dropped packet percentage is higher than the specified threshold **and** the total packets rate is higher than the defined threshold for the defined amount of samples
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholds>;
    /**
     * Detection mode for high number of dropped packets
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect high number of dropped packets
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholds {
    /**
     * Receive/transmit dropped packet percentage threshold
     */
    droppedPacketsPercentage: pulumi.Input<number>;
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholdsEventThresholds>;
    /**
     * Total packets rate threshold
     */
    totalPacketsRate: pulumi.Input<number>;
}

export interface HostAnomaliesV2NetworkNetworkDroppedPacketsDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2NetworkNetworkErrorsDetection {
    /**
     * Alert if the receive/transmit error packet percentage is higher than the specified threshold **and** the total packets rate is higher than the defined threshold for the defined amount of samples
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholds>;
    /**
     * Detection mode for high number of network errors
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect high number of network errors
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholds {
    /**
     * Receive/transmit error packet percentage threshold
     */
    errorsPercentage: pulumi.Input<number>;
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholdsEventThresholds>;
    /**
     * Total packets rate threshold
     */
    totalPacketsRate: pulumi.Input<number>;
}

export interface HostAnomaliesV2NetworkNetworkErrorsDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2NetworkNetworkHighRetransmissionDetection {
    /**
     * Alert if the retransmission rate is higher than the specified threshold **and** the number of retransmitted packets is higher than the defined threshold for the defined amount of samples
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholds>;
    /**
     * Detection mode for high retransmission rate
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect high retransmission rate
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholds {
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholdsEventThresholds>;
    /**
     * Retransmission rate threshold
     */
    retransmissionRatePercentage: pulumi.Input<number>;
    /**
     * Number of retransmitted packets threshold
     */
    retransmittedPacketsNumberPerMinute: pulumi.Input<number>;
}

export interface HostAnomaliesV2NetworkNetworkHighRetransmissionDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostAnomaliesV2NetworkNetworkTcpProblemsDetection {
    /**
     * Alert if the percentage of new connection failures is higher than the specified threshold **and** the number of failed connections is higher than the defined threshold for the defined amount of samples
     */
    customThresholds?: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholds>;
    /**
     * Detection mode for TCP connectivity problems
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * Detect TCP connectivity problems for process
     */
    enabled: pulumi.Input<boolean>;
}

export interface HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholds {
    /**
     * no documentation available
     */
    eventThresholds: pulumi.Input<inputs.HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholds>;
    /**
     * Number of failed connections threshold
     */
    failedConnectionsNumberPerMinute: pulumi.Input<number>;
    /**
     * New connection failure threshold
     */
    newConnectionFailuresPercentage: pulumi.Input<number>;
}

export interface HostAnomaliesV2NetworkNetworkTcpProblemsDetectionCustomThresholdsEventThresholds {
    /**
     * The number of **10-second samples** that form the sliding evaluation window for dealerting.
     */
    dealertingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must be lower the threshold to close an event
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of **10-second samples** that form the sliding evaluation window to detect violating samples.
     */
    violatingEvaluationWindow: pulumi.Input<number>;
    /**
     * The number of **10-second samples** within the evaluation window that must exceed the threshold to trigger an event
     */
    violatingSamples: pulumi.Input<number>;
}

export interface HostNamingCondition {
    /**
     * A conditions for the metric usage
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionCondition>[]>;
}

export interface HostNamingConditionCondition {
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    applicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionApplicationTypeComparison>[]>;
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     */
    applicationTypes?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionApplicationType>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     */
    azureComputeModeComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionAzureComputeModeComparison>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     *
     * @deprecated You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
     */
    azureComputeModes?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionAzureComputeMode>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     *
     * @deprecated You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
     */
    azureSkuComparisions?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionAzureSkuComparision>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     */
    azureSkus?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionAzureSkus>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     *
     * @deprecated You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
     */
    baseComparisonBasics?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionBaseComparisonBasic>[]>;
    /**
     * Fallback for not yet known type
     *
     * @deprecated 'base_condition_key' is deprecated. You should use 'key'
     */
    baseConditionKeys?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionBaseConditionKey>[]>;
    /**
     * Comparison for `BITNESS` attributes
     *
     * @deprecated You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
     */
    bitnessComparisions?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionBitnessComparision>[]>;
    /**
     * Comparison for `BITNESS` attributes
     */
    bitnesses?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionBitness>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     *
     * @deprecated You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
     */
    cloudTypeComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionCloudTypeComparison>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     */
    cloudTypes?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionCloudType>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     */
    comparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    customApplicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionCustomApplicationTypeComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     */
    customApplicationTypes?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionCustomApplicationType>[]>;
    /**
     * Key for Custom Host Metadata
     *
     * @deprecated 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
     */
    customHostMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionCustomHostMetadataConditionKey>[]>;
    /**
     * Key for Custom Host Metadata
     */
    customHostMetadatas?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionCustomHostMetadata>[]>;
    /**
     * Key for Custom Process Metadata
     *
     * @deprecated 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
     */
    customProcessMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionCustomProcessMetadataConditionKey>[]>;
    /**
     * Key for Custom Process Metadata
     */
    customProcessMetadatas?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionCustomProcessMetadata>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     */
    databaseTopologies?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionDatabaseTopology>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    databaseTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionDatabaseTopologyComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     *
     * @deprecated You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
     */
    dcrumDecoderComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionDcrumDecoderComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     */
    dcrumDecoders?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionDcrumDecoder>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     */
    entities?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionEntity>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     *
     * @deprecated You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
     */
    entityIdComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionEntityIdComparison>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     */
    hostTeches?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionHostTech>[]>;
    /**
     * `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     *
     * @deprecated `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     */
    hypervisorTypeComparisions?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionHypervisorTypeComparision>[]>;
    /**
     * Comparison for `HYPERVISOR_TYPE` attributes
     */
    hypervisors?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionHypervisor>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     *
     * @deprecated You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedNameComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIndexedNameComparison>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     */
    indexedNames?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIndexedName>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     *
     * @deprecated You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedStringComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIndexedStringComparison>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     */
    indexedStrings?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIndexedString>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     *
     * @deprecated You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedTagComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIndexedTagComparison>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     */
    indexedTags?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIndexedTag>[]>;
    /**
     * Comparison for `INTEGER` attributes
     *
     * @deprecated You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
     */
    integerComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIntegerComparison>[]>;
    /**
     * Comparison for `INTEGER` attributes
     */
    integers?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionInteger>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     *
     * @deprecated You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
     */
    ipaddressComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIpaddressComparison>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     */
    ipaddresses?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionIpaddress>[]>;
    /**
     * Fallback for not yet known type
     */
    keys?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionKey>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     *
     * @deprecated You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
     */
    mobilePlatformComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionMobilePlatformComparison>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     */
    mobilePlatforms?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionMobilePlatform>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     */
    osArches?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionOsArch>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     */
    osTypes?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionOsType>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     *
     * @deprecated You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
     */
    osarchitectureComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionOsarchitectureComparison>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     *
     * @deprecated You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
     */
    ostypeComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionOstypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     *
     * @deprecated You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
     */
    paasTypeComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionPaasTypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     */
    paasTypes?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionPaasType>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     *
     * @deprecated 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
     */
    processMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionProcessMetadataConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     */
    processMetadatas?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionProcessMetadata>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     */
    serviceTopologies?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionServiceTopology>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionServiceTopologyComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     *
     * @deprecated You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTypeComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionServiceTypeComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     */
    serviceTypes?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionServiceType>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     *
     * @deprecated You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleHostTechComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionSimpleHostTechComparison>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     *
     * @deprecated You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleTechComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionSimpleTechComparison>[]>;
    /**
     * Comparison for `STRING` attributes
     *
     * @deprecated You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
     */
    stringComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionStringComparison>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     *
     * @deprecated 'string_condition_key' is deprecated. You should use 'string_key'
     */
    stringConditionKeys?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionStringConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     */
    stringKeys?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionStringKey>[]>;
    /**
     * Comparison for `STRING` attributes
     */
    strings?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionString>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     *
     * @deprecated You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
     */
    syntheticEngineTypeComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionSyntheticEngineTypeComparison>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     */
    syntheticEngines?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionSyntheticEngine>[]>;
    /**
     * Comparison for `TAG` attributes
     *
     * @deprecated You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
     */
    tagComparisons?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionTagComparison>[]>;
    /**
     * Comparison for `TAG` attributes
     */
    tags?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionTag>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     */
    teches?: pulumi.Input<pulumi.Input<inputs.HostNamingConditionConditionTech>[]>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionApplicationType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionAzureComputeMode {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionAzureComputeModeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionAzureSkuComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be AZURE_SKU
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionAzureSkus {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionBaseComparisonBasic {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionBaseConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionBitness {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionBitnessComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be BITNESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCloudType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCloudTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CLOUD_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomApplicationType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CUSTOM_APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomHostMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.HostNamingConditionConditionCustomHostMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomHostMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be HOST_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomHostMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.HostNamingConditionConditionCustomProcessMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be PROCESS_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionCustomProcessMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionDatabaseTopology {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionDatabaseTopologyComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DATABASE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionDcrumDecoder {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionDcrumDecoderComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DCRUM_DECODER_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionEntity {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionEntityIdComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be ENTITY_ID
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionHostTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.HostNamingConditionConditionHostTechValue>;
}

export interface HostNamingConditionConditionHostTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionHypervisor {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionHypervisorTypeComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be HYPERVISOR_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionIndexedName {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionIndexedNameComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_NAME
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionIndexedString {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionIndexedStringComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionIndexedTag {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.HostNamingConditionConditionIndexedTagValue>;
}

export interface HostNamingConditionConditionIndexedTagComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.HostNamingConditionConditionIndexedTagComparisonValue>;
}

export interface HostNamingConditionConditionIndexedTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionIndexedTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionInteger {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface HostNamingConditionConditionIntegerComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INTEGER
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface HostNamingConditionConditionIpaddress {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionIpaddressComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be IP_ADDRESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionMobilePlatform {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionMobilePlatformComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be MOBILE_PLATFORM
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionOsArch {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionOsType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionOsarchitectureComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_ARCHITECTURE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionOstypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionPaasType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionPaasTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be PAAS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be PROCESS_PREDEFINED_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionServiceTopology {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionServiceTopologyComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionServiceType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionServiceTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionSimpleHostTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_HOST_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.HostNamingConditionConditionSimpleHostTechComparisonValue>;
}

export interface HostNamingConditionConditionSimpleHostTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionSimpleTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.HostNamingConditionConditionSimpleTechComparisonValue>;
}

export interface HostNamingConditionConditionSimpleTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionString {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionStringComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionStringConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be `STRING`
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionStringKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionSyntheticEngine {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionSyntheticEngineTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SYNTHETIC_ENGINE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionTag {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.HostNamingConditionConditionTagValue>;
}

export interface HostNamingConditionConditionTagComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.HostNamingConditionConditionTagComparisonValue>;
}

export interface HostNamingConditionConditionTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface HostNamingConditionConditionTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.HostNamingConditionConditionTechValue>;
}

export interface HostNamingConditionConditionTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface HttpMonitorAnomalyDetection {
    /**
     * Thresholds for loading times
     */
    loadingTimeThresholds?: pulumi.Input<pulumi.Input<inputs.HttpMonitorAnomalyDetectionLoadingTimeThreshold>[]>;
    /**
     * Outage handling configuration
     */
    outageHandlings?: pulumi.Input<pulumi.Input<inputs.HttpMonitorAnomalyDetectionOutageHandling>[]>;
}

export interface HttpMonitorAnomalyDetectionLoadingTimeThreshold {
    /**
     * Performance threshold is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The list of performance threshold rules
     */
    thresholds?: pulumi.Input<pulumi.Input<inputs.HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold>[]>;
}

export interface HttpMonitorAnomalyDetectionLoadingTimeThresholdThreshold {
    /**
     * The list of performance threshold rules
     */
    thresholds: pulumi.Input<pulumi.Input<inputs.HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold>[]>;
}

export interface HttpMonitorAnomalyDetectionLoadingTimeThresholdThresholdThreshold {
    /**
     * Specify the event to which an ACTION threshold applies
     */
    eventIndex?: pulumi.Input<number>;
    /**
     * Specify the request to which an ACTION threshold applies
     */
    requestIndex?: pulumi.Input<number>;
    /**
     * The type of the threshold: `TOTAL` (total loading time) or `ACTION` (action loading time)
     */
    type?: pulumi.Input<string>;
    /**
     * Notify if monitor takes longer than *X* milliseconds to load
     */
    valueMs: pulumi.Input<number>;
}

export interface HttpMonitorAnomalyDetectionOutageHandling {
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) When enabled (`true`), generate a problem and send an alert when the monitor is unavailable at all configured locations
     */
    globalOutage?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) Global outage handling configuration.
     */
    globalOutagePolicies?: pulumi.Input<pulumi.Input<inputs.HttpMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy>[]>;
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) When enabled (`true`), generate a problem and send an alert when the monitor is unavailable for one or more consecutive runs at any location
     */
    localOutage?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) Local outage handling configuration. 
     *
     *  Alert if **affectedLocations** of locations are unable to access the web application **consecutiveRuns** times consecutively
     */
    localOutagePolicies?: pulumi.Input<pulumi.Input<inputs.HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy>[]>;
    /**
     * (Field has overlap with `dynatrace.BrowserMonitorOutage` and `dynatrace.HttpMonitorOutage`) Schedule retry if browser monitor execution results in a fail. For HTTP monitors this property is ignored
     */
    retryOnError?: pulumi.Input<boolean>;
}

export interface HttpMonitorAnomalyDetectionOutageHandlingGlobalOutagePolicy {
    /**
     * The number of consecutive fails to trigger an alert
     */
    consecutiveRuns: pulumi.Input<number>;
}

export interface HttpMonitorAnomalyDetectionOutageHandlingLocalOutagePolicy {
    /**
     * The number of affected locations to trigger an alert
     */
    affectedLocations: pulumi.Input<number>;
    /**
     * The number of consecutive fails to trigger an alert
     */
    consecutiveRuns: pulumi.Input<number>;
}

export interface HttpMonitorCookiesCookies {
    cookies: pulumi.Input<pulumi.Input<inputs.HttpMonitorCookiesCookiesCookie>[]>;
}

export interface HttpMonitorCookiesCookiesCookie {
    /**
     * Enclose placeholder values in brackets, for example {email}
     */
    domain: pulumi.Input<string>;
    /**
     * Enclose placeholder values in brackets, for example {email}
     */
    name: pulumi.Input<string>;
    /**
     * Enclose placeholder values in brackets, for example {email}
     */
    path?: pulumi.Input<string>;
    /**
     * Enclose placeholder values in brackets, for example {email}
     */
    value: pulumi.Input<string>;
}

export interface HttpMonitorPerformanceThresholds {
    thresholds: pulumi.Input<pulumi.Input<inputs.HttpMonitorPerformanceThresholdsThreshold>[]>;
}

export interface HttpMonitorPerformanceThresholdsThreshold {
    /**
     * Request
     */
    event: pulumi.Input<string>;
    /**
     * Threshold (in seconds)
     */
    threshold: pulumi.Input<number>;
}

export interface HttpMonitorScript {
    /**
     * A HTTP request to be performed by the monitor.
     */
    requests: pulumi.Input<pulumi.Input<inputs.HttpMonitorScriptRequest>[]>;
}

export interface HttpMonitorScriptRequest {
    /**
     * Authentication options for this request
     */
    authentication?: pulumi.Input<inputs.HttpMonitorScriptRequestAuthentication>;
    /**
     * The body of the HTTP request.
     */
    body?: pulumi.Input<string>;
    /**
     * The setup of the monitor
     */
    configuration?: pulumi.Input<inputs.HttpMonitorScriptRequestConfiguration>;
    /**
     * A short description of the event to appear in the web UI.
     */
    description?: pulumi.Input<string>;
    /**
     * The HTTP method of the request.
     */
    method: pulumi.Input<string>;
    /**
     * Javascript code to execute after sending the request.
     */
    postProcessing?: pulumi.Input<string>;
    /**
     * Javascript code to execute before sending the request.
     */
    preProcessing?: pulumi.Input<string>;
    /**
     * Adapt request timeout option - the maximum time this request is allowed to consume. Keep in mind the maximum timeout of the complete monitor is 60 seconds
     */
    requestTimeout?: pulumi.Input<number>;
    /**
     * The URL to check.
     */
    url: pulumi.Input<string>;
    /**
     * Validation helps you verify that your HTTP monitor loads the expected content
     */
    validation?: pulumi.Input<inputs.HttpMonitorScriptRequestValidation>;
}

export interface HttpMonitorScriptRequestAuthentication {
    /**
     * The ID of the credentials within the Dynatrace Credentials Vault.
     */
    credentials: pulumi.Input<string>;
    /**
     * The KDC IP. Valid and required only if the type of authentication is `KERBEROS`.
     */
    kdcIp?: pulumi.Input<string>;
    /**
     * The Realm Name. Valid and required only if the type of authentication is `KERBEROS`.
     */
    realmName?: pulumi.Input<string>;
    /**
     * The type of authentication. Possible values are `BASIC_AUTHENTICATION`, `NTLM` and `KERBEROS`.
     */
    type: pulumi.Input<string>;
}

export interface HttpMonitorScriptRequestConfiguration {
    /**
     * If set to `false`, then the monitor fails with invalid SSL certificates.
     */
    acceptAnyCertificate?: pulumi.Input<boolean>;
    /**
     * The client certificate, if applicable - eg. CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * If set to `false`, redirects are reported as successful requests with response code 3xx.
     *
     * If not set, the `false` option is used.
     */
    followRedirects?: pulumi.Input<boolean>;
    /**
     * The setup of the monitor
     */
    headers?: pulumi.Input<inputs.HttpMonitorScriptRequestConfigurationHeaders>;
    /**
     * Option not to store and display request and response bodies and header values in execution details, `true` or `false`. If not set, `false`.
     */
    sensitiveData?: pulumi.Input<boolean>;
    /**
     * The User agent of the request
     */
    userAgent?: pulumi.Input<string>;
}

export interface HttpMonitorScriptRequestConfigurationHeaders {
    /**
     * contains an HTTP header of the request
     */
    headers: pulumi.Input<pulumi.Input<inputs.HttpMonitorScriptRequestConfigurationHeadersHeader>[]>;
}

export interface HttpMonitorScriptRequestConfigurationHeadersHeader {
    /**
     * The key of the header
     */
    name: pulumi.Input<string>;
    /**
     * The value of the header
     */
    value: pulumi.Input<string>;
}

export interface HttpMonitorScriptRequestValidation {
    /**
     * A list of validation rules
     */
    rules: pulumi.Input<pulumi.Input<inputs.HttpMonitorScriptRequestValidationRule>[]>;
}

export interface HttpMonitorScriptRequestValidationRule {
    /**
     * The validation condition. `true` means validation succeeds if the specified content/element is found. `false` means validation fails if the specified content/element is found. Always specify `false` for `certificateExpiryDateConstraint` to fail the monitor if SSL certificate expiry is within the specified number of days
     */
    passIfFound?: pulumi.Input<boolean>;
    /**
     * The type of the rule. Possible values are `patternConstraint`, `regexConstraint`, `httpStatusesList` and `certificateExpiryDateConstraint`
     */
    type: pulumi.Input<string>;
    /**
     * The content to look for
     */
    value: pulumi.Input<string>;
}

export interface HttpMonitorScriptScript {
    /**
     * A HTTP request to be performed by the monitor.
     */
    requests: pulumi.Input<pulumi.Input<inputs.HttpMonitorScriptScriptRequest>[]>;
}

export interface HttpMonitorScriptScriptRequest {
    /**
     * Authentication options for this request
     */
    authentication?: pulumi.Input<inputs.HttpMonitorScriptScriptRequestAuthentication>;
    /**
     * The body of the HTTP request.
     */
    body?: pulumi.Input<string>;
    /**
     * The setup of the monitor
     */
    configuration?: pulumi.Input<inputs.HttpMonitorScriptScriptRequestConfiguration>;
    /**
     * A short description of the event to appear in the web UI.
     */
    description?: pulumi.Input<string>;
    /**
     * The HTTP method of the request.
     */
    method: pulumi.Input<string>;
    /**
     * Javascript code to execute after sending the request.
     */
    postProcessing?: pulumi.Input<string>;
    /**
     * Javascript code to execute before sending the request.
     */
    preProcessing?: pulumi.Input<string>;
    /**
     * Adapt request timeout option - the maximum time this request is allowed to consume. Keep in mind the maximum timeout of the complete monitor is 60 seconds
     */
    requestTimeout?: pulumi.Input<number>;
    /**
     * The URL to check.
     */
    url: pulumi.Input<string>;
    /**
     * Validation helps you verify that your HTTP monitor loads the expected content
     */
    validation?: pulumi.Input<inputs.HttpMonitorScriptScriptRequestValidation>;
}

export interface HttpMonitorScriptScriptRequestAuthentication {
    /**
     * The ID of the credentials within the Dynatrace Credentials Vault.
     */
    credentials: pulumi.Input<string>;
    /**
     * The KDC IP. Valid and required only if the type of authentication is `KERBEROS`.
     */
    kdcIp?: pulumi.Input<string>;
    /**
     * The Realm Name. Valid and required only if the type of authentication is `KERBEROS`.
     */
    realmName?: pulumi.Input<string>;
    /**
     * The type of authentication. Possible values are `BASIC_AUTHENTICATION`, `NTLM` and `KERBEROS`.
     */
    type: pulumi.Input<string>;
}

export interface HttpMonitorScriptScriptRequestConfiguration {
    /**
     * If set to `false`, then the monitor fails with invalid SSL certificates.
     */
    acceptAnyCertificate?: pulumi.Input<boolean>;
    /**
     * The client certificate, if applicable - eg. CREDENTIALS_VAULT-XXXXXXXXXXXXXXXX
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * If set to `false`, redirects are reported as successful requests with response code 3xx.
     *
     * If not set, the `false` option is used.
     */
    followRedirects?: pulumi.Input<boolean>;
    /**
     * The setup of the monitor
     */
    headers?: pulumi.Input<inputs.HttpMonitorScriptScriptRequestConfigurationHeaders>;
    /**
     * Option not to store and display request and response bodies and header values in execution details, `true` or `false`. If not set, `false`.
     */
    sensitiveData?: pulumi.Input<boolean>;
    /**
     * The User agent of the request
     */
    userAgent?: pulumi.Input<string>;
}

export interface HttpMonitorScriptScriptRequestConfigurationHeaders {
    /**
     * contains an HTTP header of the request
     */
    headers: pulumi.Input<pulumi.Input<inputs.HttpMonitorScriptScriptRequestConfigurationHeadersHeader>[]>;
}

export interface HttpMonitorScriptScriptRequestConfigurationHeadersHeader {
    /**
     * The key of the header
     */
    name: pulumi.Input<string>;
    /**
     * The value of the header
     */
    value: pulumi.Input<string>;
}

export interface HttpMonitorScriptScriptRequestValidation {
    /**
     * A list of validation rules
     */
    rules: pulumi.Input<pulumi.Input<inputs.HttpMonitorScriptScriptRequestValidationRule>[]>;
}

export interface HttpMonitorScriptScriptRequestValidationRule {
    /**
     * The validation condition. `true` means validation succeeds if the specified content/element is found. `false` means validation fails if the specified content/element is found. Always specify `false` for `certificateExpiryDateConstraint` to fail the monitor if SSL certificate expiry is within the specified number of days
     */
    passIfFound?: pulumi.Input<boolean>;
    /**
     * The type of the rule. Possible values are `patternConstraint`, `regexConstraint`, `httpStatusesList` and `certificateExpiryDateConstraint`
     */
    type: pulumi.Input<string>;
    /**
     * The content to look for
     */
    value: pulumi.Input<string>;
}

export interface HttpMonitorTag {
    /**
     * Tag with source of a Dynatrace entity.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.HttpMonitorTagTag>[]>;
}

export interface HttpMonitorTagTag {
    /**
     * The origin of the tag. Supported values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`.
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag.
     *
     * Custom tags have the tag value here.
     */
    key: pulumi.Input<string>;
    /**
     * The source of the tag. Supported values are `USER`, `RULE_BASED` and `AUTO`.
     */
    source?: pulumi.Input<string>;
    /**
     * The value of the tag.
     *
     * Not applicable to custom tags.
     */
    value?: pulumi.Input<string>;
}

export interface HubSubscriptionsTokenSubscriptions {
    tokenSubscriptions: pulumi.Input<pulumi.Input<inputs.HubSubscriptionsTokenSubscriptionsTokenSubscription>[]>;
}

export interface HubSubscriptionsTokenSubscriptionsTokenSubscription {
    /**
     * no documentation available
     */
    description?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Name of subscription
     */
    name: pulumi.Input<string>;
    /**
     * Subscription token
     */
    token: pulumi.Input<string>;
}

export interface IamGroupPermissions {
    /**
     * A Permission
     */
    permissions: pulumi.Input<pulumi.Input<inputs.IamGroupPermissionsPermission>[]>;
}

export interface IamGroupPermissionsPermission {
    /**
     * Possible values: `account-company-info`, `account-user-management`, `account-viewer`, `account-saml-flexible-federation`, `tenant-viewer`, `tenant-manage-settings`, `tenant-agent-install`, `tenant-logviewer`, `tenant-view-sensitive-request-data`, `tenant-configure-request-capture-data`, `tenant-replay-sessions-with-masking`, `tenant-replay-sessions-without-masking`, `tenant-manage-security-problems`, `tenant-view-security-problems`, `tenant-manage-support-tickets`
     */
    name: pulumi.Input<string>;
    /**
     * If `type` is `account` this attribute should hold the UUID of the account. If `type` is 'tenant`this attribute should hold the ID of the environment (`https://\n\n.live.dynatrace.com`). If`type`is`management-zone`this attribute should hold a value like`\n\n:\n\n. You need to use the attribute `legacyId` when referring to a resource `dynatrace.ManagementZoneV2` or a data source `dynatrace.ManagementZone`.
     */
    scope: pulumi.Input<string>;
    /**
     * The type of this permission. Possible values are `account`, `tenant`, `management-zone`
     */
    type: pulumi.Input<string>;
}

export interface IamPolicyBindingsV2Policy {
    /**
     * Either the attribute `id` or the attribute `uuid` of a `dynatrace.IamPolicy`. Initially just the `id` attribute was supported (which is a concatenation of several configuration settings) - and is still supported for backwards compatibility
     */
    id: pulumi.Input<string>;
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

export interface ImsBridgesQueueManager {
    /**
     * Queue manager definition for IMS bridge
     */
    queueManagers?: pulumi.Input<pulumi.Input<inputs.ImsBridgesQueueManagerQueueManager>[]>;
}

export interface ImsBridgesQueueManagerQueueManager {
    /**
     * The name of the queue manager
     */
    name: pulumi.Input<string>;
    /**
     * Queue(s) that belong to the queue manager
     */
    queueManagerQueues?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface K8sClusterAnomaliesCpuRequestsSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sClusterAnomaliesCpuRequestsSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sClusterAnomaliesCpuRequestsSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of cluster CPU capacity for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of requested CPU is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sClusterAnomaliesMemoryRequestsSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sClusterAnomaliesMemoryRequestsSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sClusterAnomaliesMemoryRequestsSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of cluster memory capacity for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of requested memory is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sClusterAnomaliesMonitoringIssues {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sClusterAnomaliesMonitoringIssuesConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sClusterAnomaliesMonitoringIssuesConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * monitoring is not available for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
}

export interface K8sClusterAnomaliesPodsSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sClusterAnomaliesPodsSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sClusterAnomaliesPodsSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of schedulable pod capacity for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * number of running pods is higher than
     */
    threshold: pulumi.Input<number>;
}

export interface K8sClusterAnomaliesReadinessIssues {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sClusterAnomaliesReadinessIssuesConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sClusterAnomaliesReadinessIssuesConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * cluster is not ready for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
}

export interface K8sCredentialsEventsFieldSelector {
    /**
     * Whether subscription to this events field selector is enabled (value set to `true`). If disabled (value set to `false`), Dynatrace will stop fetching events from the Kubernetes API for this events field selector
     */
    active: pulumi.Input<boolean>;
    /**
     * The field selector string (url decoding is applied) when storing it.
     */
    fieldSelector: pulumi.Input<string>;
    /**
     * A label of the events field selector.
     */
    label: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface K8sMonitoringEventPatterns {
    eventPatterns: pulumi.Input<pulumi.Input<inputs.K8sMonitoringEventPatternsEventPattern>[]>;
}

export interface K8sMonitoringEventPatternsEventPattern {
    /**
     * Activate
     */
    active: pulumi.Input<boolean>;
    /**
     * Field selector name
     */
    label: pulumi.Input<string>;
    /**
     * The set of allowed characters for this field has been extended with ActiveGate version 1.259. For more details, see the [documentation](https://dt-url.net/7h23wuk#set-up-event-field-selectors).
     */
    pattern: pulumi.Input<string>;
}

export interface K8sNamespaceAnomaliesCpuLimitsQuotaSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNamespaceAnomaliesCpuLimitsQuotaSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNamespaceAnomaliesCpuLimitsQuotaSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of quota for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of utilized namespace CPU is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sNamespaceAnomaliesCpuRequestsQuotaSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNamespaceAnomaliesCpuRequestsQuotaSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNamespaceAnomaliesCpuRequestsQuotaSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of quota for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of requested namespace CPU is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of quota for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of utilized namespace memory is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of quota for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of requested namespace memory is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sNamespaceAnomaliesPodsQuotaSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNamespaceAnomaliesPodsQuotaSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNamespaceAnomaliesPodsQuotaSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of quota for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * number of utilized namespace pods is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sNodeAnomaliesCpuRequestsSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNodeAnomaliesCpuRequestsSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNodeAnomaliesCpuRequestsSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of node CPU capacity for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of requested CPU is higher than
     */
    threshold: pulumi.Input<number>;
}

export interface K8sNodeAnomaliesMemoryRequestsSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNodeAnomaliesMemoryRequestsSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNodeAnomaliesMemoryRequestsSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of node memory capacity for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of requested memory is higher than
     */
    threshold: pulumi.Input<number>;
}

export interface K8sNodeAnomaliesNodeProblematicCondition {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNodeAnomaliesNodeProblematicConditionConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNodeAnomaliesNodeProblematicConditionConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * node has problematic conditions for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
}

export interface K8sNodeAnomaliesPodsSaturation {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNodeAnomaliesPodsSaturationConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNodeAnomaliesPodsSaturationConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of node capacity for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * number of pods running on node is higher than
     */
    threshold: pulumi.Input<number>;
}

export interface K8sNodeAnomaliesReadinessIssues {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sNodeAnomaliesReadinessIssuesConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sNodeAnomaliesReadinessIssuesConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * node is not ready for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
}

export interface K8sPvcAnomaliesLowDiskSpaceCritical {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sPvcAnomaliesLowDiskSpaceCriticalConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sPvcAnomaliesLowDiskSpaceCriticalConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * the available disk space is below
     */
    threshold: pulumi.Input<number>;
}

export interface K8sPvcAnomaliesLowDiskSpaceCriticalPercentage {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sPvcAnomaliesLowDiskSpaceCriticalPercentageConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sPvcAnomaliesLowDiskSpaceCriticalPercentageConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * the available disk space is below
     */
    threshold: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesContainerRestarts {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesContainerRestartsConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesContainerRestartsConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * per minute, for any
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * there is at least
     */
    threshold: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesDeploymentStuck {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesDeploymentStuckConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesDeploymentStuckConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * workload stops progressing for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesHighCpuThrottling {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesHighCpuThrottlingConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesHighCpuThrottlingConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of CPU usage for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of CPU throttling is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesHighCpuUsage {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesHighCpuUsageConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesHighCpuUsageConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of defined CPU limits for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of utilized workload CPU is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesHighMemoryUsage {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesHighMemoryUsageConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesHighMemoryUsageConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * of defined memory limits for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * amount of utilized workload memory is above
     */
    threshold: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesJobFailureEvents {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesNotAllPodsReady {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesNotAllPodsReadyConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesNotAllPodsReadyConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * some workload pods are not ready for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesOomKills {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesPendingPods {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesPendingPodsConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesPendingPodsConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * stuck in pending state for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
    /**
     * there is at least
     */
    threshold: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesPodBackoffEvents {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesPodEvictionEvents {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesPodPreemptionEvents {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesPodStuckInTerminating {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesPodStuckInTerminatingConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesPodStuckInTerminatingConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * pod termination stops progressing for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
}

export interface K8sWorkloadAnomaliesWorkloadWithoutReadyPods {
    /**
     * Alert if
     */
    configuration?: pulumi.Input<inputs.K8sWorkloadAnomaliesWorkloadWithoutReadyPodsConfiguration>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface K8sWorkloadAnomaliesWorkloadWithoutReadyPodsConfiguration {
    /**
     * within the last
     */
    observationPeriodInMinutes: pulumi.Input<number>;
    /**
     * workload has no ready pods for at least
     */
    samplePeriodInMinutes: pulumi.Input<number>;
}

export interface KubernetesAppKubernetesAppOptions {
    /**
     * New Kubernetes experience
     */
    enableKubernetesApp: pulumi.Input<boolean>;
}

export interface KubernetesEventPatterns {
    eventPatterns: pulumi.Input<pulumi.Input<inputs.KubernetesEventPatternsEventPattern>[]>;
}

export interface KubernetesEventPatternsEventPattern {
    /**
     * Activate
     */
    active: pulumi.Input<boolean>;
    /**
     * Field selector name
     */
    label: pulumi.Input<string>;
    /**
     * The set of allowed characters for this field has been extended with ActiveGate version 1.259. For more details, see the [documentation](https://dt-url.net/7h23wuk#set-up-event-field-selectors).
     */
    pattern: pulumi.Input<string>;
}

export interface LimitOutboundConnectionsAllowedOutboundConnections {
    /**
     * If enabled, the Dynatrace JavaScript runtime will only be able to connect to the specified hosts.
     */
    enforced: pulumi.Input<boolean>;
    /**
     * The Dynatrace JavaScript runtime will only be to connect to these hosts.
     */
    hostLists?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogCustomSourceContext {
    contexts: pulumi.Input<pulumi.Input<inputs.LogCustomSourceContextContext>[]>;
}

export interface LogCustomSourceContextContext {
    /**
     * Possible Values: `Dt_entity_process_group`
     */
    attribute: pulumi.Input<string>;
    /**
     * no documentation available
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogCustomSourceCustomLogSource {
    /**
     * Accept binary content
     */
    acceptBinary?: pulumi.Input<boolean>;
    /**
     * Possible Values: `LOG_PATH_PATTERN`, `WINDOWS_EVENT_LOG`
     */
    type: pulumi.Input<string>;
    /**
     * (Required attribute for cluster v1.291 and under) It might be either an absolute path to log(s) with optional wildcards or Windows Event Log name.
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Required attribute for cluster v1.292+) It might be either an absolute path to log(s) with optional wildcards or Windows Event Log name.
     */
    valuesAndEnrichment?: pulumi.Input<inputs.LogCustomSourceCustomLogSourceValuesAndEnrichment>;
}

export interface LogCustomSourceCustomLogSourceValuesAndEnrichment {
    customLogSourceWithEnrichments: pulumi.Input<pulumi.Input<inputs.LogCustomSourceCustomLogSourceValuesAndEnrichmentCustomLogSourceWithEnrichment>[]>;
}

export interface LogCustomSourceCustomLogSourceValuesAndEnrichmentCustomLogSourceWithEnrichment {
    /**
     * Optional field that allows to define attributes that will enrich logs. ${N} can be used in attribute value to expand the value matched by wildcards where N denotes the number of the wildcard the expand
     */
    enrichment?: pulumi.Input<inputs.LogCustomSourceCustomLogSourceValuesAndEnrichmentCustomLogSourceWithEnrichmentEnrichment>;
    /**
     * Values
     */
    path: pulumi.Input<string>;
}

export interface LogCustomSourceCustomLogSourceValuesAndEnrichmentCustomLogSourceWithEnrichmentEnrichment {
    enrichments: pulumi.Input<pulumi.Input<inputs.LogCustomSourceCustomLogSourceValuesAndEnrichmentCustomLogSourceWithEnrichmentEnrichmentEnrichment>[]>;
}

export interface LogCustomSourceCustomLogSourceValuesAndEnrichmentCustomLogSourceWithEnrichmentEnrichmentEnrichment {
    /**
     * no documentation available
     */
    key?: pulumi.Input<string>;
    /**
     * Possible Values: `Attribute`
     */
    type: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value?: pulumi.Input<string>;
}

export interface LogEventsEventTemplate {
    /**
     * Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
     */
    davisMerge?: pulumi.Input<boolean>;
    /**
     * The description of the event to trigger.
     */
    description: pulumi.Input<string>;
    /**
     * Possible Values: `AVAILABILITY`, `CUSTOM_ALERT`, `CUSTOM_ANNOTATION`, `CUSTOM_CONFIGURATION`, `CUSTOM_DEPLOYMENT`, `ERROR`, `INFO`, `MARKED_FOR_TERMINATION`, `RESOURCE`, `SLOWDOWN`
     */
    eventType: pulumi.Input<string>;
    /**
     * Set of additional key-value properties to be attached to the triggered event.
     */
    metadata?: pulumi.Input<inputs.LogEventsEventTemplateMetadata>;
    /**
     * The title of the event to trigger.
     */
    title: pulumi.Input<string>;
}

export interface LogEventsEventTemplateMetadata {
    items: pulumi.Input<pulumi.Input<inputs.LogEventsEventTemplateMetadataItem>[]>;
}

export interface LogEventsEventTemplateMetadataItem {
    /**
     * Type 'dt.' for key hints.
     */
    metadataKey: pulumi.Input<string>;
    /**
     * no documentation available
     */
    metadataValue: pulumi.Input<string>;
}

export interface LogProcessingProcessorDefinition {
    /**
     * Processor definition
     */
    rule: pulumi.Input<string>;
}

export interface LogProcessingRuleTesting {
    /**
     * Sample log in JSON format.
     */
    sampleLog: pulumi.Input<string>;
}

export interface LogSecurityContextSecurityContextRule {
    /**
     * Matcher
     */
    query: pulumi.Input<string>;
    /**
     * Rule name
     */
    ruleName: pulumi.Input<string>;
    /**
     * Literal value to be set
     */
    value?: pulumi.Input<string>;
    /**
     * Possible Values: `FIELD`, `LITERAL`
     */
    valueSource: pulumi.Input<string>;
    /**
     * Name of field used to copy value
     */
    valueSourceField?: pulumi.Input<string>;
}

export interface LogSensitiveDataMaskingMasking {
    /**
     * Maximum one capture group is allowed. If none was given, the whole expression will be treated as a capture group.
     */
    expression: pulumi.Input<string>;
    /**
     * The string to replace the masked expression with. Irrelevant if `type` is `SHA1`.
     */
    replacement?: pulumi.Input<string>;
    /**
     * Possible Values: `SHA1`, `STRING`
     */
    type: pulumi.Input<string>;
}

export interface LogSensitiveDataMaskingMatchers {
    matchers: pulumi.Input<pulumi.Input<inputs.LogSensitiveDataMaskingMatchersMatcher>[]>;
}

export interface LogSensitiveDataMaskingMatchersMatcher {
    /**
     * Possible Values: `container.name`, `dt.entity.container_group`, `dt.entity.process_group`, `k8s.container.name`, `k8s.deployment.name`, `k8s.namespace.name`, `log.source`, `process.technology` and `host.tag`
     */
    attribute: pulumi.Input<string>;
    /**
     * Possible Values: `MATCHES`
     */
    operator: pulumi.Input<string>;
    /**
     * no documentation available
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogStorageMatchers {
    matchers: pulumi.Input<pulumi.Input<inputs.LogStorageMatchersMatcher>[]>;
}

export interface LogStorageMatchersMatcher {
    /**
     * Possible Values: `Container_name`, `Dt_entity_container_group`, `Dt_entity_process_group`, `Host_tag`, `K8s_container_name`, `K8s_deployment_name`, `K8s_namespace_name`, `Log_content`, `Log_source`, `Loglevel`, `Process_technology`, `Winlog_eventid`, `Winlog_opcode`, `Winlog_provider`, `Winlog_task`
     */
    attribute: pulumi.Input<string>;
    /**
     * Possible Values: `MATCHES`
     */
    operator: pulumi.Input<string>;
    /**
     * no documentation available
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface LogTimestampMatchers {
    matchers: pulumi.Input<pulumi.Input<inputs.LogTimestampMatchersMatcher>[]>;
}

export interface LogTimestampMatchersMatcher {
    /**
     * Possible Values: `Container_name`, `Dt_entity_container_group`, `Dt_entity_process_group`, `K8s_container_name`, `K8s_deployment_name`, `K8s_namespace_name`, `Log_source`, `Process_technology`
     */
    attribute: pulumi.Input<string>;
    /**
     * Possible Values: `MATCHES`
     */
    operator: pulumi.Input<string>;
    /**
     * no documentation available
     */
    values: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceFilters {
    filters: pulumi.Input<pulumi.Input<inputs.MaintenanceFiltersFilter>[]>;
}

export interface MaintenanceFiltersFilter {
    /**
     * A specific entity that should match this maintenance window.. **Note**: If an entity type filter value is set, it must be equal to the type of the selected entity. Otherwise this maintenance window will not match.
     */
    entityId?: pulumi.Input<string>;
    /**
     * Entities which contain all of the configured tags will match this maintenance window.
     */
    entityTags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Type of entities this maintenance window should match.. If no entity type is selected all entities regardless of the type will match.
     */
    entityType?: pulumi.Input<string>;
    /**
     * Entities which are part of all the configured management zones will match this maintenance window.
     */
    managementZones?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface MaintenanceGeneralProperties {
    /**
     * A short description of the maintenance purpose.
     */
    description?: pulumi.Input<string>;
    /**
     * Disables the execution of the synthetic monitors that are within [the scope of this maintenance window](https://dt-url.net/0e0341m).
     */
    disableSynthetic: pulumi.Input<boolean>;
    /**
     * The name of the maintenance window, displayed in the UI
     */
    name: pulumi.Input<string>;
    /**
     * The type of suppression of alerting and problem detection during the maintenance. Possible Values: `DETECT_PROBLEMS_AND_ALERT`, `DETECT_PROBLEMS_DONT_ALERT`, `DONT_DETECT_PROBLEMS`
     */
    suppression: pulumi.Input<string>;
    /**
     * The type of the maintenance, possible values: `PLANNED` or `UNPLANNED`
     */
    type: pulumi.Input<string>;
}

export interface MaintenanceSchedule {
    /**
     * The configuration for maintenance windows occuring daily
     */
    dailyRecurrence?: pulumi.Input<inputs.MaintenanceScheduleDailyRecurrence>;
    /**
     * The configuration for maintenance windows occuring monthly
     */
    monthlyRecurrence?: pulumi.Input<inputs.MaintenanceScheduleMonthlyRecurrence>;
    /**
     * The configuration for maintenance windows occuring once
     */
    onceRecurrence?: pulumi.Input<inputs.MaintenanceScheduleOnceRecurrence>;
    /**
     * The type maintenance window, possible values: `DAILY`, `MONTHLY`, `ONCE`, `WEEKLY`
     */
    type: pulumi.Input<string>;
    /**
     * The configuration for maintenance windows occuring weekly
     */
    weeklyRecurrence?: pulumi.Input<inputs.MaintenanceScheduleWeeklyRecurrence>;
}

export interface MaintenanceScheduleDailyRecurrence {
    /**
     * The recurrence date range of the maintenance window
     */
    recurrenceRange: pulumi.Input<inputs.MaintenanceScheduleDailyRecurrenceRecurrenceRange>;
    /**
     * The time window of the maintenance window
     */
    timeWindow: pulumi.Input<inputs.MaintenanceScheduleDailyRecurrenceTimeWindow>;
}

export interface MaintenanceScheduleDailyRecurrenceRecurrenceRange {
    /**
     * The end date of the recurrence range in YYYY-MM-DD format
     */
    endDate: pulumi.Input<string>;
    /**
     * The start date of the recurrence range in YYYY-MM-DD format
     */
    startDate: pulumi.Input<string>;
}

export interface MaintenanceScheduleDailyRecurrenceTimeWindow {
    /**
     * The end time of the maintenance window validity period in hh:mm:ss format
     */
    endTime: pulumi.Input<string>;
    /**
     * The start time of the maintenance window validity period in hh:mm:ss format
     */
    startTime: pulumi.Input<string>;
    /**
     * The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)
     */
    timeZone: pulumi.Input<string>;
}

export interface MaintenanceScheduleMonthlyRecurrence {
    /**
     * The day of the month for monthly maintenance. If the selected day does not fall within the month, the maintenance window will be active on the last day of the month.
     */
    dayOfMonth: pulumi.Input<number>;
    /**
     * The recurrence date range of the maintenance window
     */
    recurrenceRange: pulumi.Input<inputs.MaintenanceScheduleMonthlyRecurrenceRecurrenceRange>;
    /**
     * The time window of the maintenance window
     */
    timeWindow: pulumi.Input<inputs.MaintenanceScheduleMonthlyRecurrenceTimeWindow>;
}

export interface MaintenanceScheduleMonthlyRecurrenceRecurrenceRange {
    /**
     * The end date of the recurrence range in YYYY-MM-DD format
     */
    endDate: pulumi.Input<string>;
    /**
     * The start date of the recurrence range in YYYY-MM-DD format
     */
    startDate: pulumi.Input<string>;
}

export interface MaintenanceScheduleMonthlyRecurrenceTimeWindow {
    /**
     * The end time of the maintenance window validity period in hh:mm:ss format
     */
    endTime: pulumi.Input<string>;
    /**
     * The start time of the maintenance window validity period in hh:mm:ss format
     */
    startTime: pulumi.Input<string>;
    /**
     * The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)
     */
    timeZone: pulumi.Input<string>;
}

export interface MaintenanceScheduleOnceRecurrence {
    /**
     * The end time of the maintenance window validity period in YYYY-MM-DDThh:mm:ss format (for example, `2022-01-01T08:00:00`)
     */
    endTime: pulumi.Input<string>;
    /**
     * The start time of the maintenance window validity period in YYYY-MM-DDThh:mm:ss format (for example, `2022-01-01T08:00:00`)
     */
    startTime: pulumi.Input<string>;
    /**
     * The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)
     */
    timeZone: pulumi.Input<string>;
}

export interface MaintenanceScheduleWeeklyRecurrence {
    /**
     * The day of the week for weekly maintenance, possible values: `FRIDAY`, `MONDAY`, `SATURDAY`, `SUNDAY`, `THURSDAY`, `TUESDAY`, `WEDNESDAY`
     */
    dayOfWeek: pulumi.Input<string>;
    /**
     * The recurrence date range of the maintenance window
     */
    recurrenceRange: pulumi.Input<inputs.MaintenanceScheduleWeeklyRecurrenceRecurrenceRange>;
    /**
     * The time window of the maintenance window
     */
    timeWindow: pulumi.Input<inputs.MaintenanceScheduleWeeklyRecurrenceTimeWindow>;
}

export interface MaintenanceScheduleWeeklyRecurrenceRecurrenceRange {
    /**
     * The end date of the recurrence range in YYYY-MM-DD format
     */
    endDate: pulumi.Input<string>;
    /**
     * The start date of the recurrence range in YYYY-MM-DD format
     */
    startDate: pulumi.Input<string>;
}

export interface MaintenanceScheduleWeeklyRecurrenceTimeWindow {
    /**
     * The end time of the maintenance window validity period in hh:mm:ss format
     */
    endTime: pulumi.Input<string>;
    /**
     * The start time of the maintenance window validity period in hh:mm:ss format
     */
    startTime: pulumi.Input<string>;
    /**
     * The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)
     */
    timeZone: pulumi.Input<string>;
}

export interface MaintenanceWindowSchedule {
    /**
     * The end date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format
     */
    end: pulumi.Input<string>;
    /**
     * The recurrence of the maintenance window
     */
    recurrence?: pulumi.Input<inputs.MaintenanceWindowScheduleRecurrence>;
    /**
     * The type of the schedule recurrence. Possible values are `DAILY`, `MONTHLY`, `ONCE` and `WEEKLY`
     */
    recurrenceType: pulumi.Input<string>;
    /**
     * The start date and time of the maintenance window validity period in yyyy-mm-dd HH:mm format
     */
    start: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The time zone of the start and end time. Default time zone is UTC. You can use either UTC offset `UTC+01:00` format or the IANA Time Zone Database format (for example, `Europe/Vienna`)
     */
    zoneId: pulumi.Input<string>;
}

export interface MaintenanceWindowScheduleRecurrence {
    /**
     * The day of the month for monthly maintenance.  The value of `31` is treated as the last day of the month for months that don't have a 31st day. The value of `30` is also treated as the last day of the month for February
     */
    dayOfMonth?: pulumi.Input<number>;
    /**
     * The day of the week for weekly maintenance.  The format is the full name of the day in upper case, for example `THURSDAY`
     */
    dayOfWeek?: pulumi.Input<string>;
    /**
     * The duration of the maintenance window in minutes
     */
    durationMinutes: pulumi.Input<number>;
    /**
     * The start time of the maintenance window in HH:mm format
     */
    startTime: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface MaintenanceWindowScope {
    /**
     * A list of Dynatrace entities (for example, hosts or services) to be included in the scope.  Allowed values are Dynatrace entity IDs
     */
    entities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of matching rules for dynamic scope formation.  If several rules are set, the OR logic applies
     */
    matches?: pulumi.Input<pulumi.Input<inputs.MaintenanceWindowScopeMatch>[]>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface MaintenanceWindowScopeMatch {
    /**
     * The ID of a management zone to which the matched entities must belong
     */
    mzId?: pulumi.Input<string>;
    /**
     * The logic that applies when several tags are specified: AND/OR.  If not set, the OR logic is used
     */
    tagCombination?: pulumi.Input<string>;
    /**
     * The tag you want to use for matching.  You can use custom tags from the UI, AWS tags, Cloud Foundry tags, OpenShift/Kubernetes, and tags based on environment variables
     */
    tags?: pulumi.Input<pulumi.Input<inputs.MaintenanceWindowScopeMatchTag>[]>;
    /**
     * The type of the Dynatrace entities (for example, hosts or services) you want to pick up by matching
     */
    type?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface MaintenanceWindowScopeMatchTag {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneDimensionalRule {
    /**
     * The target of the rule. Possible values are
     *    - `ANY`
     *    - `LOG`
     *    - `METRIC`
     */
    appliesTo: pulumi.Input<string>;
    /**
     * A list of conditions for the management zone. The management zone applies only if **all** conditions are fulfilled
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ManagementZoneDimensionalRuleCondition>[]>;
    /**
     * The rule is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneDimensionalRuleCondition {
    /**
     * The reference value for comparison. For conditions of the `DIMENSION` type, specify the key here
     */
    key: pulumi.Input<string>;
    /**
     * How to compare. Possible values are 
     *    - `BEGINS_WITH`
     *    - `EQUALS`
     */
    match: pulumi.Input<string>;
    /**
     * The type of the condition. Possible values are 
     *    - `DIMENSION`
     *    - `LOG_FILE_NAME`
     *    - `METRIC_KEY`
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the dimension. Only applicable when type is set to `DIMENSION`
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneEntitySelectorBasedRule {
    /**
     * The rule is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The entity selector string, by which the entities are selected
     */
    selector?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRule {
    /**
     * A list of matching rules for the management zone. The management zone applies only if **all** conditions are fulfilled
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleCondition>[]>;
    /**
     * The rule is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * How to apply the management zone to underlying entities:
     *    - `SERVICE_TO_HOST_LIKE`: Apply to underlying hosts of matching services
     *    - `SERVICE_TO_PROCESS_GROUP_LIKE`: Apply to underlying process groups of matching services
     *    - `PROCESS_GROUP_TO_HOST`: Apply to underlying hosts of matching process groups
     *    - `PROCESS_GROUP_TO_SERVICE`: Apply to all services provided by matching process groups
     *    - `HOST_TO_PROCESS_GROUP_INSTANCE`: Apply to processes running on matching hosts
     *    - `CUSTOM_DEVICE_GROUP_TO_CUSTOM_DEVICE`: Apply to custom devices in matching custom device groups
     *    - `AZURE_TO_PG`: Apply to process groups connected to matching Azure entities
     *    - `AZURE_TO_SERVICE`: Apply to services provided by matching Azure entities
     */
    propagationTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The type of Dynatrace entities the management zone can be applied to
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleCondition {
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    applicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionApplicationTypeComparison>[]>;
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     */
    applicationTypes?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionApplicationType>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     */
    azureComputeModeComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionAzureComputeModeComparison>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     *
     * @deprecated You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
     */
    azureComputeModes?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionAzureComputeMode>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     *
     * @deprecated You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
     */
    azureSkuComparisions?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionAzureSkuComparision>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     */
    azureSkus?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionAzureSkus>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     *
     * @deprecated You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
     */
    baseComparisonBasics?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionBaseComparisonBasic>[]>;
    /**
     * Fallback for not yet known type
     *
     * @deprecated 'base_condition_key' is deprecated. You should use 'key'
     */
    baseConditionKeys?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionBaseConditionKey>[]>;
    /**
     * Comparison for `BITNESS` attributes
     *
     * @deprecated You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
     */
    bitnessComparisions?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionBitnessComparision>[]>;
    /**
     * Comparison for `BITNESS` attributes
     */
    bitnesses?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionBitness>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     *
     * @deprecated You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
     */
    cloudTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionCloudTypeComparison>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     */
    cloudTypes?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionCloudType>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     */
    comparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    customApplicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionCustomApplicationTypeComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     */
    customApplicationTypes?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionCustomApplicationType>[]>;
    /**
     * Key for Custom Host Metadata
     *
     * @deprecated 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
     */
    customHostMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionCustomHostMetadataConditionKey>[]>;
    /**
     * Key for Custom Host Metadata
     */
    customHostMetadatas?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionCustomHostMetadata>[]>;
    /**
     * Key for Custom Process Metadata
     *
     * @deprecated 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
     */
    customProcessMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionCustomProcessMetadataConditionKey>[]>;
    /**
     * Key for Custom Process Metadata
     */
    customProcessMetadatas?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionCustomProcessMetadata>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     */
    databaseTopologies?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionDatabaseTopology>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    databaseTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionDatabaseTopologyComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     *
     * @deprecated You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
     */
    dcrumDecoderComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionDcrumDecoderComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     */
    dcrumDecoders?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionDcrumDecoder>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     */
    entities?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionEntity>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     *
     * @deprecated You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
     */
    entityIdComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionEntityIdComparison>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     */
    hostTeches?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionHostTech>[]>;
    /**
     * `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     *
     * @deprecated `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     */
    hypervisorTypeComparisions?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionHypervisorTypeComparision>[]>;
    /**
     * Comparison for `HYPERVISOR_TYPE` attributes
     */
    hypervisors?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionHypervisor>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     *
     * @deprecated You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedNameComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIndexedNameComparison>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     */
    indexedNames?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIndexedName>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     *
     * @deprecated You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedStringComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIndexedStringComparison>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     */
    indexedStrings?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIndexedString>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     *
     * @deprecated You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedTagComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIndexedTagComparison>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     */
    indexedTags?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIndexedTag>[]>;
    /**
     * Comparison for `INTEGER` attributes
     *
     * @deprecated You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
     */
    integerComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIntegerComparison>[]>;
    /**
     * Comparison for `INTEGER` attributes
     */
    integers?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionInteger>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     *
     * @deprecated You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
     */
    ipaddressComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIpaddressComparison>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     */
    ipaddresses?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionIpaddress>[]>;
    /**
     * Fallback for not yet known type
     */
    keys?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionKey>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     *
     * @deprecated You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
     */
    mobilePlatformComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionMobilePlatformComparison>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     */
    mobilePlatforms?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionMobilePlatform>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     */
    osArches?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionOsArch>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     */
    osTypes?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionOsType>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     *
     * @deprecated You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
     */
    osarchitectureComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionOsarchitectureComparison>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     *
     * @deprecated You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
     */
    ostypeComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionOstypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     *
     * @deprecated You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
     */
    paasTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionPaasTypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     */
    paasTypes?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionPaasType>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     *
     * @deprecated 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
     */
    processMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionProcessMetadataConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     */
    processMetadatas?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionProcessMetadata>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     */
    serviceTopologies?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionServiceTopology>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionServiceTopologyComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     *
     * @deprecated You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionServiceTypeComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     */
    serviceTypes?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionServiceType>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     *
     * @deprecated You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleHostTechComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionSimpleHostTechComparison>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     *
     * @deprecated You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleTechComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionSimpleTechComparison>[]>;
    /**
     * Comparison for `STRING` attributes
     *
     * @deprecated You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
     */
    stringComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionStringComparison>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     *
     * @deprecated 'string_condition_key' is deprecated. You should use 'string_key'
     */
    stringConditionKeys?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionStringConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     */
    stringKeys?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionStringKey>[]>;
    /**
     * Comparison for `STRING` attributes
     */
    strings?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionString>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     *
     * @deprecated You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
     */
    syntheticEngineTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionSyntheticEngineTypeComparison>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     */
    syntheticEngines?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionSyntheticEngine>[]>;
    /**
     * Comparison for `TAG` attributes
     *
     * @deprecated You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
     */
    tagComparisons?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionTagComparison>[]>;
    /**
     * Comparison for `TAG` attributes
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionTag>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     */
    teches?: pulumi.Input<pulumi.Input<inputs.ManagementZoneRuleConditionTech>[]>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionApplicationType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionAzureComputeMode {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionAzureComputeModeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionAzureSkuComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be AZURE_SKU
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionAzureSkus {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionBaseComparisonBasic {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionBaseConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionBitness {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionBitnessComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be BITNESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCloudType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCloudTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CLOUD_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomApplicationType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CUSTOM_APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomHostMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ManagementZoneRuleConditionCustomHostMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomHostMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be HOST_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomHostMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomHostMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ManagementZoneRuleConditionCustomProcessMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be PROCESS_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomProcessMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionCustomProcessMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionDatabaseTopology {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionDatabaseTopologyComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DATABASE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionDcrumDecoder {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionDcrumDecoderComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DCRUM_DECODER_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionEntity {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionEntityIdComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be ENTITY_ID
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionHostTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ManagementZoneRuleConditionHostTechValue>;
}

export interface ManagementZoneRuleConditionHostTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionHypervisor {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionHypervisorTypeComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be HYPERVISOR_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionIndexedName {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionIndexedNameComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_NAME
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionIndexedString {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionIndexedStringComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionIndexedTag {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ManagementZoneRuleConditionIndexedTagValue>;
}

export interface ManagementZoneRuleConditionIndexedTagComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ManagementZoneRuleConditionIndexedTagComparisonValue>;
}

export interface ManagementZoneRuleConditionIndexedTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionIndexedTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionInteger {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface ManagementZoneRuleConditionIntegerComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INTEGER
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface ManagementZoneRuleConditionIpaddress {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionIpaddressComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be IP_ADDRESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionMobilePlatform {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionMobilePlatformComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be MOBILE_PLATFORM
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionOsArch {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionOsType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionOsarchitectureComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_ARCHITECTURE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionOstypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionPaasType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionPaasTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be PAAS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be PROCESS_PREDEFINED_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionServiceTopology {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionServiceTopologyComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionServiceType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionServiceTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionSimpleHostTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_HOST_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ManagementZoneRuleConditionSimpleHostTechComparisonValue>;
}

export interface ManagementZoneRuleConditionSimpleHostTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionSimpleTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ManagementZoneRuleConditionSimpleTechComparisonValue>;
}

export interface ManagementZoneRuleConditionSimpleTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionString {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionStringComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionStringConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be `STRING`
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionStringKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionSyntheticEngine {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionSyntheticEngineTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SYNTHETIC_ENGINE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionTag {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ManagementZoneRuleConditionTagValue>;
}

export interface ManagementZoneRuleConditionTagComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ManagementZoneRuleConditionTagComparisonValue>;
}

export interface ManagementZoneRuleConditionTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ManagementZoneRuleConditionTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ManagementZoneRuleConditionTechValue>;
}

export interface ManagementZoneRuleConditionTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ManagementZoneV2Rules {
    /**
     * A management zone rule
     */
    rules: pulumi.Input<pulumi.Input<inputs.ManagementZoneV2RulesRule>[]>;
}

export interface ManagementZoneV2RulesRule {
    /**
     * no documentation available
     */
    attributeRule?: pulumi.Input<inputs.ManagementZoneV2RulesRuleAttributeRule>;
    /**
     * no documentation available
     */
    dimensionRule?: pulumi.Input<inputs.ManagementZoneV2RulesRuleDimensionRule>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The documentation of the entity selector can be found [here](https://dt-url.net/apientityselector).
     */
    entitySelector?: pulumi.Input<string>;
    /**
     * Possible Values: `DIMENSION`, `ME`, `SELECTOR`
     */
    type: pulumi.Input<string>;
}

export interface ManagementZoneV2RulesRuleAttributeRule {
    /**
     * no documentation available
     */
    attributeConditions: pulumi.Input<inputs.ManagementZoneV2RulesRuleAttributeRuleAttributeConditions>;
    /**
     * Apply to process groups connected to matching Azure entities
     */
    azureToPgpropagation?: pulumi.Input<boolean>;
    /**
     * Apply to services provided by matching Azure entities
     */
    azureToServicePropagation?: pulumi.Input<boolean>;
    /**
     * Apply to custom devices in a custom device group
     */
    customDeviceGroupToCustomDevicePropagation?: pulumi.Input<boolean>;
    /**
     * Possible Values: `APPMON_SERVER`, `APPMON_SYSTEM_PROFILE`, `AWS_ACCOUNT`, `AWS_APPLICATION_LOAD_BALANCER`, `AWS_AUTO_SCALING_GROUP`, `AWS_CLASSIC_LOAD_BALANCER`, `AWS_NETWORK_LOAD_BALANCER`, `AWS_RELATIONAL_DATABASE_SERVICE`, `AZURE`, `BROWSER_MONITOR`, `CLOUD_APPLICATION`, `CLOUD_APPLICATION_NAMESPACE`, `CLOUD_FOUNDRY_FOUNDATION`, `CUSTOM_APPLICATION`, `CUSTOM_DEVICE`, `CUSTOM_DEVICE_GROUP`, `DATA_CENTER_SERVICE`, `ENTERPRISE_APPLICATION`, `ESXI_HOST`, `EXTERNAL_MONITOR`, `HOST`, `HOST_GROUP`, `HTTP_MONITOR`, `KUBERNETES_CLUSTER`, `KUBERNETES_SERVICE`, `MOBILE_APPLICATION`, `OPENSTACK_ACCOUNT`, `PROCESS_GROUP`, `QUEUE`, `SERVICE`, `WEB_APPLICATION`
     */
    entityType: pulumi.Input<string>;
    /**
     * Apply to processes running on matching hosts. `entityType` must be set to `HOST`
     */
    hostToPgpropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying hosts of matching process groups. `entityType` must be set to `PROCESS_GROUP`
     */
    pgToHostPropagation?: pulumi.Input<boolean>;
    /**
     * Apply to all services provided by the process groups. `entityType` must be set to `PROCESS_GROUP`
     */
    pgToServicePropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying hosts of matching services. `entityType` must be set to `SERVICE`
     */
    serviceToHostPropagation?: pulumi.Input<boolean>;
    /**
     * Apply to underlying process groups of matching services. `entityType` must be set to `SERVICE`
     */
    serviceToPgpropagation?: pulumi.Input<boolean>;
}

export interface ManagementZoneV2RulesRuleAttributeRuleAttributeConditions {
    /**
     * Attribute conditions
     */
    conditions: pulumi.Input<pulumi.Input<inputs.ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsCondition>[]>;
}

export interface ManagementZoneV2RulesRuleAttributeRuleAttributeConditionsCondition {
    /**
     * Case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Dynamic key
     */
    dynamicKey?: pulumi.Input<string>;
    /**
     * Key source
     */
    dynamicKeySource?: pulumi.Input<string>;
    /**
     * Value
     */
    entityId?: pulumi.Input<string>;
    /**
     * Value
     */
    enumValue?: pulumi.Input<string>;
    /**
     * Value
     */
    integerValue?: pulumi.Input<number>;
    /**
     * Possible Values: `APPMON_SERVER_NAME`, `APPMON_SYSTEM_PROFILE_NAME`, `AWS_ACCOUNT_ID`, `AWS_ACCOUNT_NAME`, `AWS_APPLICATION_LOAD_BALANCER_NAME`, `AWS_APPLICATION_LOAD_BALANCER_TAGS`, `AWS_AUTO_SCALING_GROUP_NAME`, `AWS_AUTO_SCALING_GROUP_TAGS`, `AWS_AVAILABILITY_ZONE_NAME`, `AWS_CLASSIC_LOAD_BALANCER_FRONTEND_PORTS`, `AWS_CLASSIC_LOAD_BALANCER_NAME`, `AWS_CLASSIC_LOAD_BALANCER_TAGS`, `AWS_NETWORK_LOAD_BALANCER_NAME`, `AWS_NETWORK_LOAD_BALANCER_TAGS`, `AWS_RELATIONAL_DATABASE_SERVICE_DB_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_ENDPOINT`, `AWS_RELATIONAL_DATABASE_SERVICE_ENGINE`, `AWS_RELATIONAL_DATABASE_SERVICE_INSTANCE_CLASS`, `AWS_RELATIONAL_DATABASE_SERVICE_NAME`, `AWS_RELATIONAL_DATABASE_SERVICE_PORT`, `AWS_RELATIONAL_DATABASE_SERVICE_TAGS`, `AZURE_ENTITY_NAME`, `AZURE_ENTITY_TAGS`, `AZURE_MGMT_GROUP_NAME`, `AZURE_MGMT_GROUP_UUID`, `AZURE_REGION_NAME`, `AZURE_SCALE_SET_NAME`, `AZURE_SUBSCRIPTION_NAME`, `AZURE_SUBSCRIPTION_UUID`, `AZURE_TENANT_NAME`, `AZURE_TENANT_UUID`, `AZURE_VM_NAME`, `BROWSER_MONITOR_NAME`, `BROWSER_MONITOR_TAGS`, `CLOUD_APPLICATION_LABELS`, `CLOUD_APPLICATION_NAME`, `CLOUD_APPLICATION_NAMESPACE_LABELS`, `CLOUD_APPLICATION_NAMESPACE_NAME`, `CLOUD_FOUNDRY_FOUNDATION_NAME`, `CLOUD_FOUNDRY_ORG_NAME`, `CUSTOM_APPLICATION_NAME`, `CUSTOM_APPLICATION_PLATFORM`, `CUSTOM_APPLICATION_TAGS`, `CUSTOM_APPLICATION_TYPE`, `CUSTOM_DEVICE_DNS_ADDRESS`, `CUSTOM_DEVICE_GROUP_NAME`, `CUSTOM_DEVICE_GROUP_TAGS`, `CUSTOM_DEVICE_IP_ADDRESS`, `CUSTOM_DEVICE_METADATA`, `CUSTOM_DEVICE_NAME`, `CUSTOM_DEVICE_PORT`, `CUSTOM_DEVICE_TAGS`, `CUSTOM_DEVICE_TECHNOLOGY`, `DATA_CENTER_SERVICE_DECODER_TYPE`, `DATA_CENTER_SERVICE_IP_ADDRESS`, `DATA_CENTER_SERVICE_METADATA`, `DATA_CENTER_SERVICE_NAME`, `DATA_CENTER_SERVICE_PORT`, `DATA_CENTER_SERVICE_TAGS`, `DOCKER_CONTAINER_NAME`, `DOCKER_FULL_IMAGE_NAME`, `DOCKER_IMAGE_VERSION`, `EC2_INSTANCE_AMI_ID`, `EC2_INSTANCE_AWS_INSTANCE_TYPE`, `EC2_INSTANCE_AWS_SECURITY_GROUP`, `EC2_INSTANCE_BEANSTALK_ENV_NAME`, `EC2_INSTANCE_ID`, `EC2_INSTANCE_NAME`, `EC2_INSTANCE_PRIVATE_HOST_NAME`, `EC2_INSTANCE_PUBLIC_HOST_NAME`, `EC2_INSTANCE_TAGS`, `ENTERPRISE_APPLICATION_DECODER_TYPE`, `ENTERPRISE_APPLICATION_IP_ADDRESS`, `ENTERPRISE_APPLICATION_METADATA`, `ENTERPRISE_APPLICATION_NAME`, `ENTERPRISE_APPLICATION_PORT`, `ENTERPRISE_APPLICATION_TAGS`, `ESXI_HOST_CLUSTER_NAME`, `ESXI_HOST_HARDWARE_MODEL`, `ESXI_HOST_HARDWARE_VENDOR`, `ESXI_HOST_NAME`, `ESXI_HOST_PRODUCT_NAME`, `ESXI_HOST_PRODUCT_VERSION`, `ESXI_HOST_TAGS`, `EXTERNAL_MONITOR_ENGINE_DESCRIPTION`, `EXTERNAL_MONITOR_ENGINE_NAME`, `EXTERNAL_MONITOR_ENGINE_TYPE`, `EXTERNAL_MONITOR_NAME`, `EXTERNAL_MONITOR_TAGS`, `GEOLOCATION_SITE_NAME`, `GOOGLE_CLOUD_PLATFORM_ZONE_NAME`, `GOOGLE_COMPUTE_INSTANCE_ID`, `GOOGLE_COMPUTE_INSTANCE_MACHINE_TYPE`, `GOOGLE_COMPUTE_INSTANCE_NAME`, `GOOGLE_COMPUTE_INSTANCE_PROJECT`, `GOOGLE_COMPUTE_INSTANCE_PROJECT_ID`, `GOOGLE_COMPUTE_INSTANCE_PUBLIC_IP_ADDRESSES`, `HOST_AIX_LOGICAL_CPU_COUNT`, `HOST_AIX_SIMULTANEOUS_THREADS`, `HOST_AIX_VIRTUAL_CPU_COUNT`, `HOST_ARCHITECTURE`, `HOST_AWS_NAME_TAG`, `HOST_AZURE_COMPUTE_MODE`, `HOST_AZURE_SKU`, `HOST_AZURE_WEB_APPLICATION_HOST_NAMES`, `HOST_AZURE_WEB_APPLICATION_SITE_NAMES`, `HOST_BITNESS`, `HOST_BOSH_AVAILABILITY_ZONE`, `HOST_BOSH_DEPLOYMENT_ID`, `HOST_BOSH_INSTANCE_ID`, `HOST_BOSH_INSTANCE_NAME`, `HOST_BOSH_NAME`, `HOST_BOSH_STEMCELL_VERSION`, `HOST_CLOUD_TYPE`, `HOST_CPU_CORES`, `HOST_CUSTOM_METADATA`, `HOST_DETECTED_NAME`, `HOST_GROUP_ID`, `HOST_GROUP_NAME`, `HOST_HYPERVISOR_TYPE`, `HOST_IP_ADDRESS`, `HOST_KUBERNETES_LABELS`, `HOST_LOGICAL_CPU_CORES`, `HOST_NAME`, `HOST_ONEAGENT_CUSTOM_HOST_NAME`, `HOST_OS_TYPE`, `HOST_OS_VERSION`, `HOST_PAAS_MEMORY_LIMIT`, `HOST_PAAS_TYPE`, `HOST_TAGS`, `HOST_TECHNOLOGY`, `HTTP_MONITOR_NAME`, `HTTP_MONITOR_TAGS`, `KUBERNETES_CLUSTER_NAME`, `KUBERNETES_NODE_NAME`, `KUBERNETES_SERVICE_NAME`, `MOBILE_APPLICATION_NAME`, `MOBILE_APPLICATION_PLATFORM`, `MOBILE_APPLICATION_TAGS`, `NAME_OF_COMPUTE_NODE`, `OPENSTACK_ACCOUNT_NAME`, `OPENSTACK_ACCOUNT_PROJECT_NAME`, `OPENSTACK_AVAILABILITY_ZONE_NAME`, `OPENSTACK_PROJECT_NAME`, `OPENSTACK_REGION_NAME`, `OPENSTACK_VM_INSTANCE_TYPE`, `OPENSTACK_VM_NAME`, `OPENSTACK_VM_SECURITY_GROUP`, `PROCESS_GROUP_AZURE_HOST_NAME`, `PROCESS_GROUP_AZURE_SITE_NAME`, `PROCESS_GROUP_CUSTOM_METADATA`, `PROCESS_GROUP_DETECTED_NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_LISTEN_PORT`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_PREDEFINED_METADATA`, `PROCESS_GROUP_TAGS`, `PROCESS_GROUP_TECHNOLOGY`, `PROCESS_GROUP_TECHNOLOGY_EDITION`, `PROCESS_GROUP_TECHNOLOGY_VERSION`, `QUEUE_NAME`, `QUEUE_TECHNOLOGY`, `QUEUE_VENDOR`, `SERVICE_AKKA_ACTOR_SYSTEM`, `SERVICE_CTG_SERVICE_NAME`, `SERVICE_DATABASE_HOST_NAME`, `SERVICE_DATABASE_NAME`, `SERVICE_DATABASE_TOPOLOGY`, `SERVICE_DATABASE_VENDOR`, `SERVICE_DETECTED_NAME`, `SERVICE_ESB_APPLICATION_NAME`, `SERVICE_IBM_CTG_GATEWAY_URL`, `SERVICE_MESSAGING_LISTENER_CLASS_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REMOTE_ENDPOINT`, `SERVICE_REMOTE_SERVICE_NAME`, `SERVICE_TAGS`, `SERVICE_TECHNOLOGY`, `SERVICE_TECHNOLOGY_EDITION`, `SERVICE_TECHNOLOGY_VERSION`, `SERVICE_TOPOLOGY`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_ENDPOINT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `VMWARE_DATACENTER_NAME`, `VMWARE_VM_NAME`, `WEB_APPLICATION_NAME`, `WEB_APPLICATION_NAME_PATTERN`, `WEB_APPLICATION_TAGS`, `WEB_APPLICATION_TYPE`
     */
    key: pulumi.Input<string>;
    /**
     * Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `IS_IP_IN_RANGE`, `LOWER_THAN`, `LOWER_THAN_OR_EQUAL`, `NOT_BEGINS_WITH`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_EXISTS`, `NOT_GREATER_THAN`, `NOT_GREATER_THAN_OR_EQUAL`, `NOT_IS_IP_IN_RANGE`, `NOT_LOWER_THAN`, `NOT_LOWER_THAN_OR_EQUAL`, `NOT_REGEX_MATCHES`, `NOT_TAG_KEY_EQUALS`, `REGEX_MATCHES`, `TAG_KEY_EQUALS`
     */
    operator: pulumi.Input<string>;
    /**
     * Value
     */
    stringValue?: pulumi.Input<string>;
    /**
     * Format: `[CONTEXT]tagKey:tagValue`
     */
    tag?: pulumi.Input<string>;
}

export interface ManagementZoneV2RulesRuleDimensionRule {
    /**
     * Possible Values: `ANY`, `LOG`, `METRIC`
     */
    appliesTo: pulumi.Input<string>;
    /**
     * Conditions
     */
    dimensionConditions?: pulumi.Input<inputs.ManagementZoneV2RulesRuleDimensionRuleDimensionConditions>;
}

export interface ManagementZoneV2RulesRuleDimensionRuleDimensionConditions {
    /**
     * Dimension conditions
     */
    conditions: pulumi.Input<pulumi.Input<inputs.ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsCondition>[]>;
}

export interface ManagementZoneV2RulesRuleDimensionRuleDimensionConditionsCondition {
    /**
     * Possible Values: `DIMENSION`, `LOG_FILE_NAME`, `METRIC_KEY`
     */
    conditionType: pulumi.Input<string>;
    /**
     * no documentation available
     */
    key?: pulumi.Input<string>;
    /**
     * Possible Values: `BEGINS_WITH`, `EQUALS`
     */
    ruleMatcher: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface MetricEventsEventTemplate {
    /**
     * Davis® AI will try to merge this event into existing problems, otherwise a new problem will always be created.
     */
    davisMerge?: pulumi.Input<boolean>;
    /**
     * The description of the event to trigger.
     */
    description: pulumi.Input<string>;
    /**
     * Possible Values: `AVAILABILITY`, `CUSTOM_ALERT`, `CUSTOM_ANNOTATION`, `CUSTOM_CONFIGURATION`, `CUSTOM_DEPLOYMENT`, `ERROR`, `INFO`, `MARKED_FOR_TERMINATION`, `RESOURCE`, `SLOWDOWN`
     */
    eventType: pulumi.Input<string>;
    /**
     * Set of additional key-value properties to be attached to the triggered event.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.MetricEventsEventTemplateMetadata>[]>;
    /**
     * The title of the event to trigger.
     */
    title: pulumi.Input<string>;
}

export interface MetricEventsEventTemplateMetadata {
    /**
     * Type 'dt.' for key hints.
     */
    metadataKey: pulumi.Input<string>;
    /**
     * no documentation available
     */
    metadataValue: pulumi.Input<string>;
}

export interface MetricEventsModelProperties {
    /**
     * Possible Values: `ABOVE`, `BELOW`, `OUTSIDE`
     */
    alertCondition: pulumi.Input<string>;
    /**
     * The ability to set an alert on missing data in a metric. When enabled, missing data samples will contribute as violating samples defined in advanced model properties. We recommend to not alert on missing data for sparse timeseries as this leads to alert spam.
     */
    alertOnNoData: pulumi.Input<boolean>;
    /**
     * The number of one-minute samples within the evaluation window that must go back to normal to close the event.
     */
    dealertingSamples: pulumi.Input<number>;
    /**
     * The number of one-minute samples that form the sliding evaluation window.
     */
    samples: pulumi.Input<number>;
    /**
     * Controls how many times the signal fluctuation is added to the baseline to produce the actual threshold for alerting
     */
    signalFluctuation?: pulumi.Input<number>;
    /**
     * Raise an event if this value is violated
     */
    threshold?: pulumi.Input<number>;
    /**
     * Controls the width of the confidence band and larger values lead to a less sensitive model
     */
    tolerance?: pulumi.Input<number>;
    /**
     * Possible Values: `AUTO_ADAPTIVE_THRESHOLD`, `SEASONAL_BASELINE`, `STATIC_THRESHOLD`
     */
    type: pulumi.Input<string>;
    /**
     * The number of one-minute samples within the evaluation window that must violate to trigger an event.
     */
    violatingSamples: pulumi.Input<number>;
}

export interface MetricEventsQueryDefinition {
    /**
     * Possible Values: `AVG`, `COUNT`, `MAX`, `MEDIAN`, `MIN`, `PERCENTILE90`, `SUM`, `VALUE`
     */
    aggregation?: pulumi.Input<string>;
    /**
     * Dimension filter
     */
    dimensionFilter?: pulumi.Input<inputs.MetricEventsQueryDefinitionDimensionFilter>;
    /**
     * Use rule-based filters to define the scope this event monitors.
     */
    entityFilter?: pulumi.Input<inputs.MetricEventsQueryDefinitionEntityFilter>;
    /**
     * The `legacyId` of a Management Zone (as provided by the resource `dynatrace.ManagementZoneV2` or the data source `dynatrace.ManagementZone`)
     */
    managementZone?: pulumi.Input<string>;
    /**
     * Metric key
     */
    metricKey?: pulumi.Input<string>;
    /**
     * To learn more, visit [Metric Selector](https://dt-url.net/metselad)
     */
    metricSelector?: pulumi.Input<string>;
    /**
     * Minute offset of sliding evaluation window for metrics with latency
     */
    queryOffset?: pulumi.Input<number>;
    /**
     * Possible Values: `METRIC_KEY`, `METRIC_SELECTOR`
     */
    type: pulumi.Input<string>;
}

export interface MetricEventsQueryDefinitionDimensionFilter {
    filters: pulumi.Input<pulumi.Input<inputs.MetricEventsQueryDefinitionDimensionFilterFilter>[]>;
}

export interface MetricEventsQueryDefinitionDimensionFilterFilter {
    /**
     * Dimension key
     */
    dimensionKey: pulumi.Input<string>;
    /**
     * Dimension value
     */
    dimensionValue: pulumi.Input<string>;
    /**
     * Possible Values: `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
     */
    operator?: pulumi.Input<string>;
}

export interface MetricEventsQueryDefinitionEntityFilter {
    /**
     * no documentation available
     */
    conditions?: pulumi.Input<inputs.MetricEventsQueryDefinitionEntityFilterConditions>;
    /**
     * Dimension key of entity type to filter
     */
    dimensionKey?: pulumi.Input<string>;
}

export interface MetricEventsQueryDefinitionEntityFilterConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.MetricEventsQueryDefinitionEntityFilterConditionsCondition>[]>;
}

export interface MetricEventsQueryDefinitionEntityFilterConditionsCondition {
    /**
     * Possible Values: `CONTAINS_CASE_INSENSITIVE`, `CONTAINS_CASE_SENSITIVE`, `DOES_NOT_CONTAIN_CASE_INSENSITIVE`, `DOES_NOT_CONTAIN_CASE_SENSITIVE`, `DOES_NOT_EQUAL`, `DOES_NOT_START_WITH`, `EQUALS`, `STARTS_WITH`
     */
    operator: pulumi.Input<string>;
    /**
     * Possible Values: `CUSTOM_DEVICE_GROUP_NAME`, `ENTITY_ID`, `HOST_GROUP_NAME`, `HOST_NAME`, `MANAGEMENT_ZONE`, `NAME`, `PROCESS_GROUP_ID`, `PROCESS_GROUP_NAME`, `TAG`
     */
    type: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface MetricMetadataDimensions {
    dimensions: pulumi.Input<pulumi.Input<inputs.MetricMetadataDimensionsDimension>[]>;
}

export interface MetricMetadataDimensionsDimension {
    /**
     * Display name
     */
    displayName?: pulumi.Input<string>;
    /**
     * Dimension key
     */
    key: pulumi.Input<string>;
}

export interface MetricMetadataMetricProperties {
    /**
     * Whether (true or false) the metric is relevant to a problem's impact.
     */
    impactRelevant?: pulumi.Input<boolean>;
    /**
     * The latency of the metric, in minutes. 
     *
     *  The latency is the expected reporting delay (for example, caused by constraints of cloud vendors or other third-party data sources) between the observation of a metric data point and its availability in Dynatrace. 
     *
     * The allowed value range is from 1 to 60 minutes.
     */
    latency?: pulumi.Input<number>;
    /**
     * The maximum allowed value of the metric.
     */
    maxValue?: pulumi.Input<number>;
    /**
     * The minimum allowed value of the metric.
     */
    minValue?: pulumi.Input<number>;
    /**
     * Whether (true or false) the metric is related to a root cause of a problem.
     *
     * A root-cause relevant metric represents a strong indicator for a faulty component.
     */
    rootCauseRelevant?: pulumi.Input<boolean>;
    /**
     * Possible Values: `Error`, `Score`, `Unknown`
     */
    valueType: pulumi.Input<string>;
}

export interface MobileAppAnomaliesErrorRateIncrease {
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Alert if the percentage of user actions affected by reported errors exceeds **both** the absolute threshold and the relative threshold
     */
    errorRateIncreaseAuto?: pulumi.Input<inputs.MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto>;
    /**
     * Alert if the custom reported error rate threshold is exceeded during any 5-minute period
     */
    errorRateIncreaseFixed?: pulumi.Input<inputs.MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed>;
}

export interface MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseAuto {
    /**
     * Absolute threshold
     */
    thresholdAbsolute: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    thresholdRelative: pulumi.Input<number>;
}

export interface MobileAppAnomaliesErrorRateIncreaseErrorRateIncreaseFixed {
    /**
     * Possible Values: `Low`, `Medium`, `High`
     */
    sensitivity: pulumi.Input<string>;
    /**
     * Absolute threshold
     */
    thresholdAbsolute: pulumi.Input<number>;
}

export interface MobileAppAnomaliesSlowUserActions {
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    slowUserActionsAuto?: pulumi.Input<inputs.MobileAppAnomaliesSlowUserActionsSlowUserActionsAuto>;
    /**
     * no documentation available
     */
    slowUserActionsFixed?: pulumi.Input<inputs.MobileAppAnomaliesSlowUserActionsSlowUserActionsFixed>;
}

export interface MobileAppAnomaliesSlowUserActionsSlowUserActionsAuto {
    /**
     * To avoid over-alerting do not alert for low traffic applications with less than
     */
    durationAvoidOveralerting: pulumi.Input<inputs.MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting>;
    /**
     * Alert if the action duration of all user actions degrades beyond **both** the absolute and relative threshold:
     */
    durationThresholdAll: pulumi.Input<inputs.MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll>;
    /**
     * Alert if the action duration of the slowest 10% of user actions degrades beyond **both** the absolute and relative threshold:
     */
    durationThresholdSlowest: pulumi.Input<inputs.MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest>;
}

export interface MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationAvoidOveralerting {
    /**
     * no documentation available
     */
    minActionRate: pulumi.Input<number>;
}

export interface MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdAll {
    /**
     * Absolute threshold
     */
    durationThreshold: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    slowdownPercentage: pulumi.Input<number>;
}

export interface MobileAppAnomaliesSlowUserActionsSlowUserActionsAutoDurationThresholdSlowest {
    /**
     * Absolute threshold
     */
    durationThreshold: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    slowdownPercentage: pulumi.Input<number>;
}

export interface MobileAppAnomaliesSlowUserActionsSlowUserActionsFixed {
    /**
     * To avoid over-alerting do not alert for low traffic applications with less than
     */
    durationAvoidOveralerting: pulumi.Input<inputs.MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting>;
    /**
     * Alert if the action duration of all user actions degrades beyond the absolute threshold:
     */
    durationThresholdAllFixed: pulumi.Input<inputs.MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed>;
    /**
     * Alert if the action duration of the slowest 10% of user actions degrades beyond the absolute threshold:
     */
    durationThresholdSlowest: pulumi.Input<inputs.MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest>;
    /**
     * Possible Values: `Low`, `Medium`, `High`
     */
    sensitivity: pulumi.Input<string>;
}

export interface MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationAvoidOveralerting {
    /**
     * no documentation available
     */
    minActionRate: pulumi.Input<number>;
}

export interface MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdAllFixed {
    /**
     * Absolute threshold
     */
    durationThreshold: pulumi.Input<number>;
}

export interface MobileAppAnomaliesSlowUserActionsSlowUserActionsFixedDurationThresholdSlowest {
    /**
     * Absolute threshold
     */
    durationThreshold: pulumi.Input<number>;
}

export interface MobileAppAnomaliesUnexpectedHighLoad {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic spikes within your application.
     */
    thresholdPercentage?: pulumi.Input<number>;
}

export interface MobileAppAnomaliesUnexpectedLowLoad {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Dynatrace learns your typical application traffic over an observation period of one week. Depending on this expected value Dynatrace detects abnormal traffic drops within your application.
     */
    thresholdPercentage?: pulumi.Input<number>;
}

export interface MobileAppCrashRateCrashRateIncrease {
    /**
     * Alert crash rate increases when auto-detected baseline is exceeded by a certain number of users
     */
    crashRateIncreaseAuto?: pulumi.Input<inputs.MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto>;
    /**
     * Alert crash rate increases when the defined threshold is exceeded by a certain number of users
     */
    crashRateIncreaseFixed?: pulumi.Input<inputs.MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed>;
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseAuto {
    /**
     * Dynatrace learns the typical crash rate for all app versions and will create an alert if the baseline is violated by more than a specified threshold. Analysis happens based on a sliding window of 10 minutes.
     */
    baselineViolationPercentage: pulumi.Input<number>;
    /**
     * Amount of users
     */
    concurrentUsers: pulumi.Input<number>;
    /**
     * Possible Values: `Low`, `Medium`, `High`
     */
    sensitivity: pulumi.Input<string>;
}

export interface MobileAppCrashRateCrashRateIncreaseCrashRateIncreaseFixed {
    /**
     * Absolute threshold
     */
    absoluteCrashRate: pulumi.Input<number>;
    /**
     * Amount of users
     */
    concurrentUsers: pulumi.Input<number>;
}

export interface MobileAppEnablementRum {
    /**
     * Percentage of user sessions captured and analyzed. By default, Dynatrace captures all user actions and user sessions for analysis. This approach ensures complete insight into your application’s performance and customer experience. You can optionally reduce the granularity of user-action and user-session analysis by capturing a lower percentage of user sessions. While this approach can reduce monitoring costs, it also results in lower visibility into how your customers are using your applications. For example, a setting of 10% results in Dynatrace analyzing only every tenth user session.
     */
    costAndTrafficControl: pulumi.Input<number>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface MobileAppEnablementSessionReplay {
    /**
     * Before enabling, Dynatrace checks your system against the [prerequisites for Session Replay](https://dt-url.net/t23s0ppi).
     */
    onCrash: pulumi.Input<boolean>;
}

export interface MobileAppKeyPerformanceThresholds {
    /**
     * If the action duration is above this value, the Apdex is considered to be **Frustrating**.
     */
    frustratingThresholdSeconds: pulumi.Input<number>;
    /**
     * If the action duration is below this value, the Apdex is considered to be **Satisfactory**.
     */
    tolerableThresholdSeconds: pulumi.Input<number>;
}

export interface MobileAppRequestErrorsErrorRules {
    errorRules: pulumi.Input<pulumi.Input<inputs.MobileAppRequestErrorsErrorRulesErrorRule>[]>;
}

export interface MobileAppRequestErrorsErrorRulesErrorRule {
    /**
     * Exclude response codes
     */
    errorCodes: pulumi.Input<string>;
}

export interface MobileApplicationApdex {
    /**
     * Apdex **frustrated** threshold, in milliseconds: a duration greater than or equal to this value is considered frustrated
     */
    frustrated: pulumi.Input<number>;
    /**
     * Apdex error condition: if `true` the user session is considered frustrated when an error is reported
     */
    frustratedOnError?: pulumi.Input<boolean>;
    /**
     * Apdex **tolerable** threshold, in milliseconds: a duration greater than or equal to this value is considered tolerable
     */
    tolerable: pulumi.Input<number>;
}

export interface MobileApplicationProperties {
    /**
     * A User Action / Session Property based on a value reported by the API
     */
    apiValues?: pulumi.Input<pulumi.Input<inputs.MobileApplicationPropertiesApiValue>[]>;
    /**
     * A User Action / Session Property based on a Server Side Request Attribute
     */
    requestAttributes?: pulumi.Input<pulumi.Input<inputs.MobileApplicationPropertiesRequestAttribute>[]>;
}

export interface MobileApplicationPropertiesApiValue {
    /**
     * The aggregation type of the property. It defines how multiple values of the property are aggregated. Possible values are `SUM`, `MIN`, `MAX`, `FIRST` and `LAST`
     */
    aggregation?: pulumi.Input<string>;
    /**
     * The cleanup rule of the property. Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
     */
    cleanupRule?: pulumi.Input<string>;
    /**
     * The display name of the property
     */
    displayName?: pulumi.Input<string>;
    /**
     * The unique key of the mobile session or user action property
     */
    key: pulumi.Input<string>;
    /**
     * The name of the reported value
     */
    name?: pulumi.Input<string>;
    /**
     * If `true`, the property is stored as a session property
     */
    storeAsSessionProperty?: pulumi.Input<boolean>;
    /**
     * If `true`, the property is stored as a user action property
     */
    storeAsUserActionProperty?: pulumi.Input<boolean>;
    /**
     * The data type of the property. Possible values are `DOUBLE`, `LONG` and `STRING`
     */
    type: pulumi.Input<string>;
}

export interface MobileApplicationPropertiesRequestAttribute {
    /**
     * The aggregation type of the property. It defines how multiple values of the property are aggregated. Possible values are `SUM`, `MIN`, `MAX`, `FIRST` and `LAST`
     */
    aggregation?: pulumi.Input<string>;
    /**
     * The cleanup rule of the property. Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
     */
    cleanupRule?: pulumi.Input<string>;
    /**
     * The display name of the property
     */
    displayName?: pulumi.Input<string>;
    /**
     * The ID of the request attribute
     */
    id: pulumi.Input<string>;
    /**
     * The unique key of the mobile session or user action property
     */
    key: pulumi.Input<string>;
    /**
     * If `true`, the property is stored as a session property
     */
    storeAsSessionProperty?: pulumi.Input<boolean>;
    /**
     * If `true`, the property is stored as a user action property
     */
    storeAsUserActionProperty?: pulumi.Input<boolean>;
    /**
     * The data type of the property. Possible values are `DOUBLE`, `LONG` and `STRING`. The value MUST match the data type of the Request Attribute.
     */
    type: pulumi.Input<string>;
}

export interface NetworkTrafficExcludeIp {
    ipAddressForms: pulumi.Input<pulumi.Input<inputs.NetworkTrafficExcludeIpIpAddressForm>[]>;
}

export interface NetworkTrafficExcludeIpIpAddressForm {
    /**
     * IP address
     */
    ipAddress: pulumi.Input<string>;
}

export interface NetworkTrafficExcludeNic {
    nicForms: pulumi.Input<pulumi.Input<inputs.NetworkTrafficExcludeNicNicForm>[]>;
}

export interface NetworkTrafficExcludeNicNicForm {
    /**
     * Network interface
     */
    interface: pulumi.Input<string>;
    /**
     * Possible Values: `OS_TYPE_AIX`, `OS_TYPE_DARWIN`, `OS_TYPE_HPUX`, `OS_TYPE_LINUX`, `OS_TYPE_SOLARIS`, `OS_TYPE_UNKNOWN`, `OS_TYPE_WINDOWS`, `OS_TYPE_ZOS`
     */
    os: pulumi.Input<string>;
}

export interface NotificationAnsibleTower {
    /**
     * Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
     */
    acceptAnyCertificate: pulumi.Input<boolean>;
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The custom message of the notification.   This message will be displayed in the extra variables **Message** field of your job template.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
     */
    customMessage: pulumi.Input<string>;
    /**
     * The ID of the target Ansible Tower job template
     */
    jobTemplateId: pulumi.Input<number>;
    /**
     * The URL of the target Ansible Tower job template
     */
    jobTemplateUrl: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The password for the Ansible Tower account
     */
    password?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The username of the Ansible Tower account
     */
    username: pulumi.Input<string>;
}

export interface NotificationConfig {
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value. See one of the following objects:  * `EMAIL` > EmailNotificationConfig  * `PAGER_DUTY` > PagerDutyNotificationConfig  * `WEBHOOK` > WebHookNotificationConfig  * `SLACK` > SlackNotificationConfig  * `HIPCHAT` > HipChatNotificationConfig  * `VICTOROPS` > VictorOpsNotificationConfig  * `SERVICE_NOW` > ServiceNowNotificationConfig  * `XMATTERS` > XMattersNotificationConfig  * `ANSIBLETOWER` > AnsibleTowerNotificationConfig  * `OPS_GENIE` > OpsGenieNotificationConfig  * `JIRA` > JiraNotificationConfig  * `TRELLO` > TrelloNotificationConfig
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface NotificationEmail {
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The list of the email BCC-recipients
     */
    bccReceivers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The template of the email notification.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
     */
    body: pulumi.Input<string>;
    /**
     * The list of the email CC-recipients
     */
    ccReceivers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The list of the email recipients
     */
    receivers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The subject of the email notifications
     */
    subject: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface NotificationJira {
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The description of the Jira issue to be created by this notification.   You can use same placeholders as in issue summary
     */
    description: pulumi.Input<string>;
    /**
     * The type of the Jira issue to be created by this notification
     */
    issueType: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The password for the Jira profile
     */
    password?: pulumi.Input<string>;
    /**
     * The project key of the Jira issue to be created by this notification
     */
    projectKey: pulumi.Input<string>;
    /**
     * The summary of the Jira issue to be created by this notification.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
     */
    summary: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The URL of the Jira API endpoint
     */
    url: pulumi.Input<string>;
    /**
     * The username of the Jira profile
     */
    username: pulumi.Input<string>;
}

export interface NotificationOpsGenie {
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The API key to access OpsGenie
     */
    apiKey?: pulumi.Input<string>;
    /**
     * The region domain of the OpsGenie
     */
    domain: pulumi.Input<string>;
    /**
     * The content of the message.  You can use the following placeholders:  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem
     */
    message: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface NotificationPagerDuty {
    /**
     * The name of the PagerDuty account
     */
    account: pulumi.Input<string>;
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The API key to access PagerDuty
     */
    serviceApiKey?: pulumi.Input<string>;
    /**
     * The name of the service
     */
    serviceName: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface NotificationServiceNow {
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The ServiceNow instance identifier. It refers to the first part of your own ServiceNow URL.   This field is mutually exclusive with the **url** field. You can only use one of them
     */
    instanceName?: pulumi.Input<string>;
    /**
     * The content of the ServiceNow description.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
     */
    message: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The username to the ServiceNow account
     */
    password?: pulumi.Input<string>;
    /**
     * Send events into ServiceNow ITOM (`true`)
     */
    sendEvents: pulumi.Input<boolean>;
    /**
     * Send incidents into ServiceNow ITSM (`true`)
     */
    sendIncidents: pulumi.Input<boolean>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The URL of the on-premise ServiceNow installation.   This field is mutually exclusive with the **instanceName** field. You can only use one of them
     */
    url?: pulumi.Input<string>;
    /**
     * The username of the ServiceNow account.   Make sure that your user account has the `restService`, `webRequestAdmin`, and `x_dynat_ruxit.Integration` roles
     */
    username: pulumi.Input<string>;
}

export interface NotificationSlack {
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The channel (for example, `#general`) or the user (for example, `@john.smith`) to send the message to
     */
    channel: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
     */
    title: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The URL of the Slack WebHook.  This is confidential information, therefore GET requests return this field with the `null` value, and it is optional for PUT requests
     */
    url?: pulumi.Input<string>;
}

export interface NotificationTrello {
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The application key for the Trello account
     */
    applicationKey: pulumi.Input<string>;
    /**
     * The application token for the Trello account
     */
    authorizationToken?: pulumi.Input<string>;
    /**
     * The Trello board to which the card should be assigned
     */
    boardId: pulumi.Input<string>;
    /**
     * The description of the Trello card.   You can use same placeholders as in card text
     */
    description: pulumi.Input<string>;
    /**
     * The Trello list to which the card should be assigned
     */
    listId: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The Trello list to which the card of the resolved problem should be assigned
     */
    resolvedListId: pulumi.Input<string>;
    /**
     * The text of the generated Trello card.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
     */
    text: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface NotificationVictorOps {
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * The API key for the target VictorOps account
     */
    apiKey?: pulumi.Input<string>;
    /**
     * The content of the message.  You can use the following placeholders:  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`
     */
    message: pulumi.Input<string>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The routing key, defining the group to be notified
     */
    routingKey: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface NotificationWebHook {
    /**
     * Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
     */
    acceptAnyCertificate: pulumi.Input<boolean>;
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * A list of the additional HTTP headers
     */
    headers?: pulumi.Input<pulumi.Input<inputs.NotificationWebHookHeader>[]>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * Call webhook if new events merge into existing problems
     */
    notifyEventMerges?: pulumi.Input<boolean>;
    /**
     * The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
     */
    payload: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The URL of the WebHook endpoint
     */
    url: pulumi.Input<string>;
}

export interface NotificationWebHookHeader {
    /**
     * The name of the HTTP header
     */
    name: pulumi.Input<string>;
    /**
     * The value of the HTTP header. May contain an empty value.   Required when creating a new notification.  For the **Authorization** header, GET requests return the `null` value.  If you want update a notification configuration with an **Authorization** header which you want to remain intact, set the **Authorization** header with the `null` value
     */
    value?: pulumi.Input<string>;
}

export interface NotificationXmatters {
    /**
     * Accept any, including self-signed and invalid, SSL certificate (`true`) or only trusted (`false`) certificates
     */
    acceptAnyCertificate: pulumi.Input<boolean>;
    /**
     * The configuration is enabled (`true`) or disabled (`false`)
     */
    active: pulumi.Input<boolean>;
    /**
     * The ID of the associated alerting profile
     */
    alertingProfile: pulumi.Input<string>;
    /**
     * A list of the additional HTTP headers
     */
    headers?: pulumi.Input<pulumi.Input<inputs.NotificationXmattersHeader>[]>;
    /**
     * The name of the notification configuration
     */
    name: pulumi.Input<string>;
    /**
     * The content of the notification message.  You can use the following placeholders:  * `{ImpactedEntities}`: Details about the entities impacted by the problem in form of a JSON array.  * `{ImpactedEntity}`: The entity impacted by the problem or *X* impacted entities.  * `{PID}`: The ID of the reported problem.  * `{ProblemDetailsHTML}`: All problem event details, including root cause, as an HTML-formatted string.  * `{ProblemDetailsJSON}`: All problem event details, including root cause, as a JSON object.  * `{ProblemDetailsMarkdown}`: All problem event details, including root cause, as a [Markdown-formatted](https://www.markdownguide.org/cheat-sheet/) string.  * `{ProblemDetailsText}`: All problem event details, including root cause, as a text-formatted string.  * `{ProblemID}`: The display number of the reported problem.  * `{ProblemImpact}`: The [impact level](https://www.dynatrace.com/support/help/shortlink/impact-analysis) of the problem. Possible values are `APPLICATION`, `SERVICE`, and `INFRASTRUCTURE`.  * `{ProblemSeverity}`: The [severity level](https://www.dynatrace.com/support/help/shortlink/event-types) of the problem. Possible values are `AVAILABILITY`, `ERROR`, `PERFORMANCE`, `RESOURCE_CONTENTION`, and `CUSTOM_ALERT`.  * `{ProblemTitle}`: A short description of the problem.  * `{ProblemURL}`: The URL of the problem within Dynatrace.  * `{State}`: The state of the problem. Possible values are `OPEN` and `RESOLVED`.  * `{Tags}`: The list of tags that are defined for all impacted entities, separated by commas
     */
    payload: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The URL of the xMatters WebHook
     */
    url: pulumi.Input<string>;
}

export interface NotificationXmattersHeader {
    /**
     * The name of the HTTP header
     */
    name: pulumi.Input<string>;
    /**
     * The value of the HTTP header. May contain an empty value.   Required when creating a new notification.  For the **Authorization** header, GET requests return the `null` value.  If you want update a notification configuration with an **Authorization** header which you want to remain intact, set the **Authorization** header with the `null` value
     */
    value?: pulumi.Input<string>;
}

export interface OneagentUpdatesMaintenanceWindows {
    maintenanceWindows: pulumi.Input<pulumi.Input<inputs.OneagentUpdatesMaintenanceWindowsMaintenanceWindow>[]>;
}

export interface OneagentUpdatesMaintenanceWindowsMaintenanceWindow {
    /**
     * Select a [maintenance window for OneAgent updates](https://www.terraform.io/ui/settings/builtin:deployment.management.update-windows)
     */
    maintenanceWindow: pulumi.Input<string>;
}

export interface OpentelemetryMetricsAdditionalAttributes {
    additionalAttributes: pulumi.Input<pulumi.Input<inputs.OpentelemetryMetricsAdditionalAttributesAdditionalAttribute>[]>;
}

export interface OpentelemetryMetricsAdditionalAttributesAdditionalAttribute {
    /**
     * Attribute key
     */
    attributeKey: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface OpentelemetryMetricsToDropAttributes {
    toDropAttributes: pulumi.Input<pulumi.Input<inputs.OpentelemetryMetricsToDropAttributesToDropAttribute>[]>;
}

export interface OpentelemetryMetricsToDropAttributesToDropAttribute {
    /**
     * Attribute key
     */
    attributeKey: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface OsServicesDetectionConditionsLinux {
    linuxDetectionConditions: pulumi.Input<pulumi.Input<inputs.OsServicesDetectionConditionsLinuxLinuxDetectionCondition>[]>;
}

export interface OsServicesDetectionConditionsLinuxLinuxDetectionCondition {
    /**
     * This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).
     */
    condition?: pulumi.Input<string>;
    /**
     * Custom metadata
     */
    hostMetadataCondition?: pulumi.Input<inputs.OsServicesDetectionConditionsLinuxLinuxDetectionConditionHostMetadataCondition>;
    /**
     * Possible Values: `ServiceName`, `StartupType`
     */
    property?: pulumi.Input<string>;
    /**
     * Possible Values: `RuleTypeHost`, `RuleTypeOsService`
     */
    ruleType?: pulumi.Input<string>;
    /**
     * This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).
     *
     * - `$eq(enabled)` – Matches services with startup type equal to enabled.
     *
     * Available logic operations:
     * - `$not($eq(enabled))` – Matches services with startup type different from enabled.
     * - `$or($eq(enabled),$eq(disabled))` - Matches services that are either enabled or disabled.
     *
     * Use one of the following values as a parameter for this condition:
     *
     * - `enabled`
     * - `enabled-runtime`
     * - `static`
     * - `disabled`
     */
    startupCondition?: pulumi.Input<string>;
}

export interface OsServicesDetectionConditionsLinuxLinuxDetectionConditionHostMetadataCondition {
    /**
     * This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).
     */
    metadataCondition: pulumi.Input<string>;
    /**
     * Key
     */
    metadataKey: pulumi.Input<string>;
}

export interface OsServicesDetectionConditionsWindows {
    detectionConditionsWindows: pulumi.Input<pulumi.Input<inputs.OsServicesDetectionConditionsWindowsDetectionConditionsWindow>[]>;
}

export interface OsServicesDetectionConditionsWindowsDetectionConditionsWindow {
    /**
     * This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).
     */
    condition?: pulumi.Input<string>;
    /**
     * Custom metadata
     */
    hostMetadataCondition?: pulumi.Input<inputs.OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataCondition>;
    /**
     * Possible Values: `DisplayName`, `Manufacturer`, `Path`, `ServiceName`, `StartupType`
     */
    property?: pulumi.Input<string>;
    /**
     * Possible Values: `RuleTypeHost`, `RuleTypeOsService`
     */
    ruleType?: pulumi.Input<string>;
    /**
     * This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).
     *
     * - `$eq(manual)` – Matches services that are started manually.
     *
     * Available logic operations:
     * - `$not($eq(auto))` – Matches services with startup type different from Automatic.
     * - `$or($eq(auto),$eq(manual))` – Matches if service's startup type is either Automatic or Manual.
     *
     * Use one of the following values as a parameter for this condition:
     *
     * - `manual` for Manual
     * - `manualTrigger` for Manual (Trigger Start)
     * - `auto` for Automatic
     * - `autoDelay` for Automatic (Delayed Start)
     * - `autoTrigger` for Automatic (Trigger Start)
     * - `autoDelayTrigger` for Automatic (Delayed Start, Trigger Start)
     * - `disabled` for Disabled
     */
    startupCondition?: pulumi.Input<string>;
}

export interface OsServicesDetectionConditionsWindowsDetectionConditionsWindowHostMetadataCondition {
    /**
     * This string has to match a required format. See [OS services monitoring](https://dt-url.net/vl03xzk).
     */
    metadataCondition: pulumi.Input<string>;
    /**
     * Key
     */
    metadataKey: pulumi.Input<string>;
}

export interface OsServicesMetadata {
    items: pulumi.Input<pulumi.Input<inputs.OsServicesMetadataItem>[]>;
}

export interface OsServicesMetadataItem {
    /**
     * Type 'dt.' for key hints.
     */
    metadataKey: pulumi.Input<string>;
    /**
     * no documentation available
     */
    metadataValue: pulumi.Input<string>;
}

export interface OwnershipConfigOwnershipIdentifiers {
    ownershipIdentifiers: pulumi.Input<pulumi.Input<inputs.OwnershipConfigOwnershipIdentifiersOwnershipIdentifier>[]>;
}

export interface OwnershipConfigOwnershipIdentifiersOwnershipIdentifier {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Key for ownership metadata and tags
     */
    key: pulumi.Input<string>;
}

export interface OwnershipTeamsAdditionalInformation {
    additionalInformations: pulumi.Input<pulumi.Input<inputs.OwnershipTeamsAdditionalInformationAdditionalInformation>[]>;
}

export interface OwnershipTeamsAdditionalInformationAdditionalInformation {
    /**
     * Name
     */
    key: pulumi.Input<string>;
    /**
     * no documentation available
     */
    url?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface OwnershipTeamsContactDetails {
    contactDetails: pulumi.Input<pulumi.Input<inputs.OwnershipTeamsContactDetailsContactDetail>[]>;
}

export interface OwnershipTeamsContactDetailsContactDetail {
    /**
     * no documentation available
     */
    email?: pulumi.Input<string>;
    /**
     * Possible Values: `EMAIL`, `JIRA`, `MS_TEAMS`, `SLACK`
     */
    integrationType: pulumi.Input<string>;
    /**
     * no documentation available
     */
    jira?: pulumi.Input<inputs.OwnershipTeamsContactDetailsContactDetailJira>;
    /**
     * Team
     */
    msTeams?: pulumi.Input<string>;
    /**
     * Channel
     */
    slackChannel?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    url?: pulumi.Input<string>;
}

export interface OwnershipTeamsContactDetailsContactDetailJira {
    /**
     * Default Assignee
     */
    defaultAssignee: pulumi.Input<string>;
    /**
     * no documentation available
     */
    project: pulumi.Input<string>;
}

export interface OwnershipTeamsLinks {
    links: pulumi.Input<pulumi.Input<inputs.OwnershipTeamsLinksLink>[]>;
}

export interface OwnershipTeamsLinksLink {
    /**
     * Possible Values: `DASHBOARD`, `DOCUMENTATION`, `HEALTH_APP`, `REPOSITORY`, `RUNBOOK`, `URL`, `WIKI`
     */
    linkType: pulumi.Input<string>;
    /**
     * no documentation available
     */
    url: pulumi.Input<string>;
}

export interface OwnershipTeamsResponsibilities {
    /**
     * Responsible for developing and maintaining high quality software. Development teams are responsible for making code changes to address performance regressions, errors, or security vulnerabilities.
     */
    development: pulumi.Input<boolean>;
    /**
     * Responsible for the administration, management, and support of the IT infrastructure including physical servers, virtualization, and cloud. Teams with infrastructure responsibility are responsible for addressing hardware issues, resource limits, and operating system vulnerabilities.
     */
    infrastructure: pulumi.Input<boolean>;
    /**
     * Responsible for ensuring that applications in development align with business needs and meet the usability requirements of users, stakeholders, customers, and external partners. Teams with line of business responsibility are responsible for understanding the customer experience and how it affects business goals.
     */
    lineOfBusiness: pulumi.Input<boolean>;
    /**
     * Responsible for deploying and managing software, with a focus on high availability and performance. Teams with operations responsibilities needs to understand the impact, priority, and team responsible for addressing problems detected by Dynatrace.
     */
    operations: pulumi.Input<boolean>;
    /**
     * Responsible for the security posture of the organization. Teams with security responsibility must understand the impact, priority, and team responsible for addressing security vulnerabilities.
     */
    security: pulumi.Input<boolean>;
}

export interface OwnershipTeamsSupplementaryIdentifiers {
    supplementaryIdentifiers: pulumi.Input<pulumi.Input<inputs.OwnershipTeamsSupplementaryIdentifiersSupplementaryIdentifier>[]>;
}

export interface OwnershipTeamsSupplementaryIdentifiersSupplementaryIdentifier {
    /**
     * Supplementary Identifier
     */
    supplementaryIdentifier: pulumi.Input<string>;
}

export interface PgAnomaliesAvailability {
    /**
     * How to monitor the availability of the process group:  * `PROCESS_IMPACT`: Alert if any process of the group becomes unavailable.  * `MINIMUM_THRESHOLD`: Alert if the number of active processes in the group falls below the specified threshold.  * `OFF`: Availability monitoring is disabled.
     */
    method: pulumi.Input<string>;
    /**
     * Alert if the number of active processes in the group is lower than this value.
     */
    minimumThreshold?: pulumi.Input<number>;
}

export interface ProcessAvailabilityMetadata {
    items: pulumi.Input<pulumi.Input<inputs.ProcessAvailabilityMetadataItem>[]>;
}

export interface ProcessAvailabilityMetadataItem {
    /**
     * Type 'dt.' for key hints.
     */
    key: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ProcessAvailabilityRules {
    rules: pulumi.Input<pulumi.Input<inputs.ProcessAvailabilityRulesRule>[]>;
}

export interface ProcessAvailabilityRulesRule {
    /**
     * - $contains(svc) – Matches if svc appears anywhere in the process property value.
     * - $eq(svc.exe) – Matches if svc.exe matches the process property value exactly.
     * - $prefix(svc) – Matches if app matches the prefix of the process property value.
     * - $suffix(svc.py) – Matches if svc.py matches the suffix of the process property value.
     *
     * For example, $suffix(svc.py) would detect processes named loyaltysvc.py and paymentssvc.py.
     *
     * For more details, see [Process availability](https://dt-url.net/v923x37).
     */
    condition?: pulumi.Input<string>;
    /**
     * Host custom metadata refers to user-defined key-value pairs that you can assign to hosts monitored by Dynatrace.
     *
     * By defining custom metadata, you can enrich the monitoring data with context specific to your organization's needs, such as environment names, team ownership, application versions, or any other relevant details.
     *
     * See [Define tags and metadata for hosts](https://dt-url.net/w3hv0kbw).
     */
    hostMetadataCondition?: pulumi.Input<inputs.ProcessAvailabilityRulesRuleHostMetadataCondition>;
    /**
     * Possible Values: `CommandLine`, `Executable`, `ExecutablePath`, `User`
     */
    property?: pulumi.Input<string>;
    /**
     * Possible Values: `RuleTypeHost`, `RuleTypeProcess`
     */
    ruleType?: pulumi.Input<string>;
}

export interface ProcessAvailabilityRulesRuleHostMetadataCondition {
    /**
     * This string has to match a required format.
     *
     * - `$contains(production)` – Matches if `production` appears anywhere in the host metadata value.
     * - `$eq(production)` – Matches if `production` matches the host metadata value exactly.
     * - `$prefix(production)` – Matches if `production` matches the prefix of the host metadata value.
     * - `$suffix(production)` – Matches if `production` matches the suffix of the host metadata value.
     *
     * Available logic operations:
     * - `$not($eq(production))` – Matches if the host metadata value is different from `production`.
     * - `$and($prefix(production),$suffix(main))` – Matches if host metadata value starts with `production` and ends with `main`.
     * - `$or($prefix(production),$suffix(main))` – Matches if host metadata value starts with `production` or ends with `main`.
     *
     * Brackets **(** and **)** that are part of the matched property **must be escaped with a tilde (~)**
     */
    metadataCondition: pulumi.Input<string>;
    /**
     * Key
     */
    metadataKey: pulumi.Input<string>;
}

export interface ProcessGroupDetectionGroupExtraction {
    /**
     * Optionally delimit this property between *From* and *To*.
     */
    delimiter: pulumi.Input<inputs.ProcessGroupDetectionGroupExtractionDelimiter>;
    /**
     * Possible values: `DOTNET_COMMAND`, `DOTNET_COMMAND_PATH`, `ASP_NET_CORE_APPLICATION_PATH`, `AWS_ECR_ACCOUNT_ID`, `AWS_ECR_REGION`, `AWS_ECS_CLUSTER`, `AWS_ECS_CONTAINERNAME`, `AWS_ECS_FAMILY`, `AWS_ECS_REVISION`, `AWS_LAMBDA_FUNCTION_NAME`, `AWS_REGION`, `APACHE_SPARK_MASTER_IP_ADDRESS`, `APACHE_CONFIG_PATH`, `CATALINA_BASE`, `CATALINA_HOME`, `CLOUD_FOUNDRY_APP_NAME`, `CLOUD_FOUNDRY_APPLICATION_ID`, `CLOUD_FOUNDRY_INSTANCE_INDEX`, `CLOUD_FOUNDRY_SPACE_NAME`, `CLOUD_FOUNDRY_SPACE_ID`, `COLDFUSION_JVM_CONFIG_FILE`, `SERVICE_NAME`, `COMMAND_LINE_ARGS`, `CONTAINER_ID`, `CONTAINER_IMAGE_VERSION`, `CONTAINER_NAME`, `DECLARATIVE_ID`, `CONTAINER_IMAGE_NAME`, `RUXIT_CLUSTER_ID`, `RUXIT_NODE_ID`, `EXE_NAME`, `EXE_PATH`, `ELASTIC_SEARCH_CLUSTER_NAME`, `ELASTIC_SEARCH_NODE_NAME`, `EQUINOX_CONFIG_PATH`, `GLASSFISH_DOMAIN_NAME`, `GLASSFISH_INSTANCE_NAME`, `PG_ID_CALC_INPUT_KEY_LINKAGE`, `GAE_INSTANCE`, `GAE_SERVICE`, `GOOGLE_CLOUD_PROJECT`, `HYBRIS_BIN_DIR`, `HYBRIS_CONFIG_DIR`, `HYBRIS_DATA_DIR`, `IBM_CICS_REGION`, `IBM_CICS_IMS_APPLID`, `IBM_CICS_IMS_JOBNAME`, `IBM_CTG_NAME`, `IBM_IMS_CONNECT`, `IBM_IMS_CONTROL`, `IBM_IMS_MPR`, `IBM_IMS_SOAP_GW_NAME`, `IIB_BROKER_NAME`, `IIB_EXECUTION_GROUP_NAME`, `IIS_APP_POOL`, `IIS_ROLE_NAME`, `JBOSS_HOME`, `JBOSS_MODE`, `JBOSS_SERVER_NAME`, `JAVA_JAR_FILE`, `JAVA_JAR_PATH`, `JAVA_MAIN_CLASS`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`, `MSSQL_INSTANCE_NAME`, `NODEJS_APP_NAME`, `NODEJS_APP_BASE_DIR`, `NODEJS_SCRIPT_NAME`, `ORACLE_SID`, `PHP_CLI_SCRIPT_PATH`, `PHP_CLI_WORKING_DIR`, `SOFTWAREAG_INSTALL_ROOT`, `SOFTWAREAG_PRODUCTPROPNAME`, `SPRINGBOOT_APP_NAME`, `SPRINGBOOT_PROFILE_NAME`, `SPRINGBOOT_STARTUP_CLASS`, `TIBCO_BUSINESSWORKS_CE_APP_NAME`, `TIBCO_BUSINESSWORKS_CE_VERSION`, `TIBCO_BUSINESSWORKS_APP_NODE_NAME`, `TIBCO_BUSINESSWORKS_APP_SPACE_NAME`, `TIBCO_BUSINESSWORKS_DOMAIN_NAME`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE_PATH`, `TIBCO_BUSINESSWORKS_HOME`, `VARNISH_INSTANCE_NAME`, `WEBLOGIC_NAME`, `WEBLOGIC_CLUSTER_NAME`, `WEBLOGIC_DOMAIN_NAME`, `WEBLOGIC_HOME`, `WEBSPHERE_LIBERTY_SERVER_NAME`, `WEBSPHERE_CELL_NAME`, `WEBSPHERE_CLUSTER_NAME`, `WEBSPHERE_NODE_NAME`, `WEBSPHERE_SERVER_NAME`
     */
    property: pulumi.Input<string>;
    /**
     * If this option is selected, the default Dynatrace behavior is disabled for these detected processes. Only this rule is used to separate the process group.
     */
    standaloneRule?: pulumi.Input<boolean>;
}

export interface ProcessGroupDetectionGroupExtractionDelimiter {
    /**
     * Delimit from
     */
    from?: pulumi.Input<string>;
    /**
     * (e.g. versions, hex, dates, and build numbers)
     */
    removeIds: pulumi.Input<boolean>;
    /**
     * Delimit to
     */
    to?: pulumi.Input<string>;
}

export interface ProcessGroupDetectionInstanceExtraction {
    /**
     * Optionally delimit this property between *From* and *To*.
     */
    delimiter?: pulumi.Input<inputs.ProcessGroupDetectionInstanceExtractionDelimiter>;
    /**
     * Possible values: `DOTNET_COMMAND`, `DOTNET_COMMAND_PATH`, `ASP_NET_CORE_APPLICATION_PATH`, `AWS_ECR_ACCOUNT_ID`, `AWS_ECR_REGION`, `AWS_ECS_CLUSTER`, `AWS_ECS_CONTAINERNAME`, `AWS_ECS_FAMILY`, `AWS_ECS_REVISION`, `AWS_LAMBDA_FUNCTION_NAME`, `AWS_REGION`, `APACHE_SPARK_MASTER_IP_ADDRESS`, `APACHE_CONFIG_PATH`, `CATALINA_BASE`, `CATALINA_HOME`, `CLOUD_FOUNDRY_APP_NAME`, `CLOUD_FOUNDRY_APPLICATION_ID`, `CLOUD_FOUNDRY_INSTANCE_INDEX`, `CLOUD_FOUNDRY_SPACE_NAME`, `CLOUD_FOUNDRY_SPACE_ID`, `COLDFUSION_JVM_CONFIG_FILE`, `SERVICE_NAME`, `COMMAND_LINE_ARGS`, `CONTAINER_ID`, `CONTAINER_IMAGE_VERSION`, `CONTAINER_NAME`, `DECLARATIVE_ID`, `CONTAINER_IMAGE_NAME`, `RUXIT_CLUSTER_ID`, `RUXIT_NODE_ID`, `EXE_NAME`, `EXE_PATH`, `ELASTIC_SEARCH_CLUSTER_NAME`, `ELASTIC_SEARCH_NODE_NAME`, `EQUINOX_CONFIG_PATH`, `GLASSFISH_DOMAIN_NAME`, `GLASSFISH_INSTANCE_NAME`, `PG_ID_CALC_INPUT_KEY_LINKAGE`, `GAE_INSTANCE`, `GAE_SERVICE`, `GOOGLE_CLOUD_PROJECT`, `HYBRIS_BIN_DIR`, `HYBRIS_CONFIG_DIR`, `HYBRIS_DATA_DIR`, `IBM_CICS_REGION`, `IBM_CICS_IMS_APPLID`, `IBM_CICS_IMS_JOBNAME`, `IBM_CTG_NAME`, `IBM_IMS_CONNECT`, `IBM_IMS_CONTROL`, `IBM_IMS_MPR`, `IBM_IMS_SOAP_GW_NAME`, `IIB_BROKER_NAME`, `IIB_EXECUTION_GROUP_NAME`, `IIS_APP_POOL`, `IIS_ROLE_NAME`, `JBOSS_HOME`, `JBOSS_MODE`, `JBOSS_SERVER_NAME`, `JAVA_JAR_FILE`, `JAVA_JAR_PATH`, `JAVA_MAIN_CLASS`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`, `MSSQL_INSTANCE_NAME`, `NODEJS_APP_NAME`, `NODEJS_APP_BASE_DIR`, `NODEJS_SCRIPT_NAME`, `ORACLE_SID`, `PHP_CLI_SCRIPT_PATH`, `PHP_CLI_WORKING_DIR`, `SOFTWAREAG_INSTALL_ROOT`, `SOFTWAREAG_PRODUCTPROPNAME`, `SPRINGBOOT_APP_NAME`, `SPRINGBOOT_PROFILE_NAME`, `SPRINGBOOT_STARTUP_CLASS`, `TIBCO_BUSINESSWORKS_CE_APP_NAME`, `TIBCO_BUSINESSWORKS_CE_VERSION`, `TIBCO_BUSINESSWORKS_APP_NODE_NAME`, `TIBCO_BUSINESSWORKS_APP_SPACE_NAME`, `TIBCO_BUSINESSWORKS_DOMAIN_NAME`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE_PATH`, `TIBCO_BUSINESSWORKS_HOME`, `VARNISH_INSTANCE_NAME`, `WEBLOGIC_NAME`, `WEBLOGIC_CLUSTER_NAME`, `WEBLOGIC_DOMAIN_NAME`, `WEBLOGIC_HOME`, `WEBSPHERE_LIBERTY_SERVER_NAME`, `WEBSPHERE_CELL_NAME`, `WEBSPHERE_CLUSTER_NAME`, `WEBSPHERE_NODE_NAME`, `WEBSPHERE_SERVER_NAME`
     */
    property?: pulumi.Input<string>;
}

export interface ProcessGroupDetectionInstanceExtractionDelimiter {
    /**
     * Delimit from
     */
    from?: pulumi.Input<string>;
    /**
     * (e.g. versions, hex, dates, and build numbers)
     */
    removeIds: pulumi.Input<boolean>;
    /**
     * Delimit to
     */
    to?: pulumi.Input<string>;
}

export interface ProcessGroupDetectionProcessDetection {
    /**
     * The substring to be contained in the value `property` refers to. Case Sensitive
     */
    containedString: pulumi.Input<string>;
    /**
     * Possible values: `DOTNET_COMMAND`, `DOTNET_COMMAND_PATH`, `ASP_NET_CORE_APPLICATION_PATH`, `AWS_ECR_ACCOUNT_ID`, `AWS_ECR_REGION`, `AWS_ECS_CLUSTER`, `AWS_ECS_CONTAINERNAME`, `AWS_ECS_FAMILY`, `AWS_ECS_REVISION`, `AWS_LAMBDA_FUNCTION_NAME`, `AWS_REGION`, `APACHE_SPARK_MASTER_IP_ADDRESS`, `APACHE_CONFIG_PATH`, `CATALINA_BASE`, `CATALINA_HOME`, `CLOUD_FOUNDRY_APP_NAME`, `CLOUD_FOUNDRY_APPLICATION_ID`, `CLOUD_FOUNDRY_INSTANCE_INDEX`, `CLOUD_FOUNDRY_SPACE_NAME`, `CLOUD_FOUNDRY_SPACE_ID`, `COLDFUSION_JVM_CONFIG_FILE`, `SERVICE_NAME`, `COMMAND_LINE_ARGS`, `CONTAINER_ID`, `CONTAINER_IMAGE_VERSION`, `CONTAINER_NAME`, `DECLARATIVE_ID`, `CONTAINER_IMAGE_NAME`, `RUXIT_CLUSTER_ID`, `RUXIT_NODE_ID`, `EXE_NAME`, `EXE_PATH`, `ELASTIC_SEARCH_CLUSTER_NAME`, `ELASTIC_SEARCH_NODE_NAME`, `EQUINOX_CONFIG_PATH`, `GLASSFISH_DOMAIN_NAME`, `GLASSFISH_INSTANCE_NAME`, `PG_ID_CALC_INPUT_KEY_LINKAGE`, `GAE_INSTANCE`, `GAE_SERVICE`, `GOOGLE_CLOUD_PROJECT`, `HYBRIS_BIN_DIR`, `HYBRIS_CONFIG_DIR`, `HYBRIS_DATA_DIR`, `IBM_CICS_REGION`, `IBM_CICS_IMS_APPLID`, `IBM_CICS_IMS_JOBNAME`, `IBM_CTG_NAME`, `IBM_IMS_CONNECT`, `IBM_IMS_CONTROL`, `IBM_IMS_MPR`, `IBM_IMS_SOAP_GW_NAME`, `IIB_BROKER_NAME`, `IIB_EXECUTION_GROUP_NAME`, `IIS_APP_POOL`, `IIS_ROLE_NAME`, `JBOSS_HOME`, `JBOSS_MODE`, `JBOSS_SERVER_NAME`, `JAVA_JAR_FILE`, `JAVA_JAR_PATH`, `JAVA_MAIN_CLASS`, `KUBERNETES_BASEPODNAME`, `KUBERNETES_CONTAINERNAME`, `KUBERNETES_FULLPODNAME`, `KUBERNETES_NAMESPACE`, `KUBERNETES_PODUID`, `MSSQL_INSTANCE_NAME`, `NODEJS_APP_NAME`, `NODEJS_APP_BASE_DIR`, `NODEJS_SCRIPT_NAME`, `ORACLE_SID`, `PHP_CLI_SCRIPT_PATH`, `PHP_CLI_WORKING_DIR`, `SOFTWAREAG_INSTALL_ROOT`, `SOFTWAREAG_PRODUCTPROPNAME`, `SPRINGBOOT_APP_NAME`, `SPRINGBOOT_PROFILE_NAME`, `SPRINGBOOT_STARTUP_CLASS`, `TIBCO_BUSINESSWORKS_CE_APP_NAME`, `TIBCO_BUSINESSWORKS_CE_VERSION`, `TIBCO_BUSINESSWORKS_APP_NODE_NAME`, `TIBCO_BUSINESSWORKS_APP_SPACE_NAME`, `TIBCO_BUSINESSWORKS_DOMAIN_NAME`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE`, `TIPCO_BUSINESSWORKS_PROPERTY_FILE_PATH`, `TIBCO_BUSINESSWORKS_HOME`, `VARNISH_INSTANCE_NAME`, `WEBLOGIC_NAME`, `WEBLOGIC_CLUSTER_NAME`, `WEBLOGIC_DOMAIN_NAME`, `WEBLOGIC_HOME`, `WEBSPHERE_LIBERTY_SERVER_NAME`, `WEBSPHERE_CELL_NAME`, `WEBSPHERE_CLUSTER_NAME`, `WEBSPHERE_NODE_NAME`, `WEBSPHERE_SERVER_NAME`
     */
    property: pulumi.Input<string>;
    /**
     * Restrict this rule to specific process types. Note: Not all types can be detected at startup. Possible values: `PROCESS_TYPE_APACHE_HTTPD`, `PROCESS_TYPE_GLASSFISH`, `PROCESS_TYPE_GO`, `PROCESS_TYPE_IIS_APP_POOL`, `PROCESS_TYPE_JBOSS`, `PROCESS_TYPE_JAVA`, `PROCESS_TYPE_NGINX`, `PROCESS_TYPE_NODE_JS`, `PROCESS_TYPE_PHP`, `PROCESS_TYPE_TOMCAT`, `PROCESS_TYPE_WEBLOGIC`, `PROCESS_TYPE_WEBSPHERE`
     */
    restrictToProcessType?: pulumi.Input<string>;
}

export interface ProcessMonitoringRuleCondition {
    /**
     * supported only with OneAgent 1.167+
     */
    envVar?: pulumi.Input<string>;
    /**
     * Condition target
     */
    item: pulumi.Input<string>;
    /**
     * Condition operator
     */
    operator: pulumi.Input<string>;
    /**
     * Condition value
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingCondition {
    /**
     * A conditions for the metric usage
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionCondition>[]>;
}

export interface ProcessgroupNamingConditionCondition {
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    applicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionApplicationTypeComparison>[]>;
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     */
    applicationTypes?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionApplicationType>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     */
    azureComputeModeComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionAzureComputeModeComparison>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     *
     * @deprecated You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
     */
    azureComputeModes?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionAzureComputeMode>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     *
     * @deprecated You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
     */
    azureSkuComparisions?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionAzureSkuComparision>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     */
    azureSkus?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionAzureSkus>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     *
     * @deprecated You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
     */
    baseComparisonBasics?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionBaseComparisonBasic>[]>;
    /**
     * Fallback for not yet known type
     *
     * @deprecated 'base_condition_key' is deprecated. You should use 'key'
     */
    baseConditionKeys?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionBaseConditionKey>[]>;
    /**
     * Comparison for `BITNESS` attributes
     *
     * @deprecated You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
     */
    bitnessComparisions?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionBitnessComparision>[]>;
    /**
     * Comparison for `BITNESS` attributes
     */
    bitnesses?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionBitness>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     *
     * @deprecated You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
     */
    cloudTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionCloudTypeComparison>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     */
    cloudTypes?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionCloudType>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     */
    comparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    customApplicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomApplicationTypeComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     */
    customApplicationTypes?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomApplicationType>[]>;
    /**
     * Key for Custom Host Metadata
     *
     * @deprecated 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
     */
    customHostMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey>[]>;
    /**
     * Key for Custom Host Metadata
     */
    customHostMetadatas?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomHostMetadata>[]>;
    /**
     * Key for Custom Process Metadata
     *
     * @deprecated 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
     */
    customProcessMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey>[]>;
    /**
     * Key for Custom Process Metadata
     */
    customProcessMetadatas?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomProcessMetadata>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     */
    databaseTopologies?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionDatabaseTopology>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    databaseTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionDatabaseTopologyComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     *
     * @deprecated You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
     */
    dcrumDecoderComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionDcrumDecoderComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     */
    dcrumDecoders?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionDcrumDecoder>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     */
    entities?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionEntity>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     *
     * @deprecated You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
     */
    entityIdComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionEntityIdComparison>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     */
    hostTeches?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionHostTech>[]>;
    /**
     * `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     *
     * @deprecated `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     */
    hypervisorTypeComparisions?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionHypervisorTypeComparision>[]>;
    /**
     * Comparison for `HYPERVISOR_TYPE` attributes
     */
    hypervisors?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionHypervisor>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     *
     * @deprecated You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedNameComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIndexedNameComparison>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     */
    indexedNames?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIndexedName>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     *
     * @deprecated You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedStringComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIndexedStringComparison>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     */
    indexedStrings?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIndexedString>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     *
     * @deprecated You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedTagComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIndexedTagComparison>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     */
    indexedTags?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIndexedTag>[]>;
    /**
     * Comparison for `INTEGER` attributes
     *
     * @deprecated You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
     */
    integerComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIntegerComparison>[]>;
    /**
     * Comparison for `INTEGER` attributes
     */
    integers?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionInteger>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     *
     * @deprecated You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
     */
    ipaddressComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIpaddressComparison>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     */
    ipaddresses?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionIpaddress>[]>;
    /**
     * Fallback for not yet known type
     */
    keys?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionKey>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     *
     * @deprecated You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
     */
    mobilePlatformComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionMobilePlatformComparison>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     */
    mobilePlatforms?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionMobilePlatform>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     */
    osArches?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionOsArch>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     */
    osTypes?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionOsType>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     *
     * @deprecated You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
     */
    osarchitectureComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionOsarchitectureComparison>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     *
     * @deprecated You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
     */
    ostypeComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionOstypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     *
     * @deprecated You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
     */
    paasTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionPaasTypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     */
    paasTypes?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionPaasType>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     *
     * @deprecated 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
     */
    processMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionProcessMetadataConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     */
    processMetadatas?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionProcessMetadata>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     */
    serviceTopologies?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionServiceTopology>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionServiceTopologyComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     *
     * @deprecated You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionServiceTypeComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     */
    serviceTypes?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionServiceType>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     *
     * @deprecated You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleHostTechComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionSimpleHostTechComparison>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     *
     * @deprecated You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleTechComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionSimpleTechComparison>[]>;
    /**
     * Comparison for `STRING` attributes
     *
     * @deprecated You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
     */
    stringComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionStringComparison>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     *
     * @deprecated 'string_condition_key' is deprecated. You should use 'string_key'
     */
    stringConditionKeys?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionStringConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     */
    stringKeys?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionStringKey>[]>;
    /**
     * Comparison for `STRING` attributes
     */
    strings?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionString>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     *
     * @deprecated You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
     */
    syntheticEngineTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     */
    syntheticEngines?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionSyntheticEngine>[]>;
    /**
     * Comparison for `TAG` attributes
     *
     * @deprecated You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
     */
    tagComparisons?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionTagComparison>[]>;
    /**
     * Comparison for `TAG` attributes
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionTag>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     */
    teches?: pulumi.Input<pulumi.Input<inputs.ProcessgroupNamingConditionConditionTech>[]>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionApplicationType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionAzureComputeMode {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionAzureComputeModeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionAzureSkuComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be AZURE_SKU
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionAzureSkus {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionBaseComparisonBasic {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionBaseConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionBitness {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionBitnessComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be BITNESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCloudType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCloudTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CLOUD_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomApplicationType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CUSTOM_APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomHostMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomHostMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be HOST_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomHostMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be PROCESS_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionCustomProcessMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionDatabaseTopology {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionDatabaseTopologyComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DATABASE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionDcrumDecoder {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionDcrumDecoderComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DCRUM_DECODER_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionEntity {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionEntityIdComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be ENTITY_ID
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionHostTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ProcessgroupNamingConditionConditionHostTechValue>;
}

export interface ProcessgroupNamingConditionConditionHostTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionHypervisor {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionHypervisorTypeComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be HYPERVISOR_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionIndexedName {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionIndexedNameComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_NAME
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionIndexedString {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionIndexedStringComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionIndexedTag {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ProcessgroupNamingConditionConditionIndexedTagValue>;
}

export interface ProcessgroupNamingConditionConditionIndexedTagComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ProcessgroupNamingConditionConditionIndexedTagComparisonValue>;
}

export interface ProcessgroupNamingConditionConditionIndexedTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionIndexedTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionInteger {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface ProcessgroupNamingConditionConditionIntegerComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INTEGER
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface ProcessgroupNamingConditionConditionIpaddress {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionIpaddressComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be IP_ADDRESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionMobilePlatform {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionMobilePlatformComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be MOBILE_PLATFORM
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionOsArch {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionOsType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionOsarchitectureComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_ARCHITECTURE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionOstypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionPaasType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionPaasTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be PAAS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be PROCESS_PREDEFINED_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionServiceTopology {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionServiceTopologyComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionServiceType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionServiceTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionSimpleHostTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_HOST_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue>;
}

export interface ProcessgroupNamingConditionConditionSimpleHostTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionSimpleTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ProcessgroupNamingConditionConditionSimpleTechComparisonValue>;
}

export interface ProcessgroupNamingConditionConditionSimpleTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionString {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionStringComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionStringConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be `STRING`
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionStringKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionSyntheticEngine {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionSyntheticEngineTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SYNTHETIC_ENGINE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionTag {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ProcessgroupNamingConditionConditionTagValue>;
}

export interface ProcessgroupNamingConditionConditionTagComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ProcessgroupNamingConditionConditionTagComparisonValue>;
}

export interface ProcessgroupNamingConditionConditionTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ProcessgroupNamingConditionConditionTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ProcessgroupNamingConditionConditionTechValue>;
}

export interface ProcessgroupNamingConditionConditionTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface QueueManagerAliasQueue {
    /**
     * Alias queue definitions for queue manager
     */
    aliasQueues?: pulumi.Input<pulumi.Input<inputs.QueueManagerAliasQueueAliasQueue>[]>;
}

export interface QueueManagerAliasQueueAliasQueue {
    /**
     * The name of the alias queue
     */
    aliasQueueName: pulumi.Input<string>;
    /**
     * The name of the base queue
     */
    baseQueueName: pulumi.Input<string>;
    /**
     * Name of the cluster(s) this alias should be visible in
     */
    clusterVisibilities?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface QueueManagerClusterQueue {
    /**
     * Cluster queue definitions for queue manager
     */
    clusterQueues?: pulumi.Input<pulumi.Input<inputs.QueueManagerClusterQueueClusterQueue>[]>;
}

export interface QueueManagerClusterQueueClusterQueue {
    /**
     * Name of the cluster(s) this local queue should be visible in
     */
    clusterVisibilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the local queue
     */
    localQueueName: pulumi.Input<string>;
}

export interface QueueManagerRemoteQueue {
    /**
     * Remote queue definitions for queue manager
     */
    remoteQueues?: pulumi.Input<pulumi.Input<inputs.QueueManagerRemoteQueueRemoteQueue>[]>;
}

export interface QueueManagerRemoteQueueRemoteQueue {
    /**
     * Name of the cluster(s) this local definition of the remote queue should be visible in
     */
    clusterVisibilities?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the local queue
     */
    localQueueName: pulumi.Input<string>;
    /**
     * The name of the remote queue manager
     */
    remoteQueueManager: pulumi.Input<string>;
    /**
     * The name of the remote queue
     */
    remoteQueueName: pulumi.Input<string>;
}

export interface ReportSubscriptions {
    /**
     * A list of monthly subscribers.
     * Monthly subscribers receive the report on the first Monday of the month at midnight.
     * You can specify email addresses or Dynatrace user IDs here.
     */
    months?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of weekly subscribers.
     * Weekly subscribers receive the report every Monday at midnight.
     * You can specify email addresses or Dynatrace user IDs here.
     */
    weeks?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestAttributeDataSource {
    /**
     * Specifies the location where the values are captured and stored.  Required if the **source** is one of the following: `GET_PARAMETER`, `URI`, `REQUEST_HEADER`, `RESPONSE_HEADER`.   Not applicable in other cases.   If the **source** value is `REQUEST_HEADER` or `RESPONSE_HEADER`, the `CAPTURE_AND_STORE_ON_BOTH` location is not allowed
     */
    capturingAndStorageLocation?: pulumi.Input<string>;
    /**
     * IBM integration bus label node name condition for which the value is captured
     */
    cicsSdkMethodNodeCondition?: pulumi.Input<inputs.RequestAttributeDataSourceCicsSdkMethodNodeCondition>;
    /**
     * The data source is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * IBM integration bus label node name condition for which the value is captured
     */
    iibLabelMethodNodeCondition?: pulumi.Input<inputs.RequestAttributeDataSourceIibLabelMethodNodeCondition>;
    /**
     * IBM integration bus label node name condition for which the value is captured
     */
    iibMethodNodeCondition?: pulumi.Input<inputs.RequestAttributeDataSourceIibMethodNodeCondition>;
    /**
     * The IBM integration bus node type for which the value is captured.  This or `iibMethodNodeCondition` is required if the **source** is: `IIB_NODE`.  Not applicable in other cases
     */
    iibNodeType?: pulumi.Input<string>;
    /**
     * The method specification if the **source** value is `METHOD_PARAM`.   Not applicable in other cases
     */
    methods?: pulumi.Input<pulumi.Input<inputs.RequestAttributeDataSourceMethod>[]>;
    /**
     * The name of the web request parameter to capture.  Required if the **source** is one of the following: `POST_PARAMETER`, `GET_PARAMETER`, `REQUEST_HEADER`, `RESPONSE_HEADER`, `CUSTOM_ATTRIBUTE`.  Not applicable in other cases
     */
    parameterName?: pulumi.Input<string>;
    /**
     * Conditions for data capturing
     */
    scope?: pulumi.Input<inputs.RequestAttributeDataSourceScope>;
    /**
     * The technology of the session attribute to capture if the **source** value is `SESSION_ATTRIBUTE`.
     */
    sessionAttributeTechnology?: pulumi.Input<string>;
    /**
     * The source of the attribute to capture. Works in conjunction with **parameterName** or **methods** and **technology**
     */
    source: pulumi.Input<string>;
    /**
     * The technology of the method to capture if the **source** value is `METHOD_PARAM`. 
     *
     *  Not applicable in other cases
     */
    technology?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Process values as specified
     */
    valueProcessing?: pulumi.Input<inputs.RequestAttributeDataSourceValueProcessing>;
}

export interface RequestAttributeDataSourceCicsSdkMethodNodeCondition {
    /**
     * Negate the comparison
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator comparing the extracted value to the comparison value
     */
    operator: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<string>;
}

export interface RequestAttributeDataSourceIibLabelMethodNodeCondition {
    /**
     * Negate the comparison
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator comparing the extracted value to the comparison value
     */
    operator: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<string>;
}

export interface RequestAttributeDataSourceIibMethodNodeCondition {
    /**
     * Negate the comparison
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator comparing the extracted value to the comparison value
     */
    operator: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<string>;
}

export interface RequestAttributeDataSourceMethod {
    /**
     * The index of the argument to capture. Set `0` to capture the return value, `1` or higher to capture a mehtod argument.   Required if the **capture** is set to `ARGUMENT`.  Not applicable in other cases
     */
    argumentIndex?: pulumi.Input<number>;
    /**
     * What to capture from the method
     */
    capture: pulumi.Input<string>;
    /**
     * The getter chain to apply to the captured object. It is required in one of the following cases:  The **capture** is set to `THIS`.    The **capture** is set to `ARGUMENT`, and the argument is not a primitive, a primitive wrapper class, a string, or an array.   Not applicable in other cases
     */
    deepObjectAccess?: pulumi.Input<string>;
    /**
     * Configuration of a method to be captured
     */
    method?: pulumi.Input<inputs.RequestAttributeDataSourceMethodMethod>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface RequestAttributeDataSourceMethodMethod {
    /**
     * Configuration of a method to be captured
     */
    argumentTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The class name where the method to capture resides.   Either this or the **fileName** must be set
     */
    className?: pulumi.Input<string>;
    /**
     * The file name where the method to capture resides.   Either this or **className** must be set
     */
    fileName?: pulumi.Input<string>;
    /**
     * The operator of the comparison. If not set, `EQUALS` is used
     */
    fileNameMatcher?: pulumi.Input<string>;
    /**
     * The name of the method to capture
     */
    methodName: pulumi.Input<string>;
    /**
     * The modifiers of the method to capture
     */
    modifiers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The return type
     */
    returnType: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The visibility of the method to capture
     */
    visibility: pulumi.Input<string>;
}

export interface RequestAttributeDataSourceScope {
    /**
     * Only applies to this host group
     */
    hostGroup?: pulumi.Input<string>;
    /**
     * Only applies to this process group. Note that this can't be transferred between different clusters or environments
     */
    processGroup?: pulumi.Input<string>;
    /**
     * Only applies to this service technology
     */
    serviceTechnology?: pulumi.Input<string>;
    /**
     * Only apply to process groups matching this tag
     */
    tagOfProcessGroup?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface RequestAttributeDataSourceValueProcessing {
    /**
     * Preprocess by extracting a substring from the original value
     */
    extractSubstring?: pulumi.Input<inputs.RequestAttributeDataSourceValueProcessingExtractSubstring>;
    /**
     * Split (preprocessed) string values at this separator
     */
    splitAt?: pulumi.Input<string>;
    /**
     * Prune Whitespaces. Defaults to false
     */
    trim?: pulumi.Input<boolean>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * IBM integration bus label node name condition for which the value is captured
     */
    valueCondition?: pulumi.Input<inputs.RequestAttributeDataSourceValueProcessingValueCondition>;
    /**
     * Extract value from captured data per regex
     */
    valueExtractorRegex?: pulumi.Input<string>;
}

export interface RequestAttributeDataSourceValueProcessingExtractSubstring {
    /**
     * The delimiter string
     */
    delimiter: pulumi.Input<string>;
    /**
     * The end-delimiter string.   Required if the **position** value is `BETWEEN`. Otherwise not allowed
     */
    endDelimiter?: pulumi.Input<string>;
    /**
     * The position of the extracted string relative to delimiters
     */
    position: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface RequestAttributeDataSourceValueProcessingValueCondition {
    /**
     * Negate the comparison
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator comparing the extracted value to the comparison value
     */
    operator: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<string>;
}

export interface RequestNamingConditions {
    /**
     * A conditions for the metric usage
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.RequestNamingConditionsCondition>[]>;
}

export interface RequestNamingConditionsCondition {
    /**
     * The attribute to be matched.  Note that for a service property attribute you must use the comparison of the `FAST_STRING` type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
     */
    attribute: pulumi.Input<string>;
    /**
     * Type-specific comparison for attributes
     */
    comparison: pulumi.Input<inputs.RequestNamingConditionsConditionComparison>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparison {
    /**
     * Boolean Comparison for `BOOLEAN` attributes
     */
    boolean?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonBoolean>;
    /**
     * Type-specific comparison information for attributes of type 'ESB_INPUT_NODE_TYPE'
     */
    esbInputNodeType?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonEsbInputNodeType>;
    /**
     * Comparison for `FAILED_STATE` attributes
     */
    failedState?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonFailedState>;
    /**
     * Comparison for `FAILURE_REASON` attributes
     */
    failureReason?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonFailureReason>;
    /**
     * Comparison for `FAST_STRING` attributes. Use it for all service property attributes
     */
    fastString?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonFastString>;
    /**
     * Comparison for `FLAW_STATE` attributes
     */
    flawState?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonFlawState>;
    /**
     * Comparison for `NUMBER` attributes
     */
    generic?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonGeneric>;
    /**
     * Comparison for `HTTP_METHOD` attributes
     */
    httpMethod?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonHttpMethod>;
    /**
     * Comparison for `HTTP_STATUS_CLASS` attributes
     */
    httpStatusClass?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonHttpStatusClass>;
    /**
     * Comparison for `IIB_INPUT_NODE_TYPE` attributes
     */
    iibInputNodeType?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonIibInputNodeType>;
    /**
     * Reverse the comparison **operator**. For example, it turns **equals** into **does not equal**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Comparison for `NUMBER` attributes
     */
    number?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonNumber>;
    /**
     * Comparison for `NUMBER_REQUEST_ATTRIBUTE` attributes
     */
    numberRequestAttribute?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonNumberRequestAttribute>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     */
    serviceType?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonServiceType>;
    /**
     * Comparison for `STRING` attributes
     */
    string?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonString>;
    /**
     * Comparison for `STRING_REQUEST_ATTRIBUTE` attributes
     */
    stringRequestAttribute?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonStringRequestAttribute>;
    /**
     * Comparison for `TAG` attributes
     */
    tag?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonTag>;
    /**
     * Comparison for `ZOS_CALL_TYPE` attributes
     */
    zosCallType?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonZosCallType>;
}

export interface RequestNamingConditionsConditionComparisonBoolean {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value: pulumi.Input<boolean>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<boolean>[]>;
}

export interface RequestNamingConditionsConditionComparisonEsbInputNodeType {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonFailedState {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `FAILED` and `FAILED`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `FAILED` and `FAILED`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonFailureReason {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `EXCEPTION_AT_ENTRY_NODE`, `EXCEPTION_ON_ANY_NODE`, `HTTP_CODE` and `REQUEST_ATTRIBUTE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonFastString {
    /**
     * The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `CONTAINS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonFlawState {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `FLAWED` and `NOT_FLAWED`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonGeneric {
    /**
     * Defines the actual set of fields depending on the value
     */
    type: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonHttpMethod {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `CONNECT`, `DELETE`, `GET`, `HEAD`, `OPTIONS`, `PATCH`, `POST`, `PUT` and `TRACE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonHttpStatusClass {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `C_1XX`, `C_2XX`, `C_3XX`, `C_4XX`, `C_5XX` and `NO_RESPONSE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonIibInputNodeType {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `CALLABLE_FLOW_ASYNC_RESPONSE_NODE`, `CALLABLE_FLOW_INPUT_NODE`, `DATABASE_INPUT_NODE`, `DOTNET_INPUT_NODE`, `EMAIL_INPUT_NODE`, `EVENT_INPUT`, `EVENT_INPUT_NODE`, `FILE_INPUT_NODE`, `FTE_INPUT_NODE`, `HTTP_ASYNC_RESPONSE`, `JD_EDWARDS_INPUT_NODE`, `JMS_CLIENT_INPUT_NODE`, `LABEL_NODE`, `MQ_INPUT_NODE`, `PEOPLE_SOFT_INPUT_NODE`, `REST_ASYNC_RESPONSE`, `REST_REQUEST`, `SAP_INPUT_NODE`, `SCA_ASYNC_RESPONSE_NODE`, `SCA_INPUT_NODE`, `SIEBEL_INPUT_NODE`, `SOAP_INPUT_NODE`, `TCPIP_CLIENT_INPUT_NODE`, `TCPIP_CLIENT_REQUEST_NODE`, `TCPIP_SERVER_INPUT_NODE`, `TCPIP_SERVER_REQUEST_NODE`, `TIMEOUT_NOTIFICATION_NODE` and `WS_INPUT_NODE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonNumber {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface RequestNamingConditionsConditionComparisonNumberRequestAttribute {
    /**
     * If `true`, the request attribute is matched on child service calls. Default is `false`
     */
    matchOnChildCalls?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `EXISTS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL`, `LOWER_THAN` and `LOWER_THAN_OR_EQUAL`
     */
    operator?: pulumi.Input<string>;
    /**
     * No documentation available for this attribute
     */
    requestAttribute: pulumi.Input<string>;
    /**
     * Defines valid sources of request attributes for conditions or placeholders
     */
    source?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonNumberRequestAttributeSource>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<number>[]>;
}

export interface RequestNamingConditionsConditionComparisonNumberRequestAttributeSource {
    /**
     * Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
     */
    managementZone?: pulumi.Input<string>;
    /**
     * Use only request attributes from services that have this tag. Use either this or `managementZone`
     */
    serviceTag?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTag {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
     */
    context?: pulumi.Input<string>;
    /**
     * The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
     */
    key: pulumi.Input<string>;
    /**
     * has no documentation
     */
    tagKey?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey>;
    /**
     * The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
     */
    value?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonNumberRequestAttributeSourceServiceTagTagKey {
    /**
     * has no documentation
     */
    context?: pulumi.Input<string>;
    /**
     * has no documentation
     */
    key?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonServiceType {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `BACKGROUND_ACTIVITY`, `CICS_SERVICE`, `CUSTOM_SERVICE`, `DATABASE_SERVICE`, `ENTERPRISE_SERVICE_BUS_SERVICE`, `EXTERNAL`, `IBM_INTEGRATION_BUS_SERVICE`, `IMS_SERVICE`, `MESSAGING_SERVICE`, `RMI_SERVICE`, `RPC_SERVICE`, `WEB_REQUEST_SERVICE` and `WEB_SERVICE`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonString {
    /**
     * The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonStringRequestAttribute {
    /**
     * The comparison is case-sensitive (`true`) or not case-sensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * If `true`, the request attribute is matched on child service calls. Default is `false`
     */
    matchOnChildCalls?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `BEGINS_WITH`, `BEGINS_WITH_ANY_OF`, `CONTAINS`, `ENDS_WITH`, `ENDS_WITH_ANY_OF`, `EQUALS`, `EQUALS_ANY_OF`, `EXISTS` and `REGEX_MATCHES`
     */
    operator?: pulumi.Input<string>;
    /**
     * No documentation available for this attribute
     */
    requestAttribute: pulumi.Input<string>;
    /**
     * Defines valid sources of request attributes for conditions or placeholders
     */
    source?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonStringRequestAttributeSource>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingConditionsConditionComparisonStringRequestAttributeSource {
    /**
     * Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
     */
    managementZone?: pulumi.Input<string>;
    /**
     * Use only request attributes from services that have this tag. Use either this or `managementZone`
     */
    serviceTag?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTag {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
     */
    context?: pulumi.Input<string>;
    /**
     * The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
     */
    key: pulumi.Input<string>;
    /**
     * has no documentation
     */
    tagKey?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey>;
    /**
     * The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
     */
    value?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonStringRequestAttributeSourceServiceTagTagKey {
    /**
     * has no documentation
     */
    context?: pulumi.Input<string>;
    /**
     * has no documentation
     */
    key?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonTag {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF`, `TAG_KEY_EQUALS` and `TAG_KEY_EQUALS_ANY_OF`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The values to compare to
     */
    value?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonTagValue>;
    /**
     * The values to compare to
     */
    values?: pulumi.Input<inputs.RequestNamingConditionsConditionComparisonTagValues>;
}

export interface RequestNamingConditionsConditionComparisonTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonTagValues {
    /**
     * The values to compare to
     */
    values?: pulumi.Input<pulumi.Input<inputs.RequestNamingConditionsConditionComparisonTagValuesValue>[]>;
}

export interface RequestNamingConditionsConditionComparisonTagValuesValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_CLOUD` and `KUBERNETES`
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface RequestNamingConditionsConditionComparisonZosCallType {
    /**
     * Operator of the comparison. You can reverse it by setting `negate` to `true`. Possible values are `EQUALS`, `EQUALS_ANY_OF` and `EXISTS`
     */
    operator?: pulumi.Input<string>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
     */
    value?: pulumi.Input<string>;
    /**
     * The values to compare to. Possible values are `CTG`, `DPL`, `EXPLICIT_ADK`, `IMS_CONNECT`, `IMS_CONNECT_API`, `IMS_ITRA`, `IMS_MSC`, `IMS_PGM_SWITCH`, `IMS_SHARED_QUEUES`, `IMS_TRANS_EXEC`, `MQ`, `SOAP`, `START`, `TX` and `UNKNOWN`
     */
    values?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface RequestNamingPlaceholders {
    /**
     * A custom placeholder to be used in a dimension value pattern
     */
    placeholders?: pulumi.Input<pulumi.Input<inputs.RequestNamingPlaceholdersPlaceholder>[]>;
}

export interface RequestNamingPlaceholdersPlaceholder {
    /**
     * Which value of the request attribute must be used when it occurs across multiple child requests. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute, when **useFromChildCalls** is `true`. For the `COUNT` aggregation, the **kind** field is not applicable. Possible values are `COUNT`, `FIRST` and `LAST`.
     */
    aggregation?: pulumi.Input<string>;
    /**
     * The attribute to extract from. You can only use attributes of the **string** type. Possible values are `ACTOR_SYSTEM`, `AKKA_ACTOR_CLASS_NAME`, `AKKA_ACTOR_MESSAGE_TYPE`, `AKKA_ACTOR_PATH`, `APPLICATION_BUILD_VERSION`, `APPLICATION_RELEASE_VERSION`, `AZURE_FUNCTIONS_FUNCTION_NAME`, `AZURE_FUNCTIONS_SITE_NAME`, `CICS_PROGRAM_NAME`, `CICS_SYSTEM_ID`, `CICS_TASK_ID`, `CICS_TRANSACTION_ID`, `CICS_USER_ID`, `CPU_TIME`, `CTG_GATEWAY_URL`, `CTG_PROGRAM`, `CTG_SERVER_NAME`, `CTG_TRANSACTION_ID`, `CUSTOMSERVICE_CLASS`, `CUSTOMSERVICE_METHOD`, `DATABASE_CHILD_CALL_COUNT`, `DATABASE_CHILD_CALL_TIME`, `DATABASE_HOST`, `DATABASE_NAME`, `DATABASE_TYPE`, `DATABASE_URL`, `DISK_IO_TIME`, `ERROR_COUNT`, `ESB_APPLICATION_NAME`, `ESB_INPUT_TYPE`, `ESB_LIBRARY_NAME`, `ESB_MESSAGE_FLOW_NAME`, `EXCEPTION_CLASS`, `EXCEPTION_MESSAGE`, `FAILED_STATE`, `FAILURE_REASON`, `FLAW_STATE`, `HTTP_REQUEST_METHOD`, `HTTP_STATUS`, `HTTP_STATUS_CLASS`, `IMS_PROGRAM_NAME`, `IMS_TRANSACTION_ID`, `IMS_USER_ID`, `IO_TIME`, `IS_KEY_REQUEST`, `LAMBDA_COLDSTART`, `LOCK_TIME`, `MESSAGING_DESTINATION_TYPE`, `MESSAGING_IS_TEMPORARY_QUEUE`, `MESSAGING_QUEUE_NAME`, `MESSAGING_QUEUE_VENDOR`, `NETWORK_IO_TIME`, `NON_DATABASE_CHILD_CALL_COUNT`, `NON_DATABASE_CHILD_CALL_TIME`, `PROCESS_GROUP_NAME`, `PROCESS_GROUP_TAG`, `REMOTE_ENDPOINT`, `REMOTE_METHOD`, `REMOTE_SERVICE_NAME`, `REQUEST_NAME`, `REQUEST_TYPE`, `RESPONSE_TIME`, `RESPONSE_TIME_CLIENT`, `RMI_CLASS`, `RMI_METHOD`, `SERVICE_DISPLAY_NAME`, `SERVICE_NAME`, `SERVICE_PORT`, `SERVICE_PUBLIC_DOMAIN_NAME`, `SERVICE_REQUEST_ATTRIBUTE`, `SERVICE_TAG`, `SERVICE_TYPE`, `SERVICE_WEB_APPLICATION_ID`, `SERVICE_WEB_CONTEXT_ROOT`, `SERVICE_WEB_SERVER_NAME`, `SERVICE_WEB_SERVICE_NAME`, `SERVICE_WEB_SERVICE_NAMESPACE`, `SUSPENSION_TIME`, `TOTAL_PROCESSING_TIME`, `WAIT_TIME`, `WEBREQUEST_QUERY`, `WEBREQUEST_RELATIVE_URL`, `WEBREQUEST_URL`, `WEBREQUEST_URL_HOST`, `WEBREQUEST_URL_PATH`, `WEBREQUEST_URL_PORT`, `WEBSERVICE_ENDPOINT`, `WEBSERVICE_METHOD` and `ZOS_CALL_TYPE`
     */
    attribute: pulumi.Input<string>;
    /**
     * Depending on the `kind` value:
     *
     *
     * * `REGEX_EXTRACTION`: The regular expression.
     *
     *
     * * `BETWEEN_DELIMITER`: The opening delimiter string to look for.
     *
     *
     * * All other values: The delimiter string to look for
     */
    delimiterOrRegex?: pulumi.Input<string>;
    /**
     * The closing delimiter string to look for. Required if the `kind` value is `BETWEEN_DELIMITER`. Not applicable otherwise
     */
    endDelimiter?: pulumi.Input<string>;
    /**
     * The type of extraction. Defines either usage of regular expression (`regex`) or the position of request attribute value to be extracted. When the `attribute` is `SERVICE_REQUEST_ATTRIBUTE` attribute and `aggregation` is `COUNT`, needs to be set to `ORIGINAL_TEXT`. Possible values are 	`AFTER_DELIMITER`, `BEFORE_DELIMITER`, `BETWEEN_DELIMITER`, `ORIGINAL_TEXT` and `REGEX_EXTRACTION`
     */
    kind: pulumi.Input<string>;
    /**
     * The name of the placeholder. Use it in the naming pattern as `{name}`
     */
    name: pulumi.Input<string>;
    /**
     * The format of the extracted string. Possible values are `ORIGINAL`, `TO_LOWER_CASE` and `TO_UPPER_CASE`
     */
    normalization?: pulumi.Input<string>;
    /**
     * The request attribute to extract from. Required if the `kind` value is `SERVICE_REQUEST_ATTRIBUTE`. Not applicable otherwise
     */
    requestAttribute?: pulumi.Input<string>;
    /**
     * Defines valid sources of request attributes for conditions or placeholders
     */
    source?: pulumi.Input<inputs.RequestNamingPlaceholdersPlaceholderSource>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * If `true` request attribute will be taken from a child service call. Only applicable for the `SERVICE_REQUEST_ATTRIBUTE` attribute. Defaults to `false`
     */
    useFromChildCalls?: pulumi.Input<boolean>;
}

export interface RequestNamingPlaceholdersPlaceholderSource {
    /**
     * Use only request attributes from services that belong to this management zone.. Use either this or `serviceTag`
     */
    managementZone?: pulumi.Input<string>;
    /**
     * Use only request attributes from services that have this tag. Use either this or `managementZone`
     */
    serviceTag?: pulumi.Input<inputs.RequestNamingPlaceholdersPlaceholderSourceServiceTag>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface RequestNamingPlaceholdersPlaceholderSourceServiceTag {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. For custom tags use the `CONTEXTLESS` value. The context is set for tags that are automatically imported by OneAgent (for example, from the AWS console or environment variables). It’s useful for determining the origin of tags when not manually defined, and it also helps to prevent clashes with other existing tags. If the tag is not automatically imported, `CONTEXTLESS` set. Possible values are `AWS`, `AWS_GENERIC`, `AZURE`, `CLOUD_FOUNDRY`, `CONTEXTLESS`, `ENVIRONMENT`, `GOOGLE_COMPUTE_ENGINE` and `KUBERNETES`
     */
    context?: pulumi.Input<string>;
    /**
     * The key of the tag. For custom tags, put the tag value here. The key allows categorization of multiple tags. It is possible that there are multiple values for a single key which will all be represented as standalone tags. Therefore, the key does not have the semantic of a map key but is more like a key of a key-value tuple. In some cases, for example custom tags, the key represents the actual tag value and the value field is not set – those are called valueless tags
     */
    key: pulumi.Input<string>;
    /**
     * has no documentation
     */
    tagKey?: pulumi.Input<inputs.RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey>;
    /**
     * The value of the tag. Not applicable to custom tags. If a tag does have a separate key and value (in the textual representation they are split by the colon ‘:’), this field is set with the actual value. Key-value pairs can occur for automatically imported tags and tags set by rules if extractors are used
     */
    value?: pulumi.Input<string>;
}

export interface RequestNamingPlaceholdersPlaceholderSourceServiceTagTagKey {
    /**
     * has no documentation
     */
    context?: pulumi.Input<string>;
    /**
     * has no documentation
     */
    key?: pulumi.Input<string>;
}

export interface ResourceAttributesKeys {
    rules: pulumi.Input<pulumi.Input<inputs.ResourceAttributesKeysRule>[]>;
}

export interface ResourceAttributesKeysRule {
    /**
     * Attribute key **service.name** is automatically captured by default
     */
    attributeKey: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Possible Values: `MASK_ENTIRE_VALUE`, `MASK_ONLY_CONFIDENTIAL_DATA`, `NOT_MASKED`
     */
    masking: pulumi.Input<string>;
}

export interface RumProviderBreakdownDomainNamePatternList {
    domainNamePatterns: pulumi.Input<pulumi.Input<inputs.RumProviderBreakdownDomainNamePatternListDomainNamePattern>[]>;
}

export interface RumProviderBreakdownDomainNamePatternListDomainNamePattern {
    /**
     * Use a ends-with pattern for this content provider's domain
     */
    pattern: pulumi.Input<string>;
}

export interface ServiceAnomaliesFailureRates {
    /**
     * Parameters of failure rate increase auto-detection. Example: If the expected error rate is 1.5%, and you set an absolute increase of 1%, and a relative increase of 50%, the thresholds will be:  Absolute: 1.5% + **1%** = 2.5%  Relative: 1.5% + 1.5% * **50%** = 2.25%
     */
    auto?: pulumi.Input<inputs.ServiceAnomaliesFailureRatesAuto>;
    /**
     * Fixed thresholds for failure rate increase detection
     */
    thresholds?: pulumi.Input<inputs.ServiceAnomaliesFailureRatesThresholds>;
}

export interface ServiceAnomaliesFailureRatesAuto {
    /**
     * Absolute increase of failing service calls to trigger an alert, %
     */
    absolute: pulumi.Input<number>;
    /**
     * Relative increase of failing service calls to trigger an alert, %
     */
    relative: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceAnomaliesFailureRatesThresholds {
    /**
     * Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers alert
     */
    sensitivity: pulumi.Input<string>;
    /**
     * Failure rate during any 5-minute period to trigger an alert, %
     */
    threshold: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceAnomaliesLoad {
    /**
     * The configuration of traffic drops detection
     */
    drops?: pulumi.Input<inputs.ServiceAnomaliesLoadDrops>;
    /**
     * The configuration of traffic spikes detection
     */
    spikes?: pulumi.Input<inputs.ServiceAnomaliesLoadSpikes>;
}

export interface ServiceAnomaliesLoadDrops {
    /**
     * Alert if the service stays in abnormal state for at least *X* minutes
     */
    minutes?: pulumi.Input<number>;
    /**
     * Alert if the observed load is more than *X* % of the expected value
     */
    percent?: pulumi.Input<number>;
}

export interface ServiceAnomaliesLoadSpikes {
    /**
     * Alert if the service stays in abnormal state for at least *X* minutes
     */
    minutes?: pulumi.Input<number>;
    /**
     * Alert if the observed load is more than *X* % of the expected value
     */
    percent?: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceAnomaliesResponseTimes {
    /**
     * Parameters of the response time degradation auto-detection. Violation of **any** criterion triggers an alert
     */
    auto?: pulumi.Input<inputs.ServiceAnomaliesResponseTimesAuto>;
    /**
     * Fixed thresholds for response time degradation detection
     */
    thresholds?: pulumi.Input<inputs.ServiceAnomaliesResponseTimesThresholds>;
}

export interface ServiceAnomaliesResponseTimesAuto {
    /**
     * Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
     */
    load: pulumi.Input<string>;
    /**
     * Alert if the response time degrades by more than *X* milliseconds
     */
    milliseconds: pulumi.Input<number>;
    /**
     * Alert if the response time degrades by more than *X* %
     */
    percent: pulumi.Input<number>;
    /**
     * Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
     */
    slowestMilliseconds: pulumi.Input<number>;
    /**
     * Alert if the response time of the slowest 10% degrades by more than *X* milliseconds
     */
    slowestPercent: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceAnomaliesResponseTimesThresholds {
    /**
     * Minimal service load to detect response time degradation. Response time degradation of services with smaller load won't trigger alerts. Possible values are `FIFTEEN_REQUESTS_PER_MINUTE`, `FIVE_REQUESTS_PER_MINUTE`, `ONE_REQUEST_PER_MINUTE` and `TEN_REQUESTS_PER_MINUTE`
     */
    load: pulumi.Input<string>;
    /**
     * Response time during any 5-minute period to trigger an alert, in milliseconds
     */
    milliseconds: pulumi.Input<number>;
    /**
     * Sensitivity of the threshold.  With `low` sensitivity, high statistical confidence is used. Brief violations (for example, due to a surge in load) won't trigger alerts.  With `high` sensitivity, no statistical confidence is used. Each violation triggers an alert
     */
    sensitivity: pulumi.Input<string>;
    /**
     * Response time of the 10% slowest during any 5-minute period to trigger an alert, in milliseconds
     */
    slowestMilliseconds: pulumi.Input<number>;
    /**
     * allows for configuring properties that are not explicitly supported by the current version of this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceAnomaliesV2FailureRate {
    /**
     * Alert if the percentage of failing service calls increases by **both** the absolute and relative thresholds:
     */
    autoDetection?: pulumi.Input<inputs.ServiceAnomaliesV2FailureRateAutoDetection>;
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Alert if a given failure rate is exceeded during any 5-minute-period
     */
    fixedDetection?: pulumi.Input<inputs.ServiceAnomaliesV2FailureRateFixedDetection>;
}

export interface ServiceAnomaliesV2FailureRateAutoDetection {
    /**
     * Absolute threshold
     */
    absoluteIncrease: pulumi.Input<number>;
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.ServiceAnomaliesV2FailureRateAutoDetectionOverAlertingProtection>;
    /**
     * Relative threshold
     */
    relativeIncrease: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2FailureRateAutoDetectionOverAlertingProtection {
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Only alert if there are at least
     */
    requestsPerMinute: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2FailureRateFixedDetection {
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtection>;
    /**
     * Possible Values: `High`, `Low`, `Medium`
     */
    sensitivity: pulumi.Input<string>;
    /**
     * no documentation available
     */
    threshold: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2FailureRateFixedDetectionOverAlertingProtection {
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Only alert if there are at least
     */
    requestsPerMinute: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2LoadDrops {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Threshold
     */
    loadDropPercent?: pulumi.Input<number>;
    /**
     * Time span
     */
    minutesAbnormalState?: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2LoadSpikes {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Threshold
     */
    loadSpikePercent?: pulumi.Input<number>;
    /**
     * Time span
     */
    minutesAbnormalState?: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2ResponseTime {
    /**
     * no documentation available
     */
    autoDetection?: pulumi.Input<inputs.ServiceAnomaliesV2ResponseTimeAutoDetection>;
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    fixedDetection?: pulumi.Input<inputs.ServiceAnomaliesV2ResponseTimeFixedDetection>;
}

export interface ServiceAnomaliesV2ResponseTimeAutoDetection {
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.ServiceAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection>;
    /**
     * Alert if the median response time of all requests degrades beyond **both** the absolute and relative thresholds:
     */
    responseTimeAll: pulumi.Input<inputs.ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll>;
    /**
     * Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
     */
    responseTimeSlowest: pulumi.Input<inputs.ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest>;
}

export interface ServiceAnomaliesV2ResponseTimeAutoDetectionOverAlertingProtection {
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Only alert if there are at least
     */
    requestsPerMinute: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeAll {
    /**
     * Absolute threshold
     */
    degradationMilliseconds: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    degradationPercent: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2ResponseTimeAutoDetectionResponseTimeSlowest {
    /**
     * Absolute threshold
     */
    slowestDegradationMilliseconds: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    slowestDegradationPercent: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2ResponseTimeFixedDetection {
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection>;
    /**
     * Alert if the median response time of all requests degrades beyond this threshold:
     */
    responseTimeAll: pulumi.Input<inputs.ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll>;
    /**
     * Alert if the response time of the slowest 10% of requests degrades beyond this threshold:
     */
    responseTimeSlowest: pulumi.Input<inputs.ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest>;
    /**
     * Possible Values: `High`, `Low`, `Medium`
     */
    sensitivity: pulumi.Input<string>;
}

export interface ServiceAnomaliesV2ResponseTimeFixedDetectionOverAlertingProtection {
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Only alert if there are at least
     */
    requestsPerMinute: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeAll {
    /**
     * Alert if the response time degrades beyond this many ms within an observation period of 5 minutes
     */
    degradationMilliseconds: pulumi.Input<number>;
}

export interface ServiceAnomaliesV2ResponseTimeFixedDetectionResponseTimeSlowest {
    /**
     * Alert if the response time of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
     */
    slowestDegradationMilliseconds: pulumi.Input<number>;
}

export interface ServiceExternalWebRequestConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.ServiceExternalWebRequestConditionsCondition>[]>;
}

export interface ServiceExternalWebRequestConditionsCondition {
    /**
     * Take the value of this attribute
     */
    attribute: pulumi.Input<string>;
    /**
     * Apply this operation
     */
    compareOperationType: pulumi.Input<string>;
    /**
     * Technology
     */
    frameworks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Ignore case sensitivity for texts.
     */
    ignoreCase?: pulumi.Input<boolean>;
    /**
     * Value
     */
    intValue?: pulumi.Input<number>;
    /**
     * Values
     */
    intValues?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * From
     */
    ipRangeFrom?: pulumi.Input<string>;
    /**
     * To
     */
    ipRangeTo?: pulumi.Input<string>;
    /**
     * If multiple values are specified, at least one of them must match for the condition to match
     */
    tagValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If multiple values are specified, at least one of them must match for the condition to match
     */
    textValues?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceExternalWebRequestIdContributors {
    /**
     * Application identifier
     */
    applicationId: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsApplicationId>;
    /**
     * URL context root
     */
    contextRoot: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsContextRoot>;
    /**
     * Let the port contribute to the Service Id
     */
    portForServiceId: pulumi.Input<boolean>;
    /**
     * Public domain name
     */
    publicDomainName: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsPublicDomainName>;
}

export interface ServiceExternalWebRequestIdContributorsApplicationId {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributor>;
}

export interface ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride>;
}

export interface ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceExternalWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceExternalWebRequestIdContributorsContextRoot {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsContextRootServiceIdContributor>;
}

export interface ServiceExternalWebRequestIdContributorsContextRootServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorValueOverride>;
}

export interface ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceExternalWebRequestIdContributorsContextRootServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceExternalWebRequestIdContributorsPublicDomainName {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributor>;
}

export interface ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Use the detected host name instead of the request's domain name.
     */
    copyFromHostName?: pulumi.Input<boolean>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorValueOverride>;
}

export interface ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceExternalWebRequestIdContributorsPublicDomainNameServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceExternalWebServiceConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.ServiceExternalWebServiceConditionsCondition>[]>;
}

export interface ServiceExternalWebServiceConditionsCondition {
    /**
     * Take the value of this attribute
     */
    attribute: pulumi.Input<string>;
    /**
     * Apply this operation
     */
    compareOperationType: pulumi.Input<string>;
    /**
     * Technology
     */
    frameworks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Ignore case sensitivity for texts.
     */
    ignoreCase?: pulumi.Input<boolean>;
    /**
     * Value
     */
    intValue?: pulumi.Input<number>;
    /**
     * Values
     */
    intValues?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * From
     */
    ipRangeFrom?: pulumi.Input<string>;
    /**
     * To
     */
    ipRangeTo?: pulumi.Input<string>;
    /**
     * If multiple values are specified, at least one of them must match for the condition to match
     */
    tagValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If multiple values are specified, at least one of them must match for the condition to match
     */
    textValues?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceExternalWebServiceIdContributors {
    /**
     * Detect the matching requests as web request services instead of web services.
     */
    detectAsWebRequestService: pulumi.Input<boolean>;
    /**
     * Let the port contribute to the Service Id
     */
    portForServiceId?: pulumi.Input<boolean>;
    /**
     * URL path
     */
    urlPath?: pulumi.Input<inputs.ServiceExternalWebServiceIdContributorsUrlPath>;
}

export interface ServiceExternalWebServiceIdContributorsUrlPath {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributor>;
}

export interface ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorValueOverride>;
}

export interface ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceExternalWebServiceIdContributorsUrlPathServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceFailureExceptionRules {
    /**
     * Some custom error situations are only detectable via a return value or other means. To support such cases, [define a request attribute](https://dt-url.net/ys5k0p4y) that captures the required data. Then define a custom error rule that determines if the request has failed based on the value of the request attribute.
     */
    customErrorRules?: pulumi.Input<inputs.ServiceFailureExceptionRulesCustomErrorRules>;
    /**
     * There may be situations where your application code handles exceptions gracefully in a manner that these failures aren't detected by Dynatrace. Use this setting to define specific gracefully-handled exceptions that should be treated as service failures.
     */
    customHandledExceptions?: pulumi.Input<inputs.ServiceFailureExceptionRulesCustomHandledExceptions>;
    /**
     * Ignore all exceptions
     */
    ignoreAllExceptions: pulumi.Input<boolean>;
    /**
     * Ignore span failure detection
     */
    ignoreSpanFailureDetection: pulumi.Input<boolean>;
    /**
     * Some exceptions that are thrown by legacy or 3rd-party code indicate a specific response, not an error. Use this setting to instruct Dynatrace to treat such exceptions as non-failed requests.. If an exception matching any of the defined patterns occurs in a request, it will not be considered as a failure. Other exceptions occurring at the same request might still mark the request as failed.
     */
    ignoredExceptions?: pulumi.Input<inputs.ServiceFailureExceptionRulesIgnoredExceptions>;
    /**
     * Define exceptions which indicate that a service call should not be considered as failed. E.g. an exception indicating that the client aborted the operation.. If an exception matching any of the defined patterns occurs on the entry node of the service, it will be considered successful. Compared to ignored exceptions, the request will be considered successful even if other exceptions occur in the same request.
     */
    successForcingExceptions?: pulumi.Input<inputs.ServiceFailureExceptionRulesSuccessForcingExceptions>;
}

export interface ServiceFailureExceptionRulesCustomErrorRules {
    customErrorRules: pulumi.Input<pulumi.Input<inputs.ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRule>[]>;
}

export interface ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRule {
    /**
     * Request attribute condition
     */
    condition: pulumi.Input<inputs.ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleCondition>;
    /**
     * Request attribute
     */
    requestAttribute: pulumi.Input<string>;
}

export interface ServiceFailureExceptionRulesCustomErrorRulesCustomErrorRuleCondition {
    /**
     * Case sensitive
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Apply this comparison
     */
    compareOperationType: pulumi.Input<string>;
    /**
     * Value
     */
    doubleValue?: pulumi.Input<number>;
    /**
     * Value
     */
    intValue?: pulumi.Input<number>;
    /**
     * Value
     */
    textValue?: pulumi.Input<string>;
}

export interface ServiceFailureExceptionRulesCustomHandledExceptions {
    customHandledExceptions: pulumi.Input<pulumi.Input<inputs.ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException>[]>;
}

export interface ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException {
    /**
     * The pattern will match if it is contained within the actual class name.
     */
    classPattern?: pulumi.Input<string>;
    /**
     * Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
     */
    messagePattern?: pulumi.Input<string>;
}

export interface ServiceFailureExceptionRulesIgnoredExceptions {
    customHandledExceptions: pulumi.Input<pulumi.Input<inputs.ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException>[]>;
}

export interface ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException {
    /**
     * The pattern will match if it is contained within the actual class name.
     */
    classPattern?: pulumi.Input<string>;
    /**
     * Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
     */
    messagePattern?: pulumi.Input<string>;
}

export interface ServiceFailureExceptionRulesSuccessForcingExceptions {
    customHandledExceptions: pulumi.Input<pulumi.Input<inputs.ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException>[]>;
}

export interface ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException {
    /**
     * The pattern will match if it is contained within the actual class name.
     */
    classPattern?: pulumi.Input<string>;
    /**
     * Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
     */
    messagePattern?: pulumi.Input<string>;
}

export interface ServiceFullWebRequestConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.ServiceFullWebRequestConditionsCondition>[]>;
}

export interface ServiceFullWebRequestConditionsCondition {
    /**
     * Take the value of this attribute
     */
    attribute: pulumi.Input<string>;
    /**
     * Apply this operation
     */
    compareOperationType: pulumi.Input<string>;
    /**
     * Technology
     */
    frameworks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Ignore case sensitivity for texts.
     */
    ignoreCase?: pulumi.Input<boolean>;
    /**
     * Value
     */
    intValue?: pulumi.Input<number>;
    /**
     * Values
     */
    intValues?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * From
     */
    ipRangeFrom?: pulumi.Input<string>;
    /**
     * To
     */
    ipRangeTo?: pulumi.Input<string>;
    /**
     * If multiple values are specified, at least one of them must match for the condition to match
     */
    tagValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If multiple values are specified, at least one of them must match for the condition to match
     */
    textValues?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceFullWebRequestIdContributors {
    /**
     * Application identifier
     */
    applicationId: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsApplicationId>;
    /**
     * The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
     */
    contextRoot: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsContextRoot>;
    /**
     * Server Name
     */
    serverName: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsServerName>;
}

export interface ServiceFullWebRequestIdContributorsApplicationId {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor>;
}

export interface ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride>;
}

export interface ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceFullWebRequestIdContributorsContextRoot {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsContextRootServiceIdContributor>;
}

export interface ServiceFullWebRequestIdContributorsContextRootServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride>;
}

export interface ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceFullWebRequestIdContributorsServerName {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsServerNameServiceIdContributor>;
}

export interface ServiceFullWebRequestIdContributorsServerNameServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride>;
}

export interface ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceFullWebServiceConditions {
    conditions: pulumi.Input<pulumi.Input<inputs.ServiceFullWebServiceConditionsCondition>[]>;
}

export interface ServiceFullWebServiceConditionsCondition {
    /**
     * Take the value of this attribute
     */
    attribute: pulumi.Input<string>;
    /**
     * Apply this operation
     */
    compareOperationType: pulumi.Input<string>;
    /**
     * Technology
     */
    frameworks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Ignore case sensitivity for texts.
     */
    ignoreCase?: pulumi.Input<boolean>;
    /**
     * Value
     */
    intValue?: pulumi.Input<number>;
    /**
     * Values
     */
    intValues?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * From
     */
    ipRangeFrom?: pulumi.Input<string>;
    /**
     * To
     */
    ipRangeTo?: pulumi.Input<string>;
    /**
     * If multiple values are specified, at least one of them must match for the condition to match
     */
    tagValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If multiple values are specified, at least one of them must match for the condition to match
     */
    textValues?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceFullWebServiceIdContributors {
    /**
     * Application identifier
     */
    applicationId?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsApplicationId>;
    /**
     * The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
     */
    contextRoot?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsContextRoot>;
    /**
     * Detect the matching requests as full web services (false) or web request services (true).
     */
    detectAsWebRequestService: pulumi.Input<boolean>;
    /**
     * Server name
     */
    serverName?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsServerName>;
    /**
     * Web service name
     */
    webServiceName?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceName>;
    /**
     * Web service namespace
     */
    webServiceNamespace?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNamespace>;
}

export interface ServiceFullWebServiceIdContributorsApplicationId {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor>;
}

export interface ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride>;
}

export interface ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsContextRoot {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsContextRootServiceIdContributor>;
}

export interface ServiceFullWebServiceIdContributorsContextRootServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride>;
}

export interface ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsServerName {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsServerNameServiceIdContributor>;
}

export interface ServiceFullWebServiceIdContributorsServerNameServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride>;
}

export interface ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceName {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNamespace {
    /**
     * Transform this value before letting it contribute to the Service Id
     */
    enableIdContributor: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    serviceIdContributor?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor {
    /**
     * Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
     */
    contributionType: pulumi.Input<string>;
    /**
     * Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
     */
    transformations?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations>;
    /**
     * The value to be used instead of the detected value.
     */
    valueOverride?: pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations {
    transformations: pulumi.Input<pulumi.Input<inputs.ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation>[]>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation {
    /**
     * include hexadecimal numbers
     */
    includeHexNumbers?: pulumi.Input<boolean>;
    /**
     * min digit count
     */
    minDigitCount?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    prefix?: pulumi.Input<string>;
    /**
     * replacement
     */
    replacementValue?: pulumi.Input<string>;
    /**
     * How many segments should be taken.
     */
    segmentCount?: pulumi.Input<number>;
    /**
     * select index
     */
    selectIndex?: pulumi.Input<number>;
    /**
     * split by
     */
    splitDelimiter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    suffix?: pulumi.Input<string>;
    /**
     * take from end
     */
    takeFromEnd?: pulumi.Input<boolean>;
    /**
     * Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
     */
    transformationType: pulumi.Input<string>;
}

export interface ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride {
    /**
     * no documentation available
     */
    value: pulumi.Input<string>;
}

export interface ServiceHttpFailureBrokenLinks {
    /**
     * If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.
     */
    brokenLinkDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Consider 404 HTTP response codes as failures
     */
    http404NotFoundFailures: pulumi.Input<boolean>;
}

export interface ServiceHttpFailureHttpResponseCodes {
    /**
     * HTTP response codes which indicate client side errors
     */
    clientSideErrors: pulumi.Input<string>;
    /**
     * Treat missing HTTP response code as client side error
     */
    failOnMissingResponseCodeClientSide: pulumi.Input<boolean>;
    /**
     * Treat missing HTTP response code as server side errors
     */
    failOnMissingResponseCodeServerSide: pulumi.Input<boolean>;
    /**
     * HTTP response codes which indicate an error on the server side
     */
    serverSideErrors: pulumi.Input<string>;
}

export interface ServiceNamingCondition {
    /**
     * A conditions for the metric usage
     */
    conditions?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionCondition>[]>;
}

export interface ServiceNamingConditionCondition {
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    applicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionApplicationTypeComparison>[]>;
    /**
     * Comparison for `APPLICATION_TYPE` attributes
     */
    applicationTypes?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionApplicationType>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     */
    azureComputeModeComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionAzureComputeModeComparison>[]>;
    /**
     * Comparison for `AZURE_COMPUTE_MODE` attributes
     *
     * @deprecated You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
     */
    azureComputeModes?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionAzureComputeMode>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     *
     * @deprecated You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
     */
    azureSkuComparisions?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionAzureSkuComparision>[]>;
    /**
     * Comparison for `AZURE_SKU` attributes
     */
    azureSkus?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionAzureSkus>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     *
     * @deprecated You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
     */
    baseComparisonBasics?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionBaseComparisonBasic>[]>;
    /**
     * Fallback for not yet known type
     *
     * @deprecated 'base_condition_key' is deprecated. You should use 'key'
     */
    baseConditionKeys?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionBaseConditionKey>[]>;
    /**
     * Comparison for `BITNESS` attributes
     *
     * @deprecated You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
     */
    bitnessComparisions?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionBitnessComparision>[]>;
    /**
     * Comparison for `BITNESS` attributes
     */
    bitnesses?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionBitness>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     *
     * @deprecated You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
     */
    cloudTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionCloudTypeComparison>[]>;
    /**
     * Comparison for `CLOUD_TYPE` attributes
     */
    cloudTypes?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionCloudType>[]>;
    /**
     * A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
     */
    comparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     *
     * @deprecated You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
     */
    customApplicationTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionCustomApplicationTypeComparison>[]>;
    /**
     * Comparison for `CUSTOM_APPLICATION_TYPE` attributes
     */
    customApplicationTypes?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionCustomApplicationType>[]>;
    /**
     * Key for Custom Host Metadata
     *
     * @deprecated 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
     */
    customHostMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionCustomHostMetadataConditionKey>[]>;
    /**
     * Key for Custom Host Metadata
     */
    customHostMetadatas?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionCustomHostMetadata>[]>;
    /**
     * Key for Custom Process Metadata
     *
     * @deprecated 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
     */
    customProcessMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionCustomProcessMetadataConditionKey>[]>;
    /**
     * Key for Custom Process Metadata
     */
    customProcessMetadatas?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionCustomProcessMetadata>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     */
    databaseTopologies?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionDatabaseTopology>[]>;
    /**
     * Comparison for `DATABASE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    databaseTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionDatabaseTopologyComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     *
     * @deprecated You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
     */
    dcrumDecoderComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionDcrumDecoderComparison>[]>;
    /**
     * Comparison for `DCRUM_DECODER_TYPE` attributes
     */
    dcrumDecoders?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionDcrumDecoder>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     */
    entities?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionEntity>[]>;
    /**
     * Comparison for `ENTITY_ID` attributes
     *
     * @deprecated You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
     */
    entityIdComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionEntityIdComparison>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     */
    hostTeches?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionHostTech>[]>;
    /**
     * `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     *
     * @deprecated `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
     */
    hypervisorTypeComparisions?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionHypervisorTypeComparision>[]>;
    /**
     * Comparison for `HYPERVISOR_TYPE` attributes
     */
    hypervisors?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionHypervisor>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     *
     * @deprecated You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedNameComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIndexedNameComparison>[]>;
    /**
     * Comparison for `INDEXED_NAME` attributes
     */
    indexedNames?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIndexedName>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     *
     * @deprecated You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedStringComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIndexedStringComparison>[]>;
    /**
     * Comparison for `INDEXED_STRING` attributes
     */
    indexedStrings?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIndexedString>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     *
     * @deprecated You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
     */
    indexedTagComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIndexedTagComparison>[]>;
    /**
     * Comparison for `INDEXED_TAG` attributes
     */
    indexedTags?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIndexedTag>[]>;
    /**
     * Comparison for `INTEGER` attributes
     *
     * @deprecated You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
     */
    integerComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIntegerComparison>[]>;
    /**
     * Comparison for `INTEGER` attributes
     */
    integers?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionInteger>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     *
     * @deprecated You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
     */
    ipaddressComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIpaddressComparison>[]>;
    /**
     * Comparison for `IP_ADDRESS` attributes
     */
    ipaddresses?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionIpaddress>[]>;
    /**
     * Fallback for not yet known type
     */
    keys?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionKey>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     *
     * @deprecated You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
     */
    mobilePlatformComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionMobilePlatformComparison>[]>;
    /**
     * Comparison for `MOBILE_PLATFORM` attributes
     */
    mobilePlatforms?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionMobilePlatform>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     */
    osArches?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionOsArch>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     */
    osTypes?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionOsType>[]>;
    /**
     * Comparison for `OS_ARCHITECTURE` attributes
     *
     * @deprecated You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
     */
    osarchitectureComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionOsarchitectureComparison>[]>;
    /**
     * Comparison for `OS_TYPE` attributes
     *
     * @deprecated You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
     */
    ostypeComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionOstypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     *
     * @deprecated You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
     */
    paasTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionPaasTypeComparison>[]>;
    /**
     * Comparison for `PAAS_TYPE` attributes
     */
    paasTypes?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionPaasType>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     *
     * @deprecated 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
     */
    processMetadataConditionKeys?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionProcessMetadataConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
     */
    processMetadatas?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionProcessMetadata>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     */
    serviceTopologies?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionServiceTopology>[]>;
    /**
     * Comparison for `SERVICE_TOPOLOGY` attributes
     *
     * @deprecated You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTopologyComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionServiceTopologyComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     *
     * @deprecated You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
     */
    serviceTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionServiceTypeComparison>[]>;
    /**
     * Comparison for `SERVICE_TYPE` attributes
     */
    serviceTypes?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionServiceType>[]>;
    /**
     * Comparison for `SIMPLE_HOST_TECH` attributes
     *
     * @deprecated You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleHostTechComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionSimpleHostTechComparison>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     *
     * @deprecated You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
     */
    simpleTechComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionSimpleTechComparison>[]>;
    /**
     * Comparison for `STRING` attributes
     *
     * @deprecated You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
     */
    stringComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionStringComparison>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     *
     * @deprecated 'string_condition_key' is deprecated. You should use 'string_key'
     */
    stringConditionKeys?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionStringConditionKey>[]>;
    /**
     * The key for dynamic attributes of the `STRING` type
     */
    stringKeys?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionStringKey>[]>;
    /**
     * Comparison for `STRING` attributes
     */
    strings?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionString>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     *
     * @deprecated You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
     */
    syntheticEngineTypeComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionSyntheticEngineTypeComparison>[]>;
    /**
     * Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
     */
    syntheticEngines?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionSyntheticEngine>[]>;
    /**
     * Comparison for `TAG` attributes
     *
     * @deprecated You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
     */
    tagComparisons?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionTagComparison>[]>;
    /**
     * Comparison for `TAG` attributes
     */
    tags?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionTag>[]>;
    /**
     * Comparison for `SIMPLE_TECH` attributes
     */
    teches?: pulumi.Input<pulumi.Input<inputs.ServiceNamingConditionConditionTech>[]>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionApplicationType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionAzureComputeMode {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionAzureComputeModeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are DEDICATED or SHARED.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionAzureSkuComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be AZURE_SKU
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionAzureSkus {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionBaseComparisonBasic {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionBaseConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionBitness {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionBitnessComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be BITNESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are 32 and 64.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCloudType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCloudTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CLOUD_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * The type of comparison
     */
    type: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomApplicationType {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomApplicationTypeComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be CUSTOM_APPLICATION_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomHostMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ServiceNamingConditionConditionCustomHostMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomHostMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be HOST_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomHostMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ServiceNamingConditionConditionCustomProcessMetadataDynamicKey>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
     */
    dynamicKey: pulumi.Input<inputs.ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey>;
    /**
     * if specified, needs to be PROCESS_CUSTOM_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionCustomProcessMetadataDynamicKey {
    /**
     * The actual key of the custom metadata
     */
    key: pulumi.Input<string>;
    /**
     * The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
     */
    source: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionDatabaseTopology {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionDatabaseTopologyComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DATABASE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionDcrumDecoder {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionDcrumDecoderComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be DCRUM_DECODER_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionEntity {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionEntityIdComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be ENTITY_ID
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionHostTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ServiceNamingConditionConditionHostTechValue>;
}

export interface ServiceNamingConditionConditionHostTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionHypervisor {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionHypervisorTypeComparision {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be HYPERVISOR_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionIndexedName {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionIndexedNameComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_NAME
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionIndexedString {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionIndexedStringComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionIndexedTag {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ServiceNamingConditionConditionIndexedTagValue>;
}

export interface ServiceNamingConditionConditionIndexedTagComparison {
    /**
     * Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INDEXED_TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ServiceNamingConditionConditionIndexedTagComparisonValue>;
}

export interface ServiceNamingConditionConditionIndexedTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionIndexedTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionInteger {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface ServiceNamingConditionConditionIntegerComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be INTEGER
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<number>;
}

export interface ServiceNamingConditionConditionIpaddress {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionIpaddressComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be IP_ADDRESS
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * Defines the actual set of fields depending on the value
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionMobilePlatform {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionMobilePlatformComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be MOBILE_PLATFORM
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionOsArch {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionOsType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionOsarchitectureComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_ARCHITECTURE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionOstypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be OS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionPaasType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionPaasTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be PAAS_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionProcessMetadata {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionProcessMetadataConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be PROCESS_PREDEFINED_METADATA_KEY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionServiceTopology {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionServiceTopologyComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TOPOLOGY
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionServiceType {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionServiceTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SERVICE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionSimpleHostTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_HOST_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ServiceNamingConditionConditionSimpleHostTechComparisonValue>;
}

export interface ServiceNamingConditionConditionSimpleHostTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionSimpleTechComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SIMPLE_TECH
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ServiceNamingConditionConditionSimpleTechComparisonValue>;
}

export interface ServiceNamingConditionConditionSimpleTechComparisonValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionString {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionStringComparison {
    /**
     * The comparison is case-sensitive (`true`) or insensitive (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be STRING
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionStringConditionKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * if specified, needs to be `STRING`
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionStringKey {
    /**
     * The attribute to be used for comparision
     */
    attribute: pulumi.Input<string>;
    /**
     * The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
     *    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
     *    - `AMAZON_ECR_IMAGE_REGION`
     *    - `AMAZON_LAMBDA_FUNCTION_NAME`
     *    - `AMAZON_REGION`
     *    - `APACHE_CONFIG_PATH`
     *    - `APACHE_SPARK_MASTER_IP_ADDRESS`
     *    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
     *    - `AWS_ECS_CLUSTER`
     *    - `AWS_ECS_CONTAINERNAME`
     *    - `AWS_ECS_FAMILY`
     *    - `AWS_ECS_REVISION`
     *    - `CASSANDRA_CLUSTER_NAME`
     *    - `CATALINA_BASE`
     *    - `CATALINA_HOME`
     *    - `CLOUD_FOUNDRY_APP_ID`
     *    - `CLOUD_FOUNDRY_APP_NAME`
     *    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
     *    - `CLOUD_FOUNDRY_SPACE_ID`
     *    - `CLOUD_FOUNDRY_SPACE_NAME`
     *    - `COLDFUSION_JVM_CONFIG_FILE`
     *    - `COLDFUSION_SERVICE_NAME`
     *    - `COMMAND_LINE_ARGS`
     *    - `DOTNET_COMMAND`
     *    - `DOTNET_COMMAND_PATH`
     *    - `DYNATRACE_CLUSTER_ID`
     *    - `DYNATRACE_NODE_ID`
     *    - `ELASTICSEARCH_CLUSTER_NAME`
     *    - `ELASTICSEARCH_NODE_NAME`
     *    - `EQUINOX_CONFIG_PATH`
     *    - `EXE_NAME`
     *    - `EXE_PATH`
     *    - `GLASS_FISH_DOMAIN_NAME`
     *    - `GLASS_FISH_INSTANCE_NAME`
     *    - `GOOGLE_APP_ENGINE_INSTANCE`
     *    - `GOOGLE_APP_ENGINE_SERVICE`
     *    - `GOOGLE_CLOUD_PROJECT`
     *    - `HYBRIS_BIN_DIRECTORY`
     *    - `HYBRIS_CONFIG_DIRECTORY`
     *    - `HYBRIS_DATA_DIRECTORY`
     *    - `IBM_CICS_REGION`
     *    - `IBM_CTG_NAME`
     *    - `IBM_IMS_CONNECT_REGION`
     *    - `IBM_IMS_CONTROL_REGION`
     *    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
     *    - `IBM_IMS_SOAP_GW_NAME`
     *    - `IBM_INTEGRATION_NODE_NAME`
     *    - `IBM_INTEGRATION_SERVER_NAME`
     *    - `IIS_APP_POOL`
     *    - `IIS_ROLE_NAME`
     *    - `JAVA_JAR_FILE`
     *    - `JAVA_JAR_PATH`
     *    - `JAVA_MAIN_CLASS`
     *    - `JAVA_MAIN_MODULE`
     *    - `JBOSS_HOME`
     *    - `JBOSS_MODE`
     *    - `JBOSS_SERVER_NAME`
     *    - `KUBERNETES_BASE_POD_NAME`
     *    - `KUBERNETES_CONTAINER_NAME`
     *    - `KUBERNETES_FULL_POD_NAME`
     *    - `KUBERNETES_NAMESPACE`
     *    - `KUBERNETES_POD_UID`
     *    - `MSSQL_INSTANCE_NAME`
     *    - `NODE_JS_APP_BASE_DIRECTORY`
     *    - `NODE_JS_APP_NAME`
     *    - `NODE_JS_SCRIPT_NAME`
     *    - `ORACLE_SID`
     *    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
     *    - `PHP_SCRIPT_PATH`
     *    - `PHP_WORKING_DIRECTORY`
     *    - `RUBY_APP_ROOT_PATH`
     *    - `RUBY_SCRIPT_PATH`
     *    - `RULE_RESULT`
     *    - `SOFTWAREAG_INSTALL_ROOT`
     *    - `SOFTWAREAG_PRODUCTPROPNAME`
     *    - `SPRINGBOOT_APP_NAME`
     *    - `SPRINGBOOT_PROFILE_NAME`
     *    - `SPRINGBOOT_STARTUP_CLASS`
     *    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
     *    - `TIBCO_BUSINESSWORKS_CE_VERSION`
     *    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
     *    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
     *    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
     *    - `TIBCO_BUSINESS_WORKS_HOME`
     *    - `VARNISH_INSTANCE_NAME`
     *    - `WEB_LOGIC_CLUSTER_NAME`
     *    - `WEB_LOGIC_DOMAIN_NAME`
     *    - `WEB_LOGIC_HOME`
     *    - `WEB_LOGIC_NAME`
     *    - `WEB_SPHERE_CELL_NAME`
     *    - `WEB_SPHERE_CLUSTER_NAME`
     *    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
     */
    dynamicKey: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionSyntheticEngine {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionSyntheticEngineTypeComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be SYNTHETIC_ENGINE_TYPE
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to. Possible values are CLASSIC and CUSTOM
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionTag {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ServiceNamingConditionConditionTagValue>;
}

export interface ServiceNamingConditionConditionTagComparison {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * if specified, needs to be TAG
     *
     * @deprecated The value of the attribute type is implicit, therefore shouldn't get specified
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Tag of a Dynatrace entity
     */
    value?: pulumi.Input<inputs.ServiceNamingConditionConditionTagComparisonValue>;
}

export interface ServiceNamingConditionConditionTagComparisonValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionTagValue {
    /**
     * The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
     */
    context: pulumi.Input<string>;
    /**
     * The key of the tag. Custom tags have the tag value here
     */
    key: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value of the tag. Not applicable to custom tags
     */
    value?: pulumi.Input<string>;
}

export interface ServiceNamingConditionConditionTech {
    /**
     * Reverses the operator. For example it turns the **begins with** into **does not begin with**
     */
    negate?: pulumi.Input<boolean>;
    /**
     * Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
     */
    operator: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * The value to compare to
     */
    value?: pulumi.Input<inputs.ServiceNamingConditionConditionTechValue>;
}

export interface ServiceNamingConditionConditionTechValue {
    /**
     * Predefined technology, if technology is not predefined, then the verbatim type must be set.
     */
    type?: pulumi.Input<string>;
    /**
     * Any attributes that aren't yet supported by this provider
     */
    unknowns?: pulumi.Input<string>;
    /**
     * Non-predefined technology, use for custom technologies
     */
    verbatimType?: pulumi.Input<string>;
}

export interface SessionReplayWebPrivacyMaskingPresets {
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
     */
    playbackMaskingAllowListRules?: pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
     */
    playbackMaskingBlockListRules?: pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`
     */
    playbackMaskingPreset: pulumi.Input<string>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
     */
    recordingMaskingAllowListRules?: pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
     */
    recordingMaskingBlockListRules?: pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`
     */
    recordingMaskingPreset: pulumi.Input<string>;
}

export interface SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules {
    allowListRules: pulumi.Input<pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule>[]>;
}

export interface SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule {
    /**
     * Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
     */
    attributeExpression?: pulumi.Input<string>;
    /**
     * Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
     */
    cssExpression?: pulumi.Input<string>;
    /**
     * Possible Values: `ATTRIBUTE`, `ELEMENT`
     */
    target: pulumi.Input<string>;
}

export interface SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules {
    blockListRules: pulumi.Input<pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule>[]>;
}

export interface SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule {
    /**
     * Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
     */
    attributeExpression?: pulumi.Input<string>;
    /**
     * Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
     */
    cssExpression?: pulumi.Input<string>;
    /**
     * Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
     */
    hideUserInteraction?: pulumi.Input<boolean>;
    /**
     * Possible Values: `ELEMENT`, `ATTRIBUTE`
     */
    target: pulumi.Input<string>;
}

export interface SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules {
    allowListRules: pulumi.Input<pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule>[]>;
}

export interface SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule {
    /**
     * Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
     */
    attributeExpression?: pulumi.Input<string>;
    /**
     * Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
     */
    cssExpression?: pulumi.Input<string>;
    /**
     * Possible Values: `ATTRIBUTE`, `ELEMENT`
     */
    target: pulumi.Input<string>;
}

export interface SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules {
    blockListRules: pulumi.Input<pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule>[]>;
}

export interface SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule {
    /**
     * Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
     */
    attributeExpression?: pulumi.Input<string>;
    /**
     * Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
     */
    cssExpression?: pulumi.Input<string>;
    /**
     * Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
     */
    hideUserInteraction?: pulumi.Input<boolean>;
    /**
     * Possible Values: `ELEMENT`, `ATTRIBUTE`
     */
    target: pulumi.Input<string>;
}

export interface SiteReliabilityGuardianObjectives {
    objectives: pulumi.Input<pulumi.Input<inputs.SiteReliabilityGuardianObjectivesObjective>[]>;
}

export interface SiteReliabilityGuardianObjectivesObjective {
    /**
     * Enable auto adaptive threshold
     */
    autoAdaptiveThresholdEnabled?: pulumi.Input<boolean>;
    /**
     * Possible Values: `GREATER_THAN_OR_EQUAL`, `LESS_THAN_OR_EQUAL`
     */
    comparisonOperator: pulumi.Input<string>;
    /**
     * no documentation available
     */
    description?: pulumi.Input<string>;
    /**
     * DQL query
     */
    dqlQuery?: pulumi.Input<string>;
    /**
     * Objective name
     */
    name: pulumi.Input<string>;
    /**
     * Possible Values: `DQL`, `REFERENCE_SLO`
     */
    objectiveType: pulumi.Input<string>;
    /**
     * Please enter the metric key of your desired SLO. SLO metric keys have to start with 'func:slo.'
     */
    referenceSlo?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    target?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    warning?: pulumi.Input<number>;
}

export interface SiteReliabilityGuardianVariables {
    variables: pulumi.Input<pulumi.Input<inputs.SiteReliabilityGuardianVariablesVariable>[]>;
}

export interface SiteReliabilityGuardianVariablesVariable {
    /**
     * Value
     */
    definition: pulumi.Input<string>;
    /**
     * no documentation available
     */
    name: pulumi.Input<string>;
}

export interface SloErrorBudgetBurnRate {
    /**
     * The error budget burn rate calculation is enabled (true) or disabled (false).
     */
    burnRateVisualizationEnabled?: pulumi.Input<boolean>;
    /**
     * The threshold between a slow and a fast burn rate.
     */
    fastBurnThreshold?: pulumi.Input<number>;
}

export interface SloV2ErrorBudgetBurnRate {
    /**
     * Burn rate visualization enabled
     */
    burnRateVisualizationEnabled: pulumi.Input<boolean>;
    /**
     * The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
     */
    fastBurnThreshold?: pulumi.Input<number>;
}

export interface SpanCaptureRuleMatches {
    /**
     * Matching strategies for the Span
     */
    matches: pulumi.Input<pulumi.Input<inputs.SpanCaptureRuleMatchesMatch>[]>;
}

export interface SpanCaptureRuleMatchesMatch {
    /**
     * Whether to match strings case sensitively or not
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
     */
    comparison: pulumi.Input<string>;
    /**
     * The name of the attribute if `source` is `ATTRIBUTE`
     */
    key?: pulumi.Input<string>;
    /**
     * What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
     */
    source: pulumi.Input<string>;
    /**
     * The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
     */
    value?: pulumi.Input<string>;
}

export interface SpanContextPropagationMatches {
    /**
     * Matching strategies for the Span
     */
    matches: pulumi.Input<pulumi.Input<inputs.SpanContextPropagationMatchesMatch>[]>;
}

export interface SpanContextPropagationMatchesMatch {
    /**
     * Whether to match strings case sensitively or not
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
     */
    comparison: pulumi.Input<string>;
    /**
     * The name of the attribute if `source` is `ATTRIBUTE`
     */
    key?: pulumi.Input<string>;
    /**
     * What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
     */
    source: pulumi.Input<string>;
    /**
     * The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
     */
    value?: pulumi.Input<string>;
}

export interface SpanEntryPointMatches {
    /**
     * Matching strategies for the Span
     */
    matches: pulumi.Input<pulumi.Input<inputs.SpanEntryPointMatchesMatch>[]>;
}

export interface SpanEntryPointMatchesMatch {
    /**
     * Whether to match strings case sensitively or not
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
     */
    comparison: pulumi.Input<string>;
    /**
     * The name of the attribute if `source` is `ATTRIBUTE`
     */
    key?: pulumi.Input<string>;
    /**
     * What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
     */
    source: pulumi.Input<string>;
    /**
     * The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
     */
    value?: pulumi.Input<string>;
}

export interface UpdateWindowsDailyRecurrence {
    /**
     * Every **X** days:
     * * `1` = every day,
     * * `2` = every two days,
     * * `3` = every three days,
     * * etc.
     */
    every: pulumi.Input<number>;
    /**
     * Recurrence range
     */
    recurrenceRange: pulumi.Input<inputs.UpdateWindowsDailyRecurrenceRecurrenceRange>;
    /**
     * Update time
     */
    updateTime: pulumi.Input<inputs.UpdateWindowsDailyRecurrenceUpdateTime>;
}

export interface UpdateWindowsDailyRecurrenceRecurrenceRange {
    /**
     * no documentation available
     */
    end: pulumi.Input<string>;
    /**
     * no documentation available
     */
    start: pulumi.Input<string>;
}

export interface UpdateWindowsDailyRecurrenceUpdateTime {
    /**
     * Duration (minutes)
     */
    duration: pulumi.Input<number>;
    /**
     * Start time (24-hour clock)
     */
    startTime: pulumi.Input<string>;
    /**
     * Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
     */
    timeZone: pulumi.Input<string>;
}

export interface UpdateWindowsMonthlyRecurrence {
    /**
     * Every **X** months:
     * * `1` = every month,
     * * `2` = every two months,
     * * `3` = every three months,
     * * etc.
     */
    every: pulumi.Input<number>;
    /**
     * Recurrence range
     */
    recurrenceRange: pulumi.Input<inputs.UpdateWindowsMonthlyRecurrenceRecurrenceRange>;
    /**
     * Day of the month
     */
    selectedMonthDay: pulumi.Input<number>;
    /**
     * Update time
     */
    updateTime: pulumi.Input<inputs.UpdateWindowsMonthlyRecurrenceUpdateTime>;
}

export interface UpdateWindowsMonthlyRecurrenceRecurrenceRange {
    /**
     * no documentation available
     */
    end: pulumi.Input<string>;
    /**
     * no documentation available
     */
    start: pulumi.Input<string>;
}

export interface UpdateWindowsMonthlyRecurrenceUpdateTime {
    /**
     * Duration (minutes)
     */
    duration: pulumi.Input<number>;
    /**
     * Start time (24-hour clock)
     */
    startTime: pulumi.Input<string>;
    /**
     * Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
     */
    timeZone: pulumi.Input<string>;
}

export interface UpdateWindowsOnceRecurrence {
    /**
     * Update time
     */
    recurrenceRange: pulumi.Input<inputs.UpdateWindowsOnceRecurrenceRecurrenceRange>;
}

export interface UpdateWindowsOnceRecurrenceRecurrenceRange {
    /**
     * no documentation available
     */
    end: pulumi.Input<string>;
    /**
     * no documentation available
     */
    start: pulumi.Input<string>;
}

export interface UpdateWindowsWeeklyRecurrence {
    /**
     * Every **X** weeks:
     * * `1` = every week,
     * * `2` = every two weeks,
     * * `3` = every three weeks,
     * * etc.
     */
    every: pulumi.Input<number>;
    /**
     * Recurrence range
     */
    recurrenceRange: pulumi.Input<inputs.UpdateWindowsWeeklyRecurrenceRecurrenceRange>;
    /**
     * Day of the week
     */
    selectedWeekDays: pulumi.Input<inputs.UpdateWindowsWeeklyRecurrenceSelectedWeekDays>;
    /**
     * Update time
     */
    updateTime: pulumi.Input<inputs.UpdateWindowsWeeklyRecurrenceUpdateTime>;
}

export interface UpdateWindowsWeeklyRecurrenceRecurrenceRange {
    /**
     * no documentation available
     */
    end: pulumi.Input<string>;
    /**
     * no documentation available
     */
    start: pulumi.Input<string>;
}

export interface UpdateWindowsWeeklyRecurrenceSelectedWeekDays {
    /**
     * no documentation available
     */
    friday: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    monday: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    saturday: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    sunday: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    thursday: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    tuesday: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    wednesday: pulumi.Input<boolean>;
}

export interface UpdateWindowsWeeklyRecurrenceUpdateTime {
    /**
     * Duration (minutes)
     */
    duration: pulumi.Input<number>;
    /**
     * Start time (24-hour clock)
     */
    startTime: pulumi.Input<string>;
    /**
     * Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
     */
    timeZone: pulumi.Input<string>;
}

export interface UrlBasedSamplingQueryParameters {
    parameters: pulumi.Input<pulumi.Input<inputs.UrlBasedSamplingQueryParametersParameter>[]>;
}

export interface UrlBasedSamplingQueryParametersParameter {
    /**
     * Query parameter name
     */
    name: pulumi.Input<string>;
    /**
     * Query parameter value
     */
    value?: pulumi.Input<string>;
    /**
     * Query parameter value is undefined
     */
    valueIsUndefined?: pulumi.Input<boolean>;
}

export interface UserActionMetricsFilters {
    filters: pulumi.Input<pulumi.Input<inputs.UserActionMetricsFiltersFilter>[]>;
}

export interface UserActionMetricsFiltersFilter {
    /**
     * Field name
     */
    fieldName: pulumi.Input<string>;
    /**
     * Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`
     */
    operator: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value?: pulumi.Input<string>;
    /**
     * Values
     */
    valueIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface UserActionMetricsValue {
    /**
     * Field name
     */
    fieldName?: pulumi.Input<string>;
    /**
     * Possible Values: `COUNTER`, `FIELD`
     */
    type: pulumi.Input<string>;
}

export interface UserGroupPermissions {
    /**
     * A permission granted to one or multiple environments
     */
    grants: pulumi.Input<pulumi.Input<inputs.UserGroupPermissionsGrant>[]>;
}

export interface UserGroupPermissionsGrant {
    /**
     * The ids of the environments this permission grants the user access to.
     */
    environments?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The permission. Possible values are `VIEWER`, `MANAGE_SETTINGS`, `AGENT_INSTALL`, `LOG_VIEWER`, `VIEW_SENSITIVE_REQUEST_DATA`, `CONFIGURE_REQUEST_CAPTURE_DATA`, `REPLAY_SESSION_DATA`, `REPLAY_SESSION_DATA_WITHOUT_MASKING`, `MANAGE_SECURITY_PROBLEMS` and `MANAGE_SUPPORT_TICKETS`.
     */
    permission: pulumi.Input<string>;
}

export interface UserSessionMetricsFilters {
    filters: pulumi.Input<pulumi.Input<inputs.UserSessionMetricsFiltersFilter>[]>;
}

export interface UserSessionMetricsFiltersFilter {
    /**
     * Field name
     */
    fieldName: pulumi.Input<string>;
    /**
     * Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`
     */
    operator: pulumi.Input<string>;
    /**
     * no documentation available
     */
    value?: pulumi.Input<string>;
    /**
     * Values
     */
    valueIns?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface UserSessionMetricsValue {
    /**
     * Field name
     */
    fieldName?: pulumi.Input<string>;
    /**
     * Possible Values: `COUNTER`, `FIELD`
     */
    type: pulumi.Input<string>;
}

export interface VmwareAnomaliesDroppedPacketsDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.VmwareAnomaliesDroppedPacketsDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface VmwareAnomaliesDroppedPacketsDetectionCustomThresholds {
    /**
     * Receive/transmit dropped packets rate on NIC is higher than
     */
    droppedPacketsPerSecond: pulumi.Input<number>;
}

export interface VmwareAnomaliesEsxiHighCpuDetection {
    /**
     * Alert if **all three** conditions are met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds {
    /**
     * At least one peak occurred when Hypervisor CPU usage was higher than
     */
    cpuPeakPercentage: pulumi.Input<number>;
    /**
     * CPU usage is higher than
     */
    cpuUsagePercentage: pulumi.Input<number>;
    /**
     * VM CPU ready is higher than
     */
    vmCpuReadyPercentage: pulumi.Input<number>;
}

export interface VmwareAnomaliesEsxiHighMemoryDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds {
    /**
     * ESXi host swap IN/OUT or compression/decompression rate is higher than
     */
    compressionDecompressionRate: pulumi.Input<number>;
}

export interface VmwareAnomaliesGuestCpuLimitDetection {
    /**
     * Alert if **all three** conditions are met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds {
    /**
     * Hypervisor CPU usage is higher than
     */
    hostCpuUsagePercentage: pulumi.Input<number>;
    /**
     * VM CPU ready is higher than
     */
    vmCpuReadyPercentage: pulumi.Input<number>;
    /**
     * VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than
     */
    vmCpuUsagePercentage: pulumi.Input<number>;
}

export interface VmwareAnomaliesLowDatastoreSpaceDetection {
    /**
     * Alert if the condition is met in 1 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds {
    /**
     * Datastore free space is lower than
     */
    freeSpacePercentage: pulumi.Input<number>;
}

export interface VmwareAnomaliesOverloadedStorageDetection {
    /**
     * Alert if the condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.VmwareAnomaliesOverloadedStorageDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface VmwareAnomaliesOverloadedStorageDetectionCustomThresholds {
    /**
     * Number of command aborts is higher than
     */
    commandAbortsNumber: pulumi.Input<number>;
}

export interface VmwareAnomaliesSlowPhysicalStorageDetection {
    /**
     * Alert if **any** condition is met in 4 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds {
    /**
     * Read/write latency is higher than
     */
    avgReadWriteLatency: pulumi.Input<number>;
    /**
     * Peak value for read/write latency is higher than
     */
    peakReadWriteLatency: pulumi.Input<number>;
}

export interface VmwareAnomaliesUndersizedStorageDetection {
    /**
     * Alert if **any** condition is met in 3 out of 5 samples
     */
    customThresholds?: pulumi.Input<inputs.VmwareAnomaliesUndersizedStorageDetectionCustomThresholds>;
    /**
     * Possible Values: `Auto`, `Custom`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface VmwareAnomaliesUndersizedStorageDetectionCustomThresholds {
    /**
     * Average queue command latency is higher than
     */
    averageQueueCommandLatency: pulumi.Input<number>;
    /**
     * Peak queue command latency is higher than
     */
    peakQueueCommandLatency: pulumi.Input<number>;
}

export interface VulnerabilityCodeCriteria {
    /**
     * Process group
     */
    processGroup?: pulumi.Input<string>;
}

export interface VulnerabilityCodeMetadata {
    /**
     * no documentation available
     */
    comment: pulumi.Input<string>;
}

export interface VulnerabilityCodeVulnerabilityDetectionControl {
    /**
     * Possible Values: `MONITORING_OFF`, `MONITORING_ON`
     */
    monitoringMode: pulumi.Input<string>;
}

export interface VulnerabilitySettingsTechnologies {
    /**
     * NET
     */
    enableDotNet: pulumi.Input<boolean>;
    /**
     * NET runtimes
     */
    enableDotNetRuntime?: pulumi.Input<boolean>;
    /**
     * Go
     */
    enableGo: pulumi.Input<boolean>;
    /**
     * Java
     */
    enableJava: pulumi.Input<boolean>;
    /**
     * Java runtimes
     */
    enableJavaRuntime?: pulumi.Input<boolean>;
    /**
     * Kubernetes
     */
    enableKubernetes: pulumi.Input<boolean>;
    /**
     * Node.js
     */
    enableNodeJs: pulumi.Input<boolean>;
    /**
     * Node.js runtimes
     */
    enableNodeJsRuntime?: pulumi.Input<boolean>;
    /**
     * PHP
     */
    enablePhp: pulumi.Input<boolean>;
}

export interface WebAppAnomaliesErrorRate {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
     */
    errorRateAuto?: pulumi.Input<inputs.WebAppAnomaliesErrorRateErrorRateAuto>;
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    errorRateDetectionMode?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    errorRateFixed?: pulumi.Input<inputs.WebAppAnomaliesErrorRateErrorRateFixed>;
}

export interface WebAppAnomaliesErrorRateErrorRateAuto {
    /**
     * Absolute threshold
     */
    absoluteIncrease: pulumi.Input<number>;
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection>;
    /**
     * Relative threshold
     */
    relativeIncrease: pulumi.Input<number>;
}

export interface WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection {
    /**
     * Only alert if there are at least
     */
    actionsPerMinute: pulumi.Input<number>;
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
}

export interface WebAppAnomaliesErrorRateErrorRateFixed {
    /**
     * To avoid over-alerting for low traffic applications
     */
    errorRateReqPerMin: pulumi.Input<number>;
    /**
     * Possible Values: `Low`, `Medium`, `High`
     */
    errorRateSensitivity: pulumi.Input<string>;
    /**
     * Alert if this custom error rate threshold is exceeded during any 5-minute-period
     */
    maxFailureRateIncrease: pulumi.Input<number>;
    /**
     * Amount of minutes the observed traffic has to stay in abnormal state before alert
     */
    minutesAbnormalState: pulumi.Input<number>;
}

export interface WebAppAnomaliesResponseTime {
    /**
     * Possible Values: `Auto`, `Fixed`
     */
    detectionMode?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    responseTimeAuto?: pulumi.Input<inputs.WebAppAnomaliesResponseTimeResponseTimeAuto>;
    /**
     * no documentation available
     */
    responseTimeFixed?: pulumi.Input<inputs.WebAppAnomaliesResponseTimeResponseTimeFixed>;
}

export interface WebAppAnomaliesResponseTimeResponseTimeAuto {
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection>;
    /**
     * Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:
     */
    responseTimeAll: pulumi.Input<inputs.WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll>;
    /**
     * Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
     */
    responseTimeSlowest: pulumi.Input<inputs.WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest>;
}

export interface WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection {
    /**
     * Only alert if there are at least
     */
    actionsPerMinute: pulumi.Input<number>;
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
}

export interface WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll {
    /**
     * Absolute threshold
     */
    degradationMilliseconds: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    degradationPercent: pulumi.Input<number>;
}

export interface WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest {
    /**
     * Absolute threshold
     */
    slowestDegradationMilliseconds: pulumi.Input<number>;
    /**
     * Relative threshold
     */
    slowestDegradationPercent: pulumi.Input<number>;
}

export interface WebAppAnomaliesResponseTimeResponseTimeFixed {
    /**
     * Avoid over-alerting
     */
    overAlertingProtection: pulumi.Input<inputs.WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection>;
    /**
     * Alert if the key performance metric of all requests degrades beyond this threshold:
     */
    responseTimeAll: pulumi.Input<inputs.WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll>;
    /**
     * Alert if the key performance metric of the slowest 10% of requests degrades beyond this threshold:
     */
    responseTimeSlowest: pulumi.Input<inputs.WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest>;
    /**
     * Possible Values: `Medium`, `High`, `Low`
     */
    sensitivity: pulumi.Input<string>;
}

export interface WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection {
    /**
     * Only alert if there are at least
     */
    actionsPerMinute: pulumi.Input<number>;
    /**
     * Only alert if the abnormal state remains for at least
     */
    minutesAbnormalState: pulumi.Input<number>;
}

export interface WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll {
    /**
     * Alert if the key performance metric degrades beyond this many ms within an observation period of 5 minutes
     */
    degradationMilliseconds: pulumi.Input<number>;
}

export interface WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest {
    /**
     * Alert if the key performance metric of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
     */
    slowestDegradationMilliseconds: pulumi.Input<number>;
}

export interface WebAppAnomaliesTrafficDrops {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Dynatrace learns your typical application traffic over an observation period of one week.
     */
    trafficDrops?: pulumi.Input<inputs.WebAppAnomaliesTrafficDropsTrafficDrops>;
}

export interface WebAppAnomaliesTrafficDropsTrafficDrops {
    /**
     * Minutes the observed traffic has to stay in abnormal state before alert
     */
    abnormalStateAbnormalState: pulumi.Input<number>;
    /**
     * Alert if the observed traffic is less than this percentage of the expected value
     */
    trafficDropPercentage: pulumi.Input<number>;
}

export interface WebAppAnomaliesTrafficSpikes {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Dynatrace learns your typical application traffic over an observation period of one week.
     */
    trafficSpikes?: pulumi.Input<inputs.WebAppAnomaliesTrafficSpikesTrafficSpikes>;
}

export interface WebAppAnomaliesTrafficSpikesTrafficSpikes {
    /**
     * Minutes an application has to stay in abnormal state before alert
     */
    minutesAbnormalState: pulumi.Input<number>;
    /**
     * Alert if the observed traffic is more than this percentage of the expected value
     */
    trafficSpikePercentage: pulumi.Input<number>;
}

export interface WebAppCustomErrorsErrorRules {
    errorRules: pulumi.Input<pulumi.Input<inputs.WebAppCustomErrorsErrorRulesErrorRule>[]>;
}

export interface WebAppCustomErrorsErrorRulesErrorRule {
    /**
     * Capture settings
     */
    captureSettings: pulumi.Input<inputs.WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings>;
    /**
     * Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
     */
    keyMatcher: pulumi.Input<string>;
    /**
     * A case-insensitive key pattern
     */
    keyPattern?: pulumi.Input<string>;
    /**
     * Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
     */
    valueMatcher: pulumi.Input<string>;
    /**
     * A case-insensitive value pattern
     */
    valuePattern?: pulumi.Input<string>;
}

export interface WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings {
    /**
     * Capture this error
     */
    capture: pulumi.Input<boolean>;
    /**
     * [View more details](https://dt-url.net/hd580p2k)
     */
    considerForAi?: pulumi.Input<boolean>;
    /**
     * Include error in Apdex calculations
     */
    impactApdex?: pulumi.Input<boolean>;
}

export interface WebAppEnablementRum {
    /**
     * (Field has overlap with `dynatrace.WebApplication`) Percentage of user sessions captured and analyzed
     */
    costAndTrafficControl: pulumi.Input<number>;
    /**
     * (Field has overlap with `dynatrace.WebApplication`) This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface WebAppEnablementSessionReplay {
    /**
     * (Field has overlap with `dynatrace.WebApplication`) [Percentage of user sessions recorded with Session Replay](https://dt-url.net/sr-cost-traffic-control). For example, if you have 50% for RUM and 50% for Session Replay, it results in 25% of sessions recorded with Session Replay.
     */
    costAndTrafficControl: pulumi.Input<number>;
    /**
     * (Field has overlap with `dynatrace.WebApplication`) This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
}

export interface WebAppKeyPerformanceCustomThresholds {
    /**
     * If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
     */
    frustratingThresholdSeconds: pulumi.Input<number>;
    /**
     * If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
     */
    toleratedThresholdSeconds: pulumi.Input<number>;
}

export interface WebAppKeyPerformanceLoadFallbackThresholds {
    /**
     * If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
     */
    frustratingFallbackThresholdSeconds: pulumi.Input<number>;
    /**
     * If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
     */
    toleratedFallbackThresholdSeconds: pulumi.Input<number>;
}

export interface WebAppKeyPerformanceLoadThresholds {
    /**
     * If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
     */
    frustratingThresholdSeconds: pulumi.Input<number>;
    /**
     * If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
     */
    toleratedThresholdSeconds: pulumi.Input<number>;
}

export interface WebAppKeyPerformanceXhrFallbackThresholds {
    /**
     * If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
     */
    frustratingFallbackThresholdSeconds: pulumi.Input<number>;
    /**
     * If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
     */
    toleratedFallbackThresholdSeconds: pulumi.Input<number>;
}

export interface WebAppKeyPerformanceXhrThresholds {
    /**
     * If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
     */
    frustratingThresholdSeconds: pulumi.Input<number>;
    /**
     * If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
     */
    toleratedThresholdSeconds: pulumi.Input<number>;
}

export interface WebAppRequestErrorsErrorRules {
    errorRules: pulumi.Input<pulumi.Input<inputs.WebAppRequestErrorsErrorRulesErrorRule>[]>;
}

export interface WebAppRequestErrorsErrorRulesErrorRule {
    /**
     * Capture settings
     */
    captureSettings: pulumi.Input<inputs.WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings>;
    /**
     * Match by errors that have CSP violations
     */
    considerCspViolations: pulumi.Input<boolean>;
    /**
     * Match by errors that have failed image requests
     */
    considerFailedImages: pulumi.Input<boolean>;
    /**
     * Match by error code
     */
    errorCodes?: pulumi.Input<string>;
    /**
     * Filter settings
     */
    filterSettings: pulumi.Input<inputs.WebAppRequestErrorsErrorRulesErrorRuleFilterSettings>;
}

export interface WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings {
    /**
     * Capture this error
     */
    capture: pulumi.Input<boolean>;
    /**
     * [View more details](https://dt-url.net/hd580p2k)
     */
    considerForAi?: pulumi.Input<boolean>;
    /**
     * Include error in Apdex calculations
     */
    impactApdex?: pulumi.Input<boolean>;
}

export interface WebAppRequestErrorsErrorRulesErrorRuleFilterSettings {
    /**
     * Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
     */
    filter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    url?: pulumi.Input<string>;
}

export interface WebApplicationConversionGoals {
    /**
     * A conversion goal of the application
     */
    goals: pulumi.Input<pulumi.Input<inputs.WebApplicationConversionGoalsGoal>[]>;
}

export interface WebApplicationConversionGoalsGoal {
    /**
     * Configuration of a destination-based conversion goal
     */
    destination?: pulumi.Input<inputs.WebApplicationConversionGoalsGoalDestination>;
    /**
     * The ID of conversion goal.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the conversion goal. Valid length within 1 and 50 characters.
     */
    name: pulumi.Input<string>;
    /**
     * The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
     */
    type?: pulumi.Input<string>;
    /**
     * Configuration of a destination-based conversion goal
     */
    userAction?: pulumi.Input<inputs.WebApplicationConversionGoalsGoalUserAction>;
    /**
     * Configuration of a destination-based conversion goal
     */
    visitDuration?: pulumi.Input<inputs.WebApplicationConversionGoalsGoalVisitDuration>;
    /**
     * Configuration of a destination-based conversion goal
     */
    visitNumAction?: pulumi.Input<inputs.WebApplicationConversionGoalsGoalVisitNumAction>;
}

export interface WebApplicationConversionGoalsGoalDestination {
    /**
     * The match is case-sensitive (`true`) or (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
     */
    matchType?: pulumi.Input<string>;
    /**
     * The path to be reached to hit the conversion goal
     */
    urlOrPath: pulumi.Input<string>;
}

export interface WebApplicationConversionGoalsGoalUserAction {
    /**
     * Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
     */
    actionType?: pulumi.Input<string>;
    /**
     * The match is case-sensitive (`true`) or (`false`)
     */
    caseSensitive?: pulumi.Input<boolean>;
    /**
     * The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
     */
    matchEntity?: pulumi.Input<string>;
    /**
     * The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
     */
    matchType?: pulumi.Input<string>;
    /**
     * The value to be matched to hit the conversion goal
     */
    value?: pulumi.Input<string>;
}

export interface WebApplicationConversionGoalsGoalVisitDuration {
    /**
     * The duration of session to hit the conversion goal, in milliseconds
     */
    duration: pulumi.Input<number>;
}

export interface WebApplicationConversionGoalsGoalVisitNumAction {
    /**
     * The number of user actions to hit the conversion goal
     */
    numUserActions?: pulumi.Input<number>;
}

export interface WebApplicationCustomActionApdexSettings {
    /**
     * Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
     */
    frustratingFallbackThreshold?: pulumi.Input<number>;
    /**
     * Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
     */
    frustratingThreshold?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    threshold?: pulumi.Input<number>;
    /**
     * Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
     */
    toleratedFallbackThreshold?: pulumi.Input<number>;
    /**
     * Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
     */
    toleratedThreshold?: pulumi.Input<number>;
}

export interface WebApplicationKeyUserAction {
    /**
     * Configuration of the key user action
     */
    actions: pulumi.Input<pulumi.Input<inputs.WebApplicationKeyUserActionAction>[]>;
}

export interface WebApplicationKeyUserActionAction {
    /**
     * The domain where the action is performed.
     */
    domain?: pulumi.Input<string>;
    /**
     * The name of the action
     */
    name: pulumi.Input<string>;
    /**
     * The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
     */
    type: pulumi.Input<string>;
}

export interface WebApplicationLoadActionApdexSettings {
    /**
     * Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
     */
    frustratingFallbackThreshold?: pulumi.Input<number>;
    /**
     * Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
     */
    frustratingThreshold?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    threshold?: pulumi.Input<number>;
    /**
     * Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
     */
    toleratedFallbackThreshold?: pulumi.Input<number>;
    /**
     * Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
     */
    toleratedThreshold?: pulumi.Input<number>;
}

export interface WebApplicationMetaDataCaptureSettings {
    /**
     * Java script agent meta data capture settings
     */
    captures?: pulumi.Input<pulumi.Input<inputs.WebApplicationMetaDataCaptureSettingsCapture>[]>;
}

export interface WebApplicationMetaDataCaptureSettingsCapture {
    /**
     * The name of the meta data to capture
     */
    capturingName: pulumi.Input<string>;
    /**
     * Name for displaying the captured values in Dynatrace
     */
    name: pulumi.Input<string>;
    /**
     * `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
     */
    publicMetadata?: pulumi.Input<boolean>;
    /**
     * The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
     */
    type: pulumi.Input<string>;
    /**
     * The unique ID of the meta data to capture
     */
    uniqueId?: pulumi.Input<number>;
    /**
     * `true` if the last captured value should be used for this metadata. By default the first value will be used.
     */
    useLastValue?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettings {
    /**
     * Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
     */
    addCrossOriginAnonymousAttribute?: pulumi.Input<boolean>;
    /**
     * Advanced JavaScript tag settings
     */
    advancedJavascriptTagSettings?: pulumi.Input<inputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings>;
    /**
     * The name of the angular package
     */
    angularPackageName?: pulumi.Input<string>;
    /**
     * Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
     */
    browserRestrictionSettings?: pulumi.Input<inputs.WebApplicationMonitoringSettingsBrowserRestrictionSettings>;
    /**
     * Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
     */
    cacheControlHeaderOptimizations?: pulumi.Input<boolean>;
    /**
     * Settings for content capture
     */
    contentCapture: pulumi.Input<inputs.WebApplicationMonitoringSettingsContentCapture>;
    /**
     * Domain for cookie placement. Maximum 150 characters.
     */
    cookiePlacementDomain?: pulumi.Input<string>;
    /**
     * To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
     */
    correlationHeaderInclusionRegex?: pulumi.Input<string>;
    /**
     * The location to send monitoring data from the JavaScript tag.
     *
     *  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS. 
     *
     *  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
     */
    customConfigurationProperties?: pulumi.Input<string>;
    /**
     * You can exclude some actions from becoming XHR actions.
     *
     * Put a regular expression, matching all the required URLs, here.
     *
     * If noting specified the feature is disabled
     */
    excludeXhrRegex?: pulumi.Input<string>;
    /**
     * `fetch()` request capture enabled/disabled
     */
    fetchRequests?: pulumi.Input<boolean>;
    /**
     * Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
     */
    injectionMode: pulumi.Input<string>;
    /**
     * Instrumented web or app server.
     */
    instrumentedWebServer?: pulumi.Input<boolean>;
    /**
     * Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
     */
    ipAddressRestrictionSettings?: pulumi.Input<inputs.WebApplicationMonitoringSettingsIpAddressRestrictionSettings>;
    /**
     * Support of various JavaScript frameworks
     */
    javascriptFrameworkSupport?: pulumi.Input<inputs.WebApplicationMonitoringSettingsJavascriptFrameworkSupport>;
    /**
     * Java script injection rules
     */
    javascriptInjectionRules?: pulumi.Input<inputs.WebApplicationMonitoringSettingsJavascriptInjectionRules>;
    /**
     * The location of your application’s custom JavaScript library file. 
     *
     *  If nothing specified the root directory of your web server is used. 
     *
     *  **Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
     */
    libraryFileLocation?: pulumi.Input<string>;
    /**
     * The location to send monitoring data from the JavaScript tag.
     *
     *  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS. 
     *
     *  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
     */
    monitoringDataPath?: pulumi.Input<string>;
    /**
     * Same site cookie attribute
     */
    sameSiteCookieAttribute?: pulumi.Input<string>;
    /**
     * Time duration for the cache settings
     */
    scriptTagCacheDurationInHours?: pulumi.Input<number>;
    /**
     * Secure attribute usage for Dynatrace cookies enabled/disabled
     */
    secureCookieAttribute?: pulumi.Input<boolean>;
    /**
     * Path to identify the server’s request ID. Maximum 150 characters.
     */
    serverRequestPathId?: pulumi.Input<string>;
    /**
     * Send beacon data via CORS.
     */
    useCors?: pulumi.Input<boolean>;
    /**
     * `XmlHttpRequest` support enabled/disabled
     */
    xmlHttpRequest?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
    /**
     * Additional event handlers and wrappers
     */
    additionalEventHandlers?: pulumi.Input<inputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers>;
    /**
     * In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
     */
    eventWrapperSettings?: pulumi.Input<inputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings>;
    /**
     * Global event capture settings
     */
    globalEventCaptureSettings?: pulumi.Input<inputs.WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings>;
    /**
     * Instrumentation of unsupported Ajax frameworks enabled/disabled
     */
    instrumentUnsupportedAjaxFrameworks?: pulumi.Input<boolean>;
    /**
     * Maximum character length for action names. Valid values range from 5 to 10000.
     */
    maxActionNameLength: pulumi.Input<number>;
    /**
     * Maximum number of errors to be captured per page. Valid values range from 0 to 50.
     */
    maxErrorsToCapture: pulumi.Input<number>;
    /**
     * Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
     */
    specialCharactersToEscape?: pulumi.Input<string>;
    /**
     * Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
     */
    syncBeaconFirefox?: pulumi.Input<boolean>;
    /**
     * Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
     */
    syncBeaconInternetExplorer?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
    /**
     * Blur event handler enabled/disabled
     */
    blur?: pulumi.Input<boolean>;
    /**
     * Change event handler enabled/disabled
     */
    change?: pulumi.Input<boolean>;
    /**
     * Click event handler enabled/disabled
     */
    click?: pulumi.Input<boolean>;
    /**
     * Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
     */
    maxDomNodes: pulumi.Input<number>;
    /**
     * Mouseup event handler enabled/disabled
     */
    mouseup?: pulumi.Input<boolean>;
    /**
     * toString method enabled/disabled
     */
    toStringMethod?: pulumi.Input<boolean>;
    /**
     * Use mouseup event for clicks enabled/disabled
     */
    useMouseUpEventForClicks?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
    /**
     * Blur enabled/disabled
     */
    blur?: pulumi.Input<boolean>;
    /**
     * Change enabled/disabled
     */
    change?: pulumi.Input<boolean>;
    /**
     * Click enabled/disabled
     */
    click?: pulumi.Input<boolean>;
    /**
     * MouseUp enabled/disabled
     */
    mouseup?: pulumi.Input<boolean>;
    /**
     * TouchEnd enabled/disabled
     */
    touchEnd?: pulumi.Input<boolean>;
    /**
     * TouchStart enabled/disabled
     */
    touchStart?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
    /**
     * Additional events to be captured globally as user input.
     */
    additionalEventCapturedAsUserInput?: pulumi.Input<string>;
    /**
     * Change enabled/disabled
     */
    change?: pulumi.Input<boolean>;
    /**
     * Click enabled/disabled
     */
    click?: pulumi.Input<boolean>;
    /**
     * DoubleClick enabled/disabled
     */
    doubleclick?: pulumi.Input<boolean>;
    /**
     * KeyDown enabled/disabled
     */
    keydown?: pulumi.Input<boolean>;
    /**
     * KeyUp enabled/disabled
     */
    keyup?: pulumi.Input<boolean>;
    /**
     * MouseDown enabled/disabled
     */
    mousedown?: pulumi.Input<boolean>;
    /**
     * MouseUp enabled/disabled
     */
    mouseup?: pulumi.Input<boolean>;
    /**
     * Scroll enabled/disabled
     */
    scroll?: pulumi.Input<boolean>;
    /**
     * TouchEnd enabled/disabled
     */
    touchEnd?: pulumi.Input<boolean>;
    /**
     * TouchStart enabled/disabled
     */
    touchStart?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettingsBrowserRestrictionSettings {
    /**
     * The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
     */
    mode: pulumi.Input<string>;
    /**
     * A list of browser restrictions
     */
    restrictions?: pulumi.Input<inputs.WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions>;
}

export interface WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
    /**
     * Browser exclusion rules for the browsers that are to be excluded
     */
    restrictions: pulumi.Input<pulumi.Input<inputs.WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction>[]>;
}

export interface WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
    /**
     * The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER,`OPERA`and`SAFARI`
     */
    browserType: pulumi.Input<string>;
    /**
     * The version of the browser that is used
     */
    browserVersion?: pulumi.Input<string>;
    /**
     * No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
     */
    comparator?: pulumi.Input<string>;
    /**
     * The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
     */
    platform?: pulumi.Input<string>;
}

export interface WebApplicationMonitoringSettingsContentCapture {
    /**
     * JavaScript errors monitoring enabled/disabled
     */
    javascriptErrors?: pulumi.Input<boolean>;
    /**
     * Settings for resource timings capture
     */
    resourceTimingSettings?: pulumi.Input<inputs.WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings>;
    /**
     * Settings for timed action capture
     */
    timeoutSettings?: pulumi.Input<inputs.WebApplicationMonitoringSettingsContentCaptureTimeoutSettings>;
    /**
     * Visually complete and Speed index support enabled/disabled
     */
    visuallyCompleteAndSpeedIndex?: pulumi.Input<boolean>;
    /**
     * Settings for VisuallyComplete
     */
    visuallyCompleteSettings?: pulumi.Input<inputs.WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings>;
}

export interface WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
    /**
     * Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
     */
    instrumentationDelay: pulumi.Input<number>;
    /**
     * Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
     */
    nonW3cResourceTimings?: pulumi.Input<boolean>;
    /**
     * Defines how detailed resource timings are captured.
     *
     * Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
     */
    resourceTimingCaptureType?: pulumi.Input<string>;
    /**
     * Limits the number of domains for which W3C resource timings are captured.
     *
     * Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
     */
    resourceTimingsDomainLimit?: pulumi.Input<number>;
    /**
     * W3C resource timings for third party/CDN enabled/disabled
     */
    w3cResourceTimings?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
    /**
     * Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
     */
    temporaryActionLimit: pulumi.Input<number>;
    /**
     * The total timeout of all cascaded timeouts that should still be able to create a temporary action
     */
    temporaryActionTotalTimeout: pulumi.Input<number>;
    /**
     * Timed action support enabled/disabled.
     */
    timedActionSupport?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
    /**
     * A RegularExpression used to exclude images and iframes from being detected by the VC module
     */
    excludeUrlRegex?: pulumi.Input<string>;
    /**
     * Query selector for mutation nodes to ignore in VC and SI calculation
     */
    ignoredMutationsList?: pulumi.Input<string>;
    /**
     * The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
     */
    inactivityTimeout?: pulumi.Input<number>;
    /**
     * Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
     */
    mutationTimeout?: pulumi.Input<number>;
    /**
     * Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
     */
    threshold?: pulumi.Input<number>;
}

export interface WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
    /**
     * The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
     */
    mode: pulumi.Input<string>;
    /**
     * The IP addresses or the IP address ranges to be mapped to the location
     */
    restrictions?: pulumi.Input<inputs.WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions>;
}

export interface WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
    /**
     * The IP address or the IP address range to be mapped to the location
     */
    ranges: pulumi.Input<pulumi.Input<inputs.WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange>[]>;
}

export interface WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
    /**
     * The IP address to be mapped.
     */
    address: pulumi.Input<string>;
    /**
     * The **to** address of the IP address range.
     */
    addressTo?: pulumi.Input<string>;
    /**
     * The subnet mask of the IP address range. Valid values range from 0 to 128.
     */
    subnetMask?: pulumi.Input<number>;
}

export interface WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
    /**
     * ActiveXObject support enabled/disabled
     */
    activeXObject?: pulumi.Input<boolean>;
    /**
     * AngularJS and Angular support enabled/disabled
     */
    angular?: pulumi.Input<boolean>;
    /**
     * Dojo support enabled/disabled
     */
    dojo?: pulumi.Input<boolean>;
    /**
     * ExtJS, Sencha Touch support enabled/disabled
     */
    extjs?: pulumi.Input<boolean>;
    /**
     * ICEfaces support enabled/disabled
     */
    icefaces?: pulumi.Input<boolean>;
    /**
     * jQuery, Backbone.js support enabled/disabled
     */
    jquery?: pulumi.Input<boolean>;
    /**
     * MooTools support enabled/disabled
     */
    mooTools?: pulumi.Input<boolean>;
    /**
     * Prototype support enabled/disabled
     */
    prototype?: pulumi.Input<boolean>;
}

export interface WebApplicationMonitoringSettingsJavascriptInjectionRules {
    /**
     * Java script injection rule
     */
    rules: pulumi.Input<pulumi.Input<inputs.WebApplicationMonitoringSettingsJavascriptInjectionRulesRule>[]>;
}

export interface WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
    /**
     * `fetch()` request capture enabled/disabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The HTML pattern of the java script injection
     */
    htmlPattern?: pulumi.Input<string>;
    /**
     * The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
     */
    rule: pulumi.Input<string>;
    /**
     * The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
     */
    target?: pulumi.Input<string>;
    /**
     * The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
     */
    urlOperator: pulumi.Input<string>;
    /**
     * The url pattern of the java script injection
     */
    urlPattern?: pulumi.Input<string>;
}

export interface WebApplicationSessionReplayConfig {
    /**
     * (Field has overlap with `dynatrace.WebAppEnablement`) Session replay sampling rating in percent
     */
    costControlPercentage: pulumi.Input<number>;
    /**
     * (Field has overlap with `dynatrace.SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
     */
    cssResourceCapturingExclusionRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * (Field has overlap with `dynatrace.SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
     */
    enableCssResourceCapturing?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.WebAppEnablement`) SessionReplay Enabled/Disabled
     */
    enabled?: pulumi.Input<boolean>;
}

export interface WebApplicationUserActionAndSessionProperties {
    /**
     * User action and session properties settings
     */
    properties?: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionAndSessionPropertiesProperty>[]>;
}

export interface WebApplicationUserActionAndSessionPropertiesProperty {
    /**
     * The aggregation type of the property.
     */
    aggregation?: pulumi.Input<string>;
    /**
     * The cleanup rule of the property. 
     *
     * Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
     */
    cleanupRule?: pulumi.Input<string>;
    /**
     * The display name of the property
     */
    displayName?: pulumi.Input<string>;
    /**
     * Unique id among all userTags and properties of this application
     */
    id: pulumi.Input<number>;
    /**
     * If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
     */
    ignoreCase?: pulumi.Input<boolean>;
    /**
     * Key of the property
     */
    key: pulumi.Input<string>;
    /**
     * If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
     */
    longStringLength?: pulumi.Input<number>;
    /**
     * If the origin is `META_DATA`, metaData id of the property
     */
    metadataId?: pulumi.Input<number>;
    /**
     * The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
     */
    origin: pulumi.Input<string>;
    /**
     * The ID of the request attribute. 
     *
     * Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
     */
    serverSideRequestAttribute?: pulumi.Input<string>;
    /**
     * If `true`, the property is stored as a session property
     */
    storeAsSessionProperty?: pulumi.Input<boolean>;
    /**
     * If `true`, the property is stored as a user action property
     */
    storeAsUserActionProperty?: pulumi.Input<boolean>;
    /**
     * The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
     */
    type: pulumi.Input<string>;
}

export interface WebApplicationUserActionNamingSettings {
    /**
     * User action naming rules for custom actions
     */
    customActionNamingRules?: pulumi.Input<inputs.WebApplicationUserActionNamingSettingsCustomActionNamingRules>;
    /**
     * Case insensitive naming
     */
    ignoreCase?: pulumi.Input<boolean>;
    /**
     * User action naming rules for loading actions
     */
    loadActionNamingRules?: pulumi.Input<inputs.WebApplicationUserActionNamingSettingsLoadActionNamingRules>;
    /**
     * User action placeholders
     */
    placeholders?: pulumi.Input<inputs.WebApplicationUserActionNamingSettingsPlaceholders>;
    /**
     * User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
     */
    queryParameterCleanups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deactivate this setting if different domains should not result in separate user actions
     */
    splitUserActionsByDomain?: pulumi.Input<boolean>;
    /**
     * First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
     */
    useFirstDetectedLoadAction?: pulumi.Input<boolean>;
    /**
     * User action naming rules for XHR actions
     */
    xhrActionNamingRules?: pulumi.Input<inputs.WebApplicationUserActionNamingSettingsXhrActionNamingRules>;
}

export interface WebApplicationUserActionNamingSettingsCustomActionNamingRules {
    /**
     * The settings of naming rule
     */
    rules: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule>[]>;
}

export interface WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
    /**
     * Defines the conditions when the naming rule should apply
     */
    conditions?: pulumi.Input<inputs.WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions>;
    /**
     * Naming pattern. Use Curly brackets `{}` to select placeholders
     */
    template: pulumi.Input<string>;
    /**
     * If set to `true` the conditions will be connected by logical OR instead of logical AND
     */
    useOrConditions?: pulumi.Input<boolean>;
}

export interface WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
    /**
     * Defines the conditions when the naming rule should apply
     */
    conditions: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition>[]>;
}

export interface WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
    /**
     * Must be a defined placeholder wrapped in curly braces
     */
    operand1: pulumi.Input<string>;
    /**
     * Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
     */
    operand2?: pulumi.Input<string>;
    /**
     * The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
     */
    operator: pulumi.Input<string>;
}

export interface WebApplicationUserActionNamingSettingsLoadActionNamingRules {
    /**
     * The settings of naming rule
     */
    rules: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule>[]>;
}

export interface WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
    /**
     * Defines the conditions when the naming rule should apply
     */
    conditions?: pulumi.Input<inputs.WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions>;
    /**
     * Naming pattern. Use Curly brackets `{}` to select placeholders
     */
    template: pulumi.Input<string>;
    /**
     * If set to `true` the conditions will be connected by logical OR instead of logical AND
     */
    useOrConditions?: pulumi.Input<boolean>;
}

export interface WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
    /**
     * Defines the conditions when the naming rule should apply
     */
    conditions: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition>[]>;
}

export interface WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
    /**
     * Must be a defined placeholder wrapped in curly braces
     */
    operand1: pulumi.Input<string>;
    /**
     * Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
     */
    operand2?: pulumi.Input<string>;
    /**
     * The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
     */
    operator: pulumi.Input<string>;
}

export interface WebApplicationUserActionNamingSettingsPlaceholders {
    /**
     * User action placeholders
     */
    placeholders: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder>[]>;
}

export interface WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
    /**
     * The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
     */
    input: pulumi.Input<string>;
    /**
     * The ID of the metadata
     */
    metadataId?: pulumi.Input<number>;
    /**
     * Placeholder name. Valid length needs to be between 1 and 50 characters
     */
    name: pulumi.Input<string>;
    /**
     * The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
     */
    processingPart: pulumi.Input<string>;
    /**
     * The processing step settings
     */
    processingSteps?: pulumi.Input<inputs.WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps>;
    /**
     * Use the element identifier that was selected by Dynatrace
     */
    useGuessedElementIdentifier?: pulumi.Input<boolean>;
}

export interface WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
    /**
     * The processing step
     */
    steps: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep>[]>;
}

export interface WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
    /**
     * If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
     */
    fallbackToInput?: pulumi.Input<boolean>;
    /**
     * The pattern after the required value. It will be removed.
     */
    patternAfter?: pulumi.Input<string>;
    /**
     * The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
     */
    patternAfterSearchType?: pulumi.Input<string>;
    /**
     * The pattern before the required value. It will be removed.
     */
    patternBefore?: pulumi.Input<string>;
    /**
     * The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
     */
    patternBeforeSearchType?: pulumi.Input<string>;
    /**
     * The pattern to be replaced. 
     *
     *  Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
     */
    patternToReplace?: pulumi.Input<string>;
    /**
     * A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
     */
    regularExpression?: pulumi.Input<string>;
    /**
     * Replacement for the original value
     */
    replacement?: pulumi.Input<string>;
    /**
     * An action to be taken by the processing:
     */
    type: pulumi.Input<string>;
}

export interface WebApplicationUserActionNamingSettingsXhrActionNamingRules {
    /**
     * The settings of naming rule
     */
    rules: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule>[]>;
}

export interface WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
    /**
     * Defines the conditions when the naming rule should apply
     */
    conditions?: pulumi.Input<inputs.WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions>;
    /**
     * Naming pattern. Use Curly brackets `{}` to select placeholders
     */
    template: pulumi.Input<string>;
    /**
     * If set to `true` the conditions will be connected by logical OR instead of logical AND
     */
    useOrConditions?: pulumi.Input<boolean>;
}

export interface WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
    /**
     * Defines the conditions when the naming rule should apply
     */
    conditions: pulumi.Input<pulumi.Input<inputs.WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition>[]>;
}

export interface WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
    /**
     * Must be a defined placeholder wrapped in curly braces
     */
    operand1: pulumi.Input<string>;
    /**
     * Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
     */
    operand2?: pulumi.Input<string>;
    /**
     * The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
     */
    operator: pulumi.Input<string>;
}

export interface WebApplicationUserTags {
    /**
     * User tag settings
     */
    tags: pulumi.Input<pulumi.Input<inputs.WebApplicationUserTagsTag>[]>;
}

export interface WebApplicationUserTagsTag {
    /**
     * Cleanup rule expression of the userTag
     */
    cleanupRule?: pulumi.Input<string>;
    id?: pulumi.Input<number>;
    /**
     * If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
     */
    ignoreCase?: pulumi.Input<boolean>;
    /**
     * If it's of type metaData, metaData id of the userTag
     */
    metadataId?: pulumi.Input<number>;
    /**
     * The ID of the RrequestAttribute for the userTag
     */
    serverSideRequestAttribute?: pulumi.Input<string>;
    /**
     * A unique ID among all userTags and properties of this application. Minimum value is 1.
     */
    uniqueId?: pulumi.Input<number>;
}

export interface WebApplicationWaterfallSettings {
    /**
     * Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
     */
    resourceBrowserCachingThreshold: pulumi.Input<number>;
    /**
     * Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
     */
    resourcesThreshold: pulumi.Input<number>;
    /**
     * Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
     */
    slowCndResourcesThreshold: pulumi.Input<number>;
    /**
     * Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
     */
    slowFirstPartyResourcesThreshold: pulumi.Input<number>;
    /**
     * Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
     */
    slowThirdPartyResourcesThreshold: pulumi.Input<number>;
    /**
     * Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
     */
    speedIndexVisuallyCompleteRatioThreshold: pulumi.Input<number>;
    /**
     * Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
     */
    uncompressedResourcesThreshold: pulumi.Input<number>;
}

export interface WebApplicationXhrActionApdexSettings {
    /**
     * Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
     */
    frustratingFallbackThreshold?: pulumi.Input<number>;
    /**
     * Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
     */
    frustratingThreshold?: pulumi.Input<number>;
    /**
     * no documentation available
     */
    threshold?: pulumi.Input<number>;
    /**
     * Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
     */
    toleratedFallbackThreshold?: pulumi.Input<number>;
    /**
     * Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
     */
    toleratedThreshold?: pulumi.Input<number>;
}

export interface WebhookNotificationHeaders {
    /**
     * An additional HTTP Header to include when sending requests
     */
    headers: pulumi.Input<pulumi.Input<inputs.WebhookNotificationHeadersHeader>[]>;
}

export interface WebhookNotificationHeadersHeader {
    /**
     * The name of the HTTP header
     */
    name: pulumi.Input<string>;
    /**
     * The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
     */
    secretValue?: pulumi.Input<string>;
    /**
     * The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
     */
    value?: pulumi.Input<string>;
}

export interface WebhookNotificationOauth2Credentials {
    /**
     * Access token URL
     */
    accessTokenUrl: pulumi.Input<string>;
    /**
     * Client ID
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret
     */
    clientSecret: pulumi.Input<string>;
    /**
     * The scope of access you are requesting
     */
    scope?: pulumi.Input<string>;
}

export interface XmattersNotificationHeaders {
    /**
     * An additional HTTP Header to include when sending requests
     */
    headers: pulumi.Input<pulumi.Input<inputs.XmattersNotificationHeadersHeader>[]>;
}

export interface XmattersNotificationHeadersHeader {
    /**
     * The name of the HTTP header
     */
    name: pulumi.Input<string>;
    /**
     * The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
     */
    secretValue?: pulumi.Input<string>;
    /**
     * The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
     */
    value?: pulumi.Input<string>;
}
