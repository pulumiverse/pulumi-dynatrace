// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SessionReplayWebPrivacy extends pulumi.CustomResource {
    /**
     * Get an existing SessionReplayWebPrivacy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SessionReplayWebPrivacyState, opts?: pulumi.CustomResourceOptions): SessionReplayWebPrivacy {
        return new SessionReplayWebPrivacy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/sessionReplayWebPrivacy:SessionReplayWebPrivacy';

    /**
     * Returns true if the given object is an instance of SessionReplayWebPrivacy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SessionReplayWebPrivacy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SessionReplayWebPrivacy.__pulumiType;
    }

    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    public readonly applicationId!: pulumi.Output<string | undefined>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
     */
    public readonly enableOptInMode!: pulumi.Output<boolean>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
     */
    public readonly maskingPresets!: pulumi.Output<outputs.SessionReplayWebPrivacyMaskingPresets>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
     */
    public readonly urlExclusionPatternLists!: pulumi.Output<string[] | undefined>;

    /**
     * Create a SessionReplayWebPrivacy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SessionReplayWebPrivacyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SessionReplayWebPrivacyArgs | SessionReplayWebPrivacyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SessionReplayWebPrivacyState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["enableOptInMode"] = state ? state.enableOptInMode : undefined;
            resourceInputs["maskingPresets"] = state ? state.maskingPresets : undefined;
            resourceInputs["urlExclusionPatternLists"] = state ? state.urlExclusionPatternLists : undefined;
        } else {
            const args = argsOrState as SessionReplayWebPrivacyArgs | undefined;
            if ((!args || args.enableOptInMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableOptInMode'");
            }
            if ((!args || args.maskingPresets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maskingPresets'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["enableOptInMode"] = args ? args.enableOptInMode : undefined;
            resourceInputs["maskingPresets"] = args ? args.maskingPresets : undefined;
            resourceInputs["urlExclusionPatternLists"] = args ? args.urlExclusionPatternLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SessionReplayWebPrivacy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SessionReplayWebPrivacy resources.
 */
export interface SessionReplayWebPrivacyState {
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
     */
    enableOptInMode?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
     */
    maskingPresets?: pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresets>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
     */
    urlExclusionPatternLists?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a SessionReplayWebPrivacy resource.
 */
export interface SessionReplayWebPrivacyArgs {
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
     */
    enableOptInMode: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
     */
    maskingPresets: pulumi.Input<inputs.SessionReplayWebPrivacyMaskingPresets>;
    /**
     * (Field has overlap with `dynatrace.ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
     */
    urlExclusionPatternLists?: pulumi.Input<pulumi.Input<string>[]>;
}
