// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * > **Dynatrace SaaS only**
 *
 * > To utilize this resource, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **Allow IAM policy configuration for environments** (`iam-policies-management`) and **View environments** (`account-env-read`).
 *
 * The IAM policy data source allows the policy UUID to be retrieved by its name and account/environment (exclude for global).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumiverse/dynatrace";
 *
 * const appengineadmin = dynatrace.getIamPolicy({
 *     name: "AppEngine - Admin",
 * });
 * export const policies = appengineadmin;
 * ```
 *
 * ## Example Output
 */
export function getIamPolicy(args: GetIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getIamPolicy:getIamPolicy", {
        "account": args.account,
        "environment": args.environment,
        "name": args.name,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyArgs {
    /**
     * The account that policiy is defined for. Omit if the policy is not defined for an account but for an environment or is global
     */
    account?: string;
    /**
     * The environment that policiy is defined for. Omit if the policy is not defined for an environment but for an account or is global
     */
    environment?: string;
    /**
     * The name of the policy
     */
    name: string;
    /**
     * The UUID of the policy
     */
    uuid?: string;
}

/**
 * A collection of values returned by getIamPolicy.
 */
export interface GetIamPolicyResult {
    /**
     * The account that policiy is defined for. Omit if the policy is not defined for an account but for an environment or is global
     */
    readonly account?: string;
    /**
     * The environment that policiy is defined for. Omit if the policy is not defined for an environment but for an account or is global
     */
    readonly environment?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the policy
     */
    readonly name: string;
    /**
     * The UUID of the policy
     */
    readonly uuid: string;
}
/**
 * > **Dynatrace SaaS only**
 *
 * > To utilize this resource, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **Allow IAM policy configuration for environments** (`iam-policies-management`) and **View environments** (`account-env-read`).
 *
 * The IAM policy data source allows the policy UUID to be retrieved by its name and account/environment (exclude for global).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumiverse/dynatrace";
 *
 * const appengineadmin = dynatrace.getIamPolicy({
 *     name: "AppEngine - Admin",
 * });
 * export const policies = appengineadmin;
 * ```
 *
 * ## Example Output
 */
export function getIamPolicyOutput(args: GetIamPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetIamPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dynatrace:index/getIamPolicy:getIamPolicy", {
        "account": args.account,
        "environment": args.environment,
        "name": args.name,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyOutputArgs {
    /**
     * The account that policiy is defined for. Omit if the policy is not defined for an account but for an environment or is global
     */
    account?: pulumi.Input<string>;
    /**
     * The environment that policiy is defined for. Omit if the policy is not defined for an environment but for an account or is global
     */
    environment?: pulumi.Input<string>;
    /**
     * The name of the policy
     */
    name: pulumi.Input<string>;
    /**
     * The UUID of the policy
     */
    uuid?: pulumi.Input<string>;
}
