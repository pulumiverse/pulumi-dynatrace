// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The `dynatrace.AttackAlerting` data source allows the attack alerting profile ID to be retrieved by its name.
 *
 * - `name` (String) - The name of the attack alerting profile
 *
 * If multiple services match the given criteria, the first result will be retrieved.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const example = dynatrace.getAttackAlerting({
 *     name: "Terraform Example",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getAttackAlerting(args: GetAttackAlertingArgs, opts?: pulumi.InvokeOptions): Promise<GetAttackAlertingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getAttackAlerting:getAttackAlerting", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAttackAlerting.
 */
export interface GetAttackAlertingArgs {
    name: string;
}

/**
 * A collection of values returned by getAttackAlerting.
 */
export interface GetAttackAlertingResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
}
/**
 * The `dynatrace.AttackAlerting` data source allows the attack alerting profile ID to be retrieved by its name.
 *
 * - `name` (String) - The name of the attack alerting profile
 *
 * If multiple services match the given criteria, the first result will be retrieved.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const example = dynatrace.getAttackAlerting({
 *     name: "Terraform Example",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getAttackAlertingOutput(args: GetAttackAlertingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAttackAlertingResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dynatrace:index/getAttackAlerting:getAttackAlerting", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAttackAlerting.
 */
export interface GetAttackAlertingOutputArgs {
    name: pulumi.Input<string>;
}
