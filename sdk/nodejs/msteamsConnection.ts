// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MsteamsConnection extends pulumi.CustomResource {
    /**
     * Get an existing MsteamsConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MsteamsConnectionState, opts?: pulumi.CustomResourceOptions): MsteamsConnection {
        return new MsteamsConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/msteamsConnection:MsteamsConnection';

    /**
     * Returns true if the given object is an instance of MsteamsConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MsteamsConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MsteamsConnection.__pulumiType;
    }

    /**
     * Optional
     */
    declare public readonly channelName: pulumi.Output<string | undefined>;
    /**
     * The name of the Microsoft Teams connection
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Optional
     */
    declare public readonly teamName: pulumi.Output<string | undefined>;
    /**
     * The Webhook URL that links to the channel
     */
    declare public readonly webhook: pulumi.Output<string>;

    /**
     * Create a MsteamsConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MsteamsConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MsteamsConnectionArgs | MsteamsConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MsteamsConnectionState | undefined;
            resourceInputs["channelName"] = state?.channelName;
            resourceInputs["name"] = state?.name;
            resourceInputs["teamName"] = state?.teamName;
            resourceInputs["webhook"] = state?.webhook;
        } else {
            const args = argsOrState as MsteamsConnectionArgs | undefined;
            if (args?.webhook === undefined && !opts.urn) {
                throw new Error("Missing required property 'webhook'");
            }
            resourceInputs["channelName"] = args?.channelName;
            resourceInputs["name"] = args?.name;
            resourceInputs["teamName"] = args?.teamName;
            resourceInputs["webhook"] = args?.webhook ? pulumi.secret(args.webhook) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["webhook"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MsteamsConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MsteamsConnection resources.
 */
export interface MsteamsConnectionState {
    /**
     * Optional
     */
    channelName?: pulumi.Input<string>;
    /**
     * The name of the Microsoft Teams connection
     */
    name?: pulumi.Input<string>;
    /**
     * Optional
     */
    teamName?: pulumi.Input<string>;
    /**
     * The Webhook URL that links to the channel
     */
    webhook?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MsteamsConnection resource.
 */
export interface MsteamsConnectionArgs {
    /**
     * Optional
     */
    channelName?: pulumi.Input<string>;
    /**
     * The name of the Microsoft Teams connection
     */
    name?: pulumi.Input<string>;
    /**
     * Optional
     */
    teamName?: pulumi.Input<string>;
    /**
     * The Webhook URL that links to the channel
     */
    webhook: pulumi.Input<string>;
}
