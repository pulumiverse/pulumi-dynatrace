// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * The `dynatrace.getGeoRegions` data source retrieves the list of regions and their codes based on country code.
 *
 * - `countryCode` (String) - The ISO code of the required country
 *
 * Geographic regions API: GET regions of a country - https://docs.dynatrace.com/docs/shortlink/api-v2-rum-geographic-regions-get-regions-country
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const example = dynatrace.getGeoRegions({
 *     countryCode: "FR",
 * });
 * export const test = example;
 * ```
 */
export function getGeoRegions(args: GetGeoRegionsArgs, opts?: pulumi.InvokeOptions): Promise<GetGeoRegionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getGeoRegions:getGeoRegions", {
        "countryCode": args.countryCode,
    }, opts);
}

/**
 * A collection of arguments for invoking getGeoRegions.
 */
export interface GetGeoRegionsArgs {
    /**
     * The ISO code of the required country
     */
    countryCode: string;
}

/**
 * A collection of values returned by getGeoRegions.
 */
export interface GetGeoRegionsResult {
    /**
     * The ISO code of the required country
     */
    readonly countryCode: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly regions: outputs.GetGeoRegionsRegion[];
}
/**
 * The `dynatrace.getGeoRegions` data source retrieves the list of regions and their codes based on country code.
 *
 * - `countryCode` (String) - The ISO code of the required country
 *
 * Geographic regions API: GET regions of a country - https://docs.dynatrace.com/docs/shortlink/api-v2-rum-geographic-regions-get-regions-country
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const example = dynatrace.getGeoRegions({
 *     countryCode: "FR",
 * });
 * export const test = example;
 * ```
 */
export function getGeoRegionsOutput(args: GetGeoRegionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGeoRegionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dynatrace:index/getGeoRegions:getGeoRegions", {
        "countryCode": args.countryCode,
    }, opts);
}

/**
 * A collection of arguments for invoking getGeoRegions.
 */
export interface GetGeoRegionsOutputArgs {
    /**
     * The ISO code of the required country
     */
    countryCode: pulumi.Input<string>;
}
