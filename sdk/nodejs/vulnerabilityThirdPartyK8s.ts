// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * > This resource requires the API token scopes **Read security problems** (`securityProblems.read`) and **Write security problems** (`securityProblems.write`)
 *
 * > This resource is excluded by default in the export utility, please explicitly specify the resource to retrieve existing configuration.
 *
 * ## Dynatrace Documentation
 *
 * - Runtime Vulnerability Analytics - https://www.dynatrace.com/support/help/platform-modules/application-security/vulnerability-analytics
 *
 * - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:appsec.third-party-vulnerability-kubernetes-label-rule-settings`)
 *
 * ## Resource Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumiverse/dynatrace";
 *
 * const _name_ = new dynatrace.VulnerabilityThirdPartyK8s("#name#", {
 *     enabled: false,
 *     kubernetesLabelConditions: {
 *         kubernetesLabelConditions: [
 *             {
 *                 kubernetesLabelKey: "kubernetes.azure.com/mode",
 *                 kubernetesLabelValue: "#name#",
 *                 matcher: "NOT_EQUALS",
 *             },
 *             {
 *                 kubernetesLabelKey: "agentpool",
 *                 kubernetesLabelValue: "#name#",
 *                 matcher: "CONTAINS",
 *             },
 *         ],
 *     },
 *     metadata: {
 *         comment: "#name#",
 *     },
 *     ruleName: "#name#",
 *     vulnerabilityDetectionControl: {
 *         monitoringMode: "MONITORING_OFF",
 *     },
 * });
 * ```
 */
export class VulnerabilityThirdPartyK8s extends pulumi.CustomResource {
    /**
     * Get an existing VulnerabilityThirdPartyK8s resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VulnerabilityThirdPartyK8sState, opts?: pulumi.CustomResourceOptions): VulnerabilityThirdPartyK8s {
        return new VulnerabilityThirdPartyK8s(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/vulnerabilityThirdPartyK8s:VulnerabilityThirdPartyK8s';

    /**
     * Returns true if the given object is an instance of VulnerabilityThirdPartyK8s.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VulnerabilityThirdPartyK8s {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VulnerabilityThirdPartyK8s.__pulumiType;
    }

    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    public readonly insertAfter!: pulumi.Output<string>;
    /**
     * When you add multiple conditions, the rule applies if all conditions apply.
     */
    public readonly kubernetesLabelConditions!: pulumi.Output<outputs.VulnerabilityThirdPartyK8sKubernetesLabelConditions | undefined>;
    /**
     * Step 3: Leave comment (optional)
     */
    public readonly metadata!: pulumi.Output<outputs.VulnerabilityThirdPartyK8sMetadata>;
    /**
     * Rule name
     */
    public readonly ruleName!: pulumi.Output<string | undefined>;
    /**
     * Step 1: Select third-party vulnerability detection behavior
     */
    public readonly vulnerabilityDetectionControl!: pulumi.Output<outputs.VulnerabilityThirdPartyK8sVulnerabilityDetectionControl>;

    /**
     * Create a VulnerabilityThirdPartyK8s resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VulnerabilityThirdPartyK8sArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VulnerabilityThirdPartyK8sArgs | VulnerabilityThirdPartyK8sState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VulnerabilityThirdPartyK8sState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["insertAfter"] = state ? state.insertAfter : undefined;
            resourceInputs["kubernetesLabelConditions"] = state ? state.kubernetesLabelConditions : undefined;
            resourceInputs["metadata"] = state ? state.metadata : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["vulnerabilityDetectionControl"] = state ? state.vulnerabilityDetectionControl : undefined;
        } else {
            const args = argsOrState as VulnerabilityThirdPartyK8sArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.metadata === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metadata'");
            }
            if ((!args || args.vulnerabilityDetectionControl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vulnerabilityDetectionControl'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["insertAfter"] = args ? args.insertAfter : undefined;
            resourceInputs["kubernetesLabelConditions"] = args ? args.kubernetesLabelConditions : undefined;
            resourceInputs["metadata"] = args ? args.metadata : undefined;
            resourceInputs["ruleName"] = args ? args.ruleName : undefined;
            resourceInputs["vulnerabilityDetectionControl"] = args ? args.vulnerabilityDetectionControl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VulnerabilityThirdPartyK8s.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VulnerabilityThirdPartyK8s resources.
 */
export interface VulnerabilityThirdPartyK8sState {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    insertAfter?: pulumi.Input<string>;
    /**
     * When you add multiple conditions, the rule applies if all conditions apply.
     */
    kubernetesLabelConditions?: pulumi.Input<inputs.VulnerabilityThirdPartyK8sKubernetesLabelConditions>;
    /**
     * Step 3: Leave comment (optional)
     */
    metadata?: pulumi.Input<inputs.VulnerabilityThirdPartyK8sMetadata>;
    /**
     * Rule name
     */
    ruleName?: pulumi.Input<string>;
    /**
     * Step 1: Select third-party vulnerability detection behavior
     */
    vulnerabilityDetectionControl?: pulumi.Input<inputs.VulnerabilityThirdPartyK8sVulnerabilityDetectionControl>;
}

/**
 * The set of arguments for constructing a VulnerabilityThirdPartyK8s resource.
 */
export interface VulnerabilityThirdPartyK8sArgs {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    insertAfter?: pulumi.Input<string>;
    /**
     * When you add multiple conditions, the rule applies if all conditions apply.
     */
    kubernetesLabelConditions?: pulumi.Input<inputs.VulnerabilityThirdPartyK8sKubernetesLabelConditions>;
    /**
     * Step 3: Leave comment (optional)
     */
    metadata: pulumi.Input<inputs.VulnerabilityThirdPartyK8sMetadata>;
    /**
     * Rule name
     */
    ruleName?: pulumi.Input<string>;
    /**
     * Step 1: Select third-party vulnerability detection behavior
     */
    vulnerabilityDetectionControl: pulumi.Input<inputs.VulnerabilityThirdPartyK8sVulnerabilityDetectionControl>;
}
