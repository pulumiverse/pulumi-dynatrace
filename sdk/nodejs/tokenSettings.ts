// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class TokenSettings extends pulumi.CustomResource {
    /**
     * Get an existing TokenSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TokenSettingsState, opts?: pulumi.CustomResourceOptions): TokenSettings {
        return new TokenSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/tokenSettings:TokenSettings';

    /**
     * Returns true if the given object is an instance of TokenSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TokenSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TokenSettings.__pulumiType;
    }

    /**
     * Check out this [blog post](http://www.dynatrace.com/blog/further-increased-security-of-your-api-tokens-by-automating-token-protection/) to find out more about the new Dynatrace API token format.
     */
    declare public readonly newTokenFormat: pulumi.Output<boolean>;
    /**
     * Allow users of this environment to generate personal access tokens based on user permissions.
     * Note that existing personal access tokens will become unusable while this setting is disabled.
     */
    declare public readonly personalTokens: pulumi.Output<boolean>;

    /**
     * Create a TokenSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TokenSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TokenSettingsArgs | TokenSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TokenSettingsState | undefined;
            resourceInputs["newTokenFormat"] = state?.newTokenFormat;
            resourceInputs["personalTokens"] = state?.personalTokens;
        } else {
            const args = argsOrState as TokenSettingsArgs | undefined;
            if (args?.newTokenFormat === undefined && !opts.urn) {
                throw new Error("Missing required property 'newTokenFormat'");
            }
            if (args?.personalTokens === undefined && !opts.urn) {
                throw new Error("Missing required property 'personalTokens'");
            }
            resourceInputs["newTokenFormat"] = args?.newTokenFormat;
            resourceInputs["personalTokens"] = args?.personalTokens;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TokenSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TokenSettings resources.
 */
export interface TokenSettingsState {
    /**
     * Check out this [blog post](http://www.dynatrace.com/blog/further-increased-security-of-your-api-tokens-by-automating-token-protection/) to find out more about the new Dynatrace API token format.
     */
    newTokenFormat?: pulumi.Input<boolean>;
    /**
     * Allow users of this environment to generate personal access tokens based on user permissions.
     * Note that existing personal access tokens will become unusable while this setting is disabled.
     */
    personalTokens?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a TokenSettings resource.
 */
export interface TokenSettingsArgs {
    /**
     * Check out this [blog post](http://www.dynatrace.com/blog/further-increased-security-of-your-api-tokens-by-automating-token-protection/) to find out more about the new Dynatrace API token format.
     */
    newTokenFormat: pulumi.Input<boolean>;
    /**
     * Allow users of this environment to generate personal access tokens based on user permissions.
     * Note that existing personal access tokens will become unusable while this setting is disabled.
     */
    personalTokens: pulumi.Input<boolean>;
}
