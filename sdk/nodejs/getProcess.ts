// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * !> The data source API endpoint has been deprecated, please use dynatrace.getEntity with entity type `PROCESS_GROUP_INSTANCE` instead.
 *
 * The process data source allows the process ID to be retrieved by its name and optionally tags / tag-value pairs.
 *
 * - `name` queries for all processes with the specified name
 * - `tags` (optional) refers to the tags that need to be present for the process (inclusive)
 *
 * If multiple processes match the given criteria, the first result will be retrieved.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumiverse/dynatrace";
 *
 * const test = dynatrace.getProcess({
 *     name: "Example",
 *     tags: [
 *         "TerraformKeyTest",
 *         "TerraformKeyValueTest=TestValue",
 *     ],
 * });
 * const _name_ = new dynatrace.ManagementZone("#name#", {entitySelectorBasedRules: [{
 *     enabled: true,
 *     selector: test.then(test => `type("process_group_instance"),entityId("${test.id}")`),
 * }]});
 * ```
 */
export function getProcess(args: GetProcessArgs, opts?: pulumi.InvokeOptions): Promise<GetProcessResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getProcess:getProcess", {
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getProcess.
 */
export interface GetProcessArgs {
    name: string;
    /**
     * Required tags of the process to find
     */
    tags?: string[];
}

/**
 * A collection of values returned by getProcess.
 */
export interface GetProcessResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * Required tags of the process to find
     */
    readonly tags?: string[];
}
/**
 * !> The data source API endpoint has been deprecated, please use dynatrace.getEntity with entity type `PROCESS_GROUP_INSTANCE` instead.
 *
 * The process data source allows the process ID to be retrieved by its name and optionally tags / tag-value pairs.
 *
 * - `name` queries for all processes with the specified name
 * - `tags` (optional) refers to the tags that need to be present for the process (inclusive)
 *
 * If multiple processes match the given criteria, the first result will be retrieved.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumiverse/dynatrace";
 *
 * const test = dynatrace.getProcess({
 *     name: "Example",
 *     tags: [
 *         "TerraformKeyTest",
 *         "TerraformKeyValueTest=TestValue",
 *     ],
 * });
 * const _name_ = new dynatrace.ManagementZone("#name#", {entitySelectorBasedRules: [{
 *     enabled: true,
 *     selector: test.then(test => `type("process_group_instance"),entityId("${test.id}")`),
 * }]});
 * ```
 */
export function getProcessOutput(args: GetProcessOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetProcessResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dynatrace:index/getProcess:getProcess", {
        "name": args.name,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getProcess.
 */
export interface GetProcessOutputArgs {
    name: pulumi.Input<string>;
    /**
     * Required tags of the process to find
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
