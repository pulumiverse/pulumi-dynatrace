// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ManagementZoneV2 extends pulumi.CustomResource {
    /**
     * Get an existing ManagementZoneV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementZoneV2State, opts?: pulumi.CustomResourceOptions): ManagementZoneV2 {
        return new ManagementZoneV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/managementZoneV2:ManagementZoneV2';

    /**
     * Returns true if the given object is an instance of ManagementZoneV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagementZoneV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementZoneV2.__pulumiType;
    }

    /**
     * Description
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The ID of this setting when referred to by the Config REST API V1
     */
    declare public readonly legacyId: pulumi.Output<string>;
    /**
     * **Be careful when renaming** - if there are policies that are referencing this Management zone, they will need to be adapted to the new name!
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Rules
     */
    declare public readonly rules: pulumi.Output<outputs.ManagementZoneV2Rules | undefined>;

    /**
     * Create a ManagementZoneV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementZoneV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementZoneV2Args | ManagementZoneV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagementZoneV2State | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["legacyId"] = state?.legacyId;
            resourceInputs["name"] = state?.name;
            resourceInputs["rules"] = state?.rules;
        } else {
            const args = argsOrState as ManagementZoneV2Args | undefined;
            resourceInputs["description"] = args?.description;
            resourceInputs["legacyId"] = args?.legacyId;
            resourceInputs["name"] = args?.name;
            resourceInputs["rules"] = args?.rules;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementZoneV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagementZoneV2 resources.
 */
export interface ManagementZoneV2State {
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of this setting when referred to by the Config REST API V1
     */
    legacyId?: pulumi.Input<string>;
    /**
     * **Be careful when renaming** - if there are policies that are referencing this Management zone, they will need to be adapted to the new name!
     */
    name?: pulumi.Input<string>;
    /**
     * Rules
     */
    rules?: pulumi.Input<inputs.ManagementZoneV2Rules>;
}

/**
 * The set of arguments for constructing a ManagementZoneV2 resource.
 */
export interface ManagementZoneV2Args {
    /**
     * Description
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of this setting when referred to by the Config REST API V1
     */
    legacyId?: pulumi.Input<string>;
    /**
     * **Be careful when renaming** - if there are policies that are referencing this Management zone, they will need to be adapted to the new name!
     */
    name?: pulumi.Input<string>;
    /**
     * Rules
     */
    rules?: pulumi.Input<inputs.ManagementZoneV2Rules>;
}
