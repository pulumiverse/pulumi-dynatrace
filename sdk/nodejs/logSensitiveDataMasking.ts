// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LogSensitiveDataMasking extends pulumi.CustomResource {
    /**
     * Get an existing LogSensitiveDataMasking resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogSensitiveDataMaskingState, opts?: pulumi.CustomResourceOptions): LogSensitiveDataMasking {
        return new LogSensitiveDataMasking(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/logSensitiveDataMasking:LogSensitiveDataMasking';

    /**
     * Returns true if the given object is an instance of LogSensitiveDataMasking.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogSensitiveDataMasking {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogSensitiveDataMasking.__pulumiType;
    }

    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    public readonly insertAfter!: pulumi.Output<string>;
    /**
     * no documentation available
     */
    public readonly masking!: pulumi.Output<outputs.LogSensitiveDataMaskingMasking>;
    /**
     * no documentation available
     */
    public readonly matchers!: pulumi.Output<outputs.LogSensitiveDataMaskingMatchers | undefined>;
    /**
     * Name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
     */
    public readonly scope!: pulumi.Output<string | undefined>;

    /**
     * Create a LogSensitiveDataMasking resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogSensitiveDataMaskingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogSensitiveDataMaskingArgs | LogSensitiveDataMaskingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogSensitiveDataMaskingState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["insertAfter"] = state ? state.insertAfter : undefined;
            resourceInputs["masking"] = state ? state.masking : undefined;
            resourceInputs["matchers"] = state ? state.matchers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
        } else {
            const args = argsOrState as LogSensitiveDataMaskingArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.masking === undefined) && !opts.urn) {
                throw new Error("Missing required property 'masking'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["insertAfter"] = args ? args.insertAfter : undefined;
            resourceInputs["masking"] = args ? args.masking : undefined;
            resourceInputs["matchers"] = args ? args.matchers : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogSensitiveDataMasking.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogSensitiveDataMasking resources.
 */
export interface LogSensitiveDataMaskingState {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    insertAfter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    masking?: pulumi.Input<inputs.LogSensitiveDataMaskingMasking>;
    /**
     * no documentation available
     */
    matchers?: pulumi.Input<inputs.LogSensitiveDataMaskingMatchers>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LogSensitiveDataMasking resource.
 */
export interface LogSensitiveDataMaskingArgs {
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    insertAfter?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    masking: pulumi.Input<inputs.LogSensitiveDataMaskingMasking>;
    /**
     * no documentation available
     */
    matchers?: pulumi.Input<inputs.LogSensitiveDataMaskingMatchers>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
}
