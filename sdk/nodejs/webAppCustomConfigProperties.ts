// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WebAppCustomConfigProperties extends pulumi.CustomResource {
    /**
     * Get an existing WebAppCustomConfigProperties resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebAppCustomConfigPropertiesState, opts?: pulumi.CustomResourceOptions): WebAppCustomConfigProperties {
        return new WebAppCustomConfigProperties(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/webAppCustomConfigProperties:WebAppCustomConfigProperties';

    /**
     * Returns true if the given object is an instance of WebAppCustomConfigProperties.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebAppCustomConfigProperties {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebAppCustomConfigProperties.__pulumiType;
    }

    /**
     * The scope of this setting
     */
    declare public readonly applicationId: pulumi.Output<string>;
    /**
     * Custom configuration property
     */
    declare public readonly customProperty: pulumi.Output<string>;

    /**
     * Create a WebAppCustomConfigProperties resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebAppCustomConfigPropertiesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebAppCustomConfigPropertiesArgs | WebAppCustomConfigPropertiesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebAppCustomConfigPropertiesState | undefined;
            resourceInputs["applicationId"] = state?.applicationId;
            resourceInputs["customProperty"] = state?.customProperty;
        } else {
            const args = argsOrState as WebAppCustomConfigPropertiesArgs | undefined;
            if (args?.applicationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if (args?.customProperty === undefined && !opts.urn) {
                throw new Error("Missing required property 'customProperty'");
            }
            resourceInputs["applicationId"] = args?.applicationId;
            resourceInputs["customProperty"] = args?.customProperty;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebAppCustomConfigProperties.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebAppCustomConfigProperties resources.
 */
export interface WebAppCustomConfigPropertiesState {
    /**
     * The scope of this setting
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Custom configuration property
     */
    customProperty?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebAppCustomConfigProperties resource.
 */
export interface WebAppCustomConfigPropertiesArgs {
    /**
     * The scope of this setting
     */
    applicationId: pulumi.Input<string>;
    /**
     * Custom configuration property
     */
    customProperty: pulumi.Input<string>;
}
