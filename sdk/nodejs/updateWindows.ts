// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class UpdateWindows extends pulumi.CustomResource {
    /**
     * Get an existing UpdateWindows resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UpdateWindowsState, opts?: pulumi.CustomResourceOptions): UpdateWindows {
        return new UpdateWindows(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/updateWindows:UpdateWindows';

    /**
     * Returns true if the given object is an instance of UpdateWindows.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UpdateWindows {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UpdateWindows.__pulumiType;
    }

    /**
     * no documentation available
     */
    declare public readonly dailyRecurrence: pulumi.Output<outputs.UpdateWindowsDailyRecurrence | undefined>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    declare public readonly enabled: pulumi.Output<boolean>;
    /**
     * no documentation available
     */
    declare public readonly monthlyRecurrence: pulumi.Output<outputs.UpdateWindowsMonthlyRecurrence | undefined>;
    /**
     * Name
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * no documentation available
     */
    declare public readonly onceRecurrence: pulumi.Output<outputs.UpdateWindowsOnceRecurrence | undefined>;
    /**
     * Possible Values: `MONTHLY`, `ONCE`, `DAILY`, `WEEKLY`
     */
    declare public readonly recurrence: pulumi.Output<string>;
    /**
     * no documentation available
     */
    declare public readonly weeklyRecurrence: pulumi.Output<outputs.UpdateWindowsWeeklyRecurrence | undefined>;

    /**
     * Create a UpdateWindows resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UpdateWindowsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UpdateWindowsArgs | UpdateWindowsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UpdateWindowsState | undefined;
            resourceInputs["dailyRecurrence"] = state?.dailyRecurrence;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["monthlyRecurrence"] = state?.monthlyRecurrence;
            resourceInputs["name"] = state?.name;
            resourceInputs["onceRecurrence"] = state?.onceRecurrence;
            resourceInputs["recurrence"] = state?.recurrence;
            resourceInputs["weeklyRecurrence"] = state?.weeklyRecurrence;
        } else {
            const args = argsOrState as UpdateWindowsArgs | undefined;
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if (args?.recurrence === undefined && !opts.urn) {
                throw new Error("Missing required property 'recurrence'");
            }
            resourceInputs["dailyRecurrence"] = args?.dailyRecurrence;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["monthlyRecurrence"] = args?.monthlyRecurrence;
            resourceInputs["name"] = args?.name;
            resourceInputs["onceRecurrence"] = args?.onceRecurrence;
            resourceInputs["recurrence"] = args?.recurrence;
            resourceInputs["weeklyRecurrence"] = args?.weeklyRecurrence;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UpdateWindows.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UpdateWindows resources.
 */
export interface UpdateWindowsState {
    /**
     * no documentation available
     */
    dailyRecurrence?: pulumi.Input<inputs.UpdateWindowsDailyRecurrence>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    monthlyRecurrence?: pulumi.Input<inputs.UpdateWindowsMonthlyRecurrence>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    onceRecurrence?: pulumi.Input<inputs.UpdateWindowsOnceRecurrence>;
    /**
     * Possible Values: `MONTHLY`, `ONCE`, `DAILY`, `WEEKLY`
     */
    recurrence?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    weeklyRecurrence?: pulumi.Input<inputs.UpdateWindowsWeeklyRecurrence>;
}

/**
 * The set of arguments for constructing a UpdateWindows resource.
 */
export interface UpdateWindowsArgs {
    /**
     * no documentation available
     */
    dailyRecurrence?: pulumi.Input<inputs.UpdateWindowsDailyRecurrence>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * no documentation available
     */
    monthlyRecurrence?: pulumi.Input<inputs.UpdateWindowsMonthlyRecurrence>;
    /**
     * Name
     */
    name?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    onceRecurrence?: pulumi.Input<inputs.UpdateWindowsOnceRecurrence>;
    /**
     * Possible Values: `MONTHLY`, `ONCE`, `DAILY`, `WEEKLY`
     */
    recurrence: pulumi.Input<string>;
    /**
     * no documentation available
     */
    weeklyRecurrence?: pulumi.Input<inputs.UpdateWindowsWeeklyRecurrence>;
}
