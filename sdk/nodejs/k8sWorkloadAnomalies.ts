// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class K8sWorkloadAnomalies extends pulumi.CustomResource {
    /**
     * Get an existing K8sWorkloadAnomalies resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: K8sWorkloadAnomaliesState, opts?: pulumi.CustomResourceOptions): K8sWorkloadAnomalies {
        return new K8sWorkloadAnomalies(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/k8sWorkloadAnomalies:K8sWorkloadAnomalies';

    /**
     * Returns true if the given object is an instance of K8sWorkloadAnomalies.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is K8sWorkloadAnomalies {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === K8sWorkloadAnomalies.__pulumiType;
    }

    /**
     * no documentation available
     */
    declare public readonly containerRestarts: pulumi.Output<outputs.K8sWorkloadAnomaliesContainerRestarts>;
    /**
     * no documentation available
     */
    declare public readonly deploymentStuck: pulumi.Output<outputs.K8sWorkloadAnomaliesDeploymentStuck>;
    /**
     * no documentation available
     */
    declare public readonly highCpuThrottling: pulumi.Output<outputs.K8sWorkloadAnomaliesHighCpuThrottling>;
    /**
     * no documentation available
     */
    declare public readonly highCpuUsage: pulumi.Output<outputs.K8sWorkloadAnomaliesHighCpuUsage>;
    /**
     * no documentation available
     */
    declare public readonly highMemoryUsage: pulumi.Output<outputs.K8sWorkloadAnomaliesHighMemoryUsage>;
    /**
     * no documentation available
     */
    declare public readonly jobFailureEvents: pulumi.Output<outputs.K8sWorkloadAnomaliesJobFailureEvents>;
    /**
     * no documentation available
     */
    declare public readonly notAllPodsReady: pulumi.Output<outputs.K8sWorkloadAnomaliesNotAllPodsReady>;
    /**
     * no documentation available
     */
    declare public readonly oomKills: pulumi.Output<outputs.K8sWorkloadAnomaliesOomKills>;
    /**
     * no documentation available
     */
    declare public readonly pendingPods: pulumi.Output<outputs.K8sWorkloadAnomaliesPendingPods>;
    /**
     * no documentation available
     */
    declare public readonly podBackoffEvents: pulumi.Output<outputs.K8sWorkloadAnomaliesPodBackoffEvents>;
    /**
     * no documentation available
     */
    declare public readonly podEvictionEvents: pulumi.Output<outputs.K8sWorkloadAnomaliesPodEvictionEvents>;
    /**
     * no documentation available
     */
    declare public readonly podPreemptionEvents: pulumi.Output<outputs.K8sWorkloadAnomaliesPodPreemptionEvents>;
    /**
     * no documentation available
     */
    declare public readonly podStuckInTerminating: pulumi.Output<outputs.K8sWorkloadAnomaliesPodStuckInTerminating>;
    /**
     * The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
     */
    declare public readonly scope: pulumi.Output<string | undefined>;
    /**
     * no documentation available
     */
    declare public readonly workloadWithoutReadyPods: pulumi.Output<outputs.K8sWorkloadAnomaliesWorkloadWithoutReadyPods>;

    /**
     * Create a K8sWorkloadAnomalies resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: K8sWorkloadAnomaliesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: K8sWorkloadAnomaliesArgs | K8sWorkloadAnomaliesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as K8sWorkloadAnomaliesState | undefined;
            resourceInputs["containerRestarts"] = state?.containerRestarts;
            resourceInputs["deploymentStuck"] = state?.deploymentStuck;
            resourceInputs["highCpuThrottling"] = state?.highCpuThrottling;
            resourceInputs["highCpuUsage"] = state?.highCpuUsage;
            resourceInputs["highMemoryUsage"] = state?.highMemoryUsage;
            resourceInputs["jobFailureEvents"] = state?.jobFailureEvents;
            resourceInputs["notAllPodsReady"] = state?.notAllPodsReady;
            resourceInputs["oomKills"] = state?.oomKills;
            resourceInputs["pendingPods"] = state?.pendingPods;
            resourceInputs["podBackoffEvents"] = state?.podBackoffEvents;
            resourceInputs["podEvictionEvents"] = state?.podEvictionEvents;
            resourceInputs["podPreemptionEvents"] = state?.podPreemptionEvents;
            resourceInputs["podStuckInTerminating"] = state?.podStuckInTerminating;
            resourceInputs["scope"] = state?.scope;
            resourceInputs["workloadWithoutReadyPods"] = state?.workloadWithoutReadyPods;
        } else {
            const args = argsOrState as K8sWorkloadAnomaliesArgs | undefined;
            if (args?.containerRestarts === undefined && !opts.urn) {
                throw new Error("Missing required property 'containerRestarts'");
            }
            if (args?.deploymentStuck === undefined && !opts.urn) {
                throw new Error("Missing required property 'deploymentStuck'");
            }
            if (args?.highCpuThrottling === undefined && !opts.urn) {
                throw new Error("Missing required property 'highCpuThrottling'");
            }
            if (args?.highCpuUsage === undefined && !opts.urn) {
                throw new Error("Missing required property 'highCpuUsage'");
            }
            if (args?.highMemoryUsage === undefined && !opts.urn) {
                throw new Error("Missing required property 'highMemoryUsage'");
            }
            if (args?.jobFailureEvents === undefined && !opts.urn) {
                throw new Error("Missing required property 'jobFailureEvents'");
            }
            if (args?.notAllPodsReady === undefined && !opts.urn) {
                throw new Error("Missing required property 'notAllPodsReady'");
            }
            if (args?.oomKills === undefined && !opts.urn) {
                throw new Error("Missing required property 'oomKills'");
            }
            if (args?.pendingPods === undefined && !opts.urn) {
                throw new Error("Missing required property 'pendingPods'");
            }
            if (args?.podBackoffEvents === undefined && !opts.urn) {
                throw new Error("Missing required property 'podBackoffEvents'");
            }
            if (args?.podEvictionEvents === undefined && !opts.urn) {
                throw new Error("Missing required property 'podEvictionEvents'");
            }
            if (args?.podPreemptionEvents === undefined && !opts.urn) {
                throw new Error("Missing required property 'podPreemptionEvents'");
            }
            if (args?.podStuckInTerminating === undefined && !opts.urn) {
                throw new Error("Missing required property 'podStuckInTerminating'");
            }
            if (args?.workloadWithoutReadyPods === undefined && !opts.urn) {
                throw new Error("Missing required property 'workloadWithoutReadyPods'");
            }
            resourceInputs["containerRestarts"] = args?.containerRestarts;
            resourceInputs["deploymentStuck"] = args?.deploymentStuck;
            resourceInputs["highCpuThrottling"] = args?.highCpuThrottling;
            resourceInputs["highCpuUsage"] = args?.highCpuUsage;
            resourceInputs["highMemoryUsage"] = args?.highMemoryUsage;
            resourceInputs["jobFailureEvents"] = args?.jobFailureEvents;
            resourceInputs["notAllPodsReady"] = args?.notAllPodsReady;
            resourceInputs["oomKills"] = args?.oomKills;
            resourceInputs["pendingPods"] = args?.pendingPods;
            resourceInputs["podBackoffEvents"] = args?.podBackoffEvents;
            resourceInputs["podEvictionEvents"] = args?.podEvictionEvents;
            resourceInputs["podPreemptionEvents"] = args?.podPreemptionEvents;
            resourceInputs["podStuckInTerminating"] = args?.podStuckInTerminating;
            resourceInputs["scope"] = args?.scope;
            resourceInputs["workloadWithoutReadyPods"] = args?.workloadWithoutReadyPods;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(K8sWorkloadAnomalies.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering K8sWorkloadAnomalies resources.
 */
export interface K8sWorkloadAnomaliesState {
    /**
     * no documentation available
     */
    containerRestarts?: pulumi.Input<inputs.K8sWorkloadAnomaliesContainerRestarts>;
    /**
     * no documentation available
     */
    deploymentStuck?: pulumi.Input<inputs.K8sWorkloadAnomaliesDeploymentStuck>;
    /**
     * no documentation available
     */
    highCpuThrottling?: pulumi.Input<inputs.K8sWorkloadAnomaliesHighCpuThrottling>;
    /**
     * no documentation available
     */
    highCpuUsage?: pulumi.Input<inputs.K8sWorkloadAnomaliesHighCpuUsage>;
    /**
     * no documentation available
     */
    highMemoryUsage?: pulumi.Input<inputs.K8sWorkloadAnomaliesHighMemoryUsage>;
    /**
     * no documentation available
     */
    jobFailureEvents?: pulumi.Input<inputs.K8sWorkloadAnomaliesJobFailureEvents>;
    /**
     * no documentation available
     */
    notAllPodsReady?: pulumi.Input<inputs.K8sWorkloadAnomaliesNotAllPodsReady>;
    /**
     * no documentation available
     */
    oomKills?: pulumi.Input<inputs.K8sWorkloadAnomaliesOomKills>;
    /**
     * no documentation available
     */
    pendingPods?: pulumi.Input<inputs.K8sWorkloadAnomaliesPendingPods>;
    /**
     * no documentation available
     */
    podBackoffEvents?: pulumi.Input<inputs.K8sWorkloadAnomaliesPodBackoffEvents>;
    /**
     * no documentation available
     */
    podEvictionEvents?: pulumi.Input<inputs.K8sWorkloadAnomaliesPodEvictionEvents>;
    /**
     * no documentation available
     */
    podPreemptionEvents?: pulumi.Input<inputs.K8sWorkloadAnomaliesPodPreemptionEvents>;
    /**
     * no documentation available
     */
    podStuckInTerminating?: pulumi.Input<inputs.K8sWorkloadAnomaliesPodStuckInTerminating>;
    /**
     * The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    workloadWithoutReadyPods?: pulumi.Input<inputs.K8sWorkloadAnomaliesWorkloadWithoutReadyPods>;
}

/**
 * The set of arguments for constructing a K8sWorkloadAnomalies resource.
 */
export interface K8sWorkloadAnomaliesArgs {
    /**
     * no documentation available
     */
    containerRestarts: pulumi.Input<inputs.K8sWorkloadAnomaliesContainerRestarts>;
    /**
     * no documentation available
     */
    deploymentStuck: pulumi.Input<inputs.K8sWorkloadAnomaliesDeploymentStuck>;
    /**
     * no documentation available
     */
    highCpuThrottling: pulumi.Input<inputs.K8sWorkloadAnomaliesHighCpuThrottling>;
    /**
     * no documentation available
     */
    highCpuUsage: pulumi.Input<inputs.K8sWorkloadAnomaliesHighCpuUsage>;
    /**
     * no documentation available
     */
    highMemoryUsage: pulumi.Input<inputs.K8sWorkloadAnomaliesHighMemoryUsage>;
    /**
     * no documentation available
     */
    jobFailureEvents: pulumi.Input<inputs.K8sWorkloadAnomaliesJobFailureEvents>;
    /**
     * no documentation available
     */
    notAllPodsReady: pulumi.Input<inputs.K8sWorkloadAnomaliesNotAllPodsReady>;
    /**
     * no documentation available
     */
    oomKills: pulumi.Input<inputs.K8sWorkloadAnomaliesOomKills>;
    /**
     * no documentation available
     */
    pendingPods: pulumi.Input<inputs.K8sWorkloadAnomaliesPendingPods>;
    /**
     * no documentation available
     */
    podBackoffEvents: pulumi.Input<inputs.K8sWorkloadAnomaliesPodBackoffEvents>;
    /**
     * no documentation available
     */
    podEvictionEvents: pulumi.Input<inputs.K8sWorkloadAnomaliesPodEvictionEvents>;
    /**
     * no documentation available
     */
    podPreemptionEvents: pulumi.Input<inputs.K8sWorkloadAnomaliesPodPreemptionEvents>;
    /**
     * no documentation available
     */
    podStuckInTerminating: pulumi.Input<inputs.K8sWorkloadAnomaliesPodStuckInTerminating>;
    /**
     * The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
    /**
     * no documentation available
     */
    workloadWithoutReadyPods: pulumi.Input<inputs.K8sWorkloadAnomaliesWorkloadWithoutReadyPods>;
}
