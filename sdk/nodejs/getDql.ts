// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const _this = dynatrace.getDql({
 *     query: "fetch events",
 * });
 * ```
 * will produce content for the `results` attribute like this:
 *
 * You can also use Heredoc syntax for better readability of complex DQL queries.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const _this = dynatrace.getDql({
 *     query: `    fetch events |
 *     filter event.type == "davis" AND davis.status != "CLOSED" |
 *     fields timestamp, davis.title, davis.underMaintenance, davis.status |
 *     sort timestamp |
 *     limit 10  
 *
 * `,
 * });
 * ```
 *
 * {{ .SchemaMarkdown | trimspace }}
 */
export function getDql(args: GetDqlArgs, opts?: pulumi.InvokeOptions): Promise<GetDqlResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getDql:getDql", {
        "defaultSamplingRatio": args.defaultSamplingRatio,
        "defaultScanLimitGbytes": args.defaultScanLimitGbytes,
        "defaultTimeframeEnd": args.defaultTimeframeEnd,
        "defaultTimeframeStart": args.defaultTimeframeStart,
        "fetchTimeoutSeconds": args.fetchTimeoutSeconds,
        "locale": args.locale,
        "maxResultBytes": args.maxResultBytes,
        "maxResultRecords": args.maxResultRecords,
        "query": args.query,
        "timezone": args.timezone,
    }, opts);
}

/**
 * A collection of arguments for invoking getDql.
 */
export interface GetDqlArgs {
    defaultSamplingRatio?: number;
    defaultScanLimitGbytes?: number;
    defaultTimeframeEnd?: string;
    defaultTimeframeStart?: string;
    fetchTimeoutSeconds?: number;
    locale?: string;
    maxResultBytes?: number;
    maxResultRecords?: number;
    query: string;
    timezone?: string;
}

/**
 * A collection of values returned by getDql.
 */
export interface GetDqlResult {
    readonly defaultSamplingRatio?: number;
    readonly defaultScanLimitGbytes?: number;
    readonly defaultTimeframeEnd?: string;
    readonly defaultTimeframeStart?: string;
    readonly fetchTimeoutSeconds?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly locale?: string;
    readonly maxResultBytes?: number;
    readonly maxResultRecords?: number;
    readonly query: string;
    readonly records: string;
    readonly timezone?: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const _this = dynatrace.getDql({
 *     query: "fetch events",
 * });
 * ```
 * will produce content for the `results` attribute like this:
 *
 * You can also use Heredoc syntax for better readability of complex DQL queries.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumi/dynatrace";
 *
 * const _this = dynatrace.getDql({
 *     query: `    fetch events |
 *     filter event.type == "davis" AND davis.status != "CLOSED" |
 *     fields timestamp, davis.title, davis.underMaintenance, davis.status |
 *     sort timestamp |
 *     limit 10  
 *
 * `,
 * });
 * ```
 *
 * {{ .SchemaMarkdown | trimspace }}
 */
export function getDqlOutput(args: GetDqlOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDqlResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dynatrace:index/getDql:getDql", {
        "defaultSamplingRatio": args.defaultSamplingRatio,
        "defaultScanLimitGbytes": args.defaultScanLimitGbytes,
        "defaultTimeframeEnd": args.defaultTimeframeEnd,
        "defaultTimeframeStart": args.defaultTimeframeStart,
        "fetchTimeoutSeconds": args.fetchTimeoutSeconds,
        "locale": args.locale,
        "maxResultBytes": args.maxResultBytes,
        "maxResultRecords": args.maxResultRecords,
        "query": args.query,
        "timezone": args.timezone,
    }, opts);
}

/**
 * A collection of arguments for invoking getDql.
 */
export interface GetDqlOutputArgs {
    defaultSamplingRatio?: pulumi.Input<number>;
    defaultScanLimitGbytes?: pulumi.Input<number>;
    defaultTimeframeEnd?: pulumi.Input<string>;
    defaultTimeframeStart?: pulumi.Input<string>;
    fetchTimeoutSeconds?: pulumi.Input<number>;
    locale?: pulumi.Input<string>;
    maxResultBytes?: pulumi.Input<number>;
    maxResultRecords?: pulumi.Input<number>;
    query: pulumi.Input<string>;
    timezone?: pulumi.Input<string>;
}
