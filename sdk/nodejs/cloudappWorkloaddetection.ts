// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class CloudappWorkloaddetection extends pulumi.CustomResource {
    /**
     * Get an existing CloudappWorkloaddetection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudappWorkloaddetectionState, opts?: pulumi.CustomResourceOptions): CloudappWorkloaddetection {
        return new CloudappWorkloaddetection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/cloudappWorkloaddetection:CloudappWorkloaddetection';

    /**
     * Returns true if the given object is an instance of CloudappWorkloaddetection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudappWorkloaddetection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudappWorkloaddetection.__pulumiType;
    }

    /**
     * Enable this setting to get * Processes of Cloud Foundry application instances merged into process groups by Cloud
     * Foundry application. * Container resource metrics (Container group instance entities) and [related
     * screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
     */
    declare public readonly cloudFoundry: pulumi.Output<outputs.CloudappWorkloaddetectionCloudFoundry>;
    /**
     * Enable this setting for plain Docker and Podman environments to get * Container resource metrics (Container group
     * instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Docker
     * support requires OneAgent 1.257+. * Podman support requires OneAgent 1.267+.
     */
    declare public readonly docker: pulumi.Output<outputs.CloudappWorkloaddetectionDocker>;
    /**
     * Enable this setting to get * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace,
     * cloud application and cloud application instance and entities). * Container resource metrics (container group instance
     * entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Similar workloads
     * merged into process groups based on defined rules (see below). * Version detection for services that run in Kubernetes
     * workloads.
     */
    declare public readonly kubernetes: pulumi.Output<outputs.CloudappWorkloaddetectionKubernetes>;
    /**
     * Enable this setting to * Detect containers based on captured cloud-vendor metadata such as e.g. AWS ECS / Fargate, Azure
     * Container Apps, [and many more](https://dt-url.net/2m02q7b). * Container resource metrics (Container group instance
     * entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
     */
    declare public readonly serverless: pulumi.Output<outputs.CloudappWorkloaddetectionServerless | undefined>;

    /**
     * Create a CloudappWorkloaddetection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudappWorkloaddetectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudappWorkloaddetectionArgs | CloudappWorkloaddetectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudappWorkloaddetectionState | undefined;
            resourceInputs["cloudFoundry"] = state?.cloudFoundry;
            resourceInputs["docker"] = state?.docker;
            resourceInputs["kubernetes"] = state?.kubernetes;
            resourceInputs["serverless"] = state?.serverless;
        } else {
            const args = argsOrState as CloudappWorkloaddetectionArgs | undefined;
            if (args?.cloudFoundry === undefined && !opts.urn) {
                throw new Error("Missing required property 'cloudFoundry'");
            }
            if (args?.docker === undefined && !opts.urn) {
                throw new Error("Missing required property 'docker'");
            }
            if (args?.kubernetes === undefined && !opts.urn) {
                throw new Error("Missing required property 'kubernetes'");
            }
            resourceInputs["cloudFoundry"] = args?.cloudFoundry;
            resourceInputs["docker"] = args?.docker;
            resourceInputs["kubernetes"] = args?.kubernetes;
            resourceInputs["serverless"] = args?.serverless;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudappWorkloaddetection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudappWorkloaddetection resources.
 */
export interface CloudappWorkloaddetectionState {
    /**
     * Enable this setting to get * Processes of Cloud Foundry application instances merged into process groups by Cloud
     * Foundry application. * Container resource metrics (Container group instance entities) and [related
     * screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
     */
    cloudFoundry?: pulumi.Input<inputs.CloudappWorkloaddetectionCloudFoundry>;
    /**
     * Enable this setting for plain Docker and Podman environments to get * Container resource metrics (Container group
     * instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Docker
     * support requires OneAgent 1.257+. * Podman support requires OneAgent 1.267+.
     */
    docker?: pulumi.Input<inputs.CloudappWorkloaddetectionDocker>;
    /**
     * Enable this setting to get * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace,
     * cloud application and cloud application instance and entities). * Container resource metrics (container group instance
     * entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Similar workloads
     * merged into process groups based on defined rules (see below). * Version detection for services that run in Kubernetes
     * workloads.
     */
    kubernetes?: pulumi.Input<inputs.CloudappWorkloaddetectionKubernetes>;
    /**
     * Enable this setting to * Detect containers based on captured cloud-vendor metadata such as e.g. AWS ECS / Fargate, Azure
     * Container Apps, [and many more](https://dt-url.net/2m02q7b). * Container resource metrics (Container group instance
     * entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
     */
    serverless?: pulumi.Input<inputs.CloudappWorkloaddetectionServerless>;
}

/**
 * The set of arguments for constructing a CloudappWorkloaddetection resource.
 */
export interface CloudappWorkloaddetectionArgs {
    /**
     * Enable this setting to get * Processes of Cloud Foundry application instances merged into process groups by Cloud
     * Foundry application. * Container resource metrics (Container group instance entities) and [related
     * screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
     */
    cloudFoundry: pulumi.Input<inputs.CloudappWorkloaddetectionCloudFoundry>;
    /**
     * Enable this setting for plain Docker and Podman environments to get * Container resource metrics (Container group
     * instance entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Docker
     * support requires OneAgent 1.257+. * Podman support requires OneAgent 1.267+.
     */
    docker: pulumi.Input<inputs.CloudappWorkloaddetectionDocker>;
    /**
     * Enable this setting to get * Insights into your Kubernetes namespaces, workloads and pods (cloud application namespace,
     * cloud application and cloud application instance and entities). * Container resource metrics (container group instance
     * entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups). * Similar workloads
     * merged into process groups based on defined rules (see below). * Version detection for services that run in Kubernetes
     * workloads.
     */
    kubernetes: pulumi.Input<inputs.CloudappWorkloaddetectionKubernetes>;
    /**
     * Enable this setting to * Detect containers based on captured cloud-vendor metadata such as e.g. AWS ECS / Fargate, Azure
     * Container Apps, [and many more](https://dt-url.net/2m02q7b). * Container resource metrics (Container group instance
     * entities) and [related screens](https://www.dynatrace.com/support/help/shortlink/container-groups).
     */
    serverless?: pulumi.Input<inputs.CloudappWorkloaddetectionServerless>;
}
