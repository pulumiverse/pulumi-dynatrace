// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class HubExtensionConfig extends pulumi.CustomResource {
    /**
     * Get an existing HubExtensionConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HubExtensionConfigState, opts?: pulumi.CustomResourceOptions): HubExtensionConfig {
        return new HubExtensionConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/hubExtensionConfig:HubExtensionConfig';

    /**
     * Returns true if the given object is an instance of HubExtensionConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HubExtensionConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HubExtensionConfig.__pulumiType;
    }

    /**
     * The name of the Active Gate Group this monitoring configuration will be defined for
     */
    public readonly activeGateGroup!: pulumi.Output<string | undefined>;
    /**
     * The ID of the host this monitoring configuration will be defined for
     */
    public readonly host!: pulumi.Output<string | undefined>;
    /**
     * The ID of the host group this monitoring configuration will be defined for
     */
    public readonly hostGroup!: pulumi.Output<string | undefined>;
    /**
     * The name of the Management Zone this monitoring configuration will be defined for
     */
    public readonly managementZone!: pulumi.Output<string | undefined>;
    /**
     * The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The JSON encoded value for this monitoring configuration
     */
    public readonly value!: pulumi.Output<string>;

    /**
     * Create a HubExtensionConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HubExtensionConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HubExtensionConfigArgs | HubExtensionConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HubExtensionConfigState | undefined;
            resourceInputs["activeGateGroup"] = state ? state.activeGateGroup : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["hostGroup"] = state ? state.hostGroup : undefined;
            resourceInputs["managementZone"] = state ? state.managementZone : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as HubExtensionConfigArgs | undefined;
            if ((!args || args.value === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            resourceInputs["activeGateGroup"] = args ? args.activeGateGroup : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["hostGroup"] = args ? args.hostGroup : undefined;
            resourceInputs["managementZone"] = args ? args.managementZone : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HubExtensionConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HubExtensionConfig resources.
 */
export interface HubExtensionConfigState {
    /**
     * The name of the Active Gate Group this monitoring configuration will be defined for
     */
    activeGateGroup?: pulumi.Input<string>;
    /**
     * The ID of the host this monitoring configuration will be defined for
     */
    host?: pulumi.Input<string>;
    /**
     * The ID of the host group this monitoring configuration will be defined for
     */
    hostGroup?: pulumi.Input<string>;
    /**
     * The name of the Management Zone this monitoring configuration will be defined for
     */
    managementZone?: pulumi.Input<string>;
    /**
     * The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`
     */
    name?: pulumi.Input<string>;
    /**
     * The JSON encoded value for this monitoring configuration
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HubExtensionConfig resource.
 */
export interface HubExtensionConfigArgs {
    /**
     * The name of the Active Gate Group this monitoring configuration will be defined for
     */
    activeGateGroup?: pulumi.Input<string>;
    /**
     * The ID of the host this monitoring configuration will be defined for
     */
    host?: pulumi.Input<string>;
    /**
     * The ID of the host group this monitoring configuration will be defined for
     */
    hostGroup?: pulumi.Input<string>;
    /**
     * The name of the Management Zone this monitoring configuration will be defined for
     */
    managementZone?: pulumi.Input<string>;
    /**
     * The fully qualified name of the extension, such as `com.dynatrace.extension.jmx-liberty-cp`. You can query for these names using the data source `dynatrace.getHubItems`
     */
    name?: pulumi.Input<string>;
    /**
     * The JSON encoded value for this monitoring configuration
     */
    value: pulumi.Input<string>;
}
