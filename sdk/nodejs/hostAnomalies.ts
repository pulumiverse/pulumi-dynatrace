// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class HostAnomalies extends pulumi.CustomResource {
    /**
     * Get an existing HostAnomalies resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostAnomaliesState, opts?: pulumi.CustomResourceOptions): HostAnomalies {
        return new HostAnomalies(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/hostAnomalies:HostAnomalies';

    /**
     * Returns true if the given object is an instance of HostAnomalies.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostAnomalies {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostAnomalies.__pulumiType;
    }

    /**
     * Configuration of lost connection detection
     */
    public readonly connections!: pulumi.Output<outputs.HostAnomaliesConnections | undefined>;
    /**
     * Configuration of high CPU saturation detection
     */
    public readonly cpu!: pulumi.Output<outputs.HostAnomaliesCpu | undefined>;
    /**
     * Configuration of disk related anomalies
     */
    public readonly disks!: pulumi.Output<outputs.HostAnomaliesDisks | undefined>;
    /**
     * Configuration of high Garbage Collector activity detection
     */
    public readonly gc!: pulumi.Output<outputs.HostAnomaliesGc | undefined>;
    /**
     * Configuration of Java related anomalies
     */
    public readonly java!: pulumi.Output<outputs.HostAnomaliesJava | undefined>;
    /**
     * Configuration of high memory usage detection
     */
    public readonly memory!: pulumi.Output<outputs.HostAnomaliesMemory | undefined>;
    /**
     * Configuration of network related anomalies
     */
    public readonly network!: pulumi.Output<outputs.HostAnomaliesNetwork | undefined>;

    /**
     * Create a HostAnomalies resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: HostAnomaliesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostAnomaliesArgs | HostAnomaliesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostAnomaliesState | undefined;
            resourceInputs["connections"] = state ? state.connections : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["disks"] = state ? state.disks : undefined;
            resourceInputs["gc"] = state ? state.gc : undefined;
            resourceInputs["java"] = state ? state.java : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
        } else {
            const args = argsOrState as HostAnomaliesArgs | undefined;
            resourceInputs["connections"] = args ? args.connections : undefined;
            resourceInputs["cpu"] = args ? args.cpu : undefined;
            resourceInputs["disks"] = args ? args.disks : undefined;
            resourceInputs["gc"] = args ? args.gc : undefined;
            resourceInputs["java"] = args ? args.java : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostAnomalies.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostAnomalies resources.
 */
export interface HostAnomaliesState {
    /**
     * Configuration of lost connection detection
     */
    connections?: pulumi.Input<inputs.HostAnomaliesConnections>;
    /**
     * Configuration of high CPU saturation detection
     */
    cpu?: pulumi.Input<inputs.HostAnomaliesCpu>;
    /**
     * Configuration of disk related anomalies
     */
    disks?: pulumi.Input<inputs.HostAnomaliesDisks>;
    /**
     * Configuration of high Garbage Collector activity detection
     */
    gc?: pulumi.Input<inputs.HostAnomaliesGc>;
    /**
     * Configuration of Java related anomalies
     */
    java?: pulumi.Input<inputs.HostAnomaliesJava>;
    /**
     * Configuration of high memory usage detection
     */
    memory?: pulumi.Input<inputs.HostAnomaliesMemory>;
    /**
     * Configuration of network related anomalies
     */
    network?: pulumi.Input<inputs.HostAnomaliesNetwork>;
}

/**
 * The set of arguments for constructing a HostAnomalies resource.
 */
export interface HostAnomaliesArgs {
    /**
     * Configuration of lost connection detection
     */
    connections?: pulumi.Input<inputs.HostAnomaliesConnections>;
    /**
     * Configuration of high CPU saturation detection
     */
    cpu?: pulumi.Input<inputs.HostAnomaliesCpu>;
    /**
     * Configuration of disk related anomalies
     */
    disks?: pulumi.Input<inputs.HostAnomaliesDisks>;
    /**
     * Configuration of high Garbage Collector activity detection
     */
    gc?: pulumi.Input<inputs.HostAnomaliesGc>;
    /**
     * Configuration of Java related anomalies
     */
    java?: pulumi.Input<inputs.HostAnomaliesJava>;
    /**
     * Configuration of high memory usage detection
     */
    memory?: pulumi.Input<inputs.HostAnomaliesMemory>;
    /**
     * Configuration of network related anomalies
     */
    network?: pulumi.Input<inputs.HostAnomaliesNetwork>;
}
