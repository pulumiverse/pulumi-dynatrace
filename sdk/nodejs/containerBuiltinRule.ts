// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ContainerBuiltinRule extends pulumi.CustomResource {
    /**
     * Get an existing ContainerBuiltinRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerBuiltinRuleState, opts?: pulumi.CustomResourceOptions): ContainerBuiltinRule {
        return new ContainerBuiltinRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/containerBuiltinRule:ContainerBuiltinRule';

    /**
     * Returns true if the given object is an instance of ContainerBuiltinRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContainerBuiltinRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContainerBuiltinRule.__pulumiType;
    }

    /**
     * Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.
     */
    declare public readonly ignoreDockerPauseContainer: pulumi.Output<boolean>;
    /**
     * Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.
     */
    declare public readonly ignoreKubernetesPauseContainer: pulumi.Output<boolean>;
    /**
     * Disable monitoring of intermediate containers created during image build.
     */
    declare public readonly ignoreOpenShiftBuildPodName: pulumi.Output<boolean>;
    /**
     * Disable monitoring of platform internal containers in the openshift-sdn namespace.
     */
    declare public readonly ignoreOpenShiftSdnNamespace: pulumi.Output<boolean>;

    /**
     * Create a ContainerBuiltinRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerBuiltinRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContainerBuiltinRuleArgs | ContainerBuiltinRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContainerBuiltinRuleState | undefined;
            resourceInputs["ignoreDockerPauseContainer"] = state?.ignoreDockerPauseContainer;
            resourceInputs["ignoreKubernetesPauseContainer"] = state?.ignoreKubernetesPauseContainer;
            resourceInputs["ignoreOpenShiftBuildPodName"] = state?.ignoreOpenShiftBuildPodName;
            resourceInputs["ignoreOpenShiftSdnNamespace"] = state?.ignoreOpenShiftSdnNamespace;
        } else {
            const args = argsOrState as ContainerBuiltinRuleArgs | undefined;
            if (args?.ignoreDockerPauseContainer === undefined && !opts.urn) {
                throw new Error("Missing required property 'ignoreDockerPauseContainer'");
            }
            if (args?.ignoreKubernetesPauseContainer === undefined && !opts.urn) {
                throw new Error("Missing required property 'ignoreKubernetesPauseContainer'");
            }
            if (args?.ignoreOpenShiftBuildPodName === undefined && !opts.urn) {
                throw new Error("Missing required property 'ignoreOpenShiftBuildPodName'");
            }
            if (args?.ignoreOpenShiftSdnNamespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'ignoreOpenShiftSdnNamespace'");
            }
            resourceInputs["ignoreDockerPauseContainer"] = args?.ignoreDockerPauseContainer;
            resourceInputs["ignoreKubernetesPauseContainer"] = args?.ignoreKubernetesPauseContainer;
            resourceInputs["ignoreOpenShiftBuildPodName"] = args?.ignoreOpenShiftBuildPodName;
            resourceInputs["ignoreOpenShiftSdnNamespace"] = args?.ignoreOpenShiftSdnNamespace;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ContainerBuiltinRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ContainerBuiltinRule resources.
 */
export interface ContainerBuiltinRuleState {
    /**
     * Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.
     */
    ignoreDockerPauseContainer?: pulumi.Input<boolean>;
    /**
     * Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.
     */
    ignoreKubernetesPauseContainer?: pulumi.Input<boolean>;
    /**
     * Disable monitoring of intermediate containers created during image build.
     */
    ignoreOpenShiftBuildPodName?: pulumi.Input<boolean>;
    /**
     * Disable monitoring of platform internal containers in the openshift-sdn namespace.
     */
    ignoreOpenShiftSdnNamespace?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a ContainerBuiltinRule resource.
 */
export interface ContainerBuiltinRuleArgs {
    /**
     * Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.
     */
    ignoreDockerPauseContainer: pulumi.Input<boolean>;
    /**
     * Disable monitoring of platform internal pause containers in Kubernetes and OpenShift.
     */
    ignoreKubernetesPauseContainer: pulumi.Input<boolean>;
    /**
     * Disable monitoring of intermediate containers created during image build.
     */
    ignoreOpenShiftBuildPodName: pulumi.Input<boolean>;
    /**
     * Disable monitoring of platform internal containers in the openshift-sdn namespace.
     */
    ignoreOpenShiftSdnNamespace: pulumi.Input<boolean>;
}
