// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ms365EmailConnection extends pulumi.CustomResource {
    /**
     * Get an existing Ms365EmailConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ms365EmailConnectionState, opts?: pulumi.CustomResourceOptions): Ms365EmailConnection {
        return new Ms365EmailConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/ms365EmailConnection:Ms365EmailConnection';

    /**
     * Returns true if the given object is an instance of Ms365EmailConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ms365EmailConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ms365EmailConnection.__pulumiType;
    }

    /**
     * Application (client) ID of your app registered in Microsoft Azure App registrations
     */
    declare public readonly clientId: pulumi.Output<string>;
    /**
     * Client secret of your app registered in Microsoft Azure App registrations
     */
    declare public readonly clientSecret: pulumi.Output<string | undefined>;
    /**
     * The email address from which the messages will be sent
     */
    declare public readonly fromAddress: pulumi.Output<string>;
    /**
     * A unique name for the Microsoft 365 email connection
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Directory (tenant) ID of your Azure Active Directory
     */
    declare public readonly tenantId: pulumi.Output<string>;
    /**
     * Possible Values: `clientSecret`
     */
    declare public readonly type: pulumi.Output<string>;

    /**
     * Create a Ms365EmailConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ms365EmailConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ms365EmailConnectionArgs | Ms365EmailConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ms365EmailConnectionState | undefined;
            resourceInputs["clientId"] = state?.clientId;
            resourceInputs["clientSecret"] = state?.clientSecret;
            resourceInputs["fromAddress"] = state?.fromAddress;
            resourceInputs["name"] = state?.name;
            resourceInputs["tenantId"] = state?.tenantId;
            resourceInputs["type"] = state?.type;
        } else {
            const args = argsOrState as Ms365EmailConnectionArgs | undefined;
            if (args?.clientId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if (args?.fromAddress === undefined && !opts.urn) {
                throw new Error("Missing required property 'fromAddress'");
            }
            if (args?.tenantId === undefined && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["clientId"] = args?.clientId;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["fromAddress"] = args?.fromAddress;
            resourceInputs["name"] = args?.name;
            resourceInputs["tenantId"] = args?.tenantId;
            resourceInputs["type"] = args?.type;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Ms365EmailConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ms365EmailConnection resources.
 */
export interface Ms365EmailConnectionState {
    /**
     * Application (client) ID of your app registered in Microsoft Azure App registrations
     */
    clientId?: pulumi.Input<string>;
    /**
     * Client secret of your app registered in Microsoft Azure App registrations
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The email address from which the messages will be sent
     */
    fromAddress?: pulumi.Input<string>;
    /**
     * A unique name for the Microsoft 365 email connection
     */
    name?: pulumi.Input<string>;
    /**
     * Directory (tenant) ID of your Azure Active Directory
     */
    tenantId?: pulumi.Input<string>;
    /**
     * Possible Values: `clientSecret`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ms365EmailConnection resource.
 */
export interface Ms365EmailConnectionArgs {
    /**
     * Application (client) ID of your app registered in Microsoft Azure App registrations
     */
    clientId: pulumi.Input<string>;
    /**
     * Client secret of your app registered in Microsoft Azure App registrations
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * The email address from which the messages will be sent
     */
    fromAddress: pulumi.Input<string>;
    /**
     * A unique name for the Microsoft 365 email connection
     */
    name?: pulumi.Input<string>;
    /**
     * Directory (tenant) ID of your Azure Active Directory
     */
    tenantId: pulumi.Input<string>;
    /**
     * Possible Values: `clientSecret`
     */
    type: pulumi.Input<string>;
}
