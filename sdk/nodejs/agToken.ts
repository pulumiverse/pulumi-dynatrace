// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AgToken extends pulumi.CustomResource {
    /**
     * Get an existing AgToken resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgTokenState, opts?: pulumi.CustomResourceOptions): AgToken {
        return new AgToken(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/agToken:AgToken';

    /**
     * Returns true if the given object is an instance of AgToken.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AgToken {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AgToken.__pulumiType;
    }

    /**
     * The expiration date of the token. You can use one of the following formats: * Timestamp in UTC milliseconds. *
     * Human-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space
     * character instead of the T. Seconds and fractions of a second are optional. * Relative timeframe, back from now. The
     * format is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds
     * all the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You
     * can also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are: -
     * m: minutes - h: hours - d: days - w: weeks - M: months - y: years
     */
    public readonly expirationDate!: pulumi.Output<string | undefined>;
    /**
     * The name of the token.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)
     */
    public readonly seed!: pulumi.Output<boolean | undefined>;
    /**
     * The tenant token. This information isn't directly related to the Active Gate Token. It's included for convenience. You
     * require the permission `InstallerDownload` for that attribute to get populated
     */
    public /*out*/ readonly tenantToken!: pulumi.Output<string>;
    /**
     * The secret of the token.
     */
    public /*out*/ readonly token!: pulumi.Output<string>;
    /**
     * The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a AgToken resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgTokenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgTokenArgs | AgTokenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgTokenState | undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["seed"] = state ? state.seed : undefined;
            resourceInputs["tenantToken"] = state ? state.tenantToken : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as AgTokenArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["expirationDate"] = args ? args.expirationDate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["seed"] = args ? args.seed : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["tenantToken"] = undefined /*out*/;
            resourceInputs["token"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["tenantToken", "token"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AgToken.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AgToken resources.
 */
export interface AgTokenState {
    /**
     * The expiration date of the token. You can use one of the following formats: * Timestamp in UTC milliseconds. *
     * Human-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space
     * character instead of the T. Seconds and fractions of a second are optional. * Relative timeframe, back from now. The
     * format is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds
     * all the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You
     * can also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are: -
     * m: minutes - h: hours - d: days - w: weeks - M: months - y: years
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The name of the token.
     */
    name?: pulumi.Input<string>;
    /**
     * The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)
     */
    seed?: pulumi.Input<boolean>;
    /**
     * The tenant token. This information isn't directly related to the Active Gate Token. It's included for convenience. You
     * require the permission `InstallerDownload` for that attribute to get populated
     */
    tenantToken?: pulumi.Input<string>;
    /**
     * The secret of the token.
     */
    token?: pulumi.Input<string>;
    /**
     * The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AgToken resource.
 */
export interface AgTokenArgs {
    /**
     * The expiration date of the token. You can use one of the following formats: * Timestamp in UTC milliseconds. *
     * Human-readable format of 2021-01-25T05:57:01.123+01:00. If no time zone is specified, UTC is used. You can use a space
     * character instead of the T. Seconds and fractions of a second are optional. * Relative timeframe, back from now. The
     * format is now-NU/A, where N is the amount of time, U is the unit of time, and A is an alignment. The alignment rounds
     * all the smaller values to the nearest zero in the past. For example, now-1y/w is one year back, aligned by a week. You
     * can also specify relative timeframe without an alignment: now-NU. Supported time units for the relative timeframe are: -
     * m: minutes - h: hours - d: days - w: weeks - M: months - y: years
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The name of the token.
     */
    name?: pulumi.Input<string>;
    /**
     * The token is a seed token (true) or an individual token (false). We recommend the individual token option (false)
     */
    seed?: pulumi.Input<boolean>;
    /**
     * The type of the ActiveGate for which the token is valid. Possible values are `ENVIRONMENT` or `CLUSTER`
     */
    type: pulumi.Input<string>;
}
