// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * > To utilize this data source, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **View SLOs** (`slo:slos:read`) and **View SLO objective templates** (`slo:objective-templates:read`).
 *
 * The SLO objective templates data source allows to retrieve a list of all templates.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumiverse/dynatrace";
 *
 * const testPlatformSloTemplates = dynatrace.getPlatformSloTemplates({});
 * export const test = testPlatformSloTemplates;
 * ```
 */
export function getPlatformSloTemplates(opts?: pulumi.InvokeOptions): Promise<GetPlatformSloTemplatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dynatrace:index/getPlatformSloTemplates:getPlatformSloTemplates", {
    }, opts);
}

/**
 * A collection of values returned by getPlatformSloTemplates.
 */
export interface GetPlatformSloTemplatesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly templates: outputs.GetPlatformSloTemplatesTemplate[];
}
/**
 * > To utilize this data source, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **View SLOs** (`slo:slos:read`) and **View SLO objective templates** (`slo:objective-templates:read`).
 *
 * The SLO objective templates data source allows to retrieve a list of all templates.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dynatrace from "@pulumiverse/dynatrace";
 *
 * const testPlatformSloTemplates = dynatrace.getPlatformSloTemplates({});
 * export const test = testPlatformSloTemplates;
 * ```
 */
export function getPlatformSloTemplatesOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPlatformSloTemplatesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dynatrace:index/getPlatformSloTemplates:getPlatformSloTemplates", {
    }, opts);
}
