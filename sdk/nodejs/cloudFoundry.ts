// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudFoundry extends pulumi.CustomResource {
    /**
     * Get an existing CloudFoundry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudFoundryState, opts?: pulumi.CustomResourceOptions): CloudFoundry {
        return new CloudFoundry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/cloudFoundry:CloudFoundry';

    /**
     * Returns true if the given object is an instance of CloudFoundry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudFoundry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudFoundry.__pulumiType;
    }

    /**
     * ActiveGate group
     */
    declare public readonly activeGateGroup: pulumi.Output<string | undefined>;
    /**
     * Cloud Foundry API Target
     */
    declare public readonly apiUrl: pulumi.Output<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    declare public readonly enabled: pulumi.Output<boolean>;
    /**
     * Name this connection
     */
    declare public readonly label: pulumi.Output<string>;
    /**
     * Cloud Foundry Authentication Endpoint
     */
    declare public readonly loginUrl: pulumi.Output<string>;
    /**
     * Cloud Foundry Password
     */
    declare public readonly password: pulumi.Output<string>;
    /**
     * Cloud Foundry Username
     */
    declare public readonly username: pulumi.Output<string>;

    /**
     * Create a CloudFoundry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudFoundryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudFoundryArgs | CloudFoundryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudFoundryState | undefined;
            resourceInputs["activeGateGroup"] = state?.activeGateGroup;
            resourceInputs["apiUrl"] = state?.apiUrl;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["label"] = state?.label;
            resourceInputs["loginUrl"] = state?.loginUrl;
            resourceInputs["password"] = state?.password;
            resourceInputs["username"] = state?.username;
        } else {
            const args = argsOrState as CloudFoundryArgs | undefined;
            if (args?.apiUrl === undefined && !opts.urn) {
                throw new Error("Missing required property 'apiUrl'");
            }
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if (args?.label === undefined && !opts.urn) {
                throw new Error("Missing required property 'label'");
            }
            if (args?.loginUrl === undefined && !opts.urn) {
                throw new Error("Missing required property 'loginUrl'");
            }
            if (args?.password === undefined && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if (args?.username === undefined && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["activeGateGroup"] = args?.activeGateGroup;
            resourceInputs["apiUrl"] = args?.apiUrl;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["label"] = args?.label;
            resourceInputs["loginUrl"] = args?.loginUrl;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["username"] = args?.username;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CloudFoundry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudFoundry resources.
 */
export interface CloudFoundryState {
    /**
     * ActiveGate group
     */
    activeGateGroup?: pulumi.Input<string>;
    /**
     * Cloud Foundry API Target
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Name this connection
     */
    label?: pulumi.Input<string>;
    /**
     * Cloud Foundry Authentication Endpoint
     */
    loginUrl?: pulumi.Input<string>;
    /**
     * Cloud Foundry Password
     */
    password?: pulumi.Input<string>;
    /**
     * Cloud Foundry Username
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudFoundry resource.
 */
export interface CloudFoundryArgs {
    /**
     * ActiveGate group
     */
    activeGateGroup?: pulumi.Input<string>;
    /**
     * Cloud Foundry API Target
     */
    apiUrl: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * Name this connection
     */
    label: pulumi.Input<string>;
    /**
     * Cloud Foundry Authentication Endpoint
     */
    loginUrl: pulumi.Input<string>;
    /**
     * Cloud Foundry Password
     */
    password: pulumi.Input<string>;
    /**
     * Cloud Foundry Username
     */
    username: pulumi.Input<string>;
}
