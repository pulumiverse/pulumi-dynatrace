// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BusinessEventsCapturingVariants extends pulumi.CustomResource {
    /**
     * Get an existing BusinessEventsCapturingVariants resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BusinessEventsCapturingVariantsState, opts?: pulumi.CustomResourceOptions): BusinessEventsCapturingVariants {
        return new BusinessEventsCapturingVariants(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/businessEventsCapturingVariants:BusinessEventsCapturingVariants';

    /**
     * Returns true if the given object is an instance of BusinessEventsCapturingVariants.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BusinessEventsCapturingVariants {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BusinessEventsCapturingVariants.__pulumiType;
    }

    /**
     * Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
     */
    declare public readonly contentTypeMatcher: pulumi.Output<string>;
    /**
     * Content-type match value
     */
    declare public readonly contentTypeValue: pulumi.Output<string>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    declare public readonly insertAfter: pulumi.Output<string>;
    /**
     * Possible Values: `JSON`, `Raw`, `Text`, `URLencoded`, `XML`
     */
    declare public readonly parser: pulumi.Output<string>;
    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     */
    declare public readonly scope: pulumi.Output<string | undefined>;

    /**
     * Create a BusinessEventsCapturingVariants resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BusinessEventsCapturingVariantsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BusinessEventsCapturingVariantsArgs | BusinessEventsCapturingVariantsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BusinessEventsCapturingVariantsState | undefined;
            resourceInputs["contentTypeMatcher"] = state?.contentTypeMatcher;
            resourceInputs["contentTypeValue"] = state?.contentTypeValue;
            resourceInputs["insertAfter"] = state?.insertAfter;
            resourceInputs["parser"] = state?.parser;
            resourceInputs["scope"] = state?.scope;
        } else {
            const args = argsOrState as BusinessEventsCapturingVariantsArgs | undefined;
            if (args?.contentTypeMatcher === undefined && !opts.urn) {
                throw new Error("Missing required property 'contentTypeMatcher'");
            }
            if (args?.contentTypeValue === undefined && !opts.urn) {
                throw new Error("Missing required property 'contentTypeValue'");
            }
            if (args?.parser === undefined && !opts.urn) {
                throw new Error("Missing required property 'parser'");
            }
            resourceInputs["contentTypeMatcher"] = args?.contentTypeMatcher;
            resourceInputs["contentTypeValue"] = args?.contentTypeValue;
            resourceInputs["insertAfter"] = args?.insertAfter;
            resourceInputs["parser"] = args?.parser;
            resourceInputs["scope"] = args?.scope;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BusinessEventsCapturingVariants.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BusinessEventsCapturingVariants resources.
 */
export interface BusinessEventsCapturingVariantsState {
    /**
     * Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
     */
    contentTypeMatcher?: pulumi.Input<string>;
    /**
     * Content-type match value
     */
    contentTypeValue?: pulumi.Input<string>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    insertAfter?: pulumi.Input<string>;
    /**
     * Possible Values: `JSON`, `Raw`, `Text`, `URLencoded`, `XML`
     */
    parser?: pulumi.Input<string>;
    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BusinessEventsCapturingVariants resource.
 */
export interface BusinessEventsCapturingVariantsArgs {
    /**
     * Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
     */
    contentTypeMatcher: pulumi.Input<string>;
    /**
     * Content-type match value
     */
    contentTypeValue: pulumi.Input<string>;
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    insertAfter?: pulumi.Input<string>;
    /**
     * Possible Values: `JSON`, `Raw`, `Text`, `URLencoded`, `XML`
     */
    parser: pulumi.Input<string>;
    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
}
