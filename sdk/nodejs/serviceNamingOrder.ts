// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ServiceNamingOrder extends pulumi.CustomResource {
    /**
     * Get an existing ServiceNamingOrder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceNamingOrderState, opts?: pulumi.CustomResourceOptions): ServiceNamingOrder {
        return new ServiceNamingOrder(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/serviceNamingOrder:ServiceNamingOrder';

    /**
     * Returns true if the given object is an instance of ServiceNamingOrder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceNamingOrder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceNamingOrder.__pulumiType;
    }

    /**
     * The IDs of the naming rules to define the order for
     */
    public readonly namingRuleIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ServiceNamingOrder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ServiceNamingOrderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceNamingOrderArgs | ServiceNamingOrderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceNamingOrderState | undefined;
            resourceInputs["namingRuleIds"] = state ? state.namingRuleIds : undefined;
        } else {
            const args = argsOrState as ServiceNamingOrderArgs | undefined;
            resourceInputs["namingRuleIds"] = args ? args.namingRuleIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceNamingOrder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceNamingOrder resources.
 */
export interface ServiceNamingOrderState {
    /**
     * The IDs of the naming rules to define the order for
     */
    namingRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ServiceNamingOrder resource.
 */
export interface ServiceNamingOrderArgs {
    /**
     * The IDs of the naming rules to define the order for
     */
    namingRuleIds?: pulumi.Input<pulumi.Input<string>[]>;
}
