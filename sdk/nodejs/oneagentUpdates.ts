// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OneagentUpdates extends pulumi.CustomResource {
    /**
     * Get an existing OneagentUpdates resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OneagentUpdatesState, opts?: pulumi.CustomResourceOptions): OneagentUpdates {
        return new OneagentUpdates(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/oneagentUpdates:OneagentUpdates';

    /**
     * Returns true if the given object is an instance of OneagentUpdates.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OneagentUpdates {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OneagentUpdates.__pulumiType;
    }

    /**
     * Maintenance windows
     */
    public readonly maintenanceWindows!: pulumi.Output<outputs.OneagentUpdatesMaintenanceWindows | undefined>;
    /**
     * Revision
     */
    public readonly revision!: pulumi.Output<string | undefined>;
    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     */
    public readonly scope!: pulumi.Output<string | undefined>;
    /**
     * Target version
     */
    public readonly targetVersion!: pulumi.Output<string | undefined>;
    /**
     * Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
     */
    public readonly updateMode!: pulumi.Output<string>;

    /**
     * Create a OneagentUpdates resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OneagentUpdatesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OneagentUpdatesArgs | OneagentUpdatesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OneagentUpdatesState | undefined;
            resourceInputs["maintenanceWindows"] = state ? state.maintenanceWindows : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["targetVersion"] = state ? state.targetVersion : undefined;
            resourceInputs["updateMode"] = state ? state.updateMode : undefined;
        } else {
            const args = argsOrState as OneagentUpdatesArgs | undefined;
            if ((!args || args.updateMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'updateMode'");
            }
            resourceInputs["maintenanceWindows"] = args ? args.maintenanceWindows : undefined;
            resourceInputs["revision"] = args ? args.revision : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["targetVersion"] = args ? args.targetVersion : undefined;
            resourceInputs["updateMode"] = args ? args.updateMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OneagentUpdates.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OneagentUpdates resources.
 */
export interface OneagentUpdatesState {
    /**
     * Maintenance windows
     */
    maintenanceWindows?: pulumi.Input<inputs.OneagentUpdatesMaintenanceWindows>;
    /**
     * Revision
     */
    revision?: pulumi.Input<string>;
    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
    /**
     * Target version
     */
    targetVersion?: pulumi.Input<string>;
    /**
     * Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
     */
    updateMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OneagentUpdates resource.
 */
export interface OneagentUpdatesArgs {
    /**
     * Maintenance windows
     */
    maintenanceWindows?: pulumi.Input<inputs.OneagentUpdatesMaintenanceWindows>;
    /**
     * Revision
     */
    revision?: pulumi.Input<string>;
    /**
     * The scope of this setting (HOST, HOST_GROUP). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
    /**
     * Target version
     */
    targetVersion?: pulumi.Input<string>;
    /**
     * Possible Values: `AUTOMATIC`, `AUTOMATIC_DURING_MW`, `MANUAL`
     */
    updateMode: pulumi.Input<string>;
}
