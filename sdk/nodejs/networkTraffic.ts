// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class NetworkTraffic extends pulumi.CustomResource {
    /**
     * Get an existing NetworkTraffic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkTrafficState, opts?: pulumi.CustomResourceOptions): NetworkTraffic {
        return new NetworkTraffic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/networkTraffic:NetworkTraffic';

    /**
     * Returns true if the given object is an instance of NetworkTraffic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkTraffic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkTraffic.__pulumiType;
    }

    /**
     * Providing a host IP address, you will exclude network traffic only in calculating connectivity (other metrics will still be calculated).
     */
    declare public readonly excludeIp: pulumi.Output<outputs.NetworkTrafficExcludeIp | undefined>;
    /**
     * Selecting a network interface, you will exclude all network traffic on that interface from being monitored. You can select from the list below what to not monitor, or input it manually using the "other one" option.
     */
    declare public readonly excludeNic: pulumi.Output<outputs.NetworkTrafficExcludeNic | undefined>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    declare public readonly hostId: pulumi.Output<string>;

    /**
     * Create a NetworkTraffic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkTrafficArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkTrafficArgs | NetworkTrafficState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkTrafficState | undefined;
            resourceInputs["excludeIp"] = state?.excludeIp;
            resourceInputs["excludeNic"] = state?.excludeNic;
            resourceInputs["hostId"] = state?.hostId;
        } else {
            const args = argsOrState as NetworkTrafficArgs | undefined;
            if (args?.hostId === undefined && !opts.urn) {
                throw new Error("Missing required property 'hostId'");
            }
            resourceInputs["excludeIp"] = args?.excludeIp;
            resourceInputs["excludeNic"] = args?.excludeNic;
            resourceInputs["hostId"] = args?.hostId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkTraffic.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkTraffic resources.
 */
export interface NetworkTrafficState {
    /**
     * Providing a host IP address, you will exclude network traffic only in calculating connectivity (other metrics will still be calculated).
     */
    excludeIp?: pulumi.Input<inputs.NetworkTrafficExcludeIp>;
    /**
     * Selecting a network interface, you will exclude all network traffic on that interface from being monitored. You can select from the list below what to not monitor, or input it manually using the "other one" option.
     */
    excludeNic?: pulumi.Input<inputs.NetworkTrafficExcludeNic>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    hostId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkTraffic resource.
 */
export interface NetworkTrafficArgs {
    /**
     * Providing a host IP address, you will exclude network traffic only in calculating connectivity (other metrics will still be calculated).
     */
    excludeIp?: pulumi.Input<inputs.NetworkTrafficExcludeIp>;
    /**
     * Selecting a network interface, you will exclude all network traffic on that interface from being monitored. You can select from the list below what to not monitor, or input it manually using the "other one" option.
     */
    excludeNic?: pulumi.Input<inputs.NetworkTrafficExcludeNic>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    hostId: pulumi.Input<string>;
}
