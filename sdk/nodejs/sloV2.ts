// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class SloV2 extends pulumi.CustomResource {
    /**
     * Get an existing SloV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SloV2State, opts?: pulumi.CustomResourceOptions): SloV2 {
        return new SloV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/sloV2:SloV2';

    /**
     * Returns true if the given object is an instance of SloV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SloV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SloV2.__pulumiType;
    }

    /**
     * The description of the SLO
     */
    declare public readonly customDescription: pulumi.Output<string | undefined>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    declare public readonly enabled: pulumi.Output<boolean>;
    /**
     * ### Error budget burn rate
     */
    declare public readonly errorBudgetBurnRate: pulumi.Output<outputs.SloV2ErrorBudgetBurnRate>;
    /**
     * Possible Values: `AGGREGATE`
     */
    declare public readonly evaluationType: pulumi.Output<string>;
    /**
     * Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
     */
    declare public readonly evaluationWindow: pulumi.Output<string>;
    /**
     * Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
     */
    declare public readonly filter: pulumi.Output<string>;
    /**
     * The ID of this setting when referred to by the Config REST API V1
     */
    declare public readonly legacyId: pulumi.Output<string>;
    /**
     * For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
     */
    declare public readonly metricExpression: pulumi.Output<string>;
    /**
     * Metric name
     */
    declare public readonly metricName: pulumi.Output<string>;
    /**
     * SLO name
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Set the target value of the SLO. A percentage below this value indicates a failure.
     */
    declare public readonly targetSuccess: pulumi.Output<number>;
    /**
     * Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
     */
    declare public readonly targetWarning: pulumi.Output<number>;

    /**
     * Create a SloV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SloV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SloV2Args | SloV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SloV2State | undefined;
            resourceInputs["customDescription"] = state?.customDescription;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["errorBudgetBurnRate"] = state?.errorBudgetBurnRate;
            resourceInputs["evaluationType"] = state?.evaluationType;
            resourceInputs["evaluationWindow"] = state?.evaluationWindow;
            resourceInputs["filter"] = state?.filter;
            resourceInputs["legacyId"] = state?.legacyId;
            resourceInputs["metricExpression"] = state?.metricExpression;
            resourceInputs["metricName"] = state?.metricName;
            resourceInputs["name"] = state?.name;
            resourceInputs["targetSuccess"] = state?.targetSuccess;
            resourceInputs["targetWarning"] = state?.targetWarning;
        } else {
            const args = argsOrState as SloV2Args | undefined;
            if (args?.enabled === undefined && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if (args?.errorBudgetBurnRate === undefined && !opts.urn) {
                throw new Error("Missing required property 'errorBudgetBurnRate'");
            }
            if (args?.evaluationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'evaluationType'");
            }
            if (args?.evaluationWindow === undefined && !opts.urn) {
                throw new Error("Missing required property 'evaluationWindow'");
            }
            if (args?.filter === undefined && !opts.urn) {
                throw new Error("Missing required property 'filter'");
            }
            if (args?.metricExpression === undefined && !opts.urn) {
                throw new Error("Missing required property 'metricExpression'");
            }
            if (args?.targetSuccess === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetSuccess'");
            }
            if (args?.targetWarning === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetWarning'");
            }
            resourceInputs["customDescription"] = args?.customDescription;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["errorBudgetBurnRate"] = args?.errorBudgetBurnRate;
            resourceInputs["evaluationType"] = args?.evaluationType;
            resourceInputs["evaluationWindow"] = args?.evaluationWindow;
            resourceInputs["filter"] = args?.filter;
            resourceInputs["legacyId"] = args?.legacyId;
            resourceInputs["metricExpression"] = args?.metricExpression;
            resourceInputs["metricName"] = args?.metricName;
            resourceInputs["name"] = args?.name;
            resourceInputs["targetSuccess"] = args?.targetSuccess;
            resourceInputs["targetWarning"] = args?.targetWarning;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SloV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SloV2 resources.
 */
export interface SloV2State {
    /**
     * The description of the SLO
     */
    customDescription?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * ### Error budget burn rate
     */
    errorBudgetBurnRate?: pulumi.Input<inputs.SloV2ErrorBudgetBurnRate>;
    /**
     * Possible Values: `AGGREGATE`
     */
    evaluationType?: pulumi.Input<string>;
    /**
     * Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
     */
    evaluationWindow?: pulumi.Input<string>;
    /**
     * Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
     */
    filter?: pulumi.Input<string>;
    /**
     * The ID of this setting when referred to by the Config REST API V1
     */
    legacyId?: pulumi.Input<string>;
    /**
     * For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
     */
    metricExpression?: pulumi.Input<string>;
    /**
     * Metric name
     */
    metricName?: pulumi.Input<string>;
    /**
     * SLO name
     */
    name?: pulumi.Input<string>;
    /**
     * Set the target value of the SLO. A percentage below this value indicates a failure.
     */
    targetSuccess?: pulumi.Input<number>;
    /**
     * Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
     */
    targetWarning?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SloV2 resource.
 */
export interface SloV2Args {
    /**
     * The description of the SLO
     */
    customDescription?: pulumi.Input<string>;
    /**
     * This setting is enabled (`true`) or disabled (`false`)
     */
    enabled: pulumi.Input<boolean>;
    /**
     * ### Error budget burn rate
     */
    errorBudgetBurnRate: pulumi.Input<inputs.SloV2ErrorBudgetBurnRate>;
    /**
     * Possible Values: `AGGREGATE`
     */
    evaluationType: pulumi.Input<string>;
    /**
     * Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
     */
    evaluationWindow: pulumi.Input<string>;
    /**
     * Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
     */
    filter: pulumi.Input<string>;
    /**
     * The ID of this setting when referred to by the Config REST API V1
     */
    legacyId?: pulumi.Input<string>;
    /**
     * For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
     */
    metricExpression: pulumi.Input<string>;
    /**
     * Metric name
     */
    metricName?: pulumi.Input<string>;
    /**
     * SLO name
     */
    name?: pulumi.Input<string>;
    /**
     * Set the target value of the SLO. A percentage below this value indicates a failure.
     */
    targetSuccess: pulumi.Input<number>;
    /**
     * Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
     */
    targetWarning: pulumi.Input<number>;
}
