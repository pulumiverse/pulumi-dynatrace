// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class ApplicationDataPrivacy extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationDataPrivacy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationDataPrivacyState, opts?: pulumi.CustomResourceOptions): ApplicationDataPrivacy {
        return new ApplicationDataPrivacy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/applicationDataPrivacy:ApplicationDataPrivacy';

    /**
     * Returns true if the given object is an instance of ApplicationDataPrivacy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationDataPrivacy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationDataPrivacy.__pulumiType;
    }

    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
     */
    public readonly dataCaptureOptIn!: pulumi.Output<boolean | undefined>;
    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) How to handle the "Do Not Track" header:
     */
    public readonly doNotTrackBehaviour!: pulumi.Output<string>;
    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to set persistent cookie in order to recognize returning devices
     */
    public readonly persistentCookieForUserTracking!: pulumi.Output<boolean | undefined>;
    /**
     * (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay
     */
    public readonly sessionReplayDataPrivacy!: pulumi.Output<outputs.ApplicationDataPrivacySessionReplayDataPrivacy>;
    /**
     * Dynatrace entity ID of the web application
     */
    public readonly webApplicationId!: pulumi.Output<string>;

    /**
     * Create a ApplicationDataPrivacy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationDataPrivacyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationDataPrivacyArgs | ApplicationDataPrivacyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationDataPrivacyState | undefined;
            resourceInputs["dataCaptureOptIn"] = state ? state.dataCaptureOptIn : undefined;
            resourceInputs["doNotTrackBehaviour"] = state ? state.doNotTrackBehaviour : undefined;
            resourceInputs["persistentCookieForUserTracking"] = state ? state.persistentCookieForUserTracking : undefined;
            resourceInputs["sessionReplayDataPrivacy"] = state ? state.sessionReplayDataPrivacy : undefined;
            resourceInputs["webApplicationId"] = state ? state.webApplicationId : undefined;
        } else {
            const args = argsOrState as ApplicationDataPrivacyArgs | undefined;
            if ((!args || args.doNotTrackBehaviour === undefined) && !opts.urn) {
                throw new Error("Missing required property 'doNotTrackBehaviour'");
            }
            if ((!args || args.sessionReplayDataPrivacy === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sessionReplayDataPrivacy'");
            }
            if ((!args || args.webApplicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'webApplicationId'");
            }
            resourceInputs["dataCaptureOptIn"] = args ? args.dataCaptureOptIn : undefined;
            resourceInputs["doNotTrackBehaviour"] = args ? args.doNotTrackBehaviour : undefined;
            resourceInputs["persistentCookieForUserTracking"] = args ? args.persistentCookieForUserTracking : undefined;
            resourceInputs["sessionReplayDataPrivacy"] = args ? args.sessionReplayDataPrivacy : undefined;
            resourceInputs["webApplicationId"] = args ? args.webApplicationId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationDataPrivacy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationDataPrivacy resources.
 */
export interface ApplicationDataPrivacyState {
    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
     */
    dataCaptureOptIn?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) How to handle the "Do Not Track" header:
     */
    doNotTrackBehaviour?: pulumi.Input<string>;
    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to set persistent cookie in order to recognize returning devices
     */
    persistentCookieForUserTracking?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay
     */
    sessionReplayDataPrivacy?: pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacy>;
    /**
     * Dynatrace entity ID of the web application
     */
    webApplicationId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationDataPrivacy resource.
 */
export interface ApplicationDataPrivacyArgs {
    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to disable data capture and cookies until JavaScriptAPI `dtrum.enable()` is called
     */
    dataCaptureOptIn?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) How to handle the "Do Not Track" header:
     */
    doNotTrackBehaviour: pulumi.Input<string>;
    /**
     * (Field has overlap with `dynatrace.DataPrivacy`) Set to `true` to set persistent cookie in order to recognize returning devices
     */
    persistentCookieForUserTracking?: pulumi.Input<boolean>;
    /**
     * (Field has overlap with `dynatrace.SessionReplayWebPrivacy`) Data privacy settings for Session Replay
     */
    sessionReplayDataPrivacy: pulumi.Input<inputs.ApplicationDataPrivacySessionReplayDataPrivacy>;
    /**
     * Dynatrace entity ID of the web application
     */
    webApplicationId: pulumi.Input<string>;
}
