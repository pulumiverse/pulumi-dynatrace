// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WebAppResourceTypes extends pulumi.CustomResource {
    /**
     * Get an existing WebAppResourceTypes resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebAppResourceTypesState, opts?: pulumi.CustomResourceOptions): WebAppResourceTypes {
        return new WebAppResourceTypes(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/webAppResourceTypes:WebAppResourceTypes';

    /**
     * Returns true if the given object is an instance of WebAppResourceTypes.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebAppResourceTypes {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebAppResourceTypes.__pulumiType;
    }

    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    public readonly insertAfter!: pulumi.Output<string>;
    /**
     * Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
     */
    public readonly primaryResourceType!: pulumi.Output<string>;
    /**
     * The regular expression to detect the resource.
     */
    public readonly regularExpression!: pulumi.Output<string>;
    /**
     * The secondary type of the resource.
     */
    public readonly secondaryResourceType!: pulumi.Output<string | undefined>;

    /**
     * Create a WebAppResourceTypes resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebAppResourceTypesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebAppResourceTypesArgs | WebAppResourceTypesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebAppResourceTypesState | undefined;
            resourceInputs["insertAfter"] = state ? state.insertAfter : undefined;
            resourceInputs["primaryResourceType"] = state ? state.primaryResourceType : undefined;
            resourceInputs["regularExpression"] = state ? state.regularExpression : undefined;
            resourceInputs["secondaryResourceType"] = state ? state.secondaryResourceType : undefined;
        } else {
            const args = argsOrState as WebAppResourceTypesArgs | undefined;
            if ((!args || args.primaryResourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryResourceType'");
            }
            if ((!args || args.regularExpression === undefined) && !opts.urn) {
                throw new Error("Missing required property 'regularExpression'");
            }
            resourceInputs["insertAfter"] = args ? args.insertAfter : undefined;
            resourceInputs["primaryResourceType"] = args ? args.primaryResourceType : undefined;
            resourceInputs["regularExpression"] = args ? args.regularExpression : undefined;
            resourceInputs["secondaryResourceType"] = args ? args.secondaryResourceType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebAppResourceTypes.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebAppResourceTypes resources.
 */
export interface WebAppResourceTypesState {
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    insertAfter?: pulumi.Input<string>;
    /**
     * Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
     */
    primaryResourceType?: pulumi.Input<string>;
    /**
     * The regular expression to detect the resource.
     */
    regularExpression?: pulumi.Input<string>;
    /**
     * The secondary type of the resource.
     */
    secondaryResourceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebAppResourceTypes resource.
 */
export interface WebAppResourceTypesArgs {
    /**
     * Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
     */
    insertAfter?: pulumi.Input<string>;
    /**
     * Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
     */
    primaryResourceType: pulumi.Input<string>;
    /**
     * The regular expression to detect the resource.
     */
    regularExpression: pulumi.Input<string>;
    /**
     * The secondary type of the resource.
     */
    secondaryResourceType?: pulumi.Input<string>;
}
