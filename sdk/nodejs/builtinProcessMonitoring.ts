// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BuiltinProcessMonitoring extends pulumi.CustomResource {
    /**
     * Get an existing BuiltinProcessMonitoring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BuiltinProcessMonitoringState, opts?: pulumi.CustomResourceOptions): BuiltinProcessMonitoring {
        return new BuiltinProcessMonitoring(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/builtinProcessMonitoring:BuiltinProcessMonitoring';

    /**
     * Returns true if the given object is an instance of BuiltinProcessMonitoring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BuiltinProcessMonitoring {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BuiltinProcessMonitoring.__pulumiType;
    }

    /**
     * Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
     */
    public readonly aspnetcore!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
     */
    public readonly aspnetcoreAgentlistener!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
     */
    public readonly aspnetcoreAgentworker!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 37 - Do monitor processes if Cloud Foundry application exists
     */
    public readonly cf!: pulumi.Output<boolean | undefined>;
    /**
     * Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
     */
    public readonly cfAppsmanagerjs!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 41 - Do monitor processes if container name exists
     */
    public readonly container!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
     */
    public readonly dockerPauseamd64!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
     */
    public readonly exeAdapter!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
     */
    public readonly exeAgentlistener!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
     */
    public readonly exeAgentworker!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
     */
    public readonly exeAuctioneer!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
     */
    public readonly exeAuditbeat!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
     */
    public readonly exeBbs!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
     */
    public readonly exeCaddy!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
     */
    public readonly exeCaliconode!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
     */
    public readonly exeCasclient!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
     */
    public readonly exeCcuploader!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
     */
    public readonly exeDoppler!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
     */
    public readonly exeFilebeat!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
     */
    public readonly exeFlexnetjobexecutorservice!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
     */
    public readonly exeFlexnetmaintenanceremotingservice!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
     */
    public readonly exeFunctionbeat!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
     */
    public readonly exeGorouter!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
     */
    public readonly exeGrootfs!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
     */
    public readonly exeHeartbeat!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
     */
    public readonly exeInfluxd!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 13 - Do monitor processes if EXE name equals 'locket'
     */
    public readonly exeLocket!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
     */
    public readonly exeMetricbeat!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 14 - Do monitor processes if EXE name equals 'metron'
     */
    public readonly exeMetron!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
     */
    public readonly exeMqsi!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
     */
    public readonly exeOc!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
     */
    public readonly exeOpenhandlecollector!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
     */
    public readonly exeOptcnibinhostlocal!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
     */
    public readonly exePacketbeat!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
     */
    public readonly exePhpcgi!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 16 - Do monitor processes if EXE name equals 'rep'
     */
    public readonly exeRep!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
     */
    public readonly exeRouteemitter!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
     */
    public readonly exeRouteregistrar!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
     */
    public readonly exeRoutingapi!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
     */
    public readonly exeSchedular!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
     */
    public readonly exeSilkdaemon!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
     */
    public readonly exeSwitchboard!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
     */
    public readonly exeSyslogdrainbinder!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
     */
    public readonly exeTardis!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
     */
    public readonly exeTmpbuildpacks!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
     */
    public readonly exeTpswatcher!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
     */
    public readonly exeTrafficcontroller!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
     */
    public readonly exeUipath!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
     */
    public readonly exeUserbinpiper!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
     */
    public readonly exeW3wp!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
     */
    public readonly exeYq!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
     */
    public readonly goStatic!: pulumi.Output<boolean | undefined>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    public readonly hostGroupId!: pulumi.Output<string | undefined>;
    /**
     * Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
     */
    public readonly jarDtibmmqconnector!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
     */
    public readonly jarEclipseequinox!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
     */
    public readonly k8sCassandraoperator!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
     */
    public readonly k8sContainerpod!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 40 - Do monitor processes if Kubernetes namespace exists
     */
    public readonly k8sNamespace!: pulumi.Output<boolean | undefined>;
    /**
     * Do not monitor processes if Node.js script equals 'bin/pm2'
     */
    public readonly nodeBinpm2!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
     */
    public readonly nodeCorepack!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
     */
    public readonly nodeGrunt!: pulumi.Output<boolean | undefined>;
    /**
     * Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
     */
    public readonly nodeGulpcli!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
     */
    public readonly nodeNodegyp!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
     */
    public readonly nodeNodepregyp!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
     */
    public readonly nodeNpm!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
     */
    public readonly nodePrebuildinstall!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
     */
    public readonly nodeTypescript!: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
     */
    public readonly nodeYarn!: pulumi.Output<boolean | undefined>;
    /**
     * (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
     */
    public readonly phpScript!: pulumi.Output<boolean | undefined>;

    /**
     * Create a BuiltinProcessMonitoring resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BuiltinProcessMonitoringArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BuiltinProcessMonitoringArgs | BuiltinProcessMonitoringState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BuiltinProcessMonitoringState | undefined;
            resourceInputs["aspnetcore"] = state ? state.aspnetcore : undefined;
            resourceInputs["aspnetcoreAgentlistener"] = state ? state.aspnetcoreAgentlistener : undefined;
            resourceInputs["aspnetcoreAgentworker"] = state ? state.aspnetcoreAgentworker : undefined;
            resourceInputs["cf"] = state ? state.cf : undefined;
            resourceInputs["cfAppsmanagerjs"] = state ? state.cfAppsmanagerjs : undefined;
            resourceInputs["container"] = state ? state.container : undefined;
            resourceInputs["dockerPauseamd64"] = state ? state.dockerPauseamd64 : undefined;
            resourceInputs["exeAdapter"] = state ? state.exeAdapter : undefined;
            resourceInputs["exeAgentlistener"] = state ? state.exeAgentlistener : undefined;
            resourceInputs["exeAgentworker"] = state ? state.exeAgentworker : undefined;
            resourceInputs["exeAuctioneer"] = state ? state.exeAuctioneer : undefined;
            resourceInputs["exeAuditbeat"] = state ? state.exeAuditbeat : undefined;
            resourceInputs["exeBbs"] = state ? state.exeBbs : undefined;
            resourceInputs["exeCaddy"] = state ? state.exeCaddy : undefined;
            resourceInputs["exeCaliconode"] = state ? state.exeCaliconode : undefined;
            resourceInputs["exeCasclient"] = state ? state.exeCasclient : undefined;
            resourceInputs["exeCcuploader"] = state ? state.exeCcuploader : undefined;
            resourceInputs["exeDoppler"] = state ? state.exeDoppler : undefined;
            resourceInputs["exeFilebeat"] = state ? state.exeFilebeat : undefined;
            resourceInputs["exeFlexnetjobexecutorservice"] = state ? state.exeFlexnetjobexecutorservice : undefined;
            resourceInputs["exeFlexnetmaintenanceremotingservice"] = state ? state.exeFlexnetmaintenanceremotingservice : undefined;
            resourceInputs["exeFunctionbeat"] = state ? state.exeFunctionbeat : undefined;
            resourceInputs["exeGorouter"] = state ? state.exeGorouter : undefined;
            resourceInputs["exeGrootfs"] = state ? state.exeGrootfs : undefined;
            resourceInputs["exeHeartbeat"] = state ? state.exeHeartbeat : undefined;
            resourceInputs["exeInfluxd"] = state ? state.exeInfluxd : undefined;
            resourceInputs["exeLocket"] = state ? state.exeLocket : undefined;
            resourceInputs["exeMetricbeat"] = state ? state.exeMetricbeat : undefined;
            resourceInputs["exeMetron"] = state ? state.exeMetron : undefined;
            resourceInputs["exeMqsi"] = state ? state.exeMqsi : undefined;
            resourceInputs["exeOc"] = state ? state.exeOc : undefined;
            resourceInputs["exeOpenhandlecollector"] = state ? state.exeOpenhandlecollector : undefined;
            resourceInputs["exeOptcnibinhostlocal"] = state ? state.exeOptcnibinhostlocal : undefined;
            resourceInputs["exePacketbeat"] = state ? state.exePacketbeat : undefined;
            resourceInputs["exePhpcgi"] = state ? state.exePhpcgi : undefined;
            resourceInputs["exeRep"] = state ? state.exeRep : undefined;
            resourceInputs["exeRouteemitter"] = state ? state.exeRouteemitter : undefined;
            resourceInputs["exeRouteregistrar"] = state ? state.exeRouteregistrar : undefined;
            resourceInputs["exeRoutingapi"] = state ? state.exeRoutingapi : undefined;
            resourceInputs["exeSchedular"] = state ? state.exeSchedular : undefined;
            resourceInputs["exeSilkdaemon"] = state ? state.exeSilkdaemon : undefined;
            resourceInputs["exeSwitchboard"] = state ? state.exeSwitchboard : undefined;
            resourceInputs["exeSyslogdrainbinder"] = state ? state.exeSyslogdrainbinder : undefined;
            resourceInputs["exeTardis"] = state ? state.exeTardis : undefined;
            resourceInputs["exeTmpbuildpacks"] = state ? state.exeTmpbuildpacks : undefined;
            resourceInputs["exeTpswatcher"] = state ? state.exeTpswatcher : undefined;
            resourceInputs["exeTrafficcontroller"] = state ? state.exeTrafficcontroller : undefined;
            resourceInputs["exeUipath"] = state ? state.exeUipath : undefined;
            resourceInputs["exeUserbinpiper"] = state ? state.exeUserbinpiper : undefined;
            resourceInputs["exeW3wp"] = state ? state.exeW3wp : undefined;
            resourceInputs["exeYq"] = state ? state.exeYq : undefined;
            resourceInputs["goStatic"] = state ? state.goStatic : undefined;
            resourceInputs["hostGroupId"] = state ? state.hostGroupId : undefined;
            resourceInputs["jarDtibmmqconnector"] = state ? state.jarDtibmmqconnector : undefined;
            resourceInputs["jarEclipseequinox"] = state ? state.jarEclipseequinox : undefined;
            resourceInputs["k8sCassandraoperator"] = state ? state.k8sCassandraoperator : undefined;
            resourceInputs["k8sContainerpod"] = state ? state.k8sContainerpod : undefined;
            resourceInputs["k8sNamespace"] = state ? state.k8sNamespace : undefined;
            resourceInputs["nodeBinpm2"] = state ? state.nodeBinpm2 : undefined;
            resourceInputs["nodeCorepack"] = state ? state.nodeCorepack : undefined;
            resourceInputs["nodeGrunt"] = state ? state.nodeGrunt : undefined;
            resourceInputs["nodeGulpcli"] = state ? state.nodeGulpcli : undefined;
            resourceInputs["nodeNodegyp"] = state ? state.nodeNodegyp : undefined;
            resourceInputs["nodeNodepregyp"] = state ? state.nodeNodepregyp : undefined;
            resourceInputs["nodeNpm"] = state ? state.nodeNpm : undefined;
            resourceInputs["nodePrebuildinstall"] = state ? state.nodePrebuildinstall : undefined;
            resourceInputs["nodeTypescript"] = state ? state.nodeTypescript : undefined;
            resourceInputs["nodeYarn"] = state ? state.nodeYarn : undefined;
            resourceInputs["phpScript"] = state ? state.phpScript : undefined;
        } else {
            const args = argsOrState as BuiltinProcessMonitoringArgs | undefined;
            resourceInputs["aspnetcore"] = args ? args.aspnetcore : undefined;
            resourceInputs["aspnetcoreAgentlistener"] = args ? args.aspnetcoreAgentlistener : undefined;
            resourceInputs["aspnetcoreAgentworker"] = args ? args.aspnetcoreAgentworker : undefined;
            resourceInputs["cf"] = args ? args.cf : undefined;
            resourceInputs["cfAppsmanagerjs"] = args ? args.cfAppsmanagerjs : undefined;
            resourceInputs["container"] = args ? args.container : undefined;
            resourceInputs["dockerPauseamd64"] = args ? args.dockerPauseamd64 : undefined;
            resourceInputs["exeAdapter"] = args ? args.exeAdapter : undefined;
            resourceInputs["exeAgentlistener"] = args ? args.exeAgentlistener : undefined;
            resourceInputs["exeAgentworker"] = args ? args.exeAgentworker : undefined;
            resourceInputs["exeAuctioneer"] = args ? args.exeAuctioneer : undefined;
            resourceInputs["exeAuditbeat"] = args ? args.exeAuditbeat : undefined;
            resourceInputs["exeBbs"] = args ? args.exeBbs : undefined;
            resourceInputs["exeCaddy"] = args ? args.exeCaddy : undefined;
            resourceInputs["exeCaliconode"] = args ? args.exeCaliconode : undefined;
            resourceInputs["exeCasclient"] = args ? args.exeCasclient : undefined;
            resourceInputs["exeCcuploader"] = args ? args.exeCcuploader : undefined;
            resourceInputs["exeDoppler"] = args ? args.exeDoppler : undefined;
            resourceInputs["exeFilebeat"] = args ? args.exeFilebeat : undefined;
            resourceInputs["exeFlexnetjobexecutorservice"] = args ? args.exeFlexnetjobexecutorservice : undefined;
            resourceInputs["exeFlexnetmaintenanceremotingservice"] = args ? args.exeFlexnetmaintenanceremotingservice : undefined;
            resourceInputs["exeFunctionbeat"] = args ? args.exeFunctionbeat : undefined;
            resourceInputs["exeGorouter"] = args ? args.exeGorouter : undefined;
            resourceInputs["exeGrootfs"] = args ? args.exeGrootfs : undefined;
            resourceInputs["exeHeartbeat"] = args ? args.exeHeartbeat : undefined;
            resourceInputs["exeInfluxd"] = args ? args.exeInfluxd : undefined;
            resourceInputs["exeLocket"] = args ? args.exeLocket : undefined;
            resourceInputs["exeMetricbeat"] = args ? args.exeMetricbeat : undefined;
            resourceInputs["exeMetron"] = args ? args.exeMetron : undefined;
            resourceInputs["exeMqsi"] = args ? args.exeMqsi : undefined;
            resourceInputs["exeOc"] = args ? args.exeOc : undefined;
            resourceInputs["exeOpenhandlecollector"] = args ? args.exeOpenhandlecollector : undefined;
            resourceInputs["exeOptcnibinhostlocal"] = args ? args.exeOptcnibinhostlocal : undefined;
            resourceInputs["exePacketbeat"] = args ? args.exePacketbeat : undefined;
            resourceInputs["exePhpcgi"] = args ? args.exePhpcgi : undefined;
            resourceInputs["exeRep"] = args ? args.exeRep : undefined;
            resourceInputs["exeRouteemitter"] = args ? args.exeRouteemitter : undefined;
            resourceInputs["exeRouteregistrar"] = args ? args.exeRouteregistrar : undefined;
            resourceInputs["exeRoutingapi"] = args ? args.exeRoutingapi : undefined;
            resourceInputs["exeSchedular"] = args ? args.exeSchedular : undefined;
            resourceInputs["exeSilkdaemon"] = args ? args.exeSilkdaemon : undefined;
            resourceInputs["exeSwitchboard"] = args ? args.exeSwitchboard : undefined;
            resourceInputs["exeSyslogdrainbinder"] = args ? args.exeSyslogdrainbinder : undefined;
            resourceInputs["exeTardis"] = args ? args.exeTardis : undefined;
            resourceInputs["exeTmpbuildpacks"] = args ? args.exeTmpbuildpacks : undefined;
            resourceInputs["exeTpswatcher"] = args ? args.exeTpswatcher : undefined;
            resourceInputs["exeTrafficcontroller"] = args ? args.exeTrafficcontroller : undefined;
            resourceInputs["exeUipath"] = args ? args.exeUipath : undefined;
            resourceInputs["exeUserbinpiper"] = args ? args.exeUserbinpiper : undefined;
            resourceInputs["exeW3wp"] = args ? args.exeW3wp : undefined;
            resourceInputs["exeYq"] = args ? args.exeYq : undefined;
            resourceInputs["goStatic"] = args ? args.goStatic : undefined;
            resourceInputs["hostGroupId"] = args ? args.hostGroupId : undefined;
            resourceInputs["jarDtibmmqconnector"] = args ? args.jarDtibmmqconnector : undefined;
            resourceInputs["jarEclipseequinox"] = args ? args.jarEclipseequinox : undefined;
            resourceInputs["k8sCassandraoperator"] = args ? args.k8sCassandraoperator : undefined;
            resourceInputs["k8sContainerpod"] = args ? args.k8sContainerpod : undefined;
            resourceInputs["k8sNamespace"] = args ? args.k8sNamespace : undefined;
            resourceInputs["nodeBinpm2"] = args ? args.nodeBinpm2 : undefined;
            resourceInputs["nodeCorepack"] = args ? args.nodeCorepack : undefined;
            resourceInputs["nodeGrunt"] = args ? args.nodeGrunt : undefined;
            resourceInputs["nodeGulpcli"] = args ? args.nodeGulpcli : undefined;
            resourceInputs["nodeNodegyp"] = args ? args.nodeNodegyp : undefined;
            resourceInputs["nodeNodepregyp"] = args ? args.nodeNodepregyp : undefined;
            resourceInputs["nodeNpm"] = args ? args.nodeNpm : undefined;
            resourceInputs["nodePrebuildinstall"] = args ? args.nodePrebuildinstall : undefined;
            resourceInputs["nodeTypescript"] = args ? args.nodeTypescript : undefined;
            resourceInputs["nodeYarn"] = args ? args.nodeYarn : undefined;
            resourceInputs["phpScript"] = args ? args.phpScript : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BuiltinProcessMonitoring.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BuiltinProcessMonitoring resources.
 */
export interface BuiltinProcessMonitoringState {
    /**
     * Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
     */
    aspnetcore?: pulumi.Input<boolean>;
    /**
     * Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
     */
    aspnetcoreAgentlistener?: pulumi.Input<boolean>;
    /**
     * Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
     */
    aspnetcoreAgentworker?: pulumi.Input<boolean>;
    /**
     * Rule id: 37 - Do monitor processes if Cloud Foundry application exists
     */
    cf?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
     */
    cfAppsmanagerjs?: pulumi.Input<boolean>;
    /**
     * Rule id: 41 - Do monitor processes if container name exists
     */
    container?: pulumi.Input<boolean>;
    /**
     * Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
     */
    dockerPauseamd64?: pulumi.Input<boolean>;
    /**
     * Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
     */
    exeAdapter?: pulumi.Input<boolean>;
    /**
     * Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
     */
    exeAgentlistener?: pulumi.Input<boolean>;
    /**
     * Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
     */
    exeAgentworker?: pulumi.Input<boolean>;
    /**
     * Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
     */
    exeAuctioneer?: pulumi.Input<boolean>;
    /**
     * Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
     */
    exeAuditbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
     */
    exeBbs?: pulumi.Input<boolean>;
    /**
     * Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
     */
    exeCaddy?: pulumi.Input<boolean>;
    /**
     * Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
     */
    exeCaliconode?: pulumi.Input<boolean>;
    /**
     * Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
     */
    exeCasclient?: pulumi.Input<boolean>;
    /**
     * Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
     */
    exeCcuploader?: pulumi.Input<boolean>;
    /**
     * Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
     */
    exeDoppler?: pulumi.Input<boolean>;
    /**
     * Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
     */
    exeFilebeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
     */
    exeFlexnetjobexecutorservice?: pulumi.Input<boolean>;
    /**
     * Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
     */
    exeFlexnetmaintenanceremotingservice?: pulumi.Input<boolean>;
    /**
     * Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
     */
    exeFunctionbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
     */
    exeGorouter?: pulumi.Input<boolean>;
    /**
     * Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
     */
    exeGrootfs?: pulumi.Input<boolean>;
    /**
     * Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
     */
    exeHeartbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
     */
    exeInfluxd?: pulumi.Input<boolean>;
    /**
     * Rule id: 13 - Do monitor processes if EXE name equals 'locket'
     */
    exeLocket?: pulumi.Input<boolean>;
    /**
     * Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
     */
    exeMetricbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 14 - Do monitor processes if EXE name equals 'metron'
     */
    exeMetron?: pulumi.Input<boolean>;
    /**
     * Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
     */
    exeMqsi?: pulumi.Input<boolean>;
    /**
     * Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
     */
    exeOc?: pulumi.Input<boolean>;
    /**
     * Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
     */
    exeOpenhandlecollector?: pulumi.Input<boolean>;
    /**
     * Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
     */
    exeOptcnibinhostlocal?: pulumi.Input<boolean>;
    /**
     * Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
     */
    exePacketbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
     */
    exePhpcgi?: pulumi.Input<boolean>;
    /**
     * Rule id: 16 - Do monitor processes if EXE name equals 'rep'
     */
    exeRep?: pulumi.Input<boolean>;
    /**
     * Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
     */
    exeRouteemitter?: pulumi.Input<boolean>;
    /**
     * Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
     */
    exeRouteregistrar?: pulumi.Input<boolean>;
    /**
     * Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
     */
    exeRoutingapi?: pulumi.Input<boolean>;
    /**
     * Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
     */
    exeSchedular?: pulumi.Input<boolean>;
    /**
     * Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
     */
    exeSilkdaemon?: pulumi.Input<boolean>;
    /**
     * Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
     */
    exeSwitchboard?: pulumi.Input<boolean>;
    /**
     * Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
     */
    exeSyslogdrainbinder?: pulumi.Input<boolean>;
    /**
     * Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
     */
    exeTardis?: pulumi.Input<boolean>;
    /**
     * Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
     */
    exeTmpbuildpacks?: pulumi.Input<boolean>;
    /**
     * Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
     */
    exeTpswatcher?: pulumi.Input<boolean>;
    /**
     * Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
     */
    exeTrafficcontroller?: pulumi.Input<boolean>;
    /**
     * Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
     */
    exeUipath?: pulumi.Input<boolean>;
    /**
     * Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
     */
    exeUserbinpiper?: pulumi.Input<boolean>;
    /**
     * Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
     */
    exeW3wp?: pulumi.Input<boolean>;
    /**
     * Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
     */
    exeYq?: pulumi.Input<boolean>;
    /**
     * Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
     */
    goStatic?: pulumi.Input<boolean>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    hostGroupId?: pulumi.Input<string>;
    /**
     * Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
     */
    jarDtibmmqconnector?: pulumi.Input<boolean>;
    /**
     * Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
     */
    jarEclipseequinox?: pulumi.Input<boolean>;
    /**
     * Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
     */
    k8sCassandraoperator?: pulumi.Input<boolean>;
    /**
     * Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
     */
    k8sContainerpod?: pulumi.Input<boolean>;
    /**
     * Rule id: 40 - Do monitor processes if Kubernetes namespace exists
     */
    k8sNamespace?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Node.js script equals 'bin/pm2'
     */
    nodeBinpm2?: pulumi.Input<boolean>;
    /**
     * Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
     */
    nodeCorepack?: pulumi.Input<boolean>;
    /**
     * Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
     */
    nodeGrunt?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
     */
    nodeGulpcli?: pulumi.Input<boolean>;
    /**
     * Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
     */
    nodeNodegyp?: pulumi.Input<boolean>;
    /**
     * Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
     */
    nodeNodepregyp?: pulumi.Input<boolean>;
    /**
     * Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
     */
    nodeNpm?: pulumi.Input<boolean>;
    /**
     * Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
     */
    nodePrebuildinstall?: pulumi.Input<boolean>;
    /**
     * Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
     */
    nodeTypescript?: pulumi.Input<boolean>;
    /**
     * Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
     */
    nodeYarn?: pulumi.Input<boolean>;
    /**
     * (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
     */
    phpScript?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a BuiltinProcessMonitoring resource.
 */
export interface BuiltinProcessMonitoringArgs {
    /**
     * Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
     */
    aspnetcore?: pulumi.Input<boolean>;
    /**
     * Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
     */
    aspnetcoreAgentlistener?: pulumi.Input<boolean>;
    /**
     * Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
     */
    aspnetcoreAgentworker?: pulumi.Input<boolean>;
    /**
     * Rule id: 37 - Do monitor processes if Cloud Foundry application exists
     */
    cf?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
     */
    cfAppsmanagerjs?: pulumi.Input<boolean>;
    /**
     * Rule id: 41 - Do monitor processes if container name exists
     */
    container?: pulumi.Input<boolean>;
    /**
     * Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
     */
    dockerPauseamd64?: pulumi.Input<boolean>;
    /**
     * Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
     */
    exeAdapter?: pulumi.Input<boolean>;
    /**
     * Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
     */
    exeAgentlistener?: pulumi.Input<boolean>;
    /**
     * Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
     */
    exeAgentworker?: pulumi.Input<boolean>;
    /**
     * Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
     */
    exeAuctioneer?: pulumi.Input<boolean>;
    /**
     * Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
     */
    exeAuditbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
     */
    exeBbs?: pulumi.Input<boolean>;
    /**
     * Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
     */
    exeCaddy?: pulumi.Input<boolean>;
    /**
     * Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
     */
    exeCaliconode?: pulumi.Input<boolean>;
    /**
     * Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
     */
    exeCasclient?: pulumi.Input<boolean>;
    /**
     * Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
     */
    exeCcuploader?: pulumi.Input<boolean>;
    /**
     * Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
     */
    exeDoppler?: pulumi.Input<boolean>;
    /**
     * Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
     */
    exeFilebeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
     */
    exeFlexnetjobexecutorservice?: pulumi.Input<boolean>;
    /**
     * Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
     */
    exeFlexnetmaintenanceremotingservice?: pulumi.Input<boolean>;
    /**
     * Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
     */
    exeFunctionbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
     */
    exeGorouter?: pulumi.Input<boolean>;
    /**
     * Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
     */
    exeGrootfs?: pulumi.Input<boolean>;
    /**
     * Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
     */
    exeHeartbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
     */
    exeInfluxd?: pulumi.Input<boolean>;
    /**
     * Rule id: 13 - Do monitor processes if EXE name equals 'locket'
     */
    exeLocket?: pulumi.Input<boolean>;
    /**
     * Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
     */
    exeMetricbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 14 - Do monitor processes if EXE name equals 'metron'
     */
    exeMetron?: pulumi.Input<boolean>;
    /**
     * Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
     */
    exeMqsi?: pulumi.Input<boolean>;
    /**
     * Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
     */
    exeOc?: pulumi.Input<boolean>;
    /**
     * Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
     */
    exeOpenhandlecollector?: pulumi.Input<boolean>;
    /**
     * Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
     */
    exeOptcnibinhostlocal?: pulumi.Input<boolean>;
    /**
     * Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
     */
    exePacketbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
     */
    exePhpcgi?: pulumi.Input<boolean>;
    /**
     * Rule id: 16 - Do monitor processes if EXE name equals 'rep'
     */
    exeRep?: pulumi.Input<boolean>;
    /**
     * Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
     */
    exeRouteemitter?: pulumi.Input<boolean>;
    /**
     * Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
     */
    exeRouteregistrar?: pulumi.Input<boolean>;
    /**
     * Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
     */
    exeRoutingapi?: pulumi.Input<boolean>;
    /**
     * Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
     */
    exeSchedular?: pulumi.Input<boolean>;
    /**
     * Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
     */
    exeSilkdaemon?: pulumi.Input<boolean>;
    /**
     * Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
     */
    exeSwitchboard?: pulumi.Input<boolean>;
    /**
     * Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
     */
    exeSyslogdrainbinder?: pulumi.Input<boolean>;
    /**
     * Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
     */
    exeTardis?: pulumi.Input<boolean>;
    /**
     * Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
     */
    exeTmpbuildpacks?: pulumi.Input<boolean>;
    /**
     * Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
     */
    exeTpswatcher?: pulumi.Input<boolean>;
    /**
     * Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
     */
    exeTrafficcontroller?: pulumi.Input<boolean>;
    /**
     * Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
     */
    exeUipath?: pulumi.Input<boolean>;
    /**
     * Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
     */
    exeUserbinpiper?: pulumi.Input<boolean>;
    /**
     * Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
     */
    exeW3wp?: pulumi.Input<boolean>;
    /**
     * Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
     */
    exeYq?: pulumi.Input<boolean>;
    /**
     * Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
     */
    goStatic?: pulumi.Input<boolean>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    hostGroupId?: pulumi.Input<string>;
    /**
     * Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
     */
    jarDtibmmqconnector?: pulumi.Input<boolean>;
    /**
     * Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
     */
    jarEclipseequinox?: pulumi.Input<boolean>;
    /**
     * Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
     */
    k8sCassandraoperator?: pulumi.Input<boolean>;
    /**
     * Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
     */
    k8sContainerpod?: pulumi.Input<boolean>;
    /**
     * Rule id: 40 - Do monitor processes if Kubernetes namespace exists
     */
    k8sNamespace?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Node.js script equals 'bin/pm2'
     */
    nodeBinpm2?: pulumi.Input<boolean>;
    /**
     * Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
     */
    nodeCorepack?: pulumi.Input<boolean>;
    /**
     * Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
     */
    nodeGrunt?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
     */
    nodeGulpcli?: pulumi.Input<boolean>;
    /**
     * Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
     */
    nodeNodegyp?: pulumi.Input<boolean>;
    /**
     * Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
     */
    nodeNodepregyp?: pulumi.Input<boolean>;
    /**
     * Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
     */
    nodeNpm?: pulumi.Input<boolean>;
    /**
     * Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
     */
    nodePrebuildinstall?: pulumi.Input<boolean>;
    /**
     * Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
     */
    nodeTypescript?: pulumi.Input<boolean>;
    /**
     * Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
     */
    nodeYarn?: pulumi.Input<boolean>;
    /**
     * (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
     */
    phpScript?: pulumi.Input<boolean>;
}
