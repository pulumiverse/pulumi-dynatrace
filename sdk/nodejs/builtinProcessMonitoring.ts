// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class BuiltinProcessMonitoring extends pulumi.CustomResource {
    /**
     * Get an existing BuiltinProcessMonitoring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BuiltinProcessMonitoringState, opts?: pulumi.CustomResourceOptions): BuiltinProcessMonitoring {
        return new BuiltinProcessMonitoring(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/builtinProcessMonitoring:BuiltinProcessMonitoring';

    /**
     * Returns true if the given object is an instance of BuiltinProcessMonitoring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BuiltinProcessMonitoring {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BuiltinProcessMonitoring.__pulumiType;
    }

    /**
     * Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
     */
    declare public readonly aspnetcore: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
     */
    declare public readonly aspnetcoreAgentlistener: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
     */
    declare public readonly aspnetcoreAgentworker: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 37 - Do monitor processes if Cloud Foundry application exists
     */
    declare public readonly cf: pulumi.Output<boolean | undefined>;
    /**
     * Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
     */
    declare public readonly cfAppsmanagerjs: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 84 - Do not monitor processes if command line arguments contain 'forever/bin/monitor'
     */
    declare public readonly cmdForeverbinmonitor: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 41 - Do monitor processes if container name exists
     */
    declare public readonly container: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
     */
    declare public readonly dockerPauseamd64: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
     */
    declare public readonly exeAdapter: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
     */
    declare public readonly exeAgentlistener: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
     */
    declare public readonly exeAgentworker: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 79 - Do not monitor processes if EXE name equals 'ansible'
     */
    declare public readonly exeAnsible: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
     */
    declare public readonly exeAuctioneer: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
     */
    declare public readonly exeAuditbeat: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 81 - Do not monitor processes if EXE name equals 'aws'
     */
    declare public readonly exeAws: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 82 - Do not monitor processes if EXE name equals 'az'
     */
    declare public readonly exeAz: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
     */
    declare public readonly exeBbs: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
     */
    declare public readonly exeCaddy: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
     */
    declare public readonly exeCaliconode: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
     */
    declare public readonly exeCasclient: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
     */
    declare public readonly exeCcuploader: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 78 - Do not monitor processes if EXE name equals 'conda'
     */
    declare public readonly exeConda: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
     */
    declare public readonly exeDoppler: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
     */
    declare public readonly exeFilebeat: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
     */
    declare public readonly exeFlexnetjobexecutorservice: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
     */
    declare public readonly exeFlexnetmaintenanceremotingservice: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
     */
    declare public readonly exeFunctionbeat: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 83 - Do not monitor processes if EXE name equals 'gcloud'
     */
    declare public readonly exeGcloud: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
     */
    declare public readonly exeGorouter: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
     */
    declare public readonly exeGrootfs: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 74 - Do not monitor processes if EXE name equals 'hatch'
     */
    declare public readonly exeHatch: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
     */
    declare public readonly exeHeartbeat: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
     */
    declare public readonly exeInfluxd: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 77 - Do not monitor processes if EXE name equals 'jupyter'
     */
    declare public readonly exeJupyter: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 13 - Do monitor processes if EXE name equals 'locket'
     */
    declare public readonly exeLocket: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
     */
    declare public readonly exeMetricbeat: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 14 - Do monitor processes if EXE name equals 'metron'
     */
    declare public readonly exeMetron: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
     */
    declare public readonly exeMqsi: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
     */
    declare public readonly exeOc: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
     */
    declare public readonly exeOpenhandlecollector: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 80 - Do not monitor processes if EXE name equals 'openstack'
     */
    declare public readonly exeOpenstack: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
     */
    declare public readonly exeOptcnibinhostlocal: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
     */
    declare public readonly exePacketbeat: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
     */
    declare public readonly exePhpcgi: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 73 - Do not monitor processes if EXE name equals 'pip'
     */
    declare public readonly exePip: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 16 - Do monitor processes if EXE name equals 'rep'
     */
    declare public readonly exeRep: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
     */
    declare public readonly exeRouteemitter: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
     */
    declare public readonly exeRouteregistrar: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
     */
    declare public readonly exeRoutingapi: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
     */
    declare public readonly exeSchedular: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
     */
    declare public readonly exeSilkdaemon: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
     */
    declare public readonly exeSwitchboard: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
     */
    declare public readonly exeSyslogdrainbinder: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
     */
    declare public readonly exeTardis: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
     */
    declare public readonly exeTmpbuildpacks: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
     */
    declare public readonly exeTpswatcher: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
     */
    declare public readonly exeTrafficcontroller: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
     */
    declare public readonly exeUipath: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
     */
    declare public readonly exeUserbinpiper: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
     */
    declare public readonly exeW3wp: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 75 - Do not monitor processes if EXE name equals 'wheel'
     */
    declare public readonly exeWheel: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
     */
    declare public readonly exeYq: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 76 - Do not monitor processes if EXE name equals 'yum'
     */
    declare public readonly exeYum: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
     */
    declare public readonly goStatic: pulumi.Output<boolean | undefined>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    declare public readonly hostGroupId: pulumi.Output<string | undefined>;
    /**
     * Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
     */
    declare public readonly jarDtibmmqconnector: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
     */
    declare public readonly jarEclipseequinox: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
     */
    declare public readonly k8sCassandraoperator: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
     */
    declare public readonly k8sContainerpod: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 40 - Do monitor processes if Kubernetes namespace exists
     */
    declare public readonly k8sNamespace: pulumi.Output<boolean | undefined>;
    /**
     * Do not monitor processes if Node.js script equals 'bin/pm2'
     */
    declare public readonly nodeBinpm2: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
     */
    declare public readonly nodeCorepack: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
     */
    declare public readonly nodeGrunt: pulumi.Output<boolean | undefined>;
    /**
     * Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
     */
    declare public readonly nodeGulpcli: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
     */
    declare public readonly nodeNodegyp: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
     */
    declare public readonly nodeNodepregyp: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
     */
    declare public readonly nodeNpm: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
     */
    declare public readonly nodePrebuildinstall: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
     */
    declare public readonly nodeTypescript: pulumi.Output<boolean | undefined>;
    /**
     * Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
     */
    declare public readonly nodeYarn: pulumi.Output<boolean | undefined>;
    /**
     * (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
     */
    declare public readonly phpScript: pulumi.Output<boolean | undefined>;

    /**
     * Create a BuiltinProcessMonitoring resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: BuiltinProcessMonitoringArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BuiltinProcessMonitoringArgs | BuiltinProcessMonitoringState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BuiltinProcessMonitoringState | undefined;
            resourceInputs["aspnetcore"] = state?.aspnetcore;
            resourceInputs["aspnetcoreAgentlistener"] = state?.aspnetcoreAgentlistener;
            resourceInputs["aspnetcoreAgentworker"] = state?.aspnetcoreAgentworker;
            resourceInputs["cf"] = state?.cf;
            resourceInputs["cfAppsmanagerjs"] = state?.cfAppsmanagerjs;
            resourceInputs["cmdForeverbinmonitor"] = state?.cmdForeverbinmonitor;
            resourceInputs["container"] = state?.container;
            resourceInputs["dockerPauseamd64"] = state?.dockerPauseamd64;
            resourceInputs["exeAdapter"] = state?.exeAdapter;
            resourceInputs["exeAgentlistener"] = state?.exeAgentlistener;
            resourceInputs["exeAgentworker"] = state?.exeAgentworker;
            resourceInputs["exeAnsible"] = state?.exeAnsible;
            resourceInputs["exeAuctioneer"] = state?.exeAuctioneer;
            resourceInputs["exeAuditbeat"] = state?.exeAuditbeat;
            resourceInputs["exeAws"] = state?.exeAws;
            resourceInputs["exeAz"] = state?.exeAz;
            resourceInputs["exeBbs"] = state?.exeBbs;
            resourceInputs["exeCaddy"] = state?.exeCaddy;
            resourceInputs["exeCaliconode"] = state?.exeCaliconode;
            resourceInputs["exeCasclient"] = state?.exeCasclient;
            resourceInputs["exeCcuploader"] = state?.exeCcuploader;
            resourceInputs["exeConda"] = state?.exeConda;
            resourceInputs["exeDoppler"] = state?.exeDoppler;
            resourceInputs["exeFilebeat"] = state?.exeFilebeat;
            resourceInputs["exeFlexnetjobexecutorservice"] = state?.exeFlexnetjobexecutorservice;
            resourceInputs["exeFlexnetmaintenanceremotingservice"] = state?.exeFlexnetmaintenanceremotingservice;
            resourceInputs["exeFunctionbeat"] = state?.exeFunctionbeat;
            resourceInputs["exeGcloud"] = state?.exeGcloud;
            resourceInputs["exeGorouter"] = state?.exeGorouter;
            resourceInputs["exeGrootfs"] = state?.exeGrootfs;
            resourceInputs["exeHatch"] = state?.exeHatch;
            resourceInputs["exeHeartbeat"] = state?.exeHeartbeat;
            resourceInputs["exeInfluxd"] = state?.exeInfluxd;
            resourceInputs["exeJupyter"] = state?.exeJupyter;
            resourceInputs["exeLocket"] = state?.exeLocket;
            resourceInputs["exeMetricbeat"] = state?.exeMetricbeat;
            resourceInputs["exeMetron"] = state?.exeMetron;
            resourceInputs["exeMqsi"] = state?.exeMqsi;
            resourceInputs["exeOc"] = state?.exeOc;
            resourceInputs["exeOpenhandlecollector"] = state?.exeOpenhandlecollector;
            resourceInputs["exeOpenstack"] = state?.exeOpenstack;
            resourceInputs["exeOptcnibinhostlocal"] = state?.exeOptcnibinhostlocal;
            resourceInputs["exePacketbeat"] = state?.exePacketbeat;
            resourceInputs["exePhpcgi"] = state?.exePhpcgi;
            resourceInputs["exePip"] = state?.exePip;
            resourceInputs["exeRep"] = state?.exeRep;
            resourceInputs["exeRouteemitter"] = state?.exeRouteemitter;
            resourceInputs["exeRouteregistrar"] = state?.exeRouteregistrar;
            resourceInputs["exeRoutingapi"] = state?.exeRoutingapi;
            resourceInputs["exeSchedular"] = state?.exeSchedular;
            resourceInputs["exeSilkdaemon"] = state?.exeSilkdaemon;
            resourceInputs["exeSwitchboard"] = state?.exeSwitchboard;
            resourceInputs["exeSyslogdrainbinder"] = state?.exeSyslogdrainbinder;
            resourceInputs["exeTardis"] = state?.exeTardis;
            resourceInputs["exeTmpbuildpacks"] = state?.exeTmpbuildpacks;
            resourceInputs["exeTpswatcher"] = state?.exeTpswatcher;
            resourceInputs["exeTrafficcontroller"] = state?.exeTrafficcontroller;
            resourceInputs["exeUipath"] = state?.exeUipath;
            resourceInputs["exeUserbinpiper"] = state?.exeUserbinpiper;
            resourceInputs["exeW3wp"] = state?.exeW3wp;
            resourceInputs["exeWheel"] = state?.exeWheel;
            resourceInputs["exeYq"] = state?.exeYq;
            resourceInputs["exeYum"] = state?.exeYum;
            resourceInputs["goStatic"] = state?.goStatic;
            resourceInputs["hostGroupId"] = state?.hostGroupId;
            resourceInputs["jarDtibmmqconnector"] = state?.jarDtibmmqconnector;
            resourceInputs["jarEclipseequinox"] = state?.jarEclipseequinox;
            resourceInputs["k8sCassandraoperator"] = state?.k8sCassandraoperator;
            resourceInputs["k8sContainerpod"] = state?.k8sContainerpod;
            resourceInputs["k8sNamespace"] = state?.k8sNamespace;
            resourceInputs["nodeBinpm2"] = state?.nodeBinpm2;
            resourceInputs["nodeCorepack"] = state?.nodeCorepack;
            resourceInputs["nodeGrunt"] = state?.nodeGrunt;
            resourceInputs["nodeGulpcli"] = state?.nodeGulpcli;
            resourceInputs["nodeNodegyp"] = state?.nodeNodegyp;
            resourceInputs["nodeNodepregyp"] = state?.nodeNodepregyp;
            resourceInputs["nodeNpm"] = state?.nodeNpm;
            resourceInputs["nodePrebuildinstall"] = state?.nodePrebuildinstall;
            resourceInputs["nodeTypescript"] = state?.nodeTypescript;
            resourceInputs["nodeYarn"] = state?.nodeYarn;
            resourceInputs["phpScript"] = state?.phpScript;
        } else {
            const args = argsOrState as BuiltinProcessMonitoringArgs | undefined;
            resourceInputs["aspnetcore"] = args?.aspnetcore;
            resourceInputs["aspnetcoreAgentlistener"] = args?.aspnetcoreAgentlistener;
            resourceInputs["aspnetcoreAgentworker"] = args?.aspnetcoreAgentworker;
            resourceInputs["cf"] = args?.cf;
            resourceInputs["cfAppsmanagerjs"] = args?.cfAppsmanagerjs;
            resourceInputs["cmdForeverbinmonitor"] = args?.cmdForeverbinmonitor;
            resourceInputs["container"] = args?.container;
            resourceInputs["dockerPauseamd64"] = args?.dockerPauseamd64;
            resourceInputs["exeAdapter"] = args?.exeAdapter;
            resourceInputs["exeAgentlistener"] = args?.exeAgentlistener;
            resourceInputs["exeAgentworker"] = args?.exeAgentworker;
            resourceInputs["exeAnsible"] = args?.exeAnsible;
            resourceInputs["exeAuctioneer"] = args?.exeAuctioneer;
            resourceInputs["exeAuditbeat"] = args?.exeAuditbeat;
            resourceInputs["exeAws"] = args?.exeAws;
            resourceInputs["exeAz"] = args?.exeAz;
            resourceInputs["exeBbs"] = args?.exeBbs;
            resourceInputs["exeCaddy"] = args?.exeCaddy;
            resourceInputs["exeCaliconode"] = args?.exeCaliconode;
            resourceInputs["exeCasclient"] = args?.exeCasclient;
            resourceInputs["exeCcuploader"] = args?.exeCcuploader;
            resourceInputs["exeConda"] = args?.exeConda;
            resourceInputs["exeDoppler"] = args?.exeDoppler;
            resourceInputs["exeFilebeat"] = args?.exeFilebeat;
            resourceInputs["exeFlexnetjobexecutorservice"] = args?.exeFlexnetjobexecutorservice;
            resourceInputs["exeFlexnetmaintenanceremotingservice"] = args?.exeFlexnetmaintenanceremotingservice;
            resourceInputs["exeFunctionbeat"] = args?.exeFunctionbeat;
            resourceInputs["exeGcloud"] = args?.exeGcloud;
            resourceInputs["exeGorouter"] = args?.exeGorouter;
            resourceInputs["exeGrootfs"] = args?.exeGrootfs;
            resourceInputs["exeHatch"] = args?.exeHatch;
            resourceInputs["exeHeartbeat"] = args?.exeHeartbeat;
            resourceInputs["exeInfluxd"] = args?.exeInfluxd;
            resourceInputs["exeJupyter"] = args?.exeJupyter;
            resourceInputs["exeLocket"] = args?.exeLocket;
            resourceInputs["exeMetricbeat"] = args?.exeMetricbeat;
            resourceInputs["exeMetron"] = args?.exeMetron;
            resourceInputs["exeMqsi"] = args?.exeMqsi;
            resourceInputs["exeOc"] = args?.exeOc;
            resourceInputs["exeOpenhandlecollector"] = args?.exeOpenhandlecollector;
            resourceInputs["exeOpenstack"] = args?.exeOpenstack;
            resourceInputs["exeOptcnibinhostlocal"] = args?.exeOptcnibinhostlocal;
            resourceInputs["exePacketbeat"] = args?.exePacketbeat;
            resourceInputs["exePhpcgi"] = args?.exePhpcgi;
            resourceInputs["exePip"] = args?.exePip;
            resourceInputs["exeRep"] = args?.exeRep;
            resourceInputs["exeRouteemitter"] = args?.exeRouteemitter;
            resourceInputs["exeRouteregistrar"] = args?.exeRouteregistrar;
            resourceInputs["exeRoutingapi"] = args?.exeRoutingapi;
            resourceInputs["exeSchedular"] = args?.exeSchedular;
            resourceInputs["exeSilkdaemon"] = args?.exeSilkdaemon;
            resourceInputs["exeSwitchboard"] = args?.exeSwitchboard;
            resourceInputs["exeSyslogdrainbinder"] = args?.exeSyslogdrainbinder;
            resourceInputs["exeTardis"] = args?.exeTardis;
            resourceInputs["exeTmpbuildpacks"] = args?.exeTmpbuildpacks;
            resourceInputs["exeTpswatcher"] = args?.exeTpswatcher;
            resourceInputs["exeTrafficcontroller"] = args?.exeTrafficcontroller;
            resourceInputs["exeUipath"] = args?.exeUipath;
            resourceInputs["exeUserbinpiper"] = args?.exeUserbinpiper;
            resourceInputs["exeW3wp"] = args?.exeW3wp;
            resourceInputs["exeWheel"] = args?.exeWheel;
            resourceInputs["exeYq"] = args?.exeYq;
            resourceInputs["exeYum"] = args?.exeYum;
            resourceInputs["goStatic"] = args?.goStatic;
            resourceInputs["hostGroupId"] = args?.hostGroupId;
            resourceInputs["jarDtibmmqconnector"] = args?.jarDtibmmqconnector;
            resourceInputs["jarEclipseequinox"] = args?.jarEclipseequinox;
            resourceInputs["k8sCassandraoperator"] = args?.k8sCassandraoperator;
            resourceInputs["k8sContainerpod"] = args?.k8sContainerpod;
            resourceInputs["k8sNamespace"] = args?.k8sNamespace;
            resourceInputs["nodeBinpm2"] = args?.nodeBinpm2;
            resourceInputs["nodeCorepack"] = args?.nodeCorepack;
            resourceInputs["nodeGrunt"] = args?.nodeGrunt;
            resourceInputs["nodeGulpcli"] = args?.nodeGulpcli;
            resourceInputs["nodeNodegyp"] = args?.nodeNodegyp;
            resourceInputs["nodeNodepregyp"] = args?.nodeNodepregyp;
            resourceInputs["nodeNpm"] = args?.nodeNpm;
            resourceInputs["nodePrebuildinstall"] = args?.nodePrebuildinstall;
            resourceInputs["nodeTypescript"] = args?.nodeTypescript;
            resourceInputs["nodeYarn"] = args?.nodeYarn;
            resourceInputs["phpScript"] = args?.phpScript;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BuiltinProcessMonitoring.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BuiltinProcessMonitoring resources.
 */
export interface BuiltinProcessMonitoringState {
    /**
     * Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
     */
    aspnetcore?: pulumi.Input<boolean>;
    /**
     * Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
     */
    aspnetcoreAgentlistener?: pulumi.Input<boolean>;
    /**
     * Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
     */
    aspnetcoreAgentworker?: pulumi.Input<boolean>;
    /**
     * Rule id: 37 - Do monitor processes if Cloud Foundry application exists
     */
    cf?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
     */
    cfAppsmanagerjs?: pulumi.Input<boolean>;
    /**
     * Rule id: 84 - Do not monitor processes if command line arguments contain 'forever/bin/monitor'
     */
    cmdForeverbinmonitor?: pulumi.Input<boolean>;
    /**
     * Rule id: 41 - Do monitor processes if container name exists
     */
    container?: pulumi.Input<boolean>;
    /**
     * Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
     */
    dockerPauseamd64?: pulumi.Input<boolean>;
    /**
     * Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
     */
    exeAdapter?: pulumi.Input<boolean>;
    /**
     * Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
     */
    exeAgentlistener?: pulumi.Input<boolean>;
    /**
     * Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
     */
    exeAgentworker?: pulumi.Input<boolean>;
    /**
     * Rule id: 79 - Do not monitor processes if EXE name equals 'ansible'
     */
    exeAnsible?: pulumi.Input<boolean>;
    /**
     * Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
     */
    exeAuctioneer?: pulumi.Input<boolean>;
    /**
     * Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
     */
    exeAuditbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 81 - Do not monitor processes if EXE name equals 'aws'
     */
    exeAws?: pulumi.Input<boolean>;
    /**
     * Rule id: 82 - Do not monitor processes if EXE name equals 'az'
     */
    exeAz?: pulumi.Input<boolean>;
    /**
     * Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
     */
    exeBbs?: pulumi.Input<boolean>;
    /**
     * Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
     */
    exeCaddy?: pulumi.Input<boolean>;
    /**
     * Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
     */
    exeCaliconode?: pulumi.Input<boolean>;
    /**
     * Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
     */
    exeCasclient?: pulumi.Input<boolean>;
    /**
     * Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
     */
    exeCcuploader?: pulumi.Input<boolean>;
    /**
     * Rule id: 78 - Do not monitor processes if EXE name equals 'conda'
     */
    exeConda?: pulumi.Input<boolean>;
    /**
     * Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
     */
    exeDoppler?: pulumi.Input<boolean>;
    /**
     * Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
     */
    exeFilebeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
     */
    exeFlexnetjobexecutorservice?: pulumi.Input<boolean>;
    /**
     * Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
     */
    exeFlexnetmaintenanceremotingservice?: pulumi.Input<boolean>;
    /**
     * Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
     */
    exeFunctionbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 83 - Do not monitor processes if EXE name equals 'gcloud'
     */
    exeGcloud?: pulumi.Input<boolean>;
    /**
     * Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
     */
    exeGorouter?: pulumi.Input<boolean>;
    /**
     * Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
     */
    exeGrootfs?: pulumi.Input<boolean>;
    /**
     * Rule id: 74 - Do not monitor processes if EXE name equals 'hatch'
     */
    exeHatch?: pulumi.Input<boolean>;
    /**
     * Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
     */
    exeHeartbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
     */
    exeInfluxd?: pulumi.Input<boolean>;
    /**
     * Rule id: 77 - Do not monitor processes if EXE name equals 'jupyter'
     */
    exeJupyter?: pulumi.Input<boolean>;
    /**
     * Rule id: 13 - Do monitor processes if EXE name equals 'locket'
     */
    exeLocket?: pulumi.Input<boolean>;
    /**
     * Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
     */
    exeMetricbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 14 - Do monitor processes if EXE name equals 'metron'
     */
    exeMetron?: pulumi.Input<boolean>;
    /**
     * Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
     */
    exeMqsi?: pulumi.Input<boolean>;
    /**
     * Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
     */
    exeOc?: pulumi.Input<boolean>;
    /**
     * Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
     */
    exeOpenhandlecollector?: pulumi.Input<boolean>;
    /**
     * Rule id: 80 - Do not monitor processes if EXE name equals 'openstack'
     */
    exeOpenstack?: pulumi.Input<boolean>;
    /**
     * Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
     */
    exeOptcnibinhostlocal?: pulumi.Input<boolean>;
    /**
     * Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
     */
    exePacketbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
     */
    exePhpcgi?: pulumi.Input<boolean>;
    /**
     * Rule id: 73 - Do not monitor processes if EXE name equals 'pip'
     */
    exePip?: pulumi.Input<boolean>;
    /**
     * Rule id: 16 - Do monitor processes if EXE name equals 'rep'
     */
    exeRep?: pulumi.Input<boolean>;
    /**
     * Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
     */
    exeRouteemitter?: pulumi.Input<boolean>;
    /**
     * Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
     */
    exeRouteregistrar?: pulumi.Input<boolean>;
    /**
     * Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
     */
    exeRoutingapi?: pulumi.Input<boolean>;
    /**
     * Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
     */
    exeSchedular?: pulumi.Input<boolean>;
    /**
     * Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
     */
    exeSilkdaemon?: pulumi.Input<boolean>;
    /**
     * Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
     */
    exeSwitchboard?: pulumi.Input<boolean>;
    /**
     * Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
     */
    exeSyslogdrainbinder?: pulumi.Input<boolean>;
    /**
     * Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
     */
    exeTardis?: pulumi.Input<boolean>;
    /**
     * Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
     */
    exeTmpbuildpacks?: pulumi.Input<boolean>;
    /**
     * Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
     */
    exeTpswatcher?: pulumi.Input<boolean>;
    /**
     * Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
     */
    exeTrafficcontroller?: pulumi.Input<boolean>;
    /**
     * Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
     */
    exeUipath?: pulumi.Input<boolean>;
    /**
     * Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
     */
    exeUserbinpiper?: pulumi.Input<boolean>;
    /**
     * Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
     */
    exeW3wp?: pulumi.Input<boolean>;
    /**
     * Rule id: 75 - Do not monitor processes if EXE name equals 'wheel'
     */
    exeWheel?: pulumi.Input<boolean>;
    /**
     * Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
     */
    exeYq?: pulumi.Input<boolean>;
    /**
     * Rule id: 76 - Do not monitor processes if EXE name equals 'yum'
     */
    exeYum?: pulumi.Input<boolean>;
    /**
     * Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
     */
    goStatic?: pulumi.Input<boolean>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    hostGroupId?: pulumi.Input<string>;
    /**
     * Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
     */
    jarDtibmmqconnector?: pulumi.Input<boolean>;
    /**
     * Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
     */
    jarEclipseequinox?: pulumi.Input<boolean>;
    /**
     * Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
     */
    k8sCassandraoperator?: pulumi.Input<boolean>;
    /**
     * Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
     */
    k8sContainerpod?: pulumi.Input<boolean>;
    /**
     * Rule id: 40 - Do monitor processes if Kubernetes namespace exists
     */
    k8sNamespace?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Node.js script equals 'bin/pm2'
     */
    nodeBinpm2?: pulumi.Input<boolean>;
    /**
     * Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
     */
    nodeCorepack?: pulumi.Input<boolean>;
    /**
     * Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
     */
    nodeGrunt?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
     */
    nodeGulpcli?: pulumi.Input<boolean>;
    /**
     * Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
     */
    nodeNodegyp?: pulumi.Input<boolean>;
    /**
     * Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
     */
    nodeNodepregyp?: pulumi.Input<boolean>;
    /**
     * Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
     */
    nodeNpm?: pulumi.Input<boolean>;
    /**
     * Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
     */
    nodePrebuildinstall?: pulumi.Input<boolean>;
    /**
     * Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
     */
    nodeTypescript?: pulumi.Input<boolean>;
    /**
     * Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
     */
    nodeYarn?: pulumi.Input<boolean>;
    /**
     * (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
     */
    phpScript?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a BuiltinProcessMonitoring resource.
 */
export interface BuiltinProcessMonitoringArgs {
    /**
     * Rule id: 3 - Do monitor processes if ASP.NET Core application path exists
     */
    aspnetcore?: pulumi.Input<boolean>;
    /**
     * Rule id: 64 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Listener'
     */
    aspnetcoreAgentlistener?: pulumi.Input<boolean>;
    /**
     * Rule id: 62 - Do not monitor processes if ASP.NET Core application DLL contains 'Agent.Worker'
     */
    aspnetcoreAgentworker?: pulumi.Input<boolean>;
    /**
     * Rule id: 37 - Do monitor processes if Cloud Foundry application exists
     */
    cf?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Cloud Foundry application begins with 'apps-manager-js'
     */
    cfAppsmanagerjs?: pulumi.Input<boolean>;
    /**
     * Rule id: 84 - Do not monitor processes if command line arguments contain 'forever/bin/monitor'
     */
    cmdForeverbinmonitor?: pulumi.Input<boolean>;
    /**
     * Rule id: 41 - Do monitor processes if container name exists
     */
    container?: pulumi.Input<boolean>;
    /**
     * Rule id: 39 - Do not monitor processes if Docker stripped image contains 'pause-amd64'
     */
    dockerPauseamd64?: pulumi.Input<boolean>;
    /**
     * Rule id: 7 - Do monitor processes if EXE name equals 'adapter'
     */
    exeAdapter?: pulumi.Input<boolean>;
    /**
     * Rule id: 63 - Do not monitor processes if EXE name contains 'Agent.Listener'
     */
    exeAgentlistener?: pulumi.Input<boolean>;
    /**
     * Rule id: 61 - Do not monitor processes if EXE name contains 'Agent.Worker'
     */
    exeAgentworker?: pulumi.Input<boolean>;
    /**
     * Rule id: 79 - Do not monitor processes if EXE name equals 'ansible'
     */
    exeAnsible?: pulumi.Input<boolean>;
    /**
     * Rule id: 8 - Do monitor processes if EXE name equals 'auctioneer'
     */
    exeAuctioneer?: pulumi.Input<boolean>;
    /**
     * Rule id: 52 - Do not monitor processes if EXE name equals 'auditbeat'
     */
    exeAuditbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 81 - Do not monitor processes if EXE name equals 'aws'
     */
    exeAws?: pulumi.Input<boolean>;
    /**
     * Rule id: 82 - Do not monitor processes if EXE name equals 'az'
     */
    exeAz?: pulumi.Input<boolean>;
    /**
     * Rule id: 9 - Do monitor processes if EXE name equals 'bbs'
     */
    exeBbs?: pulumi.Input<boolean>;
    /**
     * Rule id: 5 - Do monitor processes if EXE name equals 'caddy'
     */
    exeCaddy?: pulumi.Input<boolean>;
    /**
     * Rule id: 58 - Do not monitor processes if EXE name equals 'calico-node'
     */
    exeCaliconode?: pulumi.Input<boolean>;
    /**
     * Rule id: 59 - Do not monitor processes if EXE name equals 'casclient.exe'
     */
    exeCasclient?: pulumi.Input<boolean>;
    /**
     * Rule id: 10 - Do monitor processes if EXE name equals 'cc-uploader'
     */
    exeCcuploader?: pulumi.Input<boolean>;
    /**
     * Rule id: 78 - Do not monitor processes if EXE name equals 'conda'
     */
    exeConda?: pulumi.Input<boolean>;
    /**
     * Rule id: 11 - Do monitor processes if EXE name equals 'doppler'
     */
    exeDoppler?: pulumi.Input<boolean>;
    /**
     * Rule id: 49 - Do not monitor processes if EXE name equals 'filebeat'
     */
    exeFilebeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 65 - Do not monitor processes if EXE name equals 'FlexNetJobExecutorService'
     */
    exeFlexnetjobexecutorservice?: pulumi.Input<boolean>;
    /**
     * Rule id: 66 - Do not monitor processes if EXE name equals 'FlexNetMaintenanceRemotingService'
     */
    exeFlexnetmaintenanceremotingservice?: pulumi.Input<boolean>;
    /**
     * Rule id: 54 - Do not monitor processes if EXE name equals 'functionbeat'
     */
    exeFunctionbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 83 - Do not monitor processes if EXE name equals 'gcloud'
     */
    exeGcloud?: pulumi.Input<boolean>;
    /**
     * Rule id: 12 - Do monitor processes if EXE name equals 'gorouter'
     */
    exeGorouter?: pulumi.Input<boolean>;
    /**
     * Rule id: 55 - Do not monitor processes if EXE name equals 'grootfs'
     */
    exeGrootfs?: pulumi.Input<boolean>;
    /**
     * Rule id: 74 - Do not monitor processes if EXE name equals 'hatch'
     */
    exeHatch?: pulumi.Input<boolean>;
    /**
     * Rule id: 53 - Do not monitor processes if EXE name equals 'heartbeat'
     */
    exeHeartbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 6 - Do monitor processes if EXE name equals 'influxd'
     */
    exeInfluxd?: pulumi.Input<boolean>;
    /**
     * Rule id: 77 - Do not monitor processes if EXE name equals 'jupyter'
     */
    exeJupyter?: pulumi.Input<boolean>;
    /**
     * Rule id: 13 - Do monitor processes if EXE name equals 'locket'
     */
    exeLocket?: pulumi.Input<boolean>;
    /**
     * Rule id: 50 - Do not monitor processes if EXE name equals 'metricbeat'
     */
    exeMetricbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 14 - Do monitor processes if EXE name equals 'metron'
     */
    exeMetron?: pulumi.Input<boolean>;
    /**
     * Rule id: 48 - Do not monitor processes if EXE name begins with 'mqsi'
     */
    exeMqsi?: pulumi.Input<boolean>;
    /**
     * Rule id: 44 - Do not monitor processes if EXE name equals 'oc'
     */
    exeOc?: pulumi.Input<boolean>;
    /**
     * Rule id: 71 - Do not monitor processes if EXE name equals 'openhandlecollector.exe'
     */
    exeOpenhandlecollector?: pulumi.Input<boolean>;
    /**
     * Rule id: 80 - Do not monitor processes if EXE name equals 'openstack'
     */
    exeOpenstack?: pulumi.Input<boolean>;
    /**
     * Rule id: 46 - Do not monitor processes if EXE path equals '/opt/cni/bin/host-local'
     */
    exeOptcnibinhostlocal?: pulumi.Input<boolean>;
    /**
     * Rule id: 51 - Do not monitor processes if EXE name equals 'packetbeat'
     */
    exePacketbeat?: pulumi.Input<boolean>;
    /**
     * Rule id: 2 - Do not monitor processes if EXE name equals 'php-cgi'
     */
    exePhpcgi?: pulumi.Input<boolean>;
    /**
     * Rule id: 73 - Do not monitor processes if EXE name equals 'pip'
     */
    exePip?: pulumi.Input<boolean>;
    /**
     * Rule id: 16 - Do monitor processes if EXE name equals 'rep'
     */
    exeRep?: pulumi.Input<boolean>;
    /**
     * Rule id: 17 - Do monitor processes if EXE name equals 'route-emitter'
     */
    exeRouteemitter?: pulumi.Input<boolean>;
    /**
     * Rule id: 18 - Do monitor processes if EXE name equals 'route-registrar'
     */
    exeRouteregistrar?: pulumi.Input<boolean>;
    /**
     * Rule id: 19 - Do monitor processes if EXE name equals 'routing-api'
     */
    exeRoutingapi?: pulumi.Input<boolean>;
    /**
     * Rule id: 20 - Do monitor processes if EXE name equals 'scheduler'
     */
    exeSchedular?: pulumi.Input<boolean>;
    /**
     * Rule id: 21 - Do monitor processes if EXE name equals 'silk-daemon'
     */
    exeSilkdaemon?: pulumi.Input<boolean>;
    /**
     * Rule id: 22 - Do monitor processes if EXE name equals 'switchboard'
     */
    exeSwitchboard?: pulumi.Input<boolean>;
    /**
     * Rule id: 23 - Do monitor processes if EXE name equals 'syslog*drain*binder'
     */
    exeSyslogdrainbinder?: pulumi.Input<boolean>;
    /**
     * Rule id: 56 - Do not monitor processes if EXE name equals 'tardis'
     */
    exeTardis?: pulumi.Input<boolean>;
    /**
     * Rule id: 43 - Do not monitor processes if EXE path begins with '/tmp/buildpacks/'
     */
    exeTmpbuildpacks?: pulumi.Input<boolean>;
    /**
     * Rule id: 24 - Do monitor processes if EXE name equals 'tps-watcher'
     */
    exeTpswatcher?: pulumi.Input<boolean>;
    /**
     * Rule id: 25 - Do monitor processes if EXE name equals 'trafficcontroller'
     */
    exeTrafficcontroller?: pulumi.Input<boolean>;
    /**
     * Rule id: 70 - Do not monitor processes if EXE name contains 'UiPath'
     */
    exeUipath?: pulumi.Input<boolean>;
    /**
     * Rule id: 67 - Do not monitor processes if EXE path equals '/usr/bin/piper'
     */
    exeUserbinpiper?: pulumi.Input<boolean>;
    /**
     * Rule id: 4 - Do monitor processes if EXE name equals 'w3wp.exe'
     */
    exeW3wp?: pulumi.Input<boolean>;
    /**
     * Rule id: 75 - Do not monitor processes if EXE name equals 'wheel'
     */
    exeWheel?: pulumi.Input<boolean>;
    /**
     * Rule id: 72 - Do not monitor processes if EXE name equals 'yq'
     */
    exeYq?: pulumi.Input<boolean>;
    /**
     * Rule id: 76 - Do not monitor processes if EXE name equals 'yum'
     */
    exeYum?: pulumi.Input<boolean>;
    /**
     * Rule id: 47 - Do not monitor processes if Go Binary Linkage equals 'static'
     */
    goStatic?: pulumi.Input<boolean>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    hostGroupId?: pulumi.Input<string>;
    /**
     * Rule id: 60 - Do not monitor processes if JAR file name equals 'dynatrace*ibm*mq_connector.jar'
     */
    jarDtibmmqconnector?: pulumi.Input<boolean>;
    /**
     * Rule id: 57 - Do not monitor processes if Java JAR file begins with 'org.eclipse.equinox.launcher'
     */
    jarEclipseequinox?: pulumi.Input<boolean>;
    /**
     * Rule id: 69 - Do not monitor processes if Kubernetes container name equals 'cassandra-operator'
     */
    k8sCassandraoperator?: pulumi.Input<boolean>;
    /**
     * Rule id: 38 - Do not monitor processes if Kubernetes container name equals 'POD'
     */
    k8sContainerpod?: pulumi.Input<boolean>;
    /**
     * Rule id: 40 - Do monitor processes if Kubernetes namespace exists
     */
    k8sNamespace?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Node.js script equals 'bin/pm2'
     */
    nodeBinpm2?: pulumi.Input<boolean>;
    /**
     * Rule id: 68 - Do not monitor processes if Node.js application equals 'corepack'
     */
    nodeCorepack?: pulumi.Input<boolean>;
    /**
     * Rule id: 28 - Do not monitor processes if Node.js application base directory ends with '/node_modules/grunt'
     */
    nodeGrunt?: pulumi.Input<boolean>;
    /**
     * Do not monitor processes if Node.js application base directory ends with '/node_modules/gulp-cli'
     */
    nodeGulpcli?: pulumi.Input<boolean>;
    /**
     * Rule id: 33 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-gyp'
     */
    nodeNodegyp?: pulumi.Input<boolean>;
    /**
     * Rule id: 32 - Do not monitor processes if Node.js application base directory ends with '/node_modules/node-pre-gyp'
     */
    nodeNodepregyp?: pulumi.Input<boolean>;
    /**
     * Rule id: 27 - Do not monitor processes if Node.js application base directory ends with '/node_modules/npm'
     */
    nodeNpm?: pulumi.Input<boolean>;
    /**
     * Rule id: 26 - Do not monitor processes if Node.js application base directory ends with '/node_modules/prebuild-install'
     */
    nodePrebuildinstall?: pulumi.Input<boolean>;
    /**
     * Rule id: 29 - Do not monitor processes if Node.js application base directory ends with '/node_modules/typescript'
     */
    nodeTypescript?: pulumi.Input<boolean>;
    /**
     * Rule id: 45 - Do not monitor processes if Node.js application equals 'yarn'
     */
    nodeYarn?: pulumi.Input<boolean>;
    /**
     * (v1.274) Rule id: 1 - Do not monitor processes if PHP script exists
     */
    phpScript?: pulumi.Input<boolean>;
}
