// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class K8sPvcAnomalies extends pulumi.CustomResource {
    /**
     * Get an existing K8sPvcAnomalies resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: K8sPvcAnomaliesState, opts?: pulumi.CustomResourceOptions): K8sPvcAnomalies {
        return new K8sPvcAnomalies(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/k8sPvcAnomalies:K8sPvcAnomalies';

    /**
     * Returns true if the given object is an instance of K8sPvcAnomalies.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is K8sPvcAnomalies {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === K8sPvcAnomalies.__pulumiType;
    }

    /**
     * Alerts on low disk space in megabytes for a persistent volume claim.
     */
    declare public readonly lowDiskSpaceCritical: pulumi.Output<outputs.K8sPvcAnomaliesLowDiskSpaceCritical>;
    /**
     * Alerts on low disk space in % for a persistent volume claim.
     */
    declare public readonly lowDiskSpaceCriticalPercentage: pulumi.Output<outputs.K8sPvcAnomaliesLowDiskSpaceCriticalPercentage>;
    /**
     * The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
     */
    declare public readonly scope: pulumi.Output<string | undefined>;

    /**
     * Create a K8sPvcAnomalies resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: K8sPvcAnomaliesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: K8sPvcAnomaliesArgs | K8sPvcAnomaliesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as K8sPvcAnomaliesState | undefined;
            resourceInputs["lowDiskSpaceCritical"] = state?.lowDiskSpaceCritical;
            resourceInputs["lowDiskSpaceCriticalPercentage"] = state?.lowDiskSpaceCriticalPercentage;
            resourceInputs["scope"] = state?.scope;
        } else {
            const args = argsOrState as K8sPvcAnomaliesArgs | undefined;
            if (args?.lowDiskSpaceCritical === undefined && !opts.urn) {
                throw new Error("Missing required property 'lowDiskSpaceCritical'");
            }
            if (args?.lowDiskSpaceCriticalPercentage === undefined && !opts.urn) {
                throw new Error("Missing required property 'lowDiskSpaceCriticalPercentage'");
            }
            resourceInputs["lowDiskSpaceCritical"] = args?.lowDiskSpaceCritical;
            resourceInputs["lowDiskSpaceCriticalPercentage"] = args?.lowDiskSpaceCriticalPercentage;
            resourceInputs["scope"] = args?.scope;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(K8sPvcAnomalies.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering K8sPvcAnomalies resources.
 */
export interface K8sPvcAnomaliesState {
    /**
     * Alerts on low disk space in megabytes for a persistent volume claim.
     */
    lowDiskSpaceCritical?: pulumi.Input<inputs.K8sPvcAnomaliesLowDiskSpaceCritical>;
    /**
     * Alerts on low disk space in % for a persistent volume claim.
     */
    lowDiskSpaceCriticalPercentage?: pulumi.Input<inputs.K8sPvcAnomaliesLowDiskSpaceCriticalPercentage>;
    /**
     * The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a K8sPvcAnomalies resource.
 */
export interface K8sPvcAnomaliesArgs {
    /**
     * Alerts on low disk space in megabytes for a persistent volume claim.
     */
    lowDiskSpaceCritical: pulumi.Input<inputs.K8sPvcAnomaliesLowDiskSpaceCritical>;
    /**
     * Alerts on low disk space in % for a persistent volume claim.
     */
    lowDiskSpaceCriticalPercentage: pulumi.Input<inputs.K8sPvcAnomaliesLowDiskSpaceCriticalPercentage>;
    /**
     * The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
     */
    scope?: pulumi.Input<string>;
}
