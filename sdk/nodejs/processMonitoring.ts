// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ProcessMonitoring extends pulumi.CustomResource {
    /**
     * Get an existing ProcessMonitoring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProcessMonitoringState, opts?: pulumi.CustomResourceOptions): ProcessMonitoring {
        return new ProcessMonitoring(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'dynatrace:index/processMonitoring:ProcessMonitoring';

    /**
     * Returns true if the given object is an instance of ProcessMonitoring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProcessMonitoring {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProcessMonitoring.__pulumiType;
    }

    /**
     * By disabling automatic deep monitoring the Dynatrace OneAgent will only deep monitor processes that are covered by a respective deep monitoring rule or where monitoring is enabled explicitly.
     * Disabling only works if all installed Agents have version 1.123 or higher.
     */
    declare public readonly autoMonitoring: pulumi.Output<boolean>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    declare public readonly hostGroupId: pulumi.Output<string | undefined>;

    /**
     * Create a ProcessMonitoring resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProcessMonitoringArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProcessMonitoringArgs | ProcessMonitoringState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProcessMonitoringState | undefined;
            resourceInputs["autoMonitoring"] = state?.autoMonitoring;
            resourceInputs["hostGroupId"] = state?.hostGroupId;
        } else {
            const args = argsOrState as ProcessMonitoringArgs | undefined;
            if (args?.autoMonitoring === undefined && !opts.urn) {
                throw new Error("Missing required property 'autoMonitoring'");
            }
            resourceInputs["autoMonitoring"] = args?.autoMonitoring;
            resourceInputs["hostGroupId"] = args?.hostGroupId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProcessMonitoring.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProcessMonitoring resources.
 */
export interface ProcessMonitoringState {
    /**
     * By disabling automatic deep monitoring the Dynatrace OneAgent will only deep monitor processes that are covered by a respective deep monitoring rule or where monitoring is enabled explicitly.
     * Disabling only works if all installed Agents have version 1.123 or higher.
     */
    autoMonitoring?: pulumi.Input<boolean>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    hostGroupId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProcessMonitoring resource.
 */
export interface ProcessMonitoringArgs {
    /**
     * By disabling automatic deep monitoring the Dynatrace OneAgent will only deep monitor processes that are covered by a respective deep monitoring rule or where monitoring is enabled explicitly.
     * Disabling only works if all installed Agents have version 1.123 or higher.
     */
    autoMonitoring: pulumi.Input<boolean>;
    /**
     * The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
     */
    hostGroupId?: pulumi.Input<string>;
}
