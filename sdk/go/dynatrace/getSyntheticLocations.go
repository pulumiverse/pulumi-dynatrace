// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The synthetic locations data source allows the location IDs to be retrieved based off of provided parameters.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := dynatrace.GetSyntheticLocations(ctx, &dynatrace.GetSyntheticLocationsArgs{
//				Name: pulumi.StringRef("Sydney"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = dynatrace.NewHttpMonitor(ctx, "#name#", &dynatrace.HttpMonitorArgs{
//				Enabled:   pulumi.Bool(true),
//				Frequency: pulumi.Int(60),
//				Locations: pulumi.StringArray{
//					pulumi.String(test.Locations.EntityId),
//				},
//				AnomalyDetections: dynatrace.HttpMonitorAnomalyDetectionArray{
//					&dynatrace.HttpMonitorAnomalyDetectionArgs{
//						LoadingTimeThresholds: dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArray{
//							&dynatrace.HttpMonitorAnomalyDetectionLoadingTimeThresholdArgs{
//								Enabled: pulumi.Bool(true),
//							},
//						},
//						OutageHandlings: dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArray{
//							&dynatrace.HttpMonitorAnomalyDetectionOutageHandlingArgs{
//								GlobalOutage: pulumi.Bool(true),
//								LocalOutage:  pulumi.Bool(false),
//								RetryOnError: pulumi.Bool(false),
//							},
//						},
//					},
//				},
//				Script: &dynatrace.HttpMonitorScriptTypeArgs{
//					Requests: dynatrace.HttpMonitorScriptRequestArray{
//						&dynatrace.HttpMonitorScriptRequestArgs{
//							Description: pulumi.String("google.com"),
//							Method:      pulumi.String("GET"),
//							Url:         pulumi.String("https://www.google.com"),
//							Configuration: &dynatrace.HttpMonitorScriptRequestConfigurationArgs{
//								AcceptAnyCertificate: pulumi.Bool(true),
//								FollowRedirects:      pulumi.Bool(true),
//							},
//							Validation: &dynatrace.HttpMonitorScriptRequestValidationArgs{
//								Rules: dynatrace.HttpMonitorScriptRequestValidationRuleArray{
//									&dynatrace.HttpMonitorScriptRequestValidationRuleArgs{
//										Type:        pulumi.String("httpStatusesList"),
//										PassIfFound: pulumi.Bool(false),
//										Value:       pulumi.String(">=400"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSyntheticLocations(ctx *pulumi.Context, args *GetSyntheticLocationsArgs, opts ...pulumi.InvokeOption) (*GetSyntheticLocationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSyntheticLocationsResult
	err := ctx.Invoke("dynatrace:index/getSyntheticLocations:getSyntheticLocations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSyntheticLocations.
type GetSyntheticLocationsArgs struct {
	// The ID of this resource.
	Id        *string                         `pulumi:"id"`
	Locations *GetSyntheticLocationsLocations `pulumi:"locations"`
	Name      *string                         `pulumi:"name"`
}

// A collection of values returned by getSyntheticLocations.
type GetSyntheticLocationsResult struct {
	// The ID of this resource.
	Id        *string                        `pulumi:"id"`
	Locations GetSyntheticLocationsLocations `pulumi:"locations"`
	Name      *string                        `pulumi:"name"`
}

func GetSyntheticLocationsOutput(ctx *pulumi.Context, args GetSyntheticLocationsOutputArgs, opts ...pulumi.InvokeOption) GetSyntheticLocationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSyntheticLocationsResultOutput, error) {
			args := v.(GetSyntheticLocationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getSyntheticLocations:getSyntheticLocations", args, GetSyntheticLocationsResultOutput{}, options).(GetSyntheticLocationsResultOutput), nil
		}).(GetSyntheticLocationsResultOutput)
}

// A collection of arguments for invoking getSyntheticLocations.
type GetSyntheticLocationsOutputArgs struct {
	// The ID of this resource.
	Id        pulumi.StringPtrInput                  `pulumi:"id"`
	Locations GetSyntheticLocationsLocationsPtrInput `pulumi:"locations"`
	Name      pulumi.StringPtrInput                  `pulumi:"name"`
}

func (GetSyntheticLocationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsArgs)(nil)).Elem()
}

// A collection of values returned by getSyntheticLocations.
type GetSyntheticLocationsResultOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsResult)(nil)).Elem()
}

func (o GetSyntheticLocationsResultOutput) ToGetSyntheticLocationsResultOutput() GetSyntheticLocationsResultOutput {
	return o
}

func (o GetSyntheticLocationsResultOutput) ToGetSyntheticLocationsResultOutputWithContext(ctx context.Context) GetSyntheticLocationsResultOutput {
	return o
}

// The ID of this resource.
func (o GetSyntheticLocationsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetSyntheticLocationsResultOutput) Locations() GetSyntheticLocationsLocationsOutput {
	return o.ApplyT(func(v GetSyntheticLocationsResult) GetSyntheticLocationsLocations { return v.Locations }).(GetSyntheticLocationsLocationsOutput)
}

func (o GetSyntheticLocationsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSyntheticLocationsResultOutput{})
}
