// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type KubernetesApp struct {
	pulumi.CustomResourceState

	// no documentation available
	KubernetesAppOptions KubernetesAppKubernetesAppOptionsOutput `pulumi:"kubernetesAppOptions"`
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
}

// NewKubernetesApp registers a new resource with the given unique name, arguments, and options.
func NewKubernetesApp(ctx *pulumi.Context,
	name string, args *KubernetesAppArgs, opts ...pulumi.ResourceOption) (*KubernetesApp, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KubernetesAppOptions == nil {
		return nil, errors.New("invalid value for required argument 'KubernetesAppOptions'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesApp
	err := ctx.RegisterResource("dynatrace:index/kubernetesApp:KubernetesApp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesApp gets an existing KubernetesApp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesApp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesAppState, opts ...pulumi.ResourceOption) (*KubernetesApp, error) {
	var resource KubernetesApp
	err := ctx.ReadResource("dynatrace:index/kubernetesApp:KubernetesApp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesApp resources.
type kubernetesAppState struct {
	// no documentation available
	KubernetesAppOptions *KubernetesAppKubernetesAppOptions `pulumi:"kubernetesAppOptions"`
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

type KubernetesAppState struct {
	// no documentation available
	KubernetesAppOptions KubernetesAppKubernetesAppOptionsPtrInput
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (KubernetesAppState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesAppState)(nil)).Elem()
}

type kubernetesAppArgs struct {
	// no documentation available
	KubernetesAppOptions KubernetesAppKubernetesAppOptions `pulumi:"kubernetesAppOptions"`
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a KubernetesApp resource.
type KubernetesAppArgs struct {
	// no documentation available
	KubernetesAppOptions KubernetesAppKubernetesAppOptionsInput
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (KubernetesAppArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesAppArgs)(nil)).Elem()
}

type KubernetesAppInput interface {
	pulumi.Input

	ToKubernetesAppOutput() KubernetesAppOutput
	ToKubernetesAppOutputWithContext(ctx context.Context) KubernetesAppOutput
}

func (*KubernetesApp) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApp)(nil)).Elem()
}

func (i *KubernetesApp) ToKubernetesAppOutput() KubernetesAppOutput {
	return i.ToKubernetesAppOutputWithContext(context.Background())
}

func (i *KubernetesApp) ToKubernetesAppOutputWithContext(ctx context.Context) KubernetesAppOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesAppOutput)
}

// KubernetesAppArrayInput is an input type that accepts KubernetesAppArray and KubernetesAppArrayOutput values.
// You can construct a concrete instance of `KubernetesAppArrayInput` via:
//
//	KubernetesAppArray{ KubernetesAppArgs{...} }
type KubernetesAppArrayInput interface {
	pulumi.Input

	ToKubernetesAppArrayOutput() KubernetesAppArrayOutput
	ToKubernetesAppArrayOutputWithContext(context.Context) KubernetesAppArrayOutput
}

type KubernetesAppArray []KubernetesAppInput

func (KubernetesAppArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesApp)(nil)).Elem()
}

func (i KubernetesAppArray) ToKubernetesAppArrayOutput() KubernetesAppArrayOutput {
	return i.ToKubernetesAppArrayOutputWithContext(context.Background())
}

func (i KubernetesAppArray) ToKubernetesAppArrayOutputWithContext(ctx context.Context) KubernetesAppArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesAppArrayOutput)
}

// KubernetesAppMapInput is an input type that accepts KubernetesAppMap and KubernetesAppMapOutput values.
// You can construct a concrete instance of `KubernetesAppMapInput` via:
//
//	KubernetesAppMap{ "key": KubernetesAppArgs{...} }
type KubernetesAppMapInput interface {
	pulumi.Input

	ToKubernetesAppMapOutput() KubernetesAppMapOutput
	ToKubernetesAppMapOutputWithContext(context.Context) KubernetesAppMapOutput
}

type KubernetesAppMap map[string]KubernetesAppInput

func (KubernetesAppMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesApp)(nil)).Elem()
}

func (i KubernetesAppMap) ToKubernetesAppMapOutput() KubernetesAppMapOutput {
	return i.ToKubernetesAppMapOutputWithContext(context.Background())
}

func (i KubernetesAppMap) ToKubernetesAppMapOutputWithContext(ctx context.Context) KubernetesAppMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesAppMapOutput)
}

type KubernetesAppOutput struct{ *pulumi.OutputState }

func (KubernetesAppOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesApp)(nil)).Elem()
}

func (o KubernetesAppOutput) ToKubernetesAppOutput() KubernetesAppOutput {
	return o
}

func (o KubernetesAppOutput) ToKubernetesAppOutputWithContext(ctx context.Context) KubernetesAppOutput {
	return o
}

// no documentation available
func (o KubernetesAppOutput) KubernetesAppOptions() KubernetesAppKubernetesAppOptionsOutput {
	return o.ApplyT(func(v *KubernetesApp) KubernetesAppKubernetesAppOptionsOutput { return v.KubernetesAppOptions }).(KubernetesAppKubernetesAppOptionsOutput)
}

// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
func (o KubernetesAppOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesApp) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

type KubernetesAppArrayOutput struct{ *pulumi.OutputState }

func (KubernetesAppArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesApp)(nil)).Elem()
}

func (o KubernetesAppArrayOutput) ToKubernetesAppArrayOutput() KubernetesAppArrayOutput {
	return o
}

func (o KubernetesAppArrayOutput) ToKubernetesAppArrayOutputWithContext(ctx context.Context) KubernetesAppArrayOutput {
	return o
}

func (o KubernetesAppArrayOutput) Index(i pulumi.IntInput) KubernetesAppOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesApp {
		return vs[0].([]*KubernetesApp)[vs[1].(int)]
	}).(KubernetesAppOutput)
}

type KubernetesAppMapOutput struct{ *pulumi.OutputState }

func (KubernetesAppMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesApp)(nil)).Elem()
}

func (o KubernetesAppMapOutput) ToKubernetesAppMapOutput() KubernetesAppMapOutput {
	return o
}

func (o KubernetesAppMapOutput) ToKubernetesAppMapOutputWithContext(ctx context.Context) KubernetesAppMapOutput {
	return o
}

func (o KubernetesAppMapOutput) MapIndex(k pulumi.StringInput) KubernetesAppOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesApp {
		return vs[0].(map[string]*KubernetesApp)[vs[1].(string)]
	}).(KubernetesAppOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesAppInput)(nil)).Elem(), &KubernetesApp{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesAppArrayInput)(nil)).Elem(), KubernetesAppArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesAppMapInput)(nil)).Elem(), KubernetesAppMap{})
	pulumi.RegisterOutputType(KubernetesAppOutput{})
	pulumi.RegisterOutputType(KubernetesAppArrayOutput{})
	pulumi.RegisterOutputType(KubernetesAppMapOutput{})
}
