// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type LogSensitiveDataMasking struct {
	pulumi.CustomResourceState

	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringOutput `pulumi:"insertAfter"`
	// no documentation available
	Masking LogSensitiveDataMaskingMaskingOutput `pulumi:"masking"`
	// no documentation available
	Matchers LogSensitiveDataMaskingMatchersPtrOutput `pulumi:"matchers"`
	// Name
	Name pulumi.StringOutput `pulumi:"name"`
	// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
}

// NewLogSensitiveDataMasking registers a new resource with the given unique name, arguments, and options.
func NewLogSensitiveDataMasking(ctx *pulumi.Context,
	name string, args *LogSensitiveDataMaskingArgs, opts ...pulumi.ResourceOption) (*LogSensitiveDataMasking, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Masking == nil {
		return nil, errors.New("invalid value for required argument 'Masking'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogSensitiveDataMasking
	err := ctx.RegisterResource("dynatrace:index/logSensitiveDataMasking:LogSensitiveDataMasking", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogSensitiveDataMasking gets an existing LogSensitiveDataMasking resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogSensitiveDataMasking(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogSensitiveDataMaskingState, opts ...pulumi.ResourceOption) (*LogSensitiveDataMasking, error) {
	var resource LogSensitiveDataMasking
	err := ctx.ReadResource("dynatrace:index/logSensitiveDataMasking:LogSensitiveDataMasking", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogSensitiveDataMasking resources.
type logSensitiveDataMaskingState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// no documentation available
	Masking *LogSensitiveDataMaskingMasking `pulumi:"masking"`
	// no documentation available
	Matchers *LogSensitiveDataMaskingMatchers `pulumi:"matchers"`
	// Name
	Name *string `pulumi:"name"`
	// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

type LogSensitiveDataMaskingState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// no documentation available
	Masking LogSensitiveDataMaskingMaskingPtrInput
	// no documentation available
	Matchers LogSensitiveDataMaskingMatchersPtrInput
	// Name
	Name pulumi.StringPtrInput
	// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (LogSensitiveDataMaskingState) ElementType() reflect.Type {
	return reflect.TypeOf((*logSensitiveDataMaskingState)(nil)).Elem()
}

type logSensitiveDataMaskingArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// no documentation available
	Masking LogSensitiveDataMaskingMasking `pulumi:"masking"`
	// no documentation available
	Matchers *LogSensitiveDataMaskingMatchers `pulumi:"matchers"`
	// Name
	Name *string `pulumi:"name"`
	// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a LogSensitiveDataMasking resource.
type LogSensitiveDataMaskingArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// no documentation available
	Masking LogSensitiveDataMaskingMaskingInput
	// no documentation available
	Matchers LogSensitiveDataMaskingMatchersPtrInput
	// Name
	Name pulumi.StringPtrInput
	// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (LogSensitiveDataMaskingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logSensitiveDataMaskingArgs)(nil)).Elem()
}

type LogSensitiveDataMaskingInput interface {
	pulumi.Input

	ToLogSensitiveDataMaskingOutput() LogSensitiveDataMaskingOutput
	ToLogSensitiveDataMaskingOutputWithContext(ctx context.Context) LogSensitiveDataMaskingOutput
}

func (*LogSensitiveDataMasking) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSensitiveDataMasking)(nil)).Elem()
}

func (i *LogSensitiveDataMasking) ToLogSensitiveDataMaskingOutput() LogSensitiveDataMaskingOutput {
	return i.ToLogSensitiveDataMaskingOutputWithContext(context.Background())
}

func (i *LogSensitiveDataMasking) ToLogSensitiveDataMaskingOutputWithContext(ctx context.Context) LogSensitiveDataMaskingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSensitiveDataMaskingOutput)
}

// LogSensitiveDataMaskingArrayInput is an input type that accepts LogSensitiveDataMaskingArray and LogSensitiveDataMaskingArrayOutput values.
// You can construct a concrete instance of `LogSensitiveDataMaskingArrayInput` via:
//
//	LogSensitiveDataMaskingArray{ LogSensitiveDataMaskingArgs{...} }
type LogSensitiveDataMaskingArrayInput interface {
	pulumi.Input

	ToLogSensitiveDataMaskingArrayOutput() LogSensitiveDataMaskingArrayOutput
	ToLogSensitiveDataMaskingArrayOutputWithContext(context.Context) LogSensitiveDataMaskingArrayOutput
}

type LogSensitiveDataMaskingArray []LogSensitiveDataMaskingInput

func (LogSensitiveDataMaskingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSensitiveDataMasking)(nil)).Elem()
}

func (i LogSensitiveDataMaskingArray) ToLogSensitiveDataMaskingArrayOutput() LogSensitiveDataMaskingArrayOutput {
	return i.ToLogSensitiveDataMaskingArrayOutputWithContext(context.Background())
}

func (i LogSensitiveDataMaskingArray) ToLogSensitiveDataMaskingArrayOutputWithContext(ctx context.Context) LogSensitiveDataMaskingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSensitiveDataMaskingArrayOutput)
}

// LogSensitiveDataMaskingMapInput is an input type that accepts LogSensitiveDataMaskingMap and LogSensitiveDataMaskingMapOutput values.
// You can construct a concrete instance of `LogSensitiveDataMaskingMapInput` via:
//
//	LogSensitiveDataMaskingMap{ "key": LogSensitiveDataMaskingArgs{...} }
type LogSensitiveDataMaskingMapInput interface {
	pulumi.Input

	ToLogSensitiveDataMaskingMapOutput() LogSensitiveDataMaskingMapOutput
	ToLogSensitiveDataMaskingMapOutputWithContext(context.Context) LogSensitiveDataMaskingMapOutput
}

type LogSensitiveDataMaskingMap map[string]LogSensitiveDataMaskingInput

func (LogSensitiveDataMaskingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSensitiveDataMasking)(nil)).Elem()
}

func (i LogSensitiveDataMaskingMap) ToLogSensitiveDataMaskingMapOutput() LogSensitiveDataMaskingMapOutput {
	return i.ToLogSensitiveDataMaskingMapOutputWithContext(context.Background())
}

func (i LogSensitiveDataMaskingMap) ToLogSensitiveDataMaskingMapOutputWithContext(ctx context.Context) LogSensitiveDataMaskingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogSensitiveDataMaskingMapOutput)
}

type LogSensitiveDataMaskingOutput struct{ *pulumi.OutputState }

func (LogSensitiveDataMaskingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogSensitiveDataMasking)(nil)).Elem()
}

func (o LogSensitiveDataMaskingOutput) ToLogSensitiveDataMaskingOutput() LogSensitiveDataMaskingOutput {
	return o
}

func (o LogSensitiveDataMaskingOutput) ToLogSensitiveDataMaskingOutputWithContext(ctx context.Context) LogSensitiveDataMaskingOutput {
	return o
}

// This setting is enabled (`true`) or disabled (`false`)
func (o LogSensitiveDataMaskingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *LogSensitiveDataMasking) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
func (o LogSensitiveDataMaskingOutput) InsertAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSensitiveDataMasking) pulumi.StringOutput { return v.InsertAfter }).(pulumi.StringOutput)
}

// no documentation available
func (o LogSensitiveDataMaskingOutput) Masking() LogSensitiveDataMaskingMaskingOutput {
	return o.ApplyT(func(v *LogSensitiveDataMasking) LogSensitiveDataMaskingMaskingOutput { return v.Masking }).(LogSensitiveDataMaskingMaskingOutput)
}

// no documentation available
func (o LogSensitiveDataMaskingOutput) Matchers() LogSensitiveDataMaskingMatchersPtrOutput {
	return o.ApplyT(func(v *LogSensitiveDataMasking) LogSensitiveDataMaskingMatchersPtrOutput { return v.Matchers }).(LogSensitiveDataMaskingMatchersPtrOutput)
}

// Name
func (o LogSensitiveDataMaskingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LogSensitiveDataMasking) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The scope of this setting (HOST, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
func (o LogSensitiveDataMaskingOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogSensitiveDataMasking) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

type LogSensitiveDataMaskingArrayOutput struct{ *pulumi.OutputState }

func (LogSensitiveDataMaskingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogSensitiveDataMasking)(nil)).Elem()
}

func (o LogSensitiveDataMaskingArrayOutput) ToLogSensitiveDataMaskingArrayOutput() LogSensitiveDataMaskingArrayOutput {
	return o
}

func (o LogSensitiveDataMaskingArrayOutput) ToLogSensitiveDataMaskingArrayOutputWithContext(ctx context.Context) LogSensitiveDataMaskingArrayOutput {
	return o
}

func (o LogSensitiveDataMaskingArrayOutput) Index(i pulumi.IntInput) LogSensitiveDataMaskingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogSensitiveDataMasking {
		return vs[0].([]*LogSensitiveDataMasking)[vs[1].(int)]
	}).(LogSensitiveDataMaskingOutput)
}

type LogSensitiveDataMaskingMapOutput struct{ *pulumi.OutputState }

func (LogSensitiveDataMaskingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogSensitiveDataMasking)(nil)).Elem()
}

func (o LogSensitiveDataMaskingMapOutput) ToLogSensitiveDataMaskingMapOutput() LogSensitiveDataMaskingMapOutput {
	return o
}

func (o LogSensitiveDataMaskingMapOutput) ToLogSensitiveDataMaskingMapOutputWithContext(ctx context.Context) LogSensitiveDataMaskingMapOutput {
	return o
}

func (o LogSensitiveDataMaskingMapOutput) MapIndex(k pulumi.StringInput) LogSensitiveDataMaskingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogSensitiveDataMasking {
		return vs[0].(map[string]*LogSensitiveDataMasking)[vs[1].(string)]
	}).(LogSensitiveDataMaskingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogSensitiveDataMaskingInput)(nil)).Elem(), &LogSensitiveDataMasking{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSensitiveDataMaskingArrayInput)(nil)).Elem(), LogSensitiveDataMaskingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogSensitiveDataMaskingMapInput)(nil)).Elem(), LogSensitiveDataMaskingMap{})
	pulumi.RegisterOutputType(LogSensitiveDataMaskingOutput{})
	pulumi.RegisterOutputType(LogSensitiveDataMaskingArrayOutput{})
	pulumi.RegisterOutputType(LogSensitiveDataMaskingMapOutput{})
}
