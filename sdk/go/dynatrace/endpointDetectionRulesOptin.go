// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// > This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)
//
// ## Dynatrace Documentation
//
// - Customize endpoint detection in Service Detection v2 - https://docs.dynatrace.com/docs/observe/applications-and-microservices/services/service-detection-v2/endpoint-detection-v2
//
// - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:endpoint-detection-rules-opt-in`)
//
// ## Resource Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dynatrace.NewEndpointDetectionRulesOptin(ctx, "#name#", &dynatrace.EndpointDetectionRulesOptinArgs{
//				Enabled: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type EndpointDetectionRulesOptin struct {
	pulumi.CustomResourceState

	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
}

// NewEndpointDetectionRulesOptin registers a new resource with the given unique name, arguments, and options.
func NewEndpointDetectionRulesOptin(ctx *pulumi.Context,
	name string, args *EndpointDetectionRulesOptinArgs, opts ...pulumi.ResourceOption) (*EndpointDetectionRulesOptin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EndpointDetectionRulesOptin
	err := ctx.RegisterResource("dynatrace:index/endpointDetectionRulesOptin:EndpointDetectionRulesOptin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointDetectionRulesOptin gets an existing EndpointDetectionRulesOptin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointDetectionRulesOptin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointDetectionRulesOptinState, opts ...pulumi.ResourceOption) (*EndpointDetectionRulesOptin, error) {
	var resource EndpointDetectionRulesOptin
	err := ctx.ReadResource("dynatrace:index/endpointDetectionRulesOptin:EndpointDetectionRulesOptin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointDetectionRulesOptin resources.
type endpointDetectionRulesOptinState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
}

type EndpointDetectionRulesOptinState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
}

func (EndpointDetectionRulesOptinState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointDetectionRulesOptinState)(nil)).Elem()
}

type endpointDetectionRulesOptinArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// The set of arguments for constructing a EndpointDetectionRulesOptin resource.
type EndpointDetectionRulesOptinArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
}

func (EndpointDetectionRulesOptinArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointDetectionRulesOptinArgs)(nil)).Elem()
}

type EndpointDetectionRulesOptinInput interface {
	pulumi.Input

	ToEndpointDetectionRulesOptinOutput() EndpointDetectionRulesOptinOutput
	ToEndpointDetectionRulesOptinOutputWithContext(ctx context.Context) EndpointDetectionRulesOptinOutput
}

func (*EndpointDetectionRulesOptin) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointDetectionRulesOptin)(nil)).Elem()
}

func (i *EndpointDetectionRulesOptin) ToEndpointDetectionRulesOptinOutput() EndpointDetectionRulesOptinOutput {
	return i.ToEndpointDetectionRulesOptinOutputWithContext(context.Background())
}

func (i *EndpointDetectionRulesOptin) ToEndpointDetectionRulesOptinOutputWithContext(ctx context.Context) EndpointDetectionRulesOptinOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDetectionRulesOptinOutput)
}

// EndpointDetectionRulesOptinArrayInput is an input type that accepts EndpointDetectionRulesOptinArray and EndpointDetectionRulesOptinArrayOutput values.
// You can construct a concrete instance of `EndpointDetectionRulesOptinArrayInput` via:
//
//	EndpointDetectionRulesOptinArray{ EndpointDetectionRulesOptinArgs{...} }
type EndpointDetectionRulesOptinArrayInput interface {
	pulumi.Input

	ToEndpointDetectionRulesOptinArrayOutput() EndpointDetectionRulesOptinArrayOutput
	ToEndpointDetectionRulesOptinArrayOutputWithContext(context.Context) EndpointDetectionRulesOptinArrayOutput
}

type EndpointDetectionRulesOptinArray []EndpointDetectionRulesOptinInput

func (EndpointDetectionRulesOptinArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointDetectionRulesOptin)(nil)).Elem()
}

func (i EndpointDetectionRulesOptinArray) ToEndpointDetectionRulesOptinArrayOutput() EndpointDetectionRulesOptinArrayOutput {
	return i.ToEndpointDetectionRulesOptinArrayOutputWithContext(context.Background())
}

func (i EndpointDetectionRulesOptinArray) ToEndpointDetectionRulesOptinArrayOutputWithContext(ctx context.Context) EndpointDetectionRulesOptinArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDetectionRulesOptinArrayOutput)
}

// EndpointDetectionRulesOptinMapInput is an input type that accepts EndpointDetectionRulesOptinMap and EndpointDetectionRulesOptinMapOutput values.
// You can construct a concrete instance of `EndpointDetectionRulesOptinMapInput` via:
//
//	EndpointDetectionRulesOptinMap{ "key": EndpointDetectionRulesOptinArgs{...} }
type EndpointDetectionRulesOptinMapInput interface {
	pulumi.Input

	ToEndpointDetectionRulesOptinMapOutput() EndpointDetectionRulesOptinMapOutput
	ToEndpointDetectionRulesOptinMapOutputWithContext(context.Context) EndpointDetectionRulesOptinMapOutput
}

type EndpointDetectionRulesOptinMap map[string]EndpointDetectionRulesOptinInput

func (EndpointDetectionRulesOptinMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointDetectionRulesOptin)(nil)).Elem()
}

func (i EndpointDetectionRulesOptinMap) ToEndpointDetectionRulesOptinMapOutput() EndpointDetectionRulesOptinMapOutput {
	return i.ToEndpointDetectionRulesOptinMapOutputWithContext(context.Background())
}

func (i EndpointDetectionRulesOptinMap) ToEndpointDetectionRulesOptinMapOutputWithContext(ctx context.Context) EndpointDetectionRulesOptinMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDetectionRulesOptinMapOutput)
}

type EndpointDetectionRulesOptinOutput struct{ *pulumi.OutputState }

func (EndpointDetectionRulesOptinOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointDetectionRulesOptin)(nil)).Elem()
}

func (o EndpointDetectionRulesOptinOutput) ToEndpointDetectionRulesOptinOutput() EndpointDetectionRulesOptinOutput {
	return o
}

func (o EndpointDetectionRulesOptinOutput) ToEndpointDetectionRulesOptinOutputWithContext(ctx context.Context) EndpointDetectionRulesOptinOutput {
	return o
}

// This setting is enabled (`true`) or disabled (`false`)
func (o EndpointDetectionRulesOptinOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *EndpointDetectionRulesOptin) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

type EndpointDetectionRulesOptinArrayOutput struct{ *pulumi.OutputState }

func (EndpointDetectionRulesOptinArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointDetectionRulesOptin)(nil)).Elem()
}

func (o EndpointDetectionRulesOptinArrayOutput) ToEndpointDetectionRulesOptinArrayOutput() EndpointDetectionRulesOptinArrayOutput {
	return o
}

func (o EndpointDetectionRulesOptinArrayOutput) ToEndpointDetectionRulesOptinArrayOutputWithContext(ctx context.Context) EndpointDetectionRulesOptinArrayOutput {
	return o
}

func (o EndpointDetectionRulesOptinArrayOutput) Index(i pulumi.IntInput) EndpointDetectionRulesOptinOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointDetectionRulesOptin {
		return vs[0].([]*EndpointDetectionRulesOptin)[vs[1].(int)]
	}).(EndpointDetectionRulesOptinOutput)
}

type EndpointDetectionRulesOptinMapOutput struct{ *pulumi.OutputState }

func (EndpointDetectionRulesOptinMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointDetectionRulesOptin)(nil)).Elem()
}

func (o EndpointDetectionRulesOptinMapOutput) ToEndpointDetectionRulesOptinMapOutput() EndpointDetectionRulesOptinMapOutput {
	return o
}

func (o EndpointDetectionRulesOptinMapOutput) ToEndpointDetectionRulesOptinMapOutputWithContext(ctx context.Context) EndpointDetectionRulesOptinMapOutput {
	return o
}

func (o EndpointDetectionRulesOptinMapOutput) MapIndex(k pulumi.StringInput) EndpointDetectionRulesOptinOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointDetectionRulesOptin {
		return vs[0].(map[string]*EndpointDetectionRulesOptin)[vs[1].(string)]
	}).(EndpointDetectionRulesOptinOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointDetectionRulesOptinInput)(nil)).Elem(), &EndpointDetectionRulesOptin{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointDetectionRulesOptinArrayInput)(nil)).Elem(), EndpointDetectionRulesOptinArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointDetectionRulesOptinMapInput)(nil)).Elem(), EndpointDetectionRulesOptinMap{})
	pulumi.RegisterOutputType(EndpointDetectionRulesOptinOutput{})
	pulumi.RegisterOutputType(EndpointDetectionRulesOptinArrayOutput{})
	pulumi.RegisterOutputType(EndpointDetectionRulesOptinMapOutput{})
}
