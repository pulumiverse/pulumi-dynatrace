// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type Ms365EmailConnection struct {
	pulumi.CustomResourceState

	// Application (client) ID of your app registered in Microsoft Azure App registrations
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// Client secret of your app registered in Microsoft Azure App registrations
	ClientSecret pulumi.StringPtrOutput `pulumi:"clientSecret"`
	// The email address from which the messages will be sent
	FromAddress pulumi.StringOutput `pulumi:"fromAddress"`
	// A unique name for the Microsoft 365 email connection
	Name pulumi.StringOutput `pulumi:"name"`
	// Directory (tenant) ID of your Azure Active Directory
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// Possible Values: `clientSecret`
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewMs365EmailConnection registers a new resource with the given unique name, arguments, and options.
func NewMs365EmailConnection(ctx *pulumi.Context,
	name string, args *Ms365EmailConnectionArgs, opts ...pulumi.ResourceOption) (*Ms365EmailConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.FromAddress == nil {
		return nil, errors.New("invalid value for required argument 'FromAddress'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.ClientSecret != nil {
		args.ClientSecret = pulumi.ToSecret(args.ClientSecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Ms365EmailConnection
	err := ctx.RegisterResource("dynatrace:index/ms365EmailConnection:Ms365EmailConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMs365EmailConnection gets an existing Ms365EmailConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMs365EmailConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *Ms365EmailConnectionState, opts ...pulumi.ResourceOption) (*Ms365EmailConnection, error) {
	var resource Ms365EmailConnection
	err := ctx.ReadResource("dynatrace:index/ms365EmailConnection:Ms365EmailConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ms365EmailConnection resources.
type ms365EmailConnectionState struct {
	// Application (client) ID of your app registered in Microsoft Azure App registrations
	ClientId *string `pulumi:"clientId"`
	// Client secret of your app registered in Microsoft Azure App registrations
	ClientSecret *string `pulumi:"clientSecret"`
	// The email address from which the messages will be sent
	FromAddress *string `pulumi:"fromAddress"`
	// A unique name for the Microsoft 365 email connection
	Name *string `pulumi:"name"`
	// Directory (tenant) ID of your Azure Active Directory
	TenantId *string `pulumi:"tenantId"`
	// Possible Values: `clientSecret`
	Type *string `pulumi:"type"`
}

type Ms365EmailConnectionState struct {
	// Application (client) ID of your app registered in Microsoft Azure App registrations
	ClientId pulumi.StringPtrInput
	// Client secret of your app registered in Microsoft Azure App registrations
	ClientSecret pulumi.StringPtrInput
	// The email address from which the messages will be sent
	FromAddress pulumi.StringPtrInput
	// A unique name for the Microsoft 365 email connection
	Name pulumi.StringPtrInput
	// Directory (tenant) ID of your Azure Active Directory
	TenantId pulumi.StringPtrInput
	// Possible Values: `clientSecret`
	Type pulumi.StringPtrInput
}

func (Ms365EmailConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ms365EmailConnectionState)(nil)).Elem()
}

type ms365EmailConnectionArgs struct {
	// Application (client) ID of your app registered in Microsoft Azure App registrations
	ClientId string `pulumi:"clientId"`
	// Client secret of your app registered in Microsoft Azure App registrations
	ClientSecret *string `pulumi:"clientSecret"`
	// The email address from which the messages will be sent
	FromAddress string `pulumi:"fromAddress"`
	// A unique name for the Microsoft 365 email connection
	Name *string `pulumi:"name"`
	// Directory (tenant) ID of your Azure Active Directory
	TenantId string `pulumi:"tenantId"`
	// Possible Values: `clientSecret`
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a Ms365EmailConnection resource.
type Ms365EmailConnectionArgs struct {
	// Application (client) ID of your app registered in Microsoft Azure App registrations
	ClientId pulumi.StringInput
	// Client secret of your app registered in Microsoft Azure App registrations
	ClientSecret pulumi.StringPtrInput
	// The email address from which the messages will be sent
	FromAddress pulumi.StringInput
	// A unique name for the Microsoft 365 email connection
	Name pulumi.StringPtrInput
	// Directory (tenant) ID of your Azure Active Directory
	TenantId pulumi.StringInput
	// Possible Values: `clientSecret`
	Type pulumi.StringInput
}

func (Ms365EmailConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ms365EmailConnectionArgs)(nil)).Elem()
}

type Ms365EmailConnectionInput interface {
	pulumi.Input

	ToMs365EmailConnectionOutput() Ms365EmailConnectionOutput
	ToMs365EmailConnectionOutputWithContext(ctx context.Context) Ms365EmailConnectionOutput
}

func (*Ms365EmailConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**Ms365EmailConnection)(nil)).Elem()
}

func (i *Ms365EmailConnection) ToMs365EmailConnectionOutput() Ms365EmailConnectionOutput {
	return i.ToMs365EmailConnectionOutputWithContext(context.Background())
}

func (i *Ms365EmailConnection) ToMs365EmailConnectionOutputWithContext(ctx context.Context) Ms365EmailConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ms365EmailConnectionOutput)
}

// Ms365EmailConnectionArrayInput is an input type that accepts Ms365EmailConnectionArray and Ms365EmailConnectionArrayOutput values.
// You can construct a concrete instance of `Ms365EmailConnectionArrayInput` via:
//
//	Ms365EmailConnectionArray{ Ms365EmailConnectionArgs{...} }
type Ms365EmailConnectionArrayInput interface {
	pulumi.Input

	ToMs365EmailConnectionArrayOutput() Ms365EmailConnectionArrayOutput
	ToMs365EmailConnectionArrayOutputWithContext(context.Context) Ms365EmailConnectionArrayOutput
}

type Ms365EmailConnectionArray []Ms365EmailConnectionInput

func (Ms365EmailConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ms365EmailConnection)(nil)).Elem()
}

func (i Ms365EmailConnectionArray) ToMs365EmailConnectionArrayOutput() Ms365EmailConnectionArrayOutput {
	return i.ToMs365EmailConnectionArrayOutputWithContext(context.Background())
}

func (i Ms365EmailConnectionArray) ToMs365EmailConnectionArrayOutputWithContext(ctx context.Context) Ms365EmailConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ms365EmailConnectionArrayOutput)
}

// Ms365EmailConnectionMapInput is an input type that accepts Ms365EmailConnectionMap and Ms365EmailConnectionMapOutput values.
// You can construct a concrete instance of `Ms365EmailConnectionMapInput` via:
//
//	Ms365EmailConnectionMap{ "key": Ms365EmailConnectionArgs{...} }
type Ms365EmailConnectionMapInput interface {
	pulumi.Input

	ToMs365EmailConnectionMapOutput() Ms365EmailConnectionMapOutput
	ToMs365EmailConnectionMapOutputWithContext(context.Context) Ms365EmailConnectionMapOutput
}

type Ms365EmailConnectionMap map[string]Ms365EmailConnectionInput

func (Ms365EmailConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ms365EmailConnection)(nil)).Elem()
}

func (i Ms365EmailConnectionMap) ToMs365EmailConnectionMapOutput() Ms365EmailConnectionMapOutput {
	return i.ToMs365EmailConnectionMapOutputWithContext(context.Background())
}

func (i Ms365EmailConnectionMap) ToMs365EmailConnectionMapOutputWithContext(ctx context.Context) Ms365EmailConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(Ms365EmailConnectionMapOutput)
}

type Ms365EmailConnectionOutput struct{ *pulumi.OutputState }

func (Ms365EmailConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Ms365EmailConnection)(nil)).Elem()
}

func (o Ms365EmailConnectionOutput) ToMs365EmailConnectionOutput() Ms365EmailConnectionOutput {
	return o
}

func (o Ms365EmailConnectionOutput) ToMs365EmailConnectionOutputWithContext(ctx context.Context) Ms365EmailConnectionOutput {
	return o
}

// Application (client) ID of your app registered in Microsoft Azure App registrations
func (o Ms365EmailConnectionOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *Ms365EmailConnection) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// Client secret of your app registered in Microsoft Azure App registrations
func (o Ms365EmailConnectionOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Ms365EmailConnection) pulumi.StringPtrOutput { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The email address from which the messages will be sent
func (o Ms365EmailConnectionOutput) FromAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Ms365EmailConnection) pulumi.StringOutput { return v.FromAddress }).(pulumi.StringOutput)
}

// A unique name for the Microsoft 365 email connection
func (o Ms365EmailConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Ms365EmailConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Directory (tenant) ID of your Azure Active Directory
func (o Ms365EmailConnectionOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *Ms365EmailConnection) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// Possible Values: `clientSecret`
func (o Ms365EmailConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *Ms365EmailConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type Ms365EmailConnectionArrayOutput struct{ *pulumi.OutputState }

func (Ms365EmailConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Ms365EmailConnection)(nil)).Elem()
}

func (o Ms365EmailConnectionArrayOutput) ToMs365EmailConnectionArrayOutput() Ms365EmailConnectionArrayOutput {
	return o
}

func (o Ms365EmailConnectionArrayOutput) ToMs365EmailConnectionArrayOutputWithContext(ctx context.Context) Ms365EmailConnectionArrayOutput {
	return o
}

func (o Ms365EmailConnectionArrayOutput) Index(i pulumi.IntInput) Ms365EmailConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Ms365EmailConnection {
		return vs[0].([]*Ms365EmailConnection)[vs[1].(int)]
	}).(Ms365EmailConnectionOutput)
}

type Ms365EmailConnectionMapOutput struct{ *pulumi.OutputState }

func (Ms365EmailConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Ms365EmailConnection)(nil)).Elem()
}

func (o Ms365EmailConnectionMapOutput) ToMs365EmailConnectionMapOutput() Ms365EmailConnectionMapOutput {
	return o
}

func (o Ms365EmailConnectionMapOutput) ToMs365EmailConnectionMapOutputWithContext(ctx context.Context) Ms365EmailConnectionMapOutput {
	return o
}

func (o Ms365EmailConnectionMapOutput) MapIndex(k pulumi.StringInput) Ms365EmailConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Ms365EmailConnection {
		return vs[0].(map[string]*Ms365EmailConnection)[vs[1].(string)]
	}).(Ms365EmailConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*Ms365EmailConnectionInput)(nil)).Elem(), &Ms365EmailConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ms365EmailConnectionArrayInput)(nil)).Elem(), Ms365EmailConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*Ms365EmailConnectionMapInput)(nil)).Elem(), Ms365EmailConnectionMap{})
	pulumi.RegisterOutputType(Ms365EmailConnectionOutput{})
	pulumi.RegisterOutputType(Ms365EmailConnectionArrayOutput{})
	pulumi.RegisterOutputType(Ms365EmailConnectionMapOutput{})
}
