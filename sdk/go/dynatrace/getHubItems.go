// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// > This data source requires the API token scope `hub.read`)
//
// - `type` (String) The type of hub item you are interested in. Possible values are `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`. If not specified, no restriction regarding type happens
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			extension_20_items, err := dynatrace.GetHubItems(ctx, &dynatrace.GetHubItemsArgs{
//				Type: pulumi.StringRef("EXTENSION2"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("artifact-ids", extension_20_items.Artifacts)
//			ctx.Export("hub-items", extension_20_items.Items)
//			return nil
//		})
//	}
//
// ```
func GetHubItems(ctx *pulumi.Context, args *GetHubItemsArgs, opts ...pulumi.InvokeOption) (*GetHubItemsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHubItemsResult
	err := ctx.Invoke("dynatrace:index/getHubItems:getHubItems", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHubItems.
type GetHubItemsArgs struct {
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`. If not specified, no restriction regarding type happens
	Type *string `pulumi:"type"`
}

// A collection of values returned by getHubItems.
type GetHubItemsResult struct {
	// The fully qualified names of the items as a map
	Artifacts map[string]string `pulumi:"artifacts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The items within this list
	Items []GetHubItemsItem `pulumi:"items"`
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`. If not specified, no restriction regarding type happens
	Type *string `pulumi:"type"`
}

func GetHubItemsOutput(ctx *pulumi.Context, args GetHubItemsOutputArgs, opts ...pulumi.InvokeOption) GetHubItemsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHubItemsResultOutput, error) {
			args := v.(GetHubItemsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetHubItemsResult
			secret, err := ctx.InvokePackageRaw("dynatrace:index/getHubItems:getHubItems", args, &rv, "", opts...)
			if err != nil {
				return GetHubItemsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetHubItemsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetHubItemsResultOutput), nil
			}
			return output, nil
		}).(GetHubItemsResultOutput)
}

// A collection of arguments for invoking getHubItems.
type GetHubItemsOutputArgs struct {
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`. If not specified, no restriction regarding type happens
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetHubItemsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHubItemsArgs)(nil)).Elem()
}

// A collection of values returned by getHubItems.
type GetHubItemsResultOutput struct{ *pulumi.OutputState }

func (GetHubItemsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHubItemsResult)(nil)).Elem()
}

func (o GetHubItemsResultOutput) ToGetHubItemsResultOutput() GetHubItemsResultOutput {
	return o
}

func (o GetHubItemsResultOutput) ToGetHubItemsResultOutputWithContext(ctx context.Context) GetHubItemsResultOutput {
	return o
}

// The fully qualified names of the items as a map
func (o GetHubItemsResultOutput) Artifacts() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetHubItemsResult) map[string]string { return v.Artifacts }).(pulumi.StringMapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHubItemsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The items within this list
func (o GetHubItemsResultOutput) Items() GetHubItemsItemArrayOutput {
	return o.ApplyT(func(v GetHubItemsResult) []GetHubItemsItem { return v.Items }).(GetHubItemsItemArrayOutput)
}

// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`. If not specified, no restriction regarding type happens
func (o GetHubItemsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHubItemsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHubItemsResultOutput{})
}
