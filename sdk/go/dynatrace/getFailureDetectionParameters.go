// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The `FailureDetectionParameters` data source allows the failure detection parameter ID to be retrieved by its name.
//
// - `name` (String) - The name of the failure detection parameter
//
// If multiple services match the given criteria, the first result will be retrieved.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := dynatrace.LookupFailureDetectionParameters(ctx, &dynatrace.LookupFailureDetectionParametersArgs{
//				Name: "Terraform Example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupFailureDetectionParameters(ctx *pulumi.Context, args *LookupFailureDetectionParametersArgs, opts ...pulumi.InvokeOption) (*LookupFailureDetectionParametersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFailureDetectionParametersResult
	err := ctx.Invoke("dynatrace:index/getFailureDetectionParameters:getFailureDetectionParameters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFailureDetectionParameters.
type LookupFailureDetectionParametersArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getFailureDetectionParameters.
type LookupFailureDetectionParametersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupFailureDetectionParametersOutput(ctx *pulumi.Context, args LookupFailureDetectionParametersOutputArgs, opts ...pulumi.InvokeOption) LookupFailureDetectionParametersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupFailureDetectionParametersResultOutput, error) {
			args := v.(LookupFailureDetectionParametersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getFailureDetectionParameters:getFailureDetectionParameters", args, LookupFailureDetectionParametersResultOutput{}, options).(LookupFailureDetectionParametersResultOutput), nil
		}).(LookupFailureDetectionParametersResultOutput)
}

// A collection of arguments for invoking getFailureDetectionParameters.
type LookupFailureDetectionParametersOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupFailureDetectionParametersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFailureDetectionParametersArgs)(nil)).Elem()
}

// A collection of values returned by getFailureDetectionParameters.
type LookupFailureDetectionParametersResultOutput struct{ *pulumi.OutputState }

func (LookupFailureDetectionParametersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFailureDetectionParametersResult)(nil)).Elem()
}

func (o LookupFailureDetectionParametersResultOutput) ToLookupFailureDetectionParametersResultOutput() LookupFailureDetectionParametersResultOutput {
	return o
}

func (o LookupFailureDetectionParametersResultOutput) ToLookupFailureDetectionParametersResultOutputWithContext(ctx context.Context) LookupFailureDetectionParametersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFailureDetectionParametersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFailureDetectionParametersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFailureDetectionParametersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFailureDetectionParametersResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFailureDetectionParametersResultOutput{})
}
