// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OneagentDefaultVersion struct {
	pulumi.CustomResourceState

	// Default version
	DefaultVersion pulumi.StringOutput `pulumi:"defaultVersion"`
	// Revision
	Revision pulumi.StringPtrOutput `pulumi:"revision"`
}

// NewOneagentDefaultVersion registers a new resource with the given unique name, arguments, and options.
func NewOneagentDefaultVersion(ctx *pulumi.Context,
	name string, args *OneagentDefaultVersionArgs, opts ...pulumi.ResourceOption) (*OneagentDefaultVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DefaultVersion == nil {
		return nil, errors.New("invalid value for required argument 'DefaultVersion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OneagentDefaultVersion
	err := ctx.RegisterResource("dynatrace:index/oneagentDefaultVersion:OneagentDefaultVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOneagentDefaultVersion gets an existing OneagentDefaultVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOneagentDefaultVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OneagentDefaultVersionState, opts ...pulumi.ResourceOption) (*OneagentDefaultVersion, error) {
	var resource OneagentDefaultVersion
	err := ctx.ReadResource("dynatrace:index/oneagentDefaultVersion:OneagentDefaultVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OneagentDefaultVersion resources.
type oneagentDefaultVersionState struct {
	// Default version
	DefaultVersion *string `pulumi:"defaultVersion"`
	// Revision
	Revision *string `pulumi:"revision"`
}

type OneagentDefaultVersionState struct {
	// Default version
	DefaultVersion pulumi.StringPtrInput
	// Revision
	Revision pulumi.StringPtrInput
}

func (OneagentDefaultVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*oneagentDefaultVersionState)(nil)).Elem()
}

type oneagentDefaultVersionArgs struct {
	// Default version
	DefaultVersion string `pulumi:"defaultVersion"`
	// Revision
	Revision *string `pulumi:"revision"`
}

// The set of arguments for constructing a OneagentDefaultVersion resource.
type OneagentDefaultVersionArgs struct {
	// Default version
	DefaultVersion pulumi.StringInput
	// Revision
	Revision pulumi.StringPtrInput
}

func (OneagentDefaultVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*oneagentDefaultVersionArgs)(nil)).Elem()
}

type OneagentDefaultVersionInput interface {
	pulumi.Input

	ToOneagentDefaultVersionOutput() OneagentDefaultVersionOutput
	ToOneagentDefaultVersionOutputWithContext(ctx context.Context) OneagentDefaultVersionOutput
}

func (*OneagentDefaultVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**OneagentDefaultVersion)(nil)).Elem()
}

func (i *OneagentDefaultVersion) ToOneagentDefaultVersionOutput() OneagentDefaultVersionOutput {
	return i.ToOneagentDefaultVersionOutputWithContext(context.Background())
}

func (i *OneagentDefaultVersion) ToOneagentDefaultVersionOutputWithContext(ctx context.Context) OneagentDefaultVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneagentDefaultVersionOutput)
}

// OneagentDefaultVersionArrayInput is an input type that accepts OneagentDefaultVersionArray and OneagentDefaultVersionArrayOutput values.
// You can construct a concrete instance of `OneagentDefaultVersionArrayInput` via:
//
//	OneagentDefaultVersionArray{ OneagentDefaultVersionArgs{...} }
type OneagentDefaultVersionArrayInput interface {
	pulumi.Input

	ToOneagentDefaultVersionArrayOutput() OneagentDefaultVersionArrayOutput
	ToOneagentDefaultVersionArrayOutputWithContext(context.Context) OneagentDefaultVersionArrayOutput
}

type OneagentDefaultVersionArray []OneagentDefaultVersionInput

func (OneagentDefaultVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OneagentDefaultVersion)(nil)).Elem()
}

func (i OneagentDefaultVersionArray) ToOneagentDefaultVersionArrayOutput() OneagentDefaultVersionArrayOutput {
	return i.ToOneagentDefaultVersionArrayOutputWithContext(context.Background())
}

func (i OneagentDefaultVersionArray) ToOneagentDefaultVersionArrayOutputWithContext(ctx context.Context) OneagentDefaultVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneagentDefaultVersionArrayOutput)
}

// OneagentDefaultVersionMapInput is an input type that accepts OneagentDefaultVersionMap and OneagentDefaultVersionMapOutput values.
// You can construct a concrete instance of `OneagentDefaultVersionMapInput` via:
//
//	OneagentDefaultVersionMap{ "key": OneagentDefaultVersionArgs{...} }
type OneagentDefaultVersionMapInput interface {
	pulumi.Input

	ToOneagentDefaultVersionMapOutput() OneagentDefaultVersionMapOutput
	ToOneagentDefaultVersionMapOutputWithContext(context.Context) OneagentDefaultVersionMapOutput
}

type OneagentDefaultVersionMap map[string]OneagentDefaultVersionInput

func (OneagentDefaultVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OneagentDefaultVersion)(nil)).Elem()
}

func (i OneagentDefaultVersionMap) ToOneagentDefaultVersionMapOutput() OneagentDefaultVersionMapOutput {
	return i.ToOneagentDefaultVersionMapOutputWithContext(context.Background())
}

func (i OneagentDefaultVersionMap) ToOneagentDefaultVersionMapOutputWithContext(ctx context.Context) OneagentDefaultVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneagentDefaultVersionMapOutput)
}

type OneagentDefaultVersionOutput struct{ *pulumi.OutputState }

func (OneagentDefaultVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneagentDefaultVersion)(nil)).Elem()
}

func (o OneagentDefaultVersionOutput) ToOneagentDefaultVersionOutput() OneagentDefaultVersionOutput {
	return o
}

func (o OneagentDefaultVersionOutput) ToOneagentDefaultVersionOutputWithContext(ctx context.Context) OneagentDefaultVersionOutput {
	return o
}

// Default version
func (o OneagentDefaultVersionOutput) DefaultVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *OneagentDefaultVersion) pulumi.StringOutput { return v.DefaultVersion }).(pulumi.StringOutput)
}

// Revision
func (o OneagentDefaultVersionOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneagentDefaultVersion) pulumi.StringPtrOutput { return v.Revision }).(pulumi.StringPtrOutput)
}

type OneagentDefaultVersionArrayOutput struct{ *pulumi.OutputState }

func (OneagentDefaultVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OneagentDefaultVersion)(nil)).Elem()
}

func (o OneagentDefaultVersionArrayOutput) ToOneagentDefaultVersionArrayOutput() OneagentDefaultVersionArrayOutput {
	return o
}

func (o OneagentDefaultVersionArrayOutput) ToOneagentDefaultVersionArrayOutputWithContext(ctx context.Context) OneagentDefaultVersionArrayOutput {
	return o
}

func (o OneagentDefaultVersionArrayOutput) Index(i pulumi.IntInput) OneagentDefaultVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OneagentDefaultVersion {
		return vs[0].([]*OneagentDefaultVersion)[vs[1].(int)]
	}).(OneagentDefaultVersionOutput)
}

type OneagentDefaultVersionMapOutput struct{ *pulumi.OutputState }

func (OneagentDefaultVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OneagentDefaultVersion)(nil)).Elem()
}

func (o OneagentDefaultVersionMapOutput) ToOneagentDefaultVersionMapOutput() OneagentDefaultVersionMapOutput {
	return o
}

func (o OneagentDefaultVersionMapOutput) ToOneagentDefaultVersionMapOutputWithContext(ctx context.Context) OneagentDefaultVersionMapOutput {
	return o
}

func (o OneagentDefaultVersionMapOutput) MapIndex(k pulumi.StringInput) OneagentDefaultVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OneagentDefaultVersion {
		return vs[0].(map[string]*OneagentDefaultVersion)[vs[1].(string)]
	}).(OneagentDefaultVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OneagentDefaultVersionInput)(nil)).Elem(), &OneagentDefaultVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneagentDefaultVersionArrayInput)(nil)).Elem(), OneagentDefaultVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneagentDefaultVersionMapInput)(nil)).Elem(), OneagentDefaultVersionMap{})
	pulumi.RegisterOutputType(OneagentDefaultVersionOutput{})
	pulumi.RegisterOutputType(OneagentDefaultVersionArrayOutput{})
	pulumi.RegisterOutputType(OneagentDefaultVersionMapOutput{})
}
