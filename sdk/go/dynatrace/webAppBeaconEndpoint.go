// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type WebAppBeaconEndpoint struct {
	pulumi.CustomResourceState

	// The scope of this setting
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
	Type pulumi.StringOutput `pulumi:"type"`
	// You can specify either path segments or an absolute URL.
	Url pulumi.StringPtrOutput `pulumi:"url"`
	// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
	UseCors pulumi.BoolPtrOutput `pulumi:"useCors"`
}

// NewWebAppBeaconEndpoint registers a new resource with the given unique name, arguments, and options.
func NewWebAppBeaconEndpoint(ctx *pulumi.Context,
	name string, args *WebAppBeaconEndpointArgs, opts ...pulumi.ResourceOption) (*WebAppBeaconEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAppBeaconEndpoint
	err := ctx.RegisterResource("dynatrace:index/webAppBeaconEndpoint:WebAppBeaconEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppBeaconEndpoint gets an existing WebAppBeaconEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppBeaconEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppBeaconEndpointState, opts ...pulumi.ResourceOption) (*WebAppBeaconEndpoint, error) {
	var resource WebAppBeaconEndpoint
	err := ctx.ReadResource("dynatrace:index/webAppBeaconEndpoint:WebAppBeaconEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppBeaconEndpoint resources.
type webAppBeaconEndpointState struct {
	// The scope of this setting
	ApplicationId *string `pulumi:"applicationId"`
	// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
	Type *string `pulumi:"type"`
	// You can specify either path segments or an absolute URL.
	Url *string `pulumi:"url"`
	// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
	UseCors *bool `pulumi:"useCors"`
}

type WebAppBeaconEndpointState struct {
	// The scope of this setting
	ApplicationId pulumi.StringPtrInput
	// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
	Type pulumi.StringPtrInput
	// You can specify either path segments or an absolute URL.
	Url pulumi.StringPtrInput
	// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
	UseCors pulumi.BoolPtrInput
}

func (WebAppBeaconEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppBeaconEndpointState)(nil)).Elem()
}

type webAppBeaconEndpointArgs struct {
	// The scope of this setting
	ApplicationId string `pulumi:"applicationId"`
	// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
	Type string `pulumi:"type"`
	// You can specify either path segments or an absolute URL.
	Url *string `pulumi:"url"`
	// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
	UseCors *bool `pulumi:"useCors"`
}

// The set of arguments for constructing a WebAppBeaconEndpoint resource.
type WebAppBeaconEndpointArgs struct {
	// The scope of this setting
	ApplicationId pulumi.StringInput
	// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
	Type pulumi.StringInput
	// You can specify either path segments or an absolute URL.
	Url pulumi.StringPtrInput
	// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
	UseCors pulumi.BoolPtrInput
}

func (WebAppBeaconEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppBeaconEndpointArgs)(nil)).Elem()
}

type WebAppBeaconEndpointInput interface {
	pulumi.Input

	ToWebAppBeaconEndpointOutput() WebAppBeaconEndpointOutput
	ToWebAppBeaconEndpointOutputWithContext(ctx context.Context) WebAppBeaconEndpointOutput
}

func (*WebAppBeaconEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppBeaconEndpoint)(nil)).Elem()
}

func (i *WebAppBeaconEndpoint) ToWebAppBeaconEndpointOutput() WebAppBeaconEndpointOutput {
	return i.ToWebAppBeaconEndpointOutputWithContext(context.Background())
}

func (i *WebAppBeaconEndpoint) ToWebAppBeaconEndpointOutputWithContext(ctx context.Context) WebAppBeaconEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppBeaconEndpointOutput)
}

// WebAppBeaconEndpointArrayInput is an input type that accepts WebAppBeaconEndpointArray and WebAppBeaconEndpointArrayOutput values.
// You can construct a concrete instance of `WebAppBeaconEndpointArrayInput` via:
//
//	WebAppBeaconEndpointArray{ WebAppBeaconEndpointArgs{...} }
type WebAppBeaconEndpointArrayInput interface {
	pulumi.Input

	ToWebAppBeaconEndpointArrayOutput() WebAppBeaconEndpointArrayOutput
	ToWebAppBeaconEndpointArrayOutputWithContext(context.Context) WebAppBeaconEndpointArrayOutput
}

type WebAppBeaconEndpointArray []WebAppBeaconEndpointInput

func (WebAppBeaconEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppBeaconEndpoint)(nil)).Elem()
}

func (i WebAppBeaconEndpointArray) ToWebAppBeaconEndpointArrayOutput() WebAppBeaconEndpointArrayOutput {
	return i.ToWebAppBeaconEndpointArrayOutputWithContext(context.Background())
}

func (i WebAppBeaconEndpointArray) ToWebAppBeaconEndpointArrayOutputWithContext(ctx context.Context) WebAppBeaconEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppBeaconEndpointArrayOutput)
}

// WebAppBeaconEndpointMapInput is an input type that accepts WebAppBeaconEndpointMap and WebAppBeaconEndpointMapOutput values.
// You can construct a concrete instance of `WebAppBeaconEndpointMapInput` via:
//
//	WebAppBeaconEndpointMap{ "key": WebAppBeaconEndpointArgs{...} }
type WebAppBeaconEndpointMapInput interface {
	pulumi.Input

	ToWebAppBeaconEndpointMapOutput() WebAppBeaconEndpointMapOutput
	ToWebAppBeaconEndpointMapOutputWithContext(context.Context) WebAppBeaconEndpointMapOutput
}

type WebAppBeaconEndpointMap map[string]WebAppBeaconEndpointInput

func (WebAppBeaconEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppBeaconEndpoint)(nil)).Elem()
}

func (i WebAppBeaconEndpointMap) ToWebAppBeaconEndpointMapOutput() WebAppBeaconEndpointMapOutput {
	return i.ToWebAppBeaconEndpointMapOutputWithContext(context.Background())
}

func (i WebAppBeaconEndpointMap) ToWebAppBeaconEndpointMapOutputWithContext(ctx context.Context) WebAppBeaconEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppBeaconEndpointMapOutput)
}

type WebAppBeaconEndpointOutput struct{ *pulumi.OutputState }

func (WebAppBeaconEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppBeaconEndpoint)(nil)).Elem()
}

func (o WebAppBeaconEndpointOutput) ToWebAppBeaconEndpointOutput() WebAppBeaconEndpointOutput {
	return o
}

func (o WebAppBeaconEndpointOutput) ToWebAppBeaconEndpointOutputWithContext(ctx context.Context) WebAppBeaconEndpointOutput {
	return o
}

// The scope of this setting
func (o WebAppBeaconEndpointOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppBeaconEndpoint) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Possible Values: `ACTIVEGATE`, `DEFAULT_CONFIG`, `ONEAGENT`
func (o WebAppBeaconEndpointOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppBeaconEndpoint) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// You can specify either path segments or an absolute URL.
func (o WebAppBeaconEndpointOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppBeaconEndpoint) pulumi.StringPtrOutput { return v.Url }).(pulumi.StringPtrOutput)
}

// Learn more about [sending beacon data via CORS](https://dt-url.net/r7038sa)
func (o WebAppBeaconEndpointOutput) UseCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppBeaconEndpoint) pulumi.BoolPtrOutput { return v.UseCors }).(pulumi.BoolPtrOutput)
}

type WebAppBeaconEndpointArrayOutput struct{ *pulumi.OutputState }

func (WebAppBeaconEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppBeaconEndpoint)(nil)).Elem()
}

func (o WebAppBeaconEndpointArrayOutput) ToWebAppBeaconEndpointArrayOutput() WebAppBeaconEndpointArrayOutput {
	return o
}

func (o WebAppBeaconEndpointArrayOutput) ToWebAppBeaconEndpointArrayOutputWithContext(ctx context.Context) WebAppBeaconEndpointArrayOutput {
	return o
}

func (o WebAppBeaconEndpointArrayOutput) Index(i pulumi.IntInput) WebAppBeaconEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAppBeaconEndpoint {
		return vs[0].([]*WebAppBeaconEndpoint)[vs[1].(int)]
	}).(WebAppBeaconEndpointOutput)
}

type WebAppBeaconEndpointMapOutput struct{ *pulumi.OutputState }

func (WebAppBeaconEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppBeaconEndpoint)(nil)).Elem()
}

func (o WebAppBeaconEndpointMapOutput) ToWebAppBeaconEndpointMapOutput() WebAppBeaconEndpointMapOutput {
	return o
}

func (o WebAppBeaconEndpointMapOutput) ToWebAppBeaconEndpointMapOutputWithContext(ctx context.Context) WebAppBeaconEndpointMapOutput {
	return o
}

func (o WebAppBeaconEndpointMapOutput) MapIndex(k pulumi.StringInput) WebAppBeaconEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAppBeaconEndpoint {
		return vs[0].(map[string]*WebAppBeaconEndpoint)[vs[1].(string)]
	}).(WebAppBeaconEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppBeaconEndpointInput)(nil)).Elem(), &WebAppBeaconEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppBeaconEndpointArrayInput)(nil)).Elem(), WebAppBeaconEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppBeaconEndpointMapInput)(nil)).Elem(), WebAppBeaconEndpointMap{})
	pulumi.RegisterOutputType(WebAppBeaconEndpointOutput{})
	pulumi.RegisterOutputType(WebAppBeaconEndpointArrayOutput{})
	pulumi.RegisterOutputType(WebAppBeaconEndpointMapOutput{})
}
