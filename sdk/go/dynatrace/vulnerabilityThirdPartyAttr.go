// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// > This resource requires the API token scopes **Read security problems** (`securityProblems.read`) and **Write security problems** (`securityProblems.write`)
//
// > This resource is excluded by default in the export utility, please explicitly specify the resource to retrieve existing configuration.
//
// ## Dynatrace Documentation
//
// - Runtime Vulnerability Analytics - https://www.dynatrace.com/support/help/platform-modules/application-security/vulnerability-analytics
//
// - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:appsec.third-party-vulnerability-rule-settings`)
//
// ## Resource Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dynatrace.NewVulnerabilityThirdPartyAttr(ctx, "#name#", &dynatrace.VulnerabilityThirdPartyAttrArgs{
//				Enabled: pulumi.Bool(false),
//				Metadata: &dynatrace.VulnerabilityThirdPartyAttrMetadataArgs{
//					Comment: pulumi.String("Leave a comment here"),
//				},
//				ResourceAttributeConditions: &dynatrace.VulnerabilityThirdPartyAttrResourceAttributeConditionsArgs{
//					ResourceAttributeConditions: dynatrace.VulnerabilityThirdPartyAttrResourceAttributeConditionsResourceAttributeConditionArray{
//						&dynatrace.VulnerabilityThirdPartyAttrResourceAttributeConditionsResourceAttributeConditionArgs{
//							Matcher:                pulumi.String("EQUALS"),
//							ResourceAttributeKey:   pulumi.String("process.executable.path"),
//							ResourceAttributeValue: pulumi.String("/"),
//						},
//						&dynatrace.VulnerabilityThirdPartyAttrResourceAttributeConditionsResourceAttributeConditionArgs{
//							Matcher:                pulumi.String("CONTAINS"),
//							ResourceAttributeKey:   pulumi.String("process.executable.name"),
//							ResourceAttributeValue: pulumi.String("terraform"),
//						},
//					},
//				},
//				RuleName: pulumi.String("#name#"),
//				VulnerabilityDetectionControl: &dynatrace.VulnerabilityThirdPartyAttrVulnerabilityDetectionControlArgs{
//					MonitoringMode: pulumi.String("MONITORING_ON"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type VulnerabilityThirdPartyAttr struct {
	pulumi.CustomResourceState

	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringOutput `pulumi:"insertAfter"`
	// Step 3: Leave comment (optional)
	Metadata VulnerabilityThirdPartyAttrMetadataOutput `pulumi:"metadata"`
	// When you add multiple conditions, the rule applies if all conditions apply.
	ResourceAttributeConditions VulnerabilityThirdPartyAttrResourceAttributeConditionsPtrOutput `pulumi:"resourceAttributeConditions"`
	// Rule name
	RuleName pulumi.StringPtrOutput `pulumi:"ruleName"`
	// Step 1: Select third-party vulnerability detection behavior
	VulnerabilityDetectionControl VulnerabilityThirdPartyAttrVulnerabilityDetectionControlOutput `pulumi:"vulnerabilityDetectionControl"`
}

// NewVulnerabilityThirdPartyAttr registers a new resource with the given unique name, arguments, and options.
func NewVulnerabilityThirdPartyAttr(ctx *pulumi.Context,
	name string, args *VulnerabilityThirdPartyAttrArgs, opts ...pulumi.ResourceOption) (*VulnerabilityThirdPartyAttr, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Metadata == nil {
		return nil, errors.New("invalid value for required argument 'Metadata'")
	}
	if args.VulnerabilityDetectionControl == nil {
		return nil, errors.New("invalid value for required argument 'VulnerabilityDetectionControl'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VulnerabilityThirdPartyAttr
	err := ctx.RegisterResource("dynatrace:index/vulnerabilityThirdPartyAttr:VulnerabilityThirdPartyAttr", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVulnerabilityThirdPartyAttr gets an existing VulnerabilityThirdPartyAttr resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVulnerabilityThirdPartyAttr(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VulnerabilityThirdPartyAttrState, opts ...pulumi.ResourceOption) (*VulnerabilityThirdPartyAttr, error) {
	var resource VulnerabilityThirdPartyAttr
	err := ctx.ReadResource("dynatrace:index/vulnerabilityThirdPartyAttr:VulnerabilityThirdPartyAttr", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VulnerabilityThirdPartyAttr resources.
type vulnerabilityThirdPartyAttrState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Step 3: Leave comment (optional)
	Metadata *VulnerabilityThirdPartyAttrMetadata `pulumi:"metadata"`
	// When you add multiple conditions, the rule applies if all conditions apply.
	ResourceAttributeConditions *VulnerabilityThirdPartyAttrResourceAttributeConditions `pulumi:"resourceAttributeConditions"`
	// Rule name
	RuleName *string `pulumi:"ruleName"`
	// Step 1: Select third-party vulnerability detection behavior
	VulnerabilityDetectionControl *VulnerabilityThirdPartyAttrVulnerabilityDetectionControl `pulumi:"vulnerabilityDetectionControl"`
}

type VulnerabilityThirdPartyAttrState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Step 3: Leave comment (optional)
	Metadata VulnerabilityThirdPartyAttrMetadataPtrInput
	// When you add multiple conditions, the rule applies if all conditions apply.
	ResourceAttributeConditions VulnerabilityThirdPartyAttrResourceAttributeConditionsPtrInput
	// Rule name
	RuleName pulumi.StringPtrInput
	// Step 1: Select third-party vulnerability detection behavior
	VulnerabilityDetectionControl VulnerabilityThirdPartyAttrVulnerabilityDetectionControlPtrInput
}

func (VulnerabilityThirdPartyAttrState) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityThirdPartyAttrState)(nil)).Elem()
}

type vulnerabilityThirdPartyAttrArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Step 3: Leave comment (optional)
	Metadata VulnerabilityThirdPartyAttrMetadata `pulumi:"metadata"`
	// When you add multiple conditions, the rule applies if all conditions apply.
	ResourceAttributeConditions *VulnerabilityThirdPartyAttrResourceAttributeConditions `pulumi:"resourceAttributeConditions"`
	// Rule name
	RuleName *string `pulumi:"ruleName"`
	// Step 1: Select third-party vulnerability detection behavior
	VulnerabilityDetectionControl VulnerabilityThirdPartyAttrVulnerabilityDetectionControl `pulumi:"vulnerabilityDetectionControl"`
}

// The set of arguments for constructing a VulnerabilityThirdPartyAttr resource.
type VulnerabilityThirdPartyAttrArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Step 3: Leave comment (optional)
	Metadata VulnerabilityThirdPartyAttrMetadataInput
	// When you add multiple conditions, the rule applies if all conditions apply.
	ResourceAttributeConditions VulnerabilityThirdPartyAttrResourceAttributeConditionsPtrInput
	// Rule name
	RuleName pulumi.StringPtrInput
	// Step 1: Select third-party vulnerability detection behavior
	VulnerabilityDetectionControl VulnerabilityThirdPartyAttrVulnerabilityDetectionControlInput
}

func (VulnerabilityThirdPartyAttrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityThirdPartyAttrArgs)(nil)).Elem()
}

type VulnerabilityThirdPartyAttrInput interface {
	pulumi.Input

	ToVulnerabilityThirdPartyAttrOutput() VulnerabilityThirdPartyAttrOutput
	ToVulnerabilityThirdPartyAttrOutputWithContext(ctx context.Context) VulnerabilityThirdPartyAttrOutput
}

func (*VulnerabilityThirdPartyAttr) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityThirdPartyAttr)(nil)).Elem()
}

func (i *VulnerabilityThirdPartyAttr) ToVulnerabilityThirdPartyAttrOutput() VulnerabilityThirdPartyAttrOutput {
	return i.ToVulnerabilityThirdPartyAttrOutputWithContext(context.Background())
}

func (i *VulnerabilityThirdPartyAttr) ToVulnerabilityThirdPartyAttrOutputWithContext(ctx context.Context) VulnerabilityThirdPartyAttrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityThirdPartyAttrOutput)
}

// VulnerabilityThirdPartyAttrArrayInput is an input type that accepts VulnerabilityThirdPartyAttrArray and VulnerabilityThirdPartyAttrArrayOutput values.
// You can construct a concrete instance of `VulnerabilityThirdPartyAttrArrayInput` via:
//
//	VulnerabilityThirdPartyAttrArray{ VulnerabilityThirdPartyAttrArgs{...} }
type VulnerabilityThirdPartyAttrArrayInput interface {
	pulumi.Input

	ToVulnerabilityThirdPartyAttrArrayOutput() VulnerabilityThirdPartyAttrArrayOutput
	ToVulnerabilityThirdPartyAttrArrayOutputWithContext(context.Context) VulnerabilityThirdPartyAttrArrayOutput
}

type VulnerabilityThirdPartyAttrArray []VulnerabilityThirdPartyAttrInput

func (VulnerabilityThirdPartyAttrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VulnerabilityThirdPartyAttr)(nil)).Elem()
}

func (i VulnerabilityThirdPartyAttrArray) ToVulnerabilityThirdPartyAttrArrayOutput() VulnerabilityThirdPartyAttrArrayOutput {
	return i.ToVulnerabilityThirdPartyAttrArrayOutputWithContext(context.Background())
}

func (i VulnerabilityThirdPartyAttrArray) ToVulnerabilityThirdPartyAttrArrayOutputWithContext(ctx context.Context) VulnerabilityThirdPartyAttrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityThirdPartyAttrArrayOutput)
}

// VulnerabilityThirdPartyAttrMapInput is an input type that accepts VulnerabilityThirdPartyAttrMap and VulnerabilityThirdPartyAttrMapOutput values.
// You can construct a concrete instance of `VulnerabilityThirdPartyAttrMapInput` via:
//
//	VulnerabilityThirdPartyAttrMap{ "key": VulnerabilityThirdPartyAttrArgs{...} }
type VulnerabilityThirdPartyAttrMapInput interface {
	pulumi.Input

	ToVulnerabilityThirdPartyAttrMapOutput() VulnerabilityThirdPartyAttrMapOutput
	ToVulnerabilityThirdPartyAttrMapOutputWithContext(context.Context) VulnerabilityThirdPartyAttrMapOutput
}

type VulnerabilityThirdPartyAttrMap map[string]VulnerabilityThirdPartyAttrInput

func (VulnerabilityThirdPartyAttrMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VulnerabilityThirdPartyAttr)(nil)).Elem()
}

func (i VulnerabilityThirdPartyAttrMap) ToVulnerabilityThirdPartyAttrMapOutput() VulnerabilityThirdPartyAttrMapOutput {
	return i.ToVulnerabilityThirdPartyAttrMapOutputWithContext(context.Background())
}

func (i VulnerabilityThirdPartyAttrMap) ToVulnerabilityThirdPartyAttrMapOutputWithContext(ctx context.Context) VulnerabilityThirdPartyAttrMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityThirdPartyAttrMapOutput)
}

type VulnerabilityThirdPartyAttrOutput struct{ *pulumi.OutputState }

func (VulnerabilityThirdPartyAttrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityThirdPartyAttr)(nil)).Elem()
}

func (o VulnerabilityThirdPartyAttrOutput) ToVulnerabilityThirdPartyAttrOutput() VulnerabilityThirdPartyAttrOutput {
	return o
}

func (o VulnerabilityThirdPartyAttrOutput) ToVulnerabilityThirdPartyAttrOutputWithContext(ctx context.Context) VulnerabilityThirdPartyAttrOutput {
	return o
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VulnerabilityThirdPartyAttrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *VulnerabilityThirdPartyAttr) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
func (o VulnerabilityThirdPartyAttrOutput) InsertAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityThirdPartyAttr) pulumi.StringOutput { return v.InsertAfter }).(pulumi.StringOutput)
}

// Step 3: Leave comment (optional)
func (o VulnerabilityThirdPartyAttrOutput) Metadata() VulnerabilityThirdPartyAttrMetadataOutput {
	return o.ApplyT(func(v *VulnerabilityThirdPartyAttr) VulnerabilityThirdPartyAttrMetadataOutput { return v.Metadata }).(VulnerabilityThirdPartyAttrMetadataOutput)
}

// When you add multiple conditions, the rule applies if all conditions apply.
func (o VulnerabilityThirdPartyAttrOutput) ResourceAttributeConditions() VulnerabilityThirdPartyAttrResourceAttributeConditionsPtrOutput {
	return o.ApplyT(func(v *VulnerabilityThirdPartyAttr) VulnerabilityThirdPartyAttrResourceAttributeConditionsPtrOutput {
		return v.ResourceAttributeConditions
	}).(VulnerabilityThirdPartyAttrResourceAttributeConditionsPtrOutput)
}

// Rule name
func (o VulnerabilityThirdPartyAttrOutput) RuleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VulnerabilityThirdPartyAttr) pulumi.StringPtrOutput { return v.RuleName }).(pulumi.StringPtrOutput)
}

// Step 1: Select third-party vulnerability detection behavior
func (o VulnerabilityThirdPartyAttrOutput) VulnerabilityDetectionControl() VulnerabilityThirdPartyAttrVulnerabilityDetectionControlOutput {
	return o.ApplyT(func(v *VulnerabilityThirdPartyAttr) VulnerabilityThirdPartyAttrVulnerabilityDetectionControlOutput {
		return v.VulnerabilityDetectionControl
	}).(VulnerabilityThirdPartyAttrVulnerabilityDetectionControlOutput)
}

type VulnerabilityThirdPartyAttrArrayOutput struct{ *pulumi.OutputState }

func (VulnerabilityThirdPartyAttrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VulnerabilityThirdPartyAttr)(nil)).Elem()
}

func (o VulnerabilityThirdPartyAttrArrayOutput) ToVulnerabilityThirdPartyAttrArrayOutput() VulnerabilityThirdPartyAttrArrayOutput {
	return o
}

func (o VulnerabilityThirdPartyAttrArrayOutput) ToVulnerabilityThirdPartyAttrArrayOutputWithContext(ctx context.Context) VulnerabilityThirdPartyAttrArrayOutput {
	return o
}

func (o VulnerabilityThirdPartyAttrArrayOutput) Index(i pulumi.IntInput) VulnerabilityThirdPartyAttrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VulnerabilityThirdPartyAttr {
		return vs[0].([]*VulnerabilityThirdPartyAttr)[vs[1].(int)]
	}).(VulnerabilityThirdPartyAttrOutput)
}

type VulnerabilityThirdPartyAttrMapOutput struct{ *pulumi.OutputState }

func (VulnerabilityThirdPartyAttrMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VulnerabilityThirdPartyAttr)(nil)).Elem()
}

func (o VulnerabilityThirdPartyAttrMapOutput) ToVulnerabilityThirdPartyAttrMapOutput() VulnerabilityThirdPartyAttrMapOutput {
	return o
}

func (o VulnerabilityThirdPartyAttrMapOutput) ToVulnerabilityThirdPartyAttrMapOutputWithContext(ctx context.Context) VulnerabilityThirdPartyAttrMapOutput {
	return o
}

func (o VulnerabilityThirdPartyAttrMapOutput) MapIndex(k pulumi.StringInput) VulnerabilityThirdPartyAttrOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VulnerabilityThirdPartyAttr {
		return vs[0].(map[string]*VulnerabilityThirdPartyAttr)[vs[1].(string)]
	}).(VulnerabilityThirdPartyAttrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityThirdPartyAttrInput)(nil)).Elem(), &VulnerabilityThirdPartyAttr{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityThirdPartyAttrArrayInput)(nil)).Elem(), VulnerabilityThirdPartyAttrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityThirdPartyAttrMapInput)(nil)).Elem(), VulnerabilityThirdPartyAttrMap{})
	pulumi.RegisterOutputType(VulnerabilityThirdPartyAttrOutput{})
	pulumi.RegisterOutputType(VulnerabilityThirdPartyAttrArrayOutput{})
	pulumi.RegisterOutputType(VulnerabilityThirdPartyAttrMapOutput{})
}
