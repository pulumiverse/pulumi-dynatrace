// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type VulnerabilityThirdParty struct {
	pulumi.CustomResourceState

	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringOutput `pulumi:"insertAfter"`
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	Mode pulumi.StringOutput `pulumi:"mode"`
	// Possible Values: `EQUALS`, `NOT_EQUALS`
	Operator pulumi.StringOutput `pulumi:"operator"`
	// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
	Property pulumi.StringOutput `pulumi:"property"`
	// Condition value
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewVulnerabilityThirdParty registers a new resource with the given unique name, arguments, and options.
func NewVulnerabilityThirdParty(ctx *pulumi.Context,
	name string, args *VulnerabilityThirdPartyArgs, opts ...pulumi.ResourceOption) (*VulnerabilityThirdParty, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	if args.Operator == nil {
		return nil, errors.New("invalid value for required argument 'Operator'")
	}
	if args.Property == nil {
		return nil, errors.New("invalid value for required argument 'Property'")
	}
	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VulnerabilityThirdParty
	err := ctx.RegisterResource("dynatrace:index/vulnerabilityThirdParty:VulnerabilityThirdParty", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVulnerabilityThirdParty gets an existing VulnerabilityThirdParty resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVulnerabilityThirdParty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VulnerabilityThirdPartyState, opts ...pulumi.ResourceOption) (*VulnerabilityThirdParty, error) {
	var resource VulnerabilityThirdParty
	err := ctx.ReadResource("dynatrace:index/vulnerabilityThirdParty:VulnerabilityThirdParty", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VulnerabilityThirdParty resources.
type vulnerabilityThirdPartyState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	Mode *string `pulumi:"mode"`
	// Possible Values: `EQUALS`, `NOT_EQUALS`
	Operator *string `pulumi:"operator"`
	// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
	Property *string `pulumi:"property"`
	// Condition value
	Value *string `pulumi:"value"`
}

type VulnerabilityThirdPartyState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	Mode pulumi.StringPtrInput
	// Possible Values: `EQUALS`, `NOT_EQUALS`
	Operator pulumi.StringPtrInput
	// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
	Property pulumi.StringPtrInput
	// Condition value
	Value pulumi.StringPtrInput
}

func (VulnerabilityThirdPartyState) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityThirdPartyState)(nil)).Elem()
}

type vulnerabilityThirdPartyArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	Mode string `pulumi:"mode"`
	// Possible Values: `EQUALS`, `NOT_EQUALS`
	Operator string `pulumi:"operator"`
	// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
	Property string `pulumi:"property"`
	// Condition value
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a VulnerabilityThirdParty resource.
type VulnerabilityThirdPartyArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	Mode pulumi.StringInput
	// Possible Values: `EQUALS`, `NOT_EQUALS`
	Operator pulumi.StringInput
	// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
	Property pulumi.StringInput
	// Condition value
	Value pulumi.StringInput
}

func (VulnerabilityThirdPartyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityThirdPartyArgs)(nil)).Elem()
}

type VulnerabilityThirdPartyInput interface {
	pulumi.Input

	ToVulnerabilityThirdPartyOutput() VulnerabilityThirdPartyOutput
	ToVulnerabilityThirdPartyOutputWithContext(ctx context.Context) VulnerabilityThirdPartyOutput
}

func (*VulnerabilityThirdParty) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityThirdParty)(nil)).Elem()
}

func (i *VulnerabilityThirdParty) ToVulnerabilityThirdPartyOutput() VulnerabilityThirdPartyOutput {
	return i.ToVulnerabilityThirdPartyOutputWithContext(context.Background())
}

func (i *VulnerabilityThirdParty) ToVulnerabilityThirdPartyOutputWithContext(ctx context.Context) VulnerabilityThirdPartyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityThirdPartyOutput)
}

// VulnerabilityThirdPartyArrayInput is an input type that accepts VulnerabilityThirdPartyArray and VulnerabilityThirdPartyArrayOutput values.
// You can construct a concrete instance of `VulnerabilityThirdPartyArrayInput` via:
//
//	VulnerabilityThirdPartyArray{ VulnerabilityThirdPartyArgs{...} }
type VulnerabilityThirdPartyArrayInput interface {
	pulumi.Input

	ToVulnerabilityThirdPartyArrayOutput() VulnerabilityThirdPartyArrayOutput
	ToVulnerabilityThirdPartyArrayOutputWithContext(context.Context) VulnerabilityThirdPartyArrayOutput
}

type VulnerabilityThirdPartyArray []VulnerabilityThirdPartyInput

func (VulnerabilityThirdPartyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VulnerabilityThirdParty)(nil)).Elem()
}

func (i VulnerabilityThirdPartyArray) ToVulnerabilityThirdPartyArrayOutput() VulnerabilityThirdPartyArrayOutput {
	return i.ToVulnerabilityThirdPartyArrayOutputWithContext(context.Background())
}

func (i VulnerabilityThirdPartyArray) ToVulnerabilityThirdPartyArrayOutputWithContext(ctx context.Context) VulnerabilityThirdPartyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityThirdPartyArrayOutput)
}

// VulnerabilityThirdPartyMapInput is an input type that accepts VulnerabilityThirdPartyMap and VulnerabilityThirdPartyMapOutput values.
// You can construct a concrete instance of `VulnerabilityThirdPartyMapInput` via:
//
//	VulnerabilityThirdPartyMap{ "key": VulnerabilityThirdPartyArgs{...} }
type VulnerabilityThirdPartyMapInput interface {
	pulumi.Input

	ToVulnerabilityThirdPartyMapOutput() VulnerabilityThirdPartyMapOutput
	ToVulnerabilityThirdPartyMapOutputWithContext(context.Context) VulnerabilityThirdPartyMapOutput
}

type VulnerabilityThirdPartyMap map[string]VulnerabilityThirdPartyInput

func (VulnerabilityThirdPartyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VulnerabilityThirdParty)(nil)).Elem()
}

func (i VulnerabilityThirdPartyMap) ToVulnerabilityThirdPartyMapOutput() VulnerabilityThirdPartyMapOutput {
	return i.ToVulnerabilityThirdPartyMapOutputWithContext(context.Background())
}

func (i VulnerabilityThirdPartyMap) ToVulnerabilityThirdPartyMapOutputWithContext(ctx context.Context) VulnerabilityThirdPartyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityThirdPartyMapOutput)
}

type VulnerabilityThirdPartyOutput struct{ *pulumi.OutputState }

func (VulnerabilityThirdPartyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityThirdParty)(nil)).Elem()
}

func (o VulnerabilityThirdPartyOutput) ToVulnerabilityThirdPartyOutput() VulnerabilityThirdPartyOutput {
	return o
}

func (o VulnerabilityThirdPartyOutput) ToVulnerabilityThirdPartyOutputWithContext(ctx context.Context) VulnerabilityThirdPartyOutput {
	return o
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VulnerabilityThirdPartyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *VulnerabilityThirdParty) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
func (o VulnerabilityThirdPartyOutput) InsertAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityThirdParty) pulumi.StringOutput { return v.InsertAfter }).(pulumi.StringOutput)
}

// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
func (o VulnerabilityThirdPartyOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityThirdParty) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

// Possible Values: `EQUALS`, `NOT_EQUALS`
func (o VulnerabilityThirdPartyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityThirdParty) pulumi.StringOutput { return v.Operator }).(pulumi.StringOutput)
}

// Possible Values: `HOST_TAG`, `MANAGEMENT_ZONE`, `PROCESS_TAG`
func (o VulnerabilityThirdPartyOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityThirdParty) pulumi.StringOutput { return v.Property }).(pulumi.StringOutput)
}

// Condition value
func (o VulnerabilityThirdPartyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *VulnerabilityThirdParty) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type VulnerabilityThirdPartyArrayOutput struct{ *pulumi.OutputState }

func (VulnerabilityThirdPartyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VulnerabilityThirdParty)(nil)).Elem()
}

func (o VulnerabilityThirdPartyArrayOutput) ToVulnerabilityThirdPartyArrayOutput() VulnerabilityThirdPartyArrayOutput {
	return o
}

func (o VulnerabilityThirdPartyArrayOutput) ToVulnerabilityThirdPartyArrayOutputWithContext(ctx context.Context) VulnerabilityThirdPartyArrayOutput {
	return o
}

func (o VulnerabilityThirdPartyArrayOutput) Index(i pulumi.IntInput) VulnerabilityThirdPartyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VulnerabilityThirdParty {
		return vs[0].([]*VulnerabilityThirdParty)[vs[1].(int)]
	}).(VulnerabilityThirdPartyOutput)
}

type VulnerabilityThirdPartyMapOutput struct{ *pulumi.OutputState }

func (VulnerabilityThirdPartyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VulnerabilityThirdParty)(nil)).Elem()
}

func (o VulnerabilityThirdPartyMapOutput) ToVulnerabilityThirdPartyMapOutput() VulnerabilityThirdPartyMapOutput {
	return o
}

func (o VulnerabilityThirdPartyMapOutput) ToVulnerabilityThirdPartyMapOutputWithContext(ctx context.Context) VulnerabilityThirdPartyMapOutput {
	return o
}

func (o VulnerabilityThirdPartyMapOutput) MapIndex(k pulumi.StringInput) VulnerabilityThirdPartyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VulnerabilityThirdParty {
		return vs[0].(map[string]*VulnerabilityThirdParty)[vs[1].(string)]
	}).(VulnerabilityThirdPartyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityThirdPartyInput)(nil)).Elem(), &VulnerabilityThirdParty{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityThirdPartyArrayInput)(nil)).Elem(), VulnerabilityThirdPartyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityThirdPartyMapInput)(nil)).Elem(), VulnerabilityThirdPartyMap{})
	pulumi.RegisterOutputType(VulnerabilityThirdPartyOutput{})
	pulumi.RegisterOutputType(VulnerabilityThirdPartyArrayOutput{})
	pulumi.RegisterOutputType(VulnerabilityThirdPartyMapOutput{})
}
