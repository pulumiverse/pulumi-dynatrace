// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The Alerting Profile queries for an Alerting Profile that has a specified name. In case multiple Alerting Profiles share the same name the first one found will be used.
// The ID of this Data Resource aligns with the IDs used by the Dynatrace Settings 2.0 API.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_default, err := dynatrace.LookupAlertingProfile(ctx, &dynatrace.LookupAlertingProfileArgs{
//				Name: "Default",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = dynatrace.NewWebhookNotification(ctx, "myWebhookNotification", &dynatrace.WebhookNotificationArgs{
//				Active:               pulumi.Bool(false),
//				Profile:              pulumi.String(_default.Id),
//				Url:                  pulumi.String("https://webhook.site/40bf4d43-1a50-4ebd-913d-bf50ce7c3a1e"),
//				Insecure:             pulumi.Bool(true),
//				NotifyEventMerges:    pulumi.Bool(true),
//				NotifyClosedProblems: pulumi.Bool(true),
//				Payload:              pulumi.String("web-hook-payload"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAlertingProfile(ctx *pulumi.Context, args *LookupAlertingProfileArgs, opts ...pulumi.InvokeOption) (*LookupAlertingProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAlertingProfileResult
	err := ctx.Invoke("dynatrace:index/getAlertingProfile:getAlertingProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlertingProfile.
type LookupAlertingProfileArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getAlertingProfile.
type LookupAlertingProfileResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	LegacyId string `pulumi:"legacyId"`
	Name     string `pulumi:"name"`
}

func LookupAlertingProfileOutput(ctx *pulumi.Context, args LookupAlertingProfileOutputArgs, opts ...pulumi.InvokeOption) LookupAlertingProfileResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAlertingProfileResultOutput, error) {
			args := v.(LookupAlertingProfileArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getAlertingProfile:getAlertingProfile", args, LookupAlertingProfileResultOutput{}, options).(LookupAlertingProfileResultOutput), nil
		}).(LookupAlertingProfileResultOutput)
}

// A collection of arguments for invoking getAlertingProfile.
type LookupAlertingProfileOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupAlertingProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlertingProfileArgs)(nil)).Elem()
}

// A collection of values returned by getAlertingProfile.
type LookupAlertingProfileResultOutput struct{ *pulumi.OutputState }

func (LookupAlertingProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlertingProfileResult)(nil)).Elem()
}

func (o LookupAlertingProfileResultOutput) ToLookupAlertingProfileResultOutput() LookupAlertingProfileResultOutput {
	return o
}

func (o LookupAlertingProfileResultOutput) ToLookupAlertingProfileResultOutputWithContext(ctx context.Context) LookupAlertingProfileResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAlertingProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertingProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAlertingProfileResultOutput) LegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertingProfileResult) string { return v.LegacyId }).(pulumi.StringOutput)
}

func (o LookupAlertingProfileResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertingProfileResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAlertingProfileResultOutput{})
}
