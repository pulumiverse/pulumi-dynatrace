// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type SloV2 struct {
	pulumi.CustomResourceState

	// The description of the SLO
	CustomDescription pulumi.StringPtrOutput `pulumi:"customDescription"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// ### Error budget burn rate
	ErrorBudgetBurnRate SloV2ErrorBudgetBurnRateOutput `pulumi:"errorBudgetBurnRate"`
	// Possible Values: `AGGREGATE`
	EvaluationType pulumi.StringOutput `pulumi:"evaluationType"`
	// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	EvaluationWindow pulumi.StringOutput `pulumi:"evaluationWindow"`
	// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
	Filter pulumi.StringOutput `pulumi:"filter"`
	// The ID of this setting when referred to by the Config REST API V1
	LegacyId pulumi.StringOutput `pulumi:"legacyId"`
	// For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
	MetricExpression pulumi.StringOutput `pulumi:"metricExpression"`
	// Metric name
	MetricName pulumi.StringOutput `pulumi:"metricName"`
	// SLO name
	Name pulumi.StringOutput `pulumi:"name"`
	// Set the target value of the SLO. A percentage below this value indicates a failure.
	TargetSuccess pulumi.Float64Output `pulumi:"targetSuccess"`
	// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	TargetWarning pulumi.Float64Output `pulumi:"targetWarning"`
}

// NewSloV2 registers a new resource with the given unique name, arguments, and options.
func NewSloV2(ctx *pulumi.Context,
	name string, args *SloV2Args, opts ...pulumi.ResourceOption) (*SloV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.ErrorBudgetBurnRate == nil {
		return nil, errors.New("invalid value for required argument 'ErrorBudgetBurnRate'")
	}
	if args.EvaluationType == nil {
		return nil, errors.New("invalid value for required argument 'EvaluationType'")
	}
	if args.EvaluationWindow == nil {
		return nil, errors.New("invalid value for required argument 'EvaluationWindow'")
	}
	if args.Filter == nil {
		return nil, errors.New("invalid value for required argument 'Filter'")
	}
	if args.MetricExpression == nil {
		return nil, errors.New("invalid value for required argument 'MetricExpression'")
	}
	if args.TargetSuccess == nil {
		return nil, errors.New("invalid value for required argument 'TargetSuccess'")
	}
	if args.TargetWarning == nil {
		return nil, errors.New("invalid value for required argument 'TargetWarning'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SloV2
	err := ctx.RegisterResource("dynatrace:index/sloV2:SloV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSloV2 gets an existing SloV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSloV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SloV2State, opts ...pulumi.ResourceOption) (*SloV2, error) {
	var resource SloV2
	err := ctx.ReadResource("dynatrace:index/sloV2:SloV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SloV2 resources.
type sloV2State struct {
	// The description of the SLO
	CustomDescription *string `pulumi:"customDescription"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// ### Error budget burn rate
	ErrorBudgetBurnRate *SloV2ErrorBudgetBurnRate `pulumi:"errorBudgetBurnRate"`
	// Possible Values: `AGGREGATE`
	EvaluationType *string `pulumi:"evaluationType"`
	// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	EvaluationWindow *string `pulumi:"evaluationWindow"`
	// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
	Filter *string `pulumi:"filter"`
	// The ID of this setting when referred to by the Config REST API V1
	LegacyId *string `pulumi:"legacyId"`
	// For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
	MetricExpression *string `pulumi:"metricExpression"`
	// Metric name
	MetricName *string `pulumi:"metricName"`
	// SLO name
	Name *string `pulumi:"name"`
	// Set the target value of the SLO. A percentage below this value indicates a failure.
	TargetSuccess *float64 `pulumi:"targetSuccess"`
	// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	TargetWarning *float64 `pulumi:"targetWarning"`
}

type SloV2State struct {
	// The description of the SLO
	CustomDescription pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// ### Error budget burn rate
	ErrorBudgetBurnRate SloV2ErrorBudgetBurnRatePtrInput
	// Possible Values: `AGGREGATE`
	EvaluationType pulumi.StringPtrInput
	// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	EvaluationWindow pulumi.StringPtrInput
	// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
	Filter pulumi.StringPtrInput
	// The ID of this setting when referred to by the Config REST API V1
	LegacyId pulumi.StringPtrInput
	// For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
	MetricExpression pulumi.StringPtrInput
	// Metric name
	MetricName pulumi.StringPtrInput
	// SLO name
	Name pulumi.StringPtrInput
	// Set the target value of the SLO. A percentage below this value indicates a failure.
	TargetSuccess pulumi.Float64PtrInput
	// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	TargetWarning pulumi.Float64PtrInput
}

func (SloV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*sloV2State)(nil)).Elem()
}

type sloV2Args struct {
	// The description of the SLO
	CustomDescription *string `pulumi:"customDescription"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// ### Error budget burn rate
	ErrorBudgetBurnRate SloV2ErrorBudgetBurnRate `pulumi:"errorBudgetBurnRate"`
	// Possible Values: `AGGREGATE`
	EvaluationType string `pulumi:"evaluationType"`
	// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	EvaluationWindow string `pulumi:"evaluationWindow"`
	// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
	Filter string `pulumi:"filter"`
	// The ID of this setting when referred to by the Config REST API V1
	LegacyId *string `pulumi:"legacyId"`
	// For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
	MetricExpression string `pulumi:"metricExpression"`
	// Metric name
	MetricName *string `pulumi:"metricName"`
	// SLO name
	Name *string `pulumi:"name"`
	// Set the target value of the SLO. A percentage below this value indicates a failure.
	TargetSuccess float64 `pulumi:"targetSuccess"`
	// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	TargetWarning float64 `pulumi:"targetWarning"`
}

// The set of arguments for constructing a SloV2 resource.
type SloV2Args struct {
	// The description of the SLO
	CustomDescription pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// ### Error budget burn rate
	ErrorBudgetBurnRate SloV2ErrorBudgetBurnRateInput
	// Possible Values: `AGGREGATE`
	EvaluationType pulumi.StringInput
	// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
	EvaluationWindow pulumi.StringInput
	// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
	Filter pulumi.StringInput
	// The ID of this setting when referred to by the Config REST API V1
	LegacyId pulumi.StringPtrInput
	// For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
	MetricExpression pulumi.StringInput
	// Metric name
	MetricName pulumi.StringPtrInput
	// SLO name
	Name pulumi.StringPtrInput
	// Set the target value of the SLO. A percentage below this value indicates a failure.
	TargetSuccess pulumi.Float64Input
	// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
	TargetWarning pulumi.Float64Input
}

func (SloV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*sloV2Args)(nil)).Elem()
}

type SloV2Input interface {
	pulumi.Input

	ToSloV2Output() SloV2Output
	ToSloV2OutputWithContext(ctx context.Context) SloV2Output
}

func (*SloV2) ElementType() reflect.Type {
	return reflect.TypeOf((**SloV2)(nil)).Elem()
}

func (i *SloV2) ToSloV2Output() SloV2Output {
	return i.ToSloV2OutputWithContext(context.Background())
}

func (i *SloV2) ToSloV2OutputWithContext(ctx context.Context) SloV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(SloV2Output)
}

// SloV2ArrayInput is an input type that accepts SloV2Array and SloV2ArrayOutput values.
// You can construct a concrete instance of `SloV2ArrayInput` via:
//
//	SloV2Array{ SloV2Args{...} }
type SloV2ArrayInput interface {
	pulumi.Input

	ToSloV2ArrayOutput() SloV2ArrayOutput
	ToSloV2ArrayOutputWithContext(context.Context) SloV2ArrayOutput
}

type SloV2Array []SloV2Input

func (SloV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SloV2)(nil)).Elem()
}

func (i SloV2Array) ToSloV2ArrayOutput() SloV2ArrayOutput {
	return i.ToSloV2ArrayOutputWithContext(context.Background())
}

func (i SloV2Array) ToSloV2ArrayOutputWithContext(ctx context.Context) SloV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloV2ArrayOutput)
}

// SloV2MapInput is an input type that accepts SloV2Map and SloV2MapOutput values.
// You can construct a concrete instance of `SloV2MapInput` via:
//
//	SloV2Map{ "key": SloV2Args{...} }
type SloV2MapInput interface {
	pulumi.Input

	ToSloV2MapOutput() SloV2MapOutput
	ToSloV2MapOutputWithContext(context.Context) SloV2MapOutput
}

type SloV2Map map[string]SloV2Input

func (SloV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SloV2)(nil)).Elem()
}

func (i SloV2Map) ToSloV2MapOutput() SloV2MapOutput {
	return i.ToSloV2MapOutputWithContext(context.Background())
}

func (i SloV2Map) ToSloV2MapOutputWithContext(ctx context.Context) SloV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloV2MapOutput)
}

type SloV2Output struct{ *pulumi.OutputState }

func (SloV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**SloV2)(nil)).Elem()
}

func (o SloV2Output) ToSloV2Output() SloV2Output {
	return o
}

func (o SloV2Output) ToSloV2OutputWithContext(ctx context.Context) SloV2Output {
	return o
}

// The description of the SLO
func (o SloV2Output) CustomDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloV2) pulumi.StringPtrOutput { return v.CustomDescription }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o SloV2Output) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *SloV2) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// ### Error budget burn rate
func (o SloV2Output) ErrorBudgetBurnRate() SloV2ErrorBudgetBurnRateOutput {
	return o.ApplyT(func(v *SloV2) SloV2ErrorBudgetBurnRateOutput { return v.ErrorBudgetBurnRate }).(SloV2ErrorBudgetBurnRateOutput)
}

// Possible Values: `AGGREGATE`
func (o SloV2Output) EvaluationType() pulumi.StringOutput {
	return o.ApplyT(func(v *SloV2) pulumi.StringOutput { return v.EvaluationType }).(pulumi.StringOutput)
}

// Define the timeframe during which the SLO is to be evaluated. For the timeframe you can enter expressions like -1h (last hour), -1w (last week) or complex expressions like -2d to now (last two days), -1d/d to now/d (beginning of yesterday to beginning of today).
func (o SloV2Output) EvaluationWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *SloV2) pulumi.StringOutput { return v.EvaluationWindow }).(pulumi.StringOutput)
}

// Set a filter parameter (entitySelector) on any GET call to evaluate this SLO against specific services only (for example, type("SERVICE")).  For details, see the [Entity Selector documentation](https://dt-url.net/entityselector).
func (o SloV2Output) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *SloV2) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

// The ID of this setting when referred to by the Config REST API V1
func (o SloV2Output) LegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v *SloV2) pulumi.StringOutput { return v.LegacyId }).(pulumi.StringOutput)
}

// For details, see the [Metrics page](https://www.terraform.io/ui/metrics).
func (o SloV2Output) MetricExpression() pulumi.StringOutput {
	return o.ApplyT(func(v *SloV2) pulumi.StringOutput { return v.MetricExpression }).(pulumi.StringOutput)
}

// Metric name
func (o SloV2Output) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v *SloV2) pulumi.StringOutput { return v.MetricName }).(pulumi.StringOutput)
}

// SLO name
func (o SloV2Output) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SloV2) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Set the target value of the SLO. A percentage below this value indicates a failure.
func (o SloV2Output) TargetSuccess() pulumi.Float64Output {
	return o.ApplyT(func(v *SloV2) pulumi.Float64Output { return v.TargetSuccess }).(pulumi.Float64Output)
}

// Set the warning value of the SLO. At the warning state the SLO is fulfilled. However, it is getting close to a failure.
func (o SloV2Output) TargetWarning() pulumi.Float64Output {
	return o.ApplyT(func(v *SloV2) pulumi.Float64Output { return v.TargetWarning }).(pulumi.Float64Output)
}

type SloV2ArrayOutput struct{ *pulumi.OutputState }

func (SloV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SloV2)(nil)).Elem()
}

func (o SloV2ArrayOutput) ToSloV2ArrayOutput() SloV2ArrayOutput {
	return o
}

func (o SloV2ArrayOutput) ToSloV2ArrayOutputWithContext(ctx context.Context) SloV2ArrayOutput {
	return o
}

func (o SloV2ArrayOutput) Index(i pulumi.IntInput) SloV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SloV2 {
		return vs[0].([]*SloV2)[vs[1].(int)]
	}).(SloV2Output)
}

type SloV2MapOutput struct{ *pulumi.OutputState }

func (SloV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SloV2)(nil)).Elem()
}

func (o SloV2MapOutput) ToSloV2MapOutput() SloV2MapOutput {
	return o
}

func (o SloV2MapOutput) ToSloV2MapOutputWithContext(ctx context.Context) SloV2MapOutput {
	return o
}

func (o SloV2MapOutput) MapIndex(k pulumi.StringInput) SloV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SloV2 {
		return vs[0].(map[string]*SloV2)[vs[1].(string)]
	}).(SloV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SloV2Input)(nil)).Elem(), &SloV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloV2ArrayInput)(nil)).Elem(), SloV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloV2MapInput)(nil)).Elem(), SloV2Map{})
	pulumi.RegisterOutputType(SloV2Output{})
	pulumi.RegisterOutputType(SloV2ArrayOutput{})
	pulumi.RegisterOutputType(SloV2MapOutput{})
}
