// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OpenpipelineV2SecurityEventsRouting struct {
	pulumi.CustomResourceState

	// Routing for pipelines
	RoutingEntries OpenpipelineV2SecurityEventsRoutingRoutingEntriesPtrOutput `pulumi:"routingEntries"`
}

// NewOpenpipelineV2SecurityEventsRouting registers a new resource with the given unique name, arguments, and options.
func NewOpenpipelineV2SecurityEventsRouting(ctx *pulumi.Context,
	name string, args *OpenpipelineV2SecurityEventsRoutingArgs, opts ...pulumi.ResourceOption) (*OpenpipelineV2SecurityEventsRouting, error) {
	if args == nil {
		args = &OpenpipelineV2SecurityEventsRoutingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenpipelineV2SecurityEventsRouting
	err := ctx.RegisterResource("dynatrace:index/openpipelineV2SecurityEventsRouting:OpenpipelineV2SecurityEventsRouting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenpipelineV2SecurityEventsRouting gets an existing OpenpipelineV2SecurityEventsRouting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenpipelineV2SecurityEventsRouting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenpipelineV2SecurityEventsRoutingState, opts ...pulumi.ResourceOption) (*OpenpipelineV2SecurityEventsRouting, error) {
	var resource OpenpipelineV2SecurityEventsRouting
	err := ctx.ReadResource("dynatrace:index/openpipelineV2SecurityEventsRouting:OpenpipelineV2SecurityEventsRouting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenpipelineV2SecurityEventsRouting resources.
type openpipelineV2SecurityEventsRoutingState struct {
	// Routing for pipelines
	RoutingEntries *OpenpipelineV2SecurityEventsRoutingRoutingEntries `pulumi:"routingEntries"`
}

type OpenpipelineV2SecurityEventsRoutingState struct {
	// Routing for pipelines
	RoutingEntries OpenpipelineV2SecurityEventsRoutingRoutingEntriesPtrInput
}

func (OpenpipelineV2SecurityEventsRoutingState) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2SecurityEventsRoutingState)(nil)).Elem()
}

type openpipelineV2SecurityEventsRoutingArgs struct {
	// Routing for pipelines
	RoutingEntries *OpenpipelineV2SecurityEventsRoutingRoutingEntries `pulumi:"routingEntries"`
}

// The set of arguments for constructing a OpenpipelineV2SecurityEventsRouting resource.
type OpenpipelineV2SecurityEventsRoutingArgs struct {
	// Routing for pipelines
	RoutingEntries OpenpipelineV2SecurityEventsRoutingRoutingEntriesPtrInput
}

func (OpenpipelineV2SecurityEventsRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2SecurityEventsRoutingArgs)(nil)).Elem()
}

type OpenpipelineV2SecurityEventsRoutingInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsRoutingOutput() OpenpipelineV2SecurityEventsRoutingOutput
	ToOpenpipelineV2SecurityEventsRoutingOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsRoutingOutput
}

func (*OpenpipelineV2SecurityEventsRouting) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2SecurityEventsRouting)(nil)).Elem()
}

func (i *OpenpipelineV2SecurityEventsRouting) ToOpenpipelineV2SecurityEventsRoutingOutput() OpenpipelineV2SecurityEventsRoutingOutput {
	return i.ToOpenpipelineV2SecurityEventsRoutingOutputWithContext(context.Background())
}

func (i *OpenpipelineV2SecurityEventsRouting) ToOpenpipelineV2SecurityEventsRoutingOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsRoutingOutput)
}

// OpenpipelineV2SecurityEventsRoutingArrayInput is an input type that accepts OpenpipelineV2SecurityEventsRoutingArray and OpenpipelineV2SecurityEventsRoutingArrayOutput values.
// You can construct a concrete instance of `OpenpipelineV2SecurityEventsRoutingArrayInput` via:
//
//	OpenpipelineV2SecurityEventsRoutingArray{ OpenpipelineV2SecurityEventsRoutingArgs{...} }
type OpenpipelineV2SecurityEventsRoutingArrayInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsRoutingArrayOutput() OpenpipelineV2SecurityEventsRoutingArrayOutput
	ToOpenpipelineV2SecurityEventsRoutingArrayOutputWithContext(context.Context) OpenpipelineV2SecurityEventsRoutingArrayOutput
}

type OpenpipelineV2SecurityEventsRoutingArray []OpenpipelineV2SecurityEventsRoutingInput

func (OpenpipelineV2SecurityEventsRoutingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2SecurityEventsRouting)(nil)).Elem()
}

func (i OpenpipelineV2SecurityEventsRoutingArray) ToOpenpipelineV2SecurityEventsRoutingArrayOutput() OpenpipelineV2SecurityEventsRoutingArrayOutput {
	return i.ToOpenpipelineV2SecurityEventsRoutingArrayOutputWithContext(context.Background())
}

func (i OpenpipelineV2SecurityEventsRoutingArray) ToOpenpipelineV2SecurityEventsRoutingArrayOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsRoutingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsRoutingArrayOutput)
}

// OpenpipelineV2SecurityEventsRoutingMapInput is an input type that accepts OpenpipelineV2SecurityEventsRoutingMap and OpenpipelineV2SecurityEventsRoutingMapOutput values.
// You can construct a concrete instance of `OpenpipelineV2SecurityEventsRoutingMapInput` via:
//
//	OpenpipelineV2SecurityEventsRoutingMap{ "key": OpenpipelineV2SecurityEventsRoutingArgs{...} }
type OpenpipelineV2SecurityEventsRoutingMapInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsRoutingMapOutput() OpenpipelineV2SecurityEventsRoutingMapOutput
	ToOpenpipelineV2SecurityEventsRoutingMapOutputWithContext(context.Context) OpenpipelineV2SecurityEventsRoutingMapOutput
}

type OpenpipelineV2SecurityEventsRoutingMap map[string]OpenpipelineV2SecurityEventsRoutingInput

func (OpenpipelineV2SecurityEventsRoutingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2SecurityEventsRouting)(nil)).Elem()
}

func (i OpenpipelineV2SecurityEventsRoutingMap) ToOpenpipelineV2SecurityEventsRoutingMapOutput() OpenpipelineV2SecurityEventsRoutingMapOutput {
	return i.ToOpenpipelineV2SecurityEventsRoutingMapOutputWithContext(context.Background())
}

func (i OpenpipelineV2SecurityEventsRoutingMap) ToOpenpipelineV2SecurityEventsRoutingMapOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsRoutingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsRoutingMapOutput)
}

type OpenpipelineV2SecurityEventsRoutingOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2SecurityEventsRouting)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsRoutingOutput) ToOpenpipelineV2SecurityEventsRoutingOutput() OpenpipelineV2SecurityEventsRoutingOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsRoutingOutput) ToOpenpipelineV2SecurityEventsRoutingOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsRoutingOutput {
	return o
}

// Routing for pipelines
func (o OpenpipelineV2SecurityEventsRoutingOutput) RoutingEntries() OpenpipelineV2SecurityEventsRoutingRoutingEntriesPtrOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsRouting) OpenpipelineV2SecurityEventsRoutingRoutingEntriesPtrOutput {
		return v.RoutingEntries
	}).(OpenpipelineV2SecurityEventsRoutingRoutingEntriesPtrOutput)
}

type OpenpipelineV2SecurityEventsRoutingArrayOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsRoutingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2SecurityEventsRouting)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsRoutingArrayOutput) ToOpenpipelineV2SecurityEventsRoutingArrayOutput() OpenpipelineV2SecurityEventsRoutingArrayOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsRoutingArrayOutput) ToOpenpipelineV2SecurityEventsRoutingArrayOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsRoutingArrayOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsRoutingArrayOutput) Index(i pulumi.IntInput) OpenpipelineV2SecurityEventsRoutingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenpipelineV2SecurityEventsRouting {
		return vs[0].([]*OpenpipelineV2SecurityEventsRouting)[vs[1].(int)]
	}).(OpenpipelineV2SecurityEventsRoutingOutput)
}

type OpenpipelineV2SecurityEventsRoutingMapOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsRoutingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2SecurityEventsRouting)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsRoutingMapOutput) ToOpenpipelineV2SecurityEventsRoutingMapOutput() OpenpipelineV2SecurityEventsRoutingMapOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsRoutingMapOutput) ToOpenpipelineV2SecurityEventsRoutingMapOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsRoutingMapOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsRoutingMapOutput) MapIndex(k pulumi.StringInput) OpenpipelineV2SecurityEventsRoutingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenpipelineV2SecurityEventsRouting {
		return vs[0].(map[string]*OpenpipelineV2SecurityEventsRouting)[vs[1].(string)]
	}).(OpenpipelineV2SecurityEventsRoutingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsRoutingInput)(nil)).Elem(), &OpenpipelineV2SecurityEventsRouting{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsRoutingArrayInput)(nil)).Elem(), OpenpipelineV2SecurityEventsRoutingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsRoutingMapInput)(nil)).Elem(), OpenpipelineV2SecurityEventsRoutingMap{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsRoutingOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsRoutingArrayOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsRoutingMapOutput{})
}
