// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type WebApplication struct {
	pulumi.CustomResourceState

	// A list of conversion goals of the application
	ConversionGoals WebApplicationConversionGoalsPtrOutput `pulumi:"conversionGoals"`
	// (Field has overlap with `WebAppEnablement`) Analize *X*% of user sessions
	CostControlUserSessionPercentage pulumi.IntOutput `pulumi:"costControlUserSessionPercentage"`
	// Defines the Custom Action Apdex settings of an application
	CustomActionApdexSettings WebApplicationCustomActionApdexSettingsOutput `pulumi:"customActionApdexSettings"`
	// User Action names to be flagged as Key User Actions
	//
	// Deprecated: Configuring Key User Actions within `WebApplication` is discouraged. Use the dedicated resource `KeyUserAction` instead.
	KeyUserActions WebApplicationKeyUserActionArrayOutput `pulumi:"keyUserActions"`
	// Defines the Load Action Apdex settings of an application
	LoadActionApdexSettings WebApplicationLoadActionApdexSettingsOutput `pulumi:"loadActionApdexSettings"`
	// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
	LoadActionKeyPerformanceMetric pulumi.StringOutput `pulumi:"loadActionKeyPerformanceMetric"`
	// Java script agent meta data capture settings
	MetaDataCaptureSettings WebApplicationMetaDataCaptureSettingsPtrOutput `pulumi:"metaDataCaptureSettings"`
	// Real user monitoring settings
	MonitoringSettings WebApplicationMonitoringSettingsOutput `pulumi:"monitoringSettings"`
	// The name of the web application, displayed in the UI
	Name pulumi.StringOutput `pulumi:"name"`
	// (Field has overlap with `WebAppEnablement`) Real user monitoring enabled/disabled
	RealUserMonitoringEnabled pulumi.BoolPtrOutput `pulumi:"realUserMonitoringEnabled"`
	// Settings regarding Session Replay
	SessionReplayConfig WebApplicationSessionReplayConfigOutput `pulumi:"sessionReplayConfig"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type pulumi.StringOutput `pulumi:"type"`
	// URL injection pattern for manual web application
	UrlInjectionPattern pulumi.StringPtrOutput `pulumi:"urlInjectionPattern"`
	// User action and session properties settings
	UserActionAndSessionProperties WebApplicationUserActionAndSessionPropertiesPtrOutput `pulumi:"userActionAndSessionProperties"`
	// The settings of user action naming
	UserActionNamingSettings WebApplicationUserActionNamingSettingsPtrOutput `pulumi:"userActionNamingSettings"`
	// User tags settings
	UserTags WebApplicationUserTagsPtrOutput `pulumi:"userTags"`
	// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
	WaterfallSettings WebApplicationWaterfallSettingsOutput `pulumi:"waterfallSettings"`
	// Defines the XHR Action Apdex settings of an application
	XhrActionApdexSettings WebApplicationXhrActionApdexSettingsOutput `pulumi:"xhrActionApdexSettings"`
	// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
	XhrActionKeyPerformanceMetric pulumi.StringOutput `pulumi:"xhrActionKeyPerformanceMetric"`
}

// NewWebApplication registers a new resource with the given unique name, arguments, and options.
func NewWebApplication(ctx *pulumi.Context,
	name string, args *WebApplicationArgs, opts ...pulumi.ResourceOption) (*WebApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CostControlUserSessionPercentage == nil {
		return nil, errors.New("invalid value for required argument 'CostControlUserSessionPercentage'")
	}
	if args.CustomActionApdexSettings == nil {
		return nil, errors.New("invalid value for required argument 'CustomActionApdexSettings'")
	}
	if args.LoadActionApdexSettings == nil {
		return nil, errors.New("invalid value for required argument 'LoadActionApdexSettings'")
	}
	if args.LoadActionKeyPerformanceMetric == nil {
		return nil, errors.New("invalid value for required argument 'LoadActionKeyPerformanceMetric'")
	}
	if args.MonitoringSettings == nil {
		return nil, errors.New("invalid value for required argument 'MonitoringSettings'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.WaterfallSettings == nil {
		return nil, errors.New("invalid value for required argument 'WaterfallSettings'")
	}
	if args.XhrActionApdexSettings == nil {
		return nil, errors.New("invalid value for required argument 'XhrActionApdexSettings'")
	}
	if args.XhrActionKeyPerformanceMetric == nil {
		return nil, errors.New("invalid value for required argument 'XhrActionKeyPerformanceMetric'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebApplication
	err := ctx.RegisterResource("dynatrace:index/webApplication:WebApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebApplication gets an existing WebApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebApplicationState, opts ...pulumi.ResourceOption) (*WebApplication, error) {
	var resource WebApplication
	err := ctx.ReadResource("dynatrace:index/webApplication:WebApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebApplication resources.
type webApplicationState struct {
	// A list of conversion goals of the application
	ConversionGoals *WebApplicationConversionGoals `pulumi:"conversionGoals"`
	// (Field has overlap with `WebAppEnablement`) Analize *X*% of user sessions
	CostControlUserSessionPercentage *int `pulumi:"costControlUserSessionPercentage"`
	// Defines the Custom Action Apdex settings of an application
	CustomActionApdexSettings *WebApplicationCustomActionApdexSettings `pulumi:"customActionApdexSettings"`
	// User Action names to be flagged as Key User Actions
	//
	// Deprecated: Configuring Key User Actions within `WebApplication` is discouraged. Use the dedicated resource `KeyUserAction` instead.
	KeyUserActions []WebApplicationKeyUserAction `pulumi:"keyUserActions"`
	// Defines the Load Action Apdex settings of an application
	LoadActionApdexSettings *WebApplicationLoadActionApdexSettings `pulumi:"loadActionApdexSettings"`
	// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
	LoadActionKeyPerformanceMetric *string `pulumi:"loadActionKeyPerformanceMetric"`
	// Java script agent meta data capture settings
	MetaDataCaptureSettings *WebApplicationMetaDataCaptureSettings `pulumi:"metaDataCaptureSettings"`
	// Real user monitoring settings
	MonitoringSettings *WebApplicationMonitoringSettings `pulumi:"monitoringSettings"`
	// The name of the web application, displayed in the UI
	Name *string `pulumi:"name"`
	// (Field has overlap with `WebAppEnablement`) Real user monitoring enabled/disabled
	RealUserMonitoringEnabled *bool `pulumi:"realUserMonitoringEnabled"`
	// Settings regarding Session Replay
	SessionReplayConfig *WebApplicationSessionReplayConfig `pulumi:"sessionReplayConfig"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type *string `pulumi:"type"`
	// URL injection pattern for manual web application
	UrlInjectionPattern *string `pulumi:"urlInjectionPattern"`
	// User action and session properties settings
	UserActionAndSessionProperties *WebApplicationUserActionAndSessionProperties `pulumi:"userActionAndSessionProperties"`
	// The settings of user action naming
	UserActionNamingSettings *WebApplicationUserActionNamingSettings `pulumi:"userActionNamingSettings"`
	// User tags settings
	UserTags *WebApplicationUserTags `pulumi:"userTags"`
	// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
	WaterfallSettings *WebApplicationWaterfallSettings `pulumi:"waterfallSettings"`
	// Defines the XHR Action Apdex settings of an application
	XhrActionApdexSettings *WebApplicationXhrActionApdexSettings `pulumi:"xhrActionApdexSettings"`
	// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
	XhrActionKeyPerformanceMetric *string `pulumi:"xhrActionKeyPerformanceMetric"`
}

type WebApplicationState struct {
	// A list of conversion goals of the application
	ConversionGoals WebApplicationConversionGoalsPtrInput
	// (Field has overlap with `WebAppEnablement`) Analize *X*% of user sessions
	CostControlUserSessionPercentage pulumi.IntPtrInput
	// Defines the Custom Action Apdex settings of an application
	CustomActionApdexSettings WebApplicationCustomActionApdexSettingsPtrInput
	// User Action names to be flagged as Key User Actions
	//
	// Deprecated: Configuring Key User Actions within `WebApplication` is discouraged. Use the dedicated resource `KeyUserAction` instead.
	KeyUserActions WebApplicationKeyUserActionArrayInput
	// Defines the Load Action Apdex settings of an application
	LoadActionApdexSettings WebApplicationLoadActionApdexSettingsPtrInput
	// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
	LoadActionKeyPerformanceMetric pulumi.StringPtrInput
	// Java script agent meta data capture settings
	MetaDataCaptureSettings WebApplicationMetaDataCaptureSettingsPtrInput
	// Real user monitoring settings
	MonitoringSettings WebApplicationMonitoringSettingsPtrInput
	// The name of the web application, displayed in the UI
	Name pulumi.StringPtrInput
	// (Field has overlap with `WebAppEnablement`) Real user monitoring enabled/disabled
	RealUserMonitoringEnabled pulumi.BoolPtrInput
	// Settings regarding Session Replay
	SessionReplayConfig WebApplicationSessionReplayConfigPtrInput
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type pulumi.StringPtrInput
	// URL injection pattern for manual web application
	UrlInjectionPattern pulumi.StringPtrInput
	// User action and session properties settings
	UserActionAndSessionProperties WebApplicationUserActionAndSessionPropertiesPtrInput
	// The settings of user action naming
	UserActionNamingSettings WebApplicationUserActionNamingSettingsPtrInput
	// User tags settings
	UserTags WebApplicationUserTagsPtrInput
	// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
	WaterfallSettings WebApplicationWaterfallSettingsPtrInput
	// Defines the XHR Action Apdex settings of an application
	XhrActionApdexSettings WebApplicationXhrActionApdexSettingsPtrInput
	// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
	XhrActionKeyPerformanceMetric pulumi.StringPtrInput
}

func (WebApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*webApplicationState)(nil)).Elem()
}

type webApplicationArgs struct {
	// A list of conversion goals of the application
	ConversionGoals *WebApplicationConversionGoals `pulumi:"conversionGoals"`
	// (Field has overlap with `WebAppEnablement`) Analize *X*% of user sessions
	CostControlUserSessionPercentage int `pulumi:"costControlUserSessionPercentage"`
	// Defines the Custom Action Apdex settings of an application
	CustomActionApdexSettings WebApplicationCustomActionApdexSettings `pulumi:"customActionApdexSettings"`
	// User Action names to be flagged as Key User Actions
	//
	// Deprecated: Configuring Key User Actions within `WebApplication` is discouraged. Use the dedicated resource `KeyUserAction` instead.
	KeyUserActions []WebApplicationKeyUserAction `pulumi:"keyUserActions"`
	// Defines the Load Action Apdex settings of an application
	LoadActionApdexSettings WebApplicationLoadActionApdexSettings `pulumi:"loadActionApdexSettings"`
	// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
	LoadActionKeyPerformanceMetric string `pulumi:"loadActionKeyPerformanceMetric"`
	// Java script agent meta data capture settings
	MetaDataCaptureSettings *WebApplicationMetaDataCaptureSettings `pulumi:"metaDataCaptureSettings"`
	// Real user monitoring settings
	MonitoringSettings WebApplicationMonitoringSettings `pulumi:"monitoringSettings"`
	// The name of the web application, displayed in the UI
	Name *string `pulumi:"name"`
	// (Field has overlap with `WebAppEnablement`) Real user monitoring enabled/disabled
	RealUserMonitoringEnabled *bool `pulumi:"realUserMonitoringEnabled"`
	// Settings regarding Session Replay
	SessionReplayConfig *WebApplicationSessionReplayConfig `pulumi:"sessionReplayConfig"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type string `pulumi:"type"`
	// URL injection pattern for manual web application
	UrlInjectionPattern *string `pulumi:"urlInjectionPattern"`
	// User action and session properties settings
	UserActionAndSessionProperties *WebApplicationUserActionAndSessionProperties `pulumi:"userActionAndSessionProperties"`
	// The settings of user action naming
	UserActionNamingSettings *WebApplicationUserActionNamingSettings `pulumi:"userActionNamingSettings"`
	// User tags settings
	UserTags *WebApplicationUserTags `pulumi:"userTags"`
	// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
	WaterfallSettings WebApplicationWaterfallSettings `pulumi:"waterfallSettings"`
	// Defines the XHR Action Apdex settings of an application
	XhrActionApdexSettings WebApplicationXhrActionApdexSettings `pulumi:"xhrActionApdexSettings"`
	// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
	XhrActionKeyPerformanceMetric string `pulumi:"xhrActionKeyPerformanceMetric"`
}

// The set of arguments for constructing a WebApplication resource.
type WebApplicationArgs struct {
	// A list of conversion goals of the application
	ConversionGoals WebApplicationConversionGoalsPtrInput
	// (Field has overlap with `WebAppEnablement`) Analize *X*% of user sessions
	CostControlUserSessionPercentage pulumi.IntInput
	// Defines the Custom Action Apdex settings of an application
	CustomActionApdexSettings WebApplicationCustomActionApdexSettingsInput
	// User Action names to be flagged as Key User Actions
	//
	// Deprecated: Configuring Key User Actions within `WebApplication` is discouraged. Use the dedicated resource `KeyUserAction` instead.
	KeyUserActions WebApplicationKeyUserActionArrayInput
	// Defines the Load Action Apdex settings of an application
	LoadActionApdexSettings WebApplicationLoadActionApdexSettingsInput
	// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
	LoadActionKeyPerformanceMetric pulumi.StringInput
	// Java script agent meta data capture settings
	MetaDataCaptureSettings WebApplicationMetaDataCaptureSettingsPtrInput
	// Real user monitoring settings
	MonitoringSettings WebApplicationMonitoringSettingsInput
	// The name of the web application, displayed in the UI
	Name pulumi.StringPtrInput
	// (Field has overlap with `WebAppEnablement`) Real user monitoring enabled/disabled
	RealUserMonitoringEnabled pulumi.BoolPtrInput
	// Settings regarding Session Replay
	SessionReplayConfig WebApplicationSessionReplayConfigPtrInput
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type pulumi.StringInput
	// URL injection pattern for manual web application
	UrlInjectionPattern pulumi.StringPtrInput
	// User action and session properties settings
	UserActionAndSessionProperties WebApplicationUserActionAndSessionPropertiesPtrInput
	// The settings of user action naming
	UserActionNamingSettings WebApplicationUserActionNamingSettingsPtrInput
	// User tags settings
	UserTags WebApplicationUserTagsPtrInput
	// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
	WaterfallSettings WebApplicationWaterfallSettingsInput
	// Defines the XHR Action Apdex settings of an application
	XhrActionApdexSettings WebApplicationXhrActionApdexSettingsInput
	// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
	XhrActionKeyPerformanceMetric pulumi.StringInput
}

func (WebApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webApplicationArgs)(nil)).Elem()
}

type WebApplicationInput interface {
	pulumi.Input

	ToWebApplicationOutput() WebApplicationOutput
	ToWebApplicationOutputWithContext(ctx context.Context) WebApplicationOutput
}

func (*WebApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplication)(nil)).Elem()
}

func (i *WebApplication) ToWebApplicationOutput() WebApplicationOutput {
	return i.ToWebApplicationOutputWithContext(context.Background())
}

func (i *WebApplication) ToWebApplicationOutputWithContext(ctx context.Context) WebApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationOutput)
}

// WebApplicationArrayInput is an input type that accepts WebApplicationArray and WebApplicationArrayOutput values.
// You can construct a concrete instance of `WebApplicationArrayInput` via:
//
//	WebApplicationArray{ WebApplicationArgs{...} }
type WebApplicationArrayInput interface {
	pulumi.Input

	ToWebApplicationArrayOutput() WebApplicationArrayOutput
	ToWebApplicationArrayOutputWithContext(context.Context) WebApplicationArrayOutput
}

type WebApplicationArray []WebApplicationInput

func (WebApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebApplication)(nil)).Elem()
}

func (i WebApplicationArray) ToWebApplicationArrayOutput() WebApplicationArrayOutput {
	return i.ToWebApplicationArrayOutputWithContext(context.Background())
}

func (i WebApplicationArray) ToWebApplicationArrayOutputWithContext(ctx context.Context) WebApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationArrayOutput)
}

// WebApplicationMapInput is an input type that accepts WebApplicationMap and WebApplicationMapOutput values.
// You can construct a concrete instance of `WebApplicationMapInput` via:
//
//	WebApplicationMap{ "key": WebApplicationArgs{...} }
type WebApplicationMapInput interface {
	pulumi.Input

	ToWebApplicationMapOutput() WebApplicationMapOutput
	ToWebApplicationMapOutputWithContext(context.Context) WebApplicationMapOutput
}

type WebApplicationMap map[string]WebApplicationInput

func (WebApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebApplication)(nil)).Elem()
}

func (i WebApplicationMap) ToWebApplicationMapOutput() WebApplicationMapOutput {
	return i.ToWebApplicationMapOutputWithContext(context.Background())
}

func (i WebApplicationMap) ToWebApplicationMapOutputWithContext(ctx context.Context) WebApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMapOutput)
}

type WebApplicationOutput struct{ *pulumi.OutputState }

func (WebApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplication)(nil)).Elem()
}

func (o WebApplicationOutput) ToWebApplicationOutput() WebApplicationOutput {
	return o
}

func (o WebApplicationOutput) ToWebApplicationOutputWithContext(ctx context.Context) WebApplicationOutput {
	return o
}

// A list of conversion goals of the application
func (o WebApplicationOutput) ConversionGoals() WebApplicationConversionGoalsPtrOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationConversionGoalsPtrOutput { return v.ConversionGoals }).(WebApplicationConversionGoalsPtrOutput)
}

// (Field has overlap with `WebAppEnablement`) Analize *X*% of user sessions
func (o WebApplicationOutput) CostControlUserSessionPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v *WebApplication) pulumi.IntOutput { return v.CostControlUserSessionPercentage }).(pulumi.IntOutput)
}

// Defines the Custom Action Apdex settings of an application
func (o WebApplicationOutput) CustomActionApdexSettings() WebApplicationCustomActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationCustomActionApdexSettingsOutput {
		return v.CustomActionApdexSettings
	}).(WebApplicationCustomActionApdexSettingsOutput)
}

// User Action names to be flagged as Key User Actions
//
// Deprecated: Configuring Key User Actions within `WebApplication` is discouraged. Use the dedicated resource `KeyUserAction` instead.
func (o WebApplicationOutput) KeyUserActions() WebApplicationKeyUserActionArrayOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationKeyUserActionArrayOutput { return v.KeyUserActions }).(WebApplicationKeyUserActionArrayOutput)
}

// Defines the Load Action Apdex settings of an application
func (o WebApplicationOutput) LoadActionApdexSettings() WebApplicationLoadActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationLoadActionApdexSettingsOutput { return v.LoadActionApdexSettings }).(WebApplicationLoadActionApdexSettingsOutput)
}

// The key performance metric of load actions. Possible values are `ACTION_DURATION`, `CUMULATIVE_LAYOUT_SHIFT`, `DOM_INTERACTIVE`, `FIRST_INPUT_DELAY`, `LARGEST_CONTENTFUL_PAINT`, `LOAD_EVENT_END`, `LOAD_EVENT_START`, `RESPONSE_END`, `RESPONSE_START`, `SPEED_INDEX` and `VISUALLY_COMPLETE`
func (o WebApplicationOutput) LoadActionKeyPerformanceMetric() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApplication) pulumi.StringOutput { return v.LoadActionKeyPerformanceMetric }).(pulumi.StringOutput)
}

// Java script agent meta data capture settings
func (o WebApplicationOutput) MetaDataCaptureSettings() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationMetaDataCaptureSettingsPtrOutput {
		return v.MetaDataCaptureSettings
	}).(WebApplicationMetaDataCaptureSettingsPtrOutput)
}

// Real user monitoring settings
func (o WebApplicationOutput) MonitoringSettings() WebApplicationMonitoringSettingsOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationMonitoringSettingsOutput { return v.MonitoringSettings }).(WebApplicationMonitoringSettingsOutput)
}

// The name of the web application, displayed in the UI
func (o WebApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Field has overlap with `WebAppEnablement`) Real user monitoring enabled/disabled
func (o WebApplicationOutput) RealUserMonitoringEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplication) pulumi.BoolPtrOutput { return v.RealUserMonitoringEnabled }).(pulumi.BoolPtrOutput)
}

// Settings regarding Session Replay
func (o WebApplicationOutput) SessionReplayConfig() WebApplicationSessionReplayConfigOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationSessionReplayConfigOutput { return v.SessionReplayConfig }).(WebApplicationSessionReplayConfigOutput)
}

// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
func (o WebApplicationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApplication) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// URL injection pattern for manual web application
func (o WebApplicationOutput) UrlInjectionPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplication) pulumi.StringPtrOutput { return v.UrlInjectionPattern }).(pulumi.StringPtrOutput)
}

// User action and session properties settings
func (o WebApplicationOutput) UserActionAndSessionProperties() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationUserActionAndSessionPropertiesPtrOutput {
		return v.UserActionAndSessionProperties
	}).(WebApplicationUserActionAndSessionPropertiesPtrOutput)
}

// The settings of user action naming
func (o WebApplicationOutput) UserActionNamingSettings() WebApplicationUserActionNamingSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationUserActionNamingSettingsPtrOutput {
		return v.UserActionNamingSettings
	}).(WebApplicationUserActionNamingSettingsPtrOutput)
}

// User tags settings
func (o WebApplicationOutput) UserTags() WebApplicationUserTagsPtrOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationUserTagsPtrOutput { return v.UserTags }).(WebApplicationUserTagsPtrOutput)
}

// These settings influence the monitoring data you receive for 3rd party, CDN, and 1st party resources
func (o WebApplicationOutput) WaterfallSettings() WebApplicationWaterfallSettingsOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationWaterfallSettingsOutput { return v.WaterfallSettings }).(WebApplicationWaterfallSettingsOutput)
}

// Defines the XHR Action Apdex settings of an application
func (o WebApplicationOutput) XhrActionApdexSettings() WebApplicationXhrActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplication) WebApplicationXhrActionApdexSettingsOutput { return v.XhrActionApdexSettings }).(WebApplicationXhrActionApdexSettingsOutput)
}

// The key performance metric of XHR actions. Possible values are `ACTION_DURATION`, `RESPONSE_END`, `RESPONSE_START` and `VISUALLY_COMPLETE`.
func (o WebApplicationOutput) XhrActionKeyPerformanceMetric() pulumi.StringOutput {
	return o.ApplyT(func(v *WebApplication) pulumi.StringOutput { return v.XhrActionKeyPerformanceMetric }).(pulumi.StringOutput)
}

type WebApplicationArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebApplication)(nil)).Elem()
}

func (o WebApplicationArrayOutput) ToWebApplicationArrayOutput() WebApplicationArrayOutput {
	return o
}

func (o WebApplicationArrayOutput) ToWebApplicationArrayOutputWithContext(ctx context.Context) WebApplicationArrayOutput {
	return o
}

func (o WebApplicationArrayOutput) Index(i pulumi.IntInput) WebApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebApplication {
		return vs[0].([]*WebApplication)[vs[1].(int)]
	}).(WebApplicationOutput)
}

type WebApplicationMapOutput struct{ *pulumi.OutputState }

func (WebApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebApplication)(nil)).Elem()
}

func (o WebApplicationMapOutput) ToWebApplicationMapOutput() WebApplicationMapOutput {
	return o
}

func (o WebApplicationMapOutput) ToWebApplicationMapOutputWithContext(ctx context.Context) WebApplicationMapOutput {
	return o
}

func (o WebApplicationMapOutput) MapIndex(k pulumi.StringInput) WebApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebApplication {
		return vs[0].(map[string]*WebApplication)[vs[1].(string)]
	}).(WebApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationInput)(nil)).Elem(), &WebApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationArrayInput)(nil)).Elem(), WebApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMapInput)(nil)).Elem(), WebApplicationMap{})
	pulumi.RegisterOutputType(WebApplicationOutput{})
	pulumi.RegisterOutputType(WebApplicationArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMapOutput{})
}
