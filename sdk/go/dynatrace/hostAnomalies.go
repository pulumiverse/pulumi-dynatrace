// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type HostAnomalies struct {
	pulumi.CustomResourceState

	// Configuration of lost connection detection
	Connections HostAnomaliesConnectionsPtrOutput `pulumi:"connections"`
	// Configuration of high CPU saturation detection
	Cpu HostAnomaliesCpuPtrOutput `pulumi:"cpu"`
	// Configuration of disk related anomalies
	Disks HostAnomaliesDisksPtrOutput `pulumi:"disks"`
	// Configuration of high Garbage Collector activity detection
	Gc HostAnomaliesGcPtrOutput `pulumi:"gc"`
	// Configuration of Java related anomalies
	Java HostAnomaliesJavaPtrOutput `pulumi:"java"`
	// Configuration of high memory usage detection
	Memory HostAnomaliesMemoryPtrOutput `pulumi:"memory"`
	// Configuration of network related anomalies
	Network HostAnomaliesNetworkPtrOutput `pulumi:"network"`
}

// NewHostAnomalies registers a new resource with the given unique name, arguments, and options.
func NewHostAnomalies(ctx *pulumi.Context,
	name string, args *HostAnomaliesArgs, opts ...pulumi.ResourceOption) (*HostAnomalies, error) {
	if args == nil {
		args = &HostAnomaliesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HostAnomalies
	err := ctx.RegisterResource("dynatrace:index/hostAnomalies:HostAnomalies", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostAnomalies gets an existing HostAnomalies resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostAnomalies(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostAnomaliesState, opts ...pulumi.ResourceOption) (*HostAnomalies, error) {
	var resource HostAnomalies
	err := ctx.ReadResource("dynatrace:index/hostAnomalies:HostAnomalies", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostAnomalies resources.
type hostAnomaliesState struct {
	// Configuration of lost connection detection
	Connections *HostAnomaliesConnections `pulumi:"connections"`
	// Configuration of high CPU saturation detection
	Cpu *HostAnomaliesCpu `pulumi:"cpu"`
	// Configuration of disk related anomalies
	Disks *HostAnomaliesDisks `pulumi:"disks"`
	// Configuration of high Garbage Collector activity detection
	Gc *HostAnomaliesGc `pulumi:"gc"`
	// Configuration of Java related anomalies
	Java *HostAnomaliesJava `pulumi:"java"`
	// Configuration of high memory usage detection
	Memory *HostAnomaliesMemory `pulumi:"memory"`
	// Configuration of network related anomalies
	Network *HostAnomaliesNetwork `pulumi:"network"`
}

type HostAnomaliesState struct {
	// Configuration of lost connection detection
	Connections HostAnomaliesConnectionsPtrInput
	// Configuration of high CPU saturation detection
	Cpu HostAnomaliesCpuPtrInput
	// Configuration of disk related anomalies
	Disks HostAnomaliesDisksPtrInput
	// Configuration of high Garbage Collector activity detection
	Gc HostAnomaliesGcPtrInput
	// Configuration of Java related anomalies
	Java HostAnomaliesJavaPtrInput
	// Configuration of high memory usage detection
	Memory HostAnomaliesMemoryPtrInput
	// Configuration of network related anomalies
	Network HostAnomaliesNetworkPtrInput
}

func (HostAnomaliesState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostAnomaliesState)(nil)).Elem()
}

type hostAnomaliesArgs struct {
	// Configuration of lost connection detection
	Connections *HostAnomaliesConnections `pulumi:"connections"`
	// Configuration of high CPU saturation detection
	Cpu *HostAnomaliesCpu `pulumi:"cpu"`
	// Configuration of disk related anomalies
	Disks *HostAnomaliesDisks `pulumi:"disks"`
	// Configuration of high Garbage Collector activity detection
	Gc *HostAnomaliesGc `pulumi:"gc"`
	// Configuration of Java related anomalies
	Java *HostAnomaliesJava `pulumi:"java"`
	// Configuration of high memory usage detection
	Memory *HostAnomaliesMemory `pulumi:"memory"`
	// Configuration of network related anomalies
	Network *HostAnomaliesNetwork `pulumi:"network"`
}

// The set of arguments for constructing a HostAnomalies resource.
type HostAnomaliesArgs struct {
	// Configuration of lost connection detection
	Connections HostAnomaliesConnectionsPtrInput
	// Configuration of high CPU saturation detection
	Cpu HostAnomaliesCpuPtrInput
	// Configuration of disk related anomalies
	Disks HostAnomaliesDisksPtrInput
	// Configuration of high Garbage Collector activity detection
	Gc HostAnomaliesGcPtrInput
	// Configuration of Java related anomalies
	Java HostAnomaliesJavaPtrInput
	// Configuration of high memory usage detection
	Memory HostAnomaliesMemoryPtrInput
	// Configuration of network related anomalies
	Network HostAnomaliesNetworkPtrInput
}

func (HostAnomaliesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostAnomaliesArgs)(nil)).Elem()
}

type HostAnomaliesInput interface {
	pulumi.Input

	ToHostAnomaliesOutput() HostAnomaliesOutput
	ToHostAnomaliesOutputWithContext(ctx context.Context) HostAnomaliesOutput
}

func (*HostAnomalies) ElementType() reflect.Type {
	return reflect.TypeOf((**HostAnomalies)(nil)).Elem()
}

func (i *HostAnomalies) ToHostAnomaliesOutput() HostAnomaliesOutput {
	return i.ToHostAnomaliesOutputWithContext(context.Background())
}

func (i *HostAnomalies) ToHostAnomaliesOutputWithContext(ctx context.Context) HostAnomaliesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostAnomaliesOutput)
}

// HostAnomaliesArrayInput is an input type that accepts HostAnomaliesArray and HostAnomaliesArrayOutput values.
// You can construct a concrete instance of `HostAnomaliesArrayInput` via:
//
//	HostAnomaliesArray{ HostAnomaliesArgs{...} }
type HostAnomaliesArrayInput interface {
	pulumi.Input

	ToHostAnomaliesArrayOutput() HostAnomaliesArrayOutput
	ToHostAnomaliesArrayOutputWithContext(context.Context) HostAnomaliesArrayOutput
}

type HostAnomaliesArray []HostAnomaliesInput

func (HostAnomaliesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostAnomalies)(nil)).Elem()
}

func (i HostAnomaliesArray) ToHostAnomaliesArrayOutput() HostAnomaliesArrayOutput {
	return i.ToHostAnomaliesArrayOutputWithContext(context.Background())
}

func (i HostAnomaliesArray) ToHostAnomaliesArrayOutputWithContext(ctx context.Context) HostAnomaliesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostAnomaliesArrayOutput)
}

// HostAnomaliesMapInput is an input type that accepts HostAnomaliesMap and HostAnomaliesMapOutput values.
// You can construct a concrete instance of `HostAnomaliesMapInput` via:
//
//	HostAnomaliesMap{ "key": HostAnomaliesArgs{...} }
type HostAnomaliesMapInput interface {
	pulumi.Input

	ToHostAnomaliesMapOutput() HostAnomaliesMapOutput
	ToHostAnomaliesMapOutputWithContext(context.Context) HostAnomaliesMapOutput
}

type HostAnomaliesMap map[string]HostAnomaliesInput

func (HostAnomaliesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostAnomalies)(nil)).Elem()
}

func (i HostAnomaliesMap) ToHostAnomaliesMapOutput() HostAnomaliesMapOutput {
	return i.ToHostAnomaliesMapOutputWithContext(context.Background())
}

func (i HostAnomaliesMap) ToHostAnomaliesMapOutputWithContext(ctx context.Context) HostAnomaliesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostAnomaliesMapOutput)
}

type HostAnomaliesOutput struct{ *pulumi.OutputState }

func (HostAnomaliesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostAnomalies)(nil)).Elem()
}

func (o HostAnomaliesOutput) ToHostAnomaliesOutput() HostAnomaliesOutput {
	return o
}

func (o HostAnomaliesOutput) ToHostAnomaliesOutputWithContext(ctx context.Context) HostAnomaliesOutput {
	return o
}

// Configuration of lost connection detection
func (o HostAnomaliesOutput) Connections() HostAnomaliesConnectionsPtrOutput {
	return o.ApplyT(func(v *HostAnomalies) HostAnomaliesConnectionsPtrOutput { return v.Connections }).(HostAnomaliesConnectionsPtrOutput)
}

// Configuration of high CPU saturation detection
func (o HostAnomaliesOutput) Cpu() HostAnomaliesCpuPtrOutput {
	return o.ApplyT(func(v *HostAnomalies) HostAnomaliesCpuPtrOutput { return v.Cpu }).(HostAnomaliesCpuPtrOutput)
}

// Configuration of disk related anomalies
func (o HostAnomaliesOutput) Disks() HostAnomaliesDisksPtrOutput {
	return o.ApplyT(func(v *HostAnomalies) HostAnomaliesDisksPtrOutput { return v.Disks }).(HostAnomaliesDisksPtrOutput)
}

// Configuration of high Garbage Collector activity detection
func (o HostAnomaliesOutput) Gc() HostAnomaliesGcPtrOutput {
	return o.ApplyT(func(v *HostAnomalies) HostAnomaliesGcPtrOutput { return v.Gc }).(HostAnomaliesGcPtrOutput)
}

// Configuration of Java related anomalies
func (o HostAnomaliesOutput) Java() HostAnomaliesJavaPtrOutput {
	return o.ApplyT(func(v *HostAnomalies) HostAnomaliesJavaPtrOutput { return v.Java }).(HostAnomaliesJavaPtrOutput)
}

// Configuration of high memory usage detection
func (o HostAnomaliesOutput) Memory() HostAnomaliesMemoryPtrOutput {
	return o.ApplyT(func(v *HostAnomalies) HostAnomaliesMemoryPtrOutput { return v.Memory }).(HostAnomaliesMemoryPtrOutput)
}

// Configuration of network related anomalies
func (o HostAnomaliesOutput) Network() HostAnomaliesNetworkPtrOutput {
	return o.ApplyT(func(v *HostAnomalies) HostAnomaliesNetworkPtrOutput { return v.Network }).(HostAnomaliesNetworkPtrOutput)
}

type HostAnomaliesArrayOutput struct{ *pulumi.OutputState }

func (HostAnomaliesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostAnomalies)(nil)).Elem()
}

func (o HostAnomaliesArrayOutput) ToHostAnomaliesArrayOutput() HostAnomaliesArrayOutput {
	return o
}

func (o HostAnomaliesArrayOutput) ToHostAnomaliesArrayOutputWithContext(ctx context.Context) HostAnomaliesArrayOutput {
	return o
}

func (o HostAnomaliesArrayOutput) Index(i pulumi.IntInput) HostAnomaliesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HostAnomalies {
		return vs[0].([]*HostAnomalies)[vs[1].(int)]
	}).(HostAnomaliesOutput)
}

type HostAnomaliesMapOutput struct{ *pulumi.OutputState }

func (HostAnomaliesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostAnomalies)(nil)).Elem()
}

func (o HostAnomaliesMapOutput) ToHostAnomaliesMapOutput() HostAnomaliesMapOutput {
	return o
}

func (o HostAnomaliesMapOutput) ToHostAnomaliesMapOutputWithContext(ctx context.Context) HostAnomaliesMapOutput {
	return o
}

func (o HostAnomaliesMapOutput) MapIndex(k pulumi.StringInput) HostAnomaliesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HostAnomalies {
		return vs[0].(map[string]*HostAnomalies)[vs[1].(string)]
	}).(HostAnomaliesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostAnomaliesInput)(nil)).Elem(), &HostAnomalies{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostAnomaliesArrayInput)(nil)).Elem(), HostAnomaliesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostAnomaliesMapInput)(nil)).Elem(), HostAnomaliesMap{})
	pulumi.RegisterOutputType(HostAnomaliesOutput{})
	pulumi.RegisterOutputType(HostAnomaliesArrayOutput{})
	pulumi.RegisterOutputType(HostAnomaliesMapOutput{})
}
