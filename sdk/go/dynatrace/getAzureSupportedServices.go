// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The Azure supported service data source queries for a full list of all supported services.
//
// ## Example Usage
//
// For an example of this data source, please refer to the Resource Example Usage of the AzureService resource.
func GetAzureSupportedServices(ctx *pulumi.Context, args *GetAzureSupportedServicesArgs, opts ...pulumi.InvokeOption) (*GetAzureSupportedServicesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAzureSupportedServicesResult
	err := ctx.Invoke("dynatrace:index/getAzureSupportedServices:getAzureSupportedServices", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAzureSupportedServices.
type GetAzureSupportedServicesArgs struct {
	// Services with the given names won't be included in the results
	Excepts []string `pulumi:"excepts"`
}

// A collection of values returned by getAzureSupportedServices.
type GetAzureSupportedServicesResult struct {
	// Services with the given names won't be included in the results
	Excepts []string `pulumi:"excepts"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The keys are the names of the supported services. The values provide information whether that service is built in or not.
	Services map[string]bool `pulumi:"services"`
}

func GetAzureSupportedServicesOutput(ctx *pulumi.Context, args GetAzureSupportedServicesOutputArgs, opts ...pulumi.InvokeOption) GetAzureSupportedServicesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAzureSupportedServicesResultOutput, error) {
			args := v.(GetAzureSupportedServicesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetAzureSupportedServicesResult
			secret, err := ctx.InvokePackageRaw("dynatrace:index/getAzureSupportedServices:getAzureSupportedServices", args, &rv, "", opts...)
			if err != nil {
				return GetAzureSupportedServicesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetAzureSupportedServicesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetAzureSupportedServicesResultOutput), nil
			}
			return output, nil
		}).(GetAzureSupportedServicesResultOutput)
}

// A collection of arguments for invoking getAzureSupportedServices.
type GetAzureSupportedServicesOutputArgs struct {
	// Services with the given names won't be included in the results
	Excepts pulumi.StringArrayInput `pulumi:"excepts"`
}

func (GetAzureSupportedServicesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureSupportedServicesArgs)(nil)).Elem()
}

// A collection of values returned by getAzureSupportedServices.
type GetAzureSupportedServicesResultOutput struct{ *pulumi.OutputState }

func (GetAzureSupportedServicesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureSupportedServicesResult)(nil)).Elem()
}

func (o GetAzureSupportedServicesResultOutput) ToGetAzureSupportedServicesResultOutput() GetAzureSupportedServicesResultOutput {
	return o
}

func (o GetAzureSupportedServicesResultOutput) ToGetAzureSupportedServicesResultOutputWithContext(ctx context.Context) GetAzureSupportedServicesResultOutput {
	return o
}

// Services with the given names won't be included in the results
func (o GetAzureSupportedServicesResultOutput) Excepts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAzureSupportedServicesResult) []string { return v.Excepts }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAzureSupportedServicesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureSupportedServicesResult) string { return v.Id }).(pulumi.StringOutput)
}

// The keys are the names of the supported services. The values provide information whether that service is built in or not.
func (o GetAzureSupportedServicesResultOutput) Services() pulumi.BoolMapOutput {
	return o.ApplyT(func(v GetAzureSupportedServicesResult) map[string]bool { return v.Services }).(pulumi.BoolMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAzureSupportedServicesResultOutput{})
}
