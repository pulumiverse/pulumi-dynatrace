// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type MobileAppRequestErrors struct {
	pulumi.CustomResourceState

	// no documentation available
	ErrorRules MobileAppRequestErrorsErrorRulesPtrOutput `pulumi:"errorRules"`
	// The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)
	Scope pulumi.StringOutput `pulumi:"scope"`
}

// NewMobileAppRequestErrors registers a new resource with the given unique name, arguments, and options.
func NewMobileAppRequestErrors(ctx *pulumi.Context,
	name string, args *MobileAppRequestErrorsArgs, opts ...pulumi.ResourceOption) (*MobileAppRequestErrors, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MobileAppRequestErrors
	err := ctx.RegisterResource("dynatrace:index/mobileAppRequestErrors:MobileAppRequestErrors", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMobileAppRequestErrors gets an existing MobileAppRequestErrors resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMobileAppRequestErrors(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MobileAppRequestErrorsState, opts ...pulumi.ResourceOption) (*MobileAppRequestErrors, error) {
	var resource MobileAppRequestErrors
	err := ctx.ReadResource("dynatrace:index/mobileAppRequestErrors:MobileAppRequestErrors", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MobileAppRequestErrors resources.
type mobileAppRequestErrorsState struct {
	// no documentation available
	ErrorRules *MobileAppRequestErrorsErrorRules `pulumi:"errorRules"`
	// The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)
	Scope *string `pulumi:"scope"`
}

type MobileAppRequestErrorsState struct {
	// no documentation available
	ErrorRules MobileAppRequestErrorsErrorRulesPtrInput
	// The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)
	Scope pulumi.StringPtrInput
}

func (MobileAppRequestErrorsState) ElementType() reflect.Type {
	return reflect.TypeOf((*mobileAppRequestErrorsState)(nil)).Elem()
}

type mobileAppRequestErrorsArgs struct {
	// no documentation available
	ErrorRules *MobileAppRequestErrorsErrorRules `pulumi:"errorRules"`
	// The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)
	Scope string `pulumi:"scope"`
}

// The set of arguments for constructing a MobileAppRequestErrors resource.
type MobileAppRequestErrorsArgs struct {
	// no documentation available
	ErrorRules MobileAppRequestErrorsErrorRulesPtrInput
	// The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)
	Scope pulumi.StringInput
}

func (MobileAppRequestErrorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mobileAppRequestErrorsArgs)(nil)).Elem()
}

type MobileAppRequestErrorsInput interface {
	pulumi.Input

	ToMobileAppRequestErrorsOutput() MobileAppRequestErrorsOutput
	ToMobileAppRequestErrorsOutputWithContext(ctx context.Context) MobileAppRequestErrorsOutput
}

func (*MobileAppRequestErrors) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileAppRequestErrors)(nil)).Elem()
}

func (i *MobileAppRequestErrors) ToMobileAppRequestErrorsOutput() MobileAppRequestErrorsOutput {
	return i.ToMobileAppRequestErrorsOutputWithContext(context.Background())
}

func (i *MobileAppRequestErrors) ToMobileAppRequestErrorsOutputWithContext(ctx context.Context) MobileAppRequestErrorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileAppRequestErrorsOutput)
}

// MobileAppRequestErrorsArrayInput is an input type that accepts MobileAppRequestErrorsArray and MobileAppRequestErrorsArrayOutput values.
// You can construct a concrete instance of `MobileAppRequestErrorsArrayInput` via:
//
//	MobileAppRequestErrorsArray{ MobileAppRequestErrorsArgs{...} }
type MobileAppRequestErrorsArrayInput interface {
	pulumi.Input

	ToMobileAppRequestErrorsArrayOutput() MobileAppRequestErrorsArrayOutput
	ToMobileAppRequestErrorsArrayOutputWithContext(context.Context) MobileAppRequestErrorsArrayOutput
}

type MobileAppRequestErrorsArray []MobileAppRequestErrorsInput

func (MobileAppRequestErrorsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MobileAppRequestErrors)(nil)).Elem()
}

func (i MobileAppRequestErrorsArray) ToMobileAppRequestErrorsArrayOutput() MobileAppRequestErrorsArrayOutput {
	return i.ToMobileAppRequestErrorsArrayOutputWithContext(context.Background())
}

func (i MobileAppRequestErrorsArray) ToMobileAppRequestErrorsArrayOutputWithContext(ctx context.Context) MobileAppRequestErrorsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileAppRequestErrorsArrayOutput)
}

// MobileAppRequestErrorsMapInput is an input type that accepts MobileAppRequestErrorsMap and MobileAppRequestErrorsMapOutput values.
// You can construct a concrete instance of `MobileAppRequestErrorsMapInput` via:
//
//	MobileAppRequestErrorsMap{ "key": MobileAppRequestErrorsArgs{...} }
type MobileAppRequestErrorsMapInput interface {
	pulumi.Input

	ToMobileAppRequestErrorsMapOutput() MobileAppRequestErrorsMapOutput
	ToMobileAppRequestErrorsMapOutputWithContext(context.Context) MobileAppRequestErrorsMapOutput
}

type MobileAppRequestErrorsMap map[string]MobileAppRequestErrorsInput

func (MobileAppRequestErrorsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MobileAppRequestErrors)(nil)).Elem()
}

func (i MobileAppRequestErrorsMap) ToMobileAppRequestErrorsMapOutput() MobileAppRequestErrorsMapOutput {
	return i.ToMobileAppRequestErrorsMapOutputWithContext(context.Background())
}

func (i MobileAppRequestErrorsMap) ToMobileAppRequestErrorsMapOutputWithContext(ctx context.Context) MobileAppRequestErrorsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileAppRequestErrorsMapOutput)
}

type MobileAppRequestErrorsOutput struct{ *pulumi.OutputState }

func (MobileAppRequestErrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileAppRequestErrors)(nil)).Elem()
}

func (o MobileAppRequestErrorsOutput) ToMobileAppRequestErrorsOutput() MobileAppRequestErrorsOutput {
	return o
}

func (o MobileAppRequestErrorsOutput) ToMobileAppRequestErrorsOutputWithContext(ctx context.Context) MobileAppRequestErrorsOutput {
	return o
}

// no documentation available
func (o MobileAppRequestErrorsOutput) ErrorRules() MobileAppRequestErrorsErrorRulesPtrOutput {
	return o.ApplyT(func(v *MobileAppRequestErrors) MobileAppRequestErrorsErrorRulesPtrOutput { return v.ErrorRules }).(MobileAppRequestErrorsErrorRulesPtrOutput)
}

// The scope of this setting (MOBILE*APPLICATION, CUSTOM*APPLICATION)
func (o MobileAppRequestErrorsOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *MobileAppRequestErrors) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

type MobileAppRequestErrorsArrayOutput struct{ *pulumi.OutputState }

func (MobileAppRequestErrorsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MobileAppRequestErrors)(nil)).Elem()
}

func (o MobileAppRequestErrorsArrayOutput) ToMobileAppRequestErrorsArrayOutput() MobileAppRequestErrorsArrayOutput {
	return o
}

func (o MobileAppRequestErrorsArrayOutput) ToMobileAppRequestErrorsArrayOutputWithContext(ctx context.Context) MobileAppRequestErrorsArrayOutput {
	return o
}

func (o MobileAppRequestErrorsArrayOutput) Index(i pulumi.IntInput) MobileAppRequestErrorsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MobileAppRequestErrors {
		return vs[0].([]*MobileAppRequestErrors)[vs[1].(int)]
	}).(MobileAppRequestErrorsOutput)
}

type MobileAppRequestErrorsMapOutput struct{ *pulumi.OutputState }

func (MobileAppRequestErrorsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MobileAppRequestErrors)(nil)).Elem()
}

func (o MobileAppRequestErrorsMapOutput) ToMobileAppRequestErrorsMapOutput() MobileAppRequestErrorsMapOutput {
	return o
}

func (o MobileAppRequestErrorsMapOutput) ToMobileAppRequestErrorsMapOutputWithContext(ctx context.Context) MobileAppRequestErrorsMapOutput {
	return o
}

func (o MobileAppRequestErrorsMapOutput) MapIndex(k pulumi.StringInput) MobileAppRequestErrorsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MobileAppRequestErrors {
		return vs[0].(map[string]*MobileAppRequestErrors)[vs[1].(string)]
	}).(MobileAppRequestErrorsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MobileAppRequestErrorsInput)(nil)).Elem(), &MobileAppRequestErrors{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileAppRequestErrorsArrayInput)(nil)).Elem(), MobileAppRequestErrorsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileAppRequestErrorsMapInput)(nil)).Elem(), MobileAppRequestErrorsMap{})
	pulumi.RegisterOutputType(MobileAppRequestErrorsOutput{})
	pulumi.RegisterOutputType(MobileAppRequestErrorsArrayOutput{})
	pulumi.RegisterOutputType(MobileAppRequestErrorsMapOutput{})
}
