// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OpenpipelineV2EventsSecurityRouting struct {
	pulumi.CustomResourceState

	// Routing for pipelines
	RoutingEntries OpenpipelineV2EventsSecurityRoutingRoutingEntriesPtrOutput `pulumi:"routingEntries"`
}

// NewOpenpipelineV2EventsSecurityRouting registers a new resource with the given unique name, arguments, and options.
func NewOpenpipelineV2EventsSecurityRouting(ctx *pulumi.Context,
	name string, args *OpenpipelineV2EventsSecurityRoutingArgs, opts ...pulumi.ResourceOption) (*OpenpipelineV2EventsSecurityRouting, error) {
	if args == nil {
		args = &OpenpipelineV2EventsSecurityRoutingArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenpipelineV2EventsSecurityRouting
	err := ctx.RegisterResource("dynatrace:index/openpipelineV2EventsSecurityRouting:OpenpipelineV2EventsSecurityRouting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenpipelineV2EventsSecurityRouting gets an existing OpenpipelineV2EventsSecurityRouting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenpipelineV2EventsSecurityRouting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenpipelineV2EventsSecurityRoutingState, opts ...pulumi.ResourceOption) (*OpenpipelineV2EventsSecurityRouting, error) {
	var resource OpenpipelineV2EventsSecurityRouting
	err := ctx.ReadResource("dynatrace:index/openpipelineV2EventsSecurityRouting:OpenpipelineV2EventsSecurityRouting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenpipelineV2EventsSecurityRouting resources.
type openpipelineV2EventsSecurityRoutingState struct {
	// Routing for pipelines
	RoutingEntries *OpenpipelineV2EventsSecurityRoutingRoutingEntries `pulumi:"routingEntries"`
}

type OpenpipelineV2EventsSecurityRoutingState struct {
	// Routing for pipelines
	RoutingEntries OpenpipelineV2EventsSecurityRoutingRoutingEntriesPtrInput
}

func (OpenpipelineV2EventsSecurityRoutingState) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2EventsSecurityRoutingState)(nil)).Elem()
}

type openpipelineV2EventsSecurityRoutingArgs struct {
	// Routing for pipelines
	RoutingEntries *OpenpipelineV2EventsSecurityRoutingRoutingEntries `pulumi:"routingEntries"`
}

// The set of arguments for constructing a OpenpipelineV2EventsSecurityRouting resource.
type OpenpipelineV2EventsSecurityRoutingArgs struct {
	// Routing for pipelines
	RoutingEntries OpenpipelineV2EventsSecurityRoutingRoutingEntriesPtrInput
}

func (OpenpipelineV2EventsSecurityRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2EventsSecurityRoutingArgs)(nil)).Elem()
}

type OpenpipelineV2EventsSecurityRoutingInput interface {
	pulumi.Input

	ToOpenpipelineV2EventsSecurityRoutingOutput() OpenpipelineV2EventsSecurityRoutingOutput
	ToOpenpipelineV2EventsSecurityRoutingOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityRoutingOutput
}

func (*OpenpipelineV2EventsSecurityRouting) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2EventsSecurityRouting)(nil)).Elem()
}

func (i *OpenpipelineV2EventsSecurityRouting) ToOpenpipelineV2EventsSecurityRoutingOutput() OpenpipelineV2EventsSecurityRoutingOutput {
	return i.ToOpenpipelineV2EventsSecurityRoutingOutputWithContext(context.Background())
}

func (i *OpenpipelineV2EventsSecurityRouting) ToOpenpipelineV2EventsSecurityRoutingOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2EventsSecurityRoutingOutput)
}

// OpenpipelineV2EventsSecurityRoutingArrayInput is an input type that accepts OpenpipelineV2EventsSecurityRoutingArray and OpenpipelineV2EventsSecurityRoutingArrayOutput values.
// You can construct a concrete instance of `OpenpipelineV2EventsSecurityRoutingArrayInput` via:
//
//	OpenpipelineV2EventsSecurityRoutingArray{ OpenpipelineV2EventsSecurityRoutingArgs{...} }
type OpenpipelineV2EventsSecurityRoutingArrayInput interface {
	pulumi.Input

	ToOpenpipelineV2EventsSecurityRoutingArrayOutput() OpenpipelineV2EventsSecurityRoutingArrayOutput
	ToOpenpipelineV2EventsSecurityRoutingArrayOutputWithContext(context.Context) OpenpipelineV2EventsSecurityRoutingArrayOutput
}

type OpenpipelineV2EventsSecurityRoutingArray []OpenpipelineV2EventsSecurityRoutingInput

func (OpenpipelineV2EventsSecurityRoutingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2EventsSecurityRouting)(nil)).Elem()
}

func (i OpenpipelineV2EventsSecurityRoutingArray) ToOpenpipelineV2EventsSecurityRoutingArrayOutput() OpenpipelineV2EventsSecurityRoutingArrayOutput {
	return i.ToOpenpipelineV2EventsSecurityRoutingArrayOutputWithContext(context.Background())
}

func (i OpenpipelineV2EventsSecurityRoutingArray) ToOpenpipelineV2EventsSecurityRoutingArrayOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityRoutingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2EventsSecurityRoutingArrayOutput)
}

// OpenpipelineV2EventsSecurityRoutingMapInput is an input type that accepts OpenpipelineV2EventsSecurityRoutingMap and OpenpipelineV2EventsSecurityRoutingMapOutput values.
// You can construct a concrete instance of `OpenpipelineV2EventsSecurityRoutingMapInput` via:
//
//	OpenpipelineV2EventsSecurityRoutingMap{ "key": OpenpipelineV2EventsSecurityRoutingArgs{...} }
type OpenpipelineV2EventsSecurityRoutingMapInput interface {
	pulumi.Input

	ToOpenpipelineV2EventsSecurityRoutingMapOutput() OpenpipelineV2EventsSecurityRoutingMapOutput
	ToOpenpipelineV2EventsSecurityRoutingMapOutputWithContext(context.Context) OpenpipelineV2EventsSecurityRoutingMapOutput
}

type OpenpipelineV2EventsSecurityRoutingMap map[string]OpenpipelineV2EventsSecurityRoutingInput

func (OpenpipelineV2EventsSecurityRoutingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2EventsSecurityRouting)(nil)).Elem()
}

func (i OpenpipelineV2EventsSecurityRoutingMap) ToOpenpipelineV2EventsSecurityRoutingMapOutput() OpenpipelineV2EventsSecurityRoutingMapOutput {
	return i.ToOpenpipelineV2EventsSecurityRoutingMapOutputWithContext(context.Background())
}

func (i OpenpipelineV2EventsSecurityRoutingMap) ToOpenpipelineV2EventsSecurityRoutingMapOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityRoutingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2EventsSecurityRoutingMapOutput)
}

type OpenpipelineV2EventsSecurityRoutingOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2EventsSecurityRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2EventsSecurityRouting)(nil)).Elem()
}

func (o OpenpipelineV2EventsSecurityRoutingOutput) ToOpenpipelineV2EventsSecurityRoutingOutput() OpenpipelineV2EventsSecurityRoutingOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityRoutingOutput) ToOpenpipelineV2EventsSecurityRoutingOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityRoutingOutput {
	return o
}

// Routing for pipelines
func (o OpenpipelineV2EventsSecurityRoutingOutput) RoutingEntries() OpenpipelineV2EventsSecurityRoutingRoutingEntriesPtrOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityRouting) OpenpipelineV2EventsSecurityRoutingRoutingEntriesPtrOutput {
		return v.RoutingEntries
	}).(OpenpipelineV2EventsSecurityRoutingRoutingEntriesPtrOutput)
}

type OpenpipelineV2EventsSecurityRoutingArrayOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2EventsSecurityRoutingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2EventsSecurityRouting)(nil)).Elem()
}

func (o OpenpipelineV2EventsSecurityRoutingArrayOutput) ToOpenpipelineV2EventsSecurityRoutingArrayOutput() OpenpipelineV2EventsSecurityRoutingArrayOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityRoutingArrayOutput) ToOpenpipelineV2EventsSecurityRoutingArrayOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityRoutingArrayOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityRoutingArrayOutput) Index(i pulumi.IntInput) OpenpipelineV2EventsSecurityRoutingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenpipelineV2EventsSecurityRouting {
		return vs[0].([]*OpenpipelineV2EventsSecurityRouting)[vs[1].(int)]
	}).(OpenpipelineV2EventsSecurityRoutingOutput)
}

type OpenpipelineV2EventsSecurityRoutingMapOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2EventsSecurityRoutingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2EventsSecurityRouting)(nil)).Elem()
}

func (o OpenpipelineV2EventsSecurityRoutingMapOutput) ToOpenpipelineV2EventsSecurityRoutingMapOutput() OpenpipelineV2EventsSecurityRoutingMapOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityRoutingMapOutput) ToOpenpipelineV2EventsSecurityRoutingMapOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityRoutingMapOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityRoutingMapOutput) MapIndex(k pulumi.StringInput) OpenpipelineV2EventsSecurityRoutingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenpipelineV2EventsSecurityRouting {
		return vs[0].(map[string]*OpenpipelineV2EventsSecurityRouting)[vs[1].(string)]
	}).(OpenpipelineV2EventsSecurityRoutingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2EventsSecurityRoutingInput)(nil)).Elem(), &OpenpipelineV2EventsSecurityRouting{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2EventsSecurityRoutingArrayInput)(nil)).Elem(), OpenpipelineV2EventsSecurityRoutingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2EventsSecurityRoutingMapInput)(nil)).Elem(), OpenpipelineV2EventsSecurityRoutingMap{})
	pulumi.RegisterOutputType(OpenpipelineV2EventsSecurityRoutingOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2EventsSecurityRoutingArrayOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2EventsSecurityRoutingMapOutput{})
}
