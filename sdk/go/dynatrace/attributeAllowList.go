// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type AttributeAllowList struct {
	pulumi.CustomResourceState

	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Key of the attribute to persist
	Key pulumi.StringOutput `pulumi:"key"`
}

// NewAttributeAllowList registers a new resource with the given unique name, arguments, and options.
func NewAttributeAllowList(ctx *pulumi.Context,
	name string, args *AttributeAllowListArgs, opts ...pulumi.ResourceOption) (*AttributeAllowList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AttributeAllowList
	err := ctx.RegisterResource("dynatrace:index/attributeAllowList:AttributeAllowList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAttributeAllowList gets an existing AttributeAllowList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAttributeAllowList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AttributeAllowListState, opts ...pulumi.ResourceOption) (*AttributeAllowList, error) {
	var resource AttributeAllowList
	err := ctx.ReadResource("dynatrace:index/attributeAllowList:AttributeAllowList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AttributeAllowList resources.
type attributeAllowListState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Key of the attribute to persist
	Key *string `pulumi:"key"`
}

type AttributeAllowListState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Key of the attribute to persist
	Key pulumi.StringPtrInput
}

func (AttributeAllowListState) ElementType() reflect.Type {
	return reflect.TypeOf((*attributeAllowListState)(nil)).Elem()
}

type attributeAllowListArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Key of the attribute to persist
	Key string `pulumi:"key"`
}

// The set of arguments for constructing a AttributeAllowList resource.
type AttributeAllowListArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Key of the attribute to persist
	Key pulumi.StringInput
}

func (AttributeAllowListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*attributeAllowListArgs)(nil)).Elem()
}

type AttributeAllowListInput interface {
	pulumi.Input

	ToAttributeAllowListOutput() AttributeAllowListOutput
	ToAttributeAllowListOutputWithContext(ctx context.Context) AttributeAllowListOutput
}

func (*AttributeAllowList) ElementType() reflect.Type {
	return reflect.TypeOf((**AttributeAllowList)(nil)).Elem()
}

func (i *AttributeAllowList) ToAttributeAllowListOutput() AttributeAllowListOutput {
	return i.ToAttributeAllowListOutputWithContext(context.Background())
}

func (i *AttributeAllowList) ToAttributeAllowListOutputWithContext(ctx context.Context) AttributeAllowListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeAllowListOutput)
}

// AttributeAllowListArrayInput is an input type that accepts AttributeAllowListArray and AttributeAllowListArrayOutput values.
// You can construct a concrete instance of `AttributeAllowListArrayInput` via:
//
//	AttributeAllowListArray{ AttributeAllowListArgs{...} }
type AttributeAllowListArrayInput interface {
	pulumi.Input

	ToAttributeAllowListArrayOutput() AttributeAllowListArrayOutput
	ToAttributeAllowListArrayOutputWithContext(context.Context) AttributeAllowListArrayOutput
}

type AttributeAllowListArray []AttributeAllowListInput

func (AttributeAllowListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AttributeAllowList)(nil)).Elem()
}

func (i AttributeAllowListArray) ToAttributeAllowListArrayOutput() AttributeAllowListArrayOutput {
	return i.ToAttributeAllowListArrayOutputWithContext(context.Background())
}

func (i AttributeAllowListArray) ToAttributeAllowListArrayOutputWithContext(ctx context.Context) AttributeAllowListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeAllowListArrayOutput)
}

// AttributeAllowListMapInput is an input type that accepts AttributeAllowListMap and AttributeAllowListMapOutput values.
// You can construct a concrete instance of `AttributeAllowListMapInput` via:
//
//	AttributeAllowListMap{ "key": AttributeAllowListArgs{...} }
type AttributeAllowListMapInput interface {
	pulumi.Input

	ToAttributeAllowListMapOutput() AttributeAllowListMapOutput
	ToAttributeAllowListMapOutputWithContext(context.Context) AttributeAllowListMapOutput
}

type AttributeAllowListMap map[string]AttributeAllowListInput

func (AttributeAllowListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AttributeAllowList)(nil)).Elem()
}

func (i AttributeAllowListMap) ToAttributeAllowListMapOutput() AttributeAllowListMapOutput {
	return i.ToAttributeAllowListMapOutputWithContext(context.Background())
}

func (i AttributeAllowListMap) ToAttributeAllowListMapOutputWithContext(ctx context.Context) AttributeAllowListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AttributeAllowListMapOutput)
}

type AttributeAllowListOutput struct{ *pulumi.OutputState }

func (AttributeAllowListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AttributeAllowList)(nil)).Elem()
}

func (o AttributeAllowListOutput) ToAttributeAllowListOutput() AttributeAllowListOutput {
	return o
}

func (o AttributeAllowListOutput) ToAttributeAllowListOutputWithContext(ctx context.Context) AttributeAllowListOutput {
	return o
}

// This setting is enabled (`true`) or disabled (`false`)
func (o AttributeAllowListOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AttributeAllowList) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Key of the attribute to persist
func (o AttributeAllowListOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *AttributeAllowList) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

type AttributeAllowListArrayOutput struct{ *pulumi.OutputState }

func (AttributeAllowListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AttributeAllowList)(nil)).Elem()
}

func (o AttributeAllowListArrayOutput) ToAttributeAllowListArrayOutput() AttributeAllowListArrayOutput {
	return o
}

func (o AttributeAllowListArrayOutput) ToAttributeAllowListArrayOutputWithContext(ctx context.Context) AttributeAllowListArrayOutput {
	return o
}

func (o AttributeAllowListArrayOutput) Index(i pulumi.IntInput) AttributeAllowListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AttributeAllowList {
		return vs[0].([]*AttributeAllowList)[vs[1].(int)]
	}).(AttributeAllowListOutput)
}

type AttributeAllowListMapOutput struct{ *pulumi.OutputState }

func (AttributeAllowListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AttributeAllowList)(nil)).Elem()
}

func (o AttributeAllowListMapOutput) ToAttributeAllowListMapOutput() AttributeAllowListMapOutput {
	return o
}

func (o AttributeAllowListMapOutput) ToAttributeAllowListMapOutputWithContext(ctx context.Context) AttributeAllowListMapOutput {
	return o
}

func (o AttributeAllowListMapOutput) MapIndex(k pulumi.StringInput) AttributeAllowListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AttributeAllowList {
		return vs[0].(map[string]*AttributeAllowList)[vs[1].(string)]
	}).(AttributeAllowListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeAllowListInput)(nil)).Elem(), &AttributeAllowList{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeAllowListArrayInput)(nil)).Elem(), AttributeAllowListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AttributeAllowListMapInput)(nil)).Elem(), AttributeAllowListMap{})
	pulumi.RegisterOutputType(AttributeAllowListOutput{})
	pulumi.RegisterOutputType(AttributeAllowListArrayOutput{})
	pulumi.RegisterOutputType(AttributeAllowListMapOutput{})
}
