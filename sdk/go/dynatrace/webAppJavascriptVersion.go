// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type WebAppJavascriptVersion struct {
	pulumi.CustomResourceState

	// Choose custom version
	CustomJavascriptVersion pulumi.StringPtrOutput `pulumi:"customJavascriptVersion"`
}

// NewWebAppJavascriptVersion registers a new resource with the given unique name, arguments, and options.
func NewWebAppJavascriptVersion(ctx *pulumi.Context,
	name string, args *WebAppJavascriptVersionArgs, opts ...pulumi.ResourceOption) (*WebAppJavascriptVersion, error) {
	if args == nil {
		args = &WebAppJavascriptVersionArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAppJavascriptVersion
	err := ctx.RegisterResource("dynatrace:index/webAppJavascriptVersion:WebAppJavascriptVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppJavascriptVersion gets an existing WebAppJavascriptVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppJavascriptVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppJavascriptVersionState, opts ...pulumi.ResourceOption) (*WebAppJavascriptVersion, error) {
	var resource WebAppJavascriptVersion
	err := ctx.ReadResource("dynatrace:index/webAppJavascriptVersion:WebAppJavascriptVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppJavascriptVersion resources.
type webAppJavascriptVersionState struct {
	// Choose custom version
	CustomJavascriptVersion *string `pulumi:"customJavascriptVersion"`
}

type WebAppJavascriptVersionState struct {
	// Choose custom version
	CustomJavascriptVersion pulumi.StringPtrInput
}

func (WebAppJavascriptVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppJavascriptVersionState)(nil)).Elem()
}

type webAppJavascriptVersionArgs struct {
	// Choose custom version
	CustomJavascriptVersion *string `pulumi:"customJavascriptVersion"`
}

// The set of arguments for constructing a WebAppJavascriptVersion resource.
type WebAppJavascriptVersionArgs struct {
	// Choose custom version
	CustomJavascriptVersion pulumi.StringPtrInput
}

func (WebAppJavascriptVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppJavascriptVersionArgs)(nil)).Elem()
}

type WebAppJavascriptVersionInput interface {
	pulumi.Input

	ToWebAppJavascriptVersionOutput() WebAppJavascriptVersionOutput
	ToWebAppJavascriptVersionOutputWithContext(ctx context.Context) WebAppJavascriptVersionOutput
}

func (*WebAppJavascriptVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppJavascriptVersion)(nil)).Elem()
}

func (i *WebAppJavascriptVersion) ToWebAppJavascriptVersionOutput() WebAppJavascriptVersionOutput {
	return i.ToWebAppJavascriptVersionOutputWithContext(context.Background())
}

func (i *WebAppJavascriptVersion) ToWebAppJavascriptVersionOutputWithContext(ctx context.Context) WebAppJavascriptVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppJavascriptVersionOutput)
}

// WebAppJavascriptVersionArrayInput is an input type that accepts WebAppJavascriptVersionArray and WebAppJavascriptVersionArrayOutput values.
// You can construct a concrete instance of `WebAppJavascriptVersionArrayInput` via:
//
//	WebAppJavascriptVersionArray{ WebAppJavascriptVersionArgs{...} }
type WebAppJavascriptVersionArrayInput interface {
	pulumi.Input

	ToWebAppJavascriptVersionArrayOutput() WebAppJavascriptVersionArrayOutput
	ToWebAppJavascriptVersionArrayOutputWithContext(context.Context) WebAppJavascriptVersionArrayOutput
}

type WebAppJavascriptVersionArray []WebAppJavascriptVersionInput

func (WebAppJavascriptVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppJavascriptVersion)(nil)).Elem()
}

func (i WebAppJavascriptVersionArray) ToWebAppJavascriptVersionArrayOutput() WebAppJavascriptVersionArrayOutput {
	return i.ToWebAppJavascriptVersionArrayOutputWithContext(context.Background())
}

func (i WebAppJavascriptVersionArray) ToWebAppJavascriptVersionArrayOutputWithContext(ctx context.Context) WebAppJavascriptVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppJavascriptVersionArrayOutput)
}

// WebAppJavascriptVersionMapInput is an input type that accepts WebAppJavascriptVersionMap and WebAppJavascriptVersionMapOutput values.
// You can construct a concrete instance of `WebAppJavascriptVersionMapInput` via:
//
//	WebAppJavascriptVersionMap{ "key": WebAppJavascriptVersionArgs{...} }
type WebAppJavascriptVersionMapInput interface {
	pulumi.Input

	ToWebAppJavascriptVersionMapOutput() WebAppJavascriptVersionMapOutput
	ToWebAppJavascriptVersionMapOutputWithContext(context.Context) WebAppJavascriptVersionMapOutput
}

type WebAppJavascriptVersionMap map[string]WebAppJavascriptVersionInput

func (WebAppJavascriptVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppJavascriptVersion)(nil)).Elem()
}

func (i WebAppJavascriptVersionMap) ToWebAppJavascriptVersionMapOutput() WebAppJavascriptVersionMapOutput {
	return i.ToWebAppJavascriptVersionMapOutputWithContext(context.Background())
}

func (i WebAppJavascriptVersionMap) ToWebAppJavascriptVersionMapOutputWithContext(ctx context.Context) WebAppJavascriptVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppJavascriptVersionMapOutput)
}

type WebAppJavascriptVersionOutput struct{ *pulumi.OutputState }

func (WebAppJavascriptVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppJavascriptVersion)(nil)).Elem()
}

func (o WebAppJavascriptVersionOutput) ToWebAppJavascriptVersionOutput() WebAppJavascriptVersionOutput {
	return o
}

func (o WebAppJavascriptVersionOutput) ToWebAppJavascriptVersionOutputWithContext(ctx context.Context) WebAppJavascriptVersionOutput {
	return o
}

// Choose custom version
func (o WebAppJavascriptVersionOutput) CustomJavascriptVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppJavascriptVersion) pulumi.StringPtrOutput { return v.CustomJavascriptVersion }).(pulumi.StringPtrOutput)
}

type WebAppJavascriptVersionArrayOutput struct{ *pulumi.OutputState }

func (WebAppJavascriptVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppJavascriptVersion)(nil)).Elem()
}

func (o WebAppJavascriptVersionArrayOutput) ToWebAppJavascriptVersionArrayOutput() WebAppJavascriptVersionArrayOutput {
	return o
}

func (o WebAppJavascriptVersionArrayOutput) ToWebAppJavascriptVersionArrayOutputWithContext(ctx context.Context) WebAppJavascriptVersionArrayOutput {
	return o
}

func (o WebAppJavascriptVersionArrayOutput) Index(i pulumi.IntInput) WebAppJavascriptVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAppJavascriptVersion {
		return vs[0].([]*WebAppJavascriptVersion)[vs[1].(int)]
	}).(WebAppJavascriptVersionOutput)
}

type WebAppJavascriptVersionMapOutput struct{ *pulumi.OutputState }

func (WebAppJavascriptVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppJavascriptVersion)(nil)).Elem()
}

func (o WebAppJavascriptVersionMapOutput) ToWebAppJavascriptVersionMapOutput() WebAppJavascriptVersionMapOutput {
	return o
}

func (o WebAppJavascriptVersionMapOutput) ToWebAppJavascriptVersionMapOutputWithContext(ctx context.Context) WebAppJavascriptVersionMapOutput {
	return o
}

func (o WebAppJavascriptVersionMapOutput) MapIndex(k pulumi.StringInput) WebAppJavascriptVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAppJavascriptVersion {
		return vs[0].(map[string]*WebAppJavascriptVersion)[vs[1].(string)]
	}).(WebAppJavascriptVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppJavascriptVersionInput)(nil)).Elem(), &WebAppJavascriptVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppJavascriptVersionArrayInput)(nil)).Elem(), WebAppJavascriptVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppJavascriptVersionMapInput)(nil)).Elem(), WebAppJavascriptVersionMap{})
	pulumi.RegisterOutputType(WebAppJavascriptVersionOutput{})
	pulumi.RegisterOutputType(WebAppJavascriptVersionArrayOutput{})
	pulumi.RegisterOutputType(WebAppJavascriptVersionMapOutput{})
}
