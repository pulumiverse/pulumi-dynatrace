// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The management zones data source allows retrieval of all management zones.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := dynatrace.GetManagementZones(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = dynatrace.NewCalculatedServiceMetric(ctx, "#name#", &dynatrace.CalculatedServiceMetricArgs{
//				Enabled: pulumi.Bool(true),
//				ManagementZones: pulumi.StringArray{
//					pulumi.String(test.Values[0].Id),
//				},
//				MetricKey: pulumi.String("calc:service.#name#"),
//				Unit:      pulumi.String("MILLI_SECOND_PER_MINUTE"),
//				Conditions: dynatrace.CalculatedServiceMetricConditionArray{
//					&dynatrace.CalculatedServiceMetricConditionArgs{
//						Conditions: dynatrace.CalculatedServiceMetricConditionConditionArray{
//							&dynatrace.CalculatedServiceMetricConditionConditionArgs{
//								Attribute: pulumi.String("HTTP_REQUEST_METHOD"),
//								Comparison: &dynatrace.CalculatedServiceMetricConditionConditionComparisonArgs{
//									Negate: pulumi.Bool(false),
//									HttpMethod: &dynatrace.CalculatedServiceMetricConditionConditionComparisonHttpMethodArgs{
//										Operator: pulumi.String("EQUALS_ANY_OF"),
//										Values: pulumi.StringArray{
//											pulumi.String("POST"),
//											pulumi.String("GET"),
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//				MetricDefinition: &dynatrace.CalculatedServiceMetricMetricDefinitionArgs{
//					Metric:           pulumi.String("REQUEST_ATTRIBUTE"),
//					RequestAttribute: pulumi.String("foo"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetManagementZones(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetManagementZonesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetManagementZonesResult
	err := ctx.Invoke("dynatrace:index/getManagementZones:getManagementZones", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getManagementZones.
type GetManagementZonesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id     string                    `pulumi:"id"`
	Values []GetManagementZonesValue `pulumi:"values"`
}

func GetManagementZonesOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetManagementZonesResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetManagementZonesResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("dynatrace:index/getManagementZones:getManagementZones", nil, GetManagementZonesResultOutput{}, options).(GetManagementZonesResultOutput), nil
	}).(GetManagementZonesResultOutput)
}

// A collection of values returned by getManagementZones.
type GetManagementZonesResultOutput struct{ *pulumi.OutputState }

func (GetManagementZonesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementZonesResult)(nil)).Elem()
}

func (o GetManagementZonesResultOutput) ToGetManagementZonesResultOutput() GetManagementZonesResultOutput {
	return o
}

func (o GetManagementZonesResultOutput) ToGetManagementZonesResultOutputWithContext(ctx context.Context) GetManagementZonesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetManagementZonesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetManagementZonesResultOutput) Values() GetManagementZonesValueArrayOutput {
	return o.ApplyT(func(v GetManagementZonesResult) []GetManagementZonesValue { return v.Values }).(GetManagementZonesValueArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetManagementZonesResultOutput{})
}
