// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type ServiceExternalWebRequest struct {
	pulumi.CustomResourceState

	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions ServiceExternalWebRequestConditionsPtrOutput `pulumi:"conditions"`
	// Description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.
	IdContributors ServiceExternalWebRequestIdContributorsOutput `pulumi:"idContributors"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringOutput `pulumi:"insertAfter"`
	// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
	ManagementZones pulumi.StringArrayOutput `pulumi:"managementZones"`
	// Rule name
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewServiceExternalWebRequest registers a new resource with the given unique name, arguments, and options.
func NewServiceExternalWebRequest(ctx *pulumi.Context,
	name string, args *ServiceExternalWebRequestArgs, opts ...pulumi.ResourceOption) (*ServiceExternalWebRequest, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.IdContributors == nil {
		return nil, errors.New("invalid value for required argument 'IdContributors'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceExternalWebRequest
	err := ctx.RegisterResource("dynatrace:index/serviceExternalWebRequest:ServiceExternalWebRequest", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceExternalWebRequest gets an existing ServiceExternalWebRequest resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceExternalWebRequest(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceExternalWebRequestState, opts ...pulumi.ResourceOption) (*ServiceExternalWebRequest, error) {
	var resource ServiceExternalWebRequest
	err := ctx.ReadResource("dynatrace:index/serviceExternalWebRequest:ServiceExternalWebRequest", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceExternalWebRequest resources.
type serviceExternalWebRequestState struct {
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions *ServiceExternalWebRequestConditions `pulumi:"conditions"`
	// Description
	Description *string `pulumi:"description"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.
	IdContributors *ServiceExternalWebRequestIdContributors `pulumi:"idContributors"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
	ManagementZones []string `pulumi:"managementZones"`
	// Rule name
	Name *string `pulumi:"name"`
}

type ServiceExternalWebRequestState struct {
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions ServiceExternalWebRequestConditionsPtrInput
	// Description
	Description pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.
	IdContributors ServiceExternalWebRequestIdContributorsPtrInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
	ManagementZones pulumi.StringArrayInput
	// Rule name
	Name pulumi.StringPtrInput
}

func (ServiceExternalWebRequestState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceExternalWebRequestState)(nil)).Elem()
}

type serviceExternalWebRequestArgs struct {
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions *ServiceExternalWebRequestConditions `pulumi:"conditions"`
	// Description
	Description *string `pulumi:"description"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.
	IdContributors ServiceExternalWebRequestIdContributors `pulumi:"idContributors"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
	ManagementZones []string `pulumi:"managementZones"`
	// Rule name
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ServiceExternalWebRequest resource.
type ServiceExternalWebRequestArgs struct {
	// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
	Conditions ServiceExternalWebRequestConditionsPtrInput
	// Description
	Description pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.
	IdContributors ServiceExternalWebRequestIdContributorsInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
	ManagementZones pulumi.StringArrayInput
	// Rule name
	Name pulumi.StringPtrInput
}

func (ServiceExternalWebRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceExternalWebRequestArgs)(nil)).Elem()
}

type ServiceExternalWebRequestInput interface {
	pulumi.Input

	ToServiceExternalWebRequestOutput() ServiceExternalWebRequestOutput
	ToServiceExternalWebRequestOutputWithContext(ctx context.Context) ServiceExternalWebRequestOutput
}

func (*ServiceExternalWebRequest) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceExternalWebRequest)(nil)).Elem()
}

func (i *ServiceExternalWebRequest) ToServiceExternalWebRequestOutput() ServiceExternalWebRequestOutput {
	return i.ToServiceExternalWebRequestOutputWithContext(context.Background())
}

func (i *ServiceExternalWebRequest) ToServiceExternalWebRequestOutputWithContext(ctx context.Context) ServiceExternalWebRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceExternalWebRequestOutput)
}

// ServiceExternalWebRequestArrayInput is an input type that accepts ServiceExternalWebRequestArray and ServiceExternalWebRequestArrayOutput values.
// You can construct a concrete instance of `ServiceExternalWebRequestArrayInput` via:
//
//	ServiceExternalWebRequestArray{ ServiceExternalWebRequestArgs{...} }
type ServiceExternalWebRequestArrayInput interface {
	pulumi.Input

	ToServiceExternalWebRequestArrayOutput() ServiceExternalWebRequestArrayOutput
	ToServiceExternalWebRequestArrayOutputWithContext(context.Context) ServiceExternalWebRequestArrayOutput
}

type ServiceExternalWebRequestArray []ServiceExternalWebRequestInput

func (ServiceExternalWebRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceExternalWebRequest)(nil)).Elem()
}

func (i ServiceExternalWebRequestArray) ToServiceExternalWebRequestArrayOutput() ServiceExternalWebRequestArrayOutput {
	return i.ToServiceExternalWebRequestArrayOutputWithContext(context.Background())
}

func (i ServiceExternalWebRequestArray) ToServiceExternalWebRequestArrayOutputWithContext(ctx context.Context) ServiceExternalWebRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceExternalWebRequestArrayOutput)
}

// ServiceExternalWebRequestMapInput is an input type that accepts ServiceExternalWebRequestMap and ServiceExternalWebRequestMapOutput values.
// You can construct a concrete instance of `ServiceExternalWebRequestMapInput` via:
//
//	ServiceExternalWebRequestMap{ "key": ServiceExternalWebRequestArgs{...} }
type ServiceExternalWebRequestMapInput interface {
	pulumi.Input

	ToServiceExternalWebRequestMapOutput() ServiceExternalWebRequestMapOutput
	ToServiceExternalWebRequestMapOutputWithContext(context.Context) ServiceExternalWebRequestMapOutput
}

type ServiceExternalWebRequestMap map[string]ServiceExternalWebRequestInput

func (ServiceExternalWebRequestMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceExternalWebRequest)(nil)).Elem()
}

func (i ServiceExternalWebRequestMap) ToServiceExternalWebRequestMapOutput() ServiceExternalWebRequestMapOutput {
	return i.ToServiceExternalWebRequestMapOutputWithContext(context.Background())
}

func (i ServiceExternalWebRequestMap) ToServiceExternalWebRequestMapOutputWithContext(ctx context.Context) ServiceExternalWebRequestMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceExternalWebRequestMapOutput)
}

type ServiceExternalWebRequestOutput struct{ *pulumi.OutputState }

func (ServiceExternalWebRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceExternalWebRequest)(nil)).Elem()
}

func (o ServiceExternalWebRequestOutput) ToServiceExternalWebRequestOutput() ServiceExternalWebRequestOutput {
	return o
}

func (o ServiceExternalWebRequestOutput) ToServiceExternalWebRequestOutputWithContext(ctx context.Context) ServiceExternalWebRequestOutput {
	return o
}

// A list of conditions necessary for the rule to take effect. If multiple conditions are specified, they must **all** match a Request for the rule to apply. If there is no condition at all, the rule is always applied. Conditions are evaluated against attributes, but do not modify them.
func (o ServiceExternalWebRequestOutput) Conditions() ServiceExternalWebRequestConditionsPtrOutput {
	return o.ApplyT(func(v *ServiceExternalWebRequest) ServiceExternalWebRequestConditionsPtrOutput { return v.Conditions }).(ServiceExternalWebRequestConditionsPtrOutput)
}

// Description
func (o ServiceExternalWebRequestOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceExternalWebRequest) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o ServiceExternalWebRequestOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ServiceExternalWebRequest) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Contributors to the Service Identifier calculation. All of the Contributors except for the port are always applied. You can exclude the port contribution by disabling the switch.
func (o ServiceExternalWebRequestOutput) IdContributors() ServiceExternalWebRequestIdContributorsOutput {
	return o.ApplyT(func(v *ServiceExternalWebRequest) ServiceExternalWebRequestIdContributorsOutput {
		return v.IdContributors
	}).(ServiceExternalWebRequestIdContributorsOutput)
}

// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
func (o ServiceExternalWebRequestOutput) InsertAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceExternalWebRequest) pulumi.StringOutput { return v.InsertAfter }).(pulumi.StringOutput)
}

// Define a management zone of the process group for which this service detection rule should be created.  Note: in case of external requests/services the PG might not always be known. See [here](https://dt-url.net/9i03b79)
func (o ServiceExternalWebRequestOutput) ManagementZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceExternalWebRequest) pulumi.StringArrayOutput { return v.ManagementZones }).(pulumi.StringArrayOutput)
}

// Rule name
func (o ServiceExternalWebRequestOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceExternalWebRequest) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ServiceExternalWebRequestArrayOutput struct{ *pulumi.OutputState }

func (ServiceExternalWebRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceExternalWebRequest)(nil)).Elem()
}

func (o ServiceExternalWebRequestArrayOutput) ToServiceExternalWebRequestArrayOutput() ServiceExternalWebRequestArrayOutput {
	return o
}

func (o ServiceExternalWebRequestArrayOutput) ToServiceExternalWebRequestArrayOutputWithContext(ctx context.Context) ServiceExternalWebRequestArrayOutput {
	return o
}

func (o ServiceExternalWebRequestArrayOutput) Index(i pulumi.IntInput) ServiceExternalWebRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceExternalWebRequest {
		return vs[0].([]*ServiceExternalWebRequest)[vs[1].(int)]
	}).(ServiceExternalWebRequestOutput)
}

type ServiceExternalWebRequestMapOutput struct{ *pulumi.OutputState }

func (ServiceExternalWebRequestMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceExternalWebRequest)(nil)).Elem()
}

func (o ServiceExternalWebRequestMapOutput) ToServiceExternalWebRequestMapOutput() ServiceExternalWebRequestMapOutput {
	return o
}

func (o ServiceExternalWebRequestMapOutput) ToServiceExternalWebRequestMapOutputWithContext(ctx context.Context) ServiceExternalWebRequestMapOutput {
	return o
}

func (o ServiceExternalWebRequestMapOutput) MapIndex(k pulumi.StringInput) ServiceExternalWebRequestOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceExternalWebRequest {
		return vs[0].(map[string]*ServiceExternalWebRequest)[vs[1].(string)]
	}).(ServiceExternalWebRequestOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceExternalWebRequestInput)(nil)).Elem(), &ServiceExternalWebRequest{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceExternalWebRequestArrayInput)(nil)).Elem(), ServiceExternalWebRequestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceExternalWebRequestMapInput)(nil)).Elem(), ServiceExternalWebRequestMap{})
	pulumi.RegisterOutputType(ServiceExternalWebRequestOutput{})
	pulumi.RegisterOutputType(ServiceExternalWebRequestArrayOutput{})
	pulumi.RegisterOutputType(ServiceExternalWebRequestMapOutput{})
}
