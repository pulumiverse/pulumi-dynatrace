// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The entities data source allows all entities to be retrieved by its type.
//
// - `type` (String) Type of the entity, e.g. SERVICE. All available entity types can be retrieved with [/api/v2/entityTypes](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/entity-v2/get-all-entity-types).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := dynatrace.GetEntities(ctx, &dynatrace.GetEntitiesArgs{
//				Type: pulumi.StringRef("SERVICE"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("serviceList", test.Entities)
//			return nil
//		})
//	}
//
// ```
func GetEntities(ctx *pulumi.Context, args *GetEntitiesArgs, opts ...pulumi.InvokeOption) (*GetEntitiesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEntitiesResult
	err := ctx.Invoke("dynatrace:index/getEntities:getEntities", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEntities.
type GetEntitiesArgs struct {
	EntitySelector *string `pulumi:"entitySelector"`
	From           *string `pulumi:"from"`
	To             *string `pulumi:"to"`
	Type           *string `pulumi:"type"`
}

// A collection of values returned by getEntities.
type GetEntitiesResult struct {
	Entities       []GetEntitiesEntity `pulumi:"entities"`
	EntitySelector *string             `pulumi:"entitySelector"`
	From           *string             `pulumi:"from"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	To   *string `pulumi:"to"`
	Type *string `pulumi:"type"`
}

func GetEntitiesOutput(ctx *pulumi.Context, args GetEntitiesOutputArgs, opts ...pulumi.InvokeOption) GetEntitiesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEntitiesResultOutput, error) {
			args := v.(GetEntitiesArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetEntitiesResult
			secret, err := ctx.InvokePackageRaw("dynatrace:index/getEntities:getEntities", args, &rv, "", opts...)
			if err != nil {
				return GetEntitiesResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetEntitiesResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetEntitiesResultOutput), nil
			}
			return output, nil
		}).(GetEntitiesResultOutput)
}

// A collection of arguments for invoking getEntities.
type GetEntitiesOutputArgs struct {
	EntitySelector pulumi.StringPtrInput `pulumi:"entitySelector"`
	From           pulumi.StringPtrInput `pulumi:"from"`
	To             pulumi.StringPtrInput `pulumi:"to"`
	Type           pulumi.StringPtrInput `pulumi:"type"`
}

func (GetEntitiesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesArgs)(nil)).Elem()
}

// A collection of values returned by getEntities.
type GetEntitiesResultOutput struct{ *pulumi.OutputState }

func (GetEntitiesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesResult)(nil)).Elem()
}

func (o GetEntitiesResultOutput) ToGetEntitiesResultOutput() GetEntitiesResultOutput {
	return o
}

func (o GetEntitiesResultOutput) ToGetEntitiesResultOutputWithContext(ctx context.Context) GetEntitiesResultOutput {
	return o
}

func (o GetEntitiesResultOutput) Entities() GetEntitiesEntityArrayOutput {
	return o.ApplyT(func(v GetEntitiesResult) []GetEntitiesEntity { return v.Entities }).(GetEntitiesEntityArrayOutput)
}

func (o GetEntitiesResultOutput) EntitySelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesResult) *string { return v.EntitySelector }).(pulumi.StringPtrOutput)
}

func (o GetEntitiesResultOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesResult) *string { return v.From }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEntitiesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEntitiesResultOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesResult) *string { return v.To }).(pulumi.StringPtrOutput)
}

func (o GetEntitiesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEntitiesResultOutput{})
}
