// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The `RequestAttribute` data source allows the request attribute ID to be retrieved by its name.
//
// - `name` (String) - The name of the request attribute
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := dynatrace.LookupRequestAttribute(ctx, &dynatrace.LookupRequestAttributeArgs{
//				Name: "Terraform Example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupRequestAttribute(ctx *pulumi.Context, args *LookupRequestAttributeArgs, opts ...pulumi.InvokeOption) (*LookupRequestAttributeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRequestAttributeResult
	err := ctx.Invoke("dynatrace:index/getRequestAttribute:getRequestAttribute", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRequestAttribute.
type LookupRequestAttributeArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getRequestAttribute.
type LookupRequestAttributeResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupRequestAttributeOutput(ctx *pulumi.Context, args LookupRequestAttributeOutputArgs, opts ...pulumi.InvokeOption) LookupRequestAttributeResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRequestAttributeResultOutput, error) {
			args := v.(LookupRequestAttributeArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getRequestAttribute:getRequestAttribute", args, LookupRequestAttributeResultOutput{}, options).(LookupRequestAttributeResultOutput), nil
		}).(LookupRequestAttributeResultOutput)
}

// A collection of arguments for invoking getRequestAttribute.
type LookupRequestAttributeOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupRequestAttributeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRequestAttributeArgs)(nil)).Elem()
}

// A collection of values returned by getRequestAttribute.
type LookupRequestAttributeResultOutput struct{ *pulumi.OutputState }

func (LookupRequestAttributeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRequestAttributeResult)(nil)).Elem()
}

func (o LookupRequestAttributeResultOutput) ToLookupRequestAttributeResultOutput() LookupRequestAttributeResultOutput {
	return o
}

func (o LookupRequestAttributeResultOutput) ToLookupRequestAttributeResultOutputWithContext(ctx context.Context) LookupRequestAttributeResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRequestAttributeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestAttributeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRequestAttributeResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRequestAttributeResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRequestAttributeResultOutput{})
}
