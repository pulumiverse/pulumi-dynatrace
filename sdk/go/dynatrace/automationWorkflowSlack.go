// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type AutomationWorkflowSlack struct {
	pulumi.CustomResourceState

	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	//
	// Deprecated: This resource is no longer ordered, please remove this attribute from the configuration
	InsertAfter pulumi.StringOutput `pulumi:"insertAfter"`
	// The name of the Slack connection
	Name pulumi.StringOutput `pulumi:"name"`
	// The bot token obtained from the Slack App Management UI
	Token pulumi.StringOutput `pulumi:"token"`
}

// NewAutomationWorkflowSlack registers a new resource with the given unique name, arguments, and options.
func NewAutomationWorkflowSlack(ctx *pulumi.Context,
	name string, args *AutomationWorkflowSlackArgs, opts ...pulumi.ResourceOption) (*AutomationWorkflowSlack, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Token == nil {
		return nil, errors.New("invalid value for required argument 'Token'")
	}
	if args.Token != nil {
		args.Token = pulumi.ToSecret(args.Token).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"token",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutomationWorkflowSlack
	err := ctx.RegisterResource("dynatrace:index/automationWorkflowSlack:AutomationWorkflowSlack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutomationWorkflowSlack gets an existing AutomationWorkflowSlack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutomationWorkflowSlack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutomationWorkflowSlackState, opts ...pulumi.ResourceOption) (*AutomationWorkflowSlack, error) {
	var resource AutomationWorkflowSlack
	err := ctx.ReadResource("dynatrace:index/automationWorkflowSlack:AutomationWorkflowSlack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutomationWorkflowSlack resources.
type automationWorkflowSlackState struct {
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	//
	// Deprecated: This resource is no longer ordered, please remove this attribute from the configuration
	InsertAfter *string `pulumi:"insertAfter"`
	// The name of the Slack connection
	Name *string `pulumi:"name"`
	// The bot token obtained from the Slack App Management UI
	Token *string `pulumi:"token"`
}

type AutomationWorkflowSlackState struct {
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	//
	// Deprecated: This resource is no longer ordered, please remove this attribute from the configuration
	InsertAfter pulumi.StringPtrInput
	// The name of the Slack connection
	Name pulumi.StringPtrInput
	// The bot token obtained from the Slack App Management UI
	Token pulumi.StringPtrInput
}

func (AutomationWorkflowSlackState) ElementType() reflect.Type {
	return reflect.TypeOf((*automationWorkflowSlackState)(nil)).Elem()
}

type automationWorkflowSlackArgs struct {
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	//
	// Deprecated: This resource is no longer ordered, please remove this attribute from the configuration
	InsertAfter *string `pulumi:"insertAfter"`
	// The name of the Slack connection
	Name *string `pulumi:"name"`
	// The bot token obtained from the Slack App Management UI
	Token string `pulumi:"token"`
}

// The set of arguments for constructing a AutomationWorkflowSlack resource.
type AutomationWorkflowSlackArgs struct {
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	//
	// Deprecated: This resource is no longer ordered, please remove this attribute from the configuration
	InsertAfter pulumi.StringPtrInput
	// The name of the Slack connection
	Name pulumi.StringPtrInput
	// The bot token obtained from the Slack App Management UI
	Token pulumi.StringInput
}

func (AutomationWorkflowSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*automationWorkflowSlackArgs)(nil)).Elem()
}

type AutomationWorkflowSlackInput interface {
	pulumi.Input

	ToAutomationWorkflowSlackOutput() AutomationWorkflowSlackOutput
	ToAutomationWorkflowSlackOutputWithContext(ctx context.Context) AutomationWorkflowSlackOutput
}

func (*AutomationWorkflowSlack) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationWorkflowSlack)(nil)).Elem()
}

func (i *AutomationWorkflowSlack) ToAutomationWorkflowSlackOutput() AutomationWorkflowSlackOutput {
	return i.ToAutomationWorkflowSlackOutputWithContext(context.Background())
}

func (i *AutomationWorkflowSlack) ToAutomationWorkflowSlackOutputWithContext(ctx context.Context) AutomationWorkflowSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationWorkflowSlackOutput)
}

// AutomationWorkflowSlackArrayInput is an input type that accepts AutomationWorkflowSlackArray and AutomationWorkflowSlackArrayOutput values.
// You can construct a concrete instance of `AutomationWorkflowSlackArrayInput` via:
//
//	AutomationWorkflowSlackArray{ AutomationWorkflowSlackArgs{...} }
type AutomationWorkflowSlackArrayInput interface {
	pulumi.Input

	ToAutomationWorkflowSlackArrayOutput() AutomationWorkflowSlackArrayOutput
	ToAutomationWorkflowSlackArrayOutputWithContext(context.Context) AutomationWorkflowSlackArrayOutput
}

type AutomationWorkflowSlackArray []AutomationWorkflowSlackInput

func (AutomationWorkflowSlackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutomationWorkflowSlack)(nil)).Elem()
}

func (i AutomationWorkflowSlackArray) ToAutomationWorkflowSlackArrayOutput() AutomationWorkflowSlackArrayOutput {
	return i.ToAutomationWorkflowSlackArrayOutputWithContext(context.Background())
}

func (i AutomationWorkflowSlackArray) ToAutomationWorkflowSlackArrayOutputWithContext(ctx context.Context) AutomationWorkflowSlackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationWorkflowSlackArrayOutput)
}

// AutomationWorkflowSlackMapInput is an input type that accepts AutomationWorkflowSlackMap and AutomationWorkflowSlackMapOutput values.
// You can construct a concrete instance of `AutomationWorkflowSlackMapInput` via:
//
//	AutomationWorkflowSlackMap{ "key": AutomationWorkflowSlackArgs{...} }
type AutomationWorkflowSlackMapInput interface {
	pulumi.Input

	ToAutomationWorkflowSlackMapOutput() AutomationWorkflowSlackMapOutput
	ToAutomationWorkflowSlackMapOutputWithContext(context.Context) AutomationWorkflowSlackMapOutput
}

type AutomationWorkflowSlackMap map[string]AutomationWorkflowSlackInput

func (AutomationWorkflowSlackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutomationWorkflowSlack)(nil)).Elem()
}

func (i AutomationWorkflowSlackMap) ToAutomationWorkflowSlackMapOutput() AutomationWorkflowSlackMapOutput {
	return i.ToAutomationWorkflowSlackMapOutputWithContext(context.Background())
}

func (i AutomationWorkflowSlackMap) ToAutomationWorkflowSlackMapOutputWithContext(ctx context.Context) AutomationWorkflowSlackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationWorkflowSlackMapOutput)
}

type AutomationWorkflowSlackOutput struct{ *pulumi.OutputState }

func (AutomationWorkflowSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationWorkflowSlack)(nil)).Elem()
}

func (o AutomationWorkflowSlackOutput) ToAutomationWorkflowSlackOutput() AutomationWorkflowSlackOutput {
	return o
}

func (o AutomationWorkflowSlackOutput) ToAutomationWorkflowSlackOutputWithContext(ctx context.Context) AutomationWorkflowSlackOutput {
	return o
}

// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
//
// Deprecated: This resource is no longer ordered, please remove this attribute from the configuration
func (o AutomationWorkflowSlackOutput) InsertAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *AutomationWorkflowSlack) pulumi.StringOutput { return v.InsertAfter }).(pulumi.StringOutput)
}

// The name of the Slack connection
func (o AutomationWorkflowSlackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AutomationWorkflowSlack) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The bot token obtained from the Slack App Management UI
func (o AutomationWorkflowSlackOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v *AutomationWorkflowSlack) pulumi.StringOutput { return v.Token }).(pulumi.StringOutput)
}

type AutomationWorkflowSlackArrayOutput struct{ *pulumi.OutputState }

func (AutomationWorkflowSlackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutomationWorkflowSlack)(nil)).Elem()
}

func (o AutomationWorkflowSlackArrayOutput) ToAutomationWorkflowSlackArrayOutput() AutomationWorkflowSlackArrayOutput {
	return o
}

func (o AutomationWorkflowSlackArrayOutput) ToAutomationWorkflowSlackArrayOutputWithContext(ctx context.Context) AutomationWorkflowSlackArrayOutput {
	return o
}

func (o AutomationWorkflowSlackArrayOutput) Index(i pulumi.IntInput) AutomationWorkflowSlackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutomationWorkflowSlack {
		return vs[0].([]*AutomationWorkflowSlack)[vs[1].(int)]
	}).(AutomationWorkflowSlackOutput)
}

type AutomationWorkflowSlackMapOutput struct{ *pulumi.OutputState }

func (AutomationWorkflowSlackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutomationWorkflowSlack)(nil)).Elem()
}

func (o AutomationWorkflowSlackMapOutput) ToAutomationWorkflowSlackMapOutput() AutomationWorkflowSlackMapOutput {
	return o
}

func (o AutomationWorkflowSlackMapOutput) ToAutomationWorkflowSlackMapOutputWithContext(ctx context.Context) AutomationWorkflowSlackMapOutput {
	return o
}

func (o AutomationWorkflowSlackMapOutput) MapIndex(k pulumi.StringInput) AutomationWorkflowSlackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutomationWorkflowSlack {
		return vs[0].(map[string]*AutomationWorkflowSlack)[vs[1].(string)]
	}).(AutomationWorkflowSlackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationWorkflowSlackInput)(nil)).Elem(), &AutomationWorkflowSlack{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationWorkflowSlackArrayInput)(nil)).Elem(), AutomationWorkflowSlackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationWorkflowSlackMapInput)(nil)).Elem(), AutomationWorkflowSlackMap{})
	pulumi.RegisterOutputType(AutomationWorkflowSlackOutput{})
	pulumi.RegisterOutputType(AutomationWorkflowSlackArrayOutput{})
	pulumi.RegisterOutputType(AutomationWorkflowSlackMapOutput{})
}
