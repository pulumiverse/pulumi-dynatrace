// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type WebAppRequestErrors struct {
	pulumi.CustomResourceState

	// (Field has overlap with `ApplicationErrorRules`)
	ErrorRules WebAppRequestErrorsErrorRulesPtrOutput `pulumi:"errorRules"`
	// (Field has overlap with `ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreRequestErrorsInApdexCalculation pulumi.BoolOutput `pulumi:"ignoreRequestErrorsInApdexCalculation"`
	// The scope of this setting (APPLICATION)
	Scope pulumi.StringOutput `pulumi:"scope"`
}

// NewWebAppRequestErrors registers a new resource with the given unique name, arguments, and options.
func NewWebAppRequestErrors(ctx *pulumi.Context,
	name string, args *WebAppRequestErrorsArgs, opts ...pulumi.ResourceOption) (*WebAppRequestErrors, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IgnoreRequestErrorsInApdexCalculation == nil {
		return nil, errors.New("invalid value for required argument 'IgnoreRequestErrorsInApdexCalculation'")
	}
	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAppRequestErrors
	err := ctx.RegisterResource("dynatrace:index/webAppRequestErrors:WebAppRequestErrors", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppRequestErrors gets an existing WebAppRequestErrors resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppRequestErrors(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppRequestErrorsState, opts ...pulumi.ResourceOption) (*WebAppRequestErrors, error) {
	var resource WebAppRequestErrors
	err := ctx.ReadResource("dynatrace:index/webAppRequestErrors:WebAppRequestErrors", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppRequestErrors resources.
type webAppRequestErrorsState struct {
	// (Field has overlap with `ApplicationErrorRules`)
	ErrorRules *WebAppRequestErrorsErrorRules `pulumi:"errorRules"`
	// (Field has overlap with `ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreRequestErrorsInApdexCalculation *bool `pulumi:"ignoreRequestErrorsInApdexCalculation"`
	// The scope of this setting (APPLICATION)
	Scope *string `pulumi:"scope"`
}

type WebAppRequestErrorsState struct {
	// (Field has overlap with `ApplicationErrorRules`)
	ErrorRules WebAppRequestErrorsErrorRulesPtrInput
	// (Field has overlap with `ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreRequestErrorsInApdexCalculation pulumi.BoolPtrInput
	// The scope of this setting (APPLICATION)
	Scope pulumi.StringPtrInput
}

func (WebAppRequestErrorsState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppRequestErrorsState)(nil)).Elem()
}

type webAppRequestErrorsArgs struct {
	// (Field has overlap with `ApplicationErrorRules`)
	ErrorRules *WebAppRequestErrorsErrorRules `pulumi:"errorRules"`
	// (Field has overlap with `ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreRequestErrorsInApdexCalculation bool `pulumi:"ignoreRequestErrorsInApdexCalculation"`
	// The scope of this setting (APPLICATION)
	Scope string `pulumi:"scope"`
}

// The set of arguments for constructing a WebAppRequestErrors resource.
type WebAppRequestErrorsArgs struct {
	// (Field has overlap with `ApplicationErrorRules`)
	ErrorRules WebAppRequestErrorsErrorRulesPtrInput
	// (Field has overlap with `ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below
	IgnoreRequestErrorsInApdexCalculation pulumi.BoolInput
	// The scope of this setting (APPLICATION)
	Scope pulumi.StringInput
}

func (WebAppRequestErrorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppRequestErrorsArgs)(nil)).Elem()
}

type WebAppRequestErrorsInput interface {
	pulumi.Input

	ToWebAppRequestErrorsOutput() WebAppRequestErrorsOutput
	ToWebAppRequestErrorsOutputWithContext(ctx context.Context) WebAppRequestErrorsOutput
}

func (*WebAppRequestErrors) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppRequestErrors)(nil)).Elem()
}

func (i *WebAppRequestErrors) ToWebAppRequestErrorsOutput() WebAppRequestErrorsOutput {
	return i.ToWebAppRequestErrorsOutputWithContext(context.Background())
}

func (i *WebAppRequestErrors) ToWebAppRequestErrorsOutputWithContext(ctx context.Context) WebAppRequestErrorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsOutput)
}

// WebAppRequestErrorsArrayInput is an input type that accepts WebAppRequestErrorsArray and WebAppRequestErrorsArrayOutput values.
// You can construct a concrete instance of `WebAppRequestErrorsArrayInput` via:
//
//	WebAppRequestErrorsArray{ WebAppRequestErrorsArgs{...} }
type WebAppRequestErrorsArrayInput interface {
	pulumi.Input

	ToWebAppRequestErrorsArrayOutput() WebAppRequestErrorsArrayOutput
	ToWebAppRequestErrorsArrayOutputWithContext(context.Context) WebAppRequestErrorsArrayOutput
}

type WebAppRequestErrorsArray []WebAppRequestErrorsInput

func (WebAppRequestErrorsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppRequestErrors)(nil)).Elem()
}

func (i WebAppRequestErrorsArray) ToWebAppRequestErrorsArrayOutput() WebAppRequestErrorsArrayOutput {
	return i.ToWebAppRequestErrorsArrayOutputWithContext(context.Background())
}

func (i WebAppRequestErrorsArray) ToWebAppRequestErrorsArrayOutputWithContext(ctx context.Context) WebAppRequestErrorsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsArrayOutput)
}

// WebAppRequestErrorsMapInput is an input type that accepts WebAppRequestErrorsMap and WebAppRequestErrorsMapOutput values.
// You can construct a concrete instance of `WebAppRequestErrorsMapInput` via:
//
//	WebAppRequestErrorsMap{ "key": WebAppRequestErrorsArgs{...} }
type WebAppRequestErrorsMapInput interface {
	pulumi.Input

	ToWebAppRequestErrorsMapOutput() WebAppRequestErrorsMapOutput
	ToWebAppRequestErrorsMapOutputWithContext(context.Context) WebAppRequestErrorsMapOutput
}

type WebAppRequestErrorsMap map[string]WebAppRequestErrorsInput

func (WebAppRequestErrorsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppRequestErrors)(nil)).Elem()
}

func (i WebAppRequestErrorsMap) ToWebAppRequestErrorsMapOutput() WebAppRequestErrorsMapOutput {
	return i.ToWebAppRequestErrorsMapOutputWithContext(context.Background())
}

func (i WebAppRequestErrorsMap) ToWebAppRequestErrorsMapOutputWithContext(ctx context.Context) WebAppRequestErrorsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsMapOutput)
}

type WebAppRequestErrorsOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppRequestErrors)(nil)).Elem()
}

func (o WebAppRequestErrorsOutput) ToWebAppRequestErrorsOutput() WebAppRequestErrorsOutput {
	return o
}

func (o WebAppRequestErrorsOutput) ToWebAppRequestErrorsOutputWithContext(ctx context.Context) WebAppRequestErrorsOutput {
	return o
}

// (Field has overlap with `ApplicationErrorRules`)
func (o WebAppRequestErrorsOutput) ErrorRules() WebAppRequestErrorsErrorRulesPtrOutput {
	return o.ApplyT(func(v *WebAppRequestErrors) WebAppRequestErrorsErrorRulesPtrOutput { return v.ErrorRules }).(WebAppRequestErrorsErrorRulesPtrOutput)
}

// (Field has overlap with `ApplicationErrorRules`) This setting overrides Apdex settings for individual rules listed below
func (o WebAppRequestErrorsOutput) IgnoreRequestErrorsInApdexCalculation() pulumi.BoolOutput {
	return o.ApplyT(func(v *WebAppRequestErrors) pulumi.BoolOutput { return v.IgnoreRequestErrorsInApdexCalculation }).(pulumi.BoolOutput)
}

// The scope of this setting (APPLICATION)
func (o WebAppRequestErrorsOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppRequestErrors) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

type WebAppRequestErrorsArrayOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppRequestErrors)(nil)).Elem()
}

func (o WebAppRequestErrorsArrayOutput) ToWebAppRequestErrorsArrayOutput() WebAppRequestErrorsArrayOutput {
	return o
}

func (o WebAppRequestErrorsArrayOutput) ToWebAppRequestErrorsArrayOutputWithContext(ctx context.Context) WebAppRequestErrorsArrayOutput {
	return o
}

func (o WebAppRequestErrorsArrayOutput) Index(i pulumi.IntInput) WebAppRequestErrorsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAppRequestErrors {
		return vs[0].([]*WebAppRequestErrors)[vs[1].(int)]
	}).(WebAppRequestErrorsOutput)
}

type WebAppRequestErrorsMapOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppRequestErrors)(nil)).Elem()
}

func (o WebAppRequestErrorsMapOutput) ToWebAppRequestErrorsMapOutput() WebAppRequestErrorsMapOutput {
	return o
}

func (o WebAppRequestErrorsMapOutput) ToWebAppRequestErrorsMapOutputWithContext(ctx context.Context) WebAppRequestErrorsMapOutput {
	return o
}

func (o WebAppRequestErrorsMapOutput) MapIndex(k pulumi.StringInput) WebAppRequestErrorsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAppRequestErrors {
		return vs[0].(map[string]*WebAppRequestErrors)[vs[1].(string)]
	}).(WebAppRequestErrorsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsInput)(nil)).Elem(), &WebAppRequestErrors{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsArrayInput)(nil)).Elem(), WebAppRequestErrorsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsMapInput)(nil)).Elem(), WebAppRequestErrorsMap{})
	pulumi.RegisterOutputType(WebAppRequestErrorsOutput{})
	pulumi.RegisterOutputType(WebAppRequestErrorsArrayOutput{})
	pulumi.RegisterOutputType(WebAppRequestErrorsMapOutput{})
}
