// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// > To utilize this data source, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **View SLOs** (`slo:slos:read`) and **View SLO objective templates** (`slo:objective-templates:read`).
//
// The SLO objective templates data source allows to retrieve a list of all templates.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			testPlatformSloTemplates, err := dynatrace.GetPlatformSloTemplates(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("test", testPlatformSloTemplates)
//			return nil
//		})
//	}
//
// ```
func GetPlatformSloTemplates(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetPlatformSloTemplatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPlatformSloTemplatesResult
	err := ctx.Invoke("dynatrace:index/getPlatformSloTemplates:getPlatformSloTemplates", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getPlatformSloTemplates.
type GetPlatformSloTemplatesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string                            `pulumi:"id"`
	Templates []GetPlatformSloTemplatesTemplate `pulumi:"templates"`
}

func GetPlatformSloTemplatesOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetPlatformSloTemplatesResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetPlatformSloTemplatesResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("dynatrace:index/getPlatformSloTemplates:getPlatformSloTemplates", nil, GetPlatformSloTemplatesResultOutput{}, options).(GetPlatformSloTemplatesResultOutput), nil
	}).(GetPlatformSloTemplatesResultOutput)
}

// A collection of values returned by getPlatformSloTemplates.
type GetPlatformSloTemplatesResultOutput struct{ *pulumi.OutputState }

func (GetPlatformSloTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlatformSloTemplatesResult)(nil)).Elem()
}

func (o GetPlatformSloTemplatesResultOutput) ToGetPlatformSloTemplatesResultOutput() GetPlatformSloTemplatesResultOutput {
	return o
}

func (o GetPlatformSloTemplatesResultOutput) ToGetPlatformSloTemplatesResultOutputWithContext(ctx context.Context) GetPlatformSloTemplatesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetPlatformSloTemplatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlatformSloTemplatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPlatformSloTemplatesResultOutput) Templates() GetPlatformSloTemplatesTemplateArrayOutput {
	return o.ApplyT(func(v GetPlatformSloTemplatesResult) []GetPlatformSloTemplatesTemplate { return v.Templates }).(GetPlatformSloTemplatesTemplateArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPlatformSloTemplatesResultOutput{})
}
