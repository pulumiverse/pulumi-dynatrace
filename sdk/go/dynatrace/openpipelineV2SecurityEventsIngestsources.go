// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OpenpipelineV2SecurityEventsIngestsources struct {
	pulumi.CustomResourceState

	// Default Bucket
	DefaultBucket pulumi.StringPtrOutput `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Endpoint segment
	PathSegment pulumi.StringOutput `pulumi:"pathSegment"`
	// Processing stage
	Processing OpenpipelineV2SecurityEventsIngestsourcesProcessingOutput `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting OpenpipelineV2SecurityEventsIngestsourcesStaticRoutingPtrOutput `pulumi:"staticRouting"`
}

// NewOpenpipelineV2SecurityEventsIngestsources registers a new resource with the given unique name, arguments, and options.
func NewOpenpipelineV2SecurityEventsIngestsources(ctx *pulumi.Context,
	name string, args *OpenpipelineV2SecurityEventsIngestsourcesArgs, opts ...pulumi.ResourceOption) (*OpenpipelineV2SecurityEventsIngestsources, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.PathSegment == nil {
		return nil, errors.New("invalid value for required argument 'PathSegment'")
	}
	if args.Processing == nil {
		return nil, errors.New("invalid value for required argument 'Processing'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenpipelineV2SecurityEventsIngestsources
	err := ctx.RegisterResource("dynatrace:index/openpipelineV2SecurityEventsIngestsources:OpenpipelineV2SecurityEventsIngestsources", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenpipelineV2SecurityEventsIngestsources gets an existing OpenpipelineV2SecurityEventsIngestsources resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenpipelineV2SecurityEventsIngestsources(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenpipelineV2SecurityEventsIngestsourcesState, opts ...pulumi.ResourceOption) (*OpenpipelineV2SecurityEventsIngestsources, error) {
	var resource OpenpipelineV2SecurityEventsIngestsources
	err := ctx.ReadResource("dynatrace:index/openpipelineV2SecurityEventsIngestsources:OpenpipelineV2SecurityEventsIngestsources", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenpipelineV2SecurityEventsIngestsources resources.
type openpipelineV2SecurityEventsIngestsourcesState struct {
	// Default Bucket
	DefaultBucket *string `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName *string `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Endpoint segment
	PathSegment *string `pulumi:"pathSegment"`
	// Processing stage
	Processing *OpenpipelineV2SecurityEventsIngestsourcesProcessing `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting *OpenpipelineV2SecurityEventsIngestsourcesStaticRouting `pulumi:"staticRouting"`
}

type OpenpipelineV2SecurityEventsIngestsourcesState struct {
	// Default Bucket
	DefaultBucket pulumi.StringPtrInput
	// Endpoint display name
	DisplayName pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Endpoint segment
	PathSegment pulumi.StringPtrInput
	// Processing stage
	Processing OpenpipelineV2SecurityEventsIngestsourcesProcessingPtrInput
	// Static routing of endpoint
	StaticRouting OpenpipelineV2SecurityEventsIngestsourcesStaticRoutingPtrInput
}

func (OpenpipelineV2SecurityEventsIngestsourcesState) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2SecurityEventsIngestsourcesState)(nil)).Elem()
}

type openpipelineV2SecurityEventsIngestsourcesArgs struct {
	// Default Bucket
	DefaultBucket *string `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName string `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Endpoint segment
	PathSegment string `pulumi:"pathSegment"`
	// Processing stage
	Processing OpenpipelineV2SecurityEventsIngestsourcesProcessing `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting *OpenpipelineV2SecurityEventsIngestsourcesStaticRouting `pulumi:"staticRouting"`
}

// The set of arguments for constructing a OpenpipelineV2SecurityEventsIngestsources resource.
type OpenpipelineV2SecurityEventsIngestsourcesArgs struct {
	// Default Bucket
	DefaultBucket pulumi.StringPtrInput
	// Endpoint display name
	DisplayName pulumi.StringInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Endpoint segment
	PathSegment pulumi.StringInput
	// Processing stage
	Processing OpenpipelineV2SecurityEventsIngestsourcesProcessingInput
	// Static routing of endpoint
	StaticRouting OpenpipelineV2SecurityEventsIngestsourcesStaticRoutingPtrInput
}

func (OpenpipelineV2SecurityEventsIngestsourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2SecurityEventsIngestsourcesArgs)(nil)).Elem()
}

type OpenpipelineV2SecurityEventsIngestsourcesInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsIngestsourcesOutput() OpenpipelineV2SecurityEventsIngestsourcesOutput
	ToOpenpipelineV2SecurityEventsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsIngestsourcesOutput
}

func (*OpenpipelineV2SecurityEventsIngestsources) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2SecurityEventsIngestsources)(nil)).Elem()
}

func (i *OpenpipelineV2SecurityEventsIngestsources) ToOpenpipelineV2SecurityEventsIngestsourcesOutput() OpenpipelineV2SecurityEventsIngestsourcesOutput {
	return i.ToOpenpipelineV2SecurityEventsIngestsourcesOutputWithContext(context.Background())
}

func (i *OpenpipelineV2SecurityEventsIngestsources) ToOpenpipelineV2SecurityEventsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsIngestsourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsIngestsourcesOutput)
}

// OpenpipelineV2SecurityEventsIngestsourcesArrayInput is an input type that accepts OpenpipelineV2SecurityEventsIngestsourcesArray and OpenpipelineV2SecurityEventsIngestsourcesArrayOutput values.
// You can construct a concrete instance of `OpenpipelineV2SecurityEventsIngestsourcesArrayInput` via:
//
//	OpenpipelineV2SecurityEventsIngestsourcesArray{ OpenpipelineV2SecurityEventsIngestsourcesArgs{...} }
type OpenpipelineV2SecurityEventsIngestsourcesArrayInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsIngestsourcesArrayOutput() OpenpipelineV2SecurityEventsIngestsourcesArrayOutput
	ToOpenpipelineV2SecurityEventsIngestsourcesArrayOutputWithContext(context.Context) OpenpipelineV2SecurityEventsIngestsourcesArrayOutput
}

type OpenpipelineV2SecurityEventsIngestsourcesArray []OpenpipelineV2SecurityEventsIngestsourcesInput

func (OpenpipelineV2SecurityEventsIngestsourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2SecurityEventsIngestsources)(nil)).Elem()
}

func (i OpenpipelineV2SecurityEventsIngestsourcesArray) ToOpenpipelineV2SecurityEventsIngestsourcesArrayOutput() OpenpipelineV2SecurityEventsIngestsourcesArrayOutput {
	return i.ToOpenpipelineV2SecurityEventsIngestsourcesArrayOutputWithContext(context.Background())
}

func (i OpenpipelineV2SecurityEventsIngestsourcesArray) ToOpenpipelineV2SecurityEventsIngestsourcesArrayOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsIngestsourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsIngestsourcesArrayOutput)
}

// OpenpipelineV2SecurityEventsIngestsourcesMapInput is an input type that accepts OpenpipelineV2SecurityEventsIngestsourcesMap and OpenpipelineV2SecurityEventsIngestsourcesMapOutput values.
// You can construct a concrete instance of `OpenpipelineV2SecurityEventsIngestsourcesMapInput` via:
//
//	OpenpipelineV2SecurityEventsIngestsourcesMap{ "key": OpenpipelineV2SecurityEventsIngestsourcesArgs{...} }
type OpenpipelineV2SecurityEventsIngestsourcesMapInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsIngestsourcesMapOutput() OpenpipelineV2SecurityEventsIngestsourcesMapOutput
	ToOpenpipelineV2SecurityEventsIngestsourcesMapOutputWithContext(context.Context) OpenpipelineV2SecurityEventsIngestsourcesMapOutput
}

type OpenpipelineV2SecurityEventsIngestsourcesMap map[string]OpenpipelineV2SecurityEventsIngestsourcesInput

func (OpenpipelineV2SecurityEventsIngestsourcesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2SecurityEventsIngestsources)(nil)).Elem()
}

func (i OpenpipelineV2SecurityEventsIngestsourcesMap) ToOpenpipelineV2SecurityEventsIngestsourcesMapOutput() OpenpipelineV2SecurityEventsIngestsourcesMapOutput {
	return i.ToOpenpipelineV2SecurityEventsIngestsourcesMapOutputWithContext(context.Background())
}

func (i OpenpipelineV2SecurityEventsIngestsourcesMap) ToOpenpipelineV2SecurityEventsIngestsourcesMapOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsIngestsourcesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsIngestsourcesMapOutput)
}

type OpenpipelineV2SecurityEventsIngestsourcesOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsIngestsourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2SecurityEventsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsIngestsourcesOutput) ToOpenpipelineV2SecurityEventsIngestsourcesOutput() OpenpipelineV2SecurityEventsIngestsourcesOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsIngestsourcesOutput) ToOpenpipelineV2SecurityEventsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsIngestsourcesOutput {
	return o
}

// Default Bucket
func (o OpenpipelineV2SecurityEventsIngestsourcesOutput) DefaultBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsIngestsources) pulumi.StringPtrOutput { return v.DefaultBucket }).(pulumi.StringPtrOutput)
}

// Endpoint display name
func (o OpenpipelineV2SecurityEventsIngestsourcesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsIngestsources) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o OpenpipelineV2SecurityEventsIngestsourcesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsIngestsources) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Endpoint segment
func (o OpenpipelineV2SecurityEventsIngestsourcesOutput) PathSegment() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsIngestsources) pulumi.StringOutput { return v.PathSegment }).(pulumi.StringOutput)
}

// Processing stage
func (o OpenpipelineV2SecurityEventsIngestsourcesOutput) Processing() OpenpipelineV2SecurityEventsIngestsourcesProcessingOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsIngestsources) OpenpipelineV2SecurityEventsIngestsourcesProcessingOutput {
		return v.Processing
	}).(OpenpipelineV2SecurityEventsIngestsourcesProcessingOutput)
}

// Static routing of endpoint
func (o OpenpipelineV2SecurityEventsIngestsourcesOutput) StaticRouting() OpenpipelineV2SecurityEventsIngestsourcesStaticRoutingPtrOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsIngestsources) OpenpipelineV2SecurityEventsIngestsourcesStaticRoutingPtrOutput {
		return v.StaticRouting
	}).(OpenpipelineV2SecurityEventsIngestsourcesStaticRoutingPtrOutput)
}

type OpenpipelineV2SecurityEventsIngestsourcesArrayOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsIngestsourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2SecurityEventsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsIngestsourcesArrayOutput) ToOpenpipelineV2SecurityEventsIngestsourcesArrayOutput() OpenpipelineV2SecurityEventsIngestsourcesArrayOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsIngestsourcesArrayOutput) ToOpenpipelineV2SecurityEventsIngestsourcesArrayOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsIngestsourcesArrayOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsIngestsourcesArrayOutput) Index(i pulumi.IntInput) OpenpipelineV2SecurityEventsIngestsourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenpipelineV2SecurityEventsIngestsources {
		return vs[0].([]*OpenpipelineV2SecurityEventsIngestsources)[vs[1].(int)]
	}).(OpenpipelineV2SecurityEventsIngestsourcesOutput)
}

type OpenpipelineV2SecurityEventsIngestsourcesMapOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsIngestsourcesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2SecurityEventsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsIngestsourcesMapOutput) ToOpenpipelineV2SecurityEventsIngestsourcesMapOutput() OpenpipelineV2SecurityEventsIngestsourcesMapOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsIngestsourcesMapOutput) ToOpenpipelineV2SecurityEventsIngestsourcesMapOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsIngestsourcesMapOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsIngestsourcesMapOutput) MapIndex(k pulumi.StringInput) OpenpipelineV2SecurityEventsIngestsourcesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenpipelineV2SecurityEventsIngestsources {
		return vs[0].(map[string]*OpenpipelineV2SecurityEventsIngestsources)[vs[1].(string)]
	}).(OpenpipelineV2SecurityEventsIngestsourcesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsIngestsourcesInput)(nil)).Elem(), &OpenpipelineV2SecurityEventsIngestsources{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsIngestsourcesArrayInput)(nil)).Elem(), OpenpipelineV2SecurityEventsIngestsourcesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsIngestsourcesMapInput)(nil)).Elem(), OpenpipelineV2SecurityEventsIngestsourcesMap{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsIngestsourcesOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsIngestsourcesArrayOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsIngestsourcesMapOutput{})
}
