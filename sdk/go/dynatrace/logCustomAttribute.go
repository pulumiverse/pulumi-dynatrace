// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type LogCustomAttribute struct {
	pulumi.CustomResourceState

	// The attribute key is case sensitive in log data ingestion.
	Key pulumi.StringOutput `pulumi:"key"`
	// Show attribute values in side bar
	Sidebar pulumi.BoolOutput `pulumi:"sidebar"`
}

// NewLogCustomAttribute registers a new resource with the given unique name, arguments, and options.
func NewLogCustomAttribute(ctx *pulumi.Context,
	name string, args *LogCustomAttributeArgs, opts ...pulumi.ResourceOption) (*LogCustomAttribute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.Sidebar == nil {
		return nil, errors.New("invalid value for required argument 'Sidebar'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogCustomAttribute
	err := ctx.RegisterResource("dynatrace:index/logCustomAttribute:LogCustomAttribute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogCustomAttribute gets an existing LogCustomAttribute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogCustomAttribute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogCustomAttributeState, opts ...pulumi.ResourceOption) (*LogCustomAttribute, error) {
	var resource LogCustomAttribute
	err := ctx.ReadResource("dynatrace:index/logCustomAttribute:LogCustomAttribute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogCustomAttribute resources.
type logCustomAttributeState struct {
	// The attribute key is case sensitive in log data ingestion.
	Key *string `pulumi:"key"`
	// Show attribute values in side bar
	Sidebar *bool `pulumi:"sidebar"`
}

type LogCustomAttributeState struct {
	// The attribute key is case sensitive in log data ingestion.
	Key pulumi.StringPtrInput
	// Show attribute values in side bar
	Sidebar pulumi.BoolPtrInput
}

func (LogCustomAttributeState) ElementType() reflect.Type {
	return reflect.TypeOf((*logCustomAttributeState)(nil)).Elem()
}

type logCustomAttributeArgs struct {
	// The attribute key is case sensitive in log data ingestion.
	Key string `pulumi:"key"`
	// Show attribute values in side bar
	Sidebar bool `pulumi:"sidebar"`
}

// The set of arguments for constructing a LogCustomAttribute resource.
type LogCustomAttributeArgs struct {
	// The attribute key is case sensitive in log data ingestion.
	Key pulumi.StringInput
	// Show attribute values in side bar
	Sidebar pulumi.BoolInput
}

func (LogCustomAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logCustomAttributeArgs)(nil)).Elem()
}

type LogCustomAttributeInput interface {
	pulumi.Input

	ToLogCustomAttributeOutput() LogCustomAttributeOutput
	ToLogCustomAttributeOutputWithContext(ctx context.Context) LogCustomAttributeOutput
}

func (*LogCustomAttribute) ElementType() reflect.Type {
	return reflect.TypeOf((**LogCustomAttribute)(nil)).Elem()
}

func (i *LogCustomAttribute) ToLogCustomAttributeOutput() LogCustomAttributeOutput {
	return i.ToLogCustomAttributeOutputWithContext(context.Background())
}

func (i *LogCustomAttribute) ToLogCustomAttributeOutputWithContext(ctx context.Context) LogCustomAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogCustomAttributeOutput)
}

// LogCustomAttributeArrayInput is an input type that accepts LogCustomAttributeArray and LogCustomAttributeArrayOutput values.
// You can construct a concrete instance of `LogCustomAttributeArrayInput` via:
//
//	LogCustomAttributeArray{ LogCustomAttributeArgs{...} }
type LogCustomAttributeArrayInput interface {
	pulumi.Input

	ToLogCustomAttributeArrayOutput() LogCustomAttributeArrayOutput
	ToLogCustomAttributeArrayOutputWithContext(context.Context) LogCustomAttributeArrayOutput
}

type LogCustomAttributeArray []LogCustomAttributeInput

func (LogCustomAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogCustomAttribute)(nil)).Elem()
}

func (i LogCustomAttributeArray) ToLogCustomAttributeArrayOutput() LogCustomAttributeArrayOutput {
	return i.ToLogCustomAttributeArrayOutputWithContext(context.Background())
}

func (i LogCustomAttributeArray) ToLogCustomAttributeArrayOutputWithContext(ctx context.Context) LogCustomAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogCustomAttributeArrayOutput)
}

// LogCustomAttributeMapInput is an input type that accepts LogCustomAttributeMap and LogCustomAttributeMapOutput values.
// You can construct a concrete instance of `LogCustomAttributeMapInput` via:
//
//	LogCustomAttributeMap{ "key": LogCustomAttributeArgs{...} }
type LogCustomAttributeMapInput interface {
	pulumi.Input

	ToLogCustomAttributeMapOutput() LogCustomAttributeMapOutput
	ToLogCustomAttributeMapOutputWithContext(context.Context) LogCustomAttributeMapOutput
}

type LogCustomAttributeMap map[string]LogCustomAttributeInput

func (LogCustomAttributeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogCustomAttribute)(nil)).Elem()
}

func (i LogCustomAttributeMap) ToLogCustomAttributeMapOutput() LogCustomAttributeMapOutput {
	return i.ToLogCustomAttributeMapOutputWithContext(context.Background())
}

func (i LogCustomAttributeMap) ToLogCustomAttributeMapOutputWithContext(ctx context.Context) LogCustomAttributeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogCustomAttributeMapOutput)
}

type LogCustomAttributeOutput struct{ *pulumi.OutputState }

func (LogCustomAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogCustomAttribute)(nil)).Elem()
}

func (o LogCustomAttributeOutput) ToLogCustomAttributeOutput() LogCustomAttributeOutput {
	return o
}

func (o LogCustomAttributeOutput) ToLogCustomAttributeOutputWithContext(ctx context.Context) LogCustomAttributeOutput {
	return o
}

// The attribute key is case sensitive in log data ingestion.
func (o LogCustomAttributeOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v *LogCustomAttribute) pulumi.StringOutput { return v.Key }).(pulumi.StringOutput)
}

// Show attribute values in side bar
func (o LogCustomAttributeOutput) Sidebar() pulumi.BoolOutput {
	return o.ApplyT(func(v *LogCustomAttribute) pulumi.BoolOutput { return v.Sidebar }).(pulumi.BoolOutput)
}

type LogCustomAttributeArrayOutput struct{ *pulumi.OutputState }

func (LogCustomAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogCustomAttribute)(nil)).Elem()
}

func (o LogCustomAttributeArrayOutput) ToLogCustomAttributeArrayOutput() LogCustomAttributeArrayOutput {
	return o
}

func (o LogCustomAttributeArrayOutput) ToLogCustomAttributeArrayOutputWithContext(ctx context.Context) LogCustomAttributeArrayOutput {
	return o
}

func (o LogCustomAttributeArrayOutput) Index(i pulumi.IntInput) LogCustomAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogCustomAttribute {
		return vs[0].([]*LogCustomAttribute)[vs[1].(int)]
	}).(LogCustomAttributeOutput)
}

type LogCustomAttributeMapOutput struct{ *pulumi.OutputState }

func (LogCustomAttributeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogCustomAttribute)(nil)).Elem()
}

func (o LogCustomAttributeMapOutput) ToLogCustomAttributeMapOutput() LogCustomAttributeMapOutput {
	return o
}

func (o LogCustomAttributeMapOutput) ToLogCustomAttributeMapOutputWithContext(ctx context.Context) LogCustomAttributeMapOutput {
	return o
}

func (o LogCustomAttributeMapOutput) MapIndex(k pulumi.StringInput) LogCustomAttributeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogCustomAttribute {
		return vs[0].(map[string]*LogCustomAttribute)[vs[1].(string)]
	}).(LogCustomAttributeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogCustomAttributeInput)(nil)).Elem(), &LogCustomAttribute{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogCustomAttributeArrayInput)(nil)).Elem(), LogCustomAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogCustomAttributeMapInput)(nil)).Elem(), LogCustomAttributeMap{})
	pulumi.RegisterOutputType(LogCustomAttributeOutput{})
	pulumi.RegisterOutputType(LogCustomAttributeArrayOutput{})
	pulumi.RegisterOutputType(LogCustomAttributeMapOutput{})
}
