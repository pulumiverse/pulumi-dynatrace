// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// > **Dynatrace SaaS only**
//
// > To utilize this resource, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permission: **Allow read access for identity resources (users and groups)** (`account-idm-read`).
//
// # This data source allows you to specify the email address of the user and produces an ordered list of group IDs this user is a member of
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			userA, err := dynatrace.LookupIamUser(ctx, &dynatrace.LookupIamUserArgs{
//				Email: "me@home.com",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("groups", userA.Groups)
//			return nil
//		})
//	}
//
// ```
func LookupIamUser(ctx *pulumi.Context, args *LookupIamUserArgs, opts ...pulumi.InvokeOption) (*LookupIamUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIamUserResult
	err := ctx.Invoke("dynatrace:index/getIamUser:getIamUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIamUser.
type LookupIamUserArgs struct {
	Email string `pulumi:"email"`
}

// A collection of values returned by getIamUser.
type LookupIamUserResult struct {
	Email  string   `pulumi:"email"`
	Groups []string `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id  string `pulumi:"id"`
	Uid string `pulumi:"uid"`
}

func LookupIamUserOutput(ctx *pulumi.Context, args LookupIamUserOutputArgs, opts ...pulumi.InvokeOption) LookupIamUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupIamUserResultOutput, error) {
			args := v.(LookupIamUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getIamUser:getIamUser", args, LookupIamUserResultOutput{}, options).(LookupIamUserResultOutput), nil
		}).(LookupIamUserResultOutput)
}

// A collection of arguments for invoking getIamUser.
type LookupIamUserOutputArgs struct {
	Email pulumi.StringInput `pulumi:"email"`
}

func (LookupIamUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIamUserArgs)(nil)).Elem()
}

// A collection of values returned by getIamUser.
type LookupIamUserResultOutput struct{ *pulumi.OutputState }

func (LookupIamUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIamUserResult)(nil)).Elem()
}

func (o LookupIamUserResultOutput) ToLookupIamUserResultOutput() LookupIamUserResultOutput {
	return o
}

func (o LookupIamUserResultOutput) ToLookupIamUserResultOutputWithContext(ctx context.Context) LookupIamUserResultOutput {
	return o
}

func (o LookupIamUserResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamUserResult) string { return v.Email }).(pulumi.StringOutput)
}

func (o LookupIamUserResultOutput) Groups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupIamUserResult) []string { return v.Groups }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIamUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupIamUserResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIamUserResult) string { return v.Uid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIamUserResultOutput{})
}
