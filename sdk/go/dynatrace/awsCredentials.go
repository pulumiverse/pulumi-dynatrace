// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type AwsCredentials struct {
	pulumi.CustomResourceState

	// credentials for the AWS authentication
	AuthenticationData AwsCredentialsAuthenticationDataOutput `pulumi:"authenticationData"`
	// Enable monitoring of specified AWS credentials
	CredentialsEnabled pulumi.BoolPtrOutput `pulumi:"credentialsEnabled"`
	// The name of the credentials
	Label pulumi.StringPtrOutput `pulumi:"label"`
	// The type of the AWS partition
	PartitionType pulumi.StringOutput `pulumi:"partitionType"`
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `AwsService` subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	RemoveDefaults pulumi.BoolPtrOutput `pulumi:"removeDefaults"`
	// Run credentials on Dynatrace infrastructure
	RunningOnDynatraceInfrastructure pulumi.BoolPtrOutput `pulumi:"runningOnDynatraceInfrastructure"`
	// Deprecated: Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates
	SupportingServicesManagedInDynatrace pulumi.BoolPtrOutput `pulumi:"supportingServicesManagedInDynatrace"`
	// supporting services to be monitored
	//
	// Deprecated: Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `AwsService`
	SupportingServicesToMonitors AwsCredentialsSupportingServicesToMonitorArrayOutput `pulumi:"supportingServicesToMonitors"`
	// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
	TaggedOnly pulumi.BoolOutput `pulumi:"taggedOnly"`
	// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
	TagsToMonitors AwsCredentialsTagsToMonitorArrayOutput `pulumi:"tagsToMonitors"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrOutput `pulumi:"unknowns"`
}

// NewAwsCredentials registers a new resource with the given unique name, arguments, and options.
func NewAwsCredentials(ctx *pulumi.Context,
	name string, args *AwsCredentialsArgs, opts ...pulumi.ResourceOption) (*AwsCredentials, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthenticationData == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationData'")
	}
	if args.PartitionType == nil {
		return nil, errors.New("invalid value for required argument 'PartitionType'")
	}
	if args.TaggedOnly == nil {
		return nil, errors.New("invalid value for required argument 'TaggedOnly'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsCredentials
	err := ctx.RegisterResource("dynatrace:index/awsCredentials:AwsCredentials", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsCredentials gets an existing AwsCredentials resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsCredentials(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsCredentialsState, opts ...pulumi.ResourceOption) (*AwsCredentials, error) {
	var resource AwsCredentials
	err := ctx.ReadResource("dynatrace:index/awsCredentials:AwsCredentials", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsCredentials resources.
type awsCredentialsState struct {
	// credentials for the AWS authentication
	AuthenticationData *AwsCredentialsAuthenticationData `pulumi:"authenticationData"`
	// Enable monitoring of specified AWS credentials
	CredentialsEnabled *bool `pulumi:"credentialsEnabled"`
	// The name of the credentials
	Label *string `pulumi:"label"`
	// The type of the AWS partition
	PartitionType *string `pulumi:"partitionType"`
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `AwsService` subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	RemoveDefaults *bool `pulumi:"removeDefaults"`
	// Run credentials on Dynatrace infrastructure
	RunningOnDynatraceInfrastructure *bool `pulumi:"runningOnDynatraceInfrastructure"`
	// Deprecated: Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates
	SupportingServicesManagedInDynatrace *bool `pulumi:"supportingServicesManagedInDynatrace"`
	// supporting services to be monitored
	//
	// Deprecated: Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `AwsService`
	SupportingServicesToMonitors []AwsCredentialsSupportingServicesToMonitor `pulumi:"supportingServicesToMonitors"`
	// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
	TaggedOnly *bool `pulumi:"taggedOnly"`
	// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
	TagsToMonitors []AwsCredentialsTagsToMonitor `pulumi:"tagsToMonitors"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
}

type AwsCredentialsState struct {
	// credentials for the AWS authentication
	AuthenticationData AwsCredentialsAuthenticationDataPtrInput
	// Enable monitoring of specified AWS credentials
	CredentialsEnabled pulumi.BoolPtrInput
	// The name of the credentials
	Label pulumi.StringPtrInput
	// The type of the AWS partition
	PartitionType pulumi.StringPtrInput
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `AwsService` subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	RemoveDefaults pulumi.BoolPtrInput
	// Run credentials on Dynatrace infrastructure
	RunningOnDynatraceInfrastructure pulumi.BoolPtrInput
	// Deprecated: Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates
	SupportingServicesManagedInDynatrace pulumi.BoolPtrInput
	// supporting services to be monitored
	//
	// Deprecated: Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `AwsService`
	SupportingServicesToMonitors AwsCredentialsSupportingServicesToMonitorArrayInput
	// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
	TaggedOnly pulumi.BoolPtrInput
	// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
	TagsToMonitors AwsCredentialsTagsToMonitorArrayInput
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput
}

func (AwsCredentialsState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsCredentialsState)(nil)).Elem()
}

type awsCredentialsArgs struct {
	// credentials for the AWS authentication
	AuthenticationData AwsCredentialsAuthenticationData `pulumi:"authenticationData"`
	// Enable monitoring of specified AWS credentials
	CredentialsEnabled *bool `pulumi:"credentialsEnabled"`
	// The name of the credentials
	Label *string `pulumi:"label"`
	// The type of the AWS partition
	PartitionType string `pulumi:"partitionType"`
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `AwsService` subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	RemoveDefaults *bool `pulumi:"removeDefaults"`
	// Run credentials on Dynatrace infrastructure
	RunningOnDynatraceInfrastructure *bool `pulumi:"runningOnDynatraceInfrastructure"`
	// Deprecated: Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates
	SupportingServicesManagedInDynatrace *bool `pulumi:"supportingServicesManagedInDynatrace"`
	// supporting services to be monitored
	//
	// Deprecated: Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `AwsService`
	SupportingServicesToMonitors []AwsCredentialsSupportingServicesToMonitor `pulumi:"supportingServicesToMonitors"`
	// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
	TaggedOnly bool `pulumi:"taggedOnly"`
	// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
	TagsToMonitors []AwsCredentialsTagsToMonitor `pulumi:"tagsToMonitors"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
}

// The set of arguments for constructing a AwsCredentials resource.
type AwsCredentialsArgs struct {
	// credentials for the AWS authentication
	AuthenticationData AwsCredentialsAuthenticationDataInput
	// Enable monitoring of specified AWS credentials
	CredentialsEnabled pulumi.BoolPtrInput
	// The name of the credentials
	Label pulumi.StringPtrInput
	// The type of the AWS partition
	PartitionType pulumi.StringInput
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `AwsService` subsequently won't get touched.
	// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
	RemoveDefaults pulumi.BoolPtrInput
	// Run credentials on Dynatrace infrastructure
	RunningOnDynatraceInfrastructure pulumi.BoolPtrInput
	// Deprecated: Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates
	SupportingServicesManagedInDynatrace pulumi.BoolPtrInput
	// supporting services to be monitored
	//
	// Deprecated: Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `AwsService`
	SupportingServicesToMonitors AwsCredentialsSupportingServicesToMonitorArrayInput
	// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
	TaggedOnly pulumi.BoolInput
	// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
	TagsToMonitors AwsCredentialsTagsToMonitorArrayInput
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput
}

func (AwsCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsCredentialsArgs)(nil)).Elem()
}

type AwsCredentialsInput interface {
	pulumi.Input

	ToAwsCredentialsOutput() AwsCredentialsOutput
	ToAwsCredentialsOutputWithContext(ctx context.Context) AwsCredentialsOutput
}

func (*AwsCredentials) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCredentials)(nil)).Elem()
}

func (i *AwsCredentials) ToAwsCredentialsOutput() AwsCredentialsOutput {
	return i.ToAwsCredentialsOutputWithContext(context.Background())
}

func (i *AwsCredentials) ToAwsCredentialsOutputWithContext(ctx context.Context) AwsCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCredentialsOutput)
}

// AwsCredentialsArrayInput is an input type that accepts AwsCredentialsArray and AwsCredentialsArrayOutput values.
// You can construct a concrete instance of `AwsCredentialsArrayInput` via:
//
//	AwsCredentialsArray{ AwsCredentialsArgs{...} }
type AwsCredentialsArrayInput interface {
	pulumi.Input

	ToAwsCredentialsArrayOutput() AwsCredentialsArrayOutput
	ToAwsCredentialsArrayOutputWithContext(context.Context) AwsCredentialsArrayOutput
}

type AwsCredentialsArray []AwsCredentialsInput

func (AwsCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsCredentials)(nil)).Elem()
}

func (i AwsCredentialsArray) ToAwsCredentialsArrayOutput() AwsCredentialsArrayOutput {
	return i.ToAwsCredentialsArrayOutputWithContext(context.Background())
}

func (i AwsCredentialsArray) ToAwsCredentialsArrayOutputWithContext(ctx context.Context) AwsCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCredentialsArrayOutput)
}

// AwsCredentialsMapInput is an input type that accepts AwsCredentialsMap and AwsCredentialsMapOutput values.
// You can construct a concrete instance of `AwsCredentialsMapInput` via:
//
//	AwsCredentialsMap{ "key": AwsCredentialsArgs{...} }
type AwsCredentialsMapInput interface {
	pulumi.Input

	ToAwsCredentialsMapOutput() AwsCredentialsMapOutput
	ToAwsCredentialsMapOutputWithContext(context.Context) AwsCredentialsMapOutput
}

type AwsCredentialsMap map[string]AwsCredentialsInput

func (AwsCredentialsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsCredentials)(nil)).Elem()
}

func (i AwsCredentialsMap) ToAwsCredentialsMapOutput() AwsCredentialsMapOutput {
	return i.ToAwsCredentialsMapOutputWithContext(context.Background())
}

func (i AwsCredentialsMap) ToAwsCredentialsMapOutputWithContext(ctx context.Context) AwsCredentialsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsCredentialsMapOutput)
}

type AwsCredentialsOutput struct{ *pulumi.OutputState }

func (AwsCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsCredentials)(nil)).Elem()
}

func (o AwsCredentialsOutput) ToAwsCredentialsOutput() AwsCredentialsOutput {
	return o
}

func (o AwsCredentialsOutput) ToAwsCredentialsOutputWithContext(ctx context.Context) AwsCredentialsOutput {
	return o
}

// credentials for the AWS authentication
func (o AwsCredentialsOutput) AuthenticationData() AwsCredentialsAuthenticationDataOutput {
	return o.ApplyT(func(v *AwsCredentials) AwsCredentialsAuthenticationDataOutput { return v.AuthenticationData }).(AwsCredentialsAuthenticationDataOutput)
}

// Enable monitoring of specified AWS credentials
func (o AwsCredentialsOutput) CredentialsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.BoolPtrOutput { return v.CredentialsEnabled }).(pulumi.BoolPtrOutput)
}

// The name of the credentials
func (o AwsCredentialsOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.StringPtrOutput { return v.Label }).(pulumi.StringPtrOutput)
}

// The type of the AWS partition
func (o AwsCredentialsOutput) PartitionType() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.StringOutput { return v.PartitionType }).(pulumi.StringOutput)
}

// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created AWS Credentials. Supporting Services applied by via `AwsService` subsequently won't get touched.
// Note: This attribute is only getting considered during creation of the resource. Changing it afterwards won't have an effect
func (o AwsCredentialsOutput) RemoveDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.BoolPtrOutput { return v.RemoveDefaults }).(pulumi.BoolPtrOutput)
}

// Run credentials on Dynatrace infrastructure
func (o AwsCredentialsOutput) RunningOnDynatraceInfrastructure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.BoolPtrOutput { return v.RunningOnDynatraceInfrastructure }).(pulumi.BoolPtrOutput)
}

// Deprecated: Supporting Services are no longer getting managed via this resource. Regardless of the value set here, this resource won't affect the supporting services during updates
func (o AwsCredentialsOutput) SupportingServicesManagedInDynatrace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.BoolPtrOutput { return v.SupportingServicesManagedInDynatrace }).(pulumi.BoolPtrOutput)
}

// supporting services to be monitored
//
// Deprecated: Managing supporting services directly within AWS Credentials has been deprecated within the REST API. This attribute just exists for backwards compatibility. It no longer has an effect. For managing services use the resource `AwsService`
func (o AwsCredentialsOutput) SupportingServicesToMonitors() AwsCredentialsSupportingServicesToMonitorArrayOutput {
	return o.ApplyT(func(v *AwsCredentials) AwsCredentialsSupportingServicesToMonitorArrayOutput {
		return v.SupportingServicesToMonitors
	}).(AwsCredentialsSupportingServicesToMonitorArrayOutput)
}

// Monitor only resources which have specified AWS tags (`true`) or all resources (`false`)
func (o AwsCredentialsOutput) TaggedOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.BoolOutput { return v.TaggedOnly }).(pulumi.BoolOutput)
}

// AWS tags to be monitored. You can specify up to 10 tags. Only applicable when the **tagged_only** parameter is set to `true`
func (o AwsCredentialsOutput) TagsToMonitors() AwsCredentialsTagsToMonitorArrayOutput {
	return o.ApplyT(func(v *AwsCredentials) AwsCredentialsTagsToMonitorArrayOutput { return v.TagsToMonitors }).(AwsCredentialsTagsToMonitorArrayOutput)
}

// Any attributes that aren't yet supported by this provider
func (o AwsCredentialsOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsCredentials) pulumi.StringPtrOutput { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type AwsCredentialsArrayOutput struct{ *pulumi.OutputState }

func (AwsCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsCredentials)(nil)).Elem()
}

func (o AwsCredentialsArrayOutput) ToAwsCredentialsArrayOutput() AwsCredentialsArrayOutput {
	return o
}

func (o AwsCredentialsArrayOutput) ToAwsCredentialsArrayOutputWithContext(ctx context.Context) AwsCredentialsArrayOutput {
	return o
}

func (o AwsCredentialsArrayOutput) Index(i pulumi.IntInput) AwsCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsCredentials {
		return vs[0].([]*AwsCredentials)[vs[1].(int)]
	}).(AwsCredentialsOutput)
}

type AwsCredentialsMapOutput struct{ *pulumi.OutputState }

func (AwsCredentialsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsCredentials)(nil)).Elem()
}

func (o AwsCredentialsMapOutput) ToAwsCredentialsMapOutput() AwsCredentialsMapOutput {
	return o
}

func (o AwsCredentialsMapOutput) ToAwsCredentialsMapOutputWithContext(ctx context.Context) AwsCredentialsMapOutput {
	return o
}

func (o AwsCredentialsMapOutput) MapIndex(k pulumi.StringInput) AwsCredentialsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsCredentials {
		return vs[0].(map[string]*AwsCredentials)[vs[1].(string)]
	}).(AwsCredentialsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCredentialsInput)(nil)).Elem(), &AwsCredentials{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCredentialsArrayInput)(nil)).Elem(), AwsCredentialsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsCredentialsMapInput)(nil)).Elem(), AwsCredentialsMap{})
	pulumi.RegisterOutputType(AwsCredentialsOutput{})
	pulumi.RegisterOutputType(AwsCredentialsArrayOutput{})
	pulumi.RegisterOutputType(AwsCredentialsMapOutput{})
}
