// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type KubernetesSpm struct {
	pulumi.CustomResourceState

	// Follow the [installation instructions](https://dt-url.net/4x23ut5) to deploy the Security Posture Management components.
	ConfigurationDatasetPipelineEnabled pulumi.BoolOutput `pulumi:"configurationDatasetPipelineEnabled"`
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
}

// NewKubernetesSpm registers a new resource with the given unique name, arguments, and options.
func NewKubernetesSpm(ctx *pulumi.Context,
	name string, args *KubernetesSpmArgs, opts ...pulumi.ResourceOption) (*KubernetesSpm, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigurationDatasetPipelineEnabled == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationDatasetPipelineEnabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubernetesSpm
	err := ctx.RegisterResource("dynatrace:index/kubernetesSpm:KubernetesSpm", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubernetesSpm gets an existing KubernetesSpm resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubernetesSpm(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubernetesSpmState, opts ...pulumi.ResourceOption) (*KubernetesSpm, error) {
	var resource KubernetesSpm
	err := ctx.ReadResource("dynatrace:index/kubernetesSpm:KubernetesSpm", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubernetesSpm resources.
type kubernetesSpmState struct {
	// Follow the [installation instructions](https://dt-url.net/4x23ut5) to deploy the Security Posture Management components.
	ConfigurationDatasetPipelineEnabled *bool `pulumi:"configurationDatasetPipelineEnabled"`
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

type KubernetesSpmState struct {
	// Follow the [installation instructions](https://dt-url.net/4x23ut5) to deploy the Security Posture Management components.
	ConfigurationDatasetPipelineEnabled pulumi.BoolPtrInput
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (KubernetesSpmState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesSpmState)(nil)).Elem()
}

type kubernetesSpmArgs struct {
	// Follow the [installation instructions](https://dt-url.net/4x23ut5) to deploy the Security Posture Management components.
	ConfigurationDatasetPipelineEnabled bool `pulumi:"configurationDatasetPipelineEnabled"`
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a KubernetesSpm resource.
type KubernetesSpmArgs struct {
	// Follow the [installation instructions](https://dt-url.net/4x23ut5) to deploy the Security Posture Management components.
	ConfigurationDatasetPipelineEnabled pulumi.BoolInput
	// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (KubernetesSpmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesSpmArgs)(nil)).Elem()
}

type KubernetesSpmInput interface {
	pulumi.Input

	ToKubernetesSpmOutput() KubernetesSpmOutput
	ToKubernetesSpmOutputWithContext(ctx context.Context) KubernetesSpmOutput
}

func (*KubernetesSpm) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesSpm)(nil)).Elem()
}

func (i *KubernetesSpm) ToKubernetesSpmOutput() KubernetesSpmOutput {
	return i.ToKubernetesSpmOutputWithContext(context.Background())
}

func (i *KubernetesSpm) ToKubernetesSpmOutputWithContext(ctx context.Context) KubernetesSpmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesSpmOutput)
}

// KubernetesSpmArrayInput is an input type that accepts KubernetesSpmArray and KubernetesSpmArrayOutput values.
// You can construct a concrete instance of `KubernetesSpmArrayInput` via:
//
//	KubernetesSpmArray{ KubernetesSpmArgs{...} }
type KubernetesSpmArrayInput interface {
	pulumi.Input

	ToKubernetesSpmArrayOutput() KubernetesSpmArrayOutput
	ToKubernetesSpmArrayOutputWithContext(context.Context) KubernetesSpmArrayOutput
}

type KubernetesSpmArray []KubernetesSpmInput

func (KubernetesSpmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesSpm)(nil)).Elem()
}

func (i KubernetesSpmArray) ToKubernetesSpmArrayOutput() KubernetesSpmArrayOutput {
	return i.ToKubernetesSpmArrayOutputWithContext(context.Background())
}

func (i KubernetesSpmArray) ToKubernetesSpmArrayOutputWithContext(ctx context.Context) KubernetesSpmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesSpmArrayOutput)
}

// KubernetesSpmMapInput is an input type that accepts KubernetesSpmMap and KubernetesSpmMapOutput values.
// You can construct a concrete instance of `KubernetesSpmMapInput` via:
//
//	KubernetesSpmMap{ "key": KubernetesSpmArgs{...} }
type KubernetesSpmMapInput interface {
	pulumi.Input

	ToKubernetesSpmMapOutput() KubernetesSpmMapOutput
	ToKubernetesSpmMapOutputWithContext(context.Context) KubernetesSpmMapOutput
}

type KubernetesSpmMap map[string]KubernetesSpmInput

func (KubernetesSpmMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesSpm)(nil)).Elem()
}

func (i KubernetesSpmMap) ToKubernetesSpmMapOutput() KubernetesSpmMapOutput {
	return i.ToKubernetesSpmMapOutputWithContext(context.Background())
}

func (i KubernetesSpmMap) ToKubernetesSpmMapOutputWithContext(ctx context.Context) KubernetesSpmMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesSpmMapOutput)
}

type KubernetesSpmOutput struct{ *pulumi.OutputState }

func (KubernetesSpmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesSpm)(nil)).Elem()
}

func (o KubernetesSpmOutput) ToKubernetesSpmOutput() KubernetesSpmOutput {
	return o
}

func (o KubernetesSpmOutput) ToKubernetesSpmOutputWithContext(ctx context.Context) KubernetesSpmOutput {
	return o
}

// Follow the [installation instructions](https://dt-url.net/4x23ut5) to deploy the Security Posture Management components.
func (o KubernetesSpmOutput) ConfigurationDatasetPipelineEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *KubernetesSpm) pulumi.BoolOutput { return v.ConfigurationDatasetPipelineEnabled }).(pulumi.BoolOutput)
}

// The scope of this setting (KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
func (o KubernetesSpmOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesSpm) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

type KubernetesSpmArrayOutput struct{ *pulumi.OutputState }

func (KubernetesSpmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesSpm)(nil)).Elem()
}

func (o KubernetesSpmArrayOutput) ToKubernetesSpmArrayOutput() KubernetesSpmArrayOutput {
	return o
}

func (o KubernetesSpmArrayOutput) ToKubernetesSpmArrayOutputWithContext(ctx context.Context) KubernetesSpmArrayOutput {
	return o
}

func (o KubernetesSpmArrayOutput) Index(i pulumi.IntInput) KubernetesSpmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesSpm {
		return vs[0].([]*KubernetesSpm)[vs[1].(int)]
	}).(KubernetesSpmOutput)
}

type KubernetesSpmMapOutput struct{ *pulumi.OutputState }

func (KubernetesSpmMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesSpm)(nil)).Elem()
}

func (o KubernetesSpmMapOutput) ToKubernetesSpmMapOutput() KubernetesSpmMapOutput {
	return o
}

func (o KubernetesSpmMapOutput) ToKubernetesSpmMapOutputWithContext(ctx context.Context) KubernetesSpmMapOutput {
	return o
}

func (o KubernetesSpmMapOutput) MapIndex(k pulumi.StringInput) KubernetesSpmOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesSpm {
		return vs[0].(map[string]*KubernetesSpm)[vs[1].(string)]
	}).(KubernetesSpmOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesSpmInput)(nil)).Elem(), &KubernetesSpm{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesSpmArrayInput)(nil)).Elem(), KubernetesSpmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesSpmMapInput)(nil)).Elem(), KubernetesSpmMap{})
	pulumi.RegisterOutputType(KubernetesSpmOutput{})
	pulumi.RegisterOutputType(KubernetesSpmArrayOutput{})
	pulumi.RegisterOutputType(KubernetesSpmMapOutput{})
}
