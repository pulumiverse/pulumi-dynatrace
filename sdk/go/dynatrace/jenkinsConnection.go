// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type JenkinsConnection struct {
	pulumi.CustomResourceState

	// The name of the Jenkins connection
	Name pulumi.StringOutput `pulumi:"name"`
	// The password of the user or API token obtained from the Jenkins UI (Dashboard > User > Configure > API Token)
	Password pulumi.StringOutput `pulumi:"password"`
	// Base URL of your Jenkins instance (e.g. https://[YOUR*JENKINS*DOMAIN]/)
	Url pulumi.StringOutput `pulumi:"url"`
	// The name of your Jenkins user (e.g. jenkins)
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewJenkinsConnection registers a new resource with the given unique name, arguments, and options.
func NewJenkinsConnection(ctx *pulumi.Context,
	name string, args *JenkinsConnectionArgs, opts ...pulumi.ResourceOption) (*JenkinsConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JenkinsConnection
	err := ctx.RegisterResource("dynatrace:index/jenkinsConnection:JenkinsConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJenkinsConnection gets an existing JenkinsConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJenkinsConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JenkinsConnectionState, opts ...pulumi.ResourceOption) (*JenkinsConnection, error) {
	var resource JenkinsConnection
	err := ctx.ReadResource("dynatrace:index/jenkinsConnection:JenkinsConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JenkinsConnection resources.
type jenkinsConnectionState struct {
	// The name of the Jenkins connection
	Name *string `pulumi:"name"`
	// The password of the user or API token obtained from the Jenkins UI (Dashboard > User > Configure > API Token)
	Password *string `pulumi:"password"`
	// Base URL of your Jenkins instance (e.g. https://[YOUR*JENKINS*DOMAIN]/)
	Url *string `pulumi:"url"`
	// The name of your Jenkins user (e.g. jenkins)
	Username *string `pulumi:"username"`
}

type JenkinsConnectionState struct {
	// The name of the Jenkins connection
	Name pulumi.StringPtrInput
	// The password of the user or API token obtained from the Jenkins UI (Dashboard > User > Configure > API Token)
	Password pulumi.StringPtrInput
	// Base URL of your Jenkins instance (e.g. https://[YOUR*JENKINS*DOMAIN]/)
	Url pulumi.StringPtrInput
	// The name of your Jenkins user (e.g. jenkins)
	Username pulumi.StringPtrInput
}

func (JenkinsConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*jenkinsConnectionState)(nil)).Elem()
}

type jenkinsConnectionArgs struct {
	// The name of the Jenkins connection
	Name *string `pulumi:"name"`
	// The password of the user or API token obtained from the Jenkins UI (Dashboard > User > Configure > API Token)
	Password string `pulumi:"password"`
	// Base URL of your Jenkins instance (e.g. https://[YOUR*JENKINS*DOMAIN]/)
	Url string `pulumi:"url"`
	// The name of your Jenkins user (e.g. jenkins)
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a JenkinsConnection resource.
type JenkinsConnectionArgs struct {
	// The name of the Jenkins connection
	Name pulumi.StringPtrInput
	// The password of the user or API token obtained from the Jenkins UI (Dashboard > User > Configure > API Token)
	Password pulumi.StringInput
	// Base URL of your Jenkins instance (e.g. https://[YOUR*JENKINS*DOMAIN]/)
	Url pulumi.StringInput
	// The name of your Jenkins user (e.g. jenkins)
	Username pulumi.StringInput
}

func (JenkinsConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jenkinsConnectionArgs)(nil)).Elem()
}

type JenkinsConnectionInput interface {
	pulumi.Input

	ToJenkinsConnectionOutput() JenkinsConnectionOutput
	ToJenkinsConnectionOutputWithContext(ctx context.Context) JenkinsConnectionOutput
}

func (*JenkinsConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**JenkinsConnection)(nil)).Elem()
}

func (i *JenkinsConnection) ToJenkinsConnectionOutput() JenkinsConnectionOutput {
	return i.ToJenkinsConnectionOutputWithContext(context.Background())
}

func (i *JenkinsConnection) ToJenkinsConnectionOutputWithContext(ctx context.Context) JenkinsConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectionOutput)
}

// JenkinsConnectionArrayInput is an input type that accepts JenkinsConnectionArray and JenkinsConnectionArrayOutput values.
// You can construct a concrete instance of `JenkinsConnectionArrayInput` via:
//
//	JenkinsConnectionArray{ JenkinsConnectionArgs{...} }
type JenkinsConnectionArrayInput interface {
	pulumi.Input

	ToJenkinsConnectionArrayOutput() JenkinsConnectionArrayOutput
	ToJenkinsConnectionArrayOutputWithContext(context.Context) JenkinsConnectionArrayOutput
}

type JenkinsConnectionArray []JenkinsConnectionInput

func (JenkinsConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JenkinsConnection)(nil)).Elem()
}

func (i JenkinsConnectionArray) ToJenkinsConnectionArrayOutput() JenkinsConnectionArrayOutput {
	return i.ToJenkinsConnectionArrayOutputWithContext(context.Background())
}

func (i JenkinsConnectionArray) ToJenkinsConnectionArrayOutputWithContext(ctx context.Context) JenkinsConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectionArrayOutput)
}

// JenkinsConnectionMapInput is an input type that accepts JenkinsConnectionMap and JenkinsConnectionMapOutput values.
// You can construct a concrete instance of `JenkinsConnectionMapInput` via:
//
//	JenkinsConnectionMap{ "key": JenkinsConnectionArgs{...} }
type JenkinsConnectionMapInput interface {
	pulumi.Input

	ToJenkinsConnectionMapOutput() JenkinsConnectionMapOutput
	ToJenkinsConnectionMapOutputWithContext(context.Context) JenkinsConnectionMapOutput
}

type JenkinsConnectionMap map[string]JenkinsConnectionInput

func (JenkinsConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JenkinsConnection)(nil)).Elem()
}

func (i JenkinsConnectionMap) ToJenkinsConnectionMapOutput() JenkinsConnectionMapOutput {
	return i.ToJenkinsConnectionMapOutputWithContext(context.Background())
}

func (i JenkinsConnectionMap) ToJenkinsConnectionMapOutputWithContext(ctx context.Context) JenkinsConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JenkinsConnectionMapOutput)
}

type JenkinsConnectionOutput struct{ *pulumi.OutputState }

func (JenkinsConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JenkinsConnection)(nil)).Elem()
}

func (o JenkinsConnectionOutput) ToJenkinsConnectionOutput() JenkinsConnectionOutput {
	return o
}

func (o JenkinsConnectionOutput) ToJenkinsConnectionOutputWithContext(ctx context.Context) JenkinsConnectionOutput {
	return o
}

// The name of the Jenkins connection
func (o JenkinsConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *JenkinsConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The password of the user or API token obtained from the Jenkins UI (Dashboard > User > Configure > API Token)
func (o JenkinsConnectionOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *JenkinsConnection) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Base URL of your Jenkins instance (e.g. https://[YOUR*JENKINS*DOMAIN]/)
func (o JenkinsConnectionOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *JenkinsConnection) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

// The name of your Jenkins user (e.g. jenkins)
func (o JenkinsConnectionOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *JenkinsConnection) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type JenkinsConnectionArrayOutput struct{ *pulumi.OutputState }

func (JenkinsConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JenkinsConnection)(nil)).Elem()
}

func (o JenkinsConnectionArrayOutput) ToJenkinsConnectionArrayOutput() JenkinsConnectionArrayOutput {
	return o
}

func (o JenkinsConnectionArrayOutput) ToJenkinsConnectionArrayOutputWithContext(ctx context.Context) JenkinsConnectionArrayOutput {
	return o
}

func (o JenkinsConnectionArrayOutput) Index(i pulumi.IntInput) JenkinsConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JenkinsConnection {
		return vs[0].([]*JenkinsConnection)[vs[1].(int)]
	}).(JenkinsConnectionOutput)
}

type JenkinsConnectionMapOutput struct{ *pulumi.OutputState }

func (JenkinsConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JenkinsConnection)(nil)).Elem()
}

func (o JenkinsConnectionMapOutput) ToJenkinsConnectionMapOutput() JenkinsConnectionMapOutput {
	return o
}

func (o JenkinsConnectionMapOutput) ToJenkinsConnectionMapOutputWithContext(ctx context.Context) JenkinsConnectionMapOutput {
	return o
}

func (o JenkinsConnectionMapOutput) MapIndex(k pulumi.StringInput) JenkinsConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JenkinsConnection {
		return vs[0].(map[string]*JenkinsConnection)[vs[1].(string)]
	}).(JenkinsConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectionInput)(nil)).Elem(), &JenkinsConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectionArrayInput)(nil)).Elem(), JenkinsConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JenkinsConnectionMapInput)(nil)).Elem(), JenkinsConnectionMap{})
	pulumi.RegisterOutputType(JenkinsConnectionOutput{})
	pulumi.RegisterOutputType(JenkinsConnectionArrayOutput{})
	pulumi.RegisterOutputType(JenkinsConnectionMapOutput{})
}
