// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The generic setting data source allows a single Settings 2.0 object to be retrieved by its schema ID, scope, and/or filter.
//
// If multiple objects match the given criteria, the first result will be retrieved.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := dynatrace.LookupGenericSetting(ctx, &dynatrace.LookupGenericSettingArgs{
//				Schema: pulumi.StringRef("builtin:alerting.maintenance-window"),
//				Filter: pulumi.StringRef("value.generalProperties.name = 'Terraform Example'"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("genericSetting", example)
//			return nil
//		})
//	}
//
// ```
func LookupGenericSetting(ctx *pulumi.Context, args *LookupGenericSettingArgs, opts ...pulumi.InvokeOption) (*LookupGenericSettingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGenericSettingResult
	err := ctx.Invoke("dynatrace:index/getGenericSetting:getGenericSetting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGenericSetting.
type LookupGenericSettingArgs struct {
	// Filter of the requested objects
	Filter *string `pulumi:"filter"`
	// Schema IDs to which the requested objects belong
	Schema *string `pulumi:"schema"`
	// Scope that the requested objects target
	Scope *string `pulumi:"scope"`
}

// A collection of values returned by getGenericSetting.
type LookupGenericSettingResult struct {
	// Filter of the requested objects
	Filter *string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Schema IDs to which the requested objects belong
	Schema string `pulumi:"schema"`
	// Scope that the requested objects target
	Scope string `pulumi:"scope"`
	Value string `pulumi:"value"`
}

func LookupGenericSettingOutput(ctx *pulumi.Context, args LookupGenericSettingOutputArgs, opts ...pulumi.InvokeOption) LookupGenericSettingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGenericSettingResultOutput, error) {
			args := v.(LookupGenericSettingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getGenericSetting:getGenericSetting", args, LookupGenericSettingResultOutput{}, options).(LookupGenericSettingResultOutput), nil
		}).(LookupGenericSettingResultOutput)
}

// A collection of arguments for invoking getGenericSetting.
type LookupGenericSettingOutputArgs struct {
	// Filter of the requested objects
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Schema IDs to which the requested objects belong
	Schema pulumi.StringPtrInput `pulumi:"schema"`
	// Scope that the requested objects target
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (LookupGenericSettingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGenericSettingArgs)(nil)).Elem()
}

// A collection of values returned by getGenericSetting.
type LookupGenericSettingResultOutput struct{ *pulumi.OutputState }

func (LookupGenericSettingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGenericSettingResult)(nil)).Elem()
}

func (o LookupGenericSettingResultOutput) ToLookupGenericSettingResultOutput() LookupGenericSettingResultOutput {
	return o
}

func (o LookupGenericSettingResultOutput) ToLookupGenericSettingResultOutputWithContext(ctx context.Context) LookupGenericSettingResultOutput {
	return o
}

// Filter of the requested objects
func (o LookupGenericSettingResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGenericSettingResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGenericSettingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGenericSettingResult) string { return v.Id }).(pulumi.StringOutput)
}

// Schema IDs to which the requested objects belong
func (o LookupGenericSettingResultOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGenericSettingResult) string { return v.Schema }).(pulumi.StringOutput)
}

// Scope that the requested objects target
func (o LookupGenericSettingResultOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGenericSettingResult) string { return v.Scope }).(pulumi.StringOutput)
}

func (o LookupGenericSettingResultOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGenericSettingResult) string { return v.Value }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGenericSettingResultOutput{})
}
