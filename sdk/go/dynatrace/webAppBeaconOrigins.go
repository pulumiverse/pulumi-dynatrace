// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type WebAppBeaconOrigins struct {
	pulumi.CustomResourceState

	// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
	Matcher pulumi.StringOutput `pulumi:"matcher"`
	// Pattern
	Pattern pulumi.StringOutput `pulumi:"pattern"`
}

// NewWebAppBeaconOrigins registers a new resource with the given unique name, arguments, and options.
func NewWebAppBeaconOrigins(ctx *pulumi.Context,
	name string, args *WebAppBeaconOriginsArgs, opts ...pulumi.ResourceOption) (*WebAppBeaconOrigins, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Matcher == nil {
		return nil, errors.New("invalid value for required argument 'Matcher'")
	}
	if args.Pattern == nil {
		return nil, errors.New("invalid value for required argument 'Pattern'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAppBeaconOrigins
	err := ctx.RegisterResource("dynatrace:index/webAppBeaconOrigins:WebAppBeaconOrigins", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppBeaconOrigins gets an existing WebAppBeaconOrigins resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppBeaconOrigins(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppBeaconOriginsState, opts ...pulumi.ResourceOption) (*WebAppBeaconOrigins, error) {
	var resource WebAppBeaconOrigins
	err := ctx.ReadResource("dynatrace:index/webAppBeaconOrigins:WebAppBeaconOrigins", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppBeaconOrigins resources.
type webAppBeaconOriginsState struct {
	// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
	Matcher *string `pulumi:"matcher"`
	// Pattern
	Pattern *string `pulumi:"pattern"`
}

type WebAppBeaconOriginsState struct {
	// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
	Matcher pulumi.StringPtrInput
	// Pattern
	Pattern pulumi.StringPtrInput
}

func (WebAppBeaconOriginsState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppBeaconOriginsState)(nil)).Elem()
}

type webAppBeaconOriginsArgs struct {
	// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
	Matcher string `pulumi:"matcher"`
	// Pattern
	Pattern string `pulumi:"pattern"`
}

// The set of arguments for constructing a WebAppBeaconOrigins resource.
type WebAppBeaconOriginsArgs struct {
	// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
	Matcher pulumi.StringInput
	// Pattern
	Pattern pulumi.StringInput
}

func (WebAppBeaconOriginsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppBeaconOriginsArgs)(nil)).Elem()
}

type WebAppBeaconOriginsInput interface {
	pulumi.Input

	ToWebAppBeaconOriginsOutput() WebAppBeaconOriginsOutput
	ToWebAppBeaconOriginsOutputWithContext(ctx context.Context) WebAppBeaconOriginsOutput
}

func (*WebAppBeaconOrigins) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppBeaconOrigins)(nil)).Elem()
}

func (i *WebAppBeaconOrigins) ToWebAppBeaconOriginsOutput() WebAppBeaconOriginsOutput {
	return i.ToWebAppBeaconOriginsOutputWithContext(context.Background())
}

func (i *WebAppBeaconOrigins) ToWebAppBeaconOriginsOutputWithContext(ctx context.Context) WebAppBeaconOriginsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppBeaconOriginsOutput)
}

// WebAppBeaconOriginsArrayInput is an input type that accepts WebAppBeaconOriginsArray and WebAppBeaconOriginsArrayOutput values.
// You can construct a concrete instance of `WebAppBeaconOriginsArrayInput` via:
//
//	WebAppBeaconOriginsArray{ WebAppBeaconOriginsArgs{...} }
type WebAppBeaconOriginsArrayInput interface {
	pulumi.Input

	ToWebAppBeaconOriginsArrayOutput() WebAppBeaconOriginsArrayOutput
	ToWebAppBeaconOriginsArrayOutputWithContext(context.Context) WebAppBeaconOriginsArrayOutput
}

type WebAppBeaconOriginsArray []WebAppBeaconOriginsInput

func (WebAppBeaconOriginsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppBeaconOrigins)(nil)).Elem()
}

func (i WebAppBeaconOriginsArray) ToWebAppBeaconOriginsArrayOutput() WebAppBeaconOriginsArrayOutput {
	return i.ToWebAppBeaconOriginsArrayOutputWithContext(context.Background())
}

func (i WebAppBeaconOriginsArray) ToWebAppBeaconOriginsArrayOutputWithContext(ctx context.Context) WebAppBeaconOriginsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppBeaconOriginsArrayOutput)
}

// WebAppBeaconOriginsMapInput is an input type that accepts WebAppBeaconOriginsMap and WebAppBeaconOriginsMapOutput values.
// You can construct a concrete instance of `WebAppBeaconOriginsMapInput` via:
//
//	WebAppBeaconOriginsMap{ "key": WebAppBeaconOriginsArgs{...} }
type WebAppBeaconOriginsMapInput interface {
	pulumi.Input

	ToWebAppBeaconOriginsMapOutput() WebAppBeaconOriginsMapOutput
	ToWebAppBeaconOriginsMapOutputWithContext(context.Context) WebAppBeaconOriginsMapOutput
}

type WebAppBeaconOriginsMap map[string]WebAppBeaconOriginsInput

func (WebAppBeaconOriginsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppBeaconOrigins)(nil)).Elem()
}

func (i WebAppBeaconOriginsMap) ToWebAppBeaconOriginsMapOutput() WebAppBeaconOriginsMapOutput {
	return i.ToWebAppBeaconOriginsMapOutputWithContext(context.Background())
}

func (i WebAppBeaconOriginsMap) ToWebAppBeaconOriginsMapOutputWithContext(ctx context.Context) WebAppBeaconOriginsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppBeaconOriginsMapOutput)
}

type WebAppBeaconOriginsOutput struct{ *pulumi.OutputState }

func (WebAppBeaconOriginsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppBeaconOrigins)(nil)).Elem()
}

func (o WebAppBeaconOriginsOutput) ToWebAppBeaconOriginsOutput() WebAppBeaconOriginsOutput {
	return o
}

func (o WebAppBeaconOriginsOutput) ToWebAppBeaconOriginsOutputWithContext(ctx context.Context) WebAppBeaconOriginsOutput {
	return o
}

// Possible Values: `CONTAINS`, `ENDS_WITH`, `EQUALS`, `STARTS_WITH`
func (o WebAppBeaconOriginsOutput) Matcher() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppBeaconOrigins) pulumi.StringOutput { return v.Matcher }).(pulumi.StringOutput)
}

// Pattern
func (o WebAppBeaconOriginsOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppBeaconOrigins) pulumi.StringOutput { return v.Pattern }).(pulumi.StringOutput)
}

type WebAppBeaconOriginsArrayOutput struct{ *pulumi.OutputState }

func (WebAppBeaconOriginsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppBeaconOrigins)(nil)).Elem()
}

func (o WebAppBeaconOriginsArrayOutput) ToWebAppBeaconOriginsArrayOutput() WebAppBeaconOriginsArrayOutput {
	return o
}

func (o WebAppBeaconOriginsArrayOutput) ToWebAppBeaconOriginsArrayOutputWithContext(ctx context.Context) WebAppBeaconOriginsArrayOutput {
	return o
}

func (o WebAppBeaconOriginsArrayOutput) Index(i pulumi.IntInput) WebAppBeaconOriginsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAppBeaconOrigins {
		return vs[0].([]*WebAppBeaconOrigins)[vs[1].(int)]
	}).(WebAppBeaconOriginsOutput)
}

type WebAppBeaconOriginsMapOutput struct{ *pulumi.OutputState }

func (WebAppBeaconOriginsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppBeaconOrigins)(nil)).Elem()
}

func (o WebAppBeaconOriginsMapOutput) ToWebAppBeaconOriginsMapOutput() WebAppBeaconOriginsMapOutput {
	return o
}

func (o WebAppBeaconOriginsMapOutput) ToWebAppBeaconOriginsMapOutputWithContext(ctx context.Context) WebAppBeaconOriginsMapOutput {
	return o
}

func (o WebAppBeaconOriginsMapOutput) MapIndex(k pulumi.StringInput) WebAppBeaconOriginsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAppBeaconOrigins {
		return vs[0].(map[string]*WebAppBeaconOrigins)[vs[1].(string)]
	}).(WebAppBeaconOriginsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppBeaconOriginsInput)(nil)).Elem(), &WebAppBeaconOrigins{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppBeaconOriginsArrayInput)(nil)).Elem(), WebAppBeaconOriginsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppBeaconOriginsMapInput)(nil)).Elem(), WebAppBeaconOriginsMap{})
	pulumi.RegisterOutputType(WebAppBeaconOriginsOutput{})
	pulumi.RegisterOutputType(WebAppBeaconOriginsArrayOutput{})
	pulumi.RegisterOutputType(WebAppBeaconOriginsMapOutput{})
}
