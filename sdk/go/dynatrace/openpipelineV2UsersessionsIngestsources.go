// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OpenpipelineV2UsersessionsIngestsources struct {
	pulumi.CustomResourceState

	// Default Bucket
	DefaultBucket pulumi.StringPtrOutput `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Endpoint segment
	PathSegment pulumi.StringOutput `pulumi:"pathSegment"`
	// Processing stage
	Processing OpenpipelineV2UsersessionsIngestsourcesProcessingOutput `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting OpenpipelineV2UsersessionsIngestsourcesStaticRoutingPtrOutput `pulumi:"staticRouting"`
}

// NewOpenpipelineV2UsersessionsIngestsources registers a new resource with the given unique name, arguments, and options.
func NewOpenpipelineV2UsersessionsIngestsources(ctx *pulumi.Context,
	name string, args *OpenpipelineV2UsersessionsIngestsourcesArgs, opts ...pulumi.ResourceOption) (*OpenpipelineV2UsersessionsIngestsources, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.PathSegment == nil {
		return nil, errors.New("invalid value for required argument 'PathSegment'")
	}
	if args.Processing == nil {
		return nil, errors.New("invalid value for required argument 'Processing'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenpipelineV2UsersessionsIngestsources
	err := ctx.RegisterResource("dynatrace:index/openpipelineV2UsersessionsIngestsources:OpenpipelineV2UsersessionsIngestsources", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenpipelineV2UsersessionsIngestsources gets an existing OpenpipelineV2UsersessionsIngestsources resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenpipelineV2UsersessionsIngestsources(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenpipelineV2UsersessionsIngestsourcesState, opts ...pulumi.ResourceOption) (*OpenpipelineV2UsersessionsIngestsources, error) {
	var resource OpenpipelineV2UsersessionsIngestsources
	err := ctx.ReadResource("dynatrace:index/openpipelineV2UsersessionsIngestsources:OpenpipelineV2UsersessionsIngestsources", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenpipelineV2UsersessionsIngestsources resources.
type openpipelineV2UsersessionsIngestsourcesState struct {
	// Default Bucket
	DefaultBucket *string `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName *string `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Endpoint segment
	PathSegment *string `pulumi:"pathSegment"`
	// Processing stage
	Processing *OpenpipelineV2UsersessionsIngestsourcesProcessing `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting *OpenpipelineV2UsersessionsIngestsourcesStaticRouting `pulumi:"staticRouting"`
}

type OpenpipelineV2UsersessionsIngestsourcesState struct {
	// Default Bucket
	DefaultBucket pulumi.StringPtrInput
	// Endpoint display name
	DisplayName pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Endpoint segment
	PathSegment pulumi.StringPtrInput
	// Processing stage
	Processing OpenpipelineV2UsersessionsIngestsourcesProcessingPtrInput
	// Static routing of endpoint
	StaticRouting OpenpipelineV2UsersessionsIngestsourcesStaticRoutingPtrInput
}

func (OpenpipelineV2UsersessionsIngestsourcesState) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2UsersessionsIngestsourcesState)(nil)).Elem()
}

type openpipelineV2UsersessionsIngestsourcesArgs struct {
	// Default Bucket
	DefaultBucket *string `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName string `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Endpoint segment
	PathSegment string `pulumi:"pathSegment"`
	// Processing stage
	Processing OpenpipelineV2UsersessionsIngestsourcesProcessing `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting *OpenpipelineV2UsersessionsIngestsourcesStaticRouting `pulumi:"staticRouting"`
}

// The set of arguments for constructing a OpenpipelineV2UsersessionsIngestsources resource.
type OpenpipelineV2UsersessionsIngestsourcesArgs struct {
	// Default Bucket
	DefaultBucket pulumi.StringPtrInput
	// Endpoint display name
	DisplayName pulumi.StringInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Endpoint segment
	PathSegment pulumi.StringInput
	// Processing stage
	Processing OpenpipelineV2UsersessionsIngestsourcesProcessingInput
	// Static routing of endpoint
	StaticRouting OpenpipelineV2UsersessionsIngestsourcesStaticRoutingPtrInput
}

func (OpenpipelineV2UsersessionsIngestsourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2UsersessionsIngestsourcesArgs)(nil)).Elem()
}

type OpenpipelineV2UsersessionsIngestsourcesInput interface {
	pulumi.Input

	ToOpenpipelineV2UsersessionsIngestsourcesOutput() OpenpipelineV2UsersessionsIngestsourcesOutput
	ToOpenpipelineV2UsersessionsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsIngestsourcesOutput
}

func (*OpenpipelineV2UsersessionsIngestsources) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2UsersessionsIngestsources)(nil)).Elem()
}

func (i *OpenpipelineV2UsersessionsIngestsources) ToOpenpipelineV2UsersessionsIngestsourcesOutput() OpenpipelineV2UsersessionsIngestsourcesOutput {
	return i.ToOpenpipelineV2UsersessionsIngestsourcesOutputWithContext(context.Background())
}

func (i *OpenpipelineV2UsersessionsIngestsources) ToOpenpipelineV2UsersessionsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsIngestsourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2UsersessionsIngestsourcesOutput)
}

// OpenpipelineV2UsersessionsIngestsourcesArrayInput is an input type that accepts OpenpipelineV2UsersessionsIngestsourcesArray and OpenpipelineV2UsersessionsIngestsourcesArrayOutput values.
// You can construct a concrete instance of `OpenpipelineV2UsersessionsIngestsourcesArrayInput` via:
//
//	OpenpipelineV2UsersessionsIngestsourcesArray{ OpenpipelineV2UsersessionsIngestsourcesArgs{...} }
type OpenpipelineV2UsersessionsIngestsourcesArrayInput interface {
	pulumi.Input

	ToOpenpipelineV2UsersessionsIngestsourcesArrayOutput() OpenpipelineV2UsersessionsIngestsourcesArrayOutput
	ToOpenpipelineV2UsersessionsIngestsourcesArrayOutputWithContext(context.Context) OpenpipelineV2UsersessionsIngestsourcesArrayOutput
}

type OpenpipelineV2UsersessionsIngestsourcesArray []OpenpipelineV2UsersessionsIngestsourcesInput

func (OpenpipelineV2UsersessionsIngestsourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2UsersessionsIngestsources)(nil)).Elem()
}

func (i OpenpipelineV2UsersessionsIngestsourcesArray) ToOpenpipelineV2UsersessionsIngestsourcesArrayOutput() OpenpipelineV2UsersessionsIngestsourcesArrayOutput {
	return i.ToOpenpipelineV2UsersessionsIngestsourcesArrayOutputWithContext(context.Background())
}

func (i OpenpipelineV2UsersessionsIngestsourcesArray) ToOpenpipelineV2UsersessionsIngestsourcesArrayOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsIngestsourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2UsersessionsIngestsourcesArrayOutput)
}

// OpenpipelineV2UsersessionsIngestsourcesMapInput is an input type that accepts OpenpipelineV2UsersessionsIngestsourcesMap and OpenpipelineV2UsersessionsIngestsourcesMapOutput values.
// You can construct a concrete instance of `OpenpipelineV2UsersessionsIngestsourcesMapInput` via:
//
//	OpenpipelineV2UsersessionsIngestsourcesMap{ "key": OpenpipelineV2UsersessionsIngestsourcesArgs{...} }
type OpenpipelineV2UsersessionsIngestsourcesMapInput interface {
	pulumi.Input

	ToOpenpipelineV2UsersessionsIngestsourcesMapOutput() OpenpipelineV2UsersessionsIngestsourcesMapOutput
	ToOpenpipelineV2UsersessionsIngestsourcesMapOutputWithContext(context.Context) OpenpipelineV2UsersessionsIngestsourcesMapOutput
}

type OpenpipelineV2UsersessionsIngestsourcesMap map[string]OpenpipelineV2UsersessionsIngestsourcesInput

func (OpenpipelineV2UsersessionsIngestsourcesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2UsersessionsIngestsources)(nil)).Elem()
}

func (i OpenpipelineV2UsersessionsIngestsourcesMap) ToOpenpipelineV2UsersessionsIngestsourcesMapOutput() OpenpipelineV2UsersessionsIngestsourcesMapOutput {
	return i.ToOpenpipelineV2UsersessionsIngestsourcesMapOutputWithContext(context.Background())
}

func (i OpenpipelineV2UsersessionsIngestsourcesMap) ToOpenpipelineV2UsersessionsIngestsourcesMapOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsIngestsourcesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2UsersessionsIngestsourcesMapOutput)
}

type OpenpipelineV2UsersessionsIngestsourcesOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2UsersessionsIngestsourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2UsersessionsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2UsersessionsIngestsourcesOutput) ToOpenpipelineV2UsersessionsIngestsourcesOutput() OpenpipelineV2UsersessionsIngestsourcesOutput {
	return o
}

func (o OpenpipelineV2UsersessionsIngestsourcesOutput) ToOpenpipelineV2UsersessionsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsIngestsourcesOutput {
	return o
}

// Default Bucket
func (o OpenpipelineV2UsersessionsIngestsourcesOutput) DefaultBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsIngestsources) pulumi.StringPtrOutput { return v.DefaultBucket }).(pulumi.StringPtrOutput)
}

// Endpoint display name
func (o OpenpipelineV2UsersessionsIngestsourcesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsIngestsources) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o OpenpipelineV2UsersessionsIngestsourcesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsIngestsources) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Endpoint segment
func (o OpenpipelineV2UsersessionsIngestsourcesOutput) PathSegment() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsIngestsources) pulumi.StringOutput { return v.PathSegment }).(pulumi.StringOutput)
}

// Processing stage
func (o OpenpipelineV2UsersessionsIngestsourcesOutput) Processing() OpenpipelineV2UsersessionsIngestsourcesProcessingOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsIngestsources) OpenpipelineV2UsersessionsIngestsourcesProcessingOutput {
		return v.Processing
	}).(OpenpipelineV2UsersessionsIngestsourcesProcessingOutput)
}

// Static routing of endpoint
func (o OpenpipelineV2UsersessionsIngestsourcesOutput) StaticRouting() OpenpipelineV2UsersessionsIngestsourcesStaticRoutingPtrOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsIngestsources) OpenpipelineV2UsersessionsIngestsourcesStaticRoutingPtrOutput {
		return v.StaticRouting
	}).(OpenpipelineV2UsersessionsIngestsourcesStaticRoutingPtrOutput)
}

type OpenpipelineV2UsersessionsIngestsourcesArrayOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2UsersessionsIngestsourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2UsersessionsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2UsersessionsIngestsourcesArrayOutput) ToOpenpipelineV2UsersessionsIngestsourcesArrayOutput() OpenpipelineV2UsersessionsIngestsourcesArrayOutput {
	return o
}

func (o OpenpipelineV2UsersessionsIngestsourcesArrayOutput) ToOpenpipelineV2UsersessionsIngestsourcesArrayOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsIngestsourcesArrayOutput {
	return o
}

func (o OpenpipelineV2UsersessionsIngestsourcesArrayOutput) Index(i pulumi.IntInput) OpenpipelineV2UsersessionsIngestsourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenpipelineV2UsersessionsIngestsources {
		return vs[0].([]*OpenpipelineV2UsersessionsIngestsources)[vs[1].(int)]
	}).(OpenpipelineV2UsersessionsIngestsourcesOutput)
}

type OpenpipelineV2UsersessionsIngestsourcesMapOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2UsersessionsIngestsourcesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2UsersessionsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2UsersessionsIngestsourcesMapOutput) ToOpenpipelineV2UsersessionsIngestsourcesMapOutput() OpenpipelineV2UsersessionsIngestsourcesMapOutput {
	return o
}

func (o OpenpipelineV2UsersessionsIngestsourcesMapOutput) ToOpenpipelineV2UsersessionsIngestsourcesMapOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsIngestsourcesMapOutput {
	return o
}

func (o OpenpipelineV2UsersessionsIngestsourcesMapOutput) MapIndex(k pulumi.StringInput) OpenpipelineV2UsersessionsIngestsourcesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenpipelineV2UsersessionsIngestsources {
		return vs[0].(map[string]*OpenpipelineV2UsersessionsIngestsources)[vs[1].(string)]
	}).(OpenpipelineV2UsersessionsIngestsourcesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2UsersessionsIngestsourcesInput)(nil)).Elem(), &OpenpipelineV2UsersessionsIngestsources{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2UsersessionsIngestsourcesArrayInput)(nil)).Elem(), OpenpipelineV2UsersessionsIngestsourcesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2UsersessionsIngestsourcesMapInput)(nil)).Elem(), OpenpipelineV2UsersessionsIngestsourcesMap{})
	pulumi.RegisterOutputType(OpenpipelineV2UsersessionsIngestsourcesOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2UsersessionsIngestsourcesArrayOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2UsersessionsIngestsourcesMapOutput{})
}
