// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "dynatrace:index/activegateToken:ActivegateToken":
		r = &ActivegateToken{}
	case "dynatrace:index/activegateUpdates:ActivegateUpdates":
		r = &ActivegateUpdates{}
	case "dynatrace:index/agToken:AgToken":
		r = &AgToken{}
	case "dynatrace:index/aixExtension:AixExtension":
		r = &AixExtension{}
	case "dynatrace:index/alerting:Alerting":
		r = &Alerting{}
	case "dynatrace:index/alertingProfile:AlertingProfile":
		r = &AlertingProfile{}
	case "dynatrace:index/ansibleTowerNotification:AnsibleTowerNotification":
		r = &AnsibleTowerNotification{}
	case "dynatrace:index/apiDetection:ApiDetection":
		r = &ApiDetection{}
	case "dynatrace:index/apiToken:ApiToken":
		r = &ApiToken{}
	case "dynatrace:index/appMonitoring:AppMonitoring":
		r = &AppMonitoring{}
	case "dynatrace:index/applicationAnomalies:ApplicationAnomalies":
		r = &ApplicationAnomalies{}
	case "dynatrace:index/applicationDataPrivacy:ApplicationDataPrivacy":
		r = &ApplicationDataPrivacy{}
	case "dynatrace:index/applicationDetectionRule:ApplicationDetectionRule":
		r = &ApplicationDetectionRule{}
	case "dynatrace:index/applicationDetectionRuleV2:ApplicationDetectionRuleV2":
		r = &ApplicationDetectionRuleV2{}
	case "dynatrace:index/applicationErrorRules:ApplicationErrorRules":
		r = &ApplicationErrorRules{}
	case "dynatrace:index/appsecNotification:AppsecNotification":
		r = &AppsecNotification{}
	case "dynatrace:index/attackAlerting:AttackAlerting":
		r = &AttackAlerting{}
	case "dynatrace:index/attackAllowlist:AttackAllowlist":
		r = &AttackAllowlist{}
	case "dynatrace:index/attackRules:AttackRules":
		r = &AttackRules{}
	case "dynatrace:index/attackSettings:AttackSettings":
		r = &AttackSettings{}
	case "dynatrace:index/attributeAllowList:AttributeAllowList":
		r = &AttributeAllowList{}
	case "dynatrace:index/attributeBlockList:AttributeBlockList":
		r = &AttributeBlockList{}
	case "dynatrace:index/attributeMasking:AttributeMasking":
		r = &AttributeMasking{}
	case "dynatrace:index/attributesPreferences:AttributesPreferences":
		r = &AttributesPreferences{}
	case "dynatrace:index/auditLog:AuditLog":
		r = &AuditLog{}
	case "dynatrace:index/automationBusinessCalendar:AutomationBusinessCalendar":
		r = &AutomationBusinessCalendar{}
	case "dynatrace:index/automationControllerConnections:AutomationControllerConnections":
		r = &AutomationControllerConnections{}
	case "dynatrace:index/automationSchedulingRule:AutomationSchedulingRule":
		r = &AutomationSchedulingRule{}
	case "dynatrace:index/automationWorkflow:AutomationWorkflow":
		r = &AutomationWorkflow{}
	case "dynatrace:index/automationWorkflowAwsConnections:AutomationWorkflowAwsConnections":
		r = &AutomationWorkflowAwsConnections{}
	case "dynatrace:index/automationWorkflowJira:AutomationWorkflowJira":
		r = &AutomationWorkflowJira{}
	case "dynatrace:index/automationWorkflowK8sConnections:AutomationWorkflowK8sConnections":
		r = &AutomationWorkflowK8sConnections{}
	case "dynatrace:index/automationWorkflowSlack:AutomationWorkflowSlack":
		r = &AutomationWorkflowSlack{}
	case "dynatrace:index/autotag:Autotag":
		r = &Autotag{}
	case "dynatrace:index/autotagRules:AutotagRules":
		r = &AutotagRules{}
	case "dynatrace:index/autotagV2:AutotagV2":
		r = &AutotagV2{}
	case "dynatrace:index/awsAnomalies:AwsAnomalies":
		r = &AwsAnomalies{}
	case "dynatrace:index/awsCredentials:AwsCredentials":
		r = &AwsCredentials{}
	case "dynatrace:index/awsService:AwsService":
		r = &AwsService{}
	case "dynatrace:index/azureCredentials:AzureCredentials":
		r = &AzureCredentials{}
	case "dynatrace:index/azureService:AzureService":
		r = &AzureService{}
	case "dynatrace:index/browserMonitor:BrowserMonitor":
		r = &BrowserMonitor{}
	case "dynatrace:index/browserMonitorOutage:BrowserMonitorOutage":
		r = &BrowserMonitorOutage{}
	case "dynatrace:index/browserMonitorPerformance:BrowserMonitorPerformance":
		r = &BrowserMonitorPerformance{}
	case "dynatrace:index/builtinProcessMonitoring:BuiltinProcessMonitoring":
		r = &BuiltinProcessMonitoring{}
	case "dynatrace:index/businessEventsBuckets:BusinessEventsBuckets":
		r = &BusinessEventsBuckets{}
	case "dynatrace:index/businessEventsCapturingVariants:BusinessEventsCapturingVariants":
		r = &BusinessEventsCapturingVariants{}
	case "dynatrace:index/businessEventsMetrics:BusinessEventsMetrics":
		r = &BusinessEventsMetrics{}
	case "dynatrace:index/businessEventsOneagent:BusinessEventsOneagent":
		r = &BusinessEventsOneagent{}
	case "dynatrace:index/businessEventsOneagentOutgoing:BusinessEventsOneagentOutgoing":
		r = &BusinessEventsOneagentOutgoing{}
	case "dynatrace:index/businessEventsProcessing:BusinessEventsProcessing":
		r = &BusinessEventsProcessing{}
	case "dynatrace:index/businessEventsSecurityContext:BusinessEventsSecurityContext":
		r = &BusinessEventsSecurityContext{}
	case "dynatrace:index/calculatedMobileMetric:CalculatedMobileMetric":
		r = &CalculatedMobileMetric{}
	case "dynatrace:index/calculatedServiceMetric:CalculatedServiceMetric":
		r = &CalculatedServiceMetric{}
	case "dynatrace:index/calculatedSyntheticMetric:CalculatedSyntheticMetric":
		r = &CalculatedSyntheticMetric{}
	case "dynatrace:index/calculatedWebMetric:CalculatedWebMetric":
		r = &CalculatedWebMetric{}
	case "dynatrace:index/cloudDevelopmentEnvironments:CloudDevelopmentEnvironments":
		r = &CloudDevelopmentEnvironments{}
	case "dynatrace:index/cloudFoundry:CloudFoundry":
		r = &CloudFoundry{}
	case "dynatrace:index/cloudappWorkloaddetection:CloudappWorkloaddetection":
		r = &CloudappWorkloaddetection{}
	case "dynatrace:index/cloudfoundryCredentials:CloudfoundryCredentials":
		r = &CloudfoundryCredentials{}
	case "dynatrace:index/connectivityAlerts:ConnectivityAlerts":
		r = &ConnectivityAlerts{}
	case "dynatrace:index/containerBuiltinRule:ContainerBuiltinRule":
		r = &ContainerBuiltinRule{}
	case "dynatrace:index/containerRegistry:ContainerRegistry":
		r = &ContainerRegistry{}
	case "dynatrace:index/containerRule:ContainerRule":
		r = &ContainerRule{}
	case "dynatrace:index/containerTechnology:ContainerTechnology":
		r = &ContainerTechnology{}
	case "dynatrace:index/crashdumpAnalytics:CrashdumpAnalytics":
		r = &CrashdumpAnalytics{}
	case "dynatrace:index/credentials:Credentials":
		r = &Credentials{}
	case "dynatrace:index/customAnomalies:CustomAnomalies":
		r = &CustomAnomalies{}
	case "dynatrace:index/customAppAnomalies:CustomAppAnomalies":
		r = &CustomAppAnomalies{}
	case "dynatrace:index/customAppCrashRate:CustomAppCrashRate":
		r = &CustomAppCrashRate{}
	case "dynatrace:index/customAppEnablement:CustomAppEnablement":
		r = &CustomAppEnablement{}
	case "dynatrace:index/customDevice:CustomDevice":
		r = &CustomDevice{}
	case "dynatrace:index/customService:CustomService":
		r = &CustomService{}
	case "dynatrace:index/customServiceOrder:CustomServiceOrder":
		r = &CustomServiceOrder{}
	case "dynatrace:index/customTags:CustomTags":
		r = &CustomTags{}
	case "dynatrace:index/customUnits:CustomUnits":
		r = &CustomUnits{}
	case "dynatrace:index/dashboard:Dashboard":
		r = &Dashboard{}
	case "dynatrace:index/dashboardSharing:DashboardSharing":
		r = &DashboardSharing{}
	case "dynatrace:index/dashboardsAllowlist:DashboardsAllowlist":
		r = &DashboardsAllowlist{}
	case "dynatrace:index/dashboardsGeneral:DashboardsGeneral":
		r = &DashboardsGeneral{}
	case "dynatrace:index/dashboardsPresets:DashboardsPresets":
		r = &DashboardsPresets{}
	case "dynatrace:index/dataPrivacy:DataPrivacy":
		r = &DataPrivacy{}
	case "dynatrace:index/databaseAnomalies:DatabaseAnomalies":
		r = &DatabaseAnomalies{}
	case "dynatrace:index/databaseAnomaliesV2:DatabaseAnomaliesV2":
		r = &DatabaseAnomaliesV2{}
	case "dynatrace:index/davisAnomalyDetectors:DavisAnomalyDetectors":
		r = &DavisAnomalyDetectors{}
	case "dynatrace:index/davisCopilot:DavisCopilot":
		r = &DavisCopilot{}
	case "dynatrace:index/dbAppFeatureFlags:DbAppFeatureFlags":
		r = &DbAppFeatureFlags{}
	case "dynatrace:index/dduPool:DduPool":
		r = &DduPool{}
	case "dynatrace:index/declarativeGrouping:DeclarativeGrouping":
		r = &DeclarativeGrouping{}
	case "dynatrace:index/defaultLaunchpad:DefaultLaunchpad":
		r = &DefaultLaunchpad{}
	case "dynatrace:index/devobsAgentOptin:DevobsAgentOptin":
		r = &DevobsAgentOptin{}
	case "dynatrace:index/devobsDataMasking:DevobsDataMasking":
		r = &DevobsDataMasking{}
	case "dynatrace:index/devobsGitOnprem:DevobsGitOnprem":
		r = &DevobsGitOnprem{}
	case "dynatrace:index/directShares:DirectShares":
		r = &DirectShares{}
	case "dynatrace:index/discoveryDefaultRules:DiscoveryDefaultRules":
		r = &DiscoveryDefaultRules{}
	case "dynatrace:index/discoveryFeatureFlags:DiscoveryFeatureFlags":
		r = &DiscoveryFeatureFlags{}
	case "dynatrace:index/diskAnalytics:DiskAnalytics":
		r = &DiskAnalytics{}
	case "dynatrace:index/diskAnomalies:DiskAnomalies":
		r = &DiskAnomalies{}
	case "dynatrace:index/diskAnomaliesV2:DiskAnomaliesV2":
		r = &DiskAnomaliesV2{}
	case "dynatrace:index/diskAnomalyRules:DiskAnomalyRules":
		r = &DiskAnomalyRules{}
	case "dynatrace:index/diskEdgeAnomalyDetectors:DiskEdgeAnomalyDetectors":
		r = &DiskEdgeAnomalyDetectors{}
	case "dynatrace:index/diskOptions:DiskOptions":
		r = &DiskOptions{}
	case "dynatrace:index/diskSpecificAnomaliesV2:DiskSpecificAnomaliesV2":
		r = &DiskSpecificAnomaliesV2{}
	case "dynatrace:index/document:Document":
		r = &Document{}
	case "dynatrace:index/ebpfServiceDiscovery:EbpfServiceDiscovery":
		r = &EbpfServiceDiscovery{}
	case "dynatrace:index/emailNotification:EmailNotification":
		r = &EmailNotification{}
	case "dynatrace:index/environment:Environment":
		r = &Environment{}
	case "dynatrace:index/eulaSettings:EulaSettings":
		r = &EulaSettings{}
	case "dynatrace:index/eventDrivenAnsibleConnections:EventDrivenAnsibleConnections":
		r = &EventDrivenAnsibleConnections{}
	case "dynatrace:index/extensionExecutionController:ExtensionExecutionController":
		r = &ExtensionExecutionController{}
	case "dynatrace:index/extensionExecutionRemote:ExtensionExecutionRemote":
		r = &ExtensionExecutionRemote{}
	case "dynatrace:index/failureDetectionParameters:FailureDetectionParameters":
		r = &FailureDetectionParameters{}
	case "dynatrace:index/failureDetectionRules:FailureDetectionRules":
		r = &FailureDetectionRules{}
	case "dynatrace:index/frequentIssues:FrequentIssues":
		r = &FrequentIssues{}
	case "dynatrace:index/genericRelationships:GenericRelationships":
		r = &GenericRelationships{}
	case "dynatrace:index/genericSetting:GenericSetting":
		r = &GenericSetting{}
	case "dynatrace:index/genericTypes:GenericTypes":
		r = &GenericTypes{}
	case "dynatrace:index/geolocation:Geolocation":
		r = &Geolocation{}
	case "dynatrace:index/githubConnection:GithubConnection":
		r = &GithubConnection{}
	case "dynatrace:index/gitlabConnection:GitlabConnection":
		r = &GitlabConnection{}
	case "dynatrace:index/goldenState:GoldenState":
		r = &GoldenState{}
	case "dynatrace:index/grailMetricsAllowall:GrailMetricsAllowall":
		r = &GrailMetricsAllowall{}
	case "dynatrace:index/grailMetricsAllowlist:GrailMetricsAllowlist":
		r = &GrailMetricsAllowlist{}
	case "dynatrace:index/grailSecurityContext:GrailSecurityContext":
		r = &GrailSecurityContext{}
	case "dynatrace:index/histogramMetrics:HistogramMetrics":
		r = &HistogramMetrics{}
	case "dynatrace:index/hostAnomalies:HostAnomalies":
		r = &HostAnomalies{}
	case "dynatrace:index/hostAnomaliesV2:HostAnomaliesV2":
		r = &HostAnomaliesV2{}
	case "dynatrace:index/hostMonitoring:HostMonitoring":
		r = &HostMonitoring{}
	case "dynatrace:index/hostMonitoringAdvanced:HostMonitoringAdvanced":
		r = &HostMonitoringAdvanced{}
	case "dynatrace:index/hostMonitoringMode:HostMonitoringMode":
		r = &HostMonitoringMode{}
	case "dynatrace:index/hostNaming:HostNaming":
		r = &HostNaming{}
	case "dynatrace:index/hostNamingOrder:HostNamingOrder":
		r = &HostNamingOrder{}
	case "dynatrace:index/hostProcessGroupMonitoring:HostProcessGroupMonitoring":
		r = &HostProcessGroupMonitoring{}
	case "dynatrace:index/httpMonitor:HttpMonitor":
		r = &HttpMonitor{}
	case "dynatrace:index/httpMonitorCookies:HttpMonitorCookies":
		r = &HttpMonitorCookies{}
	case "dynatrace:index/httpMonitorOutage:HttpMonitorOutage":
		r = &HttpMonitorOutage{}
	case "dynatrace:index/httpMonitorPerformance:HttpMonitorPerformance":
		r = &HttpMonitorPerformance{}
	case "dynatrace:index/httpMonitorScript:HttpMonitorScript":
		r = &HttpMonitorScript{}
	case "dynatrace:index/hubExtensionActiveVersion:HubExtensionActiveVersion":
		r = &HubExtensionActiveVersion{}
	case "dynatrace:index/hubExtensionConfig:HubExtensionConfig":
		r = &HubExtensionConfig{}
	case "dynatrace:index/hubPermissions:HubPermissions":
		r = &HubPermissions{}
	case "dynatrace:index/hubSubscriptions:HubSubscriptions":
		r = &HubSubscriptions{}
	case "dynatrace:index/iamGroup:IamGroup":
		r = &IamGroup{}
	case "dynatrace:index/iamPermission:IamPermission":
		r = &IamPermission{}
	case "dynatrace:index/iamPolicy:IamPolicy":
		r = &IamPolicy{}
	case "dynatrace:index/iamPolicyBindings:IamPolicyBindings":
		r = &IamPolicyBindings{}
	case "dynatrace:index/iamPolicyBindingsV2:IamPolicyBindingsV2":
		r = &IamPolicyBindingsV2{}
	case "dynatrace:index/iamPolicyBoundary:IamPolicyBoundary":
		r = &IamPolicyBoundary{}
	case "dynatrace:index/iamUser:IamUser":
		r = &IamUser{}
	case "dynatrace:index/ibmMqFilters:IbmMqFilters":
		r = &IbmMqFilters{}
	case "dynatrace:index/imsBridges:ImsBridges":
		r = &ImsBridges{}
	case "dynatrace:index/infraopsAppFeatureFlags:InfraopsAppFeatureFlags":
		r = &InfraopsAppFeatureFlags{}
	case "dynatrace:index/infraopsAppSettings:InfraopsAppSettings":
		r = &InfraopsAppSettings{}
	case "dynatrace:index/ipAddressMasking:IpAddressMasking":
		r = &IpAddressMasking{}
	case "dynatrace:index/issueTracking:IssueTracking":
		r = &IssueTracking{}
	case "dynatrace:index/jenkinsConnection:JenkinsConnection":
		r = &JenkinsConnection{}
	case "dynatrace:index/jiraNotification:JiraNotification":
		r = &JiraNotification{}
	case "dynatrace:index/jsonDashboard:JsonDashboard":
		r = &JsonDashboard{}
	case "dynatrace:index/jsonDashboardBase:JsonDashboardBase":
		r = &JsonDashboardBase{}
	case "dynatrace:index/k8sClusterAnomalies:K8sClusterAnomalies":
		r = &K8sClusterAnomalies{}
	case "dynatrace:index/k8sCredentials:K8sCredentials":
		r = &K8sCredentials{}
	case "dynatrace:index/k8sMonitoring:K8sMonitoring":
		r = &K8sMonitoring{}
	case "dynatrace:index/k8sNamespaceAnomalies:K8sNamespaceAnomalies":
		r = &K8sNamespaceAnomalies{}
	case "dynatrace:index/k8sNodeAnomalies:K8sNodeAnomalies":
		r = &K8sNodeAnomalies{}
	case "dynatrace:index/k8sPvcAnomalies:K8sPvcAnomalies":
		r = &K8sPvcAnomalies{}
	case "dynatrace:index/k8sWorkloadAnomalies:K8sWorkloadAnomalies":
		r = &K8sWorkloadAnomalies{}
	case "dynatrace:index/keyRequests:KeyRequests":
		r = &KeyRequests{}
	case "dynatrace:index/keyUserAction:KeyUserAction":
		r = &KeyUserAction{}
	case "dynatrace:index/kubernetes:Kubernetes":
		r = &Kubernetes{}
	case "dynatrace:index/kubernetesApp:KubernetesApp":
		r = &KubernetesApp{}
	case "dynatrace:index/kubernetesEnrichment:KubernetesEnrichment":
		r = &KubernetesEnrichment{}
	case "dynatrace:index/kubernetesSpm:KubernetesSpm":
		r = &KubernetesSpm{}
	case "dynatrace:index/limitOutboundConnections:LimitOutboundConnections":
		r = &LimitOutboundConnections{}
	case "dynatrace:index/logAgentFeatureFlags:LogAgentFeatureFlags":
		r = &LogAgentFeatureFlags{}
	case "dynatrace:index/logBuckets:LogBuckets":
		r = &LogBuckets{}
	case "dynatrace:index/logCustomAttribute:LogCustomAttribute":
		r = &LogCustomAttribute{}
	case "dynatrace:index/logCustomSource:LogCustomSource":
		r = &LogCustomSource{}
	case "dynatrace:index/logDebugSettings:LogDebugSettings":
		r = &LogDebugSettings{}
	case "dynatrace:index/logEvents:LogEvents":
		r = &LogEvents{}
	case "dynatrace:index/logGrail:LogGrail":
		r = &LogGrail{}
	case "dynatrace:index/logMetrics:LogMetrics":
		r = &LogMetrics{}
	case "dynatrace:index/logOneagent:LogOneagent":
		r = &LogOneagent{}
	case "dynatrace:index/logProcessing:LogProcessing":
		r = &LogProcessing{}
	case "dynatrace:index/logSecurityContext:LogSecurityContext":
		r = &LogSecurityContext{}
	case "dynatrace:index/logSensitiveDataMasking:LogSensitiveDataMasking":
		r = &LogSensitiveDataMasking{}
	case "dynatrace:index/logStorage:LogStorage":
		r = &LogStorage{}
	case "dynatrace:index/logTimestamp:LogTimestamp":
		r = &LogTimestamp{}
	case "dynatrace:index/mainframeTransactionMonitoring:MainframeTransactionMonitoring":
		r = &MainframeTransactionMonitoring{}
	case "dynatrace:index/maintenance:Maintenance":
		r = &Maintenance{}
	case "dynatrace:index/maintenanceWindow:MaintenanceWindow":
		r = &MaintenanceWindow{}
	case "dynatrace:index/managedBackup:ManagedBackup":
		r = &ManagedBackup{}
	case "dynatrace:index/managedInternetProxy:ManagedInternetProxy":
		r = &ManagedInternetProxy{}
	case "dynatrace:index/managedNetworkZones:ManagedNetworkZones":
		r = &ManagedNetworkZones{}
	case "dynatrace:index/managedPreferences:ManagedPreferences":
		r = &ManagedPreferences{}
	case "dynatrace:index/managedPublicEndpoints:ManagedPublicEndpoints":
		r = &ManagedPublicEndpoints{}
	case "dynatrace:index/managedRemoteAccess:ManagedRemoteAccess":
		r = &ManagedRemoteAccess{}
	case "dynatrace:index/managedSmtp:ManagedSmtp":
		r = &ManagedSmtp{}
	case "dynatrace:index/managementZone:ManagementZone":
		r = &ManagementZone{}
	case "dynatrace:index/managementZoneV2:ManagementZoneV2":
		r = &ManagementZoneV2{}
	case "dynatrace:index/metricEvents:MetricEvents":
		r = &MetricEvents{}
	case "dynatrace:index/metricMetadata:MetricMetadata":
		r = &MetricMetadata{}
	case "dynatrace:index/metricQuery:MetricQuery":
		r = &MetricQuery{}
	case "dynatrace:index/mgmzPermission:MgmzPermission":
		r = &MgmzPermission{}
	case "dynatrace:index/mobileAppAnomalies:MobileAppAnomalies":
		r = &MobileAppAnomalies{}
	case "dynatrace:index/mobileAppCrashRate:MobileAppCrashRate":
		r = &MobileAppCrashRate{}
	case "dynatrace:index/mobileAppEnablement:MobileAppEnablement":
		r = &MobileAppEnablement{}
	case "dynatrace:index/mobileAppKeyPerformance:MobileAppKeyPerformance":
		r = &MobileAppKeyPerformance{}
	case "dynatrace:index/mobileAppRequestErrors:MobileAppRequestErrors":
		r = &MobileAppRequestErrors{}
	case "dynatrace:index/mobileApplication:MobileApplication":
		r = &MobileApplication{}
	case "dynatrace:index/mobileNotifications:MobileNotifications":
		r = &MobileNotifications{}
	case "dynatrace:index/monitoredTechnologiesApache:MonitoredTechnologiesApache":
		r = &MonitoredTechnologiesApache{}
	case "dynatrace:index/monitoredTechnologiesDotnet:MonitoredTechnologiesDotnet":
		r = &MonitoredTechnologiesDotnet{}
	case "dynatrace:index/monitoredTechnologiesGo:MonitoredTechnologiesGo":
		r = &MonitoredTechnologiesGo{}
	case "dynatrace:index/monitoredTechnologiesIis:MonitoredTechnologiesIis":
		r = &MonitoredTechnologiesIis{}
	case "dynatrace:index/monitoredTechnologiesJava:MonitoredTechnologiesJava":
		r = &MonitoredTechnologiesJava{}
	case "dynatrace:index/monitoredTechnologiesNginx:MonitoredTechnologiesNginx":
		r = &MonitoredTechnologiesNginx{}
	case "dynatrace:index/monitoredTechnologiesNodejs:MonitoredTechnologiesNodejs":
		r = &MonitoredTechnologiesNodejs{}
	case "dynatrace:index/monitoredTechnologiesOpentracing:MonitoredTechnologiesOpentracing":
		r = &MonitoredTechnologiesOpentracing{}
	case "dynatrace:index/monitoredTechnologiesPhp:MonitoredTechnologiesPhp":
		r = &MonitoredTechnologiesPhp{}
	case "dynatrace:index/monitoredTechnologiesPython:MonitoredTechnologiesPython":
		r = &MonitoredTechnologiesPython{}
	case "dynatrace:index/monitoredTechnologiesVarnish:MonitoredTechnologiesVarnish":
		r = &MonitoredTechnologiesVarnish{}
	case "dynatrace:index/monitoredTechnologiesWsmb:MonitoredTechnologiesWsmb":
		r = &MonitoredTechnologiesWsmb{}
	case "dynatrace:index/ms365EmailConnection:Ms365EmailConnection":
		r = &Ms365EmailConnection{}
	case "dynatrace:index/msentraidConnection:MsentraidConnection":
		r = &MsentraidConnection{}
	case "dynatrace:index/msteamsConnection:MsteamsConnection":
		r = &MsteamsConnection{}
	case "dynatrace:index/mutedRequests:MutedRequests":
		r = &MutedRequests{}
	case "dynatrace:index/nettracer:Nettracer":
		r = &Nettracer{}
	case "dynatrace:index/networkMonitor:NetworkMonitor":
		r = &NetworkMonitor{}
	case "dynatrace:index/networkMonitorOutage:NetworkMonitorOutage":
		r = &NetworkMonitorOutage{}
	case "dynatrace:index/networkTraffic:NetworkTraffic":
		r = &NetworkTraffic{}
	case "dynatrace:index/networkZone:NetworkZone":
		r = &NetworkZone{}
	case "dynatrace:index/networkZones:NetworkZones":
		r = &NetworkZones{}
	case "dynatrace:index/notification:Notification":
		r = &Notification{}
	case "dynatrace:index/oneagentDefaultMode:OneagentDefaultMode":
		r = &OneagentDefaultMode{}
	case "dynatrace:index/oneagentDefaultVersion:OneagentDefaultVersion":
		r = &OneagentDefaultVersion{}
	case "dynatrace:index/oneagentFeatures:OneagentFeatures":
		r = &OneagentFeatures{}
	case "dynatrace:index/oneagentSideMasking:OneagentSideMasking":
		r = &OneagentSideMasking{}
	case "dynatrace:index/oneagentUpdates:OneagentUpdates":
		r = &OneagentUpdates{}
	case "dynatrace:index/openpipelineBusinessEvents:OpenpipelineBusinessEvents":
		r = &OpenpipelineBusinessEvents{}
	case "dynatrace:index/openpipelineDavisEvents:OpenpipelineDavisEvents":
		r = &OpenpipelineDavisEvents{}
	case "dynatrace:index/openpipelineDavisProblems:OpenpipelineDavisProblems":
		r = &OpenpipelineDavisProblems{}
	case "dynatrace:index/openpipelineEvents:OpenpipelineEvents":
		r = &OpenpipelineEvents{}
	case "dynatrace:index/openpipelineLogs:OpenpipelineLogs":
		r = &OpenpipelineLogs{}
	case "dynatrace:index/openpipelineMetrics:OpenpipelineMetrics":
		r = &OpenpipelineMetrics{}
	case "dynatrace:index/openpipelineSdlcEvents:OpenpipelineSdlcEvents":
		r = &OpenpipelineSdlcEvents{}
	case "dynatrace:index/openpipelineSecurityEvents:OpenpipelineSecurityEvents":
		r = &OpenpipelineSecurityEvents{}
	case "dynatrace:index/openpipelineSpans:OpenpipelineSpans":
		r = &OpenpipelineSpans{}
	case "dynatrace:index/openpipelineSystemEvents:OpenpipelineSystemEvents":
		r = &OpenpipelineSystemEvents{}
	case "dynatrace:index/openpipelineUserEvents:OpenpipelineUserEvents":
		r = &OpenpipelineUserEvents{}
	case "dynatrace:index/openpipelineUserSessions:OpenpipelineUserSessions":
		r = &OpenpipelineUserSessions{}
	case "dynatrace:index/opentelemetryMetrics:OpentelemetryMetrics":
		r = &OpentelemetryMetrics{}
	case "dynatrace:index/opsGenieNotification:OpsGenieNotification":
		r = &OpsGenieNotification{}
	case "dynatrace:index/osServices:OsServices":
		r = &OsServices{}
	case "dynatrace:index/ownershipConfig:OwnershipConfig":
		r = &OwnershipConfig{}
	case "dynatrace:index/ownershipTeams:OwnershipTeams":
		r = &OwnershipTeams{}
	case "dynatrace:index/pagerDutyNotification:PagerDutyNotification":
		r = &PagerDutyNotification{}
	case "dynatrace:index/pagerdutyConnection:PagerdutyConnection":
		r = &PagerdutyConnection{}
	case "dynatrace:index/pgAlerting:PgAlerting":
		r = &PgAlerting{}
	case "dynatrace:index/pgAnomalies:PgAnomalies":
		r = &PgAnomalies{}
	case "dynatrace:index/platformBucket:PlatformBucket":
		r = &PlatformBucket{}
	case "dynatrace:index/platformSlo:PlatformSlo":
		r = &PlatformSlo{}
	case "dynatrace:index/policy:Policy":
		r = &Policy{}
	case "dynatrace:index/policyBindings:PolicyBindings":
		r = &PolicyBindings{}
	case "dynatrace:index/problemFields:ProblemFields":
		r = &ProblemFields{}
	case "dynatrace:index/problemRecordPropagationRules:ProblemRecordPropagationRules":
		r = &ProblemRecordPropagationRules{}
	case "dynatrace:index/processAvailability:ProcessAvailability":
		r = &ProcessAvailability{}
	case "dynatrace:index/processGroupDetection:ProcessGroupDetection":
		r = &ProcessGroupDetection{}
	case "dynatrace:index/processGroupDetectionFlags:ProcessGroupDetectionFlags":
		r = &ProcessGroupDetectionFlags{}
	case "dynatrace:index/processGroupMonitoring:ProcessGroupMonitoring":
		r = &ProcessGroupMonitoring{}
	case "dynatrace:index/processGroupRum:ProcessGroupRum":
		r = &ProcessGroupRum{}
	case "dynatrace:index/processGroupSimpleDetection:ProcessGroupSimpleDetection":
		r = &ProcessGroupSimpleDetection{}
	case "dynatrace:index/processMonitoring:ProcessMonitoring":
		r = &ProcessMonitoring{}
	case "dynatrace:index/processMonitoringRule:ProcessMonitoringRule":
		r = &ProcessMonitoringRule{}
	case "dynatrace:index/processVisibility:ProcessVisibility":
		r = &ProcessVisibility{}
	case "dynatrace:index/processgroupNaming:ProcessgroupNaming":
		r = &ProcessgroupNaming{}
	case "dynatrace:index/processgroupNamingOrder:ProcessgroupNamingOrder":
		r = &ProcessgroupNamingOrder{}
	case "dynatrace:index/queueManager:QueueManager":
		r = &QueueManager{}
	case "dynatrace:index/queueSharingGroups:QueueSharingGroups":
		r = &QueueSharingGroups{}
	case "dynatrace:index/remoteEnvironments:RemoteEnvironments":
		r = &RemoteEnvironments{}
	case "dynatrace:index/report:Report":
		r = &Report{}
	case "dynatrace:index/requestAttribute:RequestAttribute":
		r = &RequestAttribute{}
	case "dynatrace:index/requestNaming:RequestNaming":
		r = &RequestNaming{}
	case "dynatrace:index/requestNamings:RequestNamings":
		r = &RequestNamings{}
	case "dynatrace:index/resourceAttributes:ResourceAttributes":
		r = &ResourceAttributes{}
	case "dynatrace:index/rpcBasedSampling:RpcBasedSampling":
		r = &RpcBasedSampling{}
	case "dynatrace:index/rumAdvancedCorrelation:RumAdvancedCorrelation":
		r = &RumAdvancedCorrelation{}
	case "dynatrace:index/rumHostHeaders:RumHostHeaders":
		r = &RumHostHeaders{}
	case "dynatrace:index/rumIpDetermination:RumIpDetermination":
		r = &RumIpDetermination{}
	case "dynatrace:index/rumIpLocations:RumIpLocations":
		r = &RumIpLocations{}
	case "dynatrace:index/rumOverloadPrevention:RumOverloadPrevention":
		r = &RumOverloadPrevention{}
	case "dynatrace:index/rumProviderBreakdown:RumProviderBreakdown":
		r = &RumProviderBreakdown{}
	case "dynatrace:index/securityContext:SecurityContext":
		r = &SecurityContext{}
	case "dynatrace:index/segment:Segment":
		r = &Segment{}
	case "dynatrace:index/serviceAnomalies:ServiceAnomalies":
		r = &ServiceAnomalies{}
	case "dynatrace:index/serviceAnomaliesV2:ServiceAnomaliesV2":
		r = &ServiceAnomaliesV2{}
	case "dynatrace:index/serviceDetectionRules:ServiceDetectionRules":
		r = &ServiceDetectionRules{}
	case "dynatrace:index/serviceExternalWebRequest:ServiceExternalWebRequest":
		r = &ServiceExternalWebRequest{}
	case "dynatrace:index/serviceExternalWebService:ServiceExternalWebService":
		r = &ServiceExternalWebService{}
	case "dynatrace:index/serviceFailure:ServiceFailure":
		r = &ServiceFailure{}
	case "dynatrace:index/serviceFullWebRequest:ServiceFullWebRequest":
		r = &ServiceFullWebRequest{}
	case "dynatrace:index/serviceFullWebService:ServiceFullWebService":
		r = &ServiceFullWebService{}
	case "dynatrace:index/serviceHttpFailure:ServiceHttpFailure":
		r = &ServiceHttpFailure{}
	case "dynatrace:index/serviceNaming:ServiceNaming":
		r = &ServiceNaming{}
	case "dynatrace:index/serviceNamingOrder:ServiceNamingOrder":
		r = &ServiceNamingOrder{}
	case "dynatrace:index/serviceNowNotification:ServiceNowNotification":
		r = &ServiceNowNotification{}
	case "dynatrace:index/serviceSplitting:ServiceSplitting":
		r = &ServiceSplitting{}
	case "dynatrace:index/servicenowConnection:ServicenowConnection":
		r = &ServicenowConnection{}
	case "dynatrace:index/sessionReplayResourceCapture:SessionReplayResourceCapture":
		r = &SessionReplayResourceCapture{}
	case "dynatrace:index/sessionReplayWebPrivacy:SessionReplayWebPrivacy":
		r = &SessionReplayWebPrivacy{}
	case "dynatrace:index/siteReliabilityGuardian:SiteReliabilityGuardian":
		r = &SiteReliabilityGuardian{}
	case "dynatrace:index/slackNotification:SlackNotification":
		r = &SlackNotification{}
	case "dynatrace:index/slo:Slo":
		r = &Slo{}
	case "dynatrace:index/sloNormalization:SloNormalization":
		r = &SloNormalization{}
	case "dynatrace:index/sloV2:SloV2":
		r = &SloV2{}
	case "dynatrace:index/spanAttributed:SpanAttributed":
		r = &SpanAttributed{}
	case "dynatrace:index/spanCaptureRule:SpanCaptureRule":
		r = &SpanCaptureRule{}
	case "dynatrace:index/spanContextPropagation:SpanContextPropagation":
		r = &SpanContextPropagation{}
	case "dynatrace:index/spanEntryPoint:SpanEntryPoint":
		r = &SpanEntryPoint{}
	case "dynatrace:index/spanEvents:SpanEvents":
		r = &SpanEvents{}
	case "dynatrace:index/syntheticAvailability:SyntheticAvailability":
		r = &SyntheticAvailability{}
	case "dynatrace:index/syntheticLocation:SyntheticLocation":
		r = &SyntheticLocation{}
	case "dynatrace:index/tokenSettings:TokenSettings":
		r = &TokenSettings{}
	case "dynatrace:index/transactionStartFilters:TransactionStartFilters":
		r = &TransactionStartFilters{}
	case "dynatrace:index/trelloNotification:TrelloNotification":
		r = &TrelloNotification{}
	case "dynatrace:index/unifiedServicesMetrics:UnifiedServicesMetrics":
		r = &UnifiedServicesMetrics{}
	case "dynatrace:index/unifiedServicesOpentel:UnifiedServicesOpentel":
		r = &UnifiedServicesOpentel{}
	case "dynatrace:index/updateWindows:UpdateWindows":
		r = &UpdateWindows{}
	case "dynatrace:index/urlBasedSampling:UrlBasedSampling":
		r = &UrlBasedSampling{}
	case "dynatrace:index/usabilityAnalytics:UsabilityAnalytics":
		r = &UsabilityAnalytics{}
	case "dynatrace:index/user:User":
		r = &User{}
	case "dynatrace:index/userActionMetrics:UserActionMetrics":
		r = &UserActionMetrics{}
	case "dynatrace:index/userExperienceScore:UserExperienceScore":
		r = &UserExperienceScore{}
	case "dynatrace:index/userGroup:UserGroup":
		r = &UserGroup{}
	case "dynatrace:index/userSessionMetrics:UserSessionMetrics":
		r = &UserSessionMetrics{}
	case "dynatrace:index/userSettings:UserSettings":
		r = &UserSettings{}
	case "dynatrace:index/victorOpsNotification:VictorOpsNotification":
		r = &VictorOpsNotification{}
	case "dynatrace:index/vmware:Vmware":
		r = &Vmware{}
	case "dynatrace:index/vmwareAnomalies:VmwareAnomalies":
		r = &VmwareAnomalies{}
	case "dynatrace:index/vulnerabilityAlerting:VulnerabilityAlerting":
		r = &VulnerabilityAlerting{}
	case "dynatrace:index/vulnerabilityCode:VulnerabilityCode":
		r = &VulnerabilityCode{}
	case "dynatrace:index/vulnerabilitySettings:VulnerabilitySettings":
		r = &VulnerabilitySettings{}
	case "dynatrace:index/vulnerabilityThirdParty:VulnerabilityThirdParty":
		r = &VulnerabilityThirdParty{}
	case "dynatrace:index/vulnerabilityThirdPartyAttr:VulnerabilityThirdPartyAttr":
		r = &VulnerabilityThirdPartyAttr{}
	case "dynatrace:index/vulnerabilityThirdPartyK8s:VulnerabilityThirdPartyK8s":
		r = &VulnerabilityThirdPartyK8s{}
	case "dynatrace:index/webAppAnomalies:WebAppAnomalies":
		r = &WebAppAnomalies{}
	case "dynatrace:index/webAppAutoInjection:WebAppAutoInjection":
		r = &WebAppAutoInjection{}
	case "dynatrace:index/webAppBeaconEndpoint:WebAppBeaconEndpoint":
		r = &WebAppBeaconEndpoint{}
	case "dynatrace:index/webAppBeaconOrigins:WebAppBeaconOrigins":
		r = &WebAppBeaconOrigins{}
	case "dynatrace:index/webAppCustomConfigProperties:WebAppCustomConfigProperties":
		r = &WebAppCustomConfigProperties{}
	case "dynatrace:index/webAppCustomErrors:WebAppCustomErrors":
		r = &WebAppCustomErrors{}
	case "dynatrace:index/webAppCustomInjection:WebAppCustomInjection":
		r = &WebAppCustomInjection{}
	case "dynatrace:index/webAppCustomPropRestrictions:WebAppCustomPropRestrictions":
		r = &WebAppCustomPropRestrictions{}
	case "dynatrace:index/webAppEnablement:WebAppEnablement":
		r = &WebAppEnablement{}
	case "dynatrace:index/webAppInjectionCookie:WebAppInjectionCookie":
		r = &WebAppInjectionCookie{}
	case "dynatrace:index/webAppIpAddressExclusion:WebAppIpAddressExclusion":
		r = &WebAppIpAddressExclusion{}
	case "dynatrace:index/webAppJavascriptFilename:WebAppJavascriptFilename":
		r = &WebAppJavascriptFilename{}
	case "dynatrace:index/webAppJavascriptUpdates:WebAppJavascriptUpdates":
		r = &WebAppJavascriptUpdates{}
	case "dynatrace:index/webAppJavascriptVersion:WebAppJavascriptVersion":
		r = &WebAppJavascriptVersion{}
	case "dynatrace:index/webAppKeyPerformanceCustom:WebAppKeyPerformanceCustom":
		r = &WebAppKeyPerformanceCustom{}
	case "dynatrace:index/webAppKeyPerformanceLoad:WebAppKeyPerformanceLoad":
		r = &WebAppKeyPerformanceLoad{}
	case "dynatrace:index/webAppKeyPerformanceXhr:WebAppKeyPerformanceXhr":
		r = &WebAppKeyPerformanceXhr{}
	case "dynatrace:index/webAppManualInsertion:WebAppManualInsertion":
		r = &WebAppManualInsertion{}
	case "dynatrace:index/webAppRequestErrors:WebAppRequestErrors":
		r = &WebAppRequestErrors{}
	case "dynatrace:index/webAppResourceCleanup:WebAppResourceCleanup":
		r = &WebAppResourceCleanup{}
	case "dynatrace:index/webAppResourceTypes:WebAppResourceTypes":
		r = &WebAppResourceTypes{}
	case "dynatrace:index/webApplication:WebApplication":
		r = &WebApplication{}
	case "dynatrace:index/webhookNotification:WebhookNotification":
		r = &WebhookNotification{}
	case "dynatrace:index/xmattersNotification:XmattersNotification":
		r = &XmattersNotification{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

type pkg struct {
	version semver.Version
}

func (p *pkg) Version() semver.Version {
	return p.version
}

func (p *pkg) ConstructProvider(ctx *pulumi.Context, name, typ, urn string) (pulumi.ProviderResource, error) {
	if typ != "pulumi:providers:dynatrace" {
		return nil, fmt.Errorf("unknown provider type: %s", typ)
	}

	r := &Provider{}
	err := ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return r, err
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/activegateToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/activegateUpdates",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/agToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/aixExtension",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/alerting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/alertingProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/ansibleTowerNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/apiDetection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/apiToken",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/appMonitoring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/applicationAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/applicationDataPrivacy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/applicationDetectionRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/applicationDetectionRuleV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/applicationErrorRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/appsecNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/attackAlerting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/attackAllowlist",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/attackRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/attackSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/attributeAllowList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/attributeBlockList",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/attributeMasking",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/attributesPreferences",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/auditLog",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/automationBusinessCalendar",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/automationControllerConnections",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/automationSchedulingRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/automationWorkflow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/automationWorkflowAwsConnections",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/automationWorkflowJira",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/automationWorkflowK8sConnections",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/automationWorkflowSlack",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/autotag",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/autotagRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/autotagV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/awsAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/awsCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/awsService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/azureCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/azureService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/browserMonitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/browserMonitorOutage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/browserMonitorPerformance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/builtinProcessMonitoring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/businessEventsBuckets",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/businessEventsCapturingVariants",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/businessEventsMetrics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/businessEventsOneagent",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/businessEventsOneagentOutgoing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/businessEventsProcessing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/businessEventsSecurityContext",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/calculatedMobileMetric",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/calculatedServiceMetric",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/calculatedSyntheticMetric",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/calculatedWebMetric",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/cloudDevelopmentEnvironments",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/cloudFoundry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/cloudappWorkloaddetection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/cloudfoundryCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/connectivityAlerts",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/containerBuiltinRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/containerRegistry",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/containerRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/containerTechnology",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/crashdumpAnalytics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/credentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customAppAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customAppCrashRate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customAppEnablement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customDevice",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customServiceOrder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customTags",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/customUnits",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/dashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/dashboardSharing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/dashboardsAllowlist",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/dashboardsGeneral",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/dashboardsPresets",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/dataPrivacy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/databaseAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/databaseAnomaliesV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/davisAnomalyDetectors",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/davisCopilot",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/dbAppFeatureFlags",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/dduPool",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/declarativeGrouping",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/defaultLaunchpad",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/devobsAgentOptin",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/devobsDataMasking",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/devobsGitOnprem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/directShares",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/discoveryDefaultRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/discoveryFeatureFlags",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/diskAnalytics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/diskAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/diskAnomaliesV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/diskAnomalyRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/diskEdgeAnomalyDetectors",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/diskOptions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/diskSpecificAnomaliesV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/document",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/ebpfServiceDiscovery",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/emailNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/environment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/eulaSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/eventDrivenAnsibleConnections",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/extensionExecutionController",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/extensionExecutionRemote",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/failureDetectionParameters",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/failureDetectionRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/frequentIssues",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/genericRelationships",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/genericSetting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/genericTypes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/geolocation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/githubConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/gitlabConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/goldenState",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/grailMetricsAllowall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/grailMetricsAllowlist",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/grailSecurityContext",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/histogramMetrics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hostAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hostAnomaliesV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hostMonitoring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hostMonitoringAdvanced",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hostMonitoringMode",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hostNaming",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hostNamingOrder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hostProcessGroupMonitoring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/httpMonitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/httpMonitorCookies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/httpMonitorOutage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/httpMonitorPerformance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/httpMonitorScript",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hubExtensionActiveVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hubExtensionConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hubPermissions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/hubSubscriptions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/iamGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/iamPermission",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/iamPolicy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/iamPolicyBindings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/iamPolicyBindingsV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/iamPolicyBoundary",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/iamUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/ibmMqFilters",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/imsBridges",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/infraopsAppFeatureFlags",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/infraopsAppSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/ipAddressMasking",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/issueTracking",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/jenkinsConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/jiraNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/jsonDashboard",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/jsonDashboardBase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/k8sClusterAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/k8sCredentials",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/k8sMonitoring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/k8sNamespaceAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/k8sNodeAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/k8sPvcAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/k8sWorkloadAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/keyRequests",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/keyUserAction",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/kubernetes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/kubernetesApp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/kubernetesEnrichment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/kubernetesSpm",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/limitOutboundConnections",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logAgentFeatureFlags",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logBuckets",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logCustomAttribute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logCustomSource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logDebugSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logGrail",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logMetrics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logOneagent",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logProcessing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logSecurityContext",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logSensitiveDataMasking",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logStorage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/logTimestamp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mainframeTransactionMonitoring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/maintenance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/maintenanceWindow",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managedBackup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managedInternetProxy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managedNetworkZones",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managedPreferences",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managedPublicEndpoints",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managedRemoteAccess",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managedSmtp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managementZone",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/managementZoneV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/metricEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/metricMetadata",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/metricQuery",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mgmzPermission",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mobileAppAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mobileAppCrashRate",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mobileAppEnablement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mobileAppKeyPerformance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mobileAppRequestErrors",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mobileApplication",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mobileNotifications",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesApache",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesDotnet",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesGo",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesIis",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesJava",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesNginx",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesNodejs",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesOpentracing",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesPhp",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesPython",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesVarnish",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/monitoredTechnologiesWsmb",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/ms365EmailConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/msentraidConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/msteamsConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/mutedRequests",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/nettracer",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/networkMonitor",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/networkMonitorOutage",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/networkTraffic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/networkZone",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/networkZones",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/notification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/oneagentDefaultMode",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/oneagentDefaultVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/oneagentFeatures",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/oneagentSideMasking",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/oneagentUpdates",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineBusinessEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineDavisEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineDavisProblems",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineLogs",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineMetrics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineSdlcEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineSecurityEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineSpans",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineSystemEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineUserEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/openpipelineUserSessions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/opentelemetryMetrics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/opsGenieNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/osServices",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/ownershipConfig",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/ownershipTeams",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/pagerDutyNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/pagerdutyConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/pgAlerting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/pgAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/platformBucket",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/platformSlo",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/policy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/policyBindings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/problemFields",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/problemRecordPropagationRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processAvailability",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processGroupDetection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processGroupDetectionFlags",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processGroupMonitoring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processGroupRum",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processGroupSimpleDetection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processMonitoring",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processMonitoringRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processVisibility",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processgroupNaming",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/processgroupNamingOrder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/queueManager",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/queueSharingGroups",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/remoteEnvironments",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/report",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/requestAttribute",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/requestNaming",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/requestNamings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/resourceAttributes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/rpcBasedSampling",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/rumAdvancedCorrelation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/rumHostHeaders",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/rumIpDetermination",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/rumIpLocations",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/rumOverloadPrevention",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/rumProviderBreakdown",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/securityContext",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/segment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceAnomaliesV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceDetectionRules",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceExternalWebRequest",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceExternalWebService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceFailure",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceFullWebRequest",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceFullWebService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceHttpFailure",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceNaming",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceNamingOrder",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceNowNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/serviceSplitting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/servicenowConnection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/sessionReplayResourceCapture",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/sessionReplayWebPrivacy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/siteReliabilityGuardian",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/slackNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/slo",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/sloNormalization",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/sloV2",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/spanAttributed",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/spanCaptureRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/spanContextPropagation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/spanEntryPoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/spanEvents",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/syntheticAvailability",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/syntheticLocation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/tokenSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/transactionStartFilters",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/trelloNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/unifiedServicesMetrics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/unifiedServicesOpentel",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/updateWindows",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/urlBasedSampling",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/usabilityAnalytics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/user",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/userActionMetrics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/userExperienceScore",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/userGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/userSessionMetrics",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/userSettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/victorOpsNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/vmware",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/vmwareAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/vulnerabilityAlerting",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/vulnerabilityCode",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/vulnerabilitySettings",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/vulnerabilityThirdParty",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/vulnerabilityThirdPartyAttr",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/vulnerabilityThirdPartyK8s",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppAnomalies",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppAutoInjection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppBeaconEndpoint",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppBeaconOrigins",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppCustomConfigProperties",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppCustomErrors",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppCustomInjection",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppCustomPropRestrictions",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppEnablement",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppInjectionCookie",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppIpAddressExclusion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppJavascriptFilename",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppJavascriptUpdates",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppJavascriptVersion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppKeyPerformanceCustom",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppKeyPerformanceLoad",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppKeyPerformanceXhr",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppManualInsertion",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppRequestErrors",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppResourceCleanup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webAppResourceTypes",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webApplication",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/webhookNotification",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"dynatrace",
		"index/xmattersNotification",
		&module{version},
	)
	pulumi.RegisterResourcePackage(
		"dynatrace",
		&pkg{version},
	)
}
