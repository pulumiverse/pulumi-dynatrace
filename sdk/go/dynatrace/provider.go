// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The provider type for the dynatrace package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	AccountId              pulumi.StringPtrOutput `pulumi:"accountId"`
	AutomationClientId     pulumi.StringPtrOutput `pulumi:"automationClientId"`
	AutomationClientSecret pulumi.StringPtrOutput `pulumi:"automationClientSecret"`
	// The URL of the Dynatrace Environment with Platform capabilities turned on (`https://#####.apps.dynatrace.com)`. This is
	// optional configuration when `dtEnvUrl` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or
	// `https://#####.apps.dynatrace.com`
	AutomationEnvUrl pulumi.StringPtrOutput `pulumi:"automationEnvUrl"`
	// The URL that provides the Bearer tokens when accessing the Automation REST API. This is optional configuration when
	// `dtEnvUrl` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or
	// `https://#####.apps.dynatrace.com`
	AutomationTokenUrl pulumi.StringPtrOutput `pulumi:"automationTokenUrl"`
	ClientId           pulumi.StringPtrOutput `pulumi:"clientId"`
	ClientSecret       pulumi.StringPtrOutput `pulumi:"clientSecret"`
	DtApiToken         pulumi.StringPtrOutput `pulumi:"dtApiToken"`
	DtClusterApiToken  pulumi.StringPtrOutput `pulumi:"dtClusterApiToken"`
	DtClusterUrl       pulumi.StringPtrOutput `pulumi:"dtClusterUrl"`
	DtEnvUrl           pulumi.StringPtrOutput `pulumi:"dtEnvUrl"`
	IamAccountId       pulumi.StringPtrOutput `pulumi:"iamAccountId"`
	IamClientId        pulumi.StringPtrOutput `pulumi:"iamClientId"`
	IamClientSecret    pulumi.StringPtrOutput `pulumi:"iamClientSecret"`
	IamEndpointUrl     pulumi.StringPtrOutput `pulumi:"iamEndpointUrl"`
	IamTokenUrl        pulumi.StringPtrOutput `pulumi:"iamTokenUrl"`
	// A Dynatrace Platform Token. Specifying such a token allows for easy authentication against Platform resources. In such a
	// case it supersedes `automationClientId`, `automationClientSecret`, `automationTokenUrl` and `automationEnvUrl`
	PlatformToken pulumi.StringPtrOutput `pulumi:"platformToken"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	if args.DtApiToken == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "DYNATRACE_API_TOKEN", "DT_API_TOKEN"); d != nil {
			args.DtApiToken = pulumi.StringPtr(d.(string))
		}
	}
	if args.DtClusterApiToken == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "DYNATRACE_CLUSTER_API_TOKEN", "DT_CLUSTER_API_TOKEN"); d != nil {
			args.DtClusterApiToken = pulumi.StringPtr(d.(string))
		}
	}
	if args.DtClusterUrl == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "DYNATRACE_CLUSTER_URL", "DT_CLUSTER_URL"); d != nil {
			args.DtClusterUrl = pulumi.StringPtr(d.(string))
		}
	}
	if args.DtEnvUrl == nil {
		if d := internal.GetEnvOrDefault(nil, nil, "DYNATRACE_ENV_URL", "DT_ENV_URL"); d != nil {
			args.DtEnvUrl = pulumi.StringPtr(d.(string))
		}
	}
	if args.AccountId != nil {
		args.AccountId = pulumi.ToSecret(args.AccountId).(pulumi.StringPtrInput)
	}
	if args.AutomationClientId != nil {
		args.AutomationClientId = pulumi.ToSecret(args.AutomationClientId).(pulumi.StringPtrInput)
	}
	if args.AutomationClientSecret != nil {
		args.AutomationClientSecret = pulumi.ToSecret(args.AutomationClientSecret).(pulumi.StringPtrInput)
	}
	if args.ClientId != nil {
		args.ClientId = pulumi.ToSecret(args.ClientId).(pulumi.StringPtrInput)
	}
	if args.ClientSecret != nil {
		args.ClientSecret = pulumi.ToSecret(args.ClientSecret).(pulumi.StringPtrInput)
	}
	if args.DtApiToken != nil {
		args.DtApiToken = pulumi.ToSecret(args.DtApiToken).(pulumi.StringPtrInput)
	}
	if args.DtClusterApiToken != nil {
		args.DtClusterApiToken = pulumi.ToSecret(args.DtClusterApiToken).(pulumi.StringPtrInput)
	}
	if args.DtClusterUrl != nil {
		args.DtClusterUrl = pulumi.ToSecret(args.DtClusterUrl).(pulumi.StringPtrInput)
	}
	if args.IamAccountId != nil {
		args.IamAccountId = pulumi.ToSecret(args.IamAccountId).(pulumi.StringPtrInput)
	}
	if args.IamClientId != nil {
		args.IamClientId = pulumi.ToSecret(args.IamClientId).(pulumi.StringPtrInput)
	}
	if args.IamClientSecret != nil {
		args.IamClientSecret = pulumi.ToSecret(args.IamClientSecret).(pulumi.StringPtrInput)
	}
	if args.IamEndpointUrl != nil {
		args.IamEndpointUrl = pulumi.ToSecret(args.IamEndpointUrl).(pulumi.StringPtrInput)
	}
	if args.IamTokenUrl != nil {
		args.IamTokenUrl = pulumi.ToSecret(args.IamTokenUrl).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"accountId",
		"automationClientId",
		"automationClientSecret",
		"clientId",
		"clientSecret",
		"dtApiToken",
		"dtClusterApiToken",
		"dtClusterUrl",
		"iamAccountId",
		"iamClientId",
		"iamClientSecret",
		"iamEndpointUrl",
		"iamTokenUrl",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:dynatrace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	AccountId              *string `pulumi:"accountId"`
	AutomationClientId     *string `pulumi:"automationClientId"`
	AutomationClientSecret *string `pulumi:"automationClientSecret"`
	// The URL of the Dynatrace Environment with Platform capabilities turned on (`https://#####.apps.dynatrace.com)`. This is
	// optional configuration when `dtEnvUrl` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or
	// `https://#####.apps.dynatrace.com`
	AutomationEnvUrl *string `pulumi:"automationEnvUrl"`
	// The URL that provides the Bearer tokens when accessing the Automation REST API. This is optional configuration when
	// `dtEnvUrl` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or
	// `https://#####.apps.dynatrace.com`
	AutomationTokenUrl *string `pulumi:"automationTokenUrl"`
	ClientId           *string `pulumi:"clientId"`
	ClientSecret       *string `pulumi:"clientSecret"`
	DtApiToken         *string `pulumi:"dtApiToken"`
	DtClusterApiToken  *string `pulumi:"dtClusterApiToken"`
	DtClusterUrl       *string `pulumi:"dtClusterUrl"`
	DtEnvUrl           *string `pulumi:"dtEnvUrl"`
	IamAccountId       *string `pulumi:"iamAccountId"`
	IamClientId        *string `pulumi:"iamClientId"`
	IamClientSecret    *string `pulumi:"iamClientSecret"`
	IamEndpointUrl     *string `pulumi:"iamEndpointUrl"`
	IamTokenUrl        *string `pulumi:"iamTokenUrl"`
	// A Dynatrace Platform Token. Specifying such a token allows for easy authentication against Platform resources. In such a
	// case it supersedes `automationClientId`, `automationClientSecret`, `automationTokenUrl` and `automationEnvUrl`
	PlatformToken *string `pulumi:"platformToken"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	AccountId              pulumi.StringPtrInput
	AutomationClientId     pulumi.StringPtrInput
	AutomationClientSecret pulumi.StringPtrInput
	// The URL of the Dynatrace Environment with Platform capabilities turned on (`https://#####.apps.dynatrace.com)`. This is
	// optional configuration when `dtEnvUrl` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or
	// `https://#####.apps.dynatrace.com`
	AutomationEnvUrl pulumi.StringPtrInput
	// The URL that provides the Bearer tokens when accessing the Automation REST API. This is optional configuration when
	// `dtEnvUrl` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or
	// `https://#####.apps.dynatrace.com`
	AutomationTokenUrl pulumi.StringPtrInput
	ClientId           pulumi.StringPtrInput
	ClientSecret       pulumi.StringPtrInput
	DtApiToken         pulumi.StringPtrInput
	DtClusterApiToken  pulumi.StringPtrInput
	DtClusterUrl       pulumi.StringPtrInput
	DtEnvUrl           pulumi.StringPtrInput
	IamAccountId       pulumi.StringPtrInput
	IamClientId        pulumi.StringPtrInput
	IamClientSecret    pulumi.StringPtrInput
	IamEndpointUrl     pulumi.StringPtrInput
	IamTokenUrl        pulumi.StringPtrInput
	// A Dynatrace Platform Token. Specifying such a token allows for easy authentication against Platform resources. In such a
	// case it supersedes `automationClientId`, `automationClientSecret`, `automationTokenUrl` and `automationEnvUrl`
	PlatformToken pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

// This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
func (r *Provider) TerraformConfig(ctx *pulumi.Context) (ProviderTerraformConfigResultOutput, error) {
	out, err := ctx.Call("pulumi:providers:dynatrace/terraformConfig", nil, ProviderTerraformConfigResultOutput{}, r)
	if err != nil {
		return ProviderTerraformConfigResultOutput{}, err
	}
	return out.(ProviderTerraformConfigResultOutput), nil
}

type ProviderTerraformConfigResult struct {
	Result map[string]interface{} `pulumi:"result"`
}

type ProviderTerraformConfigResultOutput struct{ *pulumi.OutputState }

func (ProviderTerraformConfigResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderTerraformConfigResult)(nil)).Elem()
}

func (o ProviderTerraformConfigResultOutput) Result() pulumi.MapOutput {
	return o.ApplyT(func(v ProviderTerraformConfigResult) map[string]interface{} { return v.Result }).(pulumi.MapOutput)
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

func (o ProviderOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) AutomationClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AutomationClientId }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) AutomationClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AutomationClientSecret }).(pulumi.StringPtrOutput)
}

// The URL of the Dynatrace Environment with Platform capabilities turned on (`https://#####.apps.dynatrace.com)`. This is
// optional configuration when `dtEnvUrl` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or
// `https://#####.apps.dynatrace.com`
func (o ProviderOutput) AutomationEnvUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AutomationEnvUrl }).(pulumi.StringPtrOutput)
}

// The URL that provides the Bearer tokens when accessing the Automation REST API. This is optional configuration when
// `dtEnvUrl` already specifies a SaaS Environment like `https://#####.live.dynatrace.com` or
// `https://#####.apps.dynatrace.com`
func (o ProviderOutput) AutomationTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AutomationTokenUrl }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ClientId }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) DtApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.DtApiToken }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) DtClusterApiToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.DtClusterApiToken }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) DtClusterUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.DtClusterUrl }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) DtEnvUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.DtEnvUrl }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) IamAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.IamAccountId }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) IamClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.IamClientId }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) IamClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.IamClientSecret }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) IamEndpointUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.IamEndpointUrl }).(pulumi.StringPtrOutput)
}

func (o ProviderOutput) IamTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.IamTokenUrl }).(pulumi.StringPtrOutput)
}

// A Dynatrace Platform Token. Specifying such a token allows for easy authentication against Platform resources. In such a
// case it supersedes `automationClientId`, `automationClientSecret`, `automationTokenUrl` and `automationEnvUrl`
func (o ProviderOutput) PlatformToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.PlatformToken }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
	pulumi.RegisterOutputType(ProviderTerraformConfigResultOutput{})
}
