// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type DiscoveryFeatureFlags struct {
	pulumi.CustomResourceState

	// State of boolean feature
	BooleanValue pulumi.BoolPtrOutput `pulumi:"booleanValue"`
	// Name of the feature
	Name pulumi.StringOutput `pulumi:"name"`
	// State of numeric feature
	NumberValue pulumi.IntPtrOutput `pulumi:"numberValue"`
	// State of textual feature
	StringValue pulumi.StringPtrOutput `pulumi:"stringValue"`
	// Possible Values: `Boolean`, `Number`, `String`
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewDiscoveryFeatureFlags registers a new resource with the given unique name, arguments, and options.
func NewDiscoveryFeatureFlags(ctx *pulumi.Context,
	name string, args *DiscoveryFeatureFlagsArgs, opts ...pulumi.ResourceOption) (*DiscoveryFeatureFlags, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DiscoveryFeatureFlags
	err := ctx.RegisterResource("dynatrace:index/discoveryFeatureFlags:DiscoveryFeatureFlags", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscoveryFeatureFlags gets an existing DiscoveryFeatureFlags resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscoveryFeatureFlags(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscoveryFeatureFlagsState, opts ...pulumi.ResourceOption) (*DiscoveryFeatureFlags, error) {
	var resource DiscoveryFeatureFlags
	err := ctx.ReadResource("dynatrace:index/discoveryFeatureFlags:DiscoveryFeatureFlags", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DiscoveryFeatureFlags resources.
type discoveryFeatureFlagsState struct {
	// State of boolean feature
	BooleanValue *bool `pulumi:"booleanValue"`
	// Name of the feature
	Name *string `pulumi:"name"`
	// State of numeric feature
	NumberValue *int `pulumi:"numberValue"`
	// State of textual feature
	StringValue *string `pulumi:"stringValue"`
	// Possible Values: `Boolean`, `Number`, `String`
	Type *string `pulumi:"type"`
}

type DiscoveryFeatureFlagsState struct {
	// State of boolean feature
	BooleanValue pulumi.BoolPtrInput
	// Name of the feature
	Name pulumi.StringPtrInput
	// State of numeric feature
	NumberValue pulumi.IntPtrInput
	// State of textual feature
	StringValue pulumi.StringPtrInput
	// Possible Values: `Boolean`, `Number`, `String`
	Type pulumi.StringPtrInput
}

func (DiscoveryFeatureFlagsState) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveryFeatureFlagsState)(nil)).Elem()
}

type discoveryFeatureFlagsArgs struct {
	// State of boolean feature
	BooleanValue *bool `pulumi:"booleanValue"`
	// Name of the feature
	Name *string `pulumi:"name"`
	// State of numeric feature
	NumberValue *int `pulumi:"numberValue"`
	// State of textual feature
	StringValue *string `pulumi:"stringValue"`
	// Possible Values: `Boolean`, `Number`, `String`
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a DiscoveryFeatureFlags resource.
type DiscoveryFeatureFlagsArgs struct {
	// State of boolean feature
	BooleanValue pulumi.BoolPtrInput
	// Name of the feature
	Name pulumi.StringPtrInput
	// State of numeric feature
	NumberValue pulumi.IntPtrInput
	// State of textual feature
	StringValue pulumi.StringPtrInput
	// Possible Values: `Boolean`, `Number`, `String`
	Type pulumi.StringInput
}

func (DiscoveryFeatureFlagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discoveryFeatureFlagsArgs)(nil)).Elem()
}

type DiscoveryFeatureFlagsInput interface {
	pulumi.Input

	ToDiscoveryFeatureFlagsOutput() DiscoveryFeatureFlagsOutput
	ToDiscoveryFeatureFlagsOutputWithContext(ctx context.Context) DiscoveryFeatureFlagsOutput
}

func (*DiscoveryFeatureFlags) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryFeatureFlags)(nil)).Elem()
}

func (i *DiscoveryFeatureFlags) ToDiscoveryFeatureFlagsOutput() DiscoveryFeatureFlagsOutput {
	return i.ToDiscoveryFeatureFlagsOutputWithContext(context.Background())
}

func (i *DiscoveryFeatureFlags) ToDiscoveryFeatureFlagsOutputWithContext(ctx context.Context) DiscoveryFeatureFlagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryFeatureFlagsOutput)
}

// DiscoveryFeatureFlagsArrayInput is an input type that accepts DiscoveryFeatureFlagsArray and DiscoveryFeatureFlagsArrayOutput values.
// You can construct a concrete instance of `DiscoveryFeatureFlagsArrayInput` via:
//
//	DiscoveryFeatureFlagsArray{ DiscoveryFeatureFlagsArgs{...} }
type DiscoveryFeatureFlagsArrayInput interface {
	pulumi.Input

	ToDiscoveryFeatureFlagsArrayOutput() DiscoveryFeatureFlagsArrayOutput
	ToDiscoveryFeatureFlagsArrayOutputWithContext(context.Context) DiscoveryFeatureFlagsArrayOutput
}

type DiscoveryFeatureFlagsArray []DiscoveryFeatureFlagsInput

func (DiscoveryFeatureFlagsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DiscoveryFeatureFlags)(nil)).Elem()
}

func (i DiscoveryFeatureFlagsArray) ToDiscoveryFeatureFlagsArrayOutput() DiscoveryFeatureFlagsArrayOutput {
	return i.ToDiscoveryFeatureFlagsArrayOutputWithContext(context.Background())
}

func (i DiscoveryFeatureFlagsArray) ToDiscoveryFeatureFlagsArrayOutputWithContext(ctx context.Context) DiscoveryFeatureFlagsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryFeatureFlagsArrayOutput)
}

// DiscoveryFeatureFlagsMapInput is an input type that accepts DiscoveryFeatureFlagsMap and DiscoveryFeatureFlagsMapOutput values.
// You can construct a concrete instance of `DiscoveryFeatureFlagsMapInput` via:
//
//	DiscoveryFeatureFlagsMap{ "key": DiscoveryFeatureFlagsArgs{...} }
type DiscoveryFeatureFlagsMapInput interface {
	pulumi.Input

	ToDiscoveryFeatureFlagsMapOutput() DiscoveryFeatureFlagsMapOutput
	ToDiscoveryFeatureFlagsMapOutputWithContext(context.Context) DiscoveryFeatureFlagsMapOutput
}

type DiscoveryFeatureFlagsMap map[string]DiscoveryFeatureFlagsInput

func (DiscoveryFeatureFlagsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DiscoveryFeatureFlags)(nil)).Elem()
}

func (i DiscoveryFeatureFlagsMap) ToDiscoveryFeatureFlagsMapOutput() DiscoveryFeatureFlagsMapOutput {
	return i.ToDiscoveryFeatureFlagsMapOutputWithContext(context.Background())
}

func (i DiscoveryFeatureFlagsMap) ToDiscoveryFeatureFlagsMapOutputWithContext(ctx context.Context) DiscoveryFeatureFlagsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscoveryFeatureFlagsMapOutput)
}

type DiscoveryFeatureFlagsOutput struct{ *pulumi.OutputState }

func (DiscoveryFeatureFlagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DiscoveryFeatureFlags)(nil)).Elem()
}

func (o DiscoveryFeatureFlagsOutput) ToDiscoveryFeatureFlagsOutput() DiscoveryFeatureFlagsOutput {
	return o
}

func (o DiscoveryFeatureFlagsOutput) ToDiscoveryFeatureFlagsOutputWithContext(ctx context.Context) DiscoveryFeatureFlagsOutput {
	return o
}

// State of boolean feature
func (o DiscoveryFeatureFlagsOutput) BooleanValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DiscoveryFeatureFlags) pulumi.BoolPtrOutput { return v.BooleanValue }).(pulumi.BoolPtrOutput)
}

// Name of the feature
func (o DiscoveryFeatureFlagsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryFeatureFlags) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// State of numeric feature
func (o DiscoveryFeatureFlagsOutput) NumberValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DiscoveryFeatureFlags) pulumi.IntPtrOutput { return v.NumberValue }).(pulumi.IntPtrOutput)
}

// State of textual feature
func (o DiscoveryFeatureFlagsOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DiscoveryFeatureFlags) pulumi.StringPtrOutput { return v.StringValue }).(pulumi.StringPtrOutput)
}

// Possible Values: `Boolean`, `Number`, `String`
func (o DiscoveryFeatureFlagsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DiscoveryFeatureFlags) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type DiscoveryFeatureFlagsArrayOutput struct{ *pulumi.OutputState }

func (DiscoveryFeatureFlagsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DiscoveryFeatureFlags)(nil)).Elem()
}

func (o DiscoveryFeatureFlagsArrayOutput) ToDiscoveryFeatureFlagsArrayOutput() DiscoveryFeatureFlagsArrayOutput {
	return o
}

func (o DiscoveryFeatureFlagsArrayOutput) ToDiscoveryFeatureFlagsArrayOutputWithContext(ctx context.Context) DiscoveryFeatureFlagsArrayOutput {
	return o
}

func (o DiscoveryFeatureFlagsArrayOutput) Index(i pulumi.IntInput) DiscoveryFeatureFlagsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DiscoveryFeatureFlags {
		return vs[0].([]*DiscoveryFeatureFlags)[vs[1].(int)]
	}).(DiscoveryFeatureFlagsOutput)
}

type DiscoveryFeatureFlagsMapOutput struct{ *pulumi.OutputState }

func (DiscoveryFeatureFlagsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DiscoveryFeatureFlags)(nil)).Elem()
}

func (o DiscoveryFeatureFlagsMapOutput) ToDiscoveryFeatureFlagsMapOutput() DiscoveryFeatureFlagsMapOutput {
	return o
}

func (o DiscoveryFeatureFlagsMapOutput) ToDiscoveryFeatureFlagsMapOutputWithContext(ctx context.Context) DiscoveryFeatureFlagsMapOutput {
	return o
}

func (o DiscoveryFeatureFlagsMapOutput) MapIndex(k pulumi.StringInput) DiscoveryFeatureFlagsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DiscoveryFeatureFlags {
		return vs[0].(map[string]*DiscoveryFeatureFlags)[vs[1].(string)]
	}).(DiscoveryFeatureFlagsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryFeatureFlagsInput)(nil)).Elem(), &DiscoveryFeatureFlags{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryFeatureFlagsArrayInput)(nil)).Elem(), DiscoveryFeatureFlagsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DiscoveryFeatureFlagsMapInput)(nil)).Elem(), DiscoveryFeatureFlagsMap{})
	pulumi.RegisterOutputType(DiscoveryFeatureFlagsOutput{})
	pulumi.RegisterOutputType(DiscoveryFeatureFlagsArrayOutput{})
	pulumi.RegisterOutputType(DiscoveryFeatureFlagsMapOutput{})
}
