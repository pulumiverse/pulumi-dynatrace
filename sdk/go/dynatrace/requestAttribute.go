// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type RequestAttribute struct {
	pulumi.CustomResourceState

	// Aggregation type for the request values
	Aggregation pulumi.StringOutput `pulumi:"aggregation"`
	// Confidential data flag. Set `true` to treat the captured data as confidential
	Confidential pulumi.BoolPtrOutput `pulumi:"confidential"`
	// The list of data sources
	DataSources RequestAttributeDataSourceArrayOutput `pulumi:"dataSources"`
	// The data type of the request attribute
	DataType pulumi.StringOutput `pulumi:"dataType"`
	// The request attribute is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The name of the request attribute
	Name pulumi.StringOutput `pulumi:"name"`
	// String values transformation.   If the **dataType** is not `string`, set the `Original` here
	Normalization pulumi.StringOutput `pulumi:"normalization"`
	// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
	SkipPersonalDataMasking pulumi.BoolPtrOutput `pulumi:"skipPersonalDataMasking"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrOutput `pulumi:"unknowns"`
}

// NewRequestAttribute registers a new resource with the given unique name, arguments, and options.
func NewRequestAttribute(ctx *pulumi.Context,
	name string, args *RequestAttributeArgs, opts ...pulumi.ResourceOption) (*RequestAttribute, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Aggregation == nil {
		return nil, errors.New("invalid value for required argument 'Aggregation'")
	}
	if args.DataType == nil {
		return nil, errors.New("invalid value for required argument 'DataType'")
	}
	if args.Normalization == nil {
		return nil, errors.New("invalid value for required argument 'Normalization'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RequestAttribute
	err := ctx.RegisterResource("dynatrace:index/requestAttribute:RequestAttribute", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRequestAttribute gets an existing RequestAttribute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRequestAttribute(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RequestAttributeState, opts ...pulumi.ResourceOption) (*RequestAttribute, error) {
	var resource RequestAttribute
	err := ctx.ReadResource("dynatrace:index/requestAttribute:RequestAttribute", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RequestAttribute resources.
type requestAttributeState struct {
	// Aggregation type for the request values
	Aggregation *string `pulumi:"aggregation"`
	// Confidential data flag. Set `true` to treat the captured data as confidential
	Confidential *bool `pulumi:"confidential"`
	// The list of data sources
	DataSources []RequestAttributeDataSource `pulumi:"dataSources"`
	// The data type of the request attribute
	DataType *string `pulumi:"dataType"`
	// The request attribute is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// The name of the request attribute
	Name *string `pulumi:"name"`
	// String values transformation.   If the **dataType** is not `string`, set the `Original` here
	Normalization *string `pulumi:"normalization"`
	// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
	SkipPersonalDataMasking *bool `pulumi:"skipPersonalDataMasking"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

type RequestAttributeState struct {
	// Aggregation type for the request values
	Aggregation pulumi.StringPtrInput
	// Confidential data flag. Set `true` to treat the captured data as confidential
	Confidential pulumi.BoolPtrInput
	// The list of data sources
	DataSources RequestAttributeDataSourceArrayInput
	// The data type of the request attribute
	DataType pulumi.StringPtrInput
	// The request attribute is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// The name of the request attribute
	Name pulumi.StringPtrInput
	// String values transformation.   If the **dataType** is not `string`, set the `Original` here
	Normalization pulumi.StringPtrInput
	// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
	SkipPersonalDataMasking pulumi.BoolPtrInput
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput
}

func (RequestAttributeState) ElementType() reflect.Type {
	return reflect.TypeOf((*requestAttributeState)(nil)).Elem()
}

type requestAttributeArgs struct {
	// Aggregation type for the request values
	Aggregation string `pulumi:"aggregation"`
	// Confidential data flag. Set `true` to treat the captured data as confidential
	Confidential *bool `pulumi:"confidential"`
	// The list of data sources
	DataSources []RequestAttributeDataSource `pulumi:"dataSources"`
	// The data type of the request attribute
	DataType string `pulumi:"dataType"`
	// The request attribute is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// The name of the request attribute
	Name *string `pulumi:"name"`
	// String values transformation.   If the **dataType** is not `string`, set the `Original` here
	Normalization string `pulumi:"normalization"`
	// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
	SkipPersonalDataMasking *bool `pulumi:"skipPersonalDataMasking"`
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns *string `pulumi:"unknowns"`
}

// The set of arguments for constructing a RequestAttribute resource.
type RequestAttributeArgs struct {
	// Aggregation type for the request values
	Aggregation pulumi.StringInput
	// Confidential data flag. Set `true` to treat the captured data as confidential
	Confidential pulumi.BoolPtrInput
	// The list of data sources
	DataSources RequestAttributeDataSourceArrayInput
	// The data type of the request attribute
	DataType pulumi.StringInput
	// The request attribute is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// The name of the request attribute
	Name pulumi.StringPtrInput
	// String values transformation.   If the **dataType** is not `string`, set the `Original` here
	Normalization pulumi.StringInput
	// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
	SkipPersonalDataMasking pulumi.BoolPtrInput
	// allows for configuring properties that are not explicitly supported by the current version of this provider
	Unknowns pulumi.StringPtrInput
}

func (RequestAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*requestAttributeArgs)(nil)).Elem()
}

type RequestAttributeInput interface {
	pulumi.Input

	ToRequestAttributeOutput() RequestAttributeOutput
	ToRequestAttributeOutputWithContext(ctx context.Context) RequestAttributeOutput
}

func (*RequestAttribute) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttribute)(nil)).Elem()
}

func (i *RequestAttribute) ToRequestAttributeOutput() RequestAttributeOutput {
	return i.ToRequestAttributeOutputWithContext(context.Background())
}

func (i *RequestAttribute) ToRequestAttributeOutputWithContext(ctx context.Context) RequestAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeOutput)
}

// RequestAttributeArrayInput is an input type that accepts RequestAttributeArray and RequestAttributeArrayOutput values.
// You can construct a concrete instance of `RequestAttributeArrayInput` via:
//
//	RequestAttributeArray{ RequestAttributeArgs{...} }
type RequestAttributeArrayInput interface {
	pulumi.Input

	ToRequestAttributeArrayOutput() RequestAttributeArrayOutput
	ToRequestAttributeArrayOutputWithContext(context.Context) RequestAttributeArrayOutput
}

type RequestAttributeArray []RequestAttributeInput

func (RequestAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestAttribute)(nil)).Elem()
}

func (i RequestAttributeArray) ToRequestAttributeArrayOutput() RequestAttributeArrayOutput {
	return i.ToRequestAttributeArrayOutputWithContext(context.Background())
}

func (i RequestAttributeArray) ToRequestAttributeArrayOutputWithContext(ctx context.Context) RequestAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeArrayOutput)
}

// RequestAttributeMapInput is an input type that accepts RequestAttributeMap and RequestAttributeMapOutput values.
// You can construct a concrete instance of `RequestAttributeMapInput` via:
//
//	RequestAttributeMap{ "key": RequestAttributeArgs{...} }
type RequestAttributeMapInput interface {
	pulumi.Input

	ToRequestAttributeMapOutput() RequestAttributeMapOutput
	ToRequestAttributeMapOutputWithContext(context.Context) RequestAttributeMapOutput
}

type RequestAttributeMap map[string]RequestAttributeInput

func (RequestAttributeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestAttribute)(nil)).Elem()
}

func (i RequestAttributeMap) ToRequestAttributeMapOutput() RequestAttributeMapOutput {
	return i.ToRequestAttributeMapOutputWithContext(context.Background())
}

func (i RequestAttributeMap) ToRequestAttributeMapOutputWithContext(ctx context.Context) RequestAttributeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestAttributeMapOutput)
}

type RequestAttributeOutput struct{ *pulumi.OutputState }

func (RequestAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RequestAttribute)(nil)).Elem()
}

func (o RequestAttributeOutput) ToRequestAttributeOutput() RequestAttributeOutput {
	return o
}

func (o RequestAttributeOutput) ToRequestAttributeOutputWithContext(ctx context.Context) RequestAttributeOutput {
	return o
}

// Aggregation type for the request values
func (o RequestAttributeOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestAttribute) pulumi.StringOutput { return v.Aggregation }).(pulumi.StringOutput)
}

// Confidential data flag. Set `true` to treat the captured data as confidential
func (o RequestAttributeOutput) Confidential() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestAttribute) pulumi.BoolPtrOutput { return v.Confidential }).(pulumi.BoolPtrOutput)
}

// The list of data sources
func (o RequestAttributeOutput) DataSources() RequestAttributeDataSourceArrayOutput {
	return o.ApplyT(func(v *RequestAttribute) RequestAttributeDataSourceArrayOutput { return v.DataSources }).(RequestAttributeDataSourceArrayOutput)
}

// The data type of the request attribute
func (o RequestAttributeOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestAttribute) pulumi.StringOutput { return v.DataType }).(pulumi.StringOutput)
}

// The request attribute is enabled (`true`) or disabled (`false`)
func (o RequestAttributeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestAttribute) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The name of the request attribute
func (o RequestAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestAttribute) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// String values transformation.   If the **dataType** is not `string`, set the `Original` here
func (o RequestAttributeOutput) Normalization() pulumi.StringOutput {
	return o.ApplyT(func(v *RequestAttribute) pulumi.StringOutput { return v.Normalization }).(pulumi.StringOutput)
}

// Personal data masking flag. Set `true` to skip masking.   Warning: This will potentially access personalized data
func (o RequestAttributeOutput) SkipPersonalDataMasking() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RequestAttribute) pulumi.BoolPtrOutput { return v.SkipPersonalDataMasking }).(pulumi.BoolPtrOutput)
}

// allows for configuring properties that are not explicitly supported by the current version of this provider
func (o RequestAttributeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RequestAttribute) pulumi.StringPtrOutput { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type RequestAttributeArrayOutput struct{ *pulumi.OutputState }

func (RequestAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RequestAttribute)(nil)).Elem()
}

func (o RequestAttributeArrayOutput) ToRequestAttributeArrayOutput() RequestAttributeArrayOutput {
	return o
}

func (o RequestAttributeArrayOutput) ToRequestAttributeArrayOutputWithContext(ctx context.Context) RequestAttributeArrayOutput {
	return o
}

func (o RequestAttributeArrayOutput) Index(i pulumi.IntInput) RequestAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RequestAttribute {
		return vs[0].([]*RequestAttribute)[vs[1].(int)]
	}).(RequestAttributeOutput)
}

type RequestAttributeMapOutput struct{ *pulumi.OutputState }

func (RequestAttributeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RequestAttribute)(nil)).Elem()
}

func (o RequestAttributeMapOutput) ToRequestAttributeMapOutput() RequestAttributeMapOutput {
	return o
}

func (o RequestAttributeMapOutput) ToRequestAttributeMapOutputWithContext(ctx context.Context) RequestAttributeMapOutput {
	return o
}

func (o RequestAttributeMapOutput) MapIndex(k pulumi.StringInput) RequestAttributeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RequestAttribute {
		return vs[0].(map[string]*RequestAttribute)[vs[1].(string)]
	}).(RequestAttributeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeInput)(nil)).Elem(), &RequestAttribute{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeArrayInput)(nil)).Elem(), RequestAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RequestAttributeMapInput)(nil)).Elem(), RequestAttributeMap{})
	pulumi.RegisterOutputType(RequestAttributeOutput{})
	pulumi.RegisterOutputType(RequestAttributeArrayOutput{})
	pulumi.RegisterOutputType(RequestAttributeMapOutput{})
}
