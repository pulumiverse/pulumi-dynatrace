// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type AutomationWorkflowAwsConnections struct {
	pulumi.CustomResourceState

	// Name
	Name pulumi.StringOutput `pulumi:"name"`
	// Possible Values: `WebIdentity`
	Type pulumi.StringOutput `pulumi:"type"`
	// no documentation available
	WebIdentity AutomationWorkflowAwsConnectionsWebIdentityPtrOutput `pulumi:"webIdentity"`
}

// NewAutomationWorkflowAwsConnections registers a new resource with the given unique name, arguments, and options.
func NewAutomationWorkflowAwsConnections(ctx *pulumi.Context,
	name string, args *AutomationWorkflowAwsConnectionsArgs, opts ...pulumi.ResourceOption) (*AutomationWorkflowAwsConnections, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutomationWorkflowAwsConnections
	err := ctx.RegisterResource("dynatrace:index/automationWorkflowAwsConnections:AutomationWorkflowAwsConnections", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutomationWorkflowAwsConnections gets an existing AutomationWorkflowAwsConnections resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutomationWorkflowAwsConnections(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutomationWorkflowAwsConnectionsState, opts ...pulumi.ResourceOption) (*AutomationWorkflowAwsConnections, error) {
	var resource AutomationWorkflowAwsConnections
	err := ctx.ReadResource("dynatrace:index/automationWorkflowAwsConnections:AutomationWorkflowAwsConnections", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutomationWorkflowAwsConnections resources.
type automationWorkflowAwsConnectionsState struct {
	// Name
	Name *string `pulumi:"name"`
	// Possible Values: `WebIdentity`
	Type *string `pulumi:"type"`
	// no documentation available
	WebIdentity *AutomationWorkflowAwsConnectionsWebIdentity `pulumi:"webIdentity"`
}

type AutomationWorkflowAwsConnectionsState struct {
	// Name
	Name pulumi.StringPtrInput
	// Possible Values: `WebIdentity`
	Type pulumi.StringPtrInput
	// no documentation available
	WebIdentity AutomationWorkflowAwsConnectionsWebIdentityPtrInput
}

func (AutomationWorkflowAwsConnectionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*automationWorkflowAwsConnectionsState)(nil)).Elem()
}

type automationWorkflowAwsConnectionsArgs struct {
	// Name
	Name *string `pulumi:"name"`
	// Possible Values: `WebIdentity`
	Type string `pulumi:"type"`
	// no documentation available
	WebIdentity *AutomationWorkflowAwsConnectionsWebIdentity `pulumi:"webIdentity"`
}

// The set of arguments for constructing a AutomationWorkflowAwsConnections resource.
type AutomationWorkflowAwsConnectionsArgs struct {
	// Name
	Name pulumi.StringPtrInput
	// Possible Values: `WebIdentity`
	Type pulumi.StringInput
	// no documentation available
	WebIdentity AutomationWorkflowAwsConnectionsWebIdentityPtrInput
}

func (AutomationWorkflowAwsConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*automationWorkflowAwsConnectionsArgs)(nil)).Elem()
}

type AutomationWorkflowAwsConnectionsInput interface {
	pulumi.Input

	ToAutomationWorkflowAwsConnectionsOutput() AutomationWorkflowAwsConnectionsOutput
	ToAutomationWorkflowAwsConnectionsOutputWithContext(ctx context.Context) AutomationWorkflowAwsConnectionsOutput
}

func (*AutomationWorkflowAwsConnections) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationWorkflowAwsConnections)(nil)).Elem()
}

func (i *AutomationWorkflowAwsConnections) ToAutomationWorkflowAwsConnectionsOutput() AutomationWorkflowAwsConnectionsOutput {
	return i.ToAutomationWorkflowAwsConnectionsOutputWithContext(context.Background())
}

func (i *AutomationWorkflowAwsConnections) ToAutomationWorkflowAwsConnectionsOutputWithContext(ctx context.Context) AutomationWorkflowAwsConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationWorkflowAwsConnectionsOutput)
}

// AutomationWorkflowAwsConnectionsArrayInput is an input type that accepts AutomationWorkflowAwsConnectionsArray and AutomationWorkflowAwsConnectionsArrayOutput values.
// You can construct a concrete instance of `AutomationWorkflowAwsConnectionsArrayInput` via:
//
//	AutomationWorkflowAwsConnectionsArray{ AutomationWorkflowAwsConnectionsArgs{...} }
type AutomationWorkflowAwsConnectionsArrayInput interface {
	pulumi.Input

	ToAutomationWorkflowAwsConnectionsArrayOutput() AutomationWorkflowAwsConnectionsArrayOutput
	ToAutomationWorkflowAwsConnectionsArrayOutputWithContext(context.Context) AutomationWorkflowAwsConnectionsArrayOutput
}

type AutomationWorkflowAwsConnectionsArray []AutomationWorkflowAwsConnectionsInput

func (AutomationWorkflowAwsConnectionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutomationWorkflowAwsConnections)(nil)).Elem()
}

func (i AutomationWorkflowAwsConnectionsArray) ToAutomationWorkflowAwsConnectionsArrayOutput() AutomationWorkflowAwsConnectionsArrayOutput {
	return i.ToAutomationWorkflowAwsConnectionsArrayOutputWithContext(context.Background())
}

func (i AutomationWorkflowAwsConnectionsArray) ToAutomationWorkflowAwsConnectionsArrayOutputWithContext(ctx context.Context) AutomationWorkflowAwsConnectionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationWorkflowAwsConnectionsArrayOutput)
}

// AutomationWorkflowAwsConnectionsMapInput is an input type that accepts AutomationWorkflowAwsConnectionsMap and AutomationWorkflowAwsConnectionsMapOutput values.
// You can construct a concrete instance of `AutomationWorkflowAwsConnectionsMapInput` via:
//
//	AutomationWorkflowAwsConnectionsMap{ "key": AutomationWorkflowAwsConnectionsArgs{...} }
type AutomationWorkflowAwsConnectionsMapInput interface {
	pulumi.Input

	ToAutomationWorkflowAwsConnectionsMapOutput() AutomationWorkflowAwsConnectionsMapOutput
	ToAutomationWorkflowAwsConnectionsMapOutputWithContext(context.Context) AutomationWorkflowAwsConnectionsMapOutput
}

type AutomationWorkflowAwsConnectionsMap map[string]AutomationWorkflowAwsConnectionsInput

func (AutomationWorkflowAwsConnectionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutomationWorkflowAwsConnections)(nil)).Elem()
}

func (i AutomationWorkflowAwsConnectionsMap) ToAutomationWorkflowAwsConnectionsMapOutput() AutomationWorkflowAwsConnectionsMapOutput {
	return i.ToAutomationWorkflowAwsConnectionsMapOutputWithContext(context.Background())
}

func (i AutomationWorkflowAwsConnectionsMap) ToAutomationWorkflowAwsConnectionsMapOutputWithContext(ctx context.Context) AutomationWorkflowAwsConnectionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationWorkflowAwsConnectionsMapOutput)
}

type AutomationWorkflowAwsConnectionsOutput struct{ *pulumi.OutputState }

func (AutomationWorkflowAwsConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationWorkflowAwsConnections)(nil)).Elem()
}

func (o AutomationWorkflowAwsConnectionsOutput) ToAutomationWorkflowAwsConnectionsOutput() AutomationWorkflowAwsConnectionsOutput {
	return o
}

func (o AutomationWorkflowAwsConnectionsOutput) ToAutomationWorkflowAwsConnectionsOutputWithContext(ctx context.Context) AutomationWorkflowAwsConnectionsOutput {
	return o
}

// Name
func (o AutomationWorkflowAwsConnectionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AutomationWorkflowAwsConnections) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Possible Values: `WebIdentity`
func (o AutomationWorkflowAwsConnectionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AutomationWorkflowAwsConnections) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// no documentation available
func (o AutomationWorkflowAwsConnectionsOutput) WebIdentity() AutomationWorkflowAwsConnectionsWebIdentityPtrOutput {
	return o.ApplyT(func(v *AutomationWorkflowAwsConnections) AutomationWorkflowAwsConnectionsWebIdentityPtrOutput {
		return v.WebIdentity
	}).(AutomationWorkflowAwsConnectionsWebIdentityPtrOutput)
}

type AutomationWorkflowAwsConnectionsArrayOutput struct{ *pulumi.OutputState }

func (AutomationWorkflowAwsConnectionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutomationWorkflowAwsConnections)(nil)).Elem()
}

func (o AutomationWorkflowAwsConnectionsArrayOutput) ToAutomationWorkflowAwsConnectionsArrayOutput() AutomationWorkflowAwsConnectionsArrayOutput {
	return o
}

func (o AutomationWorkflowAwsConnectionsArrayOutput) ToAutomationWorkflowAwsConnectionsArrayOutputWithContext(ctx context.Context) AutomationWorkflowAwsConnectionsArrayOutput {
	return o
}

func (o AutomationWorkflowAwsConnectionsArrayOutput) Index(i pulumi.IntInput) AutomationWorkflowAwsConnectionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutomationWorkflowAwsConnections {
		return vs[0].([]*AutomationWorkflowAwsConnections)[vs[1].(int)]
	}).(AutomationWorkflowAwsConnectionsOutput)
}

type AutomationWorkflowAwsConnectionsMapOutput struct{ *pulumi.OutputState }

func (AutomationWorkflowAwsConnectionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutomationWorkflowAwsConnections)(nil)).Elem()
}

func (o AutomationWorkflowAwsConnectionsMapOutput) ToAutomationWorkflowAwsConnectionsMapOutput() AutomationWorkflowAwsConnectionsMapOutput {
	return o
}

func (o AutomationWorkflowAwsConnectionsMapOutput) ToAutomationWorkflowAwsConnectionsMapOutputWithContext(ctx context.Context) AutomationWorkflowAwsConnectionsMapOutput {
	return o
}

func (o AutomationWorkflowAwsConnectionsMapOutput) MapIndex(k pulumi.StringInput) AutomationWorkflowAwsConnectionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutomationWorkflowAwsConnections {
		return vs[0].(map[string]*AutomationWorkflowAwsConnections)[vs[1].(string)]
	}).(AutomationWorkflowAwsConnectionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationWorkflowAwsConnectionsInput)(nil)).Elem(), &AutomationWorkflowAwsConnections{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationWorkflowAwsConnectionsArrayInput)(nil)).Elem(), AutomationWorkflowAwsConnectionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationWorkflowAwsConnectionsMapInput)(nil)).Elem(), AutomationWorkflowAwsConnectionsMap{})
	pulumi.RegisterOutputType(AutomationWorkflowAwsConnectionsOutput{})
	pulumi.RegisterOutputType(AutomationWorkflowAwsConnectionsArrayOutput{})
	pulumi.RegisterOutputType(AutomationWorkflowAwsConnectionsMapOutput{})
}
