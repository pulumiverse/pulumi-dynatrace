// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type CloudFoundry struct {
	pulumi.CustomResourceState

	// ActiveGate group
	ActiveGateGroup pulumi.StringPtrOutput `pulumi:"activeGateGroup"`
	// Cloud Foundry API Target
	ApiUrl pulumi.StringOutput `pulumi:"apiUrl"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Name this connection
	Label pulumi.StringOutput `pulumi:"label"`
	// Cloud Foundry Authentication Endpoint
	LoginUrl pulumi.StringOutput `pulumi:"loginUrl"`
	// Cloud Foundry Password
	Password pulumi.StringOutput `pulumi:"password"`
	// Cloud Foundry Username
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewCloudFoundry registers a new resource with the given unique name, arguments, and options.
func NewCloudFoundry(ctx *pulumi.Context,
	name string, args *CloudFoundryArgs, opts ...pulumi.ResourceOption) (*CloudFoundry, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiUrl == nil {
		return nil, errors.New("invalid value for required argument 'ApiUrl'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.LoginUrl == nil {
		return nil, errors.New("invalid value for required argument 'LoginUrl'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudFoundry
	err := ctx.RegisterResource("dynatrace:index/cloudFoundry:CloudFoundry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudFoundry gets an existing CloudFoundry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudFoundry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudFoundryState, opts ...pulumi.ResourceOption) (*CloudFoundry, error) {
	var resource CloudFoundry
	err := ctx.ReadResource("dynatrace:index/cloudFoundry:CloudFoundry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudFoundry resources.
type cloudFoundryState struct {
	// ActiveGate group
	ActiveGateGroup *string `pulumi:"activeGateGroup"`
	// Cloud Foundry API Target
	ApiUrl *string `pulumi:"apiUrl"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Name this connection
	Label *string `pulumi:"label"`
	// Cloud Foundry Authentication Endpoint
	LoginUrl *string `pulumi:"loginUrl"`
	// Cloud Foundry Password
	Password *string `pulumi:"password"`
	// Cloud Foundry Username
	Username *string `pulumi:"username"`
}

type CloudFoundryState struct {
	// ActiveGate group
	ActiveGateGroup pulumi.StringPtrInput
	// Cloud Foundry API Target
	ApiUrl pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Name this connection
	Label pulumi.StringPtrInput
	// Cloud Foundry Authentication Endpoint
	LoginUrl pulumi.StringPtrInput
	// Cloud Foundry Password
	Password pulumi.StringPtrInput
	// Cloud Foundry Username
	Username pulumi.StringPtrInput
}

func (CloudFoundryState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudFoundryState)(nil)).Elem()
}

type cloudFoundryArgs struct {
	// ActiveGate group
	ActiveGateGroup *string `pulumi:"activeGateGroup"`
	// Cloud Foundry API Target
	ApiUrl string `pulumi:"apiUrl"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Name this connection
	Label string `pulumi:"label"`
	// Cloud Foundry Authentication Endpoint
	LoginUrl string `pulumi:"loginUrl"`
	// Cloud Foundry Password
	Password string `pulumi:"password"`
	// Cloud Foundry Username
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a CloudFoundry resource.
type CloudFoundryArgs struct {
	// ActiveGate group
	ActiveGateGroup pulumi.StringPtrInput
	// Cloud Foundry API Target
	ApiUrl pulumi.StringInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Name this connection
	Label pulumi.StringInput
	// Cloud Foundry Authentication Endpoint
	LoginUrl pulumi.StringInput
	// Cloud Foundry Password
	Password pulumi.StringInput
	// Cloud Foundry Username
	Username pulumi.StringInput
}

func (CloudFoundryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudFoundryArgs)(nil)).Elem()
}

type CloudFoundryInput interface {
	pulumi.Input

	ToCloudFoundryOutput() CloudFoundryOutput
	ToCloudFoundryOutputWithContext(ctx context.Context) CloudFoundryOutput
}

func (*CloudFoundry) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudFoundry)(nil)).Elem()
}

func (i *CloudFoundry) ToCloudFoundryOutput() CloudFoundryOutput {
	return i.ToCloudFoundryOutputWithContext(context.Background())
}

func (i *CloudFoundry) ToCloudFoundryOutputWithContext(ctx context.Context) CloudFoundryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFoundryOutput)
}

// CloudFoundryArrayInput is an input type that accepts CloudFoundryArray and CloudFoundryArrayOutput values.
// You can construct a concrete instance of `CloudFoundryArrayInput` via:
//
//	CloudFoundryArray{ CloudFoundryArgs{...} }
type CloudFoundryArrayInput interface {
	pulumi.Input

	ToCloudFoundryArrayOutput() CloudFoundryArrayOutput
	ToCloudFoundryArrayOutputWithContext(context.Context) CloudFoundryArrayOutput
}

type CloudFoundryArray []CloudFoundryInput

func (CloudFoundryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudFoundry)(nil)).Elem()
}

func (i CloudFoundryArray) ToCloudFoundryArrayOutput() CloudFoundryArrayOutput {
	return i.ToCloudFoundryArrayOutputWithContext(context.Background())
}

func (i CloudFoundryArray) ToCloudFoundryArrayOutputWithContext(ctx context.Context) CloudFoundryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFoundryArrayOutput)
}

// CloudFoundryMapInput is an input type that accepts CloudFoundryMap and CloudFoundryMapOutput values.
// You can construct a concrete instance of `CloudFoundryMapInput` via:
//
//	CloudFoundryMap{ "key": CloudFoundryArgs{...} }
type CloudFoundryMapInput interface {
	pulumi.Input

	ToCloudFoundryMapOutput() CloudFoundryMapOutput
	ToCloudFoundryMapOutputWithContext(context.Context) CloudFoundryMapOutput
}

type CloudFoundryMap map[string]CloudFoundryInput

func (CloudFoundryMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudFoundry)(nil)).Elem()
}

func (i CloudFoundryMap) ToCloudFoundryMapOutput() CloudFoundryMapOutput {
	return i.ToCloudFoundryMapOutputWithContext(context.Background())
}

func (i CloudFoundryMap) ToCloudFoundryMapOutputWithContext(ctx context.Context) CloudFoundryMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFoundryMapOutput)
}

type CloudFoundryOutput struct{ *pulumi.OutputState }

func (CloudFoundryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudFoundry)(nil)).Elem()
}

func (o CloudFoundryOutput) ToCloudFoundryOutput() CloudFoundryOutput {
	return o
}

func (o CloudFoundryOutput) ToCloudFoundryOutputWithContext(ctx context.Context) CloudFoundryOutput {
	return o
}

// ActiveGate group
func (o CloudFoundryOutput) ActiveGateGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudFoundry) pulumi.StringPtrOutput { return v.ActiveGateGroup }).(pulumi.StringPtrOutput)
}

// Cloud Foundry API Target
func (o CloudFoundryOutput) ApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudFoundry) pulumi.StringOutput { return v.ApiUrl }).(pulumi.StringOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o CloudFoundryOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *CloudFoundry) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Name this connection
func (o CloudFoundryOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudFoundry) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// Cloud Foundry Authentication Endpoint
func (o CloudFoundryOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudFoundry) pulumi.StringOutput { return v.LoginUrl }).(pulumi.StringOutput)
}

// Cloud Foundry Password
func (o CloudFoundryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudFoundry) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Cloud Foundry Username
func (o CloudFoundryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudFoundry) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type CloudFoundryArrayOutput struct{ *pulumi.OutputState }

func (CloudFoundryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudFoundry)(nil)).Elem()
}

func (o CloudFoundryArrayOutput) ToCloudFoundryArrayOutput() CloudFoundryArrayOutput {
	return o
}

func (o CloudFoundryArrayOutput) ToCloudFoundryArrayOutputWithContext(ctx context.Context) CloudFoundryArrayOutput {
	return o
}

func (o CloudFoundryArrayOutput) Index(i pulumi.IntInput) CloudFoundryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudFoundry {
		return vs[0].([]*CloudFoundry)[vs[1].(int)]
	}).(CloudFoundryOutput)
}

type CloudFoundryMapOutput struct{ *pulumi.OutputState }

func (CloudFoundryMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudFoundry)(nil)).Elem()
}

func (o CloudFoundryMapOutput) ToCloudFoundryMapOutput() CloudFoundryMapOutput {
	return o
}

func (o CloudFoundryMapOutput) ToCloudFoundryMapOutputWithContext(ctx context.Context) CloudFoundryMapOutput {
	return o
}

func (o CloudFoundryMapOutput) MapIndex(k pulumi.StringInput) CloudFoundryOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudFoundry {
		return vs[0].(map[string]*CloudFoundry)[vs[1].(string)]
	}).(CloudFoundryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudFoundryInput)(nil)).Elem(), &CloudFoundry{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudFoundryArrayInput)(nil)).Elem(), CloudFoundryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudFoundryMapInput)(nil)).Elem(), CloudFoundryMap{})
	pulumi.RegisterOutputType(CloudFoundryOutput{})
	pulumi.RegisterOutputType(CloudFoundryArrayOutput{})
	pulumi.RegisterOutputType(CloudFoundryMapOutput{})
}
