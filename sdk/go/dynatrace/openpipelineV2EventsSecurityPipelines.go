// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OpenpipelineV2EventsSecurityPipelines struct {
	pulumi.CustomResourceState

	// Cost allocation stage
	CostAllocation OpenpipelineV2EventsSecurityPipelinesCostAllocationOutput `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId pulumi.StringOutput `pulumi:"customId"`
	// Data extraction stage
	DataExtraction OpenpipelineV2EventsSecurityPipelinesDataExtractionOutput `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis OpenpipelineV2EventsSecurityPipelinesDavisOutput `pulumi:"davis"`
	// Display name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2EventsSecurityPipelinesMetricExtractionOutput `pulumi:"metricExtraction"`
	// Processing stage
	Processing OpenpipelineV2EventsSecurityPipelinesProcessingOutput `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation OpenpipelineV2EventsSecurityPipelinesProductAllocationOutput `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext OpenpipelineV2EventsSecurityPipelinesSecurityContextOutput `pulumi:"securityContext"`
	// Storage stage
	Storage OpenpipelineV2EventsSecurityPipelinesStorageOutput `pulumi:"storage"`
}

// NewOpenpipelineV2EventsSecurityPipelines registers a new resource with the given unique name, arguments, and options.
func NewOpenpipelineV2EventsSecurityPipelines(ctx *pulumi.Context,
	name string, args *OpenpipelineV2EventsSecurityPipelinesArgs, opts ...pulumi.ResourceOption) (*OpenpipelineV2EventsSecurityPipelines, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CostAllocation == nil {
		return nil, errors.New("invalid value for required argument 'CostAllocation'")
	}
	if args.CustomId == nil {
		return nil, errors.New("invalid value for required argument 'CustomId'")
	}
	if args.DataExtraction == nil {
		return nil, errors.New("invalid value for required argument 'DataExtraction'")
	}
	if args.Davis == nil {
		return nil, errors.New("invalid value for required argument 'Davis'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.MetricExtraction == nil {
		return nil, errors.New("invalid value for required argument 'MetricExtraction'")
	}
	if args.Processing == nil {
		return nil, errors.New("invalid value for required argument 'Processing'")
	}
	if args.ProductAllocation == nil {
		return nil, errors.New("invalid value for required argument 'ProductAllocation'")
	}
	if args.SecurityContext == nil {
		return nil, errors.New("invalid value for required argument 'SecurityContext'")
	}
	if args.Storage == nil {
		return nil, errors.New("invalid value for required argument 'Storage'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenpipelineV2EventsSecurityPipelines
	err := ctx.RegisterResource("dynatrace:index/openpipelineV2EventsSecurityPipelines:OpenpipelineV2EventsSecurityPipelines", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenpipelineV2EventsSecurityPipelines gets an existing OpenpipelineV2EventsSecurityPipelines resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenpipelineV2EventsSecurityPipelines(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenpipelineV2EventsSecurityPipelinesState, opts ...pulumi.ResourceOption) (*OpenpipelineV2EventsSecurityPipelines, error) {
	var resource OpenpipelineV2EventsSecurityPipelines
	err := ctx.ReadResource("dynatrace:index/openpipelineV2EventsSecurityPipelines:OpenpipelineV2EventsSecurityPipelines", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenpipelineV2EventsSecurityPipelines resources.
type openpipelineV2EventsSecurityPipelinesState struct {
	// Cost allocation stage
	CostAllocation *OpenpipelineV2EventsSecurityPipelinesCostAllocation `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId *string `pulumi:"customId"`
	// Data extraction stage
	DataExtraction *OpenpipelineV2EventsSecurityPipelinesDataExtraction `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis *OpenpipelineV2EventsSecurityPipelinesDavis `pulumi:"davis"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction *OpenpipelineV2EventsSecurityPipelinesMetricExtraction `pulumi:"metricExtraction"`
	// Processing stage
	Processing *OpenpipelineV2EventsSecurityPipelinesProcessing `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation *OpenpipelineV2EventsSecurityPipelinesProductAllocation `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext *OpenpipelineV2EventsSecurityPipelinesSecurityContext `pulumi:"securityContext"`
	// Storage stage
	Storage *OpenpipelineV2EventsSecurityPipelinesStorage `pulumi:"storage"`
}

type OpenpipelineV2EventsSecurityPipelinesState struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2EventsSecurityPipelinesCostAllocationPtrInput
	// Custom pipeline id
	CustomId pulumi.StringPtrInput
	// Data extraction stage
	DataExtraction OpenpipelineV2EventsSecurityPipelinesDataExtractionPtrInput
	// Davis event extraction stage
	Davis OpenpipelineV2EventsSecurityPipelinesDavisPtrInput
	// Display name
	DisplayName pulumi.StringPtrInput
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2EventsSecurityPipelinesMetricExtractionPtrInput
	// Processing stage
	Processing OpenpipelineV2EventsSecurityPipelinesProcessingPtrInput
	// Product allocation stage
	ProductAllocation OpenpipelineV2EventsSecurityPipelinesProductAllocationPtrInput
	// Security context stage
	SecurityContext OpenpipelineV2EventsSecurityPipelinesSecurityContextPtrInput
	// Storage stage
	Storage OpenpipelineV2EventsSecurityPipelinesStoragePtrInput
}

func (OpenpipelineV2EventsSecurityPipelinesState) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2EventsSecurityPipelinesState)(nil)).Elem()
}

type openpipelineV2EventsSecurityPipelinesArgs struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2EventsSecurityPipelinesCostAllocation `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId string `pulumi:"customId"`
	// Data extraction stage
	DataExtraction OpenpipelineV2EventsSecurityPipelinesDataExtraction `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis OpenpipelineV2EventsSecurityPipelinesDavis `pulumi:"davis"`
	// Display name
	DisplayName string `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2EventsSecurityPipelinesMetricExtraction `pulumi:"metricExtraction"`
	// Processing stage
	Processing OpenpipelineV2EventsSecurityPipelinesProcessing `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation OpenpipelineV2EventsSecurityPipelinesProductAllocation `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext OpenpipelineV2EventsSecurityPipelinesSecurityContext `pulumi:"securityContext"`
	// Storage stage
	Storage OpenpipelineV2EventsSecurityPipelinesStorage `pulumi:"storage"`
}

// The set of arguments for constructing a OpenpipelineV2EventsSecurityPipelines resource.
type OpenpipelineV2EventsSecurityPipelinesArgs struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2EventsSecurityPipelinesCostAllocationInput
	// Custom pipeline id
	CustomId pulumi.StringInput
	// Data extraction stage
	DataExtraction OpenpipelineV2EventsSecurityPipelinesDataExtractionInput
	// Davis event extraction stage
	Davis OpenpipelineV2EventsSecurityPipelinesDavisInput
	// Display name
	DisplayName pulumi.StringInput
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2EventsSecurityPipelinesMetricExtractionInput
	// Processing stage
	Processing OpenpipelineV2EventsSecurityPipelinesProcessingInput
	// Product allocation stage
	ProductAllocation OpenpipelineV2EventsSecurityPipelinesProductAllocationInput
	// Security context stage
	SecurityContext OpenpipelineV2EventsSecurityPipelinesSecurityContextInput
	// Storage stage
	Storage OpenpipelineV2EventsSecurityPipelinesStorageInput
}

func (OpenpipelineV2EventsSecurityPipelinesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2EventsSecurityPipelinesArgs)(nil)).Elem()
}

type OpenpipelineV2EventsSecurityPipelinesInput interface {
	pulumi.Input

	ToOpenpipelineV2EventsSecurityPipelinesOutput() OpenpipelineV2EventsSecurityPipelinesOutput
	ToOpenpipelineV2EventsSecurityPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityPipelinesOutput
}

func (*OpenpipelineV2EventsSecurityPipelines) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2EventsSecurityPipelines)(nil)).Elem()
}

func (i *OpenpipelineV2EventsSecurityPipelines) ToOpenpipelineV2EventsSecurityPipelinesOutput() OpenpipelineV2EventsSecurityPipelinesOutput {
	return i.ToOpenpipelineV2EventsSecurityPipelinesOutputWithContext(context.Background())
}

func (i *OpenpipelineV2EventsSecurityPipelines) ToOpenpipelineV2EventsSecurityPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityPipelinesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2EventsSecurityPipelinesOutput)
}

// OpenpipelineV2EventsSecurityPipelinesArrayInput is an input type that accepts OpenpipelineV2EventsSecurityPipelinesArray and OpenpipelineV2EventsSecurityPipelinesArrayOutput values.
// You can construct a concrete instance of `OpenpipelineV2EventsSecurityPipelinesArrayInput` via:
//
//	OpenpipelineV2EventsSecurityPipelinesArray{ OpenpipelineV2EventsSecurityPipelinesArgs{...} }
type OpenpipelineV2EventsSecurityPipelinesArrayInput interface {
	pulumi.Input

	ToOpenpipelineV2EventsSecurityPipelinesArrayOutput() OpenpipelineV2EventsSecurityPipelinesArrayOutput
	ToOpenpipelineV2EventsSecurityPipelinesArrayOutputWithContext(context.Context) OpenpipelineV2EventsSecurityPipelinesArrayOutput
}

type OpenpipelineV2EventsSecurityPipelinesArray []OpenpipelineV2EventsSecurityPipelinesInput

func (OpenpipelineV2EventsSecurityPipelinesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2EventsSecurityPipelines)(nil)).Elem()
}

func (i OpenpipelineV2EventsSecurityPipelinesArray) ToOpenpipelineV2EventsSecurityPipelinesArrayOutput() OpenpipelineV2EventsSecurityPipelinesArrayOutput {
	return i.ToOpenpipelineV2EventsSecurityPipelinesArrayOutputWithContext(context.Background())
}

func (i OpenpipelineV2EventsSecurityPipelinesArray) ToOpenpipelineV2EventsSecurityPipelinesArrayOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityPipelinesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2EventsSecurityPipelinesArrayOutput)
}

// OpenpipelineV2EventsSecurityPipelinesMapInput is an input type that accepts OpenpipelineV2EventsSecurityPipelinesMap and OpenpipelineV2EventsSecurityPipelinesMapOutput values.
// You can construct a concrete instance of `OpenpipelineV2EventsSecurityPipelinesMapInput` via:
//
//	OpenpipelineV2EventsSecurityPipelinesMap{ "key": OpenpipelineV2EventsSecurityPipelinesArgs{...} }
type OpenpipelineV2EventsSecurityPipelinesMapInput interface {
	pulumi.Input

	ToOpenpipelineV2EventsSecurityPipelinesMapOutput() OpenpipelineV2EventsSecurityPipelinesMapOutput
	ToOpenpipelineV2EventsSecurityPipelinesMapOutputWithContext(context.Context) OpenpipelineV2EventsSecurityPipelinesMapOutput
}

type OpenpipelineV2EventsSecurityPipelinesMap map[string]OpenpipelineV2EventsSecurityPipelinesInput

func (OpenpipelineV2EventsSecurityPipelinesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2EventsSecurityPipelines)(nil)).Elem()
}

func (i OpenpipelineV2EventsSecurityPipelinesMap) ToOpenpipelineV2EventsSecurityPipelinesMapOutput() OpenpipelineV2EventsSecurityPipelinesMapOutput {
	return i.ToOpenpipelineV2EventsSecurityPipelinesMapOutputWithContext(context.Background())
}

func (i OpenpipelineV2EventsSecurityPipelinesMap) ToOpenpipelineV2EventsSecurityPipelinesMapOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityPipelinesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2EventsSecurityPipelinesMapOutput)
}

type OpenpipelineV2EventsSecurityPipelinesOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2EventsSecurityPipelinesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2EventsSecurityPipelines)(nil)).Elem()
}

func (o OpenpipelineV2EventsSecurityPipelinesOutput) ToOpenpipelineV2EventsSecurityPipelinesOutput() OpenpipelineV2EventsSecurityPipelinesOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityPipelinesOutput) ToOpenpipelineV2EventsSecurityPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityPipelinesOutput {
	return o
}

// Cost allocation stage
func (o OpenpipelineV2EventsSecurityPipelinesOutput) CostAllocation() OpenpipelineV2EventsSecurityPipelinesCostAllocationOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) OpenpipelineV2EventsSecurityPipelinesCostAllocationOutput {
		return v.CostAllocation
	}).(OpenpipelineV2EventsSecurityPipelinesCostAllocationOutput)
}

// Custom pipeline id
func (o OpenpipelineV2EventsSecurityPipelinesOutput) CustomId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) pulumi.StringOutput { return v.CustomId }).(pulumi.StringOutput)
}

// Data extraction stage
func (o OpenpipelineV2EventsSecurityPipelinesOutput) DataExtraction() OpenpipelineV2EventsSecurityPipelinesDataExtractionOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) OpenpipelineV2EventsSecurityPipelinesDataExtractionOutput {
		return v.DataExtraction
	}).(OpenpipelineV2EventsSecurityPipelinesDataExtractionOutput)
}

// Davis event extraction stage
func (o OpenpipelineV2EventsSecurityPipelinesOutput) Davis() OpenpipelineV2EventsSecurityPipelinesDavisOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) OpenpipelineV2EventsSecurityPipelinesDavisOutput {
		return v.Davis
	}).(OpenpipelineV2EventsSecurityPipelinesDavisOutput)
}

// Display name
func (o OpenpipelineV2EventsSecurityPipelinesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Metrics extraction stage
func (o OpenpipelineV2EventsSecurityPipelinesOutput) MetricExtraction() OpenpipelineV2EventsSecurityPipelinesMetricExtractionOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) OpenpipelineV2EventsSecurityPipelinesMetricExtractionOutput {
		return v.MetricExtraction
	}).(OpenpipelineV2EventsSecurityPipelinesMetricExtractionOutput)
}

// Processing stage
func (o OpenpipelineV2EventsSecurityPipelinesOutput) Processing() OpenpipelineV2EventsSecurityPipelinesProcessingOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) OpenpipelineV2EventsSecurityPipelinesProcessingOutput {
		return v.Processing
	}).(OpenpipelineV2EventsSecurityPipelinesProcessingOutput)
}

// Product allocation stage
func (o OpenpipelineV2EventsSecurityPipelinesOutput) ProductAllocation() OpenpipelineV2EventsSecurityPipelinesProductAllocationOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) OpenpipelineV2EventsSecurityPipelinesProductAllocationOutput {
		return v.ProductAllocation
	}).(OpenpipelineV2EventsSecurityPipelinesProductAllocationOutput)
}

// Security context stage
func (o OpenpipelineV2EventsSecurityPipelinesOutput) SecurityContext() OpenpipelineV2EventsSecurityPipelinesSecurityContextOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) OpenpipelineV2EventsSecurityPipelinesSecurityContextOutput {
		return v.SecurityContext
	}).(OpenpipelineV2EventsSecurityPipelinesSecurityContextOutput)
}

// Storage stage
func (o OpenpipelineV2EventsSecurityPipelinesOutput) Storage() OpenpipelineV2EventsSecurityPipelinesStorageOutput {
	return o.ApplyT(func(v *OpenpipelineV2EventsSecurityPipelines) OpenpipelineV2EventsSecurityPipelinesStorageOutput {
		return v.Storage
	}).(OpenpipelineV2EventsSecurityPipelinesStorageOutput)
}

type OpenpipelineV2EventsSecurityPipelinesArrayOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2EventsSecurityPipelinesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2EventsSecurityPipelines)(nil)).Elem()
}

func (o OpenpipelineV2EventsSecurityPipelinesArrayOutput) ToOpenpipelineV2EventsSecurityPipelinesArrayOutput() OpenpipelineV2EventsSecurityPipelinesArrayOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityPipelinesArrayOutput) ToOpenpipelineV2EventsSecurityPipelinesArrayOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityPipelinesArrayOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityPipelinesArrayOutput) Index(i pulumi.IntInput) OpenpipelineV2EventsSecurityPipelinesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenpipelineV2EventsSecurityPipelines {
		return vs[0].([]*OpenpipelineV2EventsSecurityPipelines)[vs[1].(int)]
	}).(OpenpipelineV2EventsSecurityPipelinesOutput)
}

type OpenpipelineV2EventsSecurityPipelinesMapOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2EventsSecurityPipelinesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2EventsSecurityPipelines)(nil)).Elem()
}

func (o OpenpipelineV2EventsSecurityPipelinesMapOutput) ToOpenpipelineV2EventsSecurityPipelinesMapOutput() OpenpipelineV2EventsSecurityPipelinesMapOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityPipelinesMapOutput) ToOpenpipelineV2EventsSecurityPipelinesMapOutputWithContext(ctx context.Context) OpenpipelineV2EventsSecurityPipelinesMapOutput {
	return o
}

func (o OpenpipelineV2EventsSecurityPipelinesMapOutput) MapIndex(k pulumi.StringInput) OpenpipelineV2EventsSecurityPipelinesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenpipelineV2EventsSecurityPipelines {
		return vs[0].(map[string]*OpenpipelineV2EventsSecurityPipelines)[vs[1].(string)]
	}).(OpenpipelineV2EventsSecurityPipelinesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2EventsSecurityPipelinesInput)(nil)).Elem(), &OpenpipelineV2EventsSecurityPipelines{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2EventsSecurityPipelinesArrayInput)(nil)).Elem(), OpenpipelineV2EventsSecurityPipelinesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2EventsSecurityPipelinesMapInput)(nil)).Elem(), OpenpipelineV2EventsSecurityPipelinesMap{})
	pulumi.RegisterOutputType(OpenpipelineV2EventsSecurityPipelinesOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2EventsSecurityPipelinesArrayOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2EventsSecurityPipelinesMapOutput{})
}
