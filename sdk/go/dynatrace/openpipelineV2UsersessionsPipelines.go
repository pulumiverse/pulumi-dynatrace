// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OpenpipelineV2UsersessionsPipelines struct {
	pulumi.CustomResourceState

	// Cost allocation stage
	CostAllocation OpenpipelineV2UsersessionsPipelinesCostAllocationOutput `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId pulumi.StringOutput `pulumi:"customId"`
	// Data extraction stage
	DataExtraction OpenpipelineV2UsersessionsPipelinesDataExtractionOutput `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis OpenpipelineV2UsersessionsPipelinesDavisOutput `pulumi:"davis"`
	// Display name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2UsersessionsPipelinesMetricExtractionOutput `pulumi:"metricExtraction"`
	// Processing stage
	Processing OpenpipelineV2UsersessionsPipelinesProcessingOutput `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation OpenpipelineV2UsersessionsPipelinesProductAllocationOutput `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext OpenpipelineV2UsersessionsPipelinesSecurityContextOutput `pulumi:"securityContext"`
	// Storage stage
	Storage OpenpipelineV2UsersessionsPipelinesStorageOutput `pulumi:"storage"`
}

// NewOpenpipelineV2UsersessionsPipelines registers a new resource with the given unique name, arguments, and options.
func NewOpenpipelineV2UsersessionsPipelines(ctx *pulumi.Context,
	name string, args *OpenpipelineV2UsersessionsPipelinesArgs, opts ...pulumi.ResourceOption) (*OpenpipelineV2UsersessionsPipelines, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CostAllocation == nil {
		return nil, errors.New("invalid value for required argument 'CostAllocation'")
	}
	if args.CustomId == nil {
		return nil, errors.New("invalid value for required argument 'CustomId'")
	}
	if args.DataExtraction == nil {
		return nil, errors.New("invalid value for required argument 'DataExtraction'")
	}
	if args.Davis == nil {
		return nil, errors.New("invalid value for required argument 'Davis'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.MetricExtraction == nil {
		return nil, errors.New("invalid value for required argument 'MetricExtraction'")
	}
	if args.Processing == nil {
		return nil, errors.New("invalid value for required argument 'Processing'")
	}
	if args.ProductAllocation == nil {
		return nil, errors.New("invalid value for required argument 'ProductAllocation'")
	}
	if args.SecurityContext == nil {
		return nil, errors.New("invalid value for required argument 'SecurityContext'")
	}
	if args.Storage == nil {
		return nil, errors.New("invalid value for required argument 'Storage'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenpipelineV2UsersessionsPipelines
	err := ctx.RegisterResource("dynatrace:index/openpipelineV2UsersessionsPipelines:OpenpipelineV2UsersessionsPipelines", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenpipelineV2UsersessionsPipelines gets an existing OpenpipelineV2UsersessionsPipelines resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenpipelineV2UsersessionsPipelines(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenpipelineV2UsersessionsPipelinesState, opts ...pulumi.ResourceOption) (*OpenpipelineV2UsersessionsPipelines, error) {
	var resource OpenpipelineV2UsersessionsPipelines
	err := ctx.ReadResource("dynatrace:index/openpipelineV2UsersessionsPipelines:OpenpipelineV2UsersessionsPipelines", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenpipelineV2UsersessionsPipelines resources.
type openpipelineV2UsersessionsPipelinesState struct {
	// Cost allocation stage
	CostAllocation *OpenpipelineV2UsersessionsPipelinesCostAllocation `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId *string `pulumi:"customId"`
	// Data extraction stage
	DataExtraction *OpenpipelineV2UsersessionsPipelinesDataExtraction `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis *OpenpipelineV2UsersessionsPipelinesDavis `pulumi:"davis"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction *OpenpipelineV2UsersessionsPipelinesMetricExtraction `pulumi:"metricExtraction"`
	// Processing stage
	Processing *OpenpipelineV2UsersessionsPipelinesProcessing `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation *OpenpipelineV2UsersessionsPipelinesProductAllocation `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext *OpenpipelineV2UsersessionsPipelinesSecurityContext `pulumi:"securityContext"`
	// Storage stage
	Storage *OpenpipelineV2UsersessionsPipelinesStorage `pulumi:"storage"`
}

type OpenpipelineV2UsersessionsPipelinesState struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2UsersessionsPipelinesCostAllocationPtrInput
	// Custom pipeline id
	CustomId pulumi.StringPtrInput
	// Data extraction stage
	DataExtraction OpenpipelineV2UsersessionsPipelinesDataExtractionPtrInput
	// Davis event extraction stage
	Davis OpenpipelineV2UsersessionsPipelinesDavisPtrInput
	// Display name
	DisplayName pulumi.StringPtrInput
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2UsersessionsPipelinesMetricExtractionPtrInput
	// Processing stage
	Processing OpenpipelineV2UsersessionsPipelinesProcessingPtrInput
	// Product allocation stage
	ProductAllocation OpenpipelineV2UsersessionsPipelinesProductAllocationPtrInput
	// Security context stage
	SecurityContext OpenpipelineV2UsersessionsPipelinesSecurityContextPtrInput
	// Storage stage
	Storage OpenpipelineV2UsersessionsPipelinesStoragePtrInput
}

func (OpenpipelineV2UsersessionsPipelinesState) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2UsersessionsPipelinesState)(nil)).Elem()
}

type openpipelineV2UsersessionsPipelinesArgs struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2UsersessionsPipelinesCostAllocation `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId string `pulumi:"customId"`
	// Data extraction stage
	DataExtraction OpenpipelineV2UsersessionsPipelinesDataExtraction `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis OpenpipelineV2UsersessionsPipelinesDavis `pulumi:"davis"`
	// Display name
	DisplayName string `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2UsersessionsPipelinesMetricExtraction `pulumi:"metricExtraction"`
	// Processing stage
	Processing OpenpipelineV2UsersessionsPipelinesProcessing `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation OpenpipelineV2UsersessionsPipelinesProductAllocation `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext OpenpipelineV2UsersessionsPipelinesSecurityContext `pulumi:"securityContext"`
	// Storage stage
	Storage OpenpipelineV2UsersessionsPipelinesStorage `pulumi:"storage"`
}

// The set of arguments for constructing a OpenpipelineV2UsersessionsPipelines resource.
type OpenpipelineV2UsersessionsPipelinesArgs struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2UsersessionsPipelinesCostAllocationInput
	// Custom pipeline id
	CustomId pulumi.StringInput
	// Data extraction stage
	DataExtraction OpenpipelineV2UsersessionsPipelinesDataExtractionInput
	// Davis event extraction stage
	Davis OpenpipelineV2UsersessionsPipelinesDavisInput
	// Display name
	DisplayName pulumi.StringInput
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2UsersessionsPipelinesMetricExtractionInput
	// Processing stage
	Processing OpenpipelineV2UsersessionsPipelinesProcessingInput
	// Product allocation stage
	ProductAllocation OpenpipelineV2UsersessionsPipelinesProductAllocationInput
	// Security context stage
	SecurityContext OpenpipelineV2UsersessionsPipelinesSecurityContextInput
	// Storage stage
	Storage OpenpipelineV2UsersessionsPipelinesStorageInput
}

func (OpenpipelineV2UsersessionsPipelinesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2UsersessionsPipelinesArgs)(nil)).Elem()
}

type OpenpipelineV2UsersessionsPipelinesInput interface {
	pulumi.Input

	ToOpenpipelineV2UsersessionsPipelinesOutput() OpenpipelineV2UsersessionsPipelinesOutput
	ToOpenpipelineV2UsersessionsPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsPipelinesOutput
}

func (*OpenpipelineV2UsersessionsPipelines) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2UsersessionsPipelines)(nil)).Elem()
}

func (i *OpenpipelineV2UsersessionsPipelines) ToOpenpipelineV2UsersessionsPipelinesOutput() OpenpipelineV2UsersessionsPipelinesOutput {
	return i.ToOpenpipelineV2UsersessionsPipelinesOutputWithContext(context.Background())
}

func (i *OpenpipelineV2UsersessionsPipelines) ToOpenpipelineV2UsersessionsPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsPipelinesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2UsersessionsPipelinesOutput)
}

// OpenpipelineV2UsersessionsPipelinesArrayInput is an input type that accepts OpenpipelineV2UsersessionsPipelinesArray and OpenpipelineV2UsersessionsPipelinesArrayOutput values.
// You can construct a concrete instance of `OpenpipelineV2UsersessionsPipelinesArrayInput` via:
//
//	OpenpipelineV2UsersessionsPipelinesArray{ OpenpipelineV2UsersessionsPipelinesArgs{...} }
type OpenpipelineV2UsersessionsPipelinesArrayInput interface {
	pulumi.Input

	ToOpenpipelineV2UsersessionsPipelinesArrayOutput() OpenpipelineV2UsersessionsPipelinesArrayOutput
	ToOpenpipelineV2UsersessionsPipelinesArrayOutputWithContext(context.Context) OpenpipelineV2UsersessionsPipelinesArrayOutput
}

type OpenpipelineV2UsersessionsPipelinesArray []OpenpipelineV2UsersessionsPipelinesInput

func (OpenpipelineV2UsersessionsPipelinesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2UsersessionsPipelines)(nil)).Elem()
}

func (i OpenpipelineV2UsersessionsPipelinesArray) ToOpenpipelineV2UsersessionsPipelinesArrayOutput() OpenpipelineV2UsersessionsPipelinesArrayOutput {
	return i.ToOpenpipelineV2UsersessionsPipelinesArrayOutputWithContext(context.Background())
}

func (i OpenpipelineV2UsersessionsPipelinesArray) ToOpenpipelineV2UsersessionsPipelinesArrayOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsPipelinesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2UsersessionsPipelinesArrayOutput)
}

// OpenpipelineV2UsersessionsPipelinesMapInput is an input type that accepts OpenpipelineV2UsersessionsPipelinesMap and OpenpipelineV2UsersessionsPipelinesMapOutput values.
// You can construct a concrete instance of `OpenpipelineV2UsersessionsPipelinesMapInput` via:
//
//	OpenpipelineV2UsersessionsPipelinesMap{ "key": OpenpipelineV2UsersessionsPipelinesArgs{...} }
type OpenpipelineV2UsersessionsPipelinesMapInput interface {
	pulumi.Input

	ToOpenpipelineV2UsersessionsPipelinesMapOutput() OpenpipelineV2UsersessionsPipelinesMapOutput
	ToOpenpipelineV2UsersessionsPipelinesMapOutputWithContext(context.Context) OpenpipelineV2UsersessionsPipelinesMapOutput
}

type OpenpipelineV2UsersessionsPipelinesMap map[string]OpenpipelineV2UsersessionsPipelinesInput

func (OpenpipelineV2UsersessionsPipelinesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2UsersessionsPipelines)(nil)).Elem()
}

func (i OpenpipelineV2UsersessionsPipelinesMap) ToOpenpipelineV2UsersessionsPipelinesMapOutput() OpenpipelineV2UsersessionsPipelinesMapOutput {
	return i.ToOpenpipelineV2UsersessionsPipelinesMapOutputWithContext(context.Background())
}

func (i OpenpipelineV2UsersessionsPipelinesMap) ToOpenpipelineV2UsersessionsPipelinesMapOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsPipelinesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2UsersessionsPipelinesMapOutput)
}

type OpenpipelineV2UsersessionsPipelinesOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2UsersessionsPipelinesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2UsersessionsPipelines)(nil)).Elem()
}

func (o OpenpipelineV2UsersessionsPipelinesOutput) ToOpenpipelineV2UsersessionsPipelinesOutput() OpenpipelineV2UsersessionsPipelinesOutput {
	return o
}

func (o OpenpipelineV2UsersessionsPipelinesOutput) ToOpenpipelineV2UsersessionsPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsPipelinesOutput {
	return o
}

// Cost allocation stage
func (o OpenpipelineV2UsersessionsPipelinesOutput) CostAllocation() OpenpipelineV2UsersessionsPipelinesCostAllocationOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) OpenpipelineV2UsersessionsPipelinesCostAllocationOutput {
		return v.CostAllocation
	}).(OpenpipelineV2UsersessionsPipelinesCostAllocationOutput)
}

// Custom pipeline id
func (o OpenpipelineV2UsersessionsPipelinesOutput) CustomId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) pulumi.StringOutput { return v.CustomId }).(pulumi.StringOutput)
}

// Data extraction stage
func (o OpenpipelineV2UsersessionsPipelinesOutput) DataExtraction() OpenpipelineV2UsersessionsPipelinesDataExtractionOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) OpenpipelineV2UsersessionsPipelinesDataExtractionOutput {
		return v.DataExtraction
	}).(OpenpipelineV2UsersessionsPipelinesDataExtractionOutput)
}

// Davis event extraction stage
func (o OpenpipelineV2UsersessionsPipelinesOutput) Davis() OpenpipelineV2UsersessionsPipelinesDavisOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) OpenpipelineV2UsersessionsPipelinesDavisOutput {
		return v.Davis
	}).(OpenpipelineV2UsersessionsPipelinesDavisOutput)
}

// Display name
func (o OpenpipelineV2UsersessionsPipelinesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Metrics extraction stage
func (o OpenpipelineV2UsersessionsPipelinesOutput) MetricExtraction() OpenpipelineV2UsersessionsPipelinesMetricExtractionOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) OpenpipelineV2UsersessionsPipelinesMetricExtractionOutput {
		return v.MetricExtraction
	}).(OpenpipelineV2UsersessionsPipelinesMetricExtractionOutput)
}

// Processing stage
func (o OpenpipelineV2UsersessionsPipelinesOutput) Processing() OpenpipelineV2UsersessionsPipelinesProcessingOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) OpenpipelineV2UsersessionsPipelinesProcessingOutput {
		return v.Processing
	}).(OpenpipelineV2UsersessionsPipelinesProcessingOutput)
}

// Product allocation stage
func (o OpenpipelineV2UsersessionsPipelinesOutput) ProductAllocation() OpenpipelineV2UsersessionsPipelinesProductAllocationOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) OpenpipelineV2UsersessionsPipelinesProductAllocationOutput {
		return v.ProductAllocation
	}).(OpenpipelineV2UsersessionsPipelinesProductAllocationOutput)
}

// Security context stage
func (o OpenpipelineV2UsersessionsPipelinesOutput) SecurityContext() OpenpipelineV2UsersessionsPipelinesSecurityContextOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) OpenpipelineV2UsersessionsPipelinesSecurityContextOutput {
		return v.SecurityContext
	}).(OpenpipelineV2UsersessionsPipelinesSecurityContextOutput)
}

// Storage stage
func (o OpenpipelineV2UsersessionsPipelinesOutput) Storage() OpenpipelineV2UsersessionsPipelinesStorageOutput {
	return o.ApplyT(func(v *OpenpipelineV2UsersessionsPipelines) OpenpipelineV2UsersessionsPipelinesStorageOutput {
		return v.Storage
	}).(OpenpipelineV2UsersessionsPipelinesStorageOutput)
}

type OpenpipelineV2UsersessionsPipelinesArrayOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2UsersessionsPipelinesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2UsersessionsPipelines)(nil)).Elem()
}

func (o OpenpipelineV2UsersessionsPipelinesArrayOutput) ToOpenpipelineV2UsersessionsPipelinesArrayOutput() OpenpipelineV2UsersessionsPipelinesArrayOutput {
	return o
}

func (o OpenpipelineV2UsersessionsPipelinesArrayOutput) ToOpenpipelineV2UsersessionsPipelinesArrayOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsPipelinesArrayOutput {
	return o
}

func (o OpenpipelineV2UsersessionsPipelinesArrayOutput) Index(i pulumi.IntInput) OpenpipelineV2UsersessionsPipelinesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenpipelineV2UsersessionsPipelines {
		return vs[0].([]*OpenpipelineV2UsersessionsPipelines)[vs[1].(int)]
	}).(OpenpipelineV2UsersessionsPipelinesOutput)
}

type OpenpipelineV2UsersessionsPipelinesMapOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2UsersessionsPipelinesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2UsersessionsPipelines)(nil)).Elem()
}

func (o OpenpipelineV2UsersessionsPipelinesMapOutput) ToOpenpipelineV2UsersessionsPipelinesMapOutput() OpenpipelineV2UsersessionsPipelinesMapOutput {
	return o
}

func (o OpenpipelineV2UsersessionsPipelinesMapOutput) ToOpenpipelineV2UsersessionsPipelinesMapOutputWithContext(ctx context.Context) OpenpipelineV2UsersessionsPipelinesMapOutput {
	return o
}

func (o OpenpipelineV2UsersessionsPipelinesMapOutput) MapIndex(k pulumi.StringInput) OpenpipelineV2UsersessionsPipelinesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenpipelineV2UsersessionsPipelines {
		return vs[0].(map[string]*OpenpipelineV2UsersessionsPipelines)[vs[1].(string)]
	}).(OpenpipelineV2UsersessionsPipelinesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2UsersessionsPipelinesInput)(nil)).Elem(), &OpenpipelineV2UsersessionsPipelines{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2UsersessionsPipelinesArrayInput)(nil)).Elem(), OpenpipelineV2UsersessionsPipelinesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2UsersessionsPipelinesMapInput)(nil)).Elem(), OpenpipelineV2UsersessionsPipelinesMap{})
	pulumi.RegisterOutputType(OpenpipelineV2UsersessionsPipelinesOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2UsersessionsPipelinesArrayOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2UsersessionsPipelinesMapOutput{})
}
