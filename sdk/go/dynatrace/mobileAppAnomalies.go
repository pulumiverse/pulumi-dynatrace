// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type MobileAppAnomalies struct {
	pulumi.CustomResourceState

	// Error rate increase
	ErrorRateIncrease MobileAppAnomaliesErrorRateIncreaseOutput `pulumi:"errorRateIncrease"`
	// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// Slow user actions
	SlowUserActions MobileAppAnomaliesSlowUserActionsOutput `pulumi:"slowUserActions"`
	// Unexpected high load
	UnexpectedHighLoad MobileAppAnomaliesUnexpectedHighLoadOutput `pulumi:"unexpectedHighLoad"`
	// Unexpected low load
	UnexpectedLowLoad MobileAppAnomaliesUnexpectedLowLoadOutput `pulumi:"unexpectedLowLoad"`
}

// NewMobileAppAnomalies registers a new resource with the given unique name, arguments, and options.
func NewMobileAppAnomalies(ctx *pulumi.Context,
	name string, args *MobileAppAnomaliesArgs, opts ...pulumi.ResourceOption) (*MobileAppAnomalies, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ErrorRateIncrease == nil {
		return nil, errors.New("invalid value for required argument 'ErrorRateIncrease'")
	}
	if args.SlowUserActions == nil {
		return nil, errors.New("invalid value for required argument 'SlowUserActions'")
	}
	if args.UnexpectedHighLoad == nil {
		return nil, errors.New("invalid value for required argument 'UnexpectedHighLoad'")
	}
	if args.UnexpectedLowLoad == nil {
		return nil, errors.New("invalid value for required argument 'UnexpectedLowLoad'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MobileAppAnomalies
	err := ctx.RegisterResource("dynatrace:index/mobileAppAnomalies:MobileAppAnomalies", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMobileAppAnomalies gets an existing MobileAppAnomalies resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMobileAppAnomalies(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MobileAppAnomaliesState, opts ...pulumi.ResourceOption) (*MobileAppAnomalies, error) {
	var resource MobileAppAnomalies
	err := ctx.ReadResource("dynatrace:index/mobileAppAnomalies:MobileAppAnomalies", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MobileAppAnomalies resources.
type mobileAppAnomaliesState struct {
	// Error rate increase
	ErrorRateIncrease *MobileAppAnomaliesErrorRateIncrease `pulumi:"errorRateIncrease"`
	// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
	// Slow user actions
	SlowUserActions *MobileAppAnomaliesSlowUserActions `pulumi:"slowUserActions"`
	// Unexpected high load
	UnexpectedHighLoad *MobileAppAnomaliesUnexpectedHighLoad `pulumi:"unexpectedHighLoad"`
	// Unexpected low load
	UnexpectedLowLoad *MobileAppAnomaliesUnexpectedLowLoad `pulumi:"unexpectedLowLoad"`
}

type MobileAppAnomaliesState struct {
	// Error rate increase
	ErrorRateIncrease MobileAppAnomaliesErrorRateIncreasePtrInput
	// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
	// Slow user actions
	SlowUserActions MobileAppAnomaliesSlowUserActionsPtrInput
	// Unexpected high load
	UnexpectedHighLoad MobileAppAnomaliesUnexpectedHighLoadPtrInput
	// Unexpected low load
	UnexpectedLowLoad MobileAppAnomaliesUnexpectedLowLoadPtrInput
}

func (MobileAppAnomaliesState) ElementType() reflect.Type {
	return reflect.TypeOf((*mobileAppAnomaliesState)(nil)).Elem()
}

type mobileAppAnomaliesArgs struct {
	// Error rate increase
	ErrorRateIncrease MobileAppAnomaliesErrorRateIncrease `pulumi:"errorRateIncrease"`
	// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
	// Slow user actions
	SlowUserActions MobileAppAnomaliesSlowUserActions `pulumi:"slowUserActions"`
	// Unexpected high load
	UnexpectedHighLoad MobileAppAnomaliesUnexpectedHighLoad `pulumi:"unexpectedHighLoad"`
	// Unexpected low load
	UnexpectedLowLoad MobileAppAnomaliesUnexpectedLowLoad `pulumi:"unexpectedLowLoad"`
}

// The set of arguments for constructing a MobileAppAnomalies resource.
type MobileAppAnomaliesArgs struct {
	// Error rate increase
	ErrorRateIncrease MobileAppAnomaliesErrorRateIncreaseInput
	// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
	// Slow user actions
	SlowUserActions MobileAppAnomaliesSlowUserActionsInput
	// Unexpected high load
	UnexpectedHighLoad MobileAppAnomaliesUnexpectedHighLoadInput
	// Unexpected low load
	UnexpectedLowLoad MobileAppAnomaliesUnexpectedLowLoadInput
}

func (MobileAppAnomaliesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mobileAppAnomaliesArgs)(nil)).Elem()
}

type MobileAppAnomaliesInput interface {
	pulumi.Input

	ToMobileAppAnomaliesOutput() MobileAppAnomaliesOutput
	ToMobileAppAnomaliesOutputWithContext(ctx context.Context) MobileAppAnomaliesOutput
}

func (*MobileAppAnomalies) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileAppAnomalies)(nil)).Elem()
}

func (i *MobileAppAnomalies) ToMobileAppAnomaliesOutput() MobileAppAnomaliesOutput {
	return i.ToMobileAppAnomaliesOutputWithContext(context.Background())
}

func (i *MobileAppAnomalies) ToMobileAppAnomaliesOutputWithContext(ctx context.Context) MobileAppAnomaliesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileAppAnomaliesOutput)
}

// MobileAppAnomaliesArrayInput is an input type that accepts MobileAppAnomaliesArray and MobileAppAnomaliesArrayOutput values.
// You can construct a concrete instance of `MobileAppAnomaliesArrayInput` via:
//
//	MobileAppAnomaliesArray{ MobileAppAnomaliesArgs{...} }
type MobileAppAnomaliesArrayInput interface {
	pulumi.Input

	ToMobileAppAnomaliesArrayOutput() MobileAppAnomaliesArrayOutput
	ToMobileAppAnomaliesArrayOutputWithContext(context.Context) MobileAppAnomaliesArrayOutput
}

type MobileAppAnomaliesArray []MobileAppAnomaliesInput

func (MobileAppAnomaliesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MobileAppAnomalies)(nil)).Elem()
}

func (i MobileAppAnomaliesArray) ToMobileAppAnomaliesArrayOutput() MobileAppAnomaliesArrayOutput {
	return i.ToMobileAppAnomaliesArrayOutputWithContext(context.Background())
}

func (i MobileAppAnomaliesArray) ToMobileAppAnomaliesArrayOutputWithContext(ctx context.Context) MobileAppAnomaliesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileAppAnomaliesArrayOutput)
}

// MobileAppAnomaliesMapInput is an input type that accepts MobileAppAnomaliesMap and MobileAppAnomaliesMapOutput values.
// You can construct a concrete instance of `MobileAppAnomaliesMapInput` via:
//
//	MobileAppAnomaliesMap{ "key": MobileAppAnomaliesArgs{...} }
type MobileAppAnomaliesMapInput interface {
	pulumi.Input

	ToMobileAppAnomaliesMapOutput() MobileAppAnomaliesMapOutput
	ToMobileAppAnomaliesMapOutputWithContext(context.Context) MobileAppAnomaliesMapOutput
}

type MobileAppAnomaliesMap map[string]MobileAppAnomaliesInput

func (MobileAppAnomaliesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MobileAppAnomalies)(nil)).Elem()
}

func (i MobileAppAnomaliesMap) ToMobileAppAnomaliesMapOutput() MobileAppAnomaliesMapOutput {
	return i.ToMobileAppAnomaliesMapOutputWithContext(context.Background())
}

func (i MobileAppAnomaliesMap) ToMobileAppAnomaliesMapOutputWithContext(ctx context.Context) MobileAppAnomaliesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileAppAnomaliesMapOutput)
}

type MobileAppAnomaliesOutput struct{ *pulumi.OutputState }

func (MobileAppAnomaliesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileAppAnomalies)(nil)).Elem()
}

func (o MobileAppAnomaliesOutput) ToMobileAppAnomaliesOutput() MobileAppAnomaliesOutput {
	return o
}

func (o MobileAppAnomaliesOutput) ToMobileAppAnomaliesOutputWithContext(ctx context.Context) MobileAppAnomaliesOutput {
	return o
}

// Error rate increase
func (o MobileAppAnomaliesOutput) ErrorRateIncrease() MobileAppAnomaliesErrorRateIncreaseOutput {
	return o.ApplyT(func(v *MobileAppAnomalies) MobileAppAnomaliesErrorRateIncreaseOutput { return v.ErrorRateIncrease }).(MobileAppAnomaliesErrorRateIncreaseOutput)
}

// The scope of this setting (DEVICE*APPLICATION*METHOD, MOBILE_APPLICATION). Omit this property if you want to cover the whole environment.
func (o MobileAppAnomaliesOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MobileAppAnomalies) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

// Slow user actions
func (o MobileAppAnomaliesOutput) SlowUserActions() MobileAppAnomaliesSlowUserActionsOutput {
	return o.ApplyT(func(v *MobileAppAnomalies) MobileAppAnomaliesSlowUserActionsOutput { return v.SlowUserActions }).(MobileAppAnomaliesSlowUserActionsOutput)
}

// Unexpected high load
func (o MobileAppAnomaliesOutput) UnexpectedHighLoad() MobileAppAnomaliesUnexpectedHighLoadOutput {
	return o.ApplyT(func(v *MobileAppAnomalies) MobileAppAnomaliesUnexpectedHighLoadOutput { return v.UnexpectedHighLoad }).(MobileAppAnomaliesUnexpectedHighLoadOutput)
}

// Unexpected low load
func (o MobileAppAnomaliesOutput) UnexpectedLowLoad() MobileAppAnomaliesUnexpectedLowLoadOutput {
	return o.ApplyT(func(v *MobileAppAnomalies) MobileAppAnomaliesUnexpectedLowLoadOutput { return v.UnexpectedLowLoad }).(MobileAppAnomaliesUnexpectedLowLoadOutput)
}

type MobileAppAnomaliesArrayOutput struct{ *pulumi.OutputState }

func (MobileAppAnomaliesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MobileAppAnomalies)(nil)).Elem()
}

func (o MobileAppAnomaliesArrayOutput) ToMobileAppAnomaliesArrayOutput() MobileAppAnomaliesArrayOutput {
	return o
}

func (o MobileAppAnomaliesArrayOutput) ToMobileAppAnomaliesArrayOutputWithContext(ctx context.Context) MobileAppAnomaliesArrayOutput {
	return o
}

func (o MobileAppAnomaliesArrayOutput) Index(i pulumi.IntInput) MobileAppAnomaliesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MobileAppAnomalies {
		return vs[0].([]*MobileAppAnomalies)[vs[1].(int)]
	}).(MobileAppAnomaliesOutput)
}

type MobileAppAnomaliesMapOutput struct{ *pulumi.OutputState }

func (MobileAppAnomaliesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MobileAppAnomalies)(nil)).Elem()
}

func (o MobileAppAnomaliesMapOutput) ToMobileAppAnomaliesMapOutput() MobileAppAnomaliesMapOutput {
	return o
}

func (o MobileAppAnomaliesMapOutput) ToMobileAppAnomaliesMapOutputWithContext(ctx context.Context) MobileAppAnomaliesMapOutput {
	return o
}

func (o MobileAppAnomaliesMapOutput) MapIndex(k pulumi.StringInput) MobileAppAnomaliesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MobileAppAnomalies {
		return vs[0].(map[string]*MobileAppAnomalies)[vs[1].(string)]
	}).(MobileAppAnomaliesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MobileAppAnomaliesInput)(nil)).Elem(), &MobileAppAnomalies{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileAppAnomaliesArrayInput)(nil)).Elem(), MobileAppAnomaliesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MobileAppAnomaliesMapInput)(nil)).Elem(), MobileAppAnomaliesMap{})
	pulumi.RegisterOutputType(MobileAppAnomaliesOutput{})
	pulumi.RegisterOutputType(MobileAppAnomaliesArrayOutput{})
	pulumi.RegisterOutputType(MobileAppAnomaliesMapOutput{})
}
