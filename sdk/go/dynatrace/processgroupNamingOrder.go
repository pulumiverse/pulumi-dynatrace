// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type ProcessgroupNamingOrder struct {
	pulumi.CustomResourceState

	// The IDs of the naming rules to define the order for
	NamingRuleIds pulumi.StringArrayOutput `pulumi:"namingRuleIds"`
}

// NewProcessgroupNamingOrder registers a new resource with the given unique name, arguments, and options.
func NewProcessgroupNamingOrder(ctx *pulumi.Context,
	name string, args *ProcessgroupNamingOrderArgs, opts ...pulumi.ResourceOption) (*ProcessgroupNamingOrder, error) {
	if args == nil {
		args = &ProcessgroupNamingOrderArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProcessgroupNamingOrder
	err := ctx.RegisterResource("dynatrace:index/processgroupNamingOrder:ProcessgroupNamingOrder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProcessgroupNamingOrder gets an existing ProcessgroupNamingOrder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProcessgroupNamingOrder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProcessgroupNamingOrderState, opts ...pulumi.ResourceOption) (*ProcessgroupNamingOrder, error) {
	var resource ProcessgroupNamingOrder
	err := ctx.ReadResource("dynatrace:index/processgroupNamingOrder:ProcessgroupNamingOrder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProcessgroupNamingOrder resources.
type processgroupNamingOrderState struct {
	// The IDs of the naming rules to define the order for
	NamingRuleIds []string `pulumi:"namingRuleIds"`
}

type ProcessgroupNamingOrderState struct {
	// The IDs of the naming rules to define the order for
	NamingRuleIds pulumi.StringArrayInput
}

func (ProcessgroupNamingOrderState) ElementType() reflect.Type {
	return reflect.TypeOf((*processgroupNamingOrderState)(nil)).Elem()
}

type processgroupNamingOrderArgs struct {
	// The IDs of the naming rules to define the order for
	NamingRuleIds []string `pulumi:"namingRuleIds"`
}

// The set of arguments for constructing a ProcessgroupNamingOrder resource.
type ProcessgroupNamingOrderArgs struct {
	// The IDs of the naming rules to define the order for
	NamingRuleIds pulumi.StringArrayInput
}

func (ProcessgroupNamingOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*processgroupNamingOrderArgs)(nil)).Elem()
}

type ProcessgroupNamingOrderInput interface {
	pulumi.Input

	ToProcessgroupNamingOrderOutput() ProcessgroupNamingOrderOutput
	ToProcessgroupNamingOrderOutputWithContext(ctx context.Context) ProcessgroupNamingOrderOutput
}

func (*ProcessgroupNamingOrder) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingOrder)(nil)).Elem()
}

func (i *ProcessgroupNamingOrder) ToProcessgroupNamingOrderOutput() ProcessgroupNamingOrderOutput {
	return i.ToProcessgroupNamingOrderOutputWithContext(context.Background())
}

func (i *ProcessgroupNamingOrder) ToProcessgroupNamingOrderOutputWithContext(ctx context.Context) ProcessgroupNamingOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingOrderOutput)
}

// ProcessgroupNamingOrderArrayInput is an input type that accepts ProcessgroupNamingOrderArray and ProcessgroupNamingOrderArrayOutput values.
// You can construct a concrete instance of `ProcessgroupNamingOrderArrayInput` via:
//
//	ProcessgroupNamingOrderArray{ ProcessgroupNamingOrderArgs{...} }
type ProcessgroupNamingOrderArrayInput interface {
	pulumi.Input

	ToProcessgroupNamingOrderArrayOutput() ProcessgroupNamingOrderArrayOutput
	ToProcessgroupNamingOrderArrayOutputWithContext(context.Context) ProcessgroupNamingOrderArrayOutput
}

type ProcessgroupNamingOrderArray []ProcessgroupNamingOrderInput

func (ProcessgroupNamingOrderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProcessgroupNamingOrder)(nil)).Elem()
}

func (i ProcessgroupNamingOrderArray) ToProcessgroupNamingOrderArrayOutput() ProcessgroupNamingOrderArrayOutput {
	return i.ToProcessgroupNamingOrderArrayOutputWithContext(context.Background())
}

func (i ProcessgroupNamingOrderArray) ToProcessgroupNamingOrderArrayOutputWithContext(ctx context.Context) ProcessgroupNamingOrderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingOrderArrayOutput)
}

// ProcessgroupNamingOrderMapInput is an input type that accepts ProcessgroupNamingOrderMap and ProcessgroupNamingOrderMapOutput values.
// You can construct a concrete instance of `ProcessgroupNamingOrderMapInput` via:
//
//	ProcessgroupNamingOrderMap{ "key": ProcessgroupNamingOrderArgs{...} }
type ProcessgroupNamingOrderMapInput interface {
	pulumi.Input

	ToProcessgroupNamingOrderMapOutput() ProcessgroupNamingOrderMapOutput
	ToProcessgroupNamingOrderMapOutputWithContext(context.Context) ProcessgroupNamingOrderMapOutput
}

type ProcessgroupNamingOrderMap map[string]ProcessgroupNamingOrderInput

func (ProcessgroupNamingOrderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProcessgroupNamingOrder)(nil)).Elem()
}

func (i ProcessgroupNamingOrderMap) ToProcessgroupNamingOrderMapOutput() ProcessgroupNamingOrderMapOutput {
	return i.ToProcessgroupNamingOrderMapOutputWithContext(context.Background())
}

func (i ProcessgroupNamingOrderMap) ToProcessgroupNamingOrderMapOutputWithContext(ctx context.Context) ProcessgroupNamingOrderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProcessgroupNamingOrderMapOutput)
}

type ProcessgroupNamingOrderOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProcessgroupNamingOrder)(nil)).Elem()
}

func (o ProcessgroupNamingOrderOutput) ToProcessgroupNamingOrderOutput() ProcessgroupNamingOrderOutput {
	return o
}

func (o ProcessgroupNamingOrderOutput) ToProcessgroupNamingOrderOutputWithContext(ctx context.Context) ProcessgroupNamingOrderOutput {
	return o
}

// The IDs of the naming rules to define the order for
func (o ProcessgroupNamingOrderOutput) NamingRuleIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProcessgroupNamingOrder) pulumi.StringArrayOutput { return v.NamingRuleIds }).(pulumi.StringArrayOutput)
}

type ProcessgroupNamingOrderArrayOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingOrderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProcessgroupNamingOrder)(nil)).Elem()
}

func (o ProcessgroupNamingOrderArrayOutput) ToProcessgroupNamingOrderArrayOutput() ProcessgroupNamingOrderArrayOutput {
	return o
}

func (o ProcessgroupNamingOrderArrayOutput) ToProcessgroupNamingOrderArrayOutputWithContext(ctx context.Context) ProcessgroupNamingOrderArrayOutput {
	return o
}

func (o ProcessgroupNamingOrderArrayOutput) Index(i pulumi.IntInput) ProcessgroupNamingOrderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProcessgroupNamingOrder {
		return vs[0].([]*ProcessgroupNamingOrder)[vs[1].(int)]
	}).(ProcessgroupNamingOrderOutput)
}

type ProcessgroupNamingOrderMapOutput struct{ *pulumi.OutputState }

func (ProcessgroupNamingOrderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProcessgroupNamingOrder)(nil)).Elem()
}

func (o ProcessgroupNamingOrderMapOutput) ToProcessgroupNamingOrderMapOutput() ProcessgroupNamingOrderMapOutput {
	return o
}

func (o ProcessgroupNamingOrderMapOutput) ToProcessgroupNamingOrderMapOutputWithContext(ctx context.Context) ProcessgroupNamingOrderMapOutput {
	return o
}

func (o ProcessgroupNamingOrderMapOutput) MapIndex(k pulumi.StringInput) ProcessgroupNamingOrderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProcessgroupNamingOrder {
		return vs[0].(map[string]*ProcessgroupNamingOrder)[vs[1].(string)]
	}).(ProcessgroupNamingOrderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingOrderInput)(nil)).Elem(), &ProcessgroupNamingOrder{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingOrderArrayInput)(nil)).Elem(), ProcessgroupNamingOrderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProcessgroupNamingOrderMapInput)(nil)).Elem(), ProcessgroupNamingOrderMap{})
	pulumi.RegisterOutputType(ProcessgroupNamingOrderOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingOrderArrayOutput{})
	pulumi.RegisterOutputType(ProcessgroupNamingOrderMapOutput{})
}
