// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type WebAppKeyPerformanceCustom struct {
	pulumi.CustomResourceState

	// The scope of this setting (APPLICATION_METHOD, APPLICATION)
	Scope pulumi.StringOutput `pulumi:"scope"`
	// User action duration thresholds
	Thresholds WebAppKeyPerformanceCustomThresholdsOutput `pulumi:"thresholds"`
}

// NewWebAppKeyPerformanceCustom registers a new resource with the given unique name, arguments, and options.
func NewWebAppKeyPerformanceCustom(ctx *pulumi.Context,
	name string, args *WebAppKeyPerformanceCustomArgs, opts ...pulumi.ResourceOption) (*WebAppKeyPerformanceCustom, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Scope == nil {
		return nil, errors.New("invalid value for required argument 'Scope'")
	}
	if args.Thresholds == nil {
		return nil, errors.New("invalid value for required argument 'Thresholds'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAppKeyPerformanceCustom
	err := ctx.RegisterResource("dynatrace:index/webAppKeyPerformanceCustom:WebAppKeyPerformanceCustom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppKeyPerformanceCustom gets an existing WebAppKeyPerformanceCustom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppKeyPerformanceCustom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppKeyPerformanceCustomState, opts ...pulumi.ResourceOption) (*WebAppKeyPerformanceCustom, error) {
	var resource WebAppKeyPerformanceCustom
	err := ctx.ReadResource("dynatrace:index/webAppKeyPerformanceCustom:WebAppKeyPerformanceCustom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppKeyPerformanceCustom resources.
type webAppKeyPerformanceCustomState struct {
	// The scope of this setting (APPLICATION_METHOD, APPLICATION)
	Scope *string `pulumi:"scope"`
	// User action duration thresholds
	Thresholds *WebAppKeyPerformanceCustomThresholds `pulumi:"thresholds"`
}

type WebAppKeyPerformanceCustomState struct {
	// The scope of this setting (APPLICATION_METHOD, APPLICATION)
	Scope pulumi.StringPtrInput
	// User action duration thresholds
	Thresholds WebAppKeyPerformanceCustomThresholdsPtrInput
}

func (WebAppKeyPerformanceCustomState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppKeyPerformanceCustomState)(nil)).Elem()
}

type webAppKeyPerformanceCustomArgs struct {
	// The scope of this setting (APPLICATION_METHOD, APPLICATION)
	Scope string `pulumi:"scope"`
	// User action duration thresholds
	Thresholds WebAppKeyPerformanceCustomThresholds `pulumi:"thresholds"`
}

// The set of arguments for constructing a WebAppKeyPerformanceCustom resource.
type WebAppKeyPerformanceCustomArgs struct {
	// The scope of this setting (APPLICATION_METHOD, APPLICATION)
	Scope pulumi.StringInput
	// User action duration thresholds
	Thresholds WebAppKeyPerformanceCustomThresholdsInput
}

func (WebAppKeyPerformanceCustomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppKeyPerformanceCustomArgs)(nil)).Elem()
}

type WebAppKeyPerformanceCustomInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceCustomOutput() WebAppKeyPerformanceCustomOutput
	ToWebAppKeyPerformanceCustomOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomOutput
}

func (*WebAppKeyPerformanceCustom) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceCustom)(nil)).Elem()
}

func (i *WebAppKeyPerformanceCustom) ToWebAppKeyPerformanceCustomOutput() WebAppKeyPerformanceCustomOutput {
	return i.ToWebAppKeyPerformanceCustomOutputWithContext(context.Background())
}

func (i *WebAppKeyPerformanceCustom) ToWebAppKeyPerformanceCustomOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceCustomOutput)
}

// WebAppKeyPerformanceCustomArrayInput is an input type that accepts WebAppKeyPerformanceCustomArray and WebAppKeyPerformanceCustomArrayOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceCustomArrayInput` via:
//
//	WebAppKeyPerformanceCustomArray{ WebAppKeyPerformanceCustomArgs{...} }
type WebAppKeyPerformanceCustomArrayInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceCustomArrayOutput() WebAppKeyPerformanceCustomArrayOutput
	ToWebAppKeyPerformanceCustomArrayOutputWithContext(context.Context) WebAppKeyPerformanceCustomArrayOutput
}

type WebAppKeyPerformanceCustomArray []WebAppKeyPerformanceCustomInput

func (WebAppKeyPerformanceCustomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppKeyPerformanceCustom)(nil)).Elem()
}

func (i WebAppKeyPerformanceCustomArray) ToWebAppKeyPerformanceCustomArrayOutput() WebAppKeyPerformanceCustomArrayOutput {
	return i.ToWebAppKeyPerformanceCustomArrayOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceCustomArray) ToWebAppKeyPerformanceCustomArrayOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceCustomArrayOutput)
}

// WebAppKeyPerformanceCustomMapInput is an input type that accepts WebAppKeyPerformanceCustomMap and WebAppKeyPerformanceCustomMapOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceCustomMapInput` via:
//
//	WebAppKeyPerformanceCustomMap{ "key": WebAppKeyPerformanceCustomArgs{...} }
type WebAppKeyPerformanceCustomMapInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceCustomMapOutput() WebAppKeyPerformanceCustomMapOutput
	ToWebAppKeyPerformanceCustomMapOutputWithContext(context.Context) WebAppKeyPerformanceCustomMapOutput
}

type WebAppKeyPerformanceCustomMap map[string]WebAppKeyPerformanceCustomInput

func (WebAppKeyPerformanceCustomMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppKeyPerformanceCustom)(nil)).Elem()
}

func (i WebAppKeyPerformanceCustomMap) ToWebAppKeyPerformanceCustomMapOutput() WebAppKeyPerformanceCustomMapOutput {
	return i.ToWebAppKeyPerformanceCustomMapOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceCustomMap) ToWebAppKeyPerformanceCustomMapOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceCustomMapOutput)
}

type WebAppKeyPerformanceCustomOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceCustomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceCustom)(nil)).Elem()
}

func (o WebAppKeyPerformanceCustomOutput) ToWebAppKeyPerformanceCustomOutput() WebAppKeyPerformanceCustomOutput {
	return o
}

func (o WebAppKeyPerformanceCustomOutput) ToWebAppKeyPerformanceCustomOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomOutput {
	return o
}

// The scope of this setting (APPLICATION_METHOD, APPLICATION)
func (o WebAppKeyPerformanceCustomOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceCustom) pulumi.StringOutput { return v.Scope }).(pulumi.StringOutput)
}

// User action duration thresholds
func (o WebAppKeyPerformanceCustomOutput) Thresholds() WebAppKeyPerformanceCustomThresholdsOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceCustom) WebAppKeyPerformanceCustomThresholdsOutput { return v.Thresholds }).(WebAppKeyPerformanceCustomThresholdsOutput)
}

type WebAppKeyPerformanceCustomArrayOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceCustomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppKeyPerformanceCustom)(nil)).Elem()
}

func (o WebAppKeyPerformanceCustomArrayOutput) ToWebAppKeyPerformanceCustomArrayOutput() WebAppKeyPerformanceCustomArrayOutput {
	return o
}

func (o WebAppKeyPerformanceCustomArrayOutput) ToWebAppKeyPerformanceCustomArrayOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomArrayOutput {
	return o
}

func (o WebAppKeyPerformanceCustomArrayOutput) Index(i pulumi.IntInput) WebAppKeyPerformanceCustomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAppKeyPerformanceCustom {
		return vs[0].([]*WebAppKeyPerformanceCustom)[vs[1].(int)]
	}).(WebAppKeyPerformanceCustomOutput)
}

type WebAppKeyPerformanceCustomMapOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceCustomMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppKeyPerformanceCustom)(nil)).Elem()
}

func (o WebAppKeyPerformanceCustomMapOutput) ToWebAppKeyPerformanceCustomMapOutput() WebAppKeyPerformanceCustomMapOutput {
	return o
}

func (o WebAppKeyPerformanceCustomMapOutput) ToWebAppKeyPerformanceCustomMapOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomMapOutput {
	return o
}

func (o WebAppKeyPerformanceCustomMapOutput) MapIndex(k pulumi.StringInput) WebAppKeyPerformanceCustomOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAppKeyPerformanceCustom {
		return vs[0].(map[string]*WebAppKeyPerformanceCustom)[vs[1].(string)]
	}).(WebAppKeyPerformanceCustomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceCustomInput)(nil)).Elem(), &WebAppKeyPerformanceCustom{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceCustomArrayInput)(nil)).Elem(), WebAppKeyPerformanceCustomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceCustomMapInput)(nil)).Elem(), WebAppKeyPerformanceCustomMap{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceCustomOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceCustomArrayOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceCustomMapOutput{})
}
