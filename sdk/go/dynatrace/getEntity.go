// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The entity data source allows the entity ID to be retrieved by its name and type.
//
// - `name` (String) Display name of the entity
// - `type` (String) Type of the entity, e.g. SERVICE. All available entity types can be retrieved with [/api/v2/entityTypes](https://www.dynatrace.com/support/help/dynatrace-api/environment-api/entity-v2/get-all-entity-types).
//
// If multiple services match the given criteria, the first result will be retrieved.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := dynatrace.GetEntity(ctx, &dynatrace.GetEntityArgs{
//				Type: pulumi.StringRef("SERVICE"),
//				Name: pulumi.StringRef("BookingService"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", test.Id)
//			return nil
//		})
//	}
//
// ```
func GetEntity(ctx *pulumi.Context, args *GetEntityArgs, opts ...pulumi.InvokeOption) (*GetEntityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEntityResult
	err := ctx.Invoke("dynatrace:index/getEntity:getEntity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEntity.
type GetEntityArgs struct {
	EntitySelector *string `pulumi:"entitySelector"`
	From           *string `pulumi:"from"`
	Name           *string `pulumi:"name"`
	To             *string `pulumi:"to"`
	Type           *string `pulumi:"type"`
}

// A collection of values returned by getEntity.
type GetEntityResult struct {
	EntitySelector *string `pulumi:"entitySelector"`
	From           *string `pulumi:"from"`
	// The provider-assigned unique ID for this managed resource.
	Id         string            `pulumi:"id"`
	Name       *string           `pulumi:"name"`
	Properties map[string]string `pulumi:"properties"`
	To         *string           `pulumi:"to"`
	Type       *string           `pulumi:"type"`
}

func GetEntityOutput(ctx *pulumi.Context, args GetEntityOutputArgs, opts ...pulumi.InvokeOption) GetEntityResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEntityResultOutput, error) {
			args := v.(GetEntityArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getEntity:getEntity", args, GetEntityResultOutput{}, options).(GetEntityResultOutput), nil
		}).(GetEntityResultOutput)
}

// A collection of arguments for invoking getEntity.
type GetEntityOutputArgs struct {
	EntitySelector pulumi.StringPtrInput `pulumi:"entitySelector"`
	From           pulumi.StringPtrInput `pulumi:"from"`
	Name           pulumi.StringPtrInput `pulumi:"name"`
	To             pulumi.StringPtrInput `pulumi:"to"`
	Type           pulumi.StringPtrInput `pulumi:"type"`
}

func (GetEntityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityArgs)(nil)).Elem()
}

// A collection of values returned by getEntity.
type GetEntityResultOutput struct{ *pulumi.OutputState }

func (GetEntityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityResult)(nil)).Elem()
}

func (o GetEntityResultOutput) ToGetEntityResultOutput() GetEntityResultOutput {
	return o
}

func (o GetEntityResultOutput) ToGetEntityResultOutputWithContext(ctx context.Context) GetEntityResultOutput {
	return o
}

func (o GetEntityResultOutput) EntitySelector() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntityResult) *string { return v.EntitySelector }).(pulumi.StringPtrOutput)
}

func (o GetEntityResultOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntityResult) *string { return v.From }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEntityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEntityResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntityResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetEntityResultOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEntityResult) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

func (o GetEntityResultOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntityResult) *string { return v.To }).(pulumi.StringPtrOutput)
}

func (o GetEntityResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntityResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEntityResultOutput{})
}
