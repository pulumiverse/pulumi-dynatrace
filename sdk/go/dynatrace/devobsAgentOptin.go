// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type DevobsAgentOptin struct {
	pulumi.CustomResourceState

	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The scope of this setting (PROCESS*GROUP, CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
}

// NewDevobsAgentOptin registers a new resource with the given unique name, arguments, and options.
func NewDevobsAgentOptin(ctx *pulumi.Context,
	name string, args *DevobsAgentOptinArgs, opts ...pulumi.ResourceOption) (*DevobsAgentOptin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DevobsAgentOptin
	err := ctx.RegisterResource("dynatrace:index/devobsAgentOptin:DevobsAgentOptin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDevobsAgentOptin gets an existing DevobsAgentOptin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDevobsAgentOptin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DevobsAgentOptinState, opts ...pulumi.ResourceOption) (*DevobsAgentOptin, error) {
	var resource DevobsAgentOptin
	err := ctx.ReadResource("dynatrace:index/devobsAgentOptin:DevobsAgentOptin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DevobsAgentOptin resources.
type devobsAgentOptinState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// The scope of this setting (PROCESS*GROUP, CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

type DevobsAgentOptinState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// The scope of this setting (PROCESS*GROUP, CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (DevobsAgentOptinState) ElementType() reflect.Type {
	return reflect.TypeOf((*devobsAgentOptinState)(nil)).Elem()
}

type devobsAgentOptinArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// The scope of this setting (PROCESS*GROUP, CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a DevobsAgentOptin resource.
type DevobsAgentOptinArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// The scope of this setting (PROCESS*GROUP, CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (DevobsAgentOptinArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*devobsAgentOptinArgs)(nil)).Elem()
}

type DevobsAgentOptinInput interface {
	pulumi.Input

	ToDevobsAgentOptinOutput() DevobsAgentOptinOutput
	ToDevobsAgentOptinOutputWithContext(ctx context.Context) DevobsAgentOptinOutput
}

func (*DevobsAgentOptin) ElementType() reflect.Type {
	return reflect.TypeOf((**DevobsAgentOptin)(nil)).Elem()
}

func (i *DevobsAgentOptin) ToDevobsAgentOptinOutput() DevobsAgentOptinOutput {
	return i.ToDevobsAgentOptinOutputWithContext(context.Background())
}

func (i *DevobsAgentOptin) ToDevobsAgentOptinOutputWithContext(ctx context.Context) DevobsAgentOptinOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevobsAgentOptinOutput)
}

// DevobsAgentOptinArrayInput is an input type that accepts DevobsAgentOptinArray and DevobsAgentOptinArrayOutput values.
// You can construct a concrete instance of `DevobsAgentOptinArrayInput` via:
//
//	DevobsAgentOptinArray{ DevobsAgentOptinArgs{...} }
type DevobsAgentOptinArrayInput interface {
	pulumi.Input

	ToDevobsAgentOptinArrayOutput() DevobsAgentOptinArrayOutput
	ToDevobsAgentOptinArrayOutputWithContext(context.Context) DevobsAgentOptinArrayOutput
}

type DevobsAgentOptinArray []DevobsAgentOptinInput

func (DevobsAgentOptinArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DevobsAgentOptin)(nil)).Elem()
}

func (i DevobsAgentOptinArray) ToDevobsAgentOptinArrayOutput() DevobsAgentOptinArrayOutput {
	return i.ToDevobsAgentOptinArrayOutputWithContext(context.Background())
}

func (i DevobsAgentOptinArray) ToDevobsAgentOptinArrayOutputWithContext(ctx context.Context) DevobsAgentOptinArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevobsAgentOptinArrayOutput)
}

// DevobsAgentOptinMapInput is an input type that accepts DevobsAgentOptinMap and DevobsAgentOptinMapOutput values.
// You can construct a concrete instance of `DevobsAgentOptinMapInput` via:
//
//	DevobsAgentOptinMap{ "key": DevobsAgentOptinArgs{...} }
type DevobsAgentOptinMapInput interface {
	pulumi.Input

	ToDevobsAgentOptinMapOutput() DevobsAgentOptinMapOutput
	ToDevobsAgentOptinMapOutputWithContext(context.Context) DevobsAgentOptinMapOutput
}

type DevobsAgentOptinMap map[string]DevobsAgentOptinInput

func (DevobsAgentOptinMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DevobsAgentOptin)(nil)).Elem()
}

func (i DevobsAgentOptinMap) ToDevobsAgentOptinMapOutput() DevobsAgentOptinMapOutput {
	return i.ToDevobsAgentOptinMapOutputWithContext(context.Background())
}

func (i DevobsAgentOptinMap) ToDevobsAgentOptinMapOutputWithContext(ctx context.Context) DevobsAgentOptinMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevobsAgentOptinMapOutput)
}

type DevobsAgentOptinOutput struct{ *pulumi.OutputState }

func (DevobsAgentOptinOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DevobsAgentOptin)(nil)).Elem()
}

func (o DevobsAgentOptinOutput) ToDevobsAgentOptinOutput() DevobsAgentOptinOutput {
	return o
}

func (o DevobsAgentOptinOutput) ToDevobsAgentOptinOutputWithContext(ctx context.Context) DevobsAgentOptinOutput {
	return o
}

// This setting is enabled (`true`) or disabled (`false`)
func (o DevobsAgentOptinOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DevobsAgentOptin) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The scope of this setting (PROCESS*GROUP, CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER). Omit this property if you want to cover the whole environment.
func (o DevobsAgentOptinOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DevobsAgentOptin) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

type DevobsAgentOptinArrayOutput struct{ *pulumi.OutputState }

func (DevobsAgentOptinArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DevobsAgentOptin)(nil)).Elem()
}

func (o DevobsAgentOptinArrayOutput) ToDevobsAgentOptinArrayOutput() DevobsAgentOptinArrayOutput {
	return o
}

func (o DevobsAgentOptinArrayOutput) ToDevobsAgentOptinArrayOutputWithContext(ctx context.Context) DevobsAgentOptinArrayOutput {
	return o
}

func (o DevobsAgentOptinArrayOutput) Index(i pulumi.IntInput) DevobsAgentOptinOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DevobsAgentOptin {
		return vs[0].([]*DevobsAgentOptin)[vs[1].(int)]
	}).(DevobsAgentOptinOutput)
}

type DevobsAgentOptinMapOutput struct{ *pulumi.OutputState }

func (DevobsAgentOptinMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DevobsAgentOptin)(nil)).Elem()
}

func (o DevobsAgentOptinMapOutput) ToDevobsAgentOptinMapOutput() DevobsAgentOptinMapOutput {
	return o
}

func (o DevobsAgentOptinMapOutput) ToDevobsAgentOptinMapOutputWithContext(ctx context.Context) DevobsAgentOptinMapOutput {
	return o
}

func (o DevobsAgentOptinMapOutput) MapIndex(k pulumi.StringInput) DevobsAgentOptinOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DevobsAgentOptin {
		return vs[0].(map[string]*DevobsAgentOptin)[vs[1].(string)]
	}).(DevobsAgentOptinOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DevobsAgentOptinInput)(nil)).Elem(), &DevobsAgentOptin{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevobsAgentOptinArrayInput)(nil)).Elem(), DevobsAgentOptinArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevobsAgentOptinMapInput)(nil)).Elem(), DevobsAgentOptinMap{})
	pulumi.RegisterOutputType(DevobsAgentOptinOutput{})
	pulumi.RegisterOutputType(DevobsAgentOptinArrayOutput{})
	pulumi.RegisterOutputType(DevobsAgentOptinMapOutput{})
}
