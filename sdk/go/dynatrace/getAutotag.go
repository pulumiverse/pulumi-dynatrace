// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The automatically applied tag data source allows the tag ID to be retrieved by its name.
//
// > This data source requires the API token scopes **Read settings** (`settings.read`)
//
// - `name` queries the automatically applied tag with the specified name
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleAutotag, err := dynatrace.LookupAutotag(ctx, &dynatrace.LookupAutotagArgs{
//				Name: "Terraform Example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = dynatrace.NewAutotagRules(ctx, "exampleAutotagRules", &dynatrace.AutotagRulesArgs{
//				AutoTagId: pulumi.String(exampleAutotag.Id),
//				Rules: &dynatrace.AutotagRulesRulesArgs{
//					Rules: dynatrace.AutotagRulesRulesRuleArray{
//						&dynatrace.AutotagRulesRulesRuleArgs{
//							Type:               pulumi.String("ME"),
//							Enabled:            pulumi.Bool(true),
//							ValueFormat:        pulumi.String("Java"),
//							ValueNormalization: pulumi.String("Leave text as-is"),
//							AttributeRule: &dynatrace.AutotagRulesRulesRuleAttributeRuleArgs{
//								EntityType:             pulumi.String("PROCESS_GROUP"),
//								PgToHostPropagation:    pulumi.Bool(true),
//								PgToServicePropagation: pulumi.Bool(false),
//								Conditions: &dynatrace.AutotagRulesRulesRuleAttributeRuleConditionsArgs{
//									Conditions: dynatrace.AutotagRulesRulesRuleAttributeRuleConditionsConditionArray{
//										&dynatrace.AutotagRulesRulesRuleAttributeRuleConditionsConditionArgs{
//											EnumValue: pulumi.String("JAVA"),
//											Key:       pulumi.String("PROCESS_GROUP_TECHNOLOGY"),
//											Operator:  pulumi.String("EQUALS"),
//										},
//									},
//								},
//							},
//						},
//						&dynatrace.AutotagRulesRulesRuleArgs{
//							Type:               pulumi.String("ME"),
//							Enabled:            pulumi.Bool(true),
//							ValueFormat:        pulumi.String(".NET"),
//							ValueNormalization: pulumi.String("Leave text as-is"),
//							AttributeRule: &dynatrace.AutotagRulesRulesRuleAttributeRuleArgs{
//								EntityType:             pulumi.String("PROCESS_GROUP"),
//								PgToHostPropagation:    pulumi.Bool(true),
//								PgToServicePropagation: pulumi.Bool(false),
//								Conditions: &dynatrace.AutotagRulesRulesRuleAttributeRuleConditionsArgs{
//									Conditions: dynatrace.AutotagRulesRulesRuleAttributeRuleConditionsConditionArray{
//										&dynatrace.AutotagRulesRulesRuleAttributeRuleConditionsConditionArgs{
//											EnumValue: pulumi.String("DOTNET"),
//											Key:       pulumi.String("PROCESS_GROUP_TECHNOLOGY"),
//											Operator:  pulumi.String("EQUALS"),
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAutotag(ctx *pulumi.Context, args *LookupAutotagArgs, opts ...pulumi.InvokeOption) (*LookupAutotagResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAutotagResult
	err := ctx.Invoke("dynatrace:index/getAutotag:getAutotag", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAutotag.
type LookupAutotagArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getAutotag.
type LookupAutotagResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupAutotagOutput(ctx *pulumi.Context, args LookupAutotagOutputArgs, opts ...pulumi.InvokeOption) LookupAutotagResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAutotagResultOutput, error) {
			args := v.(LookupAutotagArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAutotagResult
			secret, err := ctx.InvokePackageRaw("dynatrace:index/getAutotag:getAutotag", args, &rv, "", opts...)
			if err != nil {
				return LookupAutotagResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAutotagResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAutotagResultOutput), nil
			}
			return output, nil
		}).(LookupAutotagResultOutput)
}

// A collection of arguments for invoking getAutotag.
type LookupAutotagOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupAutotagOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutotagArgs)(nil)).Elem()
}

// A collection of values returned by getAutotag.
type LookupAutotagResultOutput struct{ *pulumi.OutputState }

func (LookupAutotagResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAutotagResult)(nil)).Elem()
}

func (o LookupAutotagResultOutput) ToLookupAutotagResultOutput() LookupAutotagResultOutput {
	return o
}

func (o LookupAutotagResultOutput) ToLookupAutotagResultOutputWithContext(ctx context.Context) LookupAutotagResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAutotagResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutotagResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAutotagResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAutotagResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAutotagResultOutput{})
}
