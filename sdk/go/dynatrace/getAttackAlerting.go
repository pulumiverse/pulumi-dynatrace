// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The `AttackAlerting` data source allows the attack alerting profile ID to be retrieved by its name.
//
// - `name` (String) - The name of the attack alerting profile
//
// If multiple services match the given criteria, the first result will be retrieved.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := dynatrace.LookupAttackAlerting(ctx, &dynatrace.LookupAttackAlertingArgs{
//				Name: "Terraform Example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupAttackAlerting(ctx *pulumi.Context, args *LookupAttackAlertingArgs, opts ...pulumi.InvokeOption) (*LookupAttackAlertingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAttackAlertingResult
	err := ctx.Invoke("dynatrace:index/getAttackAlerting:getAttackAlerting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAttackAlerting.
type LookupAttackAlertingArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getAttackAlerting.
type LookupAttackAlertingResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupAttackAlertingOutput(ctx *pulumi.Context, args LookupAttackAlertingOutputArgs, opts ...pulumi.InvokeOption) LookupAttackAlertingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupAttackAlertingResultOutput, error) {
			args := v.(LookupAttackAlertingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getAttackAlerting:getAttackAlerting", args, LookupAttackAlertingResultOutput{}, options).(LookupAttackAlertingResultOutput), nil
		}).(LookupAttackAlertingResultOutput)
}

// A collection of arguments for invoking getAttackAlerting.
type LookupAttackAlertingOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupAttackAlertingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAttackAlertingArgs)(nil)).Elem()
}

// A collection of values returned by getAttackAlerting.
type LookupAttackAlertingResultOutput struct{ *pulumi.OutputState }

func (LookupAttackAlertingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAttackAlertingResult)(nil)).Elem()
}

func (o LookupAttackAlertingResultOutput) ToLookupAttackAlertingResultOutput() LookupAttackAlertingResultOutput {
	return o
}

func (o LookupAttackAlertingResultOutput) ToLookupAttackAlertingResultOutputWithContext(ctx context.Context) LookupAttackAlertingResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAttackAlertingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttackAlertingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAttackAlertingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAttackAlertingResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAttackAlertingResultOutput{})
}
