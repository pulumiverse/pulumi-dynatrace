// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type VmwareAnomalies struct {
	pulumi.CustomResourceState

	// no documentation available
	DroppedPacketsDetection VmwareAnomaliesDroppedPacketsDetectionOutput `pulumi:"droppedPacketsDetection"`
	// no documentation available
	EsxiHighCpuDetection VmwareAnomaliesEsxiHighCpuDetectionOutput `pulumi:"esxiHighCpuDetection"`
	// no documentation available
	EsxiHighMemoryDetection VmwareAnomaliesEsxiHighMemoryDetectionOutput `pulumi:"esxiHighMemoryDetection"`
	// no documentation available
	GuestCpuLimitDetection VmwareAnomaliesGuestCpuLimitDetectionOutput `pulumi:"guestCpuLimitDetection"`
	// no documentation available
	LowDatastoreSpaceDetection VmwareAnomaliesLowDatastoreSpaceDetectionOutput `pulumi:"lowDatastoreSpaceDetection"`
	// no documentation available
	OverloadedStorageDetection VmwareAnomaliesOverloadedStorageDetectionOutput `pulumi:"overloadedStorageDetection"`
	// no documentation available
	SlowPhysicalStorageDetection VmwareAnomaliesSlowPhysicalStorageDetectionOutput `pulumi:"slowPhysicalStorageDetection"`
	// no documentation available
	UndersizedStorageDetection VmwareAnomaliesUndersizedStorageDetectionOutput `pulumi:"undersizedStorageDetection"`
}

// NewVmwareAnomalies registers a new resource with the given unique name, arguments, and options.
func NewVmwareAnomalies(ctx *pulumi.Context,
	name string, args *VmwareAnomaliesArgs, opts ...pulumi.ResourceOption) (*VmwareAnomalies, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DroppedPacketsDetection == nil {
		return nil, errors.New("invalid value for required argument 'DroppedPacketsDetection'")
	}
	if args.EsxiHighCpuDetection == nil {
		return nil, errors.New("invalid value for required argument 'EsxiHighCpuDetection'")
	}
	if args.EsxiHighMemoryDetection == nil {
		return nil, errors.New("invalid value for required argument 'EsxiHighMemoryDetection'")
	}
	if args.GuestCpuLimitDetection == nil {
		return nil, errors.New("invalid value for required argument 'GuestCpuLimitDetection'")
	}
	if args.LowDatastoreSpaceDetection == nil {
		return nil, errors.New("invalid value for required argument 'LowDatastoreSpaceDetection'")
	}
	if args.OverloadedStorageDetection == nil {
		return nil, errors.New("invalid value for required argument 'OverloadedStorageDetection'")
	}
	if args.SlowPhysicalStorageDetection == nil {
		return nil, errors.New("invalid value for required argument 'SlowPhysicalStorageDetection'")
	}
	if args.UndersizedStorageDetection == nil {
		return nil, errors.New("invalid value for required argument 'UndersizedStorageDetection'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VmwareAnomalies
	err := ctx.RegisterResource("dynatrace:index/vmwareAnomalies:VmwareAnomalies", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVmwareAnomalies gets an existing VmwareAnomalies resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVmwareAnomalies(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VmwareAnomaliesState, opts ...pulumi.ResourceOption) (*VmwareAnomalies, error) {
	var resource VmwareAnomalies
	err := ctx.ReadResource("dynatrace:index/vmwareAnomalies:VmwareAnomalies", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VmwareAnomalies resources.
type vmwareAnomaliesState struct {
	// no documentation available
	DroppedPacketsDetection *VmwareAnomaliesDroppedPacketsDetection `pulumi:"droppedPacketsDetection"`
	// no documentation available
	EsxiHighCpuDetection *VmwareAnomaliesEsxiHighCpuDetection `pulumi:"esxiHighCpuDetection"`
	// no documentation available
	EsxiHighMemoryDetection *VmwareAnomaliesEsxiHighMemoryDetection `pulumi:"esxiHighMemoryDetection"`
	// no documentation available
	GuestCpuLimitDetection *VmwareAnomaliesGuestCpuLimitDetection `pulumi:"guestCpuLimitDetection"`
	// no documentation available
	LowDatastoreSpaceDetection *VmwareAnomaliesLowDatastoreSpaceDetection `pulumi:"lowDatastoreSpaceDetection"`
	// no documentation available
	OverloadedStorageDetection *VmwareAnomaliesOverloadedStorageDetection `pulumi:"overloadedStorageDetection"`
	// no documentation available
	SlowPhysicalStorageDetection *VmwareAnomaliesSlowPhysicalStorageDetection `pulumi:"slowPhysicalStorageDetection"`
	// no documentation available
	UndersizedStorageDetection *VmwareAnomaliesUndersizedStorageDetection `pulumi:"undersizedStorageDetection"`
}

type VmwareAnomaliesState struct {
	// no documentation available
	DroppedPacketsDetection VmwareAnomaliesDroppedPacketsDetectionPtrInput
	// no documentation available
	EsxiHighCpuDetection VmwareAnomaliesEsxiHighCpuDetectionPtrInput
	// no documentation available
	EsxiHighMemoryDetection VmwareAnomaliesEsxiHighMemoryDetectionPtrInput
	// no documentation available
	GuestCpuLimitDetection VmwareAnomaliesGuestCpuLimitDetectionPtrInput
	// no documentation available
	LowDatastoreSpaceDetection VmwareAnomaliesLowDatastoreSpaceDetectionPtrInput
	// no documentation available
	OverloadedStorageDetection VmwareAnomaliesOverloadedStorageDetectionPtrInput
	// no documentation available
	SlowPhysicalStorageDetection VmwareAnomaliesSlowPhysicalStorageDetectionPtrInput
	// no documentation available
	UndersizedStorageDetection VmwareAnomaliesUndersizedStorageDetectionPtrInput
}

func (VmwareAnomaliesState) ElementType() reflect.Type {
	return reflect.TypeOf((*vmwareAnomaliesState)(nil)).Elem()
}

type vmwareAnomaliesArgs struct {
	// no documentation available
	DroppedPacketsDetection VmwareAnomaliesDroppedPacketsDetection `pulumi:"droppedPacketsDetection"`
	// no documentation available
	EsxiHighCpuDetection VmwareAnomaliesEsxiHighCpuDetection `pulumi:"esxiHighCpuDetection"`
	// no documentation available
	EsxiHighMemoryDetection VmwareAnomaliesEsxiHighMemoryDetection `pulumi:"esxiHighMemoryDetection"`
	// no documentation available
	GuestCpuLimitDetection VmwareAnomaliesGuestCpuLimitDetection `pulumi:"guestCpuLimitDetection"`
	// no documentation available
	LowDatastoreSpaceDetection VmwareAnomaliesLowDatastoreSpaceDetection `pulumi:"lowDatastoreSpaceDetection"`
	// no documentation available
	OverloadedStorageDetection VmwareAnomaliesOverloadedStorageDetection `pulumi:"overloadedStorageDetection"`
	// no documentation available
	SlowPhysicalStorageDetection VmwareAnomaliesSlowPhysicalStorageDetection `pulumi:"slowPhysicalStorageDetection"`
	// no documentation available
	UndersizedStorageDetection VmwareAnomaliesUndersizedStorageDetection `pulumi:"undersizedStorageDetection"`
}

// The set of arguments for constructing a VmwareAnomalies resource.
type VmwareAnomaliesArgs struct {
	// no documentation available
	DroppedPacketsDetection VmwareAnomaliesDroppedPacketsDetectionInput
	// no documentation available
	EsxiHighCpuDetection VmwareAnomaliesEsxiHighCpuDetectionInput
	// no documentation available
	EsxiHighMemoryDetection VmwareAnomaliesEsxiHighMemoryDetectionInput
	// no documentation available
	GuestCpuLimitDetection VmwareAnomaliesGuestCpuLimitDetectionInput
	// no documentation available
	LowDatastoreSpaceDetection VmwareAnomaliesLowDatastoreSpaceDetectionInput
	// no documentation available
	OverloadedStorageDetection VmwareAnomaliesOverloadedStorageDetectionInput
	// no documentation available
	SlowPhysicalStorageDetection VmwareAnomaliesSlowPhysicalStorageDetectionInput
	// no documentation available
	UndersizedStorageDetection VmwareAnomaliesUndersizedStorageDetectionInput
}

func (VmwareAnomaliesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vmwareAnomaliesArgs)(nil)).Elem()
}

type VmwareAnomaliesInput interface {
	pulumi.Input

	ToVmwareAnomaliesOutput() VmwareAnomaliesOutput
	ToVmwareAnomaliesOutputWithContext(ctx context.Context) VmwareAnomaliesOutput
}

func (*VmwareAnomalies) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomalies)(nil)).Elem()
}

func (i *VmwareAnomalies) ToVmwareAnomaliesOutput() VmwareAnomaliesOutput {
	return i.ToVmwareAnomaliesOutputWithContext(context.Background())
}

func (i *VmwareAnomalies) ToVmwareAnomaliesOutputWithContext(ctx context.Context) VmwareAnomaliesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesOutput)
}

// VmwareAnomaliesArrayInput is an input type that accepts VmwareAnomaliesArray and VmwareAnomaliesArrayOutput values.
// You can construct a concrete instance of `VmwareAnomaliesArrayInput` via:
//
//	VmwareAnomaliesArray{ VmwareAnomaliesArgs{...} }
type VmwareAnomaliesArrayInput interface {
	pulumi.Input

	ToVmwareAnomaliesArrayOutput() VmwareAnomaliesArrayOutput
	ToVmwareAnomaliesArrayOutputWithContext(context.Context) VmwareAnomaliesArrayOutput
}

type VmwareAnomaliesArray []VmwareAnomaliesInput

func (VmwareAnomaliesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VmwareAnomalies)(nil)).Elem()
}

func (i VmwareAnomaliesArray) ToVmwareAnomaliesArrayOutput() VmwareAnomaliesArrayOutput {
	return i.ToVmwareAnomaliesArrayOutputWithContext(context.Background())
}

func (i VmwareAnomaliesArray) ToVmwareAnomaliesArrayOutputWithContext(ctx context.Context) VmwareAnomaliesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesArrayOutput)
}

// VmwareAnomaliesMapInput is an input type that accepts VmwareAnomaliesMap and VmwareAnomaliesMapOutput values.
// You can construct a concrete instance of `VmwareAnomaliesMapInput` via:
//
//	VmwareAnomaliesMap{ "key": VmwareAnomaliesArgs{...} }
type VmwareAnomaliesMapInput interface {
	pulumi.Input

	ToVmwareAnomaliesMapOutput() VmwareAnomaliesMapOutput
	ToVmwareAnomaliesMapOutputWithContext(context.Context) VmwareAnomaliesMapOutput
}

type VmwareAnomaliesMap map[string]VmwareAnomaliesInput

func (VmwareAnomaliesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VmwareAnomalies)(nil)).Elem()
}

func (i VmwareAnomaliesMap) ToVmwareAnomaliesMapOutput() VmwareAnomaliesMapOutput {
	return i.ToVmwareAnomaliesMapOutputWithContext(context.Background())
}

func (i VmwareAnomaliesMap) ToVmwareAnomaliesMapOutputWithContext(ctx context.Context) VmwareAnomaliesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesMapOutput)
}

type VmwareAnomaliesOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomalies)(nil)).Elem()
}

func (o VmwareAnomaliesOutput) ToVmwareAnomaliesOutput() VmwareAnomaliesOutput {
	return o
}

func (o VmwareAnomaliesOutput) ToVmwareAnomaliesOutputWithContext(ctx context.Context) VmwareAnomaliesOutput {
	return o
}

// no documentation available
func (o VmwareAnomaliesOutput) DroppedPacketsDetection() VmwareAnomaliesDroppedPacketsDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomalies) VmwareAnomaliesDroppedPacketsDetectionOutput {
		return v.DroppedPacketsDetection
	}).(VmwareAnomaliesDroppedPacketsDetectionOutput)
}

// no documentation available
func (o VmwareAnomaliesOutput) EsxiHighCpuDetection() VmwareAnomaliesEsxiHighCpuDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomalies) VmwareAnomaliesEsxiHighCpuDetectionOutput { return v.EsxiHighCpuDetection }).(VmwareAnomaliesEsxiHighCpuDetectionOutput)
}

// no documentation available
func (o VmwareAnomaliesOutput) EsxiHighMemoryDetection() VmwareAnomaliesEsxiHighMemoryDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomalies) VmwareAnomaliesEsxiHighMemoryDetectionOutput {
		return v.EsxiHighMemoryDetection
	}).(VmwareAnomaliesEsxiHighMemoryDetectionOutput)
}

// no documentation available
func (o VmwareAnomaliesOutput) GuestCpuLimitDetection() VmwareAnomaliesGuestCpuLimitDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomalies) VmwareAnomaliesGuestCpuLimitDetectionOutput { return v.GuestCpuLimitDetection }).(VmwareAnomaliesGuestCpuLimitDetectionOutput)
}

// no documentation available
func (o VmwareAnomaliesOutput) LowDatastoreSpaceDetection() VmwareAnomaliesLowDatastoreSpaceDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomalies) VmwareAnomaliesLowDatastoreSpaceDetectionOutput {
		return v.LowDatastoreSpaceDetection
	}).(VmwareAnomaliesLowDatastoreSpaceDetectionOutput)
}

// no documentation available
func (o VmwareAnomaliesOutput) OverloadedStorageDetection() VmwareAnomaliesOverloadedStorageDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomalies) VmwareAnomaliesOverloadedStorageDetectionOutput {
		return v.OverloadedStorageDetection
	}).(VmwareAnomaliesOverloadedStorageDetectionOutput)
}

// no documentation available
func (o VmwareAnomaliesOutput) SlowPhysicalStorageDetection() VmwareAnomaliesSlowPhysicalStorageDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomalies) VmwareAnomaliesSlowPhysicalStorageDetectionOutput {
		return v.SlowPhysicalStorageDetection
	}).(VmwareAnomaliesSlowPhysicalStorageDetectionOutput)
}

// no documentation available
func (o VmwareAnomaliesOutput) UndersizedStorageDetection() VmwareAnomaliesUndersizedStorageDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomalies) VmwareAnomaliesUndersizedStorageDetectionOutput {
		return v.UndersizedStorageDetection
	}).(VmwareAnomaliesUndersizedStorageDetectionOutput)
}

type VmwareAnomaliesArrayOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VmwareAnomalies)(nil)).Elem()
}

func (o VmwareAnomaliesArrayOutput) ToVmwareAnomaliesArrayOutput() VmwareAnomaliesArrayOutput {
	return o
}

func (o VmwareAnomaliesArrayOutput) ToVmwareAnomaliesArrayOutputWithContext(ctx context.Context) VmwareAnomaliesArrayOutput {
	return o
}

func (o VmwareAnomaliesArrayOutput) Index(i pulumi.IntInput) VmwareAnomaliesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VmwareAnomalies {
		return vs[0].([]*VmwareAnomalies)[vs[1].(int)]
	}).(VmwareAnomaliesOutput)
}

type VmwareAnomaliesMapOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VmwareAnomalies)(nil)).Elem()
}

func (o VmwareAnomaliesMapOutput) ToVmwareAnomaliesMapOutput() VmwareAnomaliesMapOutput {
	return o
}

func (o VmwareAnomaliesMapOutput) ToVmwareAnomaliesMapOutputWithContext(ctx context.Context) VmwareAnomaliesMapOutput {
	return o
}

func (o VmwareAnomaliesMapOutput) MapIndex(k pulumi.StringInput) VmwareAnomaliesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VmwareAnomalies {
		return vs[0].(map[string]*VmwareAnomalies)[vs[1].(string)]
	}).(VmwareAnomaliesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesInput)(nil)).Elem(), &VmwareAnomalies{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesArrayInput)(nil)).Elem(), VmwareAnomaliesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesMapInput)(nil)).Elem(), VmwareAnomaliesMap{})
	pulumi.RegisterOutputType(VmwareAnomaliesOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesArrayOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesMapOutput{})
}
