// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The `VulnerabilityAlerting` data source allows the vulnerability alerting profile ID to be retrieved by its name.
//
// - `name` (String) - The name of the vulnerability alerting profile
//
// If multiple services match the given criteria, the first result will be retrieved.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := dynatrace.LookupVulnerabilityAlerting(ctx, &dynatrace.LookupVulnerabilityAlertingArgs{
//				Name: "Terraform Example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
func LookupVulnerabilityAlerting(ctx *pulumi.Context, args *LookupVulnerabilityAlertingArgs, opts ...pulumi.InvokeOption) (*LookupVulnerabilityAlertingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVulnerabilityAlertingResult
	err := ctx.Invoke("dynatrace:index/getVulnerabilityAlerting:getVulnerabilityAlerting", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVulnerabilityAlerting.
type LookupVulnerabilityAlertingArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by getVulnerabilityAlerting.
type LookupVulnerabilityAlertingResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupVulnerabilityAlertingOutput(ctx *pulumi.Context, args LookupVulnerabilityAlertingOutputArgs, opts ...pulumi.InvokeOption) LookupVulnerabilityAlertingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVulnerabilityAlertingResultOutput, error) {
			args := v.(LookupVulnerabilityAlertingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getVulnerabilityAlerting:getVulnerabilityAlerting", args, LookupVulnerabilityAlertingResultOutput{}, options).(LookupVulnerabilityAlertingResultOutput), nil
		}).(LookupVulnerabilityAlertingResultOutput)
}

// A collection of arguments for invoking getVulnerabilityAlerting.
type LookupVulnerabilityAlertingOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupVulnerabilityAlertingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVulnerabilityAlertingArgs)(nil)).Elem()
}

// A collection of values returned by getVulnerabilityAlerting.
type LookupVulnerabilityAlertingResultOutput struct{ *pulumi.OutputState }

func (LookupVulnerabilityAlertingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVulnerabilityAlertingResult)(nil)).Elem()
}

func (o LookupVulnerabilityAlertingResultOutput) ToLookupVulnerabilityAlertingResultOutput() LookupVulnerabilityAlertingResultOutput {
	return o
}

func (o LookupVulnerabilityAlertingResultOutput) ToLookupVulnerabilityAlertingResultOutputWithContext(ctx context.Context) LookupVulnerabilityAlertingResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVulnerabilityAlertingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityAlertingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVulnerabilityAlertingResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVulnerabilityAlertingResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVulnerabilityAlertingResultOutput{})
}
