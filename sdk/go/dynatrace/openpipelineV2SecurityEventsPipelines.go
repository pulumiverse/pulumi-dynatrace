// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OpenpipelineV2SecurityEventsPipelines struct {
	pulumi.CustomResourceState

	// Cost allocation stage
	CostAllocation OpenpipelineV2SecurityEventsPipelinesCostAllocationOutput `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId pulumi.StringOutput `pulumi:"customId"`
	// Data extraction stage
	DataExtraction OpenpipelineV2SecurityEventsPipelinesDataExtractionOutput `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis OpenpipelineV2SecurityEventsPipelinesDavisOutput `pulumi:"davis"`
	// Display name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2SecurityEventsPipelinesMetricExtractionOutput `pulumi:"metricExtraction"`
	// Processing stage
	Processing OpenpipelineV2SecurityEventsPipelinesProcessingOutput `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation OpenpipelineV2SecurityEventsPipelinesProductAllocationOutput `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext OpenpipelineV2SecurityEventsPipelinesSecurityContextOutput `pulumi:"securityContext"`
	// Storage stage
	Storage OpenpipelineV2SecurityEventsPipelinesStorageOutput `pulumi:"storage"`
}

// NewOpenpipelineV2SecurityEventsPipelines registers a new resource with the given unique name, arguments, and options.
func NewOpenpipelineV2SecurityEventsPipelines(ctx *pulumi.Context,
	name string, args *OpenpipelineV2SecurityEventsPipelinesArgs, opts ...pulumi.ResourceOption) (*OpenpipelineV2SecurityEventsPipelines, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CostAllocation == nil {
		return nil, errors.New("invalid value for required argument 'CostAllocation'")
	}
	if args.CustomId == nil {
		return nil, errors.New("invalid value for required argument 'CustomId'")
	}
	if args.DataExtraction == nil {
		return nil, errors.New("invalid value for required argument 'DataExtraction'")
	}
	if args.Davis == nil {
		return nil, errors.New("invalid value for required argument 'Davis'")
	}
	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.MetricExtraction == nil {
		return nil, errors.New("invalid value for required argument 'MetricExtraction'")
	}
	if args.Processing == nil {
		return nil, errors.New("invalid value for required argument 'Processing'")
	}
	if args.ProductAllocation == nil {
		return nil, errors.New("invalid value for required argument 'ProductAllocation'")
	}
	if args.SecurityContext == nil {
		return nil, errors.New("invalid value for required argument 'SecurityContext'")
	}
	if args.Storage == nil {
		return nil, errors.New("invalid value for required argument 'Storage'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenpipelineV2SecurityEventsPipelines
	err := ctx.RegisterResource("dynatrace:index/openpipelineV2SecurityEventsPipelines:OpenpipelineV2SecurityEventsPipelines", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenpipelineV2SecurityEventsPipelines gets an existing OpenpipelineV2SecurityEventsPipelines resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenpipelineV2SecurityEventsPipelines(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenpipelineV2SecurityEventsPipelinesState, opts ...pulumi.ResourceOption) (*OpenpipelineV2SecurityEventsPipelines, error) {
	var resource OpenpipelineV2SecurityEventsPipelines
	err := ctx.ReadResource("dynatrace:index/openpipelineV2SecurityEventsPipelines:OpenpipelineV2SecurityEventsPipelines", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenpipelineV2SecurityEventsPipelines resources.
type openpipelineV2SecurityEventsPipelinesState struct {
	// Cost allocation stage
	CostAllocation *OpenpipelineV2SecurityEventsPipelinesCostAllocation `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId *string `pulumi:"customId"`
	// Data extraction stage
	DataExtraction *OpenpipelineV2SecurityEventsPipelinesDataExtraction `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis *OpenpipelineV2SecurityEventsPipelinesDavis `pulumi:"davis"`
	// Display name
	DisplayName *string `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction *OpenpipelineV2SecurityEventsPipelinesMetricExtraction `pulumi:"metricExtraction"`
	// Processing stage
	Processing *OpenpipelineV2SecurityEventsPipelinesProcessing `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation *OpenpipelineV2SecurityEventsPipelinesProductAllocation `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext *OpenpipelineV2SecurityEventsPipelinesSecurityContext `pulumi:"securityContext"`
	// Storage stage
	Storage *OpenpipelineV2SecurityEventsPipelinesStorage `pulumi:"storage"`
}

type OpenpipelineV2SecurityEventsPipelinesState struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2SecurityEventsPipelinesCostAllocationPtrInput
	// Custom pipeline id
	CustomId pulumi.StringPtrInput
	// Data extraction stage
	DataExtraction OpenpipelineV2SecurityEventsPipelinesDataExtractionPtrInput
	// Davis event extraction stage
	Davis OpenpipelineV2SecurityEventsPipelinesDavisPtrInput
	// Display name
	DisplayName pulumi.StringPtrInput
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2SecurityEventsPipelinesMetricExtractionPtrInput
	// Processing stage
	Processing OpenpipelineV2SecurityEventsPipelinesProcessingPtrInput
	// Product allocation stage
	ProductAllocation OpenpipelineV2SecurityEventsPipelinesProductAllocationPtrInput
	// Security context stage
	SecurityContext OpenpipelineV2SecurityEventsPipelinesSecurityContextPtrInput
	// Storage stage
	Storage OpenpipelineV2SecurityEventsPipelinesStoragePtrInput
}

func (OpenpipelineV2SecurityEventsPipelinesState) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2SecurityEventsPipelinesState)(nil)).Elem()
}

type openpipelineV2SecurityEventsPipelinesArgs struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2SecurityEventsPipelinesCostAllocation `pulumi:"costAllocation"`
	// Custom pipeline id
	CustomId string `pulumi:"customId"`
	// Data extraction stage
	DataExtraction OpenpipelineV2SecurityEventsPipelinesDataExtraction `pulumi:"dataExtraction"`
	// Davis event extraction stage
	Davis OpenpipelineV2SecurityEventsPipelinesDavis `pulumi:"davis"`
	// Display name
	DisplayName string `pulumi:"displayName"`
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2SecurityEventsPipelinesMetricExtraction `pulumi:"metricExtraction"`
	// Processing stage
	Processing OpenpipelineV2SecurityEventsPipelinesProcessing `pulumi:"processing"`
	// Product allocation stage
	ProductAllocation OpenpipelineV2SecurityEventsPipelinesProductAllocation `pulumi:"productAllocation"`
	// Security context stage
	SecurityContext OpenpipelineV2SecurityEventsPipelinesSecurityContext `pulumi:"securityContext"`
	// Storage stage
	Storage OpenpipelineV2SecurityEventsPipelinesStorage `pulumi:"storage"`
}

// The set of arguments for constructing a OpenpipelineV2SecurityEventsPipelines resource.
type OpenpipelineV2SecurityEventsPipelinesArgs struct {
	// Cost allocation stage
	CostAllocation OpenpipelineV2SecurityEventsPipelinesCostAllocationInput
	// Custom pipeline id
	CustomId pulumi.StringInput
	// Data extraction stage
	DataExtraction OpenpipelineV2SecurityEventsPipelinesDataExtractionInput
	// Davis event extraction stage
	Davis OpenpipelineV2SecurityEventsPipelinesDavisInput
	// Display name
	DisplayName pulumi.StringInput
	// Metrics extraction stage
	MetricExtraction OpenpipelineV2SecurityEventsPipelinesMetricExtractionInput
	// Processing stage
	Processing OpenpipelineV2SecurityEventsPipelinesProcessingInput
	// Product allocation stage
	ProductAllocation OpenpipelineV2SecurityEventsPipelinesProductAllocationInput
	// Security context stage
	SecurityContext OpenpipelineV2SecurityEventsPipelinesSecurityContextInput
	// Storage stage
	Storage OpenpipelineV2SecurityEventsPipelinesStorageInput
}

func (OpenpipelineV2SecurityEventsPipelinesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2SecurityEventsPipelinesArgs)(nil)).Elem()
}

type OpenpipelineV2SecurityEventsPipelinesInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsPipelinesOutput() OpenpipelineV2SecurityEventsPipelinesOutput
	ToOpenpipelineV2SecurityEventsPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsPipelinesOutput
}

func (*OpenpipelineV2SecurityEventsPipelines) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2SecurityEventsPipelines)(nil)).Elem()
}

func (i *OpenpipelineV2SecurityEventsPipelines) ToOpenpipelineV2SecurityEventsPipelinesOutput() OpenpipelineV2SecurityEventsPipelinesOutput {
	return i.ToOpenpipelineV2SecurityEventsPipelinesOutputWithContext(context.Background())
}

func (i *OpenpipelineV2SecurityEventsPipelines) ToOpenpipelineV2SecurityEventsPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsPipelinesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsPipelinesOutput)
}

// OpenpipelineV2SecurityEventsPipelinesArrayInput is an input type that accepts OpenpipelineV2SecurityEventsPipelinesArray and OpenpipelineV2SecurityEventsPipelinesArrayOutput values.
// You can construct a concrete instance of `OpenpipelineV2SecurityEventsPipelinesArrayInput` via:
//
//	OpenpipelineV2SecurityEventsPipelinesArray{ OpenpipelineV2SecurityEventsPipelinesArgs{...} }
type OpenpipelineV2SecurityEventsPipelinesArrayInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsPipelinesArrayOutput() OpenpipelineV2SecurityEventsPipelinesArrayOutput
	ToOpenpipelineV2SecurityEventsPipelinesArrayOutputWithContext(context.Context) OpenpipelineV2SecurityEventsPipelinesArrayOutput
}

type OpenpipelineV2SecurityEventsPipelinesArray []OpenpipelineV2SecurityEventsPipelinesInput

func (OpenpipelineV2SecurityEventsPipelinesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2SecurityEventsPipelines)(nil)).Elem()
}

func (i OpenpipelineV2SecurityEventsPipelinesArray) ToOpenpipelineV2SecurityEventsPipelinesArrayOutput() OpenpipelineV2SecurityEventsPipelinesArrayOutput {
	return i.ToOpenpipelineV2SecurityEventsPipelinesArrayOutputWithContext(context.Background())
}

func (i OpenpipelineV2SecurityEventsPipelinesArray) ToOpenpipelineV2SecurityEventsPipelinesArrayOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsPipelinesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsPipelinesArrayOutput)
}

// OpenpipelineV2SecurityEventsPipelinesMapInput is an input type that accepts OpenpipelineV2SecurityEventsPipelinesMap and OpenpipelineV2SecurityEventsPipelinesMapOutput values.
// You can construct a concrete instance of `OpenpipelineV2SecurityEventsPipelinesMapInput` via:
//
//	OpenpipelineV2SecurityEventsPipelinesMap{ "key": OpenpipelineV2SecurityEventsPipelinesArgs{...} }
type OpenpipelineV2SecurityEventsPipelinesMapInput interface {
	pulumi.Input

	ToOpenpipelineV2SecurityEventsPipelinesMapOutput() OpenpipelineV2SecurityEventsPipelinesMapOutput
	ToOpenpipelineV2SecurityEventsPipelinesMapOutputWithContext(context.Context) OpenpipelineV2SecurityEventsPipelinesMapOutput
}

type OpenpipelineV2SecurityEventsPipelinesMap map[string]OpenpipelineV2SecurityEventsPipelinesInput

func (OpenpipelineV2SecurityEventsPipelinesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2SecurityEventsPipelines)(nil)).Elem()
}

func (i OpenpipelineV2SecurityEventsPipelinesMap) ToOpenpipelineV2SecurityEventsPipelinesMapOutput() OpenpipelineV2SecurityEventsPipelinesMapOutput {
	return i.ToOpenpipelineV2SecurityEventsPipelinesMapOutputWithContext(context.Background())
}

func (i OpenpipelineV2SecurityEventsPipelinesMap) ToOpenpipelineV2SecurityEventsPipelinesMapOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsPipelinesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SecurityEventsPipelinesMapOutput)
}

type OpenpipelineV2SecurityEventsPipelinesOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsPipelinesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2SecurityEventsPipelines)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsPipelinesOutput) ToOpenpipelineV2SecurityEventsPipelinesOutput() OpenpipelineV2SecurityEventsPipelinesOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsPipelinesOutput) ToOpenpipelineV2SecurityEventsPipelinesOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsPipelinesOutput {
	return o
}

// Cost allocation stage
func (o OpenpipelineV2SecurityEventsPipelinesOutput) CostAllocation() OpenpipelineV2SecurityEventsPipelinesCostAllocationOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) OpenpipelineV2SecurityEventsPipelinesCostAllocationOutput {
		return v.CostAllocation
	}).(OpenpipelineV2SecurityEventsPipelinesCostAllocationOutput)
}

// Custom pipeline id
func (o OpenpipelineV2SecurityEventsPipelinesOutput) CustomId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) pulumi.StringOutput { return v.CustomId }).(pulumi.StringOutput)
}

// Data extraction stage
func (o OpenpipelineV2SecurityEventsPipelinesOutput) DataExtraction() OpenpipelineV2SecurityEventsPipelinesDataExtractionOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) OpenpipelineV2SecurityEventsPipelinesDataExtractionOutput {
		return v.DataExtraction
	}).(OpenpipelineV2SecurityEventsPipelinesDataExtractionOutput)
}

// Davis event extraction stage
func (o OpenpipelineV2SecurityEventsPipelinesOutput) Davis() OpenpipelineV2SecurityEventsPipelinesDavisOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) OpenpipelineV2SecurityEventsPipelinesDavisOutput {
		return v.Davis
	}).(OpenpipelineV2SecurityEventsPipelinesDavisOutput)
}

// Display name
func (o OpenpipelineV2SecurityEventsPipelinesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Metrics extraction stage
func (o OpenpipelineV2SecurityEventsPipelinesOutput) MetricExtraction() OpenpipelineV2SecurityEventsPipelinesMetricExtractionOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) OpenpipelineV2SecurityEventsPipelinesMetricExtractionOutput {
		return v.MetricExtraction
	}).(OpenpipelineV2SecurityEventsPipelinesMetricExtractionOutput)
}

// Processing stage
func (o OpenpipelineV2SecurityEventsPipelinesOutput) Processing() OpenpipelineV2SecurityEventsPipelinesProcessingOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) OpenpipelineV2SecurityEventsPipelinesProcessingOutput {
		return v.Processing
	}).(OpenpipelineV2SecurityEventsPipelinesProcessingOutput)
}

// Product allocation stage
func (o OpenpipelineV2SecurityEventsPipelinesOutput) ProductAllocation() OpenpipelineV2SecurityEventsPipelinesProductAllocationOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) OpenpipelineV2SecurityEventsPipelinesProductAllocationOutput {
		return v.ProductAllocation
	}).(OpenpipelineV2SecurityEventsPipelinesProductAllocationOutput)
}

// Security context stage
func (o OpenpipelineV2SecurityEventsPipelinesOutput) SecurityContext() OpenpipelineV2SecurityEventsPipelinesSecurityContextOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) OpenpipelineV2SecurityEventsPipelinesSecurityContextOutput {
		return v.SecurityContext
	}).(OpenpipelineV2SecurityEventsPipelinesSecurityContextOutput)
}

// Storage stage
func (o OpenpipelineV2SecurityEventsPipelinesOutput) Storage() OpenpipelineV2SecurityEventsPipelinesStorageOutput {
	return o.ApplyT(func(v *OpenpipelineV2SecurityEventsPipelines) OpenpipelineV2SecurityEventsPipelinesStorageOutput {
		return v.Storage
	}).(OpenpipelineV2SecurityEventsPipelinesStorageOutput)
}

type OpenpipelineV2SecurityEventsPipelinesArrayOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsPipelinesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2SecurityEventsPipelines)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsPipelinesArrayOutput) ToOpenpipelineV2SecurityEventsPipelinesArrayOutput() OpenpipelineV2SecurityEventsPipelinesArrayOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsPipelinesArrayOutput) ToOpenpipelineV2SecurityEventsPipelinesArrayOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsPipelinesArrayOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsPipelinesArrayOutput) Index(i pulumi.IntInput) OpenpipelineV2SecurityEventsPipelinesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenpipelineV2SecurityEventsPipelines {
		return vs[0].([]*OpenpipelineV2SecurityEventsPipelines)[vs[1].(int)]
	}).(OpenpipelineV2SecurityEventsPipelinesOutput)
}

type OpenpipelineV2SecurityEventsPipelinesMapOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SecurityEventsPipelinesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2SecurityEventsPipelines)(nil)).Elem()
}

func (o OpenpipelineV2SecurityEventsPipelinesMapOutput) ToOpenpipelineV2SecurityEventsPipelinesMapOutput() OpenpipelineV2SecurityEventsPipelinesMapOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsPipelinesMapOutput) ToOpenpipelineV2SecurityEventsPipelinesMapOutputWithContext(ctx context.Context) OpenpipelineV2SecurityEventsPipelinesMapOutput {
	return o
}

func (o OpenpipelineV2SecurityEventsPipelinesMapOutput) MapIndex(k pulumi.StringInput) OpenpipelineV2SecurityEventsPipelinesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenpipelineV2SecurityEventsPipelines {
		return vs[0].(map[string]*OpenpipelineV2SecurityEventsPipelines)[vs[1].(string)]
	}).(OpenpipelineV2SecurityEventsPipelinesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsPipelinesInput)(nil)).Elem(), &OpenpipelineV2SecurityEventsPipelines{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsPipelinesArrayInput)(nil)).Elem(), OpenpipelineV2SecurityEventsPipelinesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SecurityEventsPipelinesMapInput)(nil)).Elem(), OpenpipelineV2SecurityEventsPipelinesMap{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsPipelinesOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsPipelinesArrayOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2SecurityEventsPipelinesMapOutput{})
}
