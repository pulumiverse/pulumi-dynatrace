// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type EventDrivenAnsibleConnections struct {
	pulumi.CustomResourceState

	// A unique and clearly identifiable connection name.
	Name pulumi.StringOutput `pulumi:"name"`
	// API access token for the Event-Driven Ansible Controller. Please note that this token is not refreshed and can expire.
	Token pulumi.StringPtrOutput `pulumi:"token"`
	// Possible Values: `Api_token`
	Type pulumi.StringOutput `pulumi:"type"`
	// URL of the Event-Driven Ansible source plugin webhook. For example, https://eda.yourdomain.com:5010
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewEventDrivenAnsibleConnections registers a new resource with the given unique name, arguments, and options.
func NewEventDrivenAnsibleConnections(ctx *pulumi.Context,
	name string, args *EventDrivenAnsibleConnectionsArgs, opts ...pulumi.ResourceOption) (*EventDrivenAnsibleConnections, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Token != nil {
		args.Token = pulumi.ToSecret(args.Token).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"token",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EventDrivenAnsibleConnections
	err := ctx.RegisterResource("dynatrace:index/eventDrivenAnsibleConnections:EventDrivenAnsibleConnections", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventDrivenAnsibleConnections gets an existing EventDrivenAnsibleConnections resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventDrivenAnsibleConnections(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventDrivenAnsibleConnectionsState, opts ...pulumi.ResourceOption) (*EventDrivenAnsibleConnections, error) {
	var resource EventDrivenAnsibleConnections
	err := ctx.ReadResource("dynatrace:index/eventDrivenAnsibleConnections:EventDrivenAnsibleConnections", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventDrivenAnsibleConnections resources.
type eventDrivenAnsibleConnectionsState struct {
	// A unique and clearly identifiable connection name.
	Name *string `pulumi:"name"`
	// API access token for the Event-Driven Ansible Controller. Please note that this token is not refreshed and can expire.
	Token *string `pulumi:"token"`
	// Possible Values: `Api_token`
	Type *string `pulumi:"type"`
	// URL of the Event-Driven Ansible source plugin webhook. For example, https://eda.yourdomain.com:5010
	Url *string `pulumi:"url"`
}

type EventDrivenAnsibleConnectionsState struct {
	// A unique and clearly identifiable connection name.
	Name pulumi.StringPtrInput
	// API access token for the Event-Driven Ansible Controller. Please note that this token is not refreshed and can expire.
	Token pulumi.StringPtrInput
	// Possible Values: `Api_token`
	Type pulumi.StringPtrInput
	// URL of the Event-Driven Ansible source plugin webhook. For example, https://eda.yourdomain.com:5010
	Url pulumi.StringPtrInput
}

func (EventDrivenAnsibleConnectionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventDrivenAnsibleConnectionsState)(nil)).Elem()
}

type eventDrivenAnsibleConnectionsArgs struct {
	// A unique and clearly identifiable connection name.
	Name *string `pulumi:"name"`
	// API access token for the Event-Driven Ansible Controller. Please note that this token is not refreshed and can expire.
	Token *string `pulumi:"token"`
	// Possible Values: `Api_token`
	Type string `pulumi:"type"`
	// URL of the Event-Driven Ansible source plugin webhook. For example, https://eda.yourdomain.com:5010
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a EventDrivenAnsibleConnections resource.
type EventDrivenAnsibleConnectionsArgs struct {
	// A unique and clearly identifiable connection name.
	Name pulumi.StringPtrInput
	// API access token for the Event-Driven Ansible Controller. Please note that this token is not refreshed and can expire.
	Token pulumi.StringPtrInput
	// Possible Values: `Api_token`
	Type pulumi.StringInput
	// URL of the Event-Driven Ansible source plugin webhook. For example, https://eda.yourdomain.com:5010
	Url pulumi.StringInput
}

func (EventDrivenAnsibleConnectionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventDrivenAnsibleConnectionsArgs)(nil)).Elem()
}

type EventDrivenAnsibleConnectionsInput interface {
	pulumi.Input

	ToEventDrivenAnsibleConnectionsOutput() EventDrivenAnsibleConnectionsOutput
	ToEventDrivenAnsibleConnectionsOutputWithContext(ctx context.Context) EventDrivenAnsibleConnectionsOutput
}

func (*EventDrivenAnsibleConnections) ElementType() reflect.Type {
	return reflect.TypeOf((**EventDrivenAnsibleConnections)(nil)).Elem()
}

func (i *EventDrivenAnsibleConnections) ToEventDrivenAnsibleConnectionsOutput() EventDrivenAnsibleConnectionsOutput {
	return i.ToEventDrivenAnsibleConnectionsOutputWithContext(context.Background())
}

func (i *EventDrivenAnsibleConnections) ToEventDrivenAnsibleConnectionsOutputWithContext(ctx context.Context) EventDrivenAnsibleConnectionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDrivenAnsibleConnectionsOutput)
}

// EventDrivenAnsibleConnectionsArrayInput is an input type that accepts EventDrivenAnsibleConnectionsArray and EventDrivenAnsibleConnectionsArrayOutput values.
// You can construct a concrete instance of `EventDrivenAnsibleConnectionsArrayInput` via:
//
//	EventDrivenAnsibleConnectionsArray{ EventDrivenAnsibleConnectionsArgs{...} }
type EventDrivenAnsibleConnectionsArrayInput interface {
	pulumi.Input

	ToEventDrivenAnsibleConnectionsArrayOutput() EventDrivenAnsibleConnectionsArrayOutput
	ToEventDrivenAnsibleConnectionsArrayOutputWithContext(context.Context) EventDrivenAnsibleConnectionsArrayOutput
}

type EventDrivenAnsibleConnectionsArray []EventDrivenAnsibleConnectionsInput

func (EventDrivenAnsibleConnectionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EventDrivenAnsibleConnections)(nil)).Elem()
}

func (i EventDrivenAnsibleConnectionsArray) ToEventDrivenAnsibleConnectionsArrayOutput() EventDrivenAnsibleConnectionsArrayOutput {
	return i.ToEventDrivenAnsibleConnectionsArrayOutputWithContext(context.Background())
}

func (i EventDrivenAnsibleConnectionsArray) ToEventDrivenAnsibleConnectionsArrayOutputWithContext(ctx context.Context) EventDrivenAnsibleConnectionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDrivenAnsibleConnectionsArrayOutput)
}

// EventDrivenAnsibleConnectionsMapInput is an input type that accepts EventDrivenAnsibleConnectionsMap and EventDrivenAnsibleConnectionsMapOutput values.
// You can construct a concrete instance of `EventDrivenAnsibleConnectionsMapInput` via:
//
//	EventDrivenAnsibleConnectionsMap{ "key": EventDrivenAnsibleConnectionsArgs{...} }
type EventDrivenAnsibleConnectionsMapInput interface {
	pulumi.Input

	ToEventDrivenAnsibleConnectionsMapOutput() EventDrivenAnsibleConnectionsMapOutput
	ToEventDrivenAnsibleConnectionsMapOutputWithContext(context.Context) EventDrivenAnsibleConnectionsMapOutput
}

type EventDrivenAnsibleConnectionsMap map[string]EventDrivenAnsibleConnectionsInput

func (EventDrivenAnsibleConnectionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EventDrivenAnsibleConnections)(nil)).Elem()
}

func (i EventDrivenAnsibleConnectionsMap) ToEventDrivenAnsibleConnectionsMapOutput() EventDrivenAnsibleConnectionsMapOutput {
	return i.ToEventDrivenAnsibleConnectionsMapOutputWithContext(context.Background())
}

func (i EventDrivenAnsibleConnectionsMap) ToEventDrivenAnsibleConnectionsMapOutputWithContext(ctx context.Context) EventDrivenAnsibleConnectionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDrivenAnsibleConnectionsMapOutput)
}

type EventDrivenAnsibleConnectionsOutput struct{ *pulumi.OutputState }

func (EventDrivenAnsibleConnectionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventDrivenAnsibleConnections)(nil)).Elem()
}

func (o EventDrivenAnsibleConnectionsOutput) ToEventDrivenAnsibleConnectionsOutput() EventDrivenAnsibleConnectionsOutput {
	return o
}

func (o EventDrivenAnsibleConnectionsOutput) ToEventDrivenAnsibleConnectionsOutputWithContext(ctx context.Context) EventDrivenAnsibleConnectionsOutput {
	return o
}

// A unique and clearly identifiable connection name.
func (o EventDrivenAnsibleConnectionsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EventDrivenAnsibleConnections) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// API access token for the Event-Driven Ansible Controller. Please note that this token is not refreshed and can expire.
func (o EventDrivenAnsibleConnectionsOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventDrivenAnsibleConnections) pulumi.StringPtrOutput { return v.Token }).(pulumi.StringPtrOutput)
}

// Possible Values: `Api_token`
func (o EventDrivenAnsibleConnectionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *EventDrivenAnsibleConnections) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// URL of the Event-Driven Ansible source plugin webhook. For example, https://eda.yourdomain.com:5010
func (o EventDrivenAnsibleConnectionsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *EventDrivenAnsibleConnections) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type EventDrivenAnsibleConnectionsArrayOutput struct{ *pulumi.OutputState }

func (EventDrivenAnsibleConnectionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EventDrivenAnsibleConnections)(nil)).Elem()
}

func (o EventDrivenAnsibleConnectionsArrayOutput) ToEventDrivenAnsibleConnectionsArrayOutput() EventDrivenAnsibleConnectionsArrayOutput {
	return o
}

func (o EventDrivenAnsibleConnectionsArrayOutput) ToEventDrivenAnsibleConnectionsArrayOutputWithContext(ctx context.Context) EventDrivenAnsibleConnectionsArrayOutput {
	return o
}

func (o EventDrivenAnsibleConnectionsArrayOutput) Index(i pulumi.IntInput) EventDrivenAnsibleConnectionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EventDrivenAnsibleConnections {
		return vs[0].([]*EventDrivenAnsibleConnections)[vs[1].(int)]
	}).(EventDrivenAnsibleConnectionsOutput)
}

type EventDrivenAnsibleConnectionsMapOutput struct{ *pulumi.OutputState }

func (EventDrivenAnsibleConnectionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EventDrivenAnsibleConnections)(nil)).Elem()
}

func (o EventDrivenAnsibleConnectionsMapOutput) ToEventDrivenAnsibleConnectionsMapOutput() EventDrivenAnsibleConnectionsMapOutput {
	return o
}

func (o EventDrivenAnsibleConnectionsMapOutput) ToEventDrivenAnsibleConnectionsMapOutputWithContext(ctx context.Context) EventDrivenAnsibleConnectionsMapOutput {
	return o
}

func (o EventDrivenAnsibleConnectionsMapOutput) MapIndex(k pulumi.StringInput) EventDrivenAnsibleConnectionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EventDrivenAnsibleConnections {
		return vs[0].(map[string]*EventDrivenAnsibleConnections)[vs[1].(string)]
	}).(EventDrivenAnsibleConnectionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventDrivenAnsibleConnectionsInput)(nil)).Elem(), &EventDrivenAnsibleConnections{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDrivenAnsibleConnectionsArrayInput)(nil)).Elem(), EventDrivenAnsibleConnectionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventDrivenAnsibleConnectionsMapInput)(nil)).Elem(), EventDrivenAnsibleConnectionsMap{})
	pulumi.RegisterOutputType(EventDrivenAnsibleConnectionsOutput{})
	pulumi.RegisterOutputType(EventDrivenAnsibleConnectionsArrayOutput{})
	pulumi.RegisterOutputType(EventDrivenAnsibleConnectionsMapOutput{})
}
