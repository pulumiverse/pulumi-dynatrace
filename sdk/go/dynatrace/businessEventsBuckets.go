// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type BusinessEventsBuckets struct {
	pulumi.CustomResourceState

	// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
	BucketName pulumi.StringOutput `pulumi:"bucketName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringOutput `pulumi:"insertAfter"`
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher pulumi.StringOutput `pulumi:"matcher"`
	// Rule name
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
}

// NewBusinessEventsBuckets registers a new resource with the given unique name, arguments, and options.
func NewBusinessEventsBuckets(ctx *pulumi.Context,
	name string, args *BusinessEventsBucketsArgs, opts ...pulumi.ResourceOption) (*BusinessEventsBuckets, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BucketName == nil {
		return nil, errors.New("invalid value for required argument 'BucketName'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Matcher == nil {
		return nil, errors.New("invalid value for required argument 'Matcher'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BusinessEventsBuckets
	err := ctx.RegisterResource("dynatrace:index/businessEventsBuckets:BusinessEventsBuckets", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBusinessEventsBuckets gets an existing BusinessEventsBuckets resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBusinessEventsBuckets(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BusinessEventsBucketsState, opts ...pulumi.ResourceOption) (*BusinessEventsBuckets, error) {
	var resource BusinessEventsBuckets
	err := ctx.ReadResource("dynatrace:index/businessEventsBuckets:BusinessEventsBuckets", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BusinessEventsBuckets resources.
type businessEventsBucketsState struct {
	// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
	BucketName *string `pulumi:"bucketName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher *string `pulumi:"matcher"`
	// Rule name
	RuleName *string `pulumi:"ruleName"`
}

type BusinessEventsBucketsState struct {
	// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
	BucketName pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher pulumi.StringPtrInput
	// Rule name
	RuleName pulumi.StringPtrInput
}

func (BusinessEventsBucketsState) ElementType() reflect.Type {
	return reflect.TypeOf((*businessEventsBucketsState)(nil)).Elem()
}

type businessEventsBucketsArgs struct {
	// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
	BucketName string `pulumi:"bucketName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher string `pulumi:"matcher"`
	// Rule name
	RuleName string `pulumi:"ruleName"`
}

// The set of arguments for constructing a BusinessEventsBuckets resource.
type BusinessEventsBucketsArgs struct {
	// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
	BucketName pulumi.StringInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// [See our documentation](https://dt-url.net/bp234rv)
	Matcher pulumi.StringInput
	// Rule name
	RuleName pulumi.StringInput
}

func (BusinessEventsBucketsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*businessEventsBucketsArgs)(nil)).Elem()
}

type BusinessEventsBucketsInput interface {
	pulumi.Input

	ToBusinessEventsBucketsOutput() BusinessEventsBucketsOutput
	ToBusinessEventsBucketsOutputWithContext(ctx context.Context) BusinessEventsBucketsOutput
}

func (*BusinessEventsBuckets) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessEventsBuckets)(nil)).Elem()
}

func (i *BusinessEventsBuckets) ToBusinessEventsBucketsOutput() BusinessEventsBucketsOutput {
	return i.ToBusinessEventsBucketsOutputWithContext(context.Background())
}

func (i *BusinessEventsBuckets) ToBusinessEventsBucketsOutputWithContext(ctx context.Context) BusinessEventsBucketsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessEventsBucketsOutput)
}

// BusinessEventsBucketsArrayInput is an input type that accepts BusinessEventsBucketsArray and BusinessEventsBucketsArrayOutput values.
// You can construct a concrete instance of `BusinessEventsBucketsArrayInput` via:
//
//	BusinessEventsBucketsArray{ BusinessEventsBucketsArgs{...} }
type BusinessEventsBucketsArrayInput interface {
	pulumi.Input

	ToBusinessEventsBucketsArrayOutput() BusinessEventsBucketsArrayOutput
	ToBusinessEventsBucketsArrayOutputWithContext(context.Context) BusinessEventsBucketsArrayOutput
}

type BusinessEventsBucketsArray []BusinessEventsBucketsInput

func (BusinessEventsBucketsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BusinessEventsBuckets)(nil)).Elem()
}

func (i BusinessEventsBucketsArray) ToBusinessEventsBucketsArrayOutput() BusinessEventsBucketsArrayOutput {
	return i.ToBusinessEventsBucketsArrayOutputWithContext(context.Background())
}

func (i BusinessEventsBucketsArray) ToBusinessEventsBucketsArrayOutputWithContext(ctx context.Context) BusinessEventsBucketsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessEventsBucketsArrayOutput)
}

// BusinessEventsBucketsMapInput is an input type that accepts BusinessEventsBucketsMap and BusinessEventsBucketsMapOutput values.
// You can construct a concrete instance of `BusinessEventsBucketsMapInput` via:
//
//	BusinessEventsBucketsMap{ "key": BusinessEventsBucketsArgs{...} }
type BusinessEventsBucketsMapInput interface {
	pulumi.Input

	ToBusinessEventsBucketsMapOutput() BusinessEventsBucketsMapOutput
	ToBusinessEventsBucketsMapOutputWithContext(context.Context) BusinessEventsBucketsMapOutput
}

type BusinessEventsBucketsMap map[string]BusinessEventsBucketsInput

func (BusinessEventsBucketsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BusinessEventsBuckets)(nil)).Elem()
}

func (i BusinessEventsBucketsMap) ToBusinessEventsBucketsMapOutput() BusinessEventsBucketsMapOutput {
	return i.ToBusinessEventsBucketsMapOutputWithContext(context.Background())
}

func (i BusinessEventsBucketsMap) ToBusinessEventsBucketsMapOutputWithContext(ctx context.Context) BusinessEventsBucketsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BusinessEventsBucketsMapOutput)
}

type BusinessEventsBucketsOutput struct{ *pulumi.OutputState }

func (BusinessEventsBucketsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BusinessEventsBuckets)(nil)).Elem()
}

func (o BusinessEventsBucketsOutput) ToBusinessEventsBucketsOutput() BusinessEventsBucketsOutput {
	return o
}

func (o BusinessEventsBucketsOutput) ToBusinessEventsBucketsOutputWithContext(ctx context.Context) BusinessEventsBucketsOutput {
	return o
}

// Events will be stored in the selected bucket. Analyze bucket contents in the [log & event viewer.](https://www.terraform.io/ui/logs-events?advancedQueryMode=true&query=fetch+bizevents)
func (o BusinessEventsBucketsOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessEventsBuckets) pulumi.StringOutput { return v.BucketName }).(pulumi.StringOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o BusinessEventsBucketsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *BusinessEventsBuckets) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
func (o BusinessEventsBucketsOutput) InsertAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessEventsBuckets) pulumi.StringOutput { return v.InsertAfter }).(pulumi.StringOutput)
}

// [See our documentation](https://dt-url.net/bp234rv)
func (o BusinessEventsBucketsOutput) Matcher() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessEventsBuckets) pulumi.StringOutput { return v.Matcher }).(pulumi.StringOutput)
}

// Rule name
func (o BusinessEventsBucketsOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *BusinessEventsBuckets) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

type BusinessEventsBucketsArrayOutput struct{ *pulumi.OutputState }

func (BusinessEventsBucketsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BusinessEventsBuckets)(nil)).Elem()
}

func (o BusinessEventsBucketsArrayOutput) ToBusinessEventsBucketsArrayOutput() BusinessEventsBucketsArrayOutput {
	return o
}

func (o BusinessEventsBucketsArrayOutput) ToBusinessEventsBucketsArrayOutputWithContext(ctx context.Context) BusinessEventsBucketsArrayOutput {
	return o
}

func (o BusinessEventsBucketsArrayOutput) Index(i pulumi.IntInput) BusinessEventsBucketsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BusinessEventsBuckets {
		return vs[0].([]*BusinessEventsBuckets)[vs[1].(int)]
	}).(BusinessEventsBucketsOutput)
}

type BusinessEventsBucketsMapOutput struct{ *pulumi.OutputState }

func (BusinessEventsBucketsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BusinessEventsBuckets)(nil)).Elem()
}

func (o BusinessEventsBucketsMapOutput) ToBusinessEventsBucketsMapOutput() BusinessEventsBucketsMapOutput {
	return o
}

func (o BusinessEventsBucketsMapOutput) ToBusinessEventsBucketsMapOutputWithContext(ctx context.Context) BusinessEventsBucketsMapOutput {
	return o
}

func (o BusinessEventsBucketsMapOutput) MapIndex(k pulumi.StringInput) BusinessEventsBucketsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BusinessEventsBuckets {
		return vs[0].(map[string]*BusinessEventsBuckets)[vs[1].(string)]
	}).(BusinessEventsBucketsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessEventsBucketsInput)(nil)).Elem(), &BusinessEventsBuckets{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessEventsBucketsArrayInput)(nil)).Elem(), BusinessEventsBucketsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BusinessEventsBucketsMapInput)(nil)).Elem(), BusinessEventsBucketsMap{})
	pulumi.RegisterOutputType(BusinessEventsBucketsOutput{})
	pulumi.RegisterOutputType(BusinessEventsBucketsArrayOutput{})
	pulumi.RegisterOutputType(BusinessEventsBucketsMapOutput{})
}
