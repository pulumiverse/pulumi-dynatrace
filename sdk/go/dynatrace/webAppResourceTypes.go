// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type WebAppResourceTypes struct {
	pulumi.CustomResourceState

	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringOutput `pulumi:"insertAfter"`
	// Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
	PrimaryResourceType pulumi.StringOutput `pulumi:"primaryResourceType"`
	// The regular expression to detect the resource.
	RegularExpression pulumi.StringOutput `pulumi:"regularExpression"`
	// The secondary type of the resource.
	SecondaryResourceType pulumi.StringPtrOutput `pulumi:"secondaryResourceType"`
}

// NewWebAppResourceTypes registers a new resource with the given unique name, arguments, and options.
func NewWebAppResourceTypes(ctx *pulumi.Context,
	name string, args *WebAppResourceTypesArgs, opts ...pulumi.ResourceOption) (*WebAppResourceTypes, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrimaryResourceType == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryResourceType'")
	}
	if args.RegularExpression == nil {
		return nil, errors.New("invalid value for required argument 'RegularExpression'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAppResourceTypes
	err := ctx.RegisterResource("dynatrace:index/webAppResourceTypes:WebAppResourceTypes", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppResourceTypes gets an existing WebAppResourceTypes resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppResourceTypes(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppResourceTypesState, opts ...pulumi.ResourceOption) (*WebAppResourceTypes, error) {
	var resource WebAppResourceTypes
	err := ctx.ReadResource("dynatrace:index/webAppResourceTypes:WebAppResourceTypes", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppResourceTypes resources.
type webAppResourceTypesState struct {
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
	PrimaryResourceType *string `pulumi:"primaryResourceType"`
	// The regular expression to detect the resource.
	RegularExpression *string `pulumi:"regularExpression"`
	// The secondary type of the resource.
	SecondaryResourceType *string `pulumi:"secondaryResourceType"`
}

type WebAppResourceTypesState struct {
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
	PrimaryResourceType pulumi.StringPtrInput
	// The regular expression to detect the resource.
	RegularExpression pulumi.StringPtrInput
	// The secondary type of the resource.
	SecondaryResourceType pulumi.StringPtrInput
}

func (WebAppResourceTypesState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppResourceTypesState)(nil)).Elem()
}

type webAppResourceTypesArgs struct {
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
	PrimaryResourceType string `pulumi:"primaryResourceType"`
	// The regular expression to detect the resource.
	RegularExpression string `pulumi:"regularExpression"`
	// The secondary type of the resource.
	SecondaryResourceType *string `pulumi:"secondaryResourceType"`
}

// The set of arguments for constructing a WebAppResourceTypes resource.
type WebAppResourceTypesArgs struct {
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
	PrimaryResourceType pulumi.StringInput
	// The regular expression to detect the resource.
	RegularExpression pulumi.StringInput
	// The secondary type of the resource.
	SecondaryResourceType pulumi.StringPtrInput
}

func (WebAppResourceTypesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppResourceTypesArgs)(nil)).Elem()
}

type WebAppResourceTypesInput interface {
	pulumi.Input

	ToWebAppResourceTypesOutput() WebAppResourceTypesOutput
	ToWebAppResourceTypesOutputWithContext(ctx context.Context) WebAppResourceTypesOutput
}

func (*WebAppResourceTypes) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppResourceTypes)(nil)).Elem()
}

func (i *WebAppResourceTypes) ToWebAppResourceTypesOutput() WebAppResourceTypesOutput {
	return i.ToWebAppResourceTypesOutputWithContext(context.Background())
}

func (i *WebAppResourceTypes) ToWebAppResourceTypesOutputWithContext(ctx context.Context) WebAppResourceTypesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppResourceTypesOutput)
}

// WebAppResourceTypesArrayInput is an input type that accepts WebAppResourceTypesArray and WebAppResourceTypesArrayOutput values.
// You can construct a concrete instance of `WebAppResourceTypesArrayInput` via:
//
//	WebAppResourceTypesArray{ WebAppResourceTypesArgs{...} }
type WebAppResourceTypesArrayInput interface {
	pulumi.Input

	ToWebAppResourceTypesArrayOutput() WebAppResourceTypesArrayOutput
	ToWebAppResourceTypesArrayOutputWithContext(context.Context) WebAppResourceTypesArrayOutput
}

type WebAppResourceTypesArray []WebAppResourceTypesInput

func (WebAppResourceTypesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppResourceTypes)(nil)).Elem()
}

func (i WebAppResourceTypesArray) ToWebAppResourceTypesArrayOutput() WebAppResourceTypesArrayOutput {
	return i.ToWebAppResourceTypesArrayOutputWithContext(context.Background())
}

func (i WebAppResourceTypesArray) ToWebAppResourceTypesArrayOutputWithContext(ctx context.Context) WebAppResourceTypesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppResourceTypesArrayOutput)
}

// WebAppResourceTypesMapInput is an input type that accepts WebAppResourceTypesMap and WebAppResourceTypesMapOutput values.
// You can construct a concrete instance of `WebAppResourceTypesMapInput` via:
//
//	WebAppResourceTypesMap{ "key": WebAppResourceTypesArgs{...} }
type WebAppResourceTypesMapInput interface {
	pulumi.Input

	ToWebAppResourceTypesMapOutput() WebAppResourceTypesMapOutput
	ToWebAppResourceTypesMapOutputWithContext(context.Context) WebAppResourceTypesMapOutput
}

type WebAppResourceTypesMap map[string]WebAppResourceTypesInput

func (WebAppResourceTypesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppResourceTypes)(nil)).Elem()
}

func (i WebAppResourceTypesMap) ToWebAppResourceTypesMapOutput() WebAppResourceTypesMapOutput {
	return i.ToWebAppResourceTypesMapOutputWithContext(context.Background())
}

func (i WebAppResourceTypesMap) ToWebAppResourceTypesMapOutputWithContext(ctx context.Context) WebAppResourceTypesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppResourceTypesMapOutput)
}

type WebAppResourceTypesOutput struct{ *pulumi.OutputState }

func (WebAppResourceTypesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppResourceTypes)(nil)).Elem()
}

func (o WebAppResourceTypesOutput) ToWebAppResourceTypesOutput() WebAppResourceTypesOutput {
	return o
}

func (o WebAppResourceTypesOutput) ToWebAppResourceTypesOutputWithContext(ctx context.Context) WebAppResourceTypesOutput {
	return o
}

// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
func (o WebAppResourceTypesOutput) InsertAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppResourceTypes) pulumi.StringOutput { return v.InsertAfter }).(pulumi.StringOutput)
}

// Possible Values: `CSS`, `IMAGE`, `OTHER`, `SCRIPT`
func (o WebAppResourceTypesOutput) PrimaryResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppResourceTypes) pulumi.StringOutput { return v.PrimaryResourceType }).(pulumi.StringOutput)
}

// The regular expression to detect the resource.
func (o WebAppResourceTypesOutput) RegularExpression() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppResourceTypes) pulumi.StringOutput { return v.RegularExpression }).(pulumi.StringOutput)
}

// The secondary type of the resource.
func (o WebAppResourceTypesOutput) SecondaryResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppResourceTypes) pulumi.StringPtrOutput { return v.SecondaryResourceType }).(pulumi.StringPtrOutput)
}

type WebAppResourceTypesArrayOutput struct{ *pulumi.OutputState }

func (WebAppResourceTypesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppResourceTypes)(nil)).Elem()
}

func (o WebAppResourceTypesArrayOutput) ToWebAppResourceTypesArrayOutput() WebAppResourceTypesArrayOutput {
	return o
}

func (o WebAppResourceTypesArrayOutput) ToWebAppResourceTypesArrayOutputWithContext(ctx context.Context) WebAppResourceTypesArrayOutput {
	return o
}

func (o WebAppResourceTypesArrayOutput) Index(i pulumi.IntInput) WebAppResourceTypesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAppResourceTypes {
		return vs[0].([]*WebAppResourceTypes)[vs[1].(int)]
	}).(WebAppResourceTypesOutput)
}

type WebAppResourceTypesMapOutput struct{ *pulumi.OutputState }

func (WebAppResourceTypesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppResourceTypes)(nil)).Elem()
}

func (o WebAppResourceTypesMapOutput) ToWebAppResourceTypesMapOutput() WebAppResourceTypesMapOutput {
	return o
}

func (o WebAppResourceTypesMapOutput) ToWebAppResourceTypesMapOutputWithContext(ctx context.Context) WebAppResourceTypesMapOutput {
	return o
}

func (o WebAppResourceTypesMapOutput) MapIndex(k pulumi.StringInput) WebAppResourceTypesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAppResourceTypes {
		return vs[0].(map[string]*WebAppResourceTypes)[vs[1].(string)]
	}).(WebAppResourceTypesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppResourceTypesInput)(nil)).Elem(), &WebAppResourceTypes{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppResourceTypesArrayInput)(nil)).Elem(), WebAppResourceTypesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppResourceTypesMapInput)(nil)).Elem(), WebAppResourceTypesMap{})
	pulumi.RegisterOutputType(WebAppResourceTypesOutput{})
	pulumi.RegisterOutputType(WebAppResourceTypesArrayOutput{})
	pulumi.RegisterOutputType(WebAppResourceTypesMapOutput{})
}
