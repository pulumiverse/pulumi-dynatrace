// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type ServicenowConnection struct {
	pulumi.CustomResourceState

	// A unique and clearly identifiable connection name to your ServiceNow instance.
	Name pulumi.StringOutput `pulumi:"name"`
	// Password of the ServiceNow user.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Possible Values: `basic`
	Type pulumi.StringOutput `pulumi:"type"`
	// URL of the ServiceNow instance.
	Url pulumi.StringOutput `pulumi:"url"`
	// Username or Email address.
	User pulumi.StringPtrOutput `pulumi:"user"`
}

// NewServicenowConnection registers a new resource with the given unique name, arguments, and options.
func NewServicenowConnection(ctx *pulumi.Context,
	name string, args *ServicenowConnectionArgs, opts ...pulumi.ResourceOption) (*ServicenowConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServicenowConnection
	err := ctx.RegisterResource("dynatrace:index/servicenowConnection:ServicenowConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicenowConnection gets an existing ServicenowConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicenowConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicenowConnectionState, opts ...pulumi.ResourceOption) (*ServicenowConnection, error) {
	var resource ServicenowConnection
	err := ctx.ReadResource("dynatrace:index/servicenowConnection:ServicenowConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicenowConnection resources.
type servicenowConnectionState struct {
	// A unique and clearly identifiable connection name to your ServiceNow instance.
	Name *string `pulumi:"name"`
	// Password of the ServiceNow user.
	Password *string `pulumi:"password"`
	// Possible Values: `basic`
	Type *string `pulumi:"type"`
	// URL of the ServiceNow instance.
	Url *string `pulumi:"url"`
	// Username or Email address.
	User *string `pulumi:"user"`
}

type ServicenowConnectionState struct {
	// A unique and clearly identifiable connection name to your ServiceNow instance.
	Name pulumi.StringPtrInput
	// Password of the ServiceNow user.
	Password pulumi.StringPtrInput
	// Possible Values: `basic`
	Type pulumi.StringPtrInput
	// URL of the ServiceNow instance.
	Url pulumi.StringPtrInput
	// Username or Email address.
	User pulumi.StringPtrInput
}

func (ServicenowConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicenowConnectionState)(nil)).Elem()
}

type servicenowConnectionArgs struct {
	// A unique and clearly identifiable connection name to your ServiceNow instance.
	Name *string `pulumi:"name"`
	// Password of the ServiceNow user.
	Password *string `pulumi:"password"`
	// Possible Values: `basic`
	Type string `pulumi:"type"`
	// URL of the ServiceNow instance.
	Url string `pulumi:"url"`
	// Username or Email address.
	User *string `pulumi:"user"`
}

// The set of arguments for constructing a ServicenowConnection resource.
type ServicenowConnectionArgs struct {
	// A unique and clearly identifiable connection name to your ServiceNow instance.
	Name pulumi.StringPtrInput
	// Password of the ServiceNow user.
	Password pulumi.StringPtrInput
	// Possible Values: `basic`
	Type pulumi.StringInput
	// URL of the ServiceNow instance.
	Url pulumi.StringInput
	// Username or Email address.
	User pulumi.StringPtrInput
}

func (ServicenowConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicenowConnectionArgs)(nil)).Elem()
}

type ServicenowConnectionInput interface {
	pulumi.Input

	ToServicenowConnectionOutput() ServicenowConnectionOutput
	ToServicenowConnectionOutputWithContext(ctx context.Context) ServicenowConnectionOutput
}

func (*ServicenowConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicenowConnection)(nil)).Elem()
}

func (i *ServicenowConnection) ToServicenowConnectionOutput() ServicenowConnectionOutput {
	return i.ToServicenowConnectionOutputWithContext(context.Background())
}

func (i *ServicenowConnection) ToServicenowConnectionOutputWithContext(ctx context.Context) ServicenowConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicenowConnectionOutput)
}

// ServicenowConnectionArrayInput is an input type that accepts ServicenowConnectionArray and ServicenowConnectionArrayOutput values.
// You can construct a concrete instance of `ServicenowConnectionArrayInput` via:
//
//	ServicenowConnectionArray{ ServicenowConnectionArgs{...} }
type ServicenowConnectionArrayInput interface {
	pulumi.Input

	ToServicenowConnectionArrayOutput() ServicenowConnectionArrayOutput
	ToServicenowConnectionArrayOutputWithContext(context.Context) ServicenowConnectionArrayOutput
}

type ServicenowConnectionArray []ServicenowConnectionInput

func (ServicenowConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicenowConnection)(nil)).Elem()
}

func (i ServicenowConnectionArray) ToServicenowConnectionArrayOutput() ServicenowConnectionArrayOutput {
	return i.ToServicenowConnectionArrayOutputWithContext(context.Background())
}

func (i ServicenowConnectionArray) ToServicenowConnectionArrayOutputWithContext(ctx context.Context) ServicenowConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicenowConnectionArrayOutput)
}

// ServicenowConnectionMapInput is an input type that accepts ServicenowConnectionMap and ServicenowConnectionMapOutput values.
// You can construct a concrete instance of `ServicenowConnectionMapInput` via:
//
//	ServicenowConnectionMap{ "key": ServicenowConnectionArgs{...} }
type ServicenowConnectionMapInput interface {
	pulumi.Input

	ToServicenowConnectionMapOutput() ServicenowConnectionMapOutput
	ToServicenowConnectionMapOutputWithContext(context.Context) ServicenowConnectionMapOutput
}

type ServicenowConnectionMap map[string]ServicenowConnectionInput

func (ServicenowConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicenowConnection)(nil)).Elem()
}

func (i ServicenowConnectionMap) ToServicenowConnectionMapOutput() ServicenowConnectionMapOutput {
	return i.ToServicenowConnectionMapOutputWithContext(context.Background())
}

func (i ServicenowConnectionMap) ToServicenowConnectionMapOutputWithContext(ctx context.Context) ServicenowConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicenowConnectionMapOutput)
}

type ServicenowConnectionOutput struct{ *pulumi.OutputState }

func (ServicenowConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicenowConnection)(nil)).Elem()
}

func (o ServicenowConnectionOutput) ToServicenowConnectionOutput() ServicenowConnectionOutput {
	return o
}

func (o ServicenowConnectionOutput) ToServicenowConnectionOutputWithContext(ctx context.Context) ServicenowConnectionOutput {
	return o
}

// A unique and clearly identifiable connection name to your ServiceNow instance.
func (o ServicenowConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicenowConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Password of the ServiceNow user.
func (o ServicenowConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicenowConnection) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Possible Values: `basic`
func (o ServicenowConnectionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicenowConnection) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// URL of the ServiceNow instance.
func (o ServicenowConnectionOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *ServicenowConnection) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

// Username or Email address.
func (o ServicenowConnectionOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServicenowConnection) pulumi.StringPtrOutput { return v.User }).(pulumi.StringPtrOutput)
}

type ServicenowConnectionArrayOutput struct{ *pulumi.OutputState }

func (ServicenowConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicenowConnection)(nil)).Elem()
}

func (o ServicenowConnectionArrayOutput) ToServicenowConnectionArrayOutput() ServicenowConnectionArrayOutput {
	return o
}

func (o ServicenowConnectionArrayOutput) ToServicenowConnectionArrayOutputWithContext(ctx context.Context) ServicenowConnectionArrayOutput {
	return o
}

func (o ServicenowConnectionArrayOutput) Index(i pulumi.IntInput) ServicenowConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServicenowConnection {
		return vs[0].([]*ServicenowConnection)[vs[1].(int)]
	}).(ServicenowConnectionOutput)
}

type ServicenowConnectionMapOutput struct{ *pulumi.OutputState }

func (ServicenowConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicenowConnection)(nil)).Elem()
}

func (o ServicenowConnectionMapOutput) ToServicenowConnectionMapOutput() ServicenowConnectionMapOutput {
	return o
}

func (o ServicenowConnectionMapOutput) ToServicenowConnectionMapOutputWithContext(ctx context.Context) ServicenowConnectionMapOutput {
	return o
}

func (o ServicenowConnectionMapOutput) MapIndex(k pulumi.StringInput) ServicenowConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServicenowConnection {
		return vs[0].(map[string]*ServicenowConnection)[vs[1].(string)]
	}).(ServicenowConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicenowConnectionInput)(nil)).Elem(), &ServicenowConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicenowConnectionArrayInput)(nil)).Elem(), ServicenowConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicenowConnectionMapInput)(nil)).Elem(), ServicenowConnectionMap{})
	pulumi.RegisterOutputType(ServicenowConnectionOutput{})
	pulumi.RegisterOutputType(ServicenowConnectionArrayOutput{})
	pulumi.RegisterOutputType(ServicenowConnectionMapOutput{})
}
