// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// The synthetic location data source allows the location ID to be retrieved based off of provided parameters.
//
// > For Provider versions earlier than v1.80.0: This data source requires the API token scope **Read synthetic monitors, locations, and nodes** (`ReadSyntheticData`)
// For Provider versions v1.80.0 and newer: This data source requires the API token scope **Read synthetic locations** (`syntheticLocations.read`)
//
// ## Example Usage
func LookupSyntheticLocation(ctx *pulumi.Context, args *LookupSyntheticLocationArgs, opts ...pulumi.InvokeOption) (*LookupSyntheticLocationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSyntheticLocationResult
	err := ctx.Invoke("dynatrace:index/getSyntheticLocation:getSyntheticLocation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSyntheticLocation.
type LookupSyntheticLocationArgs struct {
	// The cloud provider where the location is hosted.
	CloudPlatform *string  `pulumi:"cloudPlatform"`
	EntityId      *string  `pulumi:"entityId"`
	GeoLocationId *string  `pulumi:"geoLocationId"`
	Ips           []string `pulumi:"ips"`
	Name          *string  `pulumi:"name"`
	Stage         *string  `pulumi:"stage"`
	Status        *string  `pulumi:"status"`
	Type          *string  `pulumi:"type"`
}

// A collection of values returned by getSyntheticLocation.
type LookupSyntheticLocationResult struct {
	// The cloud provider where the location is hosted.
	CloudPlatform string  `pulumi:"cloudPlatform"`
	EntityId      *string `pulumi:"entityId"`
	GeoLocationId string  `pulumi:"geoLocationId"`
	// The provider-assigned unique ID for this managed resource.
	Id     string   `pulumi:"id"`
	Ips    []string `pulumi:"ips"`
	Name   *string  `pulumi:"name"`
	Stage  string   `pulumi:"stage"`
	Status string   `pulumi:"status"`
	Type   *string  `pulumi:"type"`
}

func LookupSyntheticLocationOutput(ctx *pulumi.Context, args LookupSyntheticLocationOutputArgs, opts ...pulumi.InvokeOption) LookupSyntheticLocationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSyntheticLocationResultOutput, error) {
			args := v.(LookupSyntheticLocationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dynatrace:index/getSyntheticLocation:getSyntheticLocation", args, LookupSyntheticLocationResultOutput{}, options).(LookupSyntheticLocationResultOutput), nil
		}).(LookupSyntheticLocationResultOutput)
}

// A collection of arguments for invoking getSyntheticLocation.
type LookupSyntheticLocationOutputArgs struct {
	// The cloud provider where the location is hosted.
	CloudPlatform pulumi.StringPtrInput   `pulumi:"cloudPlatform"`
	EntityId      pulumi.StringPtrInput   `pulumi:"entityId"`
	GeoLocationId pulumi.StringPtrInput   `pulumi:"geoLocationId"`
	Ips           pulumi.StringArrayInput `pulumi:"ips"`
	Name          pulumi.StringPtrInput   `pulumi:"name"`
	Stage         pulumi.StringPtrInput   `pulumi:"stage"`
	Status        pulumi.StringPtrInput   `pulumi:"status"`
	Type          pulumi.StringPtrInput   `pulumi:"type"`
}

func (LookupSyntheticLocationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSyntheticLocationArgs)(nil)).Elem()
}

// A collection of values returned by getSyntheticLocation.
type LookupSyntheticLocationResultOutput struct{ *pulumi.OutputState }

func (LookupSyntheticLocationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSyntheticLocationResult)(nil)).Elem()
}

func (o LookupSyntheticLocationResultOutput) ToLookupSyntheticLocationResultOutput() LookupSyntheticLocationResultOutput {
	return o
}

func (o LookupSyntheticLocationResultOutput) ToLookupSyntheticLocationResultOutputWithContext(ctx context.Context) LookupSyntheticLocationResultOutput {
	return o
}

// The cloud provider where the location is hosted.
func (o LookupSyntheticLocationResultOutput) CloudPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) string { return v.CloudPlatform }).(pulumi.StringOutput)
}

func (o LookupSyntheticLocationResultOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

func (o LookupSyntheticLocationResultOutput) GeoLocationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) string { return v.GeoLocationId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSyntheticLocationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSyntheticLocationResultOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o LookupSyntheticLocationResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupSyntheticLocationResultOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) string { return v.Stage }).(pulumi.StringOutput)
}

func (o LookupSyntheticLocationResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupSyntheticLocationResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupSyntheticLocationResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSyntheticLocationResultOutput{})
}
