// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// > This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)
//
// ## Dynatrace Documentation
//
// - Select a snippet format - https://docs.dynatrace.com/docs/shortlink/snippet-formats
//
// - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:rum.web.manual-insertion`)
//
// ## Resource Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dynatrace.NewWebAppManualInsertion(ctx, "#name#", &dynatrace.WebAppManualInsertionArgs{
//				ApplicationId: pulumi.String("APPLICATION-1234567890000000"),
//				CodeSnippet: &dynatrace.WebAppManualInsertionCodeSnippetArgs{
//					CodeSnippetType: pulumi.String("SYNCHRONOUSLY"),
//				},
//				JavascriptTag: &dynatrace.WebAppManualInsertionJavascriptTagArgs{
//					CacheDuration:        pulumi.String("1"),
//					CrossoriginAnonymous: pulumi.Bool(true),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type WebAppManualInsertion struct {
	pulumi.CustomResourceState

	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
	CodeSnippet WebAppManualInsertionCodeSnippetOutput `pulumi:"codeSnippet"`
	// JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
	JavascriptTag WebAppManualInsertionJavascriptTagOutput `pulumi:"javascriptTag"`
	// OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTag WebAppManualInsertionOneagentJavascriptTagPtrOutput `pulumi:"oneagentJavascriptTag"`
	// OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTagSri WebAppManualInsertionOneagentJavascriptTagSriPtrOutput `pulumi:"oneagentJavascriptTagSri"`
}

// NewWebAppManualInsertion registers a new resource with the given unique name, arguments, and options.
func NewWebAppManualInsertion(ctx *pulumi.Context,
	name string, args *WebAppManualInsertionArgs, opts ...pulumi.ResourceOption) (*WebAppManualInsertion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.CodeSnippet == nil {
		return nil, errors.New("invalid value for required argument 'CodeSnippet'")
	}
	if args.JavascriptTag == nil {
		return nil, errors.New("invalid value for required argument 'JavascriptTag'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAppManualInsertion
	err := ctx.RegisterResource("dynatrace:index/webAppManualInsertion:WebAppManualInsertion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAppManualInsertion gets an existing WebAppManualInsertion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAppManualInsertion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAppManualInsertionState, opts ...pulumi.ResourceOption) (*WebAppManualInsertion, error) {
	var resource WebAppManualInsertion
	err := ctx.ReadResource("dynatrace:index/webAppManualInsertion:WebAppManualInsertion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAppManualInsertion resources.
type webAppManualInsertionState struct {
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId *string `pulumi:"applicationId"`
	// Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
	CodeSnippet *WebAppManualInsertionCodeSnippet `pulumi:"codeSnippet"`
	// JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
	JavascriptTag *WebAppManualInsertionJavascriptTag `pulumi:"javascriptTag"`
	// OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTag *WebAppManualInsertionOneagentJavascriptTag `pulumi:"oneagentJavascriptTag"`
	// OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTagSri *WebAppManualInsertionOneagentJavascriptTagSri `pulumi:"oneagentJavascriptTagSri"`
}

type WebAppManualInsertionState struct {
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId pulumi.StringPtrInput
	// Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
	CodeSnippet WebAppManualInsertionCodeSnippetPtrInput
	// JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
	JavascriptTag WebAppManualInsertionJavascriptTagPtrInput
	// OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTag WebAppManualInsertionOneagentJavascriptTagPtrInput
	// OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTagSri WebAppManualInsertionOneagentJavascriptTagSriPtrInput
}

func (WebAppManualInsertionState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppManualInsertionState)(nil)).Elem()
}

type webAppManualInsertionArgs struct {
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId string `pulumi:"applicationId"`
	// Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
	CodeSnippet WebAppManualInsertionCodeSnippet `pulumi:"codeSnippet"`
	// JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
	JavascriptTag WebAppManualInsertionJavascriptTag `pulumi:"javascriptTag"`
	// OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTag *WebAppManualInsertionOneagentJavascriptTag `pulumi:"oneagentJavascriptTag"`
	// OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTagSri *WebAppManualInsertionOneagentJavascriptTagSri `pulumi:"oneagentJavascriptTagSri"`
}

// The set of arguments for constructing a WebAppManualInsertion resource.
type WebAppManualInsertionArgs struct {
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId pulumi.StringInput
	// Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
	CodeSnippet WebAppManualInsertionCodeSnippetInput
	// JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
	JavascriptTag WebAppManualInsertionJavascriptTagInput
	// OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTag WebAppManualInsertionOneagentJavascriptTagPtrInput
	// OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
	OneagentJavascriptTagSri WebAppManualInsertionOneagentJavascriptTagSriPtrInput
}

func (WebAppManualInsertionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAppManualInsertionArgs)(nil)).Elem()
}

type WebAppManualInsertionInput interface {
	pulumi.Input

	ToWebAppManualInsertionOutput() WebAppManualInsertionOutput
	ToWebAppManualInsertionOutputWithContext(ctx context.Context) WebAppManualInsertionOutput
}

func (*WebAppManualInsertion) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppManualInsertion)(nil)).Elem()
}

func (i *WebAppManualInsertion) ToWebAppManualInsertionOutput() WebAppManualInsertionOutput {
	return i.ToWebAppManualInsertionOutputWithContext(context.Background())
}

func (i *WebAppManualInsertion) ToWebAppManualInsertionOutputWithContext(ctx context.Context) WebAppManualInsertionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppManualInsertionOutput)
}

// WebAppManualInsertionArrayInput is an input type that accepts WebAppManualInsertionArray and WebAppManualInsertionArrayOutput values.
// You can construct a concrete instance of `WebAppManualInsertionArrayInput` via:
//
//	WebAppManualInsertionArray{ WebAppManualInsertionArgs{...} }
type WebAppManualInsertionArrayInput interface {
	pulumi.Input

	ToWebAppManualInsertionArrayOutput() WebAppManualInsertionArrayOutput
	ToWebAppManualInsertionArrayOutputWithContext(context.Context) WebAppManualInsertionArrayOutput
}

type WebAppManualInsertionArray []WebAppManualInsertionInput

func (WebAppManualInsertionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppManualInsertion)(nil)).Elem()
}

func (i WebAppManualInsertionArray) ToWebAppManualInsertionArrayOutput() WebAppManualInsertionArrayOutput {
	return i.ToWebAppManualInsertionArrayOutputWithContext(context.Background())
}

func (i WebAppManualInsertionArray) ToWebAppManualInsertionArrayOutputWithContext(ctx context.Context) WebAppManualInsertionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppManualInsertionArrayOutput)
}

// WebAppManualInsertionMapInput is an input type that accepts WebAppManualInsertionMap and WebAppManualInsertionMapOutput values.
// You can construct a concrete instance of `WebAppManualInsertionMapInput` via:
//
//	WebAppManualInsertionMap{ "key": WebAppManualInsertionArgs{...} }
type WebAppManualInsertionMapInput interface {
	pulumi.Input

	ToWebAppManualInsertionMapOutput() WebAppManualInsertionMapOutput
	ToWebAppManualInsertionMapOutputWithContext(context.Context) WebAppManualInsertionMapOutput
}

type WebAppManualInsertionMap map[string]WebAppManualInsertionInput

func (WebAppManualInsertionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppManualInsertion)(nil)).Elem()
}

func (i WebAppManualInsertionMap) ToWebAppManualInsertionMapOutput() WebAppManualInsertionMapOutput {
	return i.ToWebAppManualInsertionMapOutputWithContext(context.Background())
}

func (i WebAppManualInsertionMap) ToWebAppManualInsertionMapOutputWithContext(ctx context.Context) WebAppManualInsertionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppManualInsertionMapOutput)
}

type WebAppManualInsertionOutput struct{ *pulumi.OutputState }

func (WebAppManualInsertionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppManualInsertion)(nil)).Elem()
}

func (o WebAppManualInsertionOutput) ToWebAppManualInsertionOutput() WebAppManualInsertionOutput {
	return o
}

func (o WebAppManualInsertionOutput) ToWebAppManualInsertionOutputWithContext(ctx context.Context) WebAppManualInsertionOutput {
	return o
}

// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
func (o WebAppManualInsertionOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAppManualInsertion) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// Code snippet is a piece of inline code that implements basic functionality and loads the full functionality either synchronously or deferred. Even though it implements an update mechanism, regular updates are still required to guarantee compatibility.
func (o WebAppManualInsertionOutput) CodeSnippet() WebAppManualInsertionCodeSnippetOutput {
	return o.ApplyT(func(v *WebAppManualInsertion) WebAppManualInsertionCodeSnippetOutput { return v.CodeSnippet }).(WebAppManualInsertionCodeSnippetOutput)
}

// JavaScript tag references an external file containing monitoring code and configuration. Due to its dynamic update mechanism, it is recommended for most use cases.
func (o WebAppManualInsertionOutput) JavascriptTag() WebAppManualInsertionJavascriptTagOutput {
	return o.ApplyT(func(v *WebAppManualInsertion) WebAppManualInsertionJavascriptTagOutput { return v.JavascriptTag }).(WebAppManualInsertionJavascriptTagOutput)
}

// OneAgent JavaScript tag includes configuration and a reference to an external file containing the monitoring code. It needs to be updated after configuration changes and monitoring code updates.
func (o WebAppManualInsertionOutput) OneagentJavascriptTag() WebAppManualInsertionOneagentJavascriptTagPtrOutput {
	return o.ApplyT(func(v *WebAppManualInsertion) WebAppManualInsertionOneagentJavascriptTagPtrOutput {
		return v.OneagentJavascriptTag
	}).(WebAppManualInsertionOneagentJavascriptTagPtrOutput)
}

// OneAgent JavaScript tag with SRI includes configuration, a reference to an external file containing the monitoring code, and a hash that allows the browser to verify the integrity of the monitoring code before executing it. It needs to be updated after configuration changes and monitoring code updates.
func (o WebAppManualInsertionOutput) OneagentJavascriptTagSri() WebAppManualInsertionOneagentJavascriptTagSriPtrOutput {
	return o.ApplyT(func(v *WebAppManualInsertion) WebAppManualInsertionOneagentJavascriptTagSriPtrOutput {
		return v.OneagentJavascriptTagSri
	}).(WebAppManualInsertionOneagentJavascriptTagSriPtrOutput)
}

type WebAppManualInsertionArrayOutput struct{ *pulumi.OutputState }

func (WebAppManualInsertionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAppManualInsertion)(nil)).Elem()
}

func (o WebAppManualInsertionArrayOutput) ToWebAppManualInsertionArrayOutput() WebAppManualInsertionArrayOutput {
	return o
}

func (o WebAppManualInsertionArrayOutput) ToWebAppManualInsertionArrayOutputWithContext(ctx context.Context) WebAppManualInsertionArrayOutput {
	return o
}

func (o WebAppManualInsertionArrayOutput) Index(i pulumi.IntInput) WebAppManualInsertionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAppManualInsertion {
		return vs[0].([]*WebAppManualInsertion)[vs[1].(int)]
	}).(WebAppManualInsertionOutput)
}

type WebAppManualInsertionMapOutput struct{ *pulumi.OutputState }

func (WebAppManualInsertionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAppManualInsertion)(nil)).Elem()
}

func (o WebAppManualInsertionMapOutput) ToWebAppManualInsertionMapOutput() WebAppManualInsertionMapOutput {
	return o
}

func (o WebAppManualInsertionMapOutput) ToWebAppManualInsertionMapOutputWithContext(ctx context.Context) WebAppManualInsertionMapOutput {
	return o
}

func (o WebAppManualInsertionMapOutput) MapIndex(k pulumi.StringInput) WebAppManualInsertionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAppManualInsertion {
		return vs[0].(map[string]*WebAppManualInsertion)[vs[1].(string)]
	}).(WebAppManualInsertionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppManualInsertionInput)(nil)).Elem(), &WebAppManualInsertion{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppManualInsertionArrayInput)(nil)).Elem(), WebAppManualInsertionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppManualInsertionMapInput)(nil)).Elem(), WebAppManualInsertionMap{})
	pulumi.RegisterOutputType(WebAppManualInsertionOutput{})
	pulumi.RegisterOutputType(WebAppManualInsertionArrayOutput{})
	pulumi.RegisterOutputType(WebAppManualInsertionMapOutput{})
}
