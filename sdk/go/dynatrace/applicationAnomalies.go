// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type ApplicationAnomalies struct {
	pulumi.CustomResourceState

	// Configuration of failure rate increase detection
	FailureRate ApplicationAnomaliesFailureRatePtrOutput `pulumi:"failureRate"`
	// Configuration of response time degradation detection
	ResponseTime ApplicationAnomaliesResponseTimePtrOutput `pulumi:"responseTime"`
	// Configuration for anomalies regarding traffic
	Traffic ApplicationAnomaliesTrafficPtrOutput `pulumi:"traffic"`
}

// NewApplicationAnomalies registers a new resource with the given unique name, arguments, and options.
func NewApplicationAnomalies(ctx *pulumi.Context,
	name string, args *ApplicationAnomaliesArgs, opts ...pulumi.ResourceOption) (*ApplicationAnomalies, error) {
	if args == nil {
		args = &ApplicationAnomaliesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationAnomalies
	err := ctx.RegisterResource("dynatrace:index/applicationAnomalies:ApplicationAnomalies", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationAnomalies gets an existing ApplicationAnomalies resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationAnomalies(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationAnomaliesState, opts ...pulumi.ResourceOption) (*ApplicationAnomalies, error) {
	var resource ApplicationAnomalies
	err := ctx.ReadResource("dynatrace:index/applicationAnomalies:ApplicationAnomalies", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationAnomalies resources.
type applicationAnomaliesState struct {
	// Configuration of failure rate increase detection
	FailureRate *ApplicationAnomaliesFailureRate `pulumi:"failureRate"`
	// Configuration of response time degradation detection
	ResponseTime *ApplicationAnomaliesResponseTime `pulumi:"responseTime"`
	// Configuration for anomalies regarding traffic
	Traffic *ApplicationAnomaliesTraffic `pulumi:"traffic"`
}

type ApplicationAnomaliesState struct {
	// Configuration of failure rate increase detection
	FailureRate ApplicationAnomaliesFailureRatePtrInput
	// Configuration of response time degradation detection
	ResponseTime ApplicationAnomaliesResponseTimePtrInput
	// Configuration for anomalies regarding traffic
	Traffic ApplicationAnomaliesTrafficPtrInput
}

func (ApplicationAnomaliesState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationAnomaliesState)(nil)).Elem()
}

type applicationAnomaliesArgs struct {
	// Configuration of failure rate increase detection
	FailureRate *ApplicationAnomaliesFailureRate `pulumi:"failureRate"`
	// Configuration of response time degradation detection
	ResponseTime *ApplicationAnomaliesResponseTime `pulumi:"responseTime"`
	// Configuration for anomalies regarding traffic
	Traffic *ApplicationAnomaliesTraffic `pulumi:"traffic"`
}

// The set of arguments for constructing a ApplicationAnomalies resource.
type ApplicationAnomaliesArgs struct {
	// Configuration of failure rate increase detection
	FailureRate ApplicationAnomaliesFailureRatePtrInput
	// Configuration of response time degradation detection
	ResponseTime ApplicationAnomaliesResponseTimePtrInput
	// Configuration for anomalies regarding traffic
	Traffic ApplicationAnomaliesTrafficPtrInput
}

func (ApplicationAnomaliesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationAnomaliesArgs)(nil)).Elem()
}

type ApplicationAnomaliesInput interface {
	pulumi.Input

	ToApplicationAnomaliesOutput() ApplicationAnomaliesOutput
	ToApplicationAnomaliesOutputWithContext(ctx context.Context) ApplicationAnomaliesOutput
}

func (*ApplicationAnomalies) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAnomalies)(nil)).Elem()
}

func (i *ApplicationAnomalies) ToApplicationAnomaliesOutput() ApplicationAnomaliesOutput {
	return i.ToApplicationAnomaliesOutputWithContext(context.Background())
}

func (i *ApplicationAnomalies) ToApplicationAnomaliesOutputWithContext(ctx context.Context) ApplicationAnomaliesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAnomaliesOutput)
}

// ApplicationAnomaliesArrayInput is an input type that accepts ApplicationAnomaliesArray and ApplicationAnomaliesArrayOutput values.
// You can construct a concrete instance of `ApplicationAnomaliesArrayInput` via:
//
//	ApplicationAnomaliesArray{ ApplicationAnomaliesArgs{...} }
type ApplicationAnomaliesArrayInput interface {
	pulumi.Input

	ToApplicationAnomaliesArrayOutput() ApplicationAnomaliesArrayOutput
	ToApplicationAnomaliesArrayOutputWithContext(context.Context) ApplicationAnomaliesArrayOutput
}

type ApplicationAnomaliesArray []ApplicationAnomaliesInput

func (ApplicationAnomaliesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationAnomalies)(nil)).Elem()
}

func (i ApplicationAnomaliesArray) ToApplicationAnomaliesArrayOutput() ApplicationAnomaliesArrayOutput {
	return i.ToApplicationAnomaliesArrayOutputWithContext(context.Background())
}

func (i ApplicationAnomaliesArray) ToApplicationAnomaliesArrayOutputWithContext(ctx context.Context) ApplicationAnomaliesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAnomaliesArrayOutput)
}

// ApplicationAnomaliesMapInput is an input type that accepts ApplicationAnomaliesMap and ApplicationAnomaliesMapOutput values.
// You can construct a concrete instance of `ApplicationAnomaliesMapInput` via:
//
//	ApplicationAnomaliesMap{ "key": ApplicationAnomaliesArgs{...} }
type ApplicationAnomaliesMapInput interface {
	pulumi.Input

	ToApplicationAnomaliesMapOutput() ApplicationAnomaliesMapOutput
	ToApplicationAnomaliesMapOutputWithContext(context.Context) ApplicationAnomaliesMapOutput
}

type ApplicationAnomaliesMap map[string]ApplicationAnomaliesInput

func (ApplicationAnomaliesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationAnomalies)(nil)).Elem()
}

func (i ApplicationAnomaliesMap) ToApplicationAnomaliesMapOutput() ApplicationAnomaliesMapOutput {
	return i.ToApplicationAnomaliesMapOutputWithContext(context.Background())
}

func (i ApplicationAnomaliesMap) ToApplicationAnomaliesMapOutputWithContext(ctx context.Context) ApplicationAnomaliesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAnomaliesMapOutput)
}

type ApplicationAnomaliesOutput struct{ *pulumi.OutputState }

func (ApplicationAnomaliesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAnomalies)(nil)).Elem()
}

func (o ApplicationAnomaliesOutput) ToApplicationAnomaliesOutput() ApplicationAnomaliesOutput {
	return o
}

func (o ApplicationAnomaliesOutput) ToApplicationAnomaliesOutputWithContext(ctx context.Context) ApplicationAnomaliesOutput {
	return o
}

// Configuration of failure rate increase detection
func (o ApplicationAnomaliesOutput) FailureRate() ApplicationAnomaliesFailureRatePtrOutput {
	return o.ApplyT(func(v *ApplicationAnomalies) ApplicationAnomaliesFailureRatePtrOutput { return v.FailureRate }).(ApplicationAnomaliesFailureRatePtrOutput)
}

// Configuration of response time degradation detection
func (o ApplicationAnomaliesOutput) ResponseTime() ApplicationAnomaliesResponseTimePtrOutput {
	return o.ApplyT(func(v *ApplicationAnomalies) ApplicationAnomaliesResponseTimePtrOutput { return v.ResponseTime }).(ApplicationAnomaliesResponseTimePtrOutput)
}

// Configuration for anomalies regarding traffic
func (o ApplicationAnomaliesOutput) Traffic() ApplicationAnomaliesTrafficPtrOutput {
	return o.ApplyT(func(v *ApplicationAnomalies) ApplicationAnomaliesTrafficPtrOutput { return v.Traffic }).(ApplicationAnomaliesTrafficPtrOutput)
}

type ApplicationAnomaliesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAnomaliesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationAnomalies)(nil)).Elem()
}

func (o ApplicationAnomaliesArrayOutput) ToApplicationAnomaliesArrayOutput() ApplicationAnomaliesArrayOutput {
	return o
}

func (o ApplicationAnomaliesArrayOutput) ToApplicationAnomaliesArrayOutputWithContext(ctx context.Context) ApplicationAnomaliesArrayOutput {
	return o
}

func (o ApplicationAnomaliesArrayOutput) Index(i pulumi.IntInput) ApplicationAnomaliesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationAnomalies {
		return vs[0].([]*ApplicationAnomalies)[vs[1].(int)]
	}).(ApplicationAnomaliesOutput)
}

type ApplicationAnomaliesMapOutput struct{ *pulumi.OutputState }

func (ApplicationAnomaliesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationAnomalies)(nil)).Elem()
}

func (o ApplicationAnomaliesMapOutput) ToApplicationAnomaliesMapOutput() ApplicationAnomaliesMapOutput {
	return o
}

func (o ApplicationAnomaliesMapOutput) ToApplicationAnomaliesMapOutputWithContext(ctx context.Context) ApplicationAnomaliesMapOutput {
	return o
}

func (o ApplicationAnomaliesMapOutput) MapIndex(k pulumi.StringInput) ApplicationAnomaliesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationAnomalies {
		return vs[0].(map[string]*ApplicationAnomalies)[vs[1].(string)]
	}).(ApplicationAnomaliesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAnomaliesInput)(nil)).Elem(), &ApplicationAnomalies{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAnomaliesArrayInput)(nil)).Elem(), ApplicationAnomaliesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAnomaliesMapInput)(nil)).Elem(), ApplicationAnomaliesMap{})
	pulumi.RegisterOutputType(ApplicationAnomaliesOutput{})
	pulumi.RegisterOutputType(ApplicationAnomaliesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationAnomaliesMapOutput{})
}
