// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

var _ = internal.GetEnvOrDefault

type WebApplicationConversionGoalsGoal struct {
	// Configuration of a destination-based conversion goal
	Destination *WebApplicationConversionGoalsGoalDestination `pulumi:"destination"`
	// The ID of conversion goal.
	Id *string `pulumi:"id"`
	// The name of the conversion goal. Valid length within 1 and 50 characters.
	Name string `pulumi:"name"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type *string `pulumi:"type"`
	// Configuration of a destination-based conversion goal
	UserAction *WebApplicationConversionGoalsGoalUserAction `pulumi:"userAction"`
	// Configuration of a destination-based conversion goal
	VisitDuration *WebApplicationConversionGoalsGoalVisitDuration `pulumi:"visitDuration"`
	// Configuration of a destination-based conversion goal
	VisitNumAction *WebApplicationConversionGoalsGoalVisitNumAction `pulumi:"visitNumAction"`
}

// WebApplicationConversionGoalsGoalInput is an input type that accepts WebApplicationConversionGoalsGoalArgs and WebApplicationConversionGoalsGoalOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalInput` via:
//
//	WebApplicationConversionGoalsGoalArgs{...}
type WebApplicationConversionGoalsGoalInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput
	ToWebApplicationConversionGoalsGoalOutputWithContext(context.Context) WebApplicationConversionGoalsGoalOutput
}

type WebApplicationConversionGoalsGoalArgs struct {
	// Configuration of a destination-based conversion goal
	Destination WebApplicationConversionGoalsGoalDestinationPtrInput `pulumi:"destination"`
	// The ID of conversion goal.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the conversion goal. Valid length within 1 and 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Configuration of a destination-based conversion goal
	UserAction WebApplicationConversionGoalsGoalUserActionPtrInput `pulumi:"userAction"`
	// Configuration of a destination-based conversion goal
	VisitDuration WebApplicationConversionGoalsGoalVisitDurationPtrInput `pulumi:"visitDuration"`
	// Configuration of a destination-based conversion goal
	VisitNumAction WebApplicationConversionGoalsGoalVisitNumActionPtrInput `pulumi:"visitNumAction"`
}

func (WebApplicationConversionGoalsGoalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalArgs) ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput {
	return i.ToWebApplicationConversionGoalsGoalOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalArgs) ToWebApplicationConversionGoalsGoalOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalOutput)
}

// WebApplicationConversionGoalsGoalArrayInput is an input type that accepts WebApplicationConversionGoalsGoalArray and WebApplicationConversionGoalsGoalArrayOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalArrayInput` via:
//
//	WebApplicationConversionGoalsGoalArray{ WebApplicationConversionGoalsGoalArgs{...} }
type WebApplicationConversionGoalsGoalArrayInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput
	ToWebApplicationConversionGoalsGoalArrayOutputWithContext(context.Context) WebApplicationConversionGoalsGoalArrayOutput
}

type WebApplicationConversionGoalsGoalArray []WebApplicationConversionGoalsGoalInput

func (WebApplicationConversionGoalsGoalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalArray) ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput {
	return i.ToWebApplicationConversionGoalsGoalArrayOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalArray) ToWebApplicationConversionGoalsGoalArrayOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalArrayOutput)
}

type WebApplicationConversionGoalsGoalOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalOutput) ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalOutput) ToWebApplicationConversionGoalsGoalOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalOutput {
	return o
}

// Configuration of a destination-based conversion goal
func (o WebApplicationConversionGoalsGoalOutput) Destination() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalDestination {
		return v.Destination
	}).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

// The ID of conversion goal.
func (o WebApplicationConversionGoalsGoalOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the conversion goal. Valid length within 1 and 50 characters.
func (o WebApplicationConversionGoalsGoalOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
func (o WebApplicationConversionGoalsGoalOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Configuration of a destination-based conversion goal
func (o WebApplicationConversionGoalsGoalOutput) UserAction() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalUserAction {
		return v.UserAction
	}).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

// Configuration of a destination-based conversion goal
func (o WebApplicationConversionGoalsGoalOutput) VisitDuration() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalVisitDuration {
		return v.VisitDuration
	}).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

// Configuration of a destination-based conversion goal
func (o WebApplicationConversionGoalsGoalOutput) VisitNumAction() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalVisitNumAction {
		return v.VisitNumAction
	}).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

type WebApplicationConversionGoalsGoalArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalArrayOutput) ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalArrayOutput) ToWebApplicationConversionGoalsGoalArrayOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalArrayOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalArrayOutput) Index(i pulumi.IntInput) WebApplicationConversionGoalsGoalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationConversionGoalsGoal {
		return vs[0].([]WebApplicationConversionGoalsGoal)[vs[1].(int)]
	}).(WebApplicationConversionGoalsGoalOutput)
}

type WebApplicationConversionGoalsGoalDestination struct {
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType *string `pulumi:"matchType"`
	// The path to be reached to hit the conversion goal
	UrlOrPath string `pulumi:"urlOrPath"`
}

// WebApplicationConversionGoalsGoalDestinationInput is an input type that accepts WebApplicationConversionGoalsGoalDestinationArgs and WebApplicationConversionGoalsGoalDestinationOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalDestinationInput` via:
//
//	WebApplicationConversionGoalsGoalDestinationArgs{...}
type WebApplicationConversionGoalsGoalDestinationInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput
	ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(context.Context) WebApplicationConversionGoalsGoalDestinationOutput
}

type WebApplicationConversionGoalsGoalDestinationArgs struct {
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
	// The path to be reached to hit the conversion goal
	UrlOrPath pulumi.StringInput `pulumi:"urlOrPath"`
}

func (WebApplicationConversionGoalsGoalDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationOutput)
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationOutput).ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalDestinationPtrInput is an input type that accepts WebApplicationConversionGoalsGoalDestinationArgs, WebApplicationConversionGoalsGoalDestinationPtr and WebApplicationConversionGoalsGoalDestinationPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalDestinationPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalDestinationArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalDestinationPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput
	ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput
}

type webApplicationConversionGoalsGoalDestinationPtrType WebApplicationConversionGoalsGoalDestinationArgs

func WebApplicationConversionGoalsGoalDestinationPtr(v *WebApplicationConversionGoalsGoalDestinationArgs) WebApplicationConversionGoalsGoalDestinationPtrInput {
	return (*webApplicationConversionGoalsGoalDestinationPtrType)(v)
}

func (*webApplicationConversionGoalsGoalDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalDestinationPtrType) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalDestinationPtrType) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

type WebApplicationConversionGoalsGoalDestinationOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalDestination) *WebApplicationConversionGoalsGoalDestination {
		return &v
	}).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

// The match is case-sensitive (`true`) or (`false`)
func (o WebApplicationConversionGoalsGoalDestinationOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
func (o WebApplicationConversionGoalsGoalDestinationOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

// The path to be reached to hit the conversion goal
func (o WebApplicationConversionGoalsGoalDestinationOutput) UrlOrPath() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) string { return v.UrlOrPath }).(pulumi.StringOutput)
}

type WebApplicationConversionGoalsGoalDestinationPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) Elem() WebApplicationConversionGoalsGoalDestinationOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) WebApplicationConversionGoalsGoalDestination {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalDestination
		return ret
	}).(WebApplicationConversionGoalsGoalDestinationOutput)
}

// The match is case-sensitive (`true`) or (`false`)
func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *string {
		if v == nil {
			return nil
		}
		return v.MatchType
	}).(pulumi.StringPtrOutput)
}

// The path to be reached to hit the conversion goal
func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) UrlOrPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *string {
		if v == nil {
			return nil
		}
		return &v.UrlOrPath
	}).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalUserAction struct {
	// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
	ActionType *string `pulumi:"actionType"`
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
	MatchEntity *string `pulumi:"matchEntity"`
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType *string `pulumi:"matchType"`
	// The value to be matched to hit the conversion goal
	Value *string `pulumi:"value"`
}

// WebApplicationConversionGoalsGoalUserActionInput is an input type that accepts WebApplicationConversionGoalsGoalUserActionArgs and WebApplicationConversionGoalsGoalUserActionOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalUserActionInput` via:
//
//	WebApplicationConversionGoalsGoalUserActionArgs{...}
type WebApplicationConversionGoalsGoalUserActionInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput
	ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(context.Context) WebApplicationConversionGoalsGoalUserActionOutput
}

type WebApplicationConversionGoalsGoalUserActionArgs struct {
	// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
	MatchEntity pulumi.StringPtrInput `pulumi:"matchEntity"`
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
	// The value to be matched to hit the conversion goal
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WebApplicationConversionGoalsGoalUserActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionOutput)
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionOutput).ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalUserActionPtrInput is an input type that accepts WebApplicationConversionGoalsGoalUserActionArgs, WebApplicationConversionGoalsGoalUserActionPtr and WebApplicationConversionGoalsGoalUserActionPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalUserActionPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalUserActionArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalUserActionPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput
	ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput
}

type webApplicationConversionGoalsGoalUserActionPtrType WebApplicationConversionGoalsGoalUserActionArgs

func WebApplicationConversionGoalsGoalUserActionPtr(v *WebApplicationConversionGoalsGoalUserActionArgs) WebApplicationConversionGoalsGoalUserActionPtrInput {
	return (*webApplicationConversionGoalsGoalUserActionPtrType)(v)
}

func (*webApplicationConversionGoalsGoalUserActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalUserActionPtrType) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalUserActionPtrType) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

type WebApplicationConversionGoalsGoalUserActionOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalUserActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalUserAction) *WebApplicationConversionGoalsGoalUserAction {
		return &v
	}).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
func (o WebApplicationConversionGoalsGoalUserActionOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// The match is case-sensitive (`true`) or (`false`)
func (o WebApplicationConversionGoalsGoalUserActionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
func (o WebApplicationConversionGoalsGoalUserActionOutput) MatchEntity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.MatchEntity }).(pulumi.StringPtrOutput)
}

// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
func (o WebApplicationConversionGoalsGoalUserActionOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

// The value to be matched to hit the conversion goal
func (o WebApplicationConversionGoalsGoalUserActionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalUserActionPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalUserActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) Elem() WebApplicationConversionGoalsGoalUserActionOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) WebApplicationConversionGoalsGoalUserAction {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalUserAction
		return ret
	}).(WebApplicationConversionGoalsGoalUserActionOutput)
}

// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// The match is case-sensitive (`true`) or (`false`)
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) MatchEntity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.MatchEntity
	}).(pulumi.StringPtrOutput)
}

// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.MatchType
	}).(pulumi.StringPtrOutput)
}

// The value to be matched to hit the conversion goal
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitDuration struct {
	// The duration of session to hit the conversion goal, in milliseconds
	Duration int `pulumi:"duration"`
}

// WebApplicationConversionGoalsGoalVisitDurationInput is an input type that accepts WebApplicationConversionGoalsGoalVisitDurationArgs and WebApplicationConversionGoalsGoalVisitDurationOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitDurationInput` via:
//
//	WebApplicationConversionGoalsGoalVisitDurationArgs{...}
type WebApplicationConversionGoalsGoalVisitDurationInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput
	ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput
}

type WebApplicationConversionGoalsGoalVisitDurationArgs struct {
	// The duration of session to hit the conversion goal, in milliseconds
	Duration pulumi.IntInput `pulumi:"duration"`
}

func (WebApplicationConversionGoalsGoalVisitDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationOutput)
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationOutput).ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalVisitDurationPtrInput is an input type that accepts WebApplicationConversionGoalsGoalVisitDurationArgs, WebApplicationConversionGoalsGoalVisitDurationPtr and WebApplicationConversionGoalsGoalVisitDurationPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitDurationPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalVisitDurationArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalVisitDurationPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput
	ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput
}

type webApplicationConversionGoalsGoalVisitDurationPtrType WebApplicationConversionGoalsGoalVisitDurationArgs

func WebApplicationConversionGoalsGoalVisitDurationPtr(v *WebApplicationConversionGoalsGoalVisitDurationArgs) WebApplicationConversionGoalsGoalVisitDurationPtrInput {
	return (*webApplicationConversionGoalsGoalVisitDurationPtrType)(v)
}

func (*webApplicationConversionGoalsGoalVisitDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalVisitDurationPtrType) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalVisitDurationPtrType) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitDurationOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalVisitDuration) *WebApplicationConversionGoalsGoalVisitDuration {
		return &v
	}).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

// The duration of session to hit the conversion goal, in milliseconds
func (o WebApplicationConversionGoalsGoalVisitDurationOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalVisitDuration) int { return v.Duration }).(pulumi.IntOutput)
}

type WebApplicationConversionGoalsGoalVisitDurationPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) Elem() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitDuration) WebApplicationConversionGoalsGoalVisitDuration {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalVisitDuration
		return ret
	}).(WebApplicationConversionGoalsGoalVisitDurationOutput)
}

// The duration of session to hit the conversion goal, in milliseconds
func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitDuration) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumAction struct {
	// The number of user actions to hit the conversion goal
	NumUserActions *int `pulumi:"numUserActions"`
}

// WebApplicationConversionGoalsGoalVisitNumActionInput is an input type that accepts WebApplicationConversionGoalsGoalVisitNumActionArgs and WebApplicationConversionGoalsGoalVisitNumActionOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitNumActionInput` via:
//
//	WebApplicationConversionGoalsGoalVisitNumActionArgs{...}
type WebApplicationConversionGoalsGoalVisitNumActionInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput
	ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput
}

type WebApplicationConversionGoalsGoalVisitNumActionArgs struct {
	// The number of user actions to hit the conversion goal
	NumUserActions pulumi.IntPtrInput `pulumi:"numUserActions"`
}

func (WebApplicationConversionGoalsGoalVisitNumActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionOutput)
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionOutput).ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalVisitNumActionPtrInput is an input type that accepts WebApplicationConversionGoalsGoalVisitNumActionArgs, WebApplicationConversionGoalsGoalVisitNumActionPtr and WebApplicationConversionGoalsGoalVisitNumActionPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitNumActionPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalVisitNumActionArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalVisitNumActionPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput
	ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput
}

type webApplicationConversionGoalsGoalVisitNumActionPtrType WebApplicationConversionGoalsGoalVisitNumActionArgs

func WebApplicationConversionGoalsGoalVisitNumActionPtr(v *WebApplicationConversionGoalsGoalVisitNumActionArgs) WebApplicationConversionGoalsGoalVisitNumActionPtrInput {
	return (*webApplicationConversionGoalsGoalVisitNumActionPtrType)(v)
}

func (*webApplicationConversionGoalsGoalVisitNumActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalVisitNumActionPtrType) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalVisitNumActionPtrType) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumActionOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitNumActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalVisitNumAction) *WebApplicationConversionGoalsGoalVisitNumAction {
		return &v
	}).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

// The number of user actions to hit the conversion goal
func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) NumUserActions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalVisitNumAction) *int { return v.NumUserActions }).(pulumi.IntPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumActionPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) Elem() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitNumAction) WebApplicationConversionGoalsGoalVisitNumAction {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalVisitNumAction
		return ret
	}).(WebApplicationConversionGoalsGoalVisitNumActionOutput)
}

// The number of user actions to hit the conversion goal
func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) NumUserActions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitNumAction) *int {
		if v == nil {
			return nil
		}
		return v.NumUserActions
	}).(pulumi.IntPtrOutput)
}

type WebApplicationCustomActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold int `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold int `pulumi:"toleratedThreshold"`
}

// WebApplicationCustomActionApdexSettingsInput is an input type that accepts WebApplicationCustomActionApdexSettingsArgs and WebApplicationCustomActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationCustomActionApdexSettingsInput` via:
//
//	WebApplicationCustomActionApdexSettingsArgs{...}
type WebApplicationCustomActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput
	ToWebApplicationCustomActionApdexSettingsOutputWithContext(context.Context) WebApplicationCustomActionApdexSettingsOutput
}

type WebApplicationCustomActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntInput `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationCustomActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput {
	return i.ToWebApplicationCustomActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsOutput)
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return i.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsOutput).ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationCustomActionApdexSettingsPtrInput is an input type that accepts WebApplicationCustomActionApdexSettingsArgs, WebApplicationCustomActionApdexSettingsPtr and WebApplicationCustomActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationCustomActionApdexSettingsPtrInput` via:
//
//	        WebApplicationCustomActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationCustomActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput
	ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationCustomActionApdexSettingsPtrOutput
}

type webApplicationCustomActionApdexSettingsPtrType WebApplicationCustomActionApdexSettingsArgs

func WebApplicationCustomActionApdexSettingsPtr(v *WebApplicationCustomActionApdexSettingsArgs) WebApplicationCustomActionApdexSettingsPtrInput {
	return (*webApplicationCustomActionApdexSettingsPtrType)(v)
}

func (*webApplicationCustomActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationCustomActionApdexSettingsPtrType) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return i.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationCustomActionApdexSettingsPtrType) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsPtrOutput)
}

type WebApplicationCustomActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationCustomActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return o.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationCustomActionApdexSettings) *WebApplicationCustomActionApdexSettings {
		return &v
	}).(WebApplicationCustomActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) int { return v.FrustratingFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) int { return v.FrustratingThreshold }).(pulumi.IntOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationCustomActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) int { return v.ToleratedFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) int { return v.ToleratedThreshold }).(pulumi.IntOutput)
}

type WebApplicationCustomActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationCustomActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) Elem() WebApplicationCustomActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) WebApplicationCustomActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationCustomActionApdexSettings
		return ret
	}).(WebApplicationCustomActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationCustomActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationKeyUserAction struct {
	// Configuration of the key user action
	Actions []WebApplicationKeyUserActionAction `pulumi:"actions"`
}

// WebApplicationKeyUserActionInput is an input type that accepts WebApplicationKeyUserActionArgs and WebApplicationKeyUserActionOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionInput` via:
//
//	WebApplicationKeyUserActionArgs{...}
type WebApplicationKeyUserActionInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput
	ToWebApplicationKeyUserActionOutputWithContext(context.Context) WebApplicationKeyUserActionOutput
}

type WebApplicationKeyUserActionArgs struct {
	// Configuration of the key user action
	Actions WebApplicationKeyUserActionActionArrayInput `pulumi:"actions"`
}

func (WebApplicationKeyUserActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionArgs) ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput {
	return i.ToWebApplicationKeyUserActionOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionArgs) ToWebApplicationKeyUserActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionOutput)
}

// WebApplicationKeyUserActionArrayInput is an input type that accepts WebApplicationKeyUserActionArray and WebApplicationKeyUserActionArrayOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionArrayInput` via:
//
//	WebApplicationKeyUserActionArray{ WebApplicationKeyUserActionArgs{...} }
type WebApplicationKeyUserActionArrayInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput
	ToWebApplicationKeyUserActionArrayOutputWithContext(context.Context) WebApplicationKeyUserActionArrayOutput
}

type WebApplicationKeyUserActionArray []WebApplicationKeyUserActionInput

func (WebApplicationKeyUserActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionArray) ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput {
	return i.ToWebApplicationKeyUserActionArrayOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionArray) ToWebApplicationKeyUserActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionArrayOutput)
}

type WebApplicationKeyUserActionOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionOutput) ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput {
	return o
}

func (o WebApplicationKeyUserActionOutput) ToWebApplicationKeyUserActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionOutput {
	return o
}

// Configuration of the key user action
func (o WebApplicationKeyUserActionOutput) Actions() WebApplicationKeyUserActionActionArrayOutput {
	return o.ApplyT(func(v WebApplicationKeyUserAction) []WebApplicationKeyUserActionAction { return v.Actions }).(WebApplicationKeyUserActionActionArrayOutput)
}

type WebApplicationKeyUserActionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionArrayOutput) ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionArrayOutput) ToWebApplicationKeyUserActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionArrayOutput) Index(i pulumi.IntInput) WebApplicationKeyUserActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationKeyUserAction {
		return vs[0].([]WebApplicationKeyUserAction)[vs[1].(int)]
	}).(WebApplicationKeyUserActionOutput)
}

type WebApplicationKeyUserActionAction struct {
	// The domain where the action is performed.
	Domain *string `pulumi:"domain"`
	// The name of the action
	Name string `pulumi:"name"`
	// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
	Type string `pulumi:"type"`
}

// WebApplicationKeyUserActionActionInput is an input type that accepts WebApplicationKeyUserActionActionArgs and WebApplicationKeyUserActionActionOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionActionInput` via:
//
//	WebApplicationKeyUserActionActionArgs{...}
type WebApplicationKeyUserActionActionInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput
	ToWebApplicationKeyUserActionActionOutputWithContext(context.Context) WebApplicationKeyUserActionActionOutput
}

type WebApplicationKeyUserActionActionArgs struct {
	// The domain where the action is performed.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the action
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationKeyUserActionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionActionArgs) ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput {
	return i.ToWebApplicationKeyUserActionActionOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionActionArgs) ToWebApplicationKeyUserActionActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionActionOutput)
}

// WebApplicationKeyUserActionActionArrayInput is an input type that accepts WebApplicationKeyUserActionActionArray and WebApplicationKeyUserActionActionArrayOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionActionArrayInput` via:
//
//	WebApplicationKeyUserActionActionArray{ WebApplicationKeyUserActionActionArgs{...} }
type WebApplicationKeyUserActionActionArrayInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput
	ToWebApplicationKeyUserActionActionArrayOutputWithContext(context.Context) WebApplicationKeyUserActionActionArrayOutput
}

type WebApplicationKeyUserActionActionArray []WebApplicationKeyUserActionActionInput

func (WebApplicationKeyUserActionActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionActionArray) ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput {
	return i.ToWebApplicationKeyUserActionActionArrayOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionActionArray) ToWebApplicationKeyUserActionActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionActionArrayOutput)
}

type WebApplicationKeyUserActionActionOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionActionOutput) ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput {
	return o
}

func (o WebApplicationKeyUserActionActionOutput) ToWebApplicationKeyUserActionActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionOutput {
	return o
}

// The domain where the action is performed.
func (o WebApplicationKeyUserActionActionOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the action
func (o WebApplicationKeyUserActionActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
func (o WebApplicationKeyUserActionActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) string { return v.Type }).(pulumi.StringOutput)
}

type WebApplicationKeyUserActionActionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionActionArrayOutput) ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionActionArrayOutput) ToWebApplicationKeyUserActionActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionActionArrayOutput) Index(i pulumi.IntInput) WebApplicationKeyUserActionActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationKeyUserActionAction {
		return vs[0].([]WebApplicationKeyUserActionAction)[vs[1].(int)]
	}).(WebApplicationKeyUserActionActionOutput)
}

type WebApplicationLoadActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold int `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold int `pulumi:"toleratedThreshold"`
}

// WebApplicationLoadActionApdexSettingsInput is an input type that accepts WebApplicationLoadActionApdexSettingsArgs and WebApplicationLoadActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationLoadActionApdexSettingsInput` via:
//
//	WebApplicationLoadActionApdexSettingsArgs{...}
type WebApplicationLoadActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput
	ToWebApplicationLoadActionApdexSettingsOutputWithContext(context.Context) WebApplicationLoadActionApdexSettingsOutput
}

type WebApplicationLoadActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntInput `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationLoadActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput {
	return i.ToWebApplicationLoadActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsOutput)
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return i.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsOutput).ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationLoadActionApdexSettingsPtrInput is an input type that accepts WebApplicationLoadActionApdexSettingsArgs, WebApplicationLoadActionApdexSettingsPtr and WebApplicationLoadActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationLoadActionApdexSettingsPtrInput` via:
//
//	        WebApplicationLoadActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationLoadActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput
	ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationLoadActionApdexSettingsPtrOutput
}

type webApplicationLoadActionApdexSettingsPtrType WebApplicationLoadActionApdexSettingsArgs

func WebApplicationLoadActionApdexSettingsPtr(v *WebApplicationLoadActionApdexSettingsArgs) WebApplicationLoadActionApdexSettingsPtrInput {
	return (*webApplicationLoadActionApdexSettingsPtrType)(v)
}

func (*webApplicationLoadActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationLoadActionApdexSettingsPtrType) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return i.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationLoadActionApdexSettingsPtrType) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsPtrOutput)
}

type WebApplicationLoadActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationLoadActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return o.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationLoadActionApdexSettings) *WebApplicationLoadActionApdexSettings {
		return &v
	}).(WebApplicationLoadActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) int { return v.FrustratingFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) int { return v.FrustratingThreshold }).(pulumi.IntOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationLoadActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) int { return v.ToleratedFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) int { return v.ToleratedThreshold }).(pulumi.IntOutput)
}

type WebApplicationLoadActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationLoadActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) Elem() WebApplicationLoadActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) WebApplicationLoadActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationLoadActionApdexSettings
		return ret
	}).(WebApplicationLoadActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationLoadActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMetaDataCaptureSettings struct {
	// Java script agent meta data capture settings
	Captures []WebApplicationMetaDataCaptureSettingsCapture `pulumi:"captures"`
}

// WebApplicationMetaDataCaptureSettingsInput is an input type that accepts WebApplicationMetaDataCaptureSettingsArgs and WebApplicationMetaDataCaptureSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsInput` via:
//
//	WebApplicationMetaDataCaptureSettingsArgs{...}
type WebApplicationMetaDataCaptureSettingsInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput
	ToWebApplicationMetaDataCaptureSettingsOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsOutput
}

type WebApplicationMetaDataCaptureSettingsArgs struct {
	// Java script agent meta data capture settings
	Captures WebApplicationMetaDataCaptureSettingsCaptureArrayInput `pulumi:"captures"`
}

func (WebApplicationMetaDataCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsOutput)
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsOutput).ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMetaDataCaptureSettingsPtrInput is an input type that accepts WebApplicationMetaDataCaptureSettingsArgs, WebApplicationMetaDataCaptureSettingsPtr and WebApplicationMetaDataCaptureSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsPtrInput` via:
//
//	        WebApplicationMetaDataCaptureSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMetaDataCaptureSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput
	ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput
}

type webApplicationMetaDataCaptureSettingsPtrType WebApplicationMetaDataCaptureSettingsArgs

func WebApplicationMetaDataCaptureSettingsPtr(v *WebApplicationMetaDataCaptureSettingsArgs) WebApplicationMetaDataCaptureSettingsPtrInput {
	return (*webApplicationMetaDataCaptureSettingsPtrType)(v)
}

func (*webApplicationMetaDataCaptureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (i *webApplicationMetaDataCaptureSettingsPtrType) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMetaDataCaptureSettingsPtrType) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsPtrOutput)
}

type WebApplicationMetaDataCaptureSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMetaDataCaptureSettings) *WebApplicationMetaDataCaptureSettings {
		return &v
	}).(WebApplicationMetaDataCaptureSettingsPtrOutput)
}

// Java script agent meta data capture settings
func (o WebApplicationMetaDataCaptureSettingsOutput) Captures() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettings) []WebApplicationMetaDataCaptureSettingsCapture {
		return v.Captures
	}).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) Elem() WebApplicationMetaDataCaptureSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMetaDataCaptureSettings) WebApplicationMetaDataCaptureSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMetaDataCaptureSettings
		return ret
	}).(WebApplicationMetaDataCaptureSettingsOutput)
}

// Java script agent meta data capture settings
func (o WebApplicationMetaDataCaptureSettingsPtrOutput) Captures() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o.ApplyT(func(v *WebApplicationMetaDataCaptureSettings) []WebApplicationMetaDataCaptureSettingsCapture {
		if v == nil {
			return nil
		}
		return v.Captures
	}).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsCapture struct {
	// The name of the meta data to capture
	CapturingName string `pulumi:"capturingName"`
	// Name for displaying the captured values in Dynatrace
	Name string `pulumi:"name"`
	// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
	PublicMetadata *bool `pulumi:"publicMetadata"`
	// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
	Type string `pulumi:"type"`
	// The unique ID of the meta data to capture
	UniqueId *int `pulumi:"uniqueId"`
	// `true` if the last captured value should be used for this metadata. By default the first value will be used.
	UseLastValue *bool `pulumi:"useLastValue"`
}

// WebApplicationMetaDataCaptureSettingsCaptureInput is an input type that accepts WebApplicationMetaDataCaptureSettingsCaptureArgs and WebApplicationMetaDataCaptureSettingsCaptureOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsCaptureInput` via:
//
//	WebApplicationMetaDataCaptureSettingsCaptureArgs{...}
type WebApplicationMetaDataCaptureSettingsCaptureInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput
	ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput
}

type WebApplicationMetaDataCaptureSettingsCaptureArgs struct {
	// The name of the meta data to capture
	CapturingName pulumi.StringInput `pulumi:"capturingName"`
	// Name for displaying the captured values in Dynatrace
	Name pulumi.StringInput `pulumi:"name"`
	// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
	PublicMetadata pulumi.BoolPtrInput `pulumi:"publicMetadata"`
	// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
	Type pulumi.StringInput `pulumi:"type"`
	// The unique ID of the meta data to capture
	UniqueId pulumi.IntPtrInput `pulumi:"uniqueId"`
	// `true` if the last captured value should be used for this metadata. By default the first value will be used.
	UseLastValue pulumi.BoolPtrInput `pulumi:"useLastValue"`
}

func (WebApplicationMetaDataCaptureSettingsCaptureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArgs) ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArgs) ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsCaptureOutput)
}

// WebApplicationMetaDataCaptureSettingsCaptureArrayInput is an input type that accepts WebApplicationMetaDataCaptureSettingsCaptureArray and WebApplicationMetaDataCaptureSettingsCaptureArrayOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsCaptureArrayInput` via:
//
//	WebApplicationMetaDataCaptureSettingsCaptureArray{ WebApplicationMetaDataCaptureSettingsCaptureArgs{...} }
type WebApplicationMetaDataCaptureSettingsCaptureArrayInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput
	ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput
}

type WebApplicationMetaDataCaptureSettingsCaptureArray []WebApplicationMetaDataCaptureSettingsCaptureInput

func (WebApplicationMetaDataCaptureSettingsCaptureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArray) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArray) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsCaptureOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsCaptureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return o
}

// The name of the meta data to capture
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) CapturingName() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.CapturingName }).(pulumi.StringOutput)
}

// Name for displaying the captured values in Dynatrace
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.Name }).(pulumi.StringOutput)
}

// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) PublicMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *bool { return v.PublicMetadata }).(pulumi.BoolPtrOutput)
}

// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.Type }).(pulumi.StringOutput)
}

// The unique ID of the meta data to capture
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) UniqueId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *int { return v.UniqueId }).(pulumi.IntPtrOutput)
}

// `true` if the last captured value should be used for this metadata. By default the first value will be used.
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) UseLastValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *bool { return v.UseLastValue }).(pulumi.BoolPtrOutput)
}

type WebApplicationMetaDataCaptureSettingsCaptureArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) Index(i pulumi.IntInput) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMetaDataCaptureSettingsCapture {
		return vs[0].([]WebApplicationMetaDataCaptureSettingsCapture)[vs[1].(int)]
	}).(WebApplicationMetaDataCaptureSettingsCaptureOutput)
}

type WebApplicationMonitoringSettings struct {
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	AddCrossOriginAnonymousAttribute *bool `pulumi:"addCrossOriginAnonymousAttribute"`
	// Advanced JavaScript tag settings
	AdvancedJavascriptTagSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings `pulumi:"advancedJavascriptTagSettings"`
	// The name of the angular package
	AngularPackageName *string `pulumi:"angularPackageName"`
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	BrowserRestrictionSettings *WebApplicationMonitoringSettingsBrowserRestrictionSettings `pulumi:"browserRestrictionSettings"`
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	CacheControlHeaderOptimizations *bool `pulumi:"cacheControlHeaderOptimizations"`
	// Settings for content capture
	ContentCapture WebApplicationMonitoringSettingsContentCapture `pulumi:"contentCapture"`
	// Domain for cookie placement. Maximum 150 characters.
	CookiePlacementDomain *string `pulumi:"cookiePlacementDomain"`
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	CorrelationHeaderInclusionRegex *string `pulumi:"correlationHeaderInclusionRegex"`
	// The location to send monitoring data from the JavaScript tag.
	//
	//  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	//  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	CustomConfigurationProperties *string `pulumi:"customConfigurationProperties"`
	// You can exclude some actions from becoming XHR actions.
	//
	// Put a regular expression, matching all the required URLs, here.
	//
	// If noting specified the feature is disabled
	ExcludeXhrRegex *string `pulumi:"excludeXhrRegex"`
	// `fetch()` request capture enabled/disabled
	FetchRequests *bool `pulumi:"fetchRequests"`
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	InjectionMode string `pulumi:"injectionMode"`
	// Instrumented web or app server.
	InstrumentedWebServer *bool `pulumi:"instrumentedWebServer"`
	// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
	IpAddressRestrictionSettings *WebApplicationMonitoringSettingsIpAddressRestrictionSettings `pulumi:"ipAddressRestrictionSettings"`
	// Support of various JavaScript frameworks
	JavascriptFrameworkSupport *WebApplicationMonitoringSettingsJavascriptFrameworkSupport `pulumi:"javascriptFrameworkSupport"`
	// Java script injection rules
	JavascriptInjectionRules *WebApplicationMonitoringSettingsJavascriptInjectionRules `pulumi:"javascriptInjectionRules"`
	// The location of your application’s custom JavaScript library file.
	//
	//  If nothing specified the root directory of your web server is used.
	//
	//  **Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
	LibraryFileLocation *string `pulumi:"libraryFileLocation"`
	// The location to send monitoring data from the JavaScript tag.
	//
	//  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	//  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	MonitoringDataPath *string `pulumi:"monitoringDataPath"`
	// Same site cookie attribute
	SameSiteCookieAttribute *string `pulumi:"sameSiteCookieAttribute"`
	// Time duration for the cache settings
	ScriptTagCacheDurationInHours *int `pulumi:"scriptTagCacheDurationInHours"`
	// Secure attribute usage for Dynatrace cookies enabled/disabled
	SecureCookieAttribute *bool `pulumi:"secureCookieAttribute"`
	// Path to identify the server’s request ID. Maximum 150 characters.
	ServerRequestPathId *string `pulumi:"serverRequestPathId"`
	// Send beacon data via CORS.
	UseCors *bool `pulumi:"useCors"`
	// `XmlHttpRequest` support enabled/disabled
	XmlHttpRequest *bool `pulumi:"xmlHttpRequest"`
}

// WebApplicationMonitoringSettingsInput is an input type that accepts WebApplicationMonitoringSettingsArgs and WebApplicationMonitoringSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsInput` via:
//
//	WebApplicationMonitoringSettingsArgs{...}
type WebApplicationMonitoringSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput
	ToWebApplicationMonitoringSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsOutput
}

type WebApplicationMonitoringSettingsArgs struct {
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	AddCrossOriginAnonymousAttribute pulumi.BoolPtrInput `pulumi:"addCrossOriginAnonymousAttribute"`
	// Advanced JavaScript tag settings
	AdvancedJavascriptTagSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput `pulumi:"advancedJavascriptTagSettings"`
	// The name of the angular package
	AngularPackageName pulumi.StringPtrInput `pulumi:"angularPackageName"`
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	BrowserRestrictionSettings WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput `pulumi:"browserRestrictionSettings"`
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	CacheControlHeaderOptimizations pulumi.BoolPtrInput `pulumi:"cacheControlHeaderOptimizations"`
	// Settings for content capture
	ContentCapture WebApplicationMonitoringSettingsContentCaptureInput `pulumi:"contentCapture"`
	// Domain for cookie placement. Maximum 150 characters.
	CookiePlacementDomain pulumi.StringPtrInput `pulumi:"cookiePlacementDomain"`
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	CorrelationHeaderInclusionRegex pulumi.StringPtrInput `pulumi:"correlationHeaderInclusionRegex"`
	// The location to send monitoring data from the JavaScript tag.
	//
	//  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	//  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	CustomConfigurationProperties pulumi.StringPtrInput `pulumi:"customConfigurationProperties"`
	// You can exclude some actions from becoming XHR actions.
	//
	// Put a regular expression, matching all the required URLs, here.
	//
	// If noting specified the feature is disabled
	ExcludeXhrRegex pulumi.StringPtrInput `pulumi:"excludeXhrRegex"`
	// `fetch()` request capture enabled/disabled
	FetchRequests pulumi.BoolPtrInput `pulumi:"fetchRequests"`
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	InjectionMode pulumi.StringInput `pulumi:"injectionMode"`
	// Instrumented web or app server.
	InstrumentedWebServer pulumi.BoolPtrInput `pulumi:"instrumentedWebServer"`
	// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
	IpAddressRestrictionSettings WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput `pulumi:"ipAddressRestrictionSettings"`
	// Support of various JavaScript frameworks
	JavascriptFrameworkSupport WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput `pulumi:"javascriptFrameworkSupport"`
	// Java script injection rules
	JavascriptInjectionRules WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput `pulumi:"javascriptInjectionRules"`
	// The location of your application’s custom JavaScript library file.
	//
	//  If nothing specified the root directory of your web server is used.
	//
	//  **Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
	LibraryFileLocation pulumi.StringPtrInput `pulumi:"libraryFileLocation"`
	// The location to send monitoring data from the JavaScript tag.
	//
	//  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	//  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	MonitoringDataPath pulumi.StringPtrInput `pulumi:"monitoringDataPath"`
	// Same site cookie attribute
	SameSiteCookieAttribute pulumi.StringPtrInput `pulumi:"sameSiteCookieAttribute"`
	// Time duration for the cache settings
	ScriptTagCacheDurationInHours pulumi.IntPtrInput `pulumi:"scriptTagCacheDurationInHours"`
	// Secure attribute usage for Dynatrace cookies enabled/disabled
	SecureCookieAttribute pulumi.BoolPtrInput `pulumi:"secureCookieAttribute"`
	// Path to identify the server’s request ID. Maximum 150 characters.
	ServerRequestPathId pulumi.StringPtrInput `pulumi:"serverRequestPathId"`
	// Send beacon data via CORS.
	UseCors pulumi.BoolPtrInput `pulumi:"useCors"`
	// `XmlHttpRequest` support enabled/disabled
	XmlHttpRequest pulumi.BoolPtrInput `pulumi:"xmlHttpRequest"`
}

func (WebApplicationMonitoringSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsOutput)
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsOutput).ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsArgs, WebApplicationMonitoringSettingsPtr and WebApplicationMonitoringSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput
	ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsPtrOutput
}

type webApplicationMonitoringSettingsPtrType WebApplicationMonitoringSettingsArgs

func WebApplicationMonitoringSettingsPtr(v *WebApplicationMonitoringSettingsArgs) WebApplicationMonitoringSettingsPtrInput {
	return (*webApplicationMonitoringSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsPtrType) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsPtrType) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettings {
		return &v
	}).(WebApplicationMonitoringSettingsPtrOutput)
}

// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
func (o WebApplicationMonitoringSettingsOutput) AddCrossOriginAnonymousAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.AddCrossOriginAnonymousAttribute }).(pulumi.BoolPtrOutput)
}

// Advanced JavaScript tag settings
func (o WebApplicationMonitoringSettingsOutput) AdvancedJavascriptTagSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		return v.AdvancedJavascriptTagSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput)
}

// The name of the angular package
func (o WebApplicationMonitoringSettingsOutput) AngularPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.AngularPackageName }).(pulumi.StringPtrOutput)
}

// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
func (o WebApplicationMonitoringSettingsOutput) BrowserRestrictionSettings() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		return v.BrowserRestrictionSettings
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) CacheControlHeaderOptimizations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.CacheControlHeaderOptimizations }).(pulumi.BoolPtrOutput)
}

// Settings for content capture
func (o WebApplicationMonitoringSettingsOutput) ContentCapture() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) WebApplicationMonitoringSettingsContentCapture {
		return v.ContentCapture
	}).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

// Domain for cookie placement. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsOutput) CookiePlacementDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CookiePlacementDomain }).(pulumi.StringPtrOutput)
}

// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
func (o WebApplicationMonitoringSettingsOutput) CorrelationHeaderInclusionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CorrelationHeaderInclusionRegex }).(pulumi.StringPtrOutput)
}

// The location to send monitoring data from the JavaScript tag.
//
//	Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
//
//	**Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsOutput) CustomConfigurationProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CustomConfigurationProperties }).(pulumi.StringPtrOutput)
}

// You can exclude some actions from becoming XHR actions.
//
// Put a regular expression, matching all the required URLs, here.
//
// If noting specified the feature is disabled
func (o WebApplicationMonitoringSettingsOutput) ExcludeXhrRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.ExcludeXhrRegex }).(pulumi.StringPtrOutput)
}

// `fetch()` request capture enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) FetchRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.FetchRequests }).(pulumi.BoolPtrOutput)
}

// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
func (o WebApplicationMonitoringSettingsOutput) InjectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) string { return v.InjectionMode }).(pulumi.StringOutput)
}

// Instrumented web or app server.
func (o WebApplicationMonitoringSettingsOutput) InstrumentedWebServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.InstrumentedWebServer }).(pulumi.BoolPtrOutput)
}

// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
func (o WebApplicationMonitoringSettingsOutput) IpAddressRestrictionSettings() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		return v.IpAddressRestrictionSettings
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

// Support of various JavaScript frameworks
func (o WebApplicationMonitoringSettingsOutput) JavascriptFrameworkSupport() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		return v.JavascriptFrameworkSupport
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

// Java script injection rules
func (o WebApplicationMonitoringSettingsOutput) JavascriptInjectionRules() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		return v.JavascriptInjectionRules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

// The location of your application’s custom JavaScript library file.
//
//	If nothing specified the root directory of your web server is used.
//
//	**Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsOutput) LibraryFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.LibraryFileLocation }).(pulumi.StringPtrOutput)
}

// The location to send monitoring data from the JavaScript tag.
//
//	Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
//
//	**Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsOutput) MonitoringDataPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.MonitoringDataPath }).(pulumi.StringPtrOutput)
}

// Same site cookie attribute
func (o WebApplicationMonitoringSettingsOutput) SameSiteCookieAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.SameSiteCookieAttribute }).(pulumi.StringPtrOutput)
}

// Time duration for the cache settings
func (o WebApplicationMonitoringSettingsOutput) ScriptTagCacheDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *int { return v.ScriptTagCacheDurationInHours }).(pulumi.IntPtrOutput)
}

// Secure attribute usage for Dynatrace cookies enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) SecureCookieAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.SecureCookieAttribute }).(pulumi.BoolPtrOutput)
}

// Path to identify the server’s request ID. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsOutput) ServerRequestPathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.ServerRequestPathId }).(pulumi.StringPtrOutput)
}

// Send beacon data via CORS.
func (o WebApplicationMonitoringSettingsOutput) UseCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.UseCors }).(pulumi.BoolPtrOutput)
}

// `XmlHttpRequest` support enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) XmlHttpRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.XmlHttpRequest }).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsPtrOutput) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsPtrOutput) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) WebApplicationMonitoringSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettings
		return ret
	}).(WebApplicationMonitoringSettingsOutput)
}

// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
func (o WebApplicationMonitoringSettingsPtrOutput) AddCrossOriginAnonymousAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.AddCrossOriginAnonymousAttribute
	}).(pulumi.BoolPtrOutput)
}

// Advanced JavaScript tag settings
func (o WebApplicationMonitoringSettingsPtrOutput) AdvancedJavascriptTagSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		if v == nil {
			return nil
		}
		return &v.AdvancedJavascriptTagSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

// The name of the angular package
func (o WebApplicationMonitoringSettingsPtrOutput) AngularPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.AngularPackageName
	}).(pulumi.StringPtrOutput)
}

// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
func (o WebApplicationMonitoringSettingsPtrOutput) BrowserRestrictionSettings() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		if v == nil {
			return nil
		}
		return v.BrowserRestrictionSettings
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) CacheControlHeaderOptimizations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.CacheControlHeaderOptimizations
	}).(pulumi.BoolPtrOutput)
}

// Settings for content capture
func (o WebApplicationMonitoringSettingsPtrOutput) ContentCapture() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsContentCapture {
		if v == nil {
			return nil
		}
		return &v.ContentCapture
	}).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

// Domain for cookie placement. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) CookiePlacementDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CookiePlacementDomain
	}).(pulumi.StringPtrOutput)
}

// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
func (o WebApplicationMonitoringSettingsPtrOutput) CorrelationHeaderInclusionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationHeaderInclusionRegex
	}).(pulumi.StringPtrOutput)
}

// The location to send monitoring data from the JavaScript tag.
//
//	Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
//
//	**Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) CustomConfigurationProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CustomConfigurationProperties
	}).(pulumi.StringPtrOutput)
}

// You can exclude some actions from becoming XHR actions.
//
// Put a regular expression, matching all the required URLs, here.
//
// If noting specified the feature is disabled
func (o WebApplicationMonitoringSettingsPtrOutput) ExcludeXhrRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeXhrRegex
	}).(pulumi.StringPtrOutput)
}

// `fetch()` request capture enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) FetchRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.FetchRequests
	}).(pulumi.BoolPtrOutput)
}

// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
func (o WebApplicationMonitoringSettingsPtrOutput) InjectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return &v.InjectionMode
	}).(pulumi.StringPtrOutput)
}

// Instrumented web or app server.
func (o WebApplicationMonitoringSettingsPtrOutput) InstrumentedWebServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.InstrumentedWebServer
	}).(pulumi.BoolPtrOutput)
}

// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
func (o WebApplicationMonitoringSettingsPtrOutput) IpAddressRestrictionSettings() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		if v == nil {
			return nil
		}
		return v.IpAddressRestrictionSettings
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

// Support of various JavaScript frameworks
func (o WebApplicationMonitoringSettingsPtrOutput) JavascriptFrameworkSupport() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		if v == nil {
			return nil
		}
		return v.JavascriptFrameworkSupport
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

// Java script injection rules
func (o WebApplicationMonitoringSettingsPtrOutput) JavascriptInjectionRules() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		if v == nil {
			return nil
		}
		return v.JavascriptInjectionRules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

// The location of your application’s custom JavaScript library file.
//
//	If nothing specified the root directory of your web server is used.
//
//	**Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) LibraryFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.LibraryFileLocation
	}).(pulumi.StringPtrOutput)
}

// The location to send monitoring data from the JavaScript tag.
//
//	Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
//
//	**Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) MonitoringDataPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.MonitoringDataPath
	}).(pulumi.StringPtrOutput)
}

// Same site cookie attribute
func (o WebApplicationMonitoringSettingsPtrOutput) SameSiteCookieAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.SameSiteCookieAttribute
	}).(pulumi.StringPtrOutput)
}

// Time duration for the cache settings
func (o WebApplicationMonitoringSettingsPtrOutput) ScriptTagCacheDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *int {
		if v == nil {
			return nil
		}
		return v.ScriptTagCacheDurationInHours
	}).(pulumi.IntPtrOutput)
}

// Secure attribute usage for Dynatrace cookies enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) SecureCookieAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SecureCookieAttribute
	}).(pulumi.BoolPtrOutput)
}

// Path to identify the server’s request ID. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) ServerRequestPathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServerRequestPathId
	}).(pulumi.StringPtrOutput)
}

// Send beacon data via CORS.
func (o WebApplicationMonitoringSettingsPtrOutput) UseCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.UseCors
	}).(pulumi.BoolPtrOutput)
}

// `XmlHttpRequest` support enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) XmlHttpRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.XmlHttpRequest
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings struct {
	// Additional event handlers and wrappers
	AdditionalEventHandlers WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers `pulumi:"additionalEventHandlers"`
	// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
	EventWrapperSettings *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings `pulumi:"eventWrapperSettings"`
	// Global event capture settings
	GlobalEventCaptureSettings *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings `pulumi:"globalEventCaptureSettings"`
	// Instrumentation of unsupported Ajax frameworks enabled/disabled
	InstrumentUnsupportedAjaxFrameworks *bool `pulumi:"instrumentUnsupportedAjaxFrameworks"`
	// Maximum character length for action names. Valid values range from 5 to 10000.
	MaxActionNameLength int `pulumi:"maxActionNameLength"`
	// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	MaxErrorsToCapture int `pulumi:"maxErrorsToCapture"`
	// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
	SpecialCharactersToEscape *string `pulumi:"specialCharactersToEscape"`
	// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	SyncBeaconFirefox *bool `pulumi:"syncBeaconFirefox"`
	// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	SyncBeaconInternetExplorer *bool `pulumi:"syncBeaconInternetExplorer"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs struct {
	// Additional event handlers and wrappers
	AdditionalEventHandlers WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput `pulumi:"additionalEventHandlers"`
	// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
	EventWrapperSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput `pulumi:"eventWrapperSettings"`
	// Global event capture settings
	GlobalEventCaptureSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput `pulumi:"globalEventCaptureSettings"`
	// Instrumentation of unsupported Ajax frameworks enabled/disabled
	InstrumentUnsupportedAjaxFrameworks pulumi.BoolPtrInput `pulumi:"instrumentUnsupportedAjaxFrameworks"`
	// Maximum character length for action names. Valid values range from 5 to 10000.
	MaxActionNameLength pulumi.IntInput `pulumi:"maxActionNameLength"`
	// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	MaxErrorsToCapture pulumi.IntInput `pulumi:"maxErrorsToCapture"`
	// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
	SpecialCharactersToEscape pulumi.StringPtrInput `pulumi:"specialCharactersToEscape"`
	// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	SyncBeaconFirefox pulumi.BoolPtrInput `pulumi:"syncBeaconFirefox"`
	// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	SyncBeaconInternetExplorer pulumi.BoolPtrInput `pulumi:"syncBeaconInternetExplorer"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

// Additional event handlers and wrappers
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) AdditionalEventHandlers() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		return v.AdditionalEventHandlers
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput)
}

// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) EventWrapperSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		return v.EventWrapperSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

// Global event capture settings
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) GlobalEventCaptureSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		return v.GlobalEventCaptureSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

// Instrumentation of unsupported Ajax frameworks enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) InstrumentUnsupportedAjaxFrameworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.InstrumentUnsupportedAjaxFrameworks
	}).(pulumi.BoolPtrOutput)
}

// Maximum character length for action names. Valid values range from 5 to 10000.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) MaxActionNameLength() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) int {
		return v.MaxActionNameLength
	}).(pulumi.IntOutput)
}

// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) MaxErrorsToCapture() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) int { return v.MaxErrorsToCapture }).(pulumi.IntOutput)
}

// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SpecialCharactersToEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *string {
		return v.SpecialCharactersToEscape
	}).(pulumi.StringPtrOutput)
}

// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SyncBeaconFirefox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.SyncBeaconFirefox
	}).(pulumi.BoolPtrOutput)
}

// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SyncBeaconInternetExplorer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.SyncBeaconInternetExplorer
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput)
}

// Additional event handlers and wrappers
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) AdditionalEventHandlers() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		if v == nil {
			return nil
		}
		return &v.AdditionalEventHandlers
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) EventWrapperSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		if v == nil {
			return nil
		}
		return v.EventWrapperSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

// Global event capture settings
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) GlobalEventCaptureSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		if v == nil {
			return nil
		}
		return v.GlobalEventCaptureSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

// Instrumentation of unsupported Ajax frameworks enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) InstrumentUnsupportedAjaxFrameworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.InstrumentUnsupportedAjaxFrameworks
	}).(pulumi.BoolPtrOutput)
}

// Maximum character length for action names. Valid values range from 5 to 10000.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) MaxActionNameLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxActionNameLength
	}).(pulumi.IntPtrOutput)
}

// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) MaxErrorsToCapture() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxErrorsToCapture
	}).(pulumi.IntPtrOutput)
}

// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SpecialCharactersToEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *string {
		if v == nil {
			return nil
		}
		return v.SpecialCharactersToEscape
	}).(pulumi.StringPtrOutput)
}

// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SyncBeaconFirefox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SyncBeaconFirefox
	}).(pulumi.BoolPtrOutput)
}

// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SyncBeaconInternetExplorer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SyncBeaconInternetExplorer
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers struct {
	// Blur event handler enabled/disabled
	Blur *bool `pulumi:"blur"`
	// Change event handler enabled/disabled
	Change *bool `pulumi:"change"`
	// Click event handler enabled/disabled
	Click *bool `pulumi:"click"`
	// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	MaxDomNodes int `pulumi:"maxDomNodes"`
	// Mouseup event handler enabled/disabled
	Mouseup *bool `pulumi:"mouseup"`
	// toString method enabled/disabled
	ToStringMethod *bool `pulumi:"toStringMethod"`
	// Use mouseup event for clicks enabled/disabled
	UseMouseUpEventForClicks *bool `pulumi:"useMouseUpEventForClicks"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs struct {
	// Blur event handler enabled/disabled
	Blur pulumi.BoolPtrInput `pulumi:"blur"`
	// Change event handler enabled/disabled
	Change pulumi.BoolPtrInput `pulumi:"change"`
	// Click event handler enabled/disabled
	Click pulumi.BoolPtrInput `pulumi:"click"`
	// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	MaxDomNodes pulumi.IntInput `pulumi:"maxDomNodes"`
	// Mouseup event handler enabled/disabled
	Mouseup pulumi.BoolPtrInput `pulumi:"mouseup"`
	// toString method enabled/disabled
	ToStringMethod pulumi.BoolPtrInput `pulumi:"toStringMethod"`
	// Use mouseup event for clicks enabled/disabled
	UseMouseUpEventForClicks pulumi.BoolPtrInput `pulumi:"useMouseUpEventForClicks"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

// Blur event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

// Change event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) MaxDomNodes() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) int {
		return v.MaxDomNodes
	}).(pulumi.IntOutput)
}

// Mouseup event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// toString method enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToStringMethod() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.ToStringMethod
	}).(pulumi.BoolPtrOutput)
}

// Use mouseup event for clicks enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) UseMouseUpEventForClicks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.UseMouseUpEventForClicks
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput)
}

// Blur event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

// Change event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) MaxDomNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *int {
		if v == nil {
			return nil
		}
		return &v.MaxDomNodes
	}).(pulumi.IntPtrOutput)
}

// Mouseup event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// toString method enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToStringMethod() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.ToStringMethod
	}).(pulumi.BoolPtrOutput)
}

// Use mouseup event for clicks enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) UseMouseUpEventForClicks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.UseMouseUpEventForClicks
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings struct {
	// Blur enabled/disabled
	Blur *bool `pulumi:"blur"`
	// Change enabled/disabled
	Change *bool `pulumi:"change"`
	// Click enabled/disabled
	Click *bool `pulumi:"click"`
	// MouseUp enabled/disabled
	Mouseup *bool `pulumi:"mouseup"`
	// TouchEnd enabled/disabled
	TouchEnd *bool `pulumi:"touchEnd"`
	// TouchStart enabled/disabled
	TouchStart *bool `pulumi:"touchStart"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs struct {
	// Blur enabled/disabled
	Blur pulumi.BoolPtrInput `pulumi:"blur"`
	// Change enabled/disabled
	Change pulumi.BoolPtrInput `pulumi:"change"`
	// Click enabled/disabled
	Click pulumi.BoolPtrInput `pulumi:"click"`
	// MouseUp enabled/disabled
	Mouseup pulumi.BoolPtrInput `pulumi:"mouseup"`
	// TouchEnd enabled/disabled
	TouchEnd pulumi.BoolPtrInput `pulumi:"touchEnd"`
	// TouchStart enabled/disabled
	TouchStart pulumi.BoolPtrInput `pulumi:"touchStart"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

// Blur enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

// Change enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// MouseUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// TouchEnd enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

// TouchStart enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput)
}

// Blur enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

// Change enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// MouseUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// TouchEnd enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

// TouchStart enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings struct {
	// Additional events to be captured globally as user input.
	AdditionalEventCapturedAsUserInput *string `pulumi:"additionalEventCapturedAsUserInput"`
	// Change enabled/disabled
	Change *bool `pulumi:"change"`
	// Click enabled/disabled
	Click *bool `pulumi:"click"`
	// DoubleClick enabled/disabled
	Doubleclick *bool `pulumi:"doubleclick"`
	// KeyDown enabled/disabled
	Keydown *bool `pulumi:"keydown"`
	// KeyUp enabled/disabled
	Keyup *bool `pulumi:"keyup"`
	// MouseDown enabled/disabled
	Mousedown *bool `pulumi:"mousedown"`
	// MouseUp enabled/disabled
	Mouseup *bool `pulumi:"mouseup"`
	// Scroll enabled/disabled
	Scroll *bool `pulumi:"scroll"`
	// TouchEnd enabled/disabled
	TouchEnd *bool `pulumi:"touchEnd"`
	// TouchStart enabled/disabled
	TouchStart *bool `pulumi:"touchStart"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs struct {
	// Additional events to be captured globally as user input.
	AdditionalEventCapturedAsUserInput pulumi.StringPtrInput `pulumi:"additionalEventCapturedAsUserInput"`
	// Change enabled/disabled
	Change pulumi.BoolPtrInput `pulumi:"change"`
	// Click enabled/disabled
	Click pulumi.BoolPtrInput `pulumi:"click"`
	// DoubleClick enabled/disabled
	Doubleclick pulumi.BoolPtrInput `pulumi:"doubleclick"`
	// KeyDown enabled/disabled
	Keydown pulumi.BoolPtrInput `pulumi:"keydown"`
	// KeyUp enabled/disabled
	Keyup pulumi.BoolPtrInput `pulumi:"keyup"`
	// MouseDown enabled/disabled
	Mousedown pulumi.BoolPtrInput `pulumi:"mousedown"`
	// MouseUp enabled/disabled
	Mouseup pulumi.BoolPtrInput `pulumi:"mouseup"`
	// Scroll enabled/disabled
	Scroll pulumi.BoolPtrInput `pulumi:"scroll"`
	// TouchEnd enabled/disabled
	TouchEnd pulumi.BoolPtrInput `pulumi:"touchEnd"`
	// TouchStart enabled/disabled
	TouchStart pulumi.BoolPtrInput `pulumi:"touchStart"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

// Additional events to be captured globally as user input.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) AdditionalEventCapturedAsUserInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *string {
		return v.AdditionalEventCapturedAsUserInput
	}).(pulumi.StringPtrOutput)
}

// Change enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// DoubleClick enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Doubleclick() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Doubleclick
	}).(pulumi.BoolPtrOutput)
}

// KeyDown enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Keydown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Keydown
	}).(pulumi.BoolPtrOutput)
}

// KeyUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Keyup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Keyup
	}).(pulumi.BoolPtrOutput)
}

// MouseDown enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Mousedown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Mousedown
	}).(pulumi.BoolPtrOutput)
}

// MouseUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// Scroll enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Scroll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Scroll
	}).(pulumi.BoolPtrOutput)
}

// TouchEnd enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

// TouchStart enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput)
}

// Additional events to be captured globally as user input.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) AdditionalEventCapturedAsUserInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalEventCapturedAsUserInput
	}).(pulumi.StringPtrOutput)
}

// Change enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// DoubleClick enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Doubleclick() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Doubleclick
	}).(pulumi.BoolPtrOutput)
}

// KeyDown enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Keydown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Keydown
	}).(pulumi.BoolPtrOutput)
}

// KeyUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Keyup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Keyup
	}).(pulumi.BoolPtrOutput)
}

// MouseDown enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Mousedown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mousedown
	}).(pulumi.BoolPtrOutput)
}

// MouseUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// Scroll enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Scroll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Scroll
	}).(pulumi.BoolPtrOutput)
}

// TouchEnd enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

// TouchStart enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettings struct {
	// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode string `pulumi:"mode"`
	// A list of browser restrictions
	Restrictions *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs struct {
	// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// A list of browser restrictions
	Restrictions WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput)
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput).ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs, WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtr and WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput
}

type webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs

func WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtr(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput {
	return (*webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		return &v
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettings) string { return v.Mode }).(pulumi.StringOutput)
}

// A list of browser restrictions
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsBrowserRestrictionSettings
		return ret
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput)
}

// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// A list of browser restrictions
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions struct {
	// Browser exclusion rules for the browsers that are to be excluded
	Restrictions []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs struct {
	// Browser exclusion rules for the browsers that are to be excluded
	Restrictions WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput)
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput).ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs, WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtr and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput
}

type webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs

func WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtr(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput {
	return (*webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType)(v)
}

func (*webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		return &v
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

// Browser exclusion rules for the browsers that are to be excluded
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) Elem() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions
		return ret
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput)
}

// Browser exclusion rules for the browsers that are to be excluded
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction struct {
	// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER,`OPERA`and`SAFARI`
	BrowserType string `pulumi:"browserType"`
	// The version of the browser that is used
	BrowserVersion *string `pulumi:"browserVersion"`
	// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
	Comparator *string `pulumi:"comparator"`
	// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
	Platform *string `pulumi:"platform"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs struct {
	// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER,`OPERA`and`SAFARI`
	BrowserType pulumi.StringInput `pulumi:"browserType"`
	// The version of the browser that is used
	BrowserVersion pulumi.StringPtrInput `pulumi:"browserVersion"`
	// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
	Comparator pulumi.StringPtrInput `pulumi:"comparator"`
	// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
	Platform pulumi.StringPtrInput `pulumi:"platform"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray{ WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{...} }
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return o
}

// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER,`OPERA`and`SAFARI`
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) BrowserType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) string {
		return v.BrowserType
	}).(pulumi.StringOutput)
}

// The version of the browser that is used
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) BrowserVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.BrowserVersion
	}).(pulumi.StringPtrOutput)
}

// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) Comparator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.Comparator
	}).(pulumi.StringPtrOutput)
}

// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		return vs[0].([]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput)
}

type WebApplicationMonitoringSettingsContentCapture struct {
	// JavaScript errors monitoring enabled/disabled
	JavascriptErrors *bool `pulumi:"javascriptErrors"`
	// Settings for resource timings capture
	ResourceTimingSettings WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings `pulumi:"resourceTimingSettings"`
	// Settings for timed action capture
	TimeoutSettings WebApplicationMonitoringSettingsContentCaptureTimeoutSettings `pulumi:"timeoutSettings"`
	// Visually complete and Speed index support enabled/disabled
	VisuallyCompleteAndSpeedIndex *bool `pulumi:"visuallyCompleteAndSpeedIndex"`
	// Settings for VisuallyComplete
	VisuallyCompleteSettings *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings `pulumi:"visuallyCompleteSettings"`
}

// WebApplicationMonitoringSettingsContentCaptureInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureArgs and WebApplicationMonitoringSettingsContentCaptureOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureArgs{...}
type WebApplicationMonitoringSettingsContentCaptureInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput
	ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureOutput
}

type WebApplicationMonitoringSettingsContentCaptureArgs struct {
	// JavaScript errors monitoring enabled/disabled
	JavascriptErrors pulumi.BoolPtrInput `pulumi:"javascriptErrors"`
	// Settings for resource timings capture
	ResourceTimingSettings WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput `pulumi:"resourceTimingSettings"`
	// Settings for timed action capture
	TimeoutSettings WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput `pulumi:"timeoutSettings"`
	// Visually complete and Speed index support enabled/disabled
	VisuallyCompleteAndSpeedIndex pulumi.BoolPtrInput `pulumi:"visuallyCompleteAndSpeedIndex"`
	// Settings for VisuallyComplete
	VisuallyCompleteSettings WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput `pulumi:"visuallyCompleteSettings"`
}

func (WebApplicationMonitoringSettingsContentCaptureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureOutput).ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCapturePtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureArgs, WebApplicationMonitoringSettingsContentCapturePtr and WebApplicationMonitoringSettingsContentCapturePtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCapturePtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCapturePtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput
	ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput
}

type webApplicationMonitoringSettingsContentCapturePtrType WebApplicationMonitoringSettingsContentCaptureArgs

func WebApplicationMonitoringSettingsContentCapturePtr(v *WebApplicationMonitoringSettingsContentCaptureArgs) WebApplicationMonitoringSettingsContentCapturePtrInput {
	return (*webApplicationMonitoringSettingsContentCapturePtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCapturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCapturePtrType) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCapturePtrType) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCapture {
		return &v
	}).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

// JavaScript errors monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureOutput) JavascriptErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *bool { return v.JavascriptErrors }).(pulumi.BoolPtrOutput)
}

// Settings for resource timings capture
func (o WebApplicationMonitoringSettingsContentCaptureOutput) ResourceTimingSettings() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		return v.ResourceTimingSettings
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput)
}

// Settings for timed action capture
func (o WebApplicationMonitoringSettingsContentCaptureOutput) TimeoutSettings() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		return v.TimeoutSettings
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput)
}

// Visually complete and Speed index support enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureOutput) VisuallyCompleteAndSpeedIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *bool { return v.VisuallyCompleteAndSpeedIndex }).(pulumi.BoolPtrOutput)
}

// Settings for VisuallyComplete
func (o WebApplicationMonitoringSettingsContentCaptureOutput) VisuallyCompleteSettings() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		return v.VisuallyCompleteSettings
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCapturePtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCapturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) WebApplicationMonitoringSettingsContentCapture {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCapture
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

// JavaScript errors monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) JavascriptErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptErrors
	}).(pulumi.BoolPtrOutput)
}

// Settings for resource timings capture
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ResourceTimingSettings() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		if v == nil {
			return nil
		}
		return &v.ResourceTimingSettings
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

// Settings for timed action capture
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) TimeoutSettings() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		if v == nil {
			return nil
		}
		return &v.TimeoutSettings
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

// Visually complete and Speed index support enabled/disabled
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) VisuallyCompleteAndSpeedIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *bool {
		if v == nil {
			return nil
		}
		return v.VisuallyCompleteAndSpeedIndex
	}).(pulumi.BoolPtrOutput)
}

// Settings for VisuallyComplete
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) VisuallyCompleteSettings() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		if v == nil {
			return nil
		}
		return v.VisuallyCompleteSettings
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings struct {
	// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	InstrumentationDelay int `pulumi:"instrumentationDelay"`
	// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
	NonW3cResourceTimings *bool `pulumi:"nonW3cResourceTimings"`
	// Defines how detailed resource timings are captured.
	//
	// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
	ResourceTimingCaptureType *string `pulumi:"resourceTimingCaptureType"`
	// Limits the number of domains for which W3C resource timings are captured.
	//
	// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
	ResourceTimingsDomainLimit *int `pulumi:"resourceTimingsDomainLimit"`
	// W3C resource timings for third party/CDN enabled/disabled
	W3cResourceTimings *bool `pulumi:"w3cResourceTimings"`
}

// WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs and WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs struct {
	// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	InstrumentationDelay pulumi.IntInput `pulumi:"instrumentationDelay"`
	// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
	NonW3cResourceTimings pulumi.BoolPtrInput `pulumi:"nonW3cResourceTimings"`
	// Defines how detailed resource timings are captured.
	//
	// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
	ResourceTimingCaptureType pulumi.StringPtrInput `pulumi:"resourceTimingCaptureType"`
	// Limits the number of domains for which W3C resource timings are captured.
	//
	// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
	ResourceTimingsDomainLimit pulumi.IntPtrInput `pulumi:"resourceTimingsDomainLimit"`
	// W3C resource timings for third party/CDN enabled/disabled
	W3cResourceTimings pulumi.BoolPtrInput `pulumi:"w3cResourceTimings"`
}

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs, WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtr and WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) InstrumentationDelay() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) int {
		return v.InstrumentationDelay
	}).(pulumi.IntOutput)
}

// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) NonW3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		return v.NonW3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

// Defines how detailed resource timings are captured.
//
// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ResourceTimingCaptureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *string {
		return v.ResourceTimingCaptureType
	}).(pulumi.StringPtrOutput)
}

// Limits the number of domains for which W3C resource timings are captured.
//
// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ResourceTimingsDomainLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		return v.ResourceTimingsDomainLimit
	}).(pulumi.IntPtrOutput)
}

// W3C resource timings for third party/CDN enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) W3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		return v.W3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput)
}

// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) InstrumentationDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		if v == nil {
			return nil
		}
		return &v.InstrumentationDelay
	}).(pulumi.IntPtrOutput)
}

// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) NonW3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.NonW3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

// Defines how detailed resource timings are captured.
//
// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ResourceTimingCaptureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *string {
		if v == nil {
			return nil
		}
		return v.ResourceTimingCaptureType
	}).(pulumi.StringPtrOutput)
}

// Limits the number of domains for which W3C resource timings are captured.
//
// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ResourceTimingsDomainLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		if v == nil {
			return nil
		}
		return v.ResourceTimingsDomainLimit
	}).(pulumi.IntPtrOutput)
}

// W3C resource timings for third party/CDN enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) W3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.W3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettings struct {
	// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	TemporaryActionLimit int `pulumi:"temporaryActionLimit"`
	// The total timeout of all cascaded timeouts that should still be able to create a temporary action
	TemporaryActionTotalTimeout int `pulumi:"temporaryActionTotalTimeout"`
	// Timed action support enabled/disabled.
	TimedActionSupport *bool `pulumi:"timedActionSupport"`
}

// WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs and WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs struct {
	// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	TemporaryActionLimit pulumi.IntInput `pulumi:"temporaryActionLimit"`
	// The total timeout of all cascaded timeouts that should still be able to create a temporary action
	TemporaryActionTotalTimeout pulumi.IntInput `pulumi:"temporaryActionTotalTimeout"`
	// Timed action support enabled/disabled.
	TimedActionSupport pulumi.BoolPtrInput `pulumi:"timedActionSupport"`
}

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs, WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtr and WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TemporaryActionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) int {
		return v.TemporaryActionLimit
	}).(pulumi.IntOutput)
}

// The total timeout of all cascaded timeouts that should still be able to create a temporary action
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TemporaryActionTotalTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) int {
		return v.TemporaryActionTotalTimeout
	}).(pulumi.IntOutput)
}

// Timed action support enabled/disabled.
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TimedActionSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *bool {
		return v.TimedActionSupport
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureTimeoutSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput)
}

// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TemporaryActionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TemporaryActionLimit
	}).(pulumi.IntPtrOutput)
}

// The total timeout of all cascaded timeouts that should still be able to create a temporary action
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TemporaryActionTotalTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TemporaryActionTotalTimeout
	}).(pulumi.IntPtrOutput)
}

// Timed action support enabled/disabled.
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TimedActionSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TimedActionSupport
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings struct {
	// A RegularExpression used to exclude images and iframes from being detected by the VC module
	ExcludeUrlRegex *string `pulumi:"excludeUrlRegex"`
	// Query selector for mutation nodes to ignore in VC and SI calculation
	IgnoredMutationsList *string `pulumi:"ignoredMutationsList"`
	// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	InactivityTimeout *int `pulumi:"inactivityTimeout"`
	// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	MutationTimeout *int `pulumi:"mutationTimeout"`
	// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
	Threshold *int `pulumi:"threshold"`
}

// WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs and WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs struct {
	// A RegularExpression used to exclude images and iframes from being detected by the VC module
	ExcludeUrlRegex pulumi.StringPtrInput `pulumi:"excludeUrlRegex"`
	// Query selector for mutation nodes to ignore in VC and SI calculation
	IgnoredMutationsList pulumi.StringPtrInput `pulumi:"ignoredMutationsList"`
	// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	InactivityTimeout pulumi.IntPtrInput `pulumi:"inactivityTimeout"`
	// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	MutationTimeout pulumi.IntPtrInput `pulumi:"mutationTimeout"`
	// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
}

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs, WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtr and WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

// A RegularExpression used to exclude images and iframes from being detected by the VC module
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ExcludeUrlRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		return v.ExcludeUrlRegex
	}).(pulumi.StringPtrOutput)
}

// Query selector for mutation nodes to ignore in VC and SI calculation
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) IgnoredMutationsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		return v.IgnoredMutationsList
	}).(pulumi.StringPtrOutput)
}

// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.InactivityTimeout
	}).(pulumi.IntPtrOutput)
}

// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) MutationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.MutationTimeout
	}).(pulumi.IntPtrOutput)
}

// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput)
}

// A RegularExpression used to exclude images and iframes from being detected by the VC module
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ExcludeUrlRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeUrlRegex
	}).(pulumi.StringPtrOutput)
}

// Query selector for mutation nodes to ignore in VC and SI calculation
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) IgnoredMutationsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.IgnoredMutationsList
	}).(pulumi.StringPtrOutput)
}

// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.InactivityTimeout
	}).(pulumi.IntPtrOutput)
}

// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) MutationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.MutationTimeout
	}).(pulumi.IntPtrOutput)
}

// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettings struct {
	// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode string `pulumi:"mode"`
	// The IP addresses or the IP address ranges to be mapped to the location
	Restrictions *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs struct {
	// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The IP addresses or the IP address ranges to be mapped to the location
	Restrictions WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput)
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput).ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs, WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtr and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput
}

type webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs

func WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtr(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput {
	return (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		return &v
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) string { return v.Mode }).(pulumi.StringOutput)
}

// The IP addresses or the IP address ranges to be mapped to the location
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) Restrictions() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsIpAddressRestrictionSettings
		return ret
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput)
}

// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The IP addresses or the IP address ranges to be mapped to the location
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Restrictions() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions struct {
	// The IP address or the IP address range to be mapped to the location
	Ranges []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange `pulumi:"ranges"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs struct {
	// The IP address or the IP address range to be mapped to the location
	Ranges WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput `pulumi:"ranges"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput)
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput).ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs, WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtr and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput
}

type webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs

func WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtr(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput {
	return (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType)(v)
}

func (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		return &v
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

// The IP address or the IP address range to be mapped to the location
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) Ranges() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		return v.Ranges
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) Elem() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions
		return ret
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput)
}

// The IP address or the IP address range to be mapped to the location
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) Ranges() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		if v == nil {
			return nil
		}
		return v.Ranges
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange struct {
	// The IP address to be mapped.
	Address string `pulumi:"address"`
	// The **to** address of the IP address range.
	AddressTo *string `pulumi:"addressTo"`
	// The subnet mask of the IP address range. Valid values range from 0 to 128.
	SubnetMask *int `pulumi:"subnetMask"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs struct {
	// The IP address to be mapped.
	Address pulumi.StringInput `pulumi:"address"`
	// The **to** address of the IP address range.
	AddressTo pulumi.StringPtrInput `pulumi:"addressTo"`
	// The subnet mask of the IP address range. Valid values range from 0 to 128.
	SubnetMask pulumi.IntPtrInput `pulumi:"subnetMask"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray{ WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{...} }
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return o
}

// The IP address to be mapped.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) string {
		return v.Address
	}).(pulumi.StringOutput)
}

// The **to** address of the IP address range.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) AddressTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) *string {
		return v.AddressTo
	}).(pulumi.StringPtrOutput)
}

// The subnet mask of the IP address range. Valid values range from 0 to 128.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) SubnetMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) *int {
		return v.SubnetMask
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		return vs[0].([]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupport struct {
	// ActiveXObject support enabled/disabled
	ActiveXObject *bool `pulumi:"activeXObject"`
	// AngularJS and Angular support enabled/disabled
	Angular *bool `pulumi:"angular"`
	// Dojo support enabled/disabled
	Dojo *bool `pulumi:"dojo"`
	// ExtJS, Sencha Touch support enabled/disabled
	Extjs *bool `pulumi:"extjs"`
	// ICEfaces support enabled/disabled
	Icefaces *bool `pulumi:"icefaces"`
	// jQuery, Backbone.js support enabled/disabled
	Jquery *bool `pulumi:"jquery"`
	// MooTools support enabled/disabled
	MooTools *bool `pulumi:"mooTools"`
	// Prototype support enabled/disabled
	Prototype *bool `pulumi:"prototype"`
}

// WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs and WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{...}
type WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput
	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs struct {
	// ActiveXObject support enabled/disabled
	ActiveXObject pulumi.BoolPtrInput `pulumi:"activeXObject"`
	// AngularJS and Angular support enabled/disabled
	Angular pulumi.BoolPtrInput `pulumi:"angular"`
	// Dojo support enabled/disabled
	Dojo pulumi.BoolPtrInput `pulumi:"dojo"`
	// ExtJS, Sencha Touch support enabled/disabled
	Extjs pulumi.BoolPtrInput `pulumi:"extjs"`
	// ICEfaces support enabled/disabled
	Icefaces pulumi.BoolPtrInput `pulumi:"icefaces"`
	// jQuery, Backbone.js support enabled/disabled
	Jquery pulumi.BoolPtrInput `pulumi:"jquery"`
	// MooTools support enabled/disabled
	MooTools pulumi.BoolPtrInput `pulumi:"mooTools"`
	// Prototype support enabled/disabled
	Prototype pulumi.BoolPtrInput `pulumi:"prototype"`
}

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput)
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput).ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs, WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtr and WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput` via:
//
//	        WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput
	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput
}

type webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs

func WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtr(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput {
	return (*webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType)(v)
}

func (*webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		return &v
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

// ActiveXObject support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ActiveXObject() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.ActiveXObject }).(pulumi.BoolPtrOutput)
}

// AngularJS and Angular support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Angular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Angular }).(pulumi.BoolPtrOutput)
}

// Dojo support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Dojo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Dojo }).(pulumi.BoolPtrOutput)
}

// ExtJS, Sencha Touch support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Extjs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Extjs }).(pulumi.BoolPtrOutput)
}

// ICEfaces support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Icefaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Icefaces }).(pulumi.BoolPtrOutput)
}

// jQuery, Backbone.js support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Jquery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Jquery }).(pulumi.BoolPtrOutput)
}

// MooTools support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) MooTools() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.MooTools }).(pulumi.BoolPtrOutput)
}

// Prototype support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Prototype() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Prototype }).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Elem() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsJavascriptFrameworkSupport
		return ret
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput)
}

// ActiveXObject support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ActiveXObject() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveXObject
	}).(pulumi.BoolPtrOutput)
}

// AngularJS and Angular support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Angular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Angular
	}).(pulumi.BoolPtrOutput)
}

// Dojo support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Dojo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Dojo
	}).(pulumi.BoolPtrOutput)
}

// ExtJS, Sencha Touch support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Extjs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Extjs
	}).(pulumi.BoolPtrOutput)
}

// ICEfaces support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Icefaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Icefaces
	}).(pulumi.BoolPtrOutput)
}

// jQuery, Backbone.js support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Jquery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Jquery
	}).(pulumi.BoolPtrOutput)
}

// MooTools support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) MooTools() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.MooTools
	}).(pulumi.BoolPtrOutput)
}

// Prototype support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Prototype() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Prototype
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRules struct {
	// Java script injection rule
	Rules []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule `pulumi:"rules"`
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs and WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{...}
type WebApplicationMonitoringSettingsJavascriptInjectionRulesInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs struct {
	// Java script injection rule
	Rules WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput)
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput).ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs, WebApplicationMonitoringSettingsJavascriptInjectionRulesPtr and WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput` via:
//
//	        WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput
}

type webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs

func WebApplicationMonitoringSettingsJavascriptInjectionRulesPtr(v *WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput {
	return (*webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType)(v)
}

func (*webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsJavascriptInjectionRules) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		return &v
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

// Java script injection rule
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) Rules() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRules) []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		return v.Rules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) Elem() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptInjectionRules) WebApplicationMonitoringSettingsJavascriptInjectionRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsJavascriptInjectionRules
		return ret
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput)
}

// Java script injection rule
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) Rules() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptInjectionRules) []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRule struct {
	// `fetch()` request capture enabled/disabled
	Enabled *bool `pulumi:"enabled"`
	// The HTML pattern of the java script injection
	HtmlPattern *string `pulumi:"htmlPattern"`
	// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
	Rule string `pulumi:"rule"`
	// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
	Target *string `pulumi:"target"`
	// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
	UrlOperator string `pulumi:"urlOperator"`
	// The url pattern of the java script injection
	UrlPattern *string `pulumi:"urlPattern"`
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs and WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{...}
type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs struct {
	// `fetch()` request capture enabled/disabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The HTML pattern of the java script injection
	HtmlPattern pulumi.StringPtrInput `pulumi:"htmlPattern"`
	// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
	Rule pulumi.StringInput `pulumi:"rule"`
	// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
	UrlOperator pulumi.StringInput `pulumi:"urlOperator"`
	// The url pattern of the java script injection
	UrlPattern pulumi.StringPtrInput `pulumi:"urlPattern"`
}

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput)
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray and WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray{ WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{...} }
type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray []WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return o
}

// `fetch()` request capture enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The HTML pattern of the java script injection
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) HtmlPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.HtmlPattern }).(pulumi.StringPtrOutput)
}

// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) string { return v.Rule }).(pulumi.StringOutput)
}

// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) UrlOperator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) string { return v.UrlOperator }).(pulumi.StringOutput)
}

// The url pattern of the java script injection
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) UrlPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.UrlPattern }).(pulumi.StringPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		return vs[0].([]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput)
}

type WebApplicationSessionReplayConfig struct {
	// (Field has overlap with `WebAppEnablement`) Session replay sampling rating in percent
	CostControlPercentage int `pulumi:"costControlPercentage"`
	// (Field has overlap with `SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
	CssResourceCapturingExclusionRules []string `pulumi:"cssResourceCapturingExclusionRules"`
	// (Field has overlap with `SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
	EnableCssResourceCapturing *bool `pulumi:"enableCssResourceCapturing"`
	// (Field has overlap with `WebAppEnablement`) SessionReplay Enabled/Disabled
	Enabled *bool `pulumi:"enabled"`
}

// WebApplicationSessionReplayConfigInput is an input type that accepts WebApplicationSessionReplayConfigArgs and WebApplicationSessionReplayConfigOutput values.
// You can construct a concrete instance of `WebApplicationSessionReplayConfigInput` via:
//
//	WebApplicationSessionReplayConfigArgs{...}
type WebApplicationSessionReplayConfigInput interface {
	pulumi.Input

	ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput
	ToWebApplicationSessionReplayConfigOutputWithContext(context.Context) WebApplicationSessionReplayConfigOutput
}

type WebApplicationSessionReplayConfigArgs struct {
	// (Field has overlap with `WebAppEnablement`) Session replay sampling rating in percent
	CostControlPercentage pulumi.IntInput `pulumi:"costControlPercentage"`
	// (Field has overlap with `SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
	CssResourceCapturingExclusionRules pulumi.StringArrayInput `pulumi:"cssResourceCapturingExclusionRules"`
	// (Field has overlap with `SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
	EnableCssResourceCapturing pulumi.BoolPtrInput `pulumi:"enableCssResourceCapturing"`
	// (Field has overlap with `WebAppEnablement`) SessionReplay Enabled/Disabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (WebApplicationSessionReplayConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput {
	return i.ToWebApplicationSessionReplayConfigOutputWithContext(context.Background())
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigOutput)
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return i.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigOutput).ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx)
}

// WebApplicationSessionReplayConfigPtrInput is an input type that accepts WebApplicationSessionReplayConfigArgs, WebApplicationSessionReplayConfigPtr and WebApplicationSessionReplayConfigPtrOutput values.
// You can construct a concrete instance of `WebApplicationSessionReplayConfigPtrInput` via:
//
//	        WebApplicationSessionReplayConfigArgs{...}
//
//	or:
//
//	        nil
type WebApplicationSessionReplayConfigPtrInput interface {
	pulumi.Input

	ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput
	ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Context) WebApplicationSessionReplayConfigPtrOutput
}

type webApplicationSessionReplayConfigPtrType WebApplicationSessionReplayConfigArgs

func WebApplicationSessionReplayConfigPtr(v *WebApplicationSessionReplayConfigArgs) WebApplicationSessionReplayConfigPtrInput {
	return (*webApplicationSessionReplayConfigPtrType)(v)
}

func (*webApplicationSessionReplayConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (i *webApplicationSessionReplayConfigPtrType) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return i.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (i *webApplicationSessionReplayConfigPtrType) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigPtrOutput)
}

type WebApplicationSessionReplayConfigOutput struct{ *pulumi.OutputState }

func (WebApplicationSessionReplayConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput {
	return o
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigOutput {
	return o
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return o.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationSessionReplayConfig) *WebApplicationSessionReplayConfig {
		return &v
	}).(WebApplicationSessionReplayConfigPtrOutput)
}

// (Field has overlap with `WebAppEnablement`) Session replay sampling rating in percent
func (o WebApplicationSessionReplayConfigOutput) CostControlPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) int { return v.CostControlPercentage }).(pulumi.IntOutput)
}

// (Field has overlap with `SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
func (o WebApplicationSessionReplayConfigOutput) CssResourceCapturingExclusionRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) []string { return v.CssResourceCapturingExclusionRules }).(pulumi.StringArrayOutput)
}

// (Field has overlap with `SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
func (o WebApplicationSessionReplayConfigOutput) EnableCssResourceCapturing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) *bool { return v.EnableCssResourceCapturing }).(pulumi.BoolPtrOutput)
}

// (Field has overlap with `WebAppEnablement`) SessionReplay Enabled/Disabled
func (o WebApplicationSessionReplayConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type WebApplicationSessionReplayConfigPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationSessionReplayConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (o WebApplicationSessionReplayConfigPtrOutput) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return o
}

func (o WebApplicationSessionReplayConfigPtrOutput) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return o
}

func (o WebApplicationSessionReplayConfigPtrOutput) Elem() WebApplicationSessionReplayConfigOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) WebApplicationSessionReplayConfig {
		if v != nil {
			return *v
		}
		var ret WebApplicationSessionReplayConfig
		return ret
	}).(WebApplicationSessionReplayConfigOutput)
}

// (Field has overlap with `WebAppEnablement`) Session replay sampling rating in percent
func (o WebApplicationSessionReplayConfigPtrOutput) CostControlPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *int {
		if v == nil {
			return nil
		}
		return &v.CostControlPercentage
	}).(pulumi.IntPtrOutput)
}

// (Field has overlap with `SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
func (o WebApplicationSessionReplayConfigPtrOutput) CssResourceCapturingExclusionRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) []string {
		if v == nil {
			return nil
		}
		return v.CssResourceCapturingExclusionRules
	}).(pulumi.StringArrayOutput)
}

// (Field has overlap with `SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
func (o WebApplicationSessionReplayConfigPtrOutput) EnableCssResourceCapturing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCssResourceCapturing
	}).(pulumi.BoolPtrOutput)
}

// (Field has overlap with `WebAppEnablement`) SessionReplay Enabled/Disabled
func (o WebApplicationSessionReplayConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionAndSessionProperties struct {
	// User action and session properties settings
	Properties []WebApplicationUserActionAndSessionPropertiesProperty `pulumi:"properties"`
}

// WebApplicationUserActionAndSessionPropertiesInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesArgs and WebApplicationUserActionAndSessionPropertiesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesArgs{...}
type WebApplicationUserActionAndSessionPropertiesInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput
	ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesOutput
}

type WebApplicationUserActionAndSessionPropertiesArgs struct {
	// User action and session properties settings
	Properties WebApplicationUserActionAndSessionPropertiesPropertyArrayInput `pulumi:"properties"`
}

func (WebApplicationUserActionAndSessionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesOutput)
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesOutput).ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionAndSessionPropertiesPtrInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesArgs, WebApplicationUserActionAndSessionPropertiesPtr and WebApplicationUserActionAndSessionPropertiesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPtrInput` via:
//
//	        WebApplicationUserActionAndSessionPropertiesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionAndSessionPropertiesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput
	ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput
}

type webApplicationUserActionAndSessionPropertiesPtrType WebApplicationUserActionAndSessionPropertiesArgs

func WebApplicationUserActionAndSessionPropertiesPtr(v *WebApplicationUserActionAndSessionPropertiesArgs) WebApplicationUserActionAndSessionPropertiesPtrInput {
	return (*webApplicationUserActionAndSessionPropertiesPtrType)(v)
}

func (*webApplicationUserActionAndSessionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (i *webApplicationUserActionAndSessionPropertiesPtrType) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionAndSessionPropertiesPtrType) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPtrOutput)
}

type WebApplicationUserActionAndSessionPropertiesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionAndSessionProperties) *WebApplicationUserActionAndSessionProperties {
		return &v
	}).(WebApplicationUserActionAndSessionPropertiesPtrOutput)
}

// User action and session properties settings
func (o WebApplicationUserActionAndSessionPropertiesOutput) Properties() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionProperties) []WebApplicationUserActionAndSessionPropertiesProperty {
		return v.Properties
	}).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) Elem() WebApplicationUserActionAndSessionPropertiesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionAndSessionProperties) WebApplicationUserActionAndSessionProperties {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionAndSessionProperties
		return ret
	}).(WebApplicationUserActionAndSessionPropertiesOutput)
}

// User action and session properties settings
func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) Properties() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionAndSessionProperties) []WebApplicationUserActionAndSessionPropertiesProperty {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesProperty struct {
	// The aggregation type of the property.
	Aggregation *string `pulumi:"aggregation"`
	// The cleanup rule of the property.
	//
	// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
	CleanupRule *string `pulumi:"cleanupRule"`
	// The display name of the property
	DisplayName *string `pulumi:"displayName"`
	// Unique id among all userTags and properties of this application
	Id int `pulumi:"id"`
	// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Key of the property
	Key string `pulumi:"key"`
	// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
	LongStringLength *int `pulumi:"longStringLength"`
	// If the origin is `META_DATA`, metaData id of the property
	MetadataId *int `pulumi:"metadataId"`
	// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
	Origin string `pulumi:"origin"`
	// The ID of the request attribute.
	//
	// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
	ServerSideRequestAttribute *string `pulumi:"serverSideRequestAttribute"`
	// If `true`, the property is stored as a session property
	StoreAsSessionProperty *bool `pulumi:"storeAsSessionProperty"`
	// If `true`, the property is stored as a user action property
	StoreAsUserActionProperty *bool `pulumi:"storeAsUserActionProperty"`
	// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
	Type string `pulumi:"type"`
}

// WebApplicationUserActionAndSessionPropertiesPropertyInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesPropertyArgs and WebApplicationUserActionAndSessionPropertiesPropertyOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPropertyInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesPropertyArgs{...}
type WebApplicationUserActionAndSessionPropertiesPropertyInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput
	ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput
}

type WebApplicationUserActionAndSessionPropertiesPropertyArgs struct {
	// The aggregation type of the property.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// The cleanup rule of the property.
	//
	// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
	CleanupRule pulumi.StringPtrInput `pulumi:"cleanupRule"`
	// The display name of the property
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Unique id among all userTags and properties of this application
	Id pulumi.IntInput `pulumi:"id"`
	// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Key of the property
	Key pulumi.StringInput `pulumi:"key"`
	// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
	LongStringLength pulumi.IntPtrInput `pulumi:"longStringLength"`
	// If the origin is `META_DATA`, metaData id of the property
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
	Origin pulumi.StringInput `pulumi:"origin"`
	// The ID of the request attribute.
	//
	// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
	ServerSideRequestAttribute pulumi.StringPtrInput `pulumi:"serverSideRequestAttribute"`
	// If `true`, the property is stored as a session property
	StoreAsSessionProperty pulumi.BoolPtrInput `pulumi:"storeAsSessionProperty"`
	// If `true`, the property is stored as a user action property
	StoreAsUserActionProperty pulumi.BoolPtrInput `pulumi:"storeAsUserActionProperty"`
	// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationUserActionAndSessionPropertiesPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArgs) ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArgs) ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPropertyOutput)
}

// WebApplicationUserActionAndSessionPropertiesPropertyArrayInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesPropertyArray and WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPropertyArrayInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesPropertyArray{ WebApplicationUserActionAndSessionPropertiesPropertyArgs{...} }
type WebApplicationUserActionAndSessionPropertiesPropertyArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput
	ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput
}

type WebApplicationUserActionAndSessionPropertiesPropertyArray []WebApplicationUserActionAndSessionPropertiesPropertyInput

func (WebApplicationUserActionAndSessionPropertiesPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArray) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArray) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesPropertyOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return o
}

// The aggregation type of the property.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// The cleanup rule of the property.
//
// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

// The display name of the property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Unique id among all userTags and properties of this application
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) int { return v.Id }).(pulumi.IntOutput)
}

// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Key of the property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Key }).(pulumi.StringOutput)
}

// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) LongStringLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *int { return v.LongStringLength }).(pulumi.IntPtrOutput)
}

// If the origin is `META_DATA`, metaData id of the property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Origin }).(pulumi.StringOutput)
}

// The ID of the request attribute.
//
// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ServerSideRequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string {
		return v.ServerSideRequestAttribute
	}).(pulumi.StringPtrOutput)
}

// If `true`, the property is stored as a session property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) StoreAsSessionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.StoreAsSessionProperty }).(pulumi.BoolPtrOutput)
}

// If `true`, the property is stored as a user action property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) StoreAsUserActionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.StoreAsUserActionProperty }).(pulumi.BoolPtrOutput)
}

// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Type }).(pulumi.StringOutput)
}

type WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionAndSessionPropertiesProperty {
		return vs[0].([]WebApplicationUserActionAndSessionPropertiesProperty)[vs[1].(int)]
	}).(WebApplicationUserActionAndSessionPropertiesPropertyOutput)
}

type WebApplicationUserActionNamingSettings struct {
	// User action naming rules for custom actions
	CustomActionNamingRules *WebApplicationUserActionNamingSettingsCustomActionNamingRules `pulumi:"customActionNamingRules"`
	// Case insensitive naming
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// User action naming rules for loading actions
	LoadActionNamingRules *WebApplicationUserActionNamingSettingsLoadActionNamingRules `pulumi:"loadActionNamingRules"`
	// User action placeholders
	Placeholders *WebApplicationUserActionNamingSettingsPlaceholders `pulumi:"placeholders"`
	// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
	QueryParameterCleanups []string `pulumi:"queryParameterCleanups"`
	// Deactivate this setting if different domains should not result in separate user actions
	SplitUserActionsByDomain *bool `pulumi:"splitUserActionsByDomain"`
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	UseFirstDetectedLoadAction *bool `pulumi:"useFirstDetectedLoadAction"`
	// User action naming rules for XHR actions
	XhrActionNamingRules *WebApplicationUserActionNamingSettingsXhrActionNamingRules `pulumi:"xhrActionNamingRules"`
}

// WebApplicationUserActionNamingSettingsInput is an input type that accepts WebApplicationUserActionNamingSettingsArgs and WebApplicationUserActionNamingSettingsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsInput` via:
//
//	WebApplicationUserActionNamingSettingsArgs{...}
type WebApplicationUserActionNamingSettingsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput
	ToWebApplicationUserActionNamingSettingsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsOutput
}

type WebApplicationUserActionNamingSettingsArgs struct {
	// User action naming rules for custom actions
	CustomActionNamingRules WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput `pulumi:"customActionNamingRules"`
	// Case insensitive naming
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// User action naming rules for loading actions
	LoadActionNamingRules WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput `pulumi:"loadActionNamingRules"`
	// User action placeholders
	Placeholders WebApplicationUserActionNamingSettingsPlaceholdersPtrInput `pulumi:"placeholders"`
	// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
	QueryParameterCleanups pulumi.StringArrayInput `pulumi:"queryParameterCleanups"`
	// Deactivate this setting if different domains should not result in separate user actions
	SplitUserActionsByDomain pulumi.BoolPtrInput `pulumi:"splitUserActionsByDomain"`
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	UseFirstDetectedLoadAction pulumi.BoolPtrInput `pulumi:"useFirstDetectedLoadAction"`
	// User action naming rules for XHR actions
	XhrActionNamingRules WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput `pulumi:"xhrActionNamingRules"`
}

func (WebApplicationUserActionNamingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput {
	return i.ToWebApplicationUserActionNamingSettingsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsOutput)
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsOutput).ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsArgs, WebApplicationUserActionNamingSettingsPtr and WebApplicationUserActionNamingSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput
	ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPtrOutput
}

type webApplicationUserActionNamingSettingsPtrType WebApplicationUserActionNamingSettingsArgs

func WebApplicationUserActionNamingSettingsPtr(v *WebApplicationUserActionNamingSettingsArgs) WebApplicationUserActionNamingSettingsPtrInput {
	return (*webApplicationUserActionNamingSettingsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPtrType) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPtrType) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPtrOutput)
}

type WebApplicationUserActionNamingSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettings {
		return &v
	}).(WebApplicationUserActionNamingSettingsPtrOutput)
}

// User action naming rules for custom actions
func (o WebApplicationUserActionNamingSettingsOutput) CustomActionNamingRules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		return v.CustomActionNamingRules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

// Case insensitive naming
func (o WebApplicationUserActionNamingSettingsOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// User action naming rules for loading actions
func (o WebApplicationUserActionNamingSettingsOutput) LoadActionNamingRules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		return v.LoadActionNamingRules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsPlaceholders {
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
func (o WebApplicationUserActionNamingSettingsOutput) QueryParameterCleanups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) []string { return v.QueryParameterCleanups }).(pulumi.StringArrayOutput)
}

// Deactivate this setting if different domains should not result in separate user actions
func (o WebApplicationUserActionNamingSettingsOutput) SplitUserActionsByDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.SplitUserActionsByDomain }).(pulumi.BoolPtrOutput)
}

// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
func (o WebApplicationUserActionNamingSettingsOutput) UseFirstDetectedLoadAction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.UseFirstDetectedLoadAction }).(pulumi.BoolPtrOutput)
}

// User action naming rules for XHR actions
func (o WebApplicationUserActionNamingSettingsOutput) XhrActionNamingRules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		return v.XhrActionNamingRules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) Elem() WebApplicationUserActionNamingSettingsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) WebApplicationUserActionNamingSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettings
		return ret
	}).(WebApplicationUserActionNamingSettingsOutput)
}

// User action naming rules for custom actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) CustomActionNamingRules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		if v == nil {
			return nil
		}
		return v.CustomActionNamingRules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

// Case insensitive naming
func (o WebApplicationUserActionNamingSettingsPtrOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreCase
	}).(pulumi.BoolPtrOutput)
}

// User action naming rules for loading actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) LoadActionNamingRules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		if v == nil {
			return nil
		}
		return v.LoadActionNamingRules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPtrOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsPlaceholders {
		if v == nil {
			return nil
		}
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
func (o WebApplicationUserActionNamingSettingsPtrOutput) QueryParameterCleanups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) []string {
		if v == nil {
			return nil
		}
		return v.QueryParameterCleanups
	}).(pulumi.StringArrayOutput)
}

// Deactivate this setting if different domains should not result in separate user actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) SplitUserActionsByDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SplitUserActionsByDomain
	}).(pulumi.BoolPtrOutput)
}

// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
func (o WebApplicationUserActionNamingSettingsPtrOutput) UseFirstDetectedLoadAction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.UseFirstDetectedLoadAction
	}).(pulumi.BoolPtrOutput)
}

// User action naming rules for XHR actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) XhrActionNamingRules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		if v == nil {
			return nil
		}
		return v.XhrActionNamingRules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRules struct {
	// The settings of naming rule
	Rules []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs struct {
	// The settings of naming rule
	Rules WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs, WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtr and WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsCustomActionNamingRules) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRules) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRules) WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsCustomActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRules) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule struct {
	// Defines the conditions when the naming rule should apply
	Conditions *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template string `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template pulumi.StringInput `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions pulumi.BoolPtrInput `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return o
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

// Naming pattern. Use Curly brackets `{}` to select placeholders
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

// If set to `true` the conditions will be connected by logical OR instead of logical AND
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) *bool {
		return v.UseOrConditions
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions struct {
	// Defines the conditions when the naming rule should apply
	Conditions []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 string `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator string `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 pulumi.StringInput `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return o
}

// Must be a defined placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRules struct {
	// The settings of naming rule
	Rules []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs struct {
	// The settings of naming rule
	Rules WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs, WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtr and WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsLoadActionNamingRules) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRules) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRules) WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsLoadActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRules) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule struct {
	// Defines the conditions when the naming rule should apply
	Conditions *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template string `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template pulumi.StringInput `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions pulumi.BoolPtrInput `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return o
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

// Naming pattern. Use Curly brackets `{}` to select placeholders
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

// If set to `true` the conditions will be connected by logical OR instead of logical AND
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) *bool {
		return v.UseOrConditions
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions struct {
	// Defines the conditions when the naming rule should apply
	Conditions []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 string `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator string `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 pulumi.StringInput `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return o
}

// Must be a defined placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholders struct {
	// User action placeholders
	Placeholders []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder `pulumi:"placeholders"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersArgs and WebApplicationUserActionNamingSettingsPlaceholdersOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersArgs struct {
	// User action placeholders
	Placeholders WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput `pulumi:"placeholders"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersOutput)
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersOutput).ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersArgs, WebApplicationUserActionNamingSettingsPlaceholdersPtr and WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsPlaceholdersArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPlaceholdersPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput
}

type webApplicationUserActionNamingSettingsPlaceholdersPtrType WebApplicationUserActionNamingSettingsPlaceholdersArgs

func WebApplicationUserActionNamingSettingsPlaceholdersPtr(v *WebApplicationUserActionNamingSettingsPlaceholdersArgs) WebApplicationUserActionNamingSettingsPlaceholdersPtrInput {
	return (*webApplicationUserActionNamingSettingsPlaceholdersPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPlaceholdersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsPlaceholders) *WebApplicationUserActionNamingSettingsPlaceholders {
		return &v
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholders) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) Elem() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholders) WebApplicationUserActionNamingSettingsPlaceholders {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsPlaceholders
		return ret
	}).(WebApplicationUserActionNamingSettingsPlaceholdersOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholders) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		if v == nil {
			return nil
		}
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder struct {
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	Input string `pulumi:"input"`
	// The ID of the metadata
	MetadataId *int `pulumi:"metadataId"`
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	Name string `pulumi:"name"`
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	ProcessingPart string `pulumi:"processingPart"`
	// The processing step settings
	ProcessingSteps *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps `pulumi:"processingSteps"`
	// Use the element identifier that was selected by Dynatrace
	UseGuessedElementIdentifier *bool `pulumi:"useGuessedElementIdentifier"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs struct {
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	Input pulumi.StringInput `pulumi:"input"`
	// The ID of the metadata
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	Name pulumi.StringInput `pulumi:"name"`
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	ProcessingPart pulumi.StringInput `pulumi:"processingPart"`
	// The processing step settings
	ProcessingSteps WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput `pulumi:"processingSteps"`
	// Use the element identifier that was selected by Dynatrace
	UseGuessedElementIdentifier pulumi.BoolPtrInput `pulumi:"useGuessedElementIdentifier"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray{ WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{...} }
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return o
}

// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) Input() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.Input }).(pulumi.StringOutput)
}

// The ID of the metadata
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// Placeholder name. Valid length needs to be between 1 and 50 characters
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.Name }).(pulumi.StringOutput)
}

// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ProcessingPart() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.ProcessingPart }).(pulumi.StringOutput)
}

// The processing step settings
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ProcessingSteps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		return v.ProcessingSteps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

// Use the element identifier that was selected by Dynatrace
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) UseGuessedElementIdentifier() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *bool {
		return v.UseGuessedElementIdentifier
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		return vs[0].([]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps struct {
	// The processing step
	Steps []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep `pulumi:"steps"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs struct {
	// The processing step
	Steps WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput `pulumi:"steps"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput)
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput).ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs, WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtr and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput
}

type webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs

func WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtr(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput {
	return (*webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		return &v
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

// The processing step
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) Steps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		return v.Steps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) Elem() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps
		return ret
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput)
}

// The processing step
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) Steps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep struct {
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	FallbackToInput *bool `pulumi:"fallbackToInput"`
	// The pattern after the required value. It will be removed.
	PatternAfter *string `pulumi:"patternAfter"`
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	PatternAfterSearchType *string `pulumi:"patternAfterSearchType"`
	// The pattern before the required value. It will be removed.
	PatternBefore *string `pulumi:"patternBefore"`
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	PatternBeforeSearchType *string `pulumi:"patternBeforeSearchType"`
	// The pattern to be replaced.
	//
	//  Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	PatternToReplace *string `pulumi:"patternToReplace"`
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	RegularExpression *string `pulumi:"regularExpression"`
	// Replacement for the original value
	Replacement *string `pulumi:"replacement"`
	// An action to be taken by the processing:
	Type string `pulumi:"type"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs struct {
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	FallbackToInput pulumi.BoolPtrInput `pulumi:"fallbackToInput"`
	// The pattern after the required value. It will be removed.
	PatternAfter pulumi.StringPtrInput `pulumi:"patternAfter"`
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	PatternAfterSearchType pulumi.StringPtrInput `pulumi:"patternAfterSearchType"`
	// The pattern before the required value. It will be removed.
	PatternBefore pulumi.StringPtrInput `pulumi:"patternBefore"`
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	PatternBeforeSearchType pulumi.StringPtrInput `pulumi:"patternBeforeSearchType"`
	// The pattern to be replaced.
	//
	//  Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	PatternToReplace pulumi.StringPtrInput `pulumi:"patternToReplace"`
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	RegularExpression pulumi.StringPtrInput `pulumi:"regularExpression"`
	// Replacement for the original value
	Replacement pulumi.StringPtrInput `pulumi:"replacement"`
	// An action to be taken by the processing:
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray{ WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{...} }
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return o
}

// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) FallbackToInput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *bool {
		return v.FallbackToInput
	}).(pulumi.BoolPtrOutput)
}

// The pattern after the required value. It will be removed.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternAfter
	}).(pulumi.StringPtrOutput)
}

// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternAfterSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternAfterSearchType
	}).(pulumi.StringPtrOutput)
}

// The pattern before the required value. It will be removed.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternBefore
	}).(pulumi.StringPtrOutput)
}

// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternBeforeSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternBeforeSearchType
	}).(pulumi.StringPtrOutput)
}

// The pattern to be replaced.
//
//	Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternToReplace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternToReplace
	}).(pulumi.StringPtrOutput)
}

// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) RegularExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.RegularExpression
	}).(pulumi.StringPtrOutput)
}

// Replacement for the original value
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.Replacement
	}).(pulumi.StringPtrOutput)
}

// An action to be taken by the processing:
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		return vs[0].([]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRules struct {
	// The settings of naming rule
	Rules []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs struct {
	// The settings of naming rule
	Rules WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs, WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtr and WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsXhrActionNamingRules) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRules) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRules) WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsXhrActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRules) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule struct {
	// Defines the conditions when the naming rule should apply
	Conditions *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template string `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template pulumi.StringInput `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions pulumi.BoolPtrInput `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return o
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

// Naming pattern. Use Curly brackets `{}` to select placeholders
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

// If set to `true` the conditions will be connected by logical OR instead of logical AND
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) *bool { return v.UseOrConditions }).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions struct {
	// Defines the conditions when the naming rule should apply
	Conditions []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 string `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator string `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 pulumi.StringInput `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return o
}

// Must be a defined placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserTags struct {
	// User tag settings
	Tags []WebApplicationUserTagsTag `pulumi:"tags"`
}

// WebApplicationUserTagsInput is an input type that accepts WebApplicationUserTagsArgs and WebApplicationUserTagsOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsInput` via:
//
//	WebApplicationUserTagsArgs{...}
type WebApplicationUserTagsInput interface {
	pulumi.Input

	ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput
	ToWebApplicationUserTagsOutputWithContext(context.Context) WebApplicationUserTagsOutput
}

type WebApplicationUserTagsArgs struct {
	// User tag settings
	Tags WebApplicationUserTagsTagArrayInput `pulumi:"tags"`
}

func (WebApplicationUserTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTags)(nil)).Elem()
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput {
	return i.ToWebApplicationUserTagsOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsOutputWithContext(ctx context.Context) WebApplicationUserTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsOutput)
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return i.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsOutput).ToWebApplicationUserTagsPtrOutputWithContext(ctx)
}

// WebApplicationUserTagsPtrInput is an input type that accepts WebApplicationUserTagsArgs, WebApplicationUserTagsPtr and WebApplicationUserTagsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsPtrInput` via:
//
//	        WebApplicationUserTagsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserTagsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput
	ToWebApplicationUserTagsPtrOutputWithContext(context.Context) WebApplicationUserTagsPtrOutput
}

type webApplicationUserTagsPtrType WebApplicationUserTagsArgs

func WebApplicationUserTagsPtr(v *WebApplicationUserTagsArgs) WebApplicationUserTagsPtrInput {
	return (*webApplicationUserTagsPtrType)(v)
}

func (*webApplicationUserTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserTags)(nil)).Elem()
}

func (i *webApplicationUserTagsPtrType) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return i.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserTagsPtrType) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsPtrOutput)
}

type WebApplicationUserTagsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTags)(nil)).Elem()
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput {
	return o
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsOutputWithContext(ctx context.Context) WebApplicationUserTagsOutput {
	return o
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return o.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserTags) *WebApplicationUserTags {
		return &v
	}).(WebApplicationUserTagsPtrOutput)
}

// User tag settings
func (o WebApplicationUserTagsOutput) Tags() WebApplicationUserTagsTagArrayOutput {
	return o.ApplyT(func(v WebApplicationUserTags) []WebApplicationUserTagsTag { return v.Tags }).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserTags)(nil)).Elem()
}

func (o WebApplicationUserTagsPtrOutput) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return o
}

func (o WebApplicationUserTagsPtrOutput) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return o
}

func (o WebApplicationUserTagsPtrOutput) Elem() WebApplicationUserTagsOutput {
	return o.ApplyT(func(v *WebApplicationUserTags) WebApplicationUserTags {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserTags
		return ret
	}).(WebApplicationUserTagsOutput)
}

// User tag settings
func (o WebApplicationUserTagsPtrOutput) Tags() WebApplicationUserTagsTagArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserTags) []WebApplicationUserTagsTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsTag struct {
	// Cleanup rule expression of the userTag
	CleanupRule *string `pulumi:"cleanupRule"`
	Id          *int    `pulumi:"id"`
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// If it's of type metaData, metaData id of the userTag
	MetadataId *int `pulumi:"metadataId"`
	// The ID of the RrequestAttribute for the userTag
	ServerSideRequestAttribute *string `pulumi:"serverSideRequestAttribute"`
	// A unique ID among all userTags and properties of this application. Minimum value is 1.
	UniqueId *int `pulumi:"uniqueId"`
}

// WebApplicationUserTagsTagInput is an input type that accepts WebApplicationUserTagsTagArgs and WebApplicationUserTagsTagOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsTagInput` via:
//
//	WebApplicationUserTagsTagArgs{...}
type WebApplicationUserTagsTagInput interface {
	pulumi.Input

	ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput
	ToWebApplicationUserTagsTagOutputWithContext(context.Context) WebApplicationUserTagsTagOutput
}

type WebApplicationUserTagsTagArgs struct {
	// Cleanup rule expression of the userTag
	CleanupRule pulumi.StringPtrInput `pulumi:"cleanupRule"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// If it's of type metaData, metaData id of the userTag
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// The ID of the RrequestAttribute for the userTag
	ServerSideRequestAttribute pulumi.StringPtrInput `pulumi:"serverSideRequestAttribute"`
	// A unique ID among all userTags and properties of this application. Minimum value is 1.
	UniqueId pulumi.IntPtrInput `pulumi:"uniqueId"`
}

func (WebApplicationUserTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTagsTag)(nil)).Elem()
}

func (i WebApplicationUserTagsTagArgs) ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput {
	return i.ToWebApplicationUserTagsTagOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsTagArgs) ToWebApplicationUserTagsTagOutputWithContext(ctx context.Context) WebApplicationUserTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsTagOutput)
}

// WebApplicationUserTagsTagArrayInput is an input type that accepts WebApplicationUserTagsTagArray and WebApplicationUserTagsTagArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsTagArrayInput` via:
//
//	WebApplicationUserTagsTagArray{ WebApplicationUserTagsTagArgs{...} }
type WebApplicationUserTagsTagArrayInput interface {
	pulumi.Input

	ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput
	ToWebApplicationUserTagsTagArrayOutputWithContext(context.Context) WebApplicationUserTagsTagArrayOutput
}

type WebApplicationUserTagsTagArray []WebApplicationUserTagsTagInput

func (WebApplicationUserTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserTagsTag)(nil)).Elem()
}

func (i WebApplicationUserTagsTagArray) ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput {
	return i.ToWebApplicationUserTagsTagArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsTagArray) ToWebApplicationUserTagsTagArrayOutputWithContext(ctx context.Context) WebApplicationUserTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsTagOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTagsTag)(nil)).Elem()
}

func (o WebApplicationUserTagsTagOutput) ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput {
	return o
}

func (o WebApplicationUserTagsTagOutput) ToWebApplicationUserTagsTagOutputWithContext(ctx context.Context) WebApplicationUserTagsTagOutput {
	return o
}

// Cleanup rule expression of the userTag
func (o WebApplicationUserTagsTagOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserTagsTagOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
func (o WebApplicationUserTagsTagOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// If it's of type metaData, metaData id of the userTag
func (o WebApplicationUserTagsTagOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// The ID of the RrequestAttribute for the userTag
func (o WebApplicationUserTagsTagOutput) ServerSideRequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *string { return v.ServerSideRequestAttribute }).(pulumi.StringPtrOutput)
}

// A unique ID among all userTags and properties of this application. Minimum value is 1.
func (o WebApplicationUserTagsTagOutput) UniqueId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.UniqueId }).(pulumi.IntPtrOutput)
}

type WebApplicationUserTagsTagArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserTagsTag)(nil)).Elem()
}

func (o WebApplicationUserTagsTagArrayOutput) ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput {
	return o
}

func (o WebApplicationUserTagsTagArrayOutput) ToWebApplicationUserTagsTagArrayOutputWithContext(ctx context.Context) WebApplicationUserTagsTagArrayOutput {
	return o
}

func (o WebApplicationUserTagsTagArrayOutput) Index(i pulumi.IntInput) WebApplicationUserTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserTagsTag {
		return vs[0].([]WebApplicationUserTagsTag)[vs[1].(int)]
	}).(WebApplicationUserTagsTagOutput)
}

type WebApplicationWaterfallSettings struct {
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold int `pulumi:"resourceBrowserCachingThreshold"`
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold int `pulumi:"resourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold int `pulumi:"slowCndResourcesThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold int `pulumi:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold int `pulumi:"slowThirdPartyResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold int `pulumi:"speedIndexVisuallyCompleteRatioThreshold"`
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold int `pulumi:"uncompressedResourcesThreshold"`
}

// WebApplicationWaterfallSettingsInput is an input type that accepts WebApplicationWaterfallSettingsArgs and WebApplicationWaterfallSettingsOutput values.
// You can construct a concrete instance of `WebApplicationWaterfallSettingsInput` via:
//
//	WebApplicationWaterfallSettingsArgs{...}
type WebApplicationWaterfallSettingsInput interface {
	pulumi.Input

	ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput
	ToWebApplicationWaterfallSettingsOutputWithContext(context.Context) WebApplicationWaterfallSettingsOutput
}

type WebApplicationWaterfallSettingsArgs struct {
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold pulumi.IntInput `pulumi:"resourceBrowserCachingThreshold"`
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold pulumi.IntInput `pulumi:"resourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold pulumi.IntInput `pulumi:"slowCndResourcesThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold pulumi.IntInput `pulumi:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold pulumi.IntInput `pulumi:"slowThirdPartyResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold pulumi.IntInput `pulumi:"speedIndexVisuallyCompleteRatioThreshold"`
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold pulumi.IntInput `pulumi:"uncompressedResourcesThreshold"`
}

func (WebApplicationWaterfallSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationWaterfallSettings)(nil)).Elem()
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput {
	return i.ToWebApplicationWaterfallSettingsOutputWithContext(context.Background())
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsOutput)
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return i.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsOutput).ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx)
}

// WebApplicationWaterfallSettingsPtrInput is an input type that accepts WebApplicationWaterfallSettingsArgs, WebApplicationWaterfallSettingsPtr and WebApplicationWaterfallSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationWaterfallSettingsPtrInput` via:
//
//	        WebApplicationWaterfallSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationWaterfallSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput
	ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Context) WebApplicationWaterfallSettingsPtrOutput
}

type webApplicationWaterfallSettingsPtrType WebApplicationWaterfallSettingsArgs

func WebApplicationWaterfallSettingsPtr(v *WebApplicationWaterfallSettingsArgs) WebApplicationWaterfallSettingsPtrInput {
	return (*webApplicationWaterfallSettingsPtrType)(v)
}

func (*webApplicationWaterfallSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationWaterfallSettings)(nil)).Elem()
}

func (i *webApplicationWaterfallSettingsPtrType) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return i.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationWaterfallSettingsPtrType) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsPtrOutput)
}

type WebApplicationWaterfallSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationWaterfallSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationWaterfallSettings)(nil)).Elem()
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput {
	return o
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsOutput {
	return o
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return o.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationWaterfallSettings) *WebApplicationWaterfallSettings {
		return &v
	}).(WebApplicationWaterfallSettingsPtrOutput)
}

// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
func (o WebApplicationWaterfallSettingsOutput) ResourceBrowserCachingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.ResourceBrowserCachingThreshold }).(pulumi.IntOutput)
}

// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) ResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.ResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowCndResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowCndResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowFirstPartyResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowFirstPartyResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowThirdPartyResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowThirdPartyResourcesThreshold }).(pulumi.IntOutput)
}

// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SpeedIndexVisuallyCompleteRatioThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SpeedIndexVisuallyCompleteRatioThreshold }).(pulumi.IntOutput)
}

// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
func (o WebApplicationWaterfallSettingsOutput) UncompressedResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.UncompressedResourcesThreshold }).(pulumi.IntOutput)
}

type WebApplicationWaterfallSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationWaterfallSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationWaterfallSettings)(nil)).Elem()
}

func (o WebApplicationWaterfallSettingsPtrOutput) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return o
}

func (o WebApplicationWaterfallSettingsPtrOutput) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return o
}

func (o WebApplicationWaterfallSettingsPtrOutput) Elem() WebApplicationWaterfallSettingsOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) WebApplicationWaterfallSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationWaterfallSettings
		return ret
	}).(WebApplicationWaterfallSettingsOutput)
}

// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) ResourceBrowserCachingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ResourceBrowserCachingThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) ResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowCndResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowCndResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowFirstPartyResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowFirstPartyResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowThirdPartyResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowThirdPartyResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SpeedIndexVisuallyCompleteRatioThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SpeedIndexVisuallyCompleteRatioThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) UncompressedResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.UncompressedResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationXhrActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold int `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold int `pulumi:"toleratedThreshold"`
}

// WebApplicationXhrActionApdexSettingsInput is an input type that accepts WebApplicationXhrActionApdexSettingsArgs and WebApplicationXhrActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationXhrActionApdexSettingsInput` via:
//
//	WebApplicationXhrActionApdexSettingsArgs{...}
type WebApplicationXhrActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput
	ToWebApplicationXhrActionApdexSettingsOutputWithContext(context.Context) WebApplicationXhrActionApdexSettingsOutput
}

type WebApplicationXhrActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntInput `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationXhrActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput {
	return i.ToWebApplicationXhrActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsOutput)
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return i.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsOutput).ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationXhrActionApdexSettingsPtrInput is an input type that accepts WebApplicationXhrActionApdexSettingsArgs, WebApplicationXhrActionApdexSettingsPtr and WebApplicationXhrActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationXhrActionApdexSettingsPtrInput` via:
//
//	        WebApplicationXhrActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationXhrActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput
	ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationXhrActionApdexSettingsPtrOutput
}

type webApplicationXhrActionApdexSettingsPtrType WebApplicationXhrActionApdexSettingsArgs

func WebApplicationXhrActionApdexSettingsPtr(v *WebApplicationXhrActionApdexSettingsArgs) WebApplicationXhrActionApdexSettingsPtrInput {
	return (*webApplicationXhrActionApdexSettingsPtrType)(v)
}

func (*webApplicationXhrActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationXhrActionApdexSettingsPtrType) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return i.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationXhrActionApdexSettingsPtrType) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsPtrOutput)
}

type WebApplicationXhrActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationXhrActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return o.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationXhrActionApdexSettings) *WebApplicationXhrActionApdexSettings {
		return &v
	}).(WebApplicationXhrActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) int { return v.FrustratingFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) int { return v.FrustratingThreshold }).(pulumi.IntOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationXhrActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) int { return v.ToleratedFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) int { return v.ToleratedThreshold }).(pulumi.IntOutput)
}

type WebApplicationXhrActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationXhrActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) Elem() WebApplicationXhrActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) WebApplicationXhrActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationXhrActionApdexSettings
		return ret
	}).(WebApplicationXhrActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationXhrActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebhookNotificationHeaders struct {
	// An additional HTTP Header to include when sending requests
	Headers []WebhookNotificationHeadersHeader `pulumi:"headers"`
}

// WebhookNotificationHeadersInput is an input type that accepts WebhookNotificationHeadersArgs and WebhookNotificationHeadersOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersInput` via:
//
//	WebhookNotificationHeadersArgs{...}
type WebhookNotificationHeadersInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput
	ToWebhookNotificationHeadersOutputWithContext(context.Context) WebhookNotificationHeadersOutput
}

type WebhookNotificationHeadersArgs struct {
	// An additional HTTP Header to include when sending requests
	Headers WebhookNotificationHeadersHeaderArrayInput `pulumi:"headers"`
}

func (WebhookNotificationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeaders)(nil)).Elem()
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput {
	return i.ToWebhookNotificationHeadersOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersOutputWithContext(ctx context.Context) WebhookNotificationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersOutput)
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return i.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersOutput).ToWebhookNotificationHeadersPtrOutputWithContext(ctx)
}

// WebhookNotificationHeadersPtrInput is an input type that accepts WebhookNotificationHeadersArgs, WebhookNotificationHeadersPtr and WebhookNotificationHeadersPtrOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersPtrInput` via:
//
//	        WebhookNotificationHeadersArgs{...}
//
//	or:
//
//	        nil
type WebhookNotificationHeadersPtrInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput
	ToWebhookNotificationHeadersPtrOutputWithContext(context.Context) WebhookNotificationHeadersPtrOutput
}

type webhookNotificationHeadersPtrType WebhookNotificationHeadersArgs

func WebhookNotificationHeadersPtr(v *WebhookNotificationHeadersArgs) WebhookNotificationHeadersPtrInput {
	return (*webhookNotificationHeadersPtrType)(v)
}

func (*webhookNotificationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationHeaders)(nil)).Elem()
}

func (i *webhookNotificationHeadersPtrType) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return i.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i *webhookNotificationHeadersPtrType) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersPtrOutput)
}

type WebhookNotificationHeadersOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeaders)(nil)).Elem()
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput {
	return o
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersOutputWithContext(ctx context.Context) WebhookNotificationHeadersOutput {
	return o
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return o.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookNotificationHeaders) *WebhookNotificationHeaders {
		return &v
	}).(WebhookNotificationHeadersPtrOutput)
}

// An additional HTTP Header to include when sending requests
func (o WebhookNotificationHeadersOutput) Headers() WebhookNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v WebhookNotificationHeaders) []WebhookNotificationHeadersHeader { return v.Headers }).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersPtrOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationHeaders)(nil)).Elem()
}

func (o WebhookNotificationHeadersPtrOutput) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return o
}

func (o WebhookNotificationHeadersPtrOutput) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return o
}

func (o WebhookNotificationHeadersPtrOutput) Elem() WebhookNotificationHeadersOutput {
	return o.ApplyT(func(v *WebhookNotificationHeaders) WebhookNotificationHeaders {
		if v != nil {
			return *v
		}
		var ret WebhookNotificationHeaders
		return ret
	}).(WebhookNotificationHeadersOutput)
}

// An additional HTTP Header to include when sending requests
func (o WebhookNotificationHeadersPtrOutput) Headers() WebhookNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v *WebhookNotificationHeaders) []WebhookNotificationHeadersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersHeader struct {
	// The name of the HTTP header
	Name string `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue *string `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value *string `pulumi:"value"`
}

// WebhookNotificationHeadersHeaderInput is an input type that accepts WebhookNotificationHeadersHeaderArgs and WebhookNotificationHeadersHeaderOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersHeaderInput` via:
//
//	WebhookNotificationHeadersHeaderArgs{...}
type WebhookNotificationHeadersHeaderInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput
	ToWebhookNotificationHeadersHeaderOutputWithContext(context.Context) WebhookNotificationHeadersHeaderOutput
}

type WebhookNotificationHeadersHeaderArgs struct {
	// The name of the HTTP header
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WebhookNotificationHeadersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (i WebhookNotificationHeadersHeaderArgs) ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput {
	return i.ToWebhookNotificationHeadersHeaderOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersHeaderArgs) ToWebhookNotificationHeadersHeaderOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersHeaderOutput)
}

// WebhookNotificationHeadersHeaderArrayInput is an input type that accepts WebhookNotificationHeadersHeaderArray and WebhookNotificationHeadersHeaderArrayOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersHeaderArrayInput` via:
//
//	WebhookNotificationHeadersHeaderArray{ WebhookNotificationHeadersHeaderArgs{...} }
type WebhookNotificationHeadersHeaderArrayInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput
	ToWebhookNotificationHeadersHeaderArrayOutputWithContext(context.Context) WebhookNotificationHeadersHeaderArrayOutput
}

type WebhookNotificationHeadersHeaderArray []WebhookNotificationHeadersHeaderInput

func (WebhookNotificationHeadersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (i WebhookNotificationHeadersHeaderArray) ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput {
	return i.ToWebhookNotificationHeadersHeaderArrayOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersHeaderArray) ToWebhookNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersHeaderOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (o WebhookNotificationHeadersHeaderOutput) ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderOutput) ToWebhookNotificationHeadersHeaderOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderOutput {
	return o
}

// The name of the HTTP header
func (o WebhookNotificationHeadersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o WebhookNotificationHeadersHeaderOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o WebhookNotificationHeadersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebhookNotificationHeadersHeaderArrayOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (o WebhookNotificationHeadersHeaderArrayOutput) ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderArrayOutput) ToWebhookNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderArrayOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderArrayOutput) Index(i pulumi.IntInput) WebhookNotificationHeadersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookNotificationHeadersHeader {
		return vs[0].([]WebhookNotificationHeadersHeader)[vs[1].(int)]
	}).(WebhookNotificationHeadersHeaderOutput)
}

type WebhookNotificationOauth2Credentials struct {
	// Access token URL
	AccessTokenUrl string `pulumi:"accessTokenUrl"`
	// If false, the client credentials are included in the HTTP request body.
	AuthenticateViaRequestHeader *bool `pulumi:"authenticateViaRequestHeader"`
	// Client ID
	ClientId string `pulumi:"clientId"`
	// Client secret
	ClientSecret string `pulumi:"clientSecret"`
	// The scope of access you are requesting
	Scope *string `pulumi:"scope"`
}

// WebhookNotificationOauth2CredentialsInput is an input type that accepts WebhookNotificationOauth2CredentialsArgs and WebhookNotificationOauth2CredentialsOutput values.
// You can construct a concrete instance of `WebhookNotificationOauth2CredentialsInput` via:
//
//	WebhookNotificationOauth2CredentialsArgs{...}
type WebhookNotificationOauth2CredentialsInput interface {
	pulumi.Input

	ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput
	ToWebhookNotificationOauth2CredentialsOutputWithContext(context.Context) WebhookNotificationOauth2CredentialsOutput
}

type WebhookNotificationOauth2CredentialsArgs struct {
	// Access token URL
	AccessTokenUrl pulumi.StringInput `pulumi:"accessTokenUrl"`
	// If false, the client credentials are included in the HTTP request body.
	AuthenticateViaRequestHeader pulumi.BoolPtrInput `pulumi:"authenticateViaRequestHeader"`
	// Client ID
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client secret
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The scope of access you are requesting
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (WebhookNotificationOauth2CredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput {
	return i.ToWebhookNotificationOauth2CredentialsOutputWithContext(context.Background())
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsOutput)
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return i.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsOutput).ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx)
}

// WebhookNotificationOauth2CredentialsPtrInput is an input type that accepts WebhookNotificationOauth2CredentialsArgs, WebhookNotificationOauth2CredentialsPtr and WebhookNotificationOauth2CredentialsPtrOutput values.
// You can construct a concrete instance of `WebhookNotificationOauth2CredentialsPtrInput` via:
//
//	        WebhookNotificationOauth2CredentialsArgs{...}
//
//	or:
//
//	        nil
type WebhookNotificationOauth2CredentialsPtrInput interface {
	pulumi.Input

	ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput
	ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Context) WebhookNotificationOauth2CredentialsPtrOutput
}

type webhookNotificationOauth2CredentialsPtrType WebhookNotificationOauth2CredentialsArgs

func WebhookNotificationOauth2CredentialsPtr(v *WebhookNotificationOauth2CredentialsArgs) WebhookNotificationOauth2CredentialsPtrInput {
	return (*webhookNotificationOauth2CredentialsPtrType)(v)
}

func (*webhookNotificationOauth2CredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (i *webhookNotificationOauth2CredentialsPtrType) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return i.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (i *webhookNotificationOauth2CredentialsPtrType) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsPtrOutput)
}

type WebhookNotificationOauth2CredentialsOutput struct{ *pulumi.OutputState }

func (WebhookNotificationOauth2CredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return o.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookNotificationOauth2Credentials) *WebhookNotificationOauth2Credentials {
		return &v
	}).(WebhookNotificationOauth2CredentialsPtrOutput)
}

// Access token URL
func (o WebhookNotificationOauth2CredentialsOutput) AccessTokenUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.AccessTokenUrl }).(pulumi.StringOutput)
}

// If false, the client credentials are included in the HTTP request body.
func (o WebhookNotificationOauth2CredentialsOutput) AuthenticateViaRequestHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) *bool { return v.AuthenticateViaRequestHeader }).(pulumi.BoolPtrOutput)
}

// Client ID
func (o WebhookNotificationOauth2CredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// Client secret
func (o WebhookNotificationOauth2CredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The scope of access you are requesting
func (o WebhookNotificationOauth2CredentialsOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type WebhookNotificationOauth2CredentialsPtrOutput struct{ *pulumi.OutputState }

func (WebhookNotificationOauth2CredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) Elem() WebhookNotificationOauth2CredentialsOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) WebhookNotificationOauth2Credentials {
		if v != nil {
			return *v
		}
		var ret WebhookNotificationOauth2Credentials
		return ret
	}).(WebhookNotificationOauth2CredentialsOutput)
}

// Access token URL
func (o WebhookNotificationOauth2CredentialsPtrOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccessTokenUrl
	}).(pulumi.StringPtrOutput)
}

// If false, the client credentials are included in the HTTP request body.
func (o WebhookNotificationOauth2CredentialsPtrOutput) AuthenticateViaRequestHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *bool {
		if v == nil {
			return nil
		}
		return v.AuthenticateViaRequestHeader
	}).(pulumi.BoolPtrOutput)
}

// Client ID
func (o WebhookNotificationOauth2CredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret
func (o WebhookNotificationOauth2CredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The scope of access you are requesting
func (o WebhookNotificationOauth2CredentialsPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

type XmattersNotificationHeaders struct {
	// An additional HTTP Header to include when sending requests
	Headers []XmattersNotificationHeadersHeader `pulumi:"headers"`
}

// XmattersNotificationHeadersInput is an input type that accepts XmattersNotificationHeadersArgs and XmattersNotificationHeadersOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersInput` via:
//
//	XmattersNotificationHeadersArgs{...}
type XmattersNotificationHeadersInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput
	ToXmattersNotificationHeadersOutputWithContext(context.Context) XmattersNotificationHeadersOutput
}

type XmattersNotificationHeadersArgs struct {
	// An additional HTTP Header to include when sending requests
	Headers XmattersNotificationHeadersHeaderArrayInput `pulumi:"headers"`
}

func (XmattersNotificationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeaders)(nil)).Elem()
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput {
	return i.ToXmattersNotificationHeadersOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersOutputWithContext(ctx context.Context) XmattersNotificationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersOutput)
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return i.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersOutput).ToXmattersNotificationHeadersPtrOutputWithContext(ctx)
}

// XmattersNotificationHeadersPtrInput is an input type that accepts XmattersNotificationHeadersArgs, XmattersNotificationHeadersPtr and XmattersNotificationHeadersPtrOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersPtrInput` via:
//
//	        XmattersNotificationHeadersArgs{...}
//
//	or:
//
//	        nil
type XmattersNotificationHeadersPtrInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput
	ToXmattersNotificationHeadersPtrOutputWithContext(context.Context) XmattersNotificationHeadersPtrOutput
}

type xmattersNotificationHeadersPtrType XmattersNotificationHeadersArgs

func XmattersNotificationHeadersPtr(v *XmattersNotificationHeadersArgs) XmattersNotificationHeadersPtrInput {
	return (*xmattersNotificationHeadersPtrType)(v)
}

func (*xmattersNotificationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**XmattersNotificationHeaders)(nil)).Elem()
}

func (i *xmattersNotificationHeadersPtrType) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return i.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i *xmattersNotificationHeadersPtrType) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersPtrOutput)
}

type XmattersNotificationHeadersOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeaders)(nil)).Elem()
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput {
	return o
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersOutputWithContext(ctx context.Context) XmattersNotificationHeadersOutput {
	return o
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return o.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v XmattersNotificationHeaders) *XmattersNotificationHeaders {
		return &v
	}).(XmattersNotificationHeadersPtrOutput)
}

// An additional HTTP Header to include when sending requests
func (o XmattersNotificationHeadersOutput) Headers() XmattersNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v XmattersNotificationHeaders) []XmattersNotificationHeadersHeader { return v.Headers }).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersPtrOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XmattersNotificationHeaders)(nil)).Elem()
}

func (o XmattersNotificationHeadersPtrOutput) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return o
}

func (o XmattersNotificationHeadersPtrOutput) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return o
}

func (o XmattersNotificationHeadersPtrOutput) Elem() XmattersNotificationHeadersOutput {
	return o.ApplyT(func(v *XmattersNotificationHeaders) XmattersNotificationHeaders {
		if v != nil {
			return *v
		}
		var ret XmattersNotificationHeaders
		return ret
	}).(XmattersNotificationHeadersOutput)
}

// An additional HTTP Header to include when sending requests
func (o XmattersNotificationHeadersPtrOutput) Headers() XmattersNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v *XmattersNotificationHeaders) []XmattersNotificationHeadersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersHeader struct {
	// The name of the HTTP header
	Name string `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue *string `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value *string `pulumi:"value"`
}

// XmattersNotificationHeadersHeaderInput is an input type that accepts XmattersNotificationHeadersHeaderArgs and XmattersNotificationHeadersHeaderOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersHeaderInput` via:
//
//	XmattersNotificationHeadersHeaderArgs{...}
type XmattersNotificationHeadersHeaderInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput
	ToXmattersNotificationHeadersHeaderOutputWithContext(context.Context) XmattersNotificationHeadersHeaderOutput
}

type XmattersNotificationHeadersHeaderArgs struct {
	// The name of the HTTP header
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (XmattersNotificationHeadersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (i XmattersNotificationHeadersHeaderArgs) ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput {
	return i.ToXmattersNotificationHeadersHeaderOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersHeaderArgs) ToXmattersNotificationHeadersHeaderOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersHeaderOutput)
}

// XmattersNotificationHeadersHeaderArrayInput is an input type that accepts XmattersNotificationHeadersHeaderArray and XmattersNotificationHeadersHeaderArrayOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersHeaderArrayInput` via:
//
//	XmattersNotificationHeadersHeaderArray{ XmattersNotificationHeadersHeaderArgs{...} }
type XmattersNotificationHeadersHeaderArrayInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput
	ToXmattersNotificationHeadersHeaderArrayOutputWithContext(context.Context) XmattersNotificationHeadersHeaderArrayOutput
}

type XmattersNotificationHeadersHeaderArray []XmattersNotificationHeadersHeaderInput

func (XmattersNotificationHeadersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (i XmattersNotificationHeadersHeaderArray) ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput {
	return i.ToXmattersNotificationHeadersHeaderArrayOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersHeaderArray) ToXmattersNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersHeaderOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (o XmattersNotificationHeadersHeaderOutput) ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderOutput) ToXmattersNotificationHeadersHeaderOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderOutput {
	return o
}

// The name of the HTTP header
func (o XmattersNotificationHeadersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o XmattersNotificationHeadersHeaderOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o XmattersNotificationHeadersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type XmattersNotificationHeadersHeaderArrayOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (o XmattersNotificationHeadersHeaderArrayOutput) ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderArrayOutput) ToXmattersNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderArrayOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderArrayOutput) Index(i pulumi.IntInput) XmattersNotificationHeadersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) XmattersNotificationHeadersHeader {
		return vs[0].([]XmattersNotificationHeadersHeader)[vs[1].(int)]
	}).(XmattersNotificationHeadersHeaderOutput)
}

type GetAlertingProfilesValue struct {
	// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id string `pulumi:"id"`
	// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId string `pulumi:"legacyId"`
	// The ID of the management zone to which the alerting profile applies (Settings 2.0)
	ManagementZoneId string `pulumi:"managementZoneId"`
	// The ID of the management zone to which the alerting profile applies (Configuration API)
	ManagementZoneLegacyId string `pulumi:"managementZoneLegacyId"`
	// The name of the Alerting Profile
	Name string `pulumi:"name"`
}

// GetAlertingProfilesValueInput is an input type that accepts GetAlertingProfilesValueArgs and GetAlertingProfilesValueOutput values.
// You can construct a concrete instance of `GetAlertingProfilesValueInput` via:
//
//	GetAlertingProfilesValueArgs{...}
type GetAlertingProfilesValueInput interface {
	pulumi.Input

	ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput
	ToGetAlertingProfilesValueOutputWithContext(context.Context) GetAlertingProfilesValueOutput
}

type GetAlertingProfilesValueArgs struct {
	// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId pulumi.StringInput `pulumi:"legacyId"`
	// The ID of the management zone to which the alerting profile applies (Settings 2.0)
	ManagementZoneId pulumi.StringInput `pulumi:"managementZoneId"`
	// The ID of the management zone to which the alerting profile applies (Configuration API)
	ManagementZoneLegacyId pulumi.StringInput `pulumi:"managementZoneLegacyId"`
	// The name of the Alerting Profile
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAlertingProfilesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingProfilesValue)(nil)).Elem()
}

func (i GetAlertingProfilesValueArgs) ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput {
	return i.ToGetAlertingProfilesValueOutputWithContext(context.Background())
}

func (i GetAlertingProfilesValueArgs) ToGetAlertingProfilesValueOutputWithContext(ctx context.Context) GetAlertingProfilesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingProfilesValueOutput)
}

// GetAlertingProfilesValueArrayInput is an input type that accepts GetAlertingProfilesValueArray and GetAlertingProfilesValueArrayOutput values.
// You can construct a concrete instance of `GetAlertingProfilesValueArrayInput` via:
//
//	GetAlertingProfilesValueArray{ GetAlertingProfilesValueArgs{...} }
type GetAlertingProfilesValueArrayInput interface {
	pulumi.Input

	ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput
	ToGetAlertingProfilesValueArrayOutputWithContext(context.Context) GetAlertingProfilesValueArrayOutput
}

type GetAlertingProfilesValueArray []GetAlertingProfilesValueInput

func (GetAlertingProfilesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingProfilesValue)(nil)).Elem()
}

func (i GetAlertingProfilesValueArray) ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput {
	return i.ToGetAlertingProfilesValueArrayOutputWithContext(context.Background())
}

func (i GetAlertingProfilesValueArray) ToGetAlertingProfilesValueArrayOutputWithContext(ctx context.Context) GetAlertingProfilesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingProfilesValueArrayOutput)
}

type GetAlertingProfilesValueOutput struct{ *pulumi.OutputState }

func (GetAlertingProfilesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingProfilesValue)(nil)).Elem()
}

func (o GetAlertingProfilesValueOutput) ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput {
	return o
}

func (o GetAlertingProfilesValueOutput) ToGetAlertingProfilesValueOutputWithContext(ctx context.Context) GetAlertingProfilesValueOutput {
	return o
}

// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
func (o GetAlertingProfilesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
func (o GetAlertingProfilesValueOutput) LegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.LegacyId }).(pulumi.StringOutput)
}

// The ID of the management zone to which the alerting profile applies (Settings 2.0)
func (o GetAlertingProfilesValueOutput) ManagementZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.ManagementZoneId }).(pulumi.StringOutput)
}

// The ID of the management zone to which the alerting profile applies (Configuration API)
func (o GetAlertingProfilesValueOutput) ManagementZoneLegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.ManagementZoneLegacyId }).(pulumi.StringOutput)
}

// The name of the Alerting Profile
func (o GetAlertingProfilesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.Name }).(pulumi.StringOutput)
}

type GetAlertingProfilesValueArrayOutput struct{ *pulumi.OutputState }

func (GetAlertingProfilesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingProfilesValue)(nil)).Elem()
}

func (o GetAlertingProfilesValueArrayOutput) ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput {
	return o
}

func (o GetAlertingProfilesValueArrayOutput) ToGetAlertingProfilesValueArrayOutputWithContext(ctx context.Context) GetAlertingProfilesValueArrayOutput {
	return o
}

func (o GetAlertingProfilesValueArrayOutput) Index(i pulumi.IntInput) GetAlertingProfilesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertingProfilesValue {
		return vs[0].([]GetAlertingProfilesValue)[vs[1].(int)]
	}).(GetAlertingProfilesValueOutput)
}

type GetApiTokensApiToken struct {
	// Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
	CreationDate string `pulumi:"creationDate"`
	// The token is enabled (true) or disabled (false), default disabled (false).
	Enabled *bool `pulumi:"enabled"`
	// The expiration date of the token.
	ExpirationDate *string `pulumi:"expirationDate"`
	// Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
	LastUsedDate string `pulumi:"lastUsedDate"`
	// Token last used IP address.
	LastUsedIpAddress string `pulumi:"lastUsedIpAddress"`
	// Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').
	ModifiedDate string `pulumi:"modifiedDate"`
	// The name of the token.
	Name string `pulumi:"name"`
	// The owner of the token
	Owner string `pulumi:"owner"`
	// The token is a personal access token (true) or an API token (false).
	PersonalAccessToken *bool `pulumi:"personalAccessToken"`
	// A list of the scopes to be assigned to the token.
	Scopes []string `pulumi:"scopes"`
	// The secret of the token.
	Token string `pulumi:"token"`
}

// GetApiTokensApiTokenInput is an input type that accepts GetApiTokensApiTokenArgs and GetApiTokensApiTokenOutput values.
// You can construct a concrete instance of `GetApiTokensApiTokenInput` via:
//
//	GetApiTokensApiTokenArgs{...}
type GetApiTokensApiTokenInput interface {
	pulumi.Input

	ToGetApiTokensApiTokenOutput() GetApiTokensApiTokenOutput
	ToGetApiTokensApiTokenOutputWithContext(context.Context) GetApiTokensApiTokenOutput
}

type GetApiTokensApiTokenArgs struct {
	// Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The token is enabled (true) or disabled (false), default disabled (false).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The expiration date of the token.
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
	LastUsedDate pulumi.StringInput `pulumi:"lastUsedDate"`
	// Token last used IP address.
	LastUsedIpAddress pulumi.StringInput `pulumi:"lastUsedIpAddress"`
	// Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').
	ModifiedDate pulumi.StringInput `pulumi:"modifiedDate"`
	// The name of the token.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner of the token
	Owner pulumi.StringInput `pulumi:"owner"`
	// The token is a personal access token (true) or an API token (false).
	PersonalAccessToken pulumi.BoolPtrInput `pulumi:"personalAccessToken"`
	// A list of the scopes to be assigned to the token.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// The secret of the token.
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetApiTokensApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiTokensApiToken)(nil)).Elem()
}

func (i GetApiTokensApiTokenArgs) ToGetApiTokensApiTokenOutput() GetApiTokensApiTokenOutput {
	return i.ToGetApiTokensApiTokenOutputWithContext(context.Background())
}

func (i GetApiTokensApiTokenArgs) ToGetApiTokensApiTokenOutputWithContext(ctx context.Context) GetApiTokensApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiTokensApiTokenOutput)
}

// GetApiTokensApiTokenArrayInput is an input type that accepts GetApiTokensApiTokenArray and GetApiTokensApiTokenArrayOutput values.
// You can construct a concrete instance of `GetApiTokensApiTokenArrayInput` via:
//
//	GetApiTokensApiTokenArray{ GetApiTokensApiTokenArgs{...} }
type GetApiTokensApiTokenArrayInput interface {
	pulumi.Input

	ToGetApiTokensApiTokenArrayOutput() GetApiTokensApiTokenArrayOutput
	ToGetApiTokensApiTokenArrayOutputWithContext(context.Context) GetApiTokensApiTokenArrayOutput
}

type GetApiTokensApiTokenArray []GetApiTokensApiTokenInput

func (GetApiTokensApiTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiTokensApiToken)(nil)).Elem()
}

func (i GetApiTokensApiTokenArray) ToGetApiTokensApiTokenArrayOutput() GetApiTokensApiTokenArrayOutput {
	return i.ToGetApiTokensApiTokenArrayOutputWithContext(context.Background())
}

func (i GetApiTokensApiTokenArray) ToGetApiTokensApiTokenArrayOutputWithContext(ctx context.Context) GetApiTokensApiTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiTokensApiTokenArrayOutput)
}

type GetApiTokensApiTokenOutput struct{ *pulumi.OutputState }

func (GetApiTokensApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiTokensApiToken)(nil)).Elem()
}

func (o GetApiTokensApiTokenOutput) ToGetApiTokensApiTokenOutput() GetApiTokensApiTokenOutput {
	return o
}

func (o GetApiTokensApiTokenOutput) ToGetApiTokensApiTokenOutputWithContext(ctx context.Context) GetApiTokensApiTokenOutput {
	return o
}

// Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
func (o GetApiTokensApiTokenOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The token is enabled (true) or disabled (false), default disabled (false).
func (o GetApiTokensApiTokenOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The expiration date of the token.
func (o GetApiTokensApiTokenOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
func (o GetApiTokensApiTokenOutput) LastUsedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.LastUsedDate }).(pulumi.StringOutput)
}

// Token last used IP address.
func (o GetApiTokensApiTokenOutput) LastUsedIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.LastUsedIpAddress }).(pulumi.StringOutput)
}

// Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').
func (o GetApiTokensApiTokenOutput) ModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.ModifiedDate }).(pulumi.StringOutput)
}

// The name of the token.
func (o GetApiTokensApiTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.Name }).(pulumi.StringOutput)
}

// The owner of the token
func (o GetApiTokensApiTokenOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.Owner }).(pulumi.StringOutput)
}

// The token is a personal access token (true) or an API token (false).
func (o GetApiTokensApiTokenOutput) PersonalAccessToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) *bool { return v.PersonalAccessToken }).(pulumi.BoolPtrOutput)
}

// A list of the scopes to be assigned to the token.
func (o GetApiTokensApiTokenOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// The secret of the token.
func (o GetApiTokensApiTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.Token }).(pulumi.StringOutput)
}

type GetApiTokensApiTokenArrayOutput struct{ *pulumi.OutputState }

func (GetApiTokensApiTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiTokensApiToken)(nil)).Elem()
}

func (o GetApiTokensApiTokenArrayOutput) ToGetApiTokensApiTokenArrayOutput() GetApiTokensApiTokenArrayOutput {
	return o
}

func (o GetApiTokensApiTokenArrayOutput) ToGetApiTokensApiTokenArrayOutputWithContext(ctx context.Context) GetApiTokensApiTokenArrayOutput {
	return o
}

func (o GetApiTokensApiTokenArrayOutput) Index(i pulumi.IntInput) GetApiTokensApiTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiTokensApiToken {
		return vs[0].([]GetApiTokensApiToken)[vs[1].(int)]
	}).(GetApiTokensApiTokenOutput)
}

type GetDocumentsValue struct {
	// The unique identifier of the document.
	Id string `pulumi:"id"`
	// The name of the document.
	Name string `pulumi:"name"`
	// The owner of the document. This could be a user or a group that has ownership rights over the document.
	Owner string `pulumi:"owner"`
	// The type of the document. This could be a specific format or category the document belongs to.
	Type string `pulumi:"type"`
}

// GetDocumentsValueInput is an input type that accepts GetDocumentsValueArgs and GetDocumentsValueOutput values.
// You can construct a concrete instance of `GetDocumentsValueInput` via:
//
//	GetDocumentsValueArgs{...}
type GetDocumentsValueInput interface {
	pulumi.Input

	ToGetDocumentsValueOutput() GetDocumentsValueOutput
	ToGetDocumentsValueOutputWithContext(context.Context) GetDocumentsValueOutput
}

type GetDocumentsValueArgs struct {
	// The unique identifier of the document.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the document.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner of the document. This could be a user or a group that has ownership rights over the document.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The type of the document. This could be a specific format or category the document belongs to.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDocumentsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDocumentsValue)(nil)).Elem()
}

func (i GetDocumentsValueArgs) ToGetDocumentsValueOutput() GetDocumentsValueOutput {
	return i.ToGetDocumentsValueOutputWithContext(context.Background())
}

func (i GetDocumentsValueArgs) ToGetDocumentsValueOutputWithContext(ctx context.Context) GetDocumentsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDocumentsValueOutput)
}

// GetDocumentsValueArrayInput is an input type that accepts GetDocumentsValueArray and GetDocumentsValueArrayOutput values.
// You can construct a concrete instance of `GetDocumentsValueArrayInput` via:
//
//	GetDocumentsValueArray{ GetDocumentsValueArgs{...} }
type GetDocumentsValueArrayInput interface {
	pulumi.Input

	ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput
	ToGetDocumentsValueArrayOutputWithContext(context.Context) GetDocumentsValueArrayOutput
}

type GetDocumentsValueArray []GetDocumentsValueInput

func (GetDocumentsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDocumentsValue)(nil)).Elem()
}

func (i GetDocumentsValueArray) ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput {
	return i.ToGetDocumentsValueArrayOutputWithContext(context.Background())
}

func (i GetDocumentsValueArray) ToGetDocumentsValueArrayOutputWithContext(ctx context.Context) GetDocumentsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDocumentsValueArrayOutput)
}

type GetDocumentsValueOutput struct{ *pulumi.OutputState }

func (GetDocumentsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDocumentsValue)(nil)).Elem()
}

func (o GetDocumentsValueOutput) ToGetDocumentsValueOutput() GetDocumentsValueOutput {
	return o
}

func (o GetDocumentsValueOutput) ToGetDocumentsValueOutputWithContext(ctx context.Context) GetDocumentsValueOutput {
	return o
}

// The unique identifier of the document.
func (o GetDocumentsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the document.
func (o GetDocumentsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Name }).(pulumi.StringOutput)
}

// The owner of the document. This could be a user or a group that has ownership rights over the document.
func (o GetDocumentsValueOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Owner }).(pulumi.StringOutput)
}

// The type of the document. This could be a specific format or category the document belongs to.
func (o GetDocumentsValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Type }).(pulumi.StringOutput)
}

type GetDocumentsValueArrayOutput struct{ *pulumi.OutputState }

func (GetDocumentsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDocumentsValue)(nil)).Elem()
}

func (o GetDocumentsValueArrayOutput) ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput {
	return o
}

func (o GetDocumentsValueArrayOutput) ToGetDocumentsValueArrayOutputWithContext(ctx context.Context) GetDocumentsValueArrayOutput {
	return o
}

func (o GetDocumentsValueArrayOutput) Index(i pulumi.IntInput) GetDocumentsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDocumentsValue {
		return vs[0].([]GetDocumentsValue)[vs[1].(int)]
	}).(GetDocumentsValueOutput)
}

type GetEntitiesEntity struct {
	// The name of the entity, displayed in the UI.
	DisplayName *string `pulumi:"displayName"`
	// The ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// The timestamp at which the entity was last seen, in UTC milliseconds.
	LastSeenTms *int `pulumi:"lastSeenTms"`
	// Properties defining the entity.
	Properties map[string]string `pulumi:"properties"`
	// A set of tags assigned to the entity.
	Tags []GetEntitiesEntityTag `pulumi:"tags"`
	// The type of the entity.
	Type *string `pulumi:"type"`
}

// GetEntitiesEntityInput is an input type that accepts GetEntitiesEntityArgs and GetEntitiesEntityOutput values.
// You can construct a concrete instance of `GetEntitiesEntityInput` via:
//
//	GetEntitiesEntityArgs{...}
type GetEntitiesEntityInput interface {
	pulumi.Input

	ToGetEntitiesEntityOutput() GetEntitiesEntityOutput
	ToGetEntitiesEntityOutputWithContext(context.Context) GetEntitiesEntityOutput
}

type GetEntitiesEntityArgs struct {
	// The name of the entity, displayed in the UI.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The ID of the entity.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// The timestamp at which the entity was last seen, in UTC milliseconds.
	LastSeenTms pulumi.IntPtrInput `pulumi:"lastSeenTms"`
	// Properties defining the entity.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// A set of tags assigned to the entity.
	Tags GetEntitiesEntityTagArrayInput `pulumi:"tags"`
	// The type of the entity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetEntitiesEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntity)(nil)).Elem()
}

func (i GetEntitiesEntityArgs) ToGetEntitiesEntityOutput() GetEntitiesEntityOutput {
	return i.ToGetEntitiesEntityOutputWithContext(context.Background())
}

func (i GetEntitiesEntityArgs) ToGetEntitiesEntityOutputWithContext(ctx context.Context) GetEntitiesEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityOutput)
}

// GetEntitiesEntityArrayInput is an input type that accepts GetEntitiesEntityArray and GetEntitiesEntityArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityArrayInput` via:
//
//	GetEntitiesEntityArray{ GetEntitiesEntityArgs{...} }
type GetEntitiesEntityArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput
	ToGetEntitiesEntityArrayOutputWithContext(context.Context) GetEntitiesEntityArrayOutput
}

type GetEntitiesEntityArray []GetEntitiesEntityInput

func (GetEntitiesEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntity)(nil)).Elem()
}

func (i GetEntitiesEntityArray) ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput {
	return i.ToGetEntitiesEntityArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityArray) ToGetEntitiesEntityArrayOutputWithContext(ctx context.Context) GetEntitiesEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityArrayOutput)
}

type GetEntitiesEntityOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntity)(nil)).Elem()
}

func (o GetEntitiesEntityOutput) ToGetEntitiesEntityOutput() GetEntitiesEntityOutput {
	return o
}

func (o GetEntitiesEntityOutput) ToGetEntitiesEntityOutputWithContext(ctx context.Context) GetEntitiesEntityOutput {
	return o
}

// The name of the entity, displayed in the UI.
func (o GetEntitiesEntityOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The ID of the entity.
func (o GetEntitiesEntityOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// The timestamp at which the entity was last seen, in UTC milliseconds.
func (o GetEntitiesEntityOutput) LastSeenTms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *int { return v.LastSeenTms }).(pulumi.IntPtrOutput)
}

// Properties defining the entity.
func (o GetEntitiesEntityOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEntitiesEntity) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// A set of tags assigned to the entity.
func (o GetEntitiesEntityOutput) Tags() GetEntitiesEntityTagArrayOutput {
	return o.ApplyT(func(v GetEntitiesEntity) []GetEntitiesEntityTag { return v.Tags }).(GetEntitiesEntityTagArrayOutput)
}

// The type of the entity.
func (o GetEntitiesEntityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetEntitiesEntityArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntity)(nil)).Elem()
}

func (o GetEntitiesEntityArrayOutput) ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput {
	return o
}

func (o GetEntitiesEntityArrayOutput) ToGetEntitiesEntityArrayOutputWithContext(ctx context.Context) GetEntitiesEntityArrayOutput {
	return o
}

func (o GetEntitiesEntityArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntity {
		return vs[0].([]GetEntitiesEntity)[vs[1].(int)]
	}).(GetEntitiesEntityOutput)
}

type GetEntitiesEntityTag struct {
	// A tag assigned to the entity
	Tags []GetEntitiesEntityTagTag `pulumi:"tags"`
}

// GetEntitiesEntityTagInput is an input type that accepts GetEntitiesEntityTagArgs and GetEntitiesEntityTagOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagInput` via:
//
//	GetEntitiesEntityTagArgs{...}
type GetEntitiesEntityTagInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput
	ToGetEntitiesEntityTagOutputWithContext(context.Context) GetEntitiesEntityTagOutput
}

type GetEntitiesEntityTagArgs struct {
	// A tag assigned to the entity
	Tags GetEntitiesEntityTagTagArrayInput `pulumi:"tags"`
}

func (GetEntitiesEntityTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagArgs) ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput {
	return i.ToGetEntitiesEntityTagOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagArgs) ToGetEntitiesEntityTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagOutput)
}

// GetEntitiesEntityTagArrayInput is an input type that accepts GetEntitiesEntityTagArray and GetEntitiesEntityTagArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagArrayInput` via:
//
//	GetEntitiesEntityTagArray{ GetEntitiesEntityTagArgs{...} }
type GetEntitiesEntityTagArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput
	ToGetEntitiesEntityTagArrayOutputWithContext(context.Context) GetEntitiesEntityTagArrayOutput
}

type GetEntitiesEntityTagArray []GetEntitiesEntityTagInput

func (GetEntitiesEntityTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagArray) ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput {
	return i.ToGetEntitiesEntityTagArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagArray) ToGetEntitiesEntityTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagArrayOutput)
}

type GetEntitiesEntityTagOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagOutput) ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput {
	return o
}

func (o GetEntitiesEntityTagOutput) ToGetEntitiesEntityTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagOutput {
	return o
}

// A tag assigned to the entity
func (o GetEntitiesEntityTagOutput) Tags() GetEntitiesEntityTagTagArrayOutput {
	return o.ApplyT(func(v GetEntitiesEntityTag) []GetEntitiesEntityTagTag { return v.Tags }).(GetEntitiesEntityTagTagArrayOutput)
}

type GetEntitiesEntityTagArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagArrayOutput) ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagArrayOutput) ToGetEntitiesEntityTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntityTag {
		return vs[0].([]GetEntitiesEntityTag)[vs[1].(int)]
	}).(GetEntitiesEntityTagOutput)
}

type GetEntitiesEntityTagTag struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	Context string `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key string `pulumi:"key"`
	// The string representation of the tag
	StringRepresentation *string `pulumi:"stringRepresentation"`
	// The value of the tag. Not applicable to custom tags
	Value *string `pulumi:"value"`
}

// GetEntitiesEntityTagTagInput is an input type that accepts GetEntitiesEntityTagTagArgs and GetEntitiesEntityTagTagOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagTagInput` via:
//
//	GetEntitiesEntityTagTagArgs{...}
type GetEntitiesEntityTagTagInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput
	ToGetEntitiesEntityTagTagOutputWithContext(context.Context) GetEntitiesEntityTagTagOutput
}

type GetEntitiesEntityTagTagArgs struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	Context pulumi.StringInput `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key pulumi.StringInput `pulumi:"key"`
	// The string representation of the tag
	StringRepresentation pulumi.StringPtrInput `pulumi:"stringRepresentation"`
	// The value of the tag. Not applicable to custom tags
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetEntitiesEntityTagTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTagTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagTagArgs) ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput {
	return i.ToGetEntitiesEntityTagTagOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagTagArgs) ToGetEntitiesEntityTagTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagTagOutput)
}

// GetEntitiesEntityTagTagArrayInput is an input type that accepts GetEntitiesEntityTagTagArray and GetEntitiesEntityTagTagArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagTagArrayInput` via:
//
//	GetEntitiesEntityTagTagArray{ GetEntitiesEntityTagTagArgs{...} }
type GetEntitiesEntityTagTagArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput
	ToGetEntitiesEntityTagTagArrayOutputWithContext(context.Context) GetEntitiesEntityTagTagArrayOutput
}

type GetEntitiesEntityTagTagArray []GetEntitiesEntityTagTagInput

func (GetEntitiesEntityTagTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTagTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagTagArray) ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput {
	return i.ToGetEntitiesEntityTagTagArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagTagArray) ToGetEntitiesEntityTagTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagTagArrayOutput)
}

type GetEntitiesEntityTagTagOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTagTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagTagOutput) ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput {
	return o
}

func (o GetEntitiesEntityTagTagOutput) ToGetEntitiesEntityTagTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagOutput {
	return o
}

// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
func (o GetEntitiesEntityTagTagOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) string { return v.Context }).(pulumi.StringOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o GetEntitiesEntityTagTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) string { return v.Key }).(pulumi.StringOutput)
}

// The string representation of the tag
func (o GetEntitiesEntityTagTagOutput) StringRepresentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) *string { return v.StringRepresentation }).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o GetEntitiesEntityTagTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetEntitiesEntityTagTagArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTagTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagTagArrayOutput) ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagTagArrayOutput) ToGetEntitiesEntityTagTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagTagArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityTagTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntityTagTag {
		return vs[0].([]GetEntitiesEntityTagTag)[vs[1].(int)]
	}).(GetEntitiesEntityTagTagOutput)
}

type GetGenericSettingsValue struct {
	LocalStorage string `pulumi:"localStorage"`
	Schema       string `pulumi:"schema"`
	Scope        string `pulumi:"scope"`
	Value        string `pulumi:"value"`
}

// GetGenericSettingsValueInput is an input type that accepts GetGenericSettingsValueArgs and GetGenericSettingsValueOutput values.
// You can construct a concrete instance of `GetGenericSettingsValueInput` via:
//
//	GetGenericSettingsValueArgs{...}
type GetGenericSettingsValueInput interface {
	pulumi.Input

	ToGetGenericSettingsValueOutput() GetGenericSettingsValueOutput
	ToGetGenericSettingsValueOutputWithContext(context.Context) GetGenericSettingsValueOutput
}

type GetGenericSettingsValueArgs struct {
	LocalStorage pulumi.StringInput `pulumi:"localStorage"`
	Schema       pulumi.StringInput `pulumi:"schema"`
	Scope        pulumi.StringInput `pulumi:"scope"`
	Value        pulumi.StringInput `pulumi:"value"`
}

func (GetGenericSettingsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGenericSettingsValue)(nil)).Elem()
}

func (i GetGenericSettingsValueArgs) ToGetGenericSettingsValueOutput() GetGenericSettingsValueOutput {
	return i.ToGetGenericSettingsValueOutputWithContext(context.Background())
}

func (i GetGenericSettingsValueArgs) ToGetGenericSettingsValueOutputWithContext(ctx context.Context) GetGenericSettingsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGenericSettingsValueOutput)
}

// GetGenericSettingsValueArrayInput is an input type that accepts GetGenericSettingsValueArray and GetGenericSettingsValueArrayOutput values.
// You can construct a concrete instance of `GetGenericSettingsValueArrayInput` via:
//
//	GetGenericSettingsValueArray{ GetGenericSettingsValueArgs{...} }
type GetGenericSettingsValueArrayInput interface {
	pulumi.Input

	ToGetGenericSettingsValueArrayOutput() GetGenericSettingsValueArrayOutput
	ToGetGenericSettingsValueArrayOutputWithContext(context.Context) GetGenericSettingsValueArrayOutput
}

type GetGenericSettingsValueArray []GetGenericSettingsValueInput

func (GetGenericSettingsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGenericSettingsValue)(nil)).Elem()
}

func (i GetGenericSettingsValueArray) ToGetGenericSettingsValueArrayOutput() GetGenericSettingsValueArrayOutput {
	return i.ToGetGenericSettingsValueArrayOutputWithContext(context.Background())
}

func (i GetGenericSettingsValueArray) ToGetGenericSettingsValueArrayOutputWithContext(ctx context.Context) GetGenericSettingsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGenericSettingsValueArrayOutput)
}

type GetGenericSettingsValueOutput struct{ *pulumi.OutputState }

func (GetGenericSettingsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGenericSettingsValue)(nil)).Elem()
}

func (o GetGenericSettingsValueOutput) ToGetGenericSettingsValueOutput() GetGenericSettingsValueOutput {
	return o
}

func (o GetGenericSettingsValueOutput) ToGetGenericSettingsValueOutputWithContext(ctx context.Context) GetGenericSettingsValueOutput {
	return o
}

func (o GetGenericSettingsValueOutput) LocalStorage() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenericSettingsValue) string { return v.LocalStorage }).(pulumi.StringOutput)
}

func (o GetGenericSettingsValueOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenericSettingsValue) string { return v.Schema }).(pulumi.StringOutput)
}

func (o GetGenericSettingsValueOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenericSettingsValue) string { return v.Scope }).(pulumi.StringOutput)
}

func (o GetGenericSettingsValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenericSettingsValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetGenericSettingsValueArrayOutput struct{ *pulumi.OutputState }

func (GetGenericSettingsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGenericSettingsValue)(nil)).Elem()
}

func (o GetGenericSettingsValueArrayOutput) ToGetGenericSettingsValueArrayOutput() GetGenericSettingsValueArrayOutput {
	return o
}

func (o GetGenericSettingsValueArrayOutput) ToGetGenericSettingsValueArrayOutputWithContext(ctx context.Context) GetGenericSettingsValueArrayOutput {
	return o
}

func (o GetGenericSettingsValueArrayOutput) Index(i pulumi.IntInput) GetGenericSettingsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGenericSettingsValue {
		return vs[0].([]GetGenericSettingsValue)[vs[1].(int)]
	}).(GetGenericSettingsValueOutput)
}

type GetHubItemsItem struct {
	// The activation link for a technology
	ActivationLink string `pulumi:"activationLink"`
	// The unique ID used by the artifacts contained in releases
	ArtifactId string `pulumi:"artifactId"`
	// URL for the author's logo
	AuthorLogo string `pulumi:"authorLogo"`
	// Name of the author of the item
	AuthorName string `pulumi:"authorName"`
	// Checks if the item is compatible with the cluster version
	ClusterCompatible bool `pulumi:"clusterCompatible"`
	// Whether or not the item is planned to be released soon
	ComingSoon bool `pulumi:"comingSoon"`
	// Description of the item
	Description string `pulumi:"description"`
	// An absolute link to the documentation page of this item
	DocumentationLink string `pulumi:"documentationLink"`
	// Whether or not the details call will contain description blocks
	HasDescriptionBlocks bool `pulumi:"hasDescriptionBlocks"`
	// Unique Id of the item
	ItemId string `pulumi:"itemId"`
	// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
	Logo string `pulumi:"logo"`
	// An absolute link to the marketing page of this item
	MarketingLink string `pulumi:"marketingLink"`
	// Name of the item
	Name string `pulumi:"name"`
	// The reason why the item is not compatible with the cluster version
	NotCompatibleReason string `pulumi:"notCompatibleReason"`
	// Grouping of items with keywords
	Tags []string `pulumi:"tags"`
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
	Type string `pulumi:"type"`
}

// GetHubItemsItemInput is an input type that accepts GetHubItemsItemArgs and GetHubItemsItemOutput values.
// You can construct a concrete instance of `GetHubItemsItemInput` via:
//
//	GetHubItemsItemArgs{...}
type GetHubItemsItemInput interface {
	pulumi.Input

	ToGetHubItemsItemOutput() GetHubItemsItemOutput
	ToGetHubItemsItemOutputWithContext(context.Context) GetHubItemsItemOutput
}

type GetHubItemsItemArgs struct {
	// The activation link for a technology
	ActivationLink pulumi.StringInput `pulumi:"activationLink"`
	// The unique ID used by the artifacts contained in releases
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// URL for the author's logo
	AuthorLogo pulumi.StringInput `pulumi:"authorLogo"`
	// Name of the author of the item
	AuthorName pulumi.StringInput `pulumi:"authorName"`
	// Checks if the item is compatible with the cluster version
	ClusterCompatible pulumi.BoolInput `pulumi:"clusterCompatible"`
	// Whether or not the item is planned to be released soon
	ComingSoon pulumi.BoolInput `pulumi:"comingSoon"`
	// Description of the item
	Description pulumi.StringInput `pulumi:"description"`
	// An absolute link to the documentation page of this item
	DocumentationLink pulumi.StringInput `pulumi:"documentationLink"`
	// Whether or not the details call will contain description blocks
	HasDescriptionBlocks pulumi.BoolInput `pulumi:"hasDescriptionBlocks"`
	// Unique Id of the item
	ItemId pulumi.StringInput `pulumi:"itemId"`
	// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
	Logo pulumi.StringInput `pulumi:"logo"`
	// An absolute link to the marketing page of this item
	MarketingLink pulumi.StringInput `pulumi:"marketingLink"`
	// Name of the item
	Name pulumi.StringInput `pulumi:"name"`
	// The reason why the item is not compatible with the cluster version
	NotCompatibleReason pulumi.StringInput `pulumi:"notCompatibleReason"`
	// Grouping of items with keywords
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetHubItemsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHubItemsItem)(nil)).Elem()
}

func (i GetHubItemsItemArgs) ToGetHubItemsItemOutput() GetHubItemsItemOutput {
	return i.ToGetHubItemsItemOutputWithContext(context.Background())
}

func (i GetHubItemsItemArgs) ToGetHubItemsItemOutputWithContext(ctx context.Context) GetHubItemsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHubItemsItemOutput)
}

// GetHubItemsItemArrayInput is an input type that accepts GetHubItemsItemArray and GetHubItemsItemArrayOutput values.
// You can construct a concrete instance of `GetHubItemsItemArrayInput` via:
//
//	GetHubItemsItemArray{ GetHubItemsItemArgs{...} }
type GetHubItemsItemArrayInput interface {
	pulumi.Input

	ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput
	ToGetHubItemsItemArrayOutputWithContext(context.Context) GetHubItemsItemArrayOutput
}

type GetHubItemsItemArray []GetHubItemsItemInput

func (GetHubItemsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHubItemsItem)(nil)).Elem()
}

func (i GetHubItemsItemArray) ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput {
	return i.ToGetHubItemsItemArrayOutputWithContext(context.Background())
}

func (i GetHubItemsItemArray) ToGetHubItemsItemArrayOutputWithContext(ctx context.Context) GetHubItemsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHubItemsItemArrayOutput)
}

type GetHubItemsItemOutput struct{ *pulumi.OutputState }

func (GetHubItemsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHubItemsItem)(nil)).Elem()
}

func (o GetHubItemsItemOutput) ToGetHubItemsItemOutput() GetHubItemsItemOutput {
	return o
}

func (o GetHubItemsItemOutput) ToGetHubItemsItemOutputWithContext(ctx context.Context) GetHubItemsItemOutput {
	return o
}

// The activation link for a technology
func (o GetHubItemsItemOutput) ActivationLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ActivationLink }).(pulumi.StringOutput)
}

// The unique ID used by the artifacts contained in releases
func (o GetHubItemsItemOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// URL for the author's logo
func (o GetHubItemsItemOutput) AuthorLogo() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.AuthorLogo }).(pulumi.StringOutput)
}

// Name of the author of the item
func (o GetHubItemsItemOutput) AuthorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.AuthorName }).(pulumi.StringOutput)
}

// Checks if the item is compatible with the cluster version
func (o GetHubItemsItemOutput) ClusterCompatible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.ClusterCompatible }).(pulumi.BoolOutput)
}

// Whether or not the item is planned to be released soon
func (o GetHubItemsItemOutput) ComingSoon() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.ComingSoon }).(pulumi.BoolOutput)
}

// Description of the item
func (o GetHubItemsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Description }).(pulumi.StringOutput)
}

// An absolute link to the documentation page of this item
func (o GetHubItemsItemOutput) DocumentationLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.DocumentationLink }).(pulumi.StringOutput)
}

// Whether or not the details call will contain description blocks
func (o GetHubItemsItemOutput) HasDescriptionBlocks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.HasDescriptionBlocks }).(pulumi.BoolOutput)
}

// Unique Id of the item
func (o GetHubItemsItemOutput) ItemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ItemId }).(pulumi.StringOutput)
}

// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
func (o GetHubItemsItemOutput) Logo() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Logo }).(pulumi.StringOutput)
}

// An absolute link to the marketing page of this item
func (o GetHubItemsItemOutput) MarketingLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.MarketingLink }).(pulumi.StringOutput)
}

// Name of the item
func (o GetHubItemsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The reason why the item is not compatible with the cluster version
func (o GetHubItemsItemOutput) NotCompatibleReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.NotCompatibleReason }).(pulumi.StringOutput)
}

// Grouping of items with keywords
func (o GetHubItemsItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHubItemsItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
func (o GetHubItemsItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetHubItemsItemArrayOutput struct{ *pulumi.OutputState }

func (GetHubItemsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHubItemsItem)(nil)).Elem()
}

func (o GetHubItemsItemArrayOutput) ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput {
	return o
}

func (o GetHubItemsItemArrayOutput) ToGetHubItemsItemArrayOutputWithContext(ctx context.Context) GetHubItemsItemArrayOutput {
	return o
}

func (o GetHubItemsItemArrayOutput) Index(i pulumi.IntInput) GetHubItemsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHubItemsItem {
		return vs[0].([]GetHubItemsItem)[vs[1].(int)]
	}).(GetHubItemsItemOutput)
}

type GetIamPoliciesPolicy struct {
	// The account UUID the policy is defined for
	Account *string `pulumi:"account"`
	// The environment ID the policy is defined for
	Environment *string `pulumi:"environment"`
	// `true` if this is a global policy`
	Global *bool  `pulumi:"global"`
	Id     string `pulumi:"id"`
	// The name of the policy
	Name string `pulumi:"name"`
	// The UUID of the policy
	Uuid string `pulumi:"uuid"`
}

// GetIamPoliciesPolicyInput is an input type that accepts GetIamPoliciesPolicyArgs and GetIamPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetIamPoliciesPolicyInput` via:
//
//	GetIamPoliciesPolicyArgs{...}
type GetIamPoliciesPolicyInput interface {
	pulumi.Input

	ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput
	ToGetIamPoliciesPolicyOutputWithContext(context.Context) GetIamPoliciesPolicyOutput
}

type GetIamPoliciesPolicyArgs struct {
	// The account UUID the policy is defined for
	Account pulumi.StringPtrInput `pulumi:"account"`
	// The environment ID the policy is defined for
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// `true` if this is a global policy`
	Global pulumi.BoolPtrInput `pulumi:"global"`
	Id     pulumi.StringInput  `pulumi:"id"`
	// The name of the policy
	Name pulumi.StringInput `pulumi:"name"`
	// The UUID of the policy
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetIamPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPoliciesPolicy)(nil)).Elem()
}

func (i GetIamPoliciesPolicyArgs) ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput {
	return i.ToGetIamPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetIamPoliciesPolicyArgs) ToGetIamPoliciesPolicyOutputWithContext(ctx context.Context) GetIamPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPoliciesPolicyOutput)
}

// GetIamPoliciesPolicyArrayInput is an input type that accepts GetIamPoliciesPolicyArray and GetIamPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetIamPoliciesPolicyArrayInput` via:
//
//	GetIamPoliciesPolicyArray{ GetIamPoliciesPolicyArgs{...} }
type GetIamPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput
	ToGetIamPoliciesPolicyArrayOutputWithContext(context.Context) GetIamPoliciesPolicyArrayOutput
}

type GetIamPoliciesPolicyArray []GetIamPoliciesPolicyInput

func (GetIamPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPoliciesPolicy)(nil)).Elem()
}

func (i GetIamPoliciesPolicyArray) ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput {
	return i.ToGetIamPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetIamPoliciesPolicyArray) ToGetIamPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetIamPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPoliciesPolicyArrayOutput)
}

type GetIamPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetIamPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPoliciesPolicy)(nil)).Elem()
}

func (o GetIamPoliciesPolicyOutput) ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput {
	return o
}

func (o GetIamPoliciesPolicyOutput) ToGetIamPoliciesPolicyOutputWithContext(ctx context.Context) GetIamPoliciesPolicyOutput {
	return o
}

// The account UUID the policy is defined for
func (o GetIamPoliciesPolicyOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// The environment ID the policy is defined for
func (o GetIamPoliciesPolicyOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// `true` if this is a global policy`
func (o GetIamPoliciesPolicyOutput) Global() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *bool { return v.Global }).(pulumi.BoolPtrOutput)
}

func (o GetIamPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy
func (o GetIamPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The UUID of the policy
func (o GetIamPoliciesPolicyOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetIamPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetIamPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPoliciesPolicy)(nil)).Elem()
}

func (o GetIamPoliciesPolicyArrayOutput) ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput {
	return o
}

func (o GetIamPoliciesPolicyArrayOutput) ToGetIamPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetIamPoliciesPolicyArrayOutput {
	return o
}

func (o GetIamPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetIamPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPoliciesPolicy {
		return vs[0].([]GetIamPoliciesPolicy)[vs[1].(int)]
	}).(GetIamPoliciesPolicyOutput)
}

type GetManagementZonesValue struct {
	// The description of the Management Zone
	Description string `pulumi:"description"`
	// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id string `pulumi:"id"`
	// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId string `pulumi:"legacyId"`
	// The name of the Management Zone
	Name string `pulumi:"name"`
}

// GetManagementZonesValueInput is an input type that accepts GetManagementZonesValueArgs and GetManagementZonesValueOutput values.
// You can construct a concrete instance of `GetManagementZonesValueInput` via:
//
//	GetManagementZonesValueArgs{...}
type GetManagementZonesValueInput interface {
	pulumi.Input

	ToGetManagementZonesValueOutput() GetManagementZonesValueOutput
	ToGetManagementZonesValueOutputWithContext(context.Context) GetManagementZonesValueOutput
}

type GetManagementZonesValueArgs struct {
	// The description of the Management Zone
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId pulumi.StringInput `pulumi:"legacyId"`
	// The name of the Management Zone
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetManagementZonesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementZonesValue)(nil)).Elem()
}

func (i GetManagementZonesValueArgs) ToGetManagementZonesValueOutput() GetManagementZonesValueOutput {
	return i.ToGetManagementZonesValueOutputWithContext(context.Background())
}

func (i GetManagementZonesValueArgs) ToGetManagementZonesValueOutputWithContext(ctx context.Context) GetManagementZonesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementZonesValueOutput)
}

// GetManagementZonesValueArrayInput is an input type that accepts GetManagementZonesValueArray and GetManagementZonesValueArrayOutput values.
// You can construct a concrete instance of `GetManagementZonesValueArrayInput` via:
//
//	GetManagementZonesValueArray{ GetManagementZonesValueArgs{...} }
type GetManagementZonesValueArrayInput interface {
	pulumi.Input

	ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput
	ToGetManagementZonesValueArrayOutputWithContext(context.Context) GetManagementZonesValueArrayOutput
}

type GetManagementZonesValueArray []GetManagementZonesValueInput

func (GetManagementZonesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementZonesValue)(nil)).Elem()
}

func (i GetManagementZonesValueArray) ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput {
	return i.ToGetManagementZonesValueArrayOutputWithContext(context.Background())
}

func (i GetManagementZonesValueArray) ToGetManagementZonesValueArrayOutputWithContext(ctx context.Context) GetManagementZonesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementZonesValueArrayOutput)
}

type GetManagementZonesValueOutput struct{ *pulumi.OutputState }

func (GetManagementZonesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementZonesValue)(nil)).Elem()
}

func (o GetManagementZonesValueOutput) ToGetManagementZonesValueOutput() GetManagementZonesValueOutput {
	return o
}

func (o GetManagementZonesValueOutput) ToGetManagementZonesValueOutputWithContext(ctx context.Context) GetManagementZonesValueOutput {
	return o
}

// The description of the Management Zone
func (o GetManagementZonesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
func (o GetManagementZonesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
func (o GetManagementZonesValueOutput) LegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.LegacyId }).(pulumi.StringOutput)
}

// The name of the Management Zone
func (o GetManagementZonesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Name }).(pulumi.StringOutput)
}

type GetManagementZonesValueArrayOutput struct{ *pulumi.OutputState }

func (GetManagementZonesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementZonesValue)(nil)).Elem()
}

func (o GetManagementZonesValueArrayOutput) ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput {
	return o
}

func (o GetManagementZonesValueArrayOutput) ToGetManagementZonesValueArrayOutputWithContext(ctx context.Context) GetManagementZonesValueArrayOutput {
	return o
}

func (o GetManagementZonesValueArrayOutput) Index(i pulumi.IntInput) GetManagementZonesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementZonesValue {
		return vs[0].([]GetManagementZonesValue)[vs[1].(int)]
	}).(GetManagementZonesValueOutput)
}

type GetRemoteEnvironmentsRemoteEnvironment struct {
	// Name
	Name string `pulumi:"name"`
	// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
	NetworkScope string `pulumi:"networkScope"`
	// Provide a valid token created on the remote environment.
	Token string `pulumi:"token"`
	// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
	Uri string `pulumi:"uri"`
}

// GetRemoteEnvironmentsRemoteEnvironmentInput is an input type that accepts GetRemoteEnvironmentsRemoteEnvironmentArgs and GetRemoteEnvironmentsRemoteEnvironmentOutput values.
// You can construct a concrete instance of `GetRemoteEnvironmentsRemoteEnvironmentInput` via:
//
//	GetRemoteEnvironmentsRemoteEnvironmentArgs{...}
type GetRemoteEnvironmentsRemoteEnvironmentInput interface {
	pulumi.Input

	ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput
	ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput
}

type GetRemoteEnvironmentsRemoteEnvironmentArgs struct {
	// Name
	Name pulumi.StringInput `pulumi:"name"`
	// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
	NetworkScope pulumi.StringInput `pulumi:"networkScope"`
	// Provide a valid token created on the remote environment.
	Token pulumi.StringInput `pulumi:"token"`
	// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetRemoteEnvironmentsRemoteEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArgs) ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return i.ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(context.Background())
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArgs) ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRemoteEnvironmentsRemoteEnvironmentOutput)
}

// GetRemoteEnvironmentsRemoteEnvironmentArrayInput is an input type that accepts GetRemoteEnvironmentsRemoteEnvironmentArray and GetRemoteEnvironmentsRemoteEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetRemoteEnvironmentsRemoteEnvironmentArrayInput` via:
//
//	GetRemoteEnvironmentsRemoteEnvironmentArray{ GetRemoteEnvironmentsRemoteEnvironmentArgs{...} }
type GetRemoteEnvironmentsRemoteEnvironmentArrayInput interface {
	pulumi.Input

	ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput
	ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput
}

type GetRemoteEnvironmentsRemoteEnvironmentArray []GetRemoteEnvironmentsRemoteEnvironmentInput

func (GetRemoteEnvironmentsRemoteEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArray) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return i.ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArray) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRemoteEnvironmentsRemoteEnvironmentArrayOutput)
}

type GetRemoteEnvironmentsRemoteEnvironmentOutput struct{ *pulumi.OutputState }

func (GetRemoteEnvironmentsRemoteEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return o
}

// Name
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) NetworkScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.NetworkScope }).(pulumi.StringOutput)
}

// Provide a valid token created on the remote environment.
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Token }).(pulumi.StringOutput)
}

// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Uri }).(pulumi.StringOutput)
}

type GetRemoteEnvironmentsRemoteEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) Index(i pulumi.IntInput) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRemoteEnvironmentsRemoteEnvironment {
		return vs[0].([]GetRemoteEnvironmentsRemoteEnvironment)[vs[1].(int)]
	}).(GetRemoteEnvironmentsRemoteEnvironmentOutput)
}

type GetSyntheticLocationsLocations struct {
	// The cloud provider where the location is hosted.
	CloudPlatform string `pulumi:"cloudPlatform"`
	// The unique ID of the location
	EntityId *string `pulumi:"entityId"`
	// The list of IP addresses assigned to the location.
	//
	//  Only applicable to `PUBLIC` locations
	Ips []string `pulumi:"ips"`
	// The name of the location
	Name *string `pulumi:"name"`
	// The release stage of the location
	Stage string `pulumi:"stage"`
	// The status of the location:
	//
	// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
	// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
	// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
	Status string `pulumi:"status"`
	// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
	Type *string `pulumi:"type"`
}

// GetSyntheticLocationsLocationsInput is an input type that accepts GetSyntheticLocationsLocationsArgs and GetSyntheticLocationsLocationsOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsInput` via:
//
//	GetSyntheticLocationsLocationsArgs{...}
type GetSyntheticLocationsLocationsInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput
	ToGetSyntheticLocationsLocationsOutputWithContext(context.Context) GetSyntheticLocationsLocationsOutput
}

type GetSyntheticLocationsLocationsArgs struct {
	// The cloud provider where the location is hosted.
	CloudPlatform pulumi.StringInput `pulumi:"cloudPlatform"`
	// The unique ID of the location
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// The list of IP addresses assigned to the location.
	//
	//  Only applicable to `PUBLIC` locations
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The name of the location
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The release stage of the location
	Stage pulumi.StringInput `pulumi:"stage"`
	// The status of the location:
	//
	// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
	// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
	// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSyntheticLocationsLocationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocations)(nil)).Elem()
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput {
	return i.ToGetSyntheticLocationsLocationsOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsOutput)
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return i.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsOutput).ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx)
}

// GetSyntheticLocationsLocationsPtrInput is an input type that accepts GetSyntheticLocationsLocationsArgs, GetSyntheticLocationsLocationsPtr and GetSyntheticLocationsLocationsPtrOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsPtrInput` via:
//
//	        GetSyntheticLocationsLocationsArgs{...}
//
//	or:
//
//	        nil
type GetSyntheticLocationsLocationsPtrInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput
	ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Context) GetSyntheticLocationsLocationsPtrOutput
}

type getSyntheticLocationsLocationsPtrType GetSyntheticLocationsLocationsArgs

func GetSyntheticLocationsLocationsPtr(v *GetSyntheticLocationsLocationsArgs) GetSyntheticLocationsLocationsPtrInput {
	return (*getSyntheticLocationsLocationsPtrType)(v)
}

func (*getSyntheticLocationsLocationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSyntheticLocationsLocations)(nil)).Elem()
}

func (i *getSyntheticLocationsLocationsPtrType) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return i.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (i *getSyntheticLocationsLocationsPtrType) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsPtrOutput)
}

type GetSyntheticLocationsLocationsOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocations)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput {
	return o
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsOutput {
	return o
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return o.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSyntheticLocationsLocations) *GetSyntheticLocationsLocations {
		return &v
	}).(GetSyntheticLocationsLocationsPtrOutput)
}

// The cloud provider where the location is hosted.
func (o GetSyntheticLocationsLocationsOutput) CloudPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.CloudPlatform }).(pulumi.StringOutput)
}

// The unique ID of the location
func (o GetSyntheticLocationsLocationsOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// The list of IP addresses assigned to the location.
//
//	Only applicable to `PUBLIC` locations
func (o GetSyntheticLocationsLocationsOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The name of the location
func (o GetSyntheticLocationsLocationsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The release stage of the location
func (o GetSyntheticLocationsLocationsOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.Stage }).(pulumi.StringOutput)
}

// The status of the location:
//
// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
func (o GetSyntheticLocationsLocationsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
func (o GetSyntheticLocationsLocationsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSyntheticLocationsLocationsPtrOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSyntheticLocationsLocations)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsPtrOutput) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return o
}

func (o GetSyntheticLocationsLocationsPtrOutput) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return o
}

func (o GetSyntheticLocationsLocationsPtrOutput) Elem() GetSyntheticLocationsLocationsOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) GetSyntheticLocationsLocations {
		if v != nil {
			return *v
		}
		var ret GetSyntheticLocationsLocations
		return ret
	}).(GetSyntheticLocationsLocationsOutput)
}

// The cloud provider where the location is hosted.
func (o GetSyntheticLocationsLocationsPtrOutput) CloudPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.CloudPlatform
	}).(pulumi.StringPtrOutput)
}

// The unique ID of the location
func (o GetSyntheticLocationsLocationsPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The list of IP addresses assigned to the location.
//
//	Only applicable to `PUBLIC` locations
func (o GetSyntheticLocationsLocationsPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// The name of the location
func (o GetSyntheticLocationsLocationsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The release stage of the location
func (o GetSyntheticLocationsLocationsPtrOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.Stage
	}).(pulumi.StringPtrOutput)
}

// The status of the location:
//
// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
func (o GetSyntheticLocationsLocationsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
func (o GetSyntheticLocationsLocationsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GetSyntheticNodesNode struct {
	// The version of the Active Gate
	ActiveGateVersion string `pulumi:"activeGateVersion"`
	// Specifies whether the Active Gate  has the Auto update option enabled
	AutoUpdate bool `pulumi:"autoUpdate"`
	// Specifies whether Browser Monitors are enabled or not
	BrowserMonitors bool `pulumi:"browserMonitors"`
	// The health check status of the synthetic node
	HealthCheckStatus string `pulumi:"healthCheckStatus"`
	// The hostname of a node
	Hostname string `pulumi:"hostname"`
	// The ID of a node for usage within `SyntheticLocation`
	Id string `pulumi:"id"`
	// The known IP addresses of the node
	Ips []string `pulumi:"ips"`
	// Specifies whether the Active Gate has the One Agent routing enabled
	OneAgentRouting bool `pulumi:"oneAgentRouting"`
	// The Active Gate's host operating system
	OperatingSystem string `pulumi:"operatingSystem"`
	// The version of the synthetic player
	PlayerVersion string `pulumi:"playerVersion"`
	// The status of the synthetic node
	Status string `pulumi:"status"`
	// The version of a node
	Version string `pulumi:"version"`
}

// GetSyntheticNodesNodeInput is an input type that accepts GetSyntheticNodesNodeArgs and GetSyntheticNodesNodeOutput values.
// You can construct a concrete instance of `GetSyntheticNodesNodeInput` via:
//
//	GetSyntheticNodesNodeArgs{...}
type GetSyntheticNodesNodeInput interface {
	pulumi.Input

	ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput
	ToGetSyntheticNodesNodeOutputWithContext(context.Context) GetSyntheticNodesNodeOutput
}

type GetSyntheticNodesNodeArgs struct {
	// The version of the Active Gate
	ActiveGateVersion pulumi.StringInput `pulumi:"activeGateVersion"`
	// Specifies whether the Active Gate  has the Auto update option enabled
	AutoUpdate pulumi.BoolInput `pulumi:"autoUpdate"`
	// Specifies whether Browser Monitors are enabled or not
	BrowserMonitors pulumi.BoolInput `pulumi:"browserMonitors"`
	// The health check status of the synthetic node
	HealthCheckStatus pulumi.StringInput `pulumi:"healthCheckStatus"`
	// The hostname of a node
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The ID of a node for usage within `SyntheticLocation`
	Id pulumi.StringInput `pulumi:"id"`
	// The known IP addresses of the node
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Specifies whether the Active Gate has the One Agent routing enabled
	OneAgentRouting pulumi.BoolInput `pulumi:"oneAgentRouting"`
	// The Active Gate's host operating system
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
	// The version of the synthetic player
	PlayerVersion pulumi.StringInput `pulumi:"playerVersion"`
	// The status of the synthetic node
	Status pulumi.StringInput `pulumi:"status"`
	// The version of a node
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetSyntheticNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticNodesNode)(nil)).Elem()
}

func (i GetSyntheticNodesNodeArgs) ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput {
	return i.ToGetSyntheticNodesNodeOutputWithContext(context.Background())
}

func (i GetSyntheticNodesNodeArgs) ToGetSyntheticNodesNodeOutputWithContext(ctx context.Context) GetSyntheticNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticNodesNodeOutput)
}

// GetSyntheticNodesNodeArrayInput is an input type that accepts GetSyntheticNodesNodeArray and GetSyntheticNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetSyntheticNodesNodeArrayInput` via:
//
//	GetSyntheticNodesNodeArray{ GetSyntheticNodesNodeArgs{...} }
type GetSyntheticNodesNodeArrayInput interface {
	pulumi.Input

	ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput
	ToGetSyntheticNodesNodeArrayOutputWithContext(context.Context) GetSyntheticNodesNodeArrayOutput
}

type GetSyntheticNodesNodeArray []GetSyntheticNodesNodeInput

func (GetSyntheticNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSyntheticNodesNode)(nil)).Elem()
}

func (i GetSyntheticNodesNodeArray) ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput {
	return i.ToGetSyntheticNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetSyntheticNodesNodeArray) ToGetSyntheticNodesNodeArrayOutputWithContext(ctx context.Context) GetSyntheticNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticNodesNodeArrayOutput)
}

type GetSyntheticNodesNodeOutput struct{ *pulumi.OutputState }

func (GetSyntheticNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticNodesNode)(nil)).Elem()
}

func (o GetSyntheticNodesNodeOutput) ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput {
	return o
}

func (o GetSyntheticNodesNodeOutput) ToGetSyntheticNodesNodeOutputWithContext(ctx context.Context) GetSyntheticNodesNodeOutput {
	return o
}

// The version of the Active Gate
func (o GetSyntheticNodesNodeOutput) ActiveGateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.ActiveGateVersion }).(pulumi.StringOutput)
}

// Specifies whether the Active Gate  has the Auto update option enabled
func (o GetSyntheticNodesNodeOutput) AutoUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.AutoUpdate }).(pulumi.BoolOutput)
}

// Specifies whether Browser Monitors are enabled or not
func (o GetSyntheticNodesNodeOutput) BrowserMonitors() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.BrowserMonitors }).(pulumi.BoolOutput)
}

// The health check status of the synthetic node
func (o GetSyntheticNodesNodeOutput) HealthCheckStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.HealthCheckStatus }).(pulumi.StringOutput)
}

// The hostname of a node
func (o GetSyntheticNodesNodeOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Hostname }).(pulumi.StringOutput)
}

// The ID of a node for usage within `SyntheticLocation`
func (o GetSyntheticNodesNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Id }).(pulumi.StringOutput)
}

// The known IP addresses of the node
func (o GetSyntheticNodesNodeOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Specifies whether the Active Gate has the One Agent routing enabled
func (o GetSyntheticNodesNodeOutput) OneAgentRouting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.OneAgentRouting }).(pulumi.BoolOutput)
}

// The Active Gate's host operating system
func (o GetSyntheticNodesNodeOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

// The version of the synthetic player
func (o GetSyntheticNodesNodeOutput) PlayerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.PlayerVersion }).(pulumi.StringOutput)
}

// The status of the synthetic node
func (o GetSyntheticNodesNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Status }).(pulumi.StringOutput)
}

// The version of a node
func (o GetSyntheticNodesNodeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Version }).(pulumi.StringOutput)
}

type GetSyntheticNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetSyntheticNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSyntheticNodesNode)(nil)).Elem()
}

func (o GetSyntheticNodesNodeArrayOutput) ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput {
	return o
}

func (o GetSyntheticNodesNodeArrayOutput) ToGetSyntheticNodesNodeArrayOutputWithContext(ctx context.Context) GetSyntheticNodesNodeArrayOutput {
	return o
}

func (o GetSyntheticNodesNodeArrayOutput) Index(i pulumi.IntInput) GetSyntheticNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSyntheticNodesNode {
		return vs[0].([]GetSyntheticNodesNode)[vs[1].(int)]
	}).(GetSyntheticNodesNodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalInput)(nil)).Elem(), WebApplicationConversionGoalsGoalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalArrayInput)(nil)).Elem(), WebApplicationConversionGoalsGoalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalDestinationInput)(nil)).Elem(), WebApplicationConversionGoalsGoalDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalDestinationPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalUserActionInput)(nil)).Elem(), WebApplicationConversionGoalsGoalUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalUserActionPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDurationInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDurationPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumActionInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitNumActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumActionPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitNumActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationCustomActionApdexSettingsInput)(nil)).Elem(), WebApplicationCustomActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationCustomActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationCustomActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionInput)(nil)).Elem(), WebApplicationKeyUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionArrayInput)(nil)).Elem(), WebApplicationKeyUserActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionActionInput)(nil)).Elem(), WebApplicationKeyUserActionActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionActionArrayInput)(nil)).Elem(), WebApplicationKeyUserActionActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationLoadActionApdexSettingsInput)(nil)).Elem(), WebApplicationLoadActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationLoadActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationLoadActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsPtrInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCaptureInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCaptureArrayInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsCaptureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapturePtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationSessionReplayConfigInput)(nil)).Elem(), WebApplicationSessionReplayConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationSessionReplayConfigPtrInput)(nil)).Elem(), WebApplicationSessionReplayConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPtrInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPropertyInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPropertyArrayInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsInput)(nil)).Elem(), WebApplicationUserTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsPtrInput)(nil)).Elem(), WebApplicationUserTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsTagInput)(nil)).Elem(), WebApplicationUserTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsTagArrayInput)(nil)).Elem(), WebApplicationUserTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationWaterfallSettingsInput)(nil)).Elem(), WebApplicationWaterfallSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationWaterfallSettingsPtrInput)(nil)).Elem(), WebApplicationWaterfallSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationXhrActionApdexSettingsInput)(nil)).Elem(), WebApplicationXhrActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationXhrActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationXhrActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersInput)(nil)).Elem(), WebhookNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersPtrInput)(nil)).Elem(), WebhookNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersHeaderInput)(nil)).Elem(), WebhookNotificationHeadersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersHeaderArrayInput)(nil)).Elem(), WebhookNotificationHeadersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationOauth2CredentialsInput)(nil)).Elem(), WebhookNotificationOauth2CredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationOauth2CredentialsPtrInput)(nil)).Elem(), WebhookNotificationOauth2CredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersInput)(nil)).Elem(), XmattersNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersPtrInput)(nil)).Elem(), XmattersNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersHeaderInput)(nil)).Elem(), XmattersNotificationHeadersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersHeaderArrayInput)(nil)).Elem(), XmattersNotificationHeadersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingProfilesValueInput)(nil)).Elem(), GetAlertingProfilesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingProfilesValueArrayInput)(nil)).Elem(), GetAlertingProfilesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiTokensApiTokenInput)(nil)).Elem(), GetApiTokensApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiTokensApiTokenArrayInput)(nil)).Elem(), GetApiTokensApiTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDocumentsValueInput)(nil)).Elem(), GetDocumentsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDocumentsValueArrayInput)(nil)).Elem(), GetDocumentsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityInput)(nil)).Elem(), GetEntitiesEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityArrayInput)(nil)).Elem(), GetEntitiesEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagInput)(nil)).Elem(), GetEntitiesEntityTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagArrayInput)(nil)).Elem(), GetEntitiesEntityTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagTagInput)(nil)).Elem(), GetEntitiesEntityTagTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagTagArrayInput)(nil)).Elem(), GetEntitiesEntityTagTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGenericSettingsValueInput)(nil)).Elem(), GetGenericSettingsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGenericSettingsValueArrayInput)(nil)).Elem(), GetGenericSettingsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHubItemsItemInput)(nil)).Elem(), GetHubItemsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHubItemsItemArrayInput)(nil)).Elem(), GetHubItemsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPoliciesPolicyInput)(nil)).Elem(), GetIamPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPoliciesPolicyArrayInput)(nil)).Elem(), GetIamPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementZonesValueInput)(nil)).Elem(), GetManagementZonesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementZonesValueArrayInput)(nil)).Elem(), GetManagementZonesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironmentInput)(nil)).Elem(), GetRemoteEnvironmentsRemoteEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironmentArrayInput)(nil)).Elem(), GetRemoteEnvironmentsRemoteEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsInput)(nil)).Elem(), GetSyntheticLocationsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsPtrInput)(nil)).Elem(), GetSyntheticLocationsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticNodesNodeInput)(nil)).Elem(), GetSyntheticNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticNodesNodeArrayInput)(nil)).Elem(), GetSyntheticNodesNodeArray{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalDestinationOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalDestinationPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalUserActionOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalUserActionPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitDurationOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitDurationPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitNumActionOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationCustomActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationCustomActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionActionOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionActionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationLoadActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationLoadActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsCaptureOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCapturePtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationSessionReplayConfigOutput{})
	pulumi.RegisterOutputType(WebApplicationSessionReplayConfigPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPropertyOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsTagOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsTagArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationWaterfallSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationWaterfallSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationXhrActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationXhrActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersPtrOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersHeaderOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersHeaderArrayOutput{})
	pulumi.RegisterOutputType(WebhookNotificationOauth2CredentialsOutput{})
	pulumi.RegisterOutputType(WebhookNotificationOauth2CredentialsPtrOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersPtrOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersHeaderOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetAlertingProfilesValueOutput{})
	pulumi.RegisterOutputType(GetAlertingProfilesValueArrayOutput{})
	pulumi.RegisterOutputType(GetApiTokensApiTokenOutput{})
	pulumi.RegisterOutputType(GetApiTokensApiTokenArrayOutput{})
	pulumi.RegisterOutputType(GetDocumentsValueOutput{})
	pulumi.RegisterOutputType(GetDocumentsValueArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagTagOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagTagArrayOutput{})
	pulumi.RegisterOutputType(GetGenericSettingsValueOutput{})
	pulumi.RegisterOutputType(GetGenericSettingsValueArrayOutput{})
	pulumi.RegisterOutputType(GetHubItemsItemOutput{})
	pulumi.RegisterOutputType(GetHubItemsItemArrayOutput{})
	pulumi.RegisterOutputType(GetIamPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetIamPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetManagementZonesValueOutput{})
	pulumi.RegisterOutputType(GetManagementZonesValueArrayOutput{})
	pulumi.RegisterOutputType(GetRemoteEnvironmentsRemoteEnvironmentOutput{})
	pulumi.RegisterOutputType(GetRemoteEnvironmentsRemoteEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsPtrOutput{})
	pulumi.RegisterOutputType(GetSyntheticNodesNodeOutput{})
	pulumi.RegisterOutputType(GetSyntheticNodesNodeArrayOutput{})
}
