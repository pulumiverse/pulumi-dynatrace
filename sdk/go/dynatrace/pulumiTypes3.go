// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

var _ = internal.GetEnvOrDefault

type ServiceFailureExceptionRulesCustomHandledExceptions struct {
	CustomHandledExceptions []ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException `pulumi:"customHandledExceptions"`
}

// ServiceFailureExceptionRulesCustomHandledExceptionsInput is an input type that accepts ServiceFailureExceptionRulesCustomHandledExceptionsArgs and ServiceFailureExceptionRulesCustomHandledExceptionsOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesCustomHandledExceptionsInput` via:
//
//	ServiceFailureExceptionRulesCustomHandledExceptionsArgs{...}
type ServiceFailureExceptionRulesCustomHandledExceptionsInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesCustomHandledExceptionsOutput() ServiceFailureExceptionRulesCustomHandledExceptionsOutput
	ToServiceFailureExceptionRulesCustomHandledExceptionsOutputWithContext(context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsOutput
}

type ServiceFailureExceptionRulesCustomHandledExceptionsArgs struct {
	CustomHandledExceptions ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayInput `pulumi:"customHandledExceptions"`
}

func (ServiceFailureExceptionRulesCustomHandledExceptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesCustomHandledExceptions)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesCustomHandledExceptionsArgs) ToServiceFailureExceptionRulesCustomHandledExceptionsOutput() ServiceFailureExceptionRulesCustomHandledExceptionsOutput {
	return i.ToServiceFailureExceptionRulesCustomHandledExceptionsOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesCustomHandledExceptionsArgs) ToServiceFailureExceptionRulesCustomHandledExceptionsOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesCustomHandledExceptionsOutput)
}

func (i ServiceFailureExceptionRulesCustomHandledExceptionsArgs) ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput() ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput {
	return i.ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesCustomHandledExceptionsArgs) ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesCustomHandledExceptionsOutput).ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(ctx)
}

// ServiceFailureExceptionRulesCustomHandledExceptionsPtrInput is an input type that accepts ServiceFailureExceptionRulesCustomHandledExceptionsArgs, ServiceFailureExceptionRulesCustomHandledExceptionsPtr and ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesCustomHandledExceptionsPtrInput` via:
//
//	        ServiceFailureExceptionRulesCustomHandledExceptionsArgs{...}
//
//	or:
//
//	        nil
type ServiceFailureExceptionRulesCustomHandledExceptionsPtrInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput() ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput
	ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput
}

type serviceFailureExceptionRulesCustomHandledExceptionsPtrType ServiceFailureExceptionRulesCustomHandledExceptionsArgs

func ServiceFailureExceptionRulesCustomHandledExceptionsPtr(v *ServiceFailureExceptionRulesCustomHandledExceptionsArgs) ServiceFailureExceptionRulesCustomHandledExceptionsPtrInput {
	return (*serviceFailureExceptionRulesCustomHandledExceptionsPtrType)(v)
}

func (*serviceFailureExceptionRulesCustomHandledExceptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFailureExceptionRulesCustomHandledExceptions)(nil)).Elem()
}

func (i *serviceFailureExceptionRulesCustomHandledExceptionsPtrType) ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput() ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput {
	return i.ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(context.Background())
}

func (i *serviceFailureExceptionRulesCustomHandledExceptionsPtrType) ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput)
}

type ServiceFailureExceptionRulesCustomHandledExceptionsOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesCustomHandledExceptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesCustomHandledExceptions)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsOutput() ServiceFailureExceptionRulesCustomHandledExceptionsOutput {
	return o
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsOutput {
	return o
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput() ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput {
	return o.ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(context.Background())
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFailureExceptionRulesCustomHandledExceptions) *ServiceFailureExceptionRulesCustomHandledExceptions {
		return &v
	}).(ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput)
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsOutput) CustomHandledExceptions() ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesCustomHandledExceptions) []ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException {
		return v.CustomHandledExceptions
	}).(ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFailureExceptionRulesCustomHandledExceptions)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput() ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput {
	return o
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput {
	return o
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput) Elem() ServiceFailureExceptionRulesCustomHandledExceptionsOutput {
	return o.ApplyT(func(v *ServiceFailureExceptionRulesCustomHandledExceptions) ServiceFailureExceptionRulesCustomHandledExceptions {
		if v != nil {
			return *v
		}
		var ret ServiceFailureExceptionRulesCustomHandledExceptions
		return ret
	}).(ServiceFailureExceptionRulesCustomHandledExceptionsOutput)
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput) CustomHandledExceptions() ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput {
	return o.ApplyT(func(v *ServiceFailureExceptionRulesCustomHandledExceptions) []ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException {
		if v == nil {
			return nil
		}
		return v.CustomHandledExceptions
	}).(ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException struct {
	// The pattern will match if it is contained within the actual class name.
	ClassPattern *string `pulumi:"classPattern"`
	// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
	MessagePattern *string `pulumi:"messagePattern"`
}

// ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionInput is an input type that accepts ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs and ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionInput` via:
//
//	ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs{...}
type ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput
	ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutputWithContext(context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput
}

type ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs struct {
	// The pattern will match if it is contained within the actual class name.
	ClassPattern pulumi.StringPtrInput `pulumi:"classPattern"`
	// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
	MessagePattern pulumi.StringPtrInput `pulumi:"messagePattern"`
}

func (ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs) ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput {
	return i.ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs) ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput)
}

// ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayInput is an input type that accepts ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArray and ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayInput` via:
//
//	ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArray{ ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs{...} }
type ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput
	ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutputWithContext(context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput
}

type ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArray []ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionInput

func (ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArray) ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput {
	return i.ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArray) ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput {
	return o
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput {
	return o
}

// The pattern will match if it is contained within the actual class name.
func (o ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput) ClassPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException) *string {
		return v.ClassPattern
	}).(pulumi.StringPtrOutput)
}

// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
func (o ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput) MessagePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException) *string {
		return v.MessagePattern
	}).(pulumi.StringPtrOutput)
}

type ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput {
	return o
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput) ToServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput {
	return o
}

func (o ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput) Index(i pulumi.IntInput) ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException {
		return vs[0].([]ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledException)[vs[1].(int)]
	}).(ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput)
}

type ServiceFailureExceptionRulesIgnoredExceptions struct {
	CustomHandledExceptions []ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException `pulumi:"customHandledExceptions"`
}

// ServiceFailureExceptionRulesIgnoredExceptionsInput is an input type that accepts ServiceFailureExceptionRulesIgnoredExceptionsArgs and ServiceFailureExceptionRulesIgnoredExceptionsOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesIgnoredExceptionsInput` via:
//
//	ServiceFailureExceptionRulesIgnoredExceptionsArgs{...}
type ServiceFailureExceptionRulesIgnoredExceptionsInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesIgnoredExceptionsOutput() ServiceFailureExceptionRulesIgnoredExceptionsOutput
	ToServiceFailureExceptionRulesIgnoredExceptionsOutputWithContext(context.Context) ServiceFailureExceptionRulesIgnoredExceptionsOutput
}

type ServiceFailureExceptionRulesIgnoredExceptionsArgs struct {
	CustomHandledExceptions ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayInput `pulumi:"customHandledExceptions"`
}

func (ServiceFailureExceptionRulesIgnoredExceptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesIgnoredExceptions)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesIgnoredExceptionsArgs) ToServiceFailureExceptionRulesIgnoredExceptionsOutput() ServiceFailureExceptionRulesIgnoredExceptionsOutput {
	return i.ToServiceFailureExceptionRulesIgnoredExceptionsOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesIgnoredExceptionsArgs) ToServiceFailureExceptionRulesIgnoredExceptionsOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesIgnoredExceptionsOutput)
}

func (i ServiceFailureExceptionRulesIgnoredExceptionsArgs) ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutput() ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput {
	return i.ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesIgnoredExceptionsArgs) ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesIgnoredExceptionsOutput).ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(ctx)
}

// ServiceFailureExceptionRulesIgnoredExceptionsPtrInput is an input type that accepts ServiceFailureExceptionRulesIgnoredExceptionsArgs, ServiceFailureExceptionRulesIgnoredExceptionsPtr and ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesIgnoredExceptionsPtrInput` via:
//
//	        ServiceFailureExceptionRulesIgnoredExceptionsArgs{...}
//
//	or:
//
//	        nil
type ServiceFailureExceptionRulesIgnoredExceptionsPtrInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutput() ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput
	ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(context.Context) ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput
}

type serviceFailureExceptionRulesIgnoredExceptionsPtrType ServiceFailureExceptionRulesIgnoredExceptionsArgs

func ServiceFailureExceptionRulesIgnoredExceptionsPtr(v *ServiceFailureExceptionRulesIgnoredExceptionsArgs) ServiceFailureExceptionRulesIgnoredExceptionsPtrInput {
	return (*serviceFailureExceptionRulesIgnoredExceptionsPtrType)(v)
}

func (*serviceFailureExceptionRulesIgnoredExceptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFailureExceptionRulesIgnoredExceptions)(nil)).Elem()
}

func (i *serviceFailureExceptionRulesIgnoredExceptionsPtrType) ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutput() ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput {
	return i.ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(context.Background())
}

func (i *serviceFailureExceptionRulesIgnoredExceptionsPtrType) ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput)
}

type ServiceFailureExceptionRulesIgnoredExceptionsOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesIgnoredExceptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesIgnoredExceptions)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsOutput) ToServiceFailureExceptionRulesIgnoredExceptionsOutput() ServiceFailureExceptionRulesIgnoredExceptionsOutput {
	return o
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsOutput) ToServiceFailureExceptionRulesIgnoredExceptionsOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsOutput {
	return o
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsOutput) ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutput() ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput {
	return o.ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(context.Background())
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsOutput) ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFailureExceptionRulesIgnoredExceptions) *ServiceFailureExceptionRulesIgnoredExceptions {
		return &v
	}).(ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput)
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsOutput) CustomHandledExceptions() ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesIgnoredExceptions) []ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException {
		return v.CustomHandledExceptions
	}).(ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFailureExceptionRulesIgnoredExceptions)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput) ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutput() ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput {
	return o
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput) ToServiceFailureExceptionRulesIgnoredExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput {
	return o
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput) Elem() ServiceFailureExceptionRulesIgnoredExceptionsOutput {
	return o.ApplyT(func(v *ServiceFailureExceptionRulesIgnoredExceptions) ServiceFailureExceptionRulesIgnoredExceptions {
		if v != nil {
			return *v
		}
		var ret ServiceFailureExceptionRulesIgnoredExceptions
		return ret
	}).(ServiceFailureExceptionRulesIgnoredExceptionsOutput)
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput) CustomHandledExceptions() ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput {
	return o.ApplyT(func(v *ServiceFailureExceptionRulesIgnoredExceptions) []ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException {
		if v == nil {
			return nil
		}
		return v.CustomHandledExceptions
	}).(ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException struct {
	// The pattern will match if it is contained within the actual class name.
	ClassPattern *string `pulumi:"classPattern"`
	// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
	MessagePattern *string `pulumi:"messagePattern"`
}

// ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionInput is an input type that accepts ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArgs and ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionInput` via:
//
//	ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArgs{...}
type ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput
	ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutputWithContext(context.Context) ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput
}

type ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArgs struct {
	// The pattern will match if it is contained within the actual class name.
	ClassPattern pulumi.StringPtrInput `pulumi:"classPattern"`
	// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
	MessagePattern pulumi.StringPtrInput `pulumi:"messagePattern"`
}

func (ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArgs) ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput {
	return i.ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArgs) ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput)
}

// ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayInput is an input type that accepts ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArray and ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayInput` via:
//
//	ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArray{ ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArgs{...} }
type ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput
	ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutputWithContext(context.Context) ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput
}

type ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArray []ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionInput

func (ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArray) ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput {
	return i.ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArray) ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput) ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput {
	return o
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput) ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput {
	return o
}

// The pattern will match if it is contained within the actual class name.
func (o ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput) ClassPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException) *string {
		return v.ClassPattern
	}).(pulumi.StringPtrOutput)
}

// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
func (o ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput) MessagePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException) *string {
		return v.MessagePattern
	}).(pulumi.StringPtrOutput)
}

type ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput) ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput {
	return o
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput) ToServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput {
	return o
}

func (o ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput) Index(i pulumi.IntInput) ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException {
		return vs[0].([]ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledException)[vs[1].(int)]
	}).(ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput)
}

type ServiceFailureExceptionRulesSuccessForcingExceptions struct {
	CustomHandledExceptions []ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException `pulumi:"customHandledExceptions"`
}

// ServiceFailureExceptionRulesSuccessForcingExceptionsInput is an input type that accepts ServiceFailureExceptionRulesSuccessForcingExceptionsArgs and ServiceFailureExceptionRulesSuccessForcingExceptionsOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesSuccessForcingExceptionsInput` via:
//
//	ServiceFailureExceptionRulesSuccessForcingExceptionsArgs{...}
type ServiceFailureExceptionRulesSuccessForcingExceptionsInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesSuccessForcingExceptionsOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsOutput
	ToServiceFailureExceptionRulesSuccessForcingExceptionsOutputWithContext(context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsOutput
}

type ServiceFailureExceptionRulesSuccessForcingExceptionsArgs struct {
	CustomHandledExceptions ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayInput `pulumi:"customHandledExceptions"`
}

func (ServiceFailureExceptionRulesSuccessForcingExceptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesSuccessForcingExceptions)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesSuccessForcingExceptionsArgs) ToServiceFailureExceptionRulesSuccessForcingExceptionsOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsOutput {
	return i.ToServiceFailureExceptionRulesSuccessForcingExceptionsOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesSuccessForcingExceptionsArgs) ToServiceFailureExceptionRulesSuccessForcingExceptionsOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesSuccessForcingExceptionsOutput)
}

func (i ServiceFailureExceptionRulesSuccessForcingExceptionsArgs) ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput {
	return i.ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesSuccessForcingExceptionsArgs) ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesSuccessForcingExceptionsOutput).ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(ctx)
}

// ServiceFailureExceptionRulesSuccessForcingExceptionsPtrInput is an input type that accepts ServiceFailureExceptionRulesSuccessForcingExceptionsArgs, ServiceFailureExceptionRulesSuccessForcingExceptionsPtr and ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesSuccessForcingExceptionsPtrInput` via:
//
//	        ServiceFailureExceptionRulesSuccessForcingExceptionsArgs{...}
//
//	or:
//
//	        nil
type ServiceFailureExceptionRulesSuccessForcingExceptionsPtrInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput
	ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput
}

type serviceFailureExceptionRulesSuccessForcingExceptionsPtrType ServiceFailureExceptionRulesSuccessForcingExceptionsArgs

func ServiceFailureExceptionRulesSuccessForcingExceptionsPtr(v *ServiceFailureExceptionRulesSuccessForcingExceptionsArgs) ServiceFailureExceptionRulesSuccessForcingExceptionsPtrInput {
	return (*serviceFailureExceptionRulesSuccessForcingExceptionsPtrType)(v)
}

func (*serviceFailureExceptionRulesSuccessForcingExceptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFailureExceptionRulesSuccessForcingExceptions)(nil)).Elem()
}

func (i *serviceFailureExceptionRulesSuccessForcingExceptionsPtrType) ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput {
	return i.ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(context.Background())
}

func (i *serviceFailureExceptionRulesSuccessForcingExceptionsPtrType) ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput)
}

type ServiceFailureExceptionRulesSuccessForcingExceptionsOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesSuccessForcingExceptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesSuccessForcingExceptions)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsOutput {
	return o
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsOutput {
	return o
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput {
	return o.ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(context.Background())
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFailureExceptionRulesSuccessForcingExceptions) *ServiceFailureExceptionRulesSuccessForcingExceptions {
		return &v
	}).(ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput)
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsOutput) CustomHandledExceptions() ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesSuccessForcingExceptions) []ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException {
		return v.CustomHandledExceptions
	}).(ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFailureExceptionRulesSuccessForcingExceptions)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput {
	return o
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput {
	return o
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput) Elem() ServiceFailureExceptionRulesSuccessForcingExceptionsOutput {
	return o.ApplyT(func(v *ServiceFailureExceptionRulesSuccessForcingExceptions) ServiceFailureExceptionRulesSuccessForcingExceptions {
		if v != nil {
			return *v
		}
		var ret ServiceFailureExceptionRulesSuccessForcingExceptions
		return ret
	}).(ServiceFailureExceptionRulesSuccessForcingExceptionsOutput)
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput) CustomHandledExceptions() ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput {
	return o.ApplyT(func(v *ServiceFailureExceptionRulesSuccessForcingExceptions) []ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException {
		if v == nil {
			return nil
		}
		return v.CustomHandledExceptions
	}).(ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException struct {
	// The pattern will match if it is contained within the actual class name.
	ClassPattern *string `pulumi:"classPattern"`
	// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
	MessagePattern *string `pulumi:"messagePattern"`
}

// ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionInput is an input type that accepts ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArgs and ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionInput` via:
//
//	ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArgs{...}
type ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput
	ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutputWithContext(context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput
}

type ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArgs struct {
	// The pattern will match if it is contained within the actual class name.
	ClassPattern pulumi.StringPtrInput `pulumi:"classPattern"`
	// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
	MessagePattern pulumi.StringPtrInput `pulumi:"messagePattern"`
}

func (ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArgs) ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput {
	return i.ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArgs) ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput)
}

// ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayInput is an input type that accepts ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArray and ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput values.
// You can construct a concrete instance of `ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayInput` via:
//
//	ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArray{ ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArgs{...} }
type ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayInput interface {
	pulumi.Input

	ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput
	ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutputWithContext(context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput
}

type ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArray []ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionInput

func (ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException)(nil)).Elem()
}

func (i ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArray) ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput {
	return i.ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutputWithContext(context.Background())
}

func (i ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArray) ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput)
}

type ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput {
	return o
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput {
	return o
}

// The pattern will match if it is contained within the actual class name.
func (o ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput) ClassPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException) *string {
		return v.ClassPattern
	}).(pulumi.StringPtrOutput)
}

// Optionally, define an exception message pattern. The pattern will match if the actual exception message contains the pattern.
func (o ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput) MessagePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException) *string {
		return v.MessagePattern
	}).(pulumi.StringPtrOutput)
}

type ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput struct{ *pulumi.OutputState }

func (ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException)(nil)).Elem()
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput() ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput {
	return o
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput) ToServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutputWithContext(ctx context.Context) ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput {
	return o
}

func (o ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput) Index(i pulumi.IntInput) ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException {
		return vs[0].([]ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledException)[vs[1].(int)]
	}).(ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput)
}

type ServiceFullWebRequestConditions struct {
	Conditions []ServiceFullWebRequestConditionsCondition `pulumi:"conditions"`
}

// ServiceFullWebRequestConditionsInput is an input type that accepts ServiceFullWebRequestConditionsArgs and ServiceFullWebRequestConditionsOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestConditionsInput` via:
//
//	ServiceFullWebRequestConditionsArgs{...}
type ServiceFullWebRequestConditionsInput interface {
	pulumi.Input

	ToServiceFullWebRequestConditionsOutput() ServiceFullWebRequestConditionsOutput
	ToServiceFullWebRequestConditionsOutputWithContext(context.Context) ServiceFullWebRequestConditionsOutput
}

type ServiceFullWebRequestConditionsArgs struct {
	Conditions ServiceFullWebRequestConditionsConditionArrayInput `pulumi:"conditions"`
}

func (ServiceFullWebRequestConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestConditions)(nil)).Elem()
}

func (i ServiceFullWebRequestConditionsArgs) ToServiceFullWebRequestConditionsOutput() ServiceFullWebRequestConditionsOutput {
	return i.ToServiceFullWebRequestConditionsOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestConditionsArgs) ToServiceFullWebRequestConditionsOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestConditionsOutput)
}

func (i ServiceFullWebRequestConditionsArgs) ToServiceFullWebRequestConditionsPtrOutput() ServiceFullWebRequestConditionsPtrOutput {
	return i.ToServiceFullWebRequestConditionsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestConditionsArgs) ToServiceFullWebRequestConditionsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestConditionsOutput).ToServiceFullWebRequestConditionsPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestConditionsPtrInput is an input type that accepts ServiceFullWebRequestConditionsArgs, ServiceFullWebRequestConditionsPtr and ServiceFullWebRequestConditionsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestConditionsPtrInput` via:
//
//	        ServiceFullWebRequestConditionsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestConditionsPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestConditionsPtrOutput() ServiceFullWebRequestConditionsPtrOutput
	ToServiceFullWebRequestConditionsPtrOutputWithContext(context.Context) ServiceFullWebRequestConditionsPtrOutput
}

type serviceFullWebRequestConditionsPtrType ServiceFullWebRequestConditionsArgs

func ServiceFullWebRequestConditionsPtr(v *ServiceFullWebRequestConditionsArgs) ServiceFullWebRequestConditionsPtrInput {
	return (*serviceFullWebRequestConditionsPtrType)(v)
}

func (*serviceFullWebRequestConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestConditions)(nil)).Elem()
}

func (i *serviceFullWebRequestConditionsPtrType) ToServiceFullWebRequestConditionsPtrOutput() ServiceFullWebRequestConditionsPtrOutput {
	return i.ToServiceFullWebRequestConditionsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestConditionsPtrType) ToServiceFullWebRequestConditionsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestConditionsPtrOutput)
}

type ServiceFullWebRequestConditionsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestConditions)(nil)).Elem()
}

func (o ServiceFullWebRequestConditionsOutput) ToServiceFullWebRequestConditionsOutput() ServiceFullWebRequestConditionsOutput {
	return o
}

func (o ServiceFullWebRequestConditionsOutput) ToServiceFullWebRequestConditionsOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsOutput {
	return o
}

func (o ServiceFullWebRequestConditionsOutput) ToServiceFullWebRequestConditionsPtrOutput() ServiceFullWebRequestConditionsPtrOutput {
	return o.ToServiceFullWebRequestConditionsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestConditionsOutput) ToServiceFullWebRequestConditionsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestConditions) *ServiceFullWebRequestConditions {
		return &v
	}).(ServiceFullWebRequestConditionsPtrOutput)
}

func (o ServiceFullWebRequestConditionsOutput) Conditions() ServiceFullWebRequestConditionsConditionArrayOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditions) []ServiceFullWebRequestConditionsCondition {
		return v.Conditions
	}).(ServiceFullWebRequestConditionsConditionArrayOutput)
}

type ServiceFullWebRequestConditionsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestConditions)(nil)).Elem()
}

func (o ServiceFullWebRequestConditionsPtrOutput) ToServiceFullWebRequestConditionsPtrOutput() ServiceFullWebRequestConditionsPtrOutput {
	return o
}

func (o ServiceFullWebRequestConditionsPtrOutput) ToServiceFullWebRequestConditionsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsPtrOutput {
	return o
}

func (o ServiceFullWebRequestConditionsPtrOutput) Elem() ServiceFullWebRequestConditionsOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestConditions) ServiceFullWebRequestConditions {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestConditions
		return ret
	}).(ServiceFullWebRequestConditionsOutput)
}

func (o ServiceFullWebRequestConditionsPtrOutput) Conditions() ServiceFullWebRequestConditionsConditionArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestConditions) []ServiceFullWebRequestConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ServiceFullWebRequestConditionsConditionArrayOutput)
}

type ServiceFullWebRequestConditionsCondition struct {
	// Take the value of this attribute
	Attribute string `pulumi:"attribute"`
	// Apply this operation
	CompareOperationType string `pulumi:"compareOperationType"`
	// Technology
	Frameworks []string `pulumi:"frameworks"`
	// Ignore case sensitivity for texts.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Value
	IntValue *int `pulumi:"intValue"`
	// Values
	IntValues []int `pulumi:"intValues"`
	// From
	IpRangeFrom *string `pulumi:"ipRangeFrom"`
	// To
	IpRangeTo *string `pulumi:"ipRangeTo"`
	// If multiple values are specified, at least one of them must match for the condition to match
	TagValues []string `pulumi:"tagValues"`
	// If multiple values are specified, at least one of them must match for the condition to match
	TextValues []string `pulumi:"textValues"`
}

// ServiceFullWebRequestConditionsConditionInput is an input type that accepts ServiceFullWebRequestConditionsConditionArgs and ServiceFullWebRequestConditionsConditionOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestConditionsConditionInput` via:
//
//	ServiceFullWebRequestConditionsConditionArgs{...}
type ServiceFullWebRequestConditionsConditionInput interface {
	pulumi.Input

	ToServiceFullWebRequestConditionsConditionOutput() ServiceFullWebRequestConditionsConditionOutput
	ToServiceFullWebRequestConditionsConditionOutputWithContext(context.Context) ServiceFullWebRequestConditionsConditionOutput
}

type ServiceFullWebRequestConditionsConditionArgs struct {
	// Take the value of this attribute
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// Apply this operation
	CompareOperationType pulumi.StringInput `pulumi:"compareOperationType"`
	// Technology
	Frameworks pulumi.StringArrayInput `pulumi:"frameworks"`
	// Ignore case sensitivity for texts.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Value
	IntValue pulumi.IntPtrInput `pulumi:"intValue"`
	// Values
	IntValues pulumi.IntArrayInput `pulumi:"intValues"`
	// From
	IpRangeFrom pulumi.StringPtrInput `pulumi:"ipRangeFrom"`
	// To
	IpRangeTo pulumi.StringPtrInput `pulumi:"ipRangeTo"`
	// If multiple values are specified, at least one of them must match for the condition to match
	TagValues pulumi.StringArrayInput `pulumi:"tagValues"`
	// If multiple values are specified, at least one of them must match for the condition to match
	TextValues pulumi.StringArrayInput `pulumi:"textValues"`
}

func (ServiceFullWebRequestConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestConditionsCondition)(nil)).Elem()
}

func (i ServiceFullWebRequestConditionsConditionArgs) ToServiceFullWebRequestConditionsConditionOutput() ServiceFullWebRequestConditionsConditionOutput {
	return i.ToServiceFullWebRequestConditionsConditionOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestConditionsConditionArgs) ToServiceFullWebRequestConditionsConditionOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestConditionsConditionOutput)
}

// ServiceFullWebRequestConditionsConditionArrayInput is an input type that accepts ServiceFullWebRequestConditionsConditionArray and ServiceFullWebRequestConditionsConditionArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestConditionsConditionArrayInput` via:
//
//	ServiceFullWebRequestConditionsConditionArray{ ServiceFullWebRequestConditionsConditionArgs{...} }
type ServiceFullWebRequestConditionsConditionArrayInput interface {
	pulumi.Input

	ToServiceFullWebRequestConditionsConditionArrayOutput() ServiceFullWebRequestConditionsConditionArrayOutput
	ToServiceFullWebRequestConditionsConditionArrayOutputWithContext(context.Context) ServiceFullWebRequestConditionsConditionArrayOutput
}

type ServiceFullWebRequestConditionsConditionArray []ServiceFullWebRequestConditionsConditionInput

func (ServiceFullWebRequestConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebRequestConditionsCondition)(nil)).Elem()
}

func (i ServiceFullWebRequestConditionsConditionArray) ToServiceFullWebRequestConditionsConditionArrayOutput() ServiceFullWebRequestConditionsConditionArrayOutput {
	return i.ToServiceFullWebRequestConditionsConditionArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestConditionsConditionArray) ToServiceFullWebRequestConditionsConditionArrayOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestConditionsConditionArrayOutput)
}

type ServiceFullWebRequestConditionsConditionOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestConditionsCondition)(nil)).Elem()
}

func (o ServiceFullWebRequestConditionsConditionOutput) ToServiceFullWebRequestConditionsConditionOutput() ServiceFullWebRequestConditionsConditionOutput {
	return o
}

func (o ServiceFullWebRequestConditionsConditionOutput) ToServiceFullWebRequestConditionsConditionOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsConditionOutput {
	return o
}

// Take the value of this attribute
func (o ServiceFullWebRequestConditionsConditionOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) string { return v.Attribute }).(pulumi.StringOutput)
}

// Apply this operation
func (o ServiceFullWebRequestConditionsConditionOutput) CompareOperationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) string { return v.CompareOperationType }).(pulumi.StringOutput)
}

// Technology
func (o ServiceFullWebRequestConditionsConditionOutput) Frameworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) []string { return v.Frameworks }).(pulumi.StringArrayOutput)
}

// Ignore case sensitivity for texts.
func (o ServiceFullWebRequestConditionsConditionOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Value
func (o ServiceFullWebRequestConditionsConditionOutput) IntValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) *int { return v.IntValue }).(pulumi.IntPtrOutput)
}

// Values
func (o ServiceFullWebRequestConditionsConditionOutput) IntValues() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) []int { return v.IntValues }).(pulumi.IntArrayOutput)
}

// From
func (o ServiceFullWebRequestConditionsConditionOutput) IpRangeFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) *string { return v.IpRangeFrom }).(pulumi.StringPtrOutput)
}

// To
func (o ServiceFullWebRequestConditionsConditionOutput) IpRangeTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) *string { return v.IpRangeTo }).(pulumi.StringPtrOutput)
}

// If multiple values are specified, at least one of them must match for the condition to match
func (o ServiceFullWebRequestConditionsConditionOutput) TagValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) []string { return v.TagValues }).(pulumi.StringArrayOutput)
}

// If multiple values are specified, at least one of them must match for the condition to match
func (o ServiceFullWebRequestConditionsConditionOutput) TextValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceFullWebRequestConditionsCondition) []string { return v.TextValues }).(pulumi.StringArrayOutput)
}

type ServiceFullWebRequestConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebRequestConditionsCondition)(nil)).Elem()
}

func (o ServiceFullWebRequestConditionsConditionArrayOutput) ToServiceFullWebRequestConditionsConditionArrayOutput() ServiceFullWebRequestConditionsConditionArrayOutput {
	return o
}

func (o ServiceFullWebRequestConditionsConditionArrayOutput) ToServiceFullWebRequestConditionsConditionArrayOutputWithContext(ctx context.Context) ServiceFullWebRequestConditionsConditionArrayOutput {
	return o
}

func (o ServiceFullWebRequestConditionsConditionArrayOutput) Index(i pulumi.IntInput) ServiceFullWebRequestConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebRequestConditionsCondition {
		return vs[0].([]ServiceFullWebRequestConditionsCondition)[vs[1].(int)]
	}).(ServiceFullWebRequestConditionsConditionOutput)
}

type ServiceFullWebRequestIdContributors struct {
	// Application identifier
	ApplicationId ServiceFullWebRequestIdContributorsApplicationId `pulumi:"applicationId"`
	// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
	ContextRoot ServiceFullWebRequestIdContributorsContextRoot `pulumi:"contextRoot"`
	// Server Name
	ServerName ServiceFullWebRequestIdContributorsServerName `pulumi:"serverName"`
}

// ServiceFullWebRequestIdContributorsInput is an input type that accepts ServiceFullWebRequestIdContributorsArgs and ServiceFullWebRequestIdContributorsOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsInput` via:
//
//	ServiceFullWebRequestIdContributorsArgs{...}
type ServiceFullWebRequestIdContributorsInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsOutput() ServiceFullWebRequestIdContributorsOutput
	ToServiceFullWebRequestIdContributorsOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsOutput
}

type ServiceFullWebRequestIdContributorsArgs struct {
	// Application identifier
	ApplicationId ServiceFullWebRequestIdContributorsApplicationIdInput `pulumi:"applicationId"`
	// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
	ContextRoot ServiceFullWebRequestIdContributorsContextRootInput `pulumi:"contextRoot"`
	// Server Name
	ServerName ServiceFullWebRequestIdContributorsServerNameInput `pulumi:"serverName"`
}

func (ServiceFullWebRequestIdContributorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributors)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsArgs) ToServiceFullWebRequestIdContributorsOutput() ServiceFullWebRequestIdContributorsOutput {
	return i.ToServiceFullWebRequestIdContributorsOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsArgs) ToServiceFullWebRequestIdContributorsOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsOutput)
}

func (i ServiceFullWebRequestIdContributorsArgs) ToServiceFullWebRequestIdContributorsPtrOutput() ServiceFullWebRequestIdContributorsPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsArgs) ToServiceFullWebRequestIdContributorsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsOutput).ToServiceFullWebRequestIdContributorsPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsArgs, ServiceFullWebRequestIdContributorsPtr and ServiceFullWebRequestIdContributorsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsPtrOutput() ServiceFullWebRequestIdContributorsPtrOutput
	ToServiceFullWebRequestIdContributorsPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsPtrOutput
}

type serviceFullWebRequestIdContributorsPtrType ServiceFullWebRequestIdContributorsArgs

func ServiceFullWebRequestIdContributorsPtr(v *ServiceFullWebRequestIdContributorsArgs) ServiceFullWebRequestIdContributorsPtrInput {
	return (*serviceFullWebRequestIdContributorsPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributors)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsPtrType) ToServiceFullWebRequestIdContributorsPtrOutput() ServiceFullWebRequestIdContributorsPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsPtrType) ToServiceFullWebRequestIdContributorsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsPtrOutput)
}

type ServiceFullWebRequestIdContributorsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributors)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsOutput) ToServiceFullWebRequestIdContributorsOutput() ServiceFullWebRequestIdContributorsOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsOutput) ToServiceFullWebRequestIdContributorsOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsOutput) ToServiceFullWebRequestIdContributorsPtrOutput() ServiceFullWebRequestIdContributorsPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsOutput) ToServiceFullWebRequestIdContributorsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributors) *ServiceFullWebRequestIdContributors {
		return &v
	}).(ServiceFullWebRequestIdContributorsPtrOutput)
}

// Application identifier
func (o ServiceFullWebRequestIdContributorsOutput) ApplicationId() ServiceFullWebRequestIdContributorsApplicationIdOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributors) ServiceFullWebRequestIdContributorsApplicationId {
		return v.ApplicationId
	}).(ServiceFullWebRequestIdContributorsApplicationIdOutput)
}

// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebRequestIdContributorsOutput) ContextRoot() ServiceFullWebRequestIdContributorsContextRootOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributors) ServiceFullWebRequestIdContributorsContextRoot {
		return v.ContextRoot
	}).(ServiceFullWebRequestIdContributorsContextRootOutput)
}

// Server Name
func (o ServiceFullWebRequestIdContributorsOutput) ServerName() ServiceFullWebRequestIdContributorsServerNameOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributors) ServiceFullWebRequestIdContributorsServerName {
		return v.ServerName
	}).(ServiceFullWebRequestIdContributorsServerNameOutput)
}

type ServiceFullWebRequestIdContributorsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributors)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsPtrOutput) ToServiceFullWebRequestIdContributorsPtrOutput() ServiceFullWebRequestIdContributorsPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsPtrOutput) ToServiceFullWebRequestIdContributorsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsPtrOutput) Elem() ServiceFullWebRequestIdContributorsOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributors) ServiceFullWebRequestIdContributors {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributors
		return ret
	}).(ServiceFullWebRequestIdContributorsOutput)
}

// Application identifier
func (o ServiceFullWebRequestIdContributorsPtrOutput) ApplicationId() ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributors) *ServiceFullWebRequestIdContributorsApplicationId {
		if v == nil {
			return nil
		}
		return &v.ApplicationId
	}).(ServiceFullWebRequestIdContributorsApplicationIdPtrOutput)
}

// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebRequestIdContributorsPtrOutput) ContextRoot() ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributors) *ServiceFullWebRequestIdContributorsContextRoot {
		if v == nil {
			return nil
		}
		return &v.ContextRoot
	}).(ServiceFullWebRequestIdContributorsContextRootPtrOutput)
}

// Server Name
func (o ServiceFullWebRequestIdContributorsPtrOutput) ServerName() ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributors) *ServiceFullWebRequestIdContributorsServerName {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(ServiceFullWebRequestIdContributorsServerNamePtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationId struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor bool `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor `pulumi:"serviceIdContributor"`
}

// ServiceFullWebRequestIdContributorsApplicationIdInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdArgs and ServiceFullWebRequestIdContributorsApplicationIdOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdInput` via:
//
//	ServiceFullWebRequestIdContributorsApplicationIdArgs{...}
type ServiceFullWebRequestIdContributorsApplicationIdInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdOutput() ServiceFullWebRequestIdContributorsApplicationIdOutput
	ToServiceFullWebRequestIdContributorsApplicationIdOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdOutput
}

type ServiceFullWebRequestIdContributorsApplicationIdArgs struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor pulumi.BoolInput `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrInput `pulumi:"serviceIdContributor"`
}

func (ServiceFullWebRequestIdContributorsApplicationIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationId)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsApplicationIdArgs) ToServiceFullWebRequestIdContributorsApplicationIdOutput() ServiceFullWebRequestIdContributorsApplicationIdOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdArgs) ToServiceFullWebRequestIdContributorsApplicationIdOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdOutput)
}

func (i ServiceFullWebRequestIdContributorsApplicationIdArgs) ToServiceFullWebRequestIdContributorsApplicationIdPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdArgs) ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdOutput).ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsApplicationIdPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdArgs, ServiceFullWebRequestIdContributorsApplicationIdPtr and ServiceFullWebRequestIdContributorsApplicationIdPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsApplicationIdArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsApplicationIdPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdPtrOutput
	ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdPtrOutput
}

type serviceFullWebRequestIdContributorsApplicationIdPtrType ServiceFullWebRequestIdContributorsApplicationIdArgs

func ServiceFullWebRequestIdContributorsApplicationIdPtr(v *ServiceFullWebRequestIdContributorsApplicationIdArgs) ServiceFullWebRequestIdContributorsApplicationIdPtrInput {
	return (*serviceFullWebRequestIdContributorsApplicationIdPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsApplicationIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsApplicationId)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsApplicationIdPtrType) ToServiceFullWebRequestIdContributorsApplicationIdPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsApplicationIdPtrType) ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdPtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationId)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdOutput) ToServiceFullWebRequestIdContributorsApplicationIdOutput() ServiceFullWebRequestIdContributorsApplicationIdOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdOutput) ToServiceFullWebRequestIdContributorsApplicationIdOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdOutput) ToServiceFullWebRequestIdContributorsApplicationIdPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsApplicationIdOutput) ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsApplicationId) *ServiceFullWebRequestIdContributorsApplicationId {
		return &v
	}).(ServiceFullWebRequestIdContributorsApplicationIdPtrOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebRequestIdContributorsApplicationIdOutput) EnableIdContributor() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationId) bool { return v.EnableIdContributor }).(pulumi.BoolOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsApplicationIdOutput) ServiceIdContributor() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationId) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor {
		return v.ServiceIdContributor
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsApplicationId)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdPtrOutput) ToServiceFullWebRequestIdContributorsApplicationIdPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdPtrOutput) ToServiceFullWebRequestIdContributorsApplicationIdPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdPtrOutput) Elem() ServiceFullWebRequestIdContributorsApplicationIdOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationId) ServiceFullWebRequestIdContributorsApplicationId {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsApplicationId
		return ret
	}).(ServiceFullWebRequestIdContributorsApplicationIdOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebRequestIdContributorsApplicationIdPtrOutput) EnableIdContributor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationId) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIdContributor
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsApplicationIdPtrOutput) ServiceIdContributor() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationId) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor {
		if v == nil {
			return nil
		}
		return v.ServiceIdContributor
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType string `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride `pulumi:"valueOverride"`
}

// ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs and ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorInput` via:
//
//	ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs{...}
type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput
	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType pulumi.StringInput `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput `pulumi:"valueOverride"`
}

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput)
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput).ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs, ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtr and ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput
	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput
}

type serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrType ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs

func ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtr(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrInput {
	return (*serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrType) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrType) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor {
		return &v
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput) ContributionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor) string {
		return v.ContributionType
	}).(pulumi.StringOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput) Transformations() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations {
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput) ValueOverride() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride {
		return v.ValueOverride
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput) Elem() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor
		return ret
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput) ContributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor) *string {
		if v == nil {
			return nil
		}
		return &v.ContributionType
	}).(pulumi.StringPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput) Transformations() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput) ValueOverride() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride {
		if v == nil {
			return nil
		}
		return v.ValueOverride
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations struct {
	Transformations []ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation `pulumi:"transformations"`
}

// ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs and ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsInput` via:
//
//	ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs{...}
type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput
	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs struct {
	Transformations ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput `pulumi:"transformations"`
}

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput)
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput).ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs, ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtr and ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput
	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput
}

type serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrType ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs

func ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtr(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput {
	return (*serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrType) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrType) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations {
		return &v
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput)
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput) Transformations() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations) []ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) Elem() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations
		return ret
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput)
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) Transformations() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformations) []ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation struct {
	// include hexadecimal numbers
	IncludeHexNumbers *bool `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount *int `pulumi:"minDigitCount"`
	// no documentation available
	Prefix *string `pulumi:"prefix"`
	// replacement
	ReplacementValue *string `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount *int `pulumi:"segmentCount"`
	// select index
	SelectIndex *int `pulumi:"selectIndex"`
	// split by
	SplitDelimiter *string `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix *string `pulumi:"suffix"`
	// take from end
	TakeFromEnd *bool `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType string `pulumi:"transformationType"`
}

// ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs and ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput` via:
//
//	ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs{...}
type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput
	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs struct {
	// include hexadecimal numbers
	IncludeHexNumbers pulumi.BoolPtrInput `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount pulumi.IntPtrInput `pulumi:"minDigitCount"`
	// no documentation available
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// replacement
	ReplacementValue pulumi.StringPtrInput `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount pulumi.IntPtrInput `pulumi:"segmentCount"`
	// select index
	SelectIndex pulumi.IntPtrInput `pulumi:"selectIndex"`
	// split by
	SplitDelimiter pulumi.StringPtrInput `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// take from end
	TakeFromEnd pulumi.BoolPtrInput `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType pulumi.StringInput `pulumi:"transformationType"`
}

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput)
}

// ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray and ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput` via:
//
//	ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray{ ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs{...} }
type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput
	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray []ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return o
}

// include hexadecimal numbers
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) IncludeHexNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *bool {
		return v.IncludeHexNumbers
	}).(pulumi.BoolPtrOutput)
}

// min digit count
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) MinDigitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *int {
		return v.MinDigitCount
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// replacement
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) ReplacementValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *string {
		return v.ReplacementValue
	}).(pulumi.StringPtrOutput)
}

// How many segments should be taken.
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *int {
		return v.SegmentCount
	}).(pulumi.IntPtrOutput)
}

// select index
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) SelectIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *int {
		return v.SelectIndex
	}).(pulumi.IntPtrOutput)
}

// split by
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) SplitDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *string {
		return v.SplitDelimiter
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *string {
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// take from end
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) TakeFromEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *bool {
		return v.TakeFromEnd
	}).(pulumi.BoolPtrOutput)
}

// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) TransformationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) string {
		return v.TransformationType
	}).(pulumi.StringOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput) Index(i pulumi.IntInput) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
		return vs[0].([]ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)[vs[1].(int)]
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride struct {
	// no documentation available
	Value string `pulumi:"value"`
}

// ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs and ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideInput` via:
//
//	ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs{...}
type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput
	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs struct {
	// no documentation available
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput)
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput).ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput is an input type that accepts ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs, ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtr and ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput
	ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput
}

type serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrType ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs

func ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtr(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput {
	return (*serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrType)(v)
}

func (*serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrType) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrType) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o.ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride) *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride {
		return &v
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) ToServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) Elem() ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride) ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride
		return ret
	}).(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverride) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRoot struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor bool `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor `pulumi:"serviceIdContributor"`
}

// ServiceFullWebRequestIdContributorsContextRootInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootArgs and ServiceFullWebRequestIdContributorsContextRootOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootInput` via:
//
//	ServiceFullWebRequestIdContributorsContextRootArgs{...}
type ServiceFullWebRequestIdContributorsContextRootInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootOutput() ServiceFullWebRequestIdContributorsContextRootOutput
	ToServiceFullWebRequestIdContributorsContextRootOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootOutput
}

type ServiceFullWebRequestIdContributorsContextRootArgs struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor pulumi.BoolInput `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrInput `pulumi:"serviceIdContributor"`
}

func (ServiceFullWebRequestIdContributorsContextRootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRoot)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsContextRootArgs) ToServiceFullWebRequestIdContributorsContextRootOutput() ServiceFullWebRequestIdContributorsContextRootOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootArgs) ToServiceFullWebRequestIdContributorsContextRootOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootOutput)
}

func (i ServiceFullWebRequestIdContributorsContextRootArgs) ToServiceFullWebRequestIdContributorsContextRootPtrOutput() ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootArgs) ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootOutput).ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsContextRootPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootArgs, ServiceFullWebRequestIdContributorsContextRootPtr and ServiceFullWebRequestIdContributorsContextRootPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsContextRootArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsContextRootPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootPtrOutput() ServiceFullWebRequestIdContributorsContextRootPtrOutput
	ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootPtrOutput
}

type serviceFullWebRequestIdContributorsContextRootPtrType ServiceFullWebRequestIdContributorsContextRootArgs

func ServiceFullWebRequestIdContributorsContextRootPtr(v *ServiceFullWebRequestIdContributorsContextRootArgs) ServiceFullWebRequestIdContributorsContextRootPtrInput {
	return (*serviceFullWebRequestIdContributorsContextRootPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsContextRootPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsContextRoot)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsContextRootPtrType) ToServiceFullWebRequestIdContributorsContextRootPtrOutput() ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsContextRootPtrType) ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootPtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRootOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRoot)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootOutput) ToServiceFullWebRequestIdContributorsContextRootOutput() ServiceFullWebRequestIdContributorsContextRootOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootOutput) ToServiceFullWebRequestIdContributorsContextRootOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootOutput) ToServiceFullWebRequestIdContributorsContextRootPtrOutput() ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsContextRootOutput) ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsContextRoot) *ServiceFullWebRequestIdContributorsContextRoot {
		return &v
	}).(ServiceFullWebRequestIdContributorsContextRootPtrOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebRequestIdContributorsContextRootOutput) EnableIdContributor() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRoot) bool { return v.EnableIdContributor }).(pulumi.BoolOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsContextRootOutput) ServiceIdContributor() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRoot) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor {
		return v.ServiceIdContributor
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRootPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsContextRoot)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootPtrOutput) ToServiceFullWebRequestIdContributorsContextRootPtrOutput() ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootPtrOutput) ToServiceFullWebRequestIdContributorsContextRootPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootPtrOutput) Elem() ServiceFullWebRequestIdContributorsContextRootOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRoot) ServiceFullWebRequestIdContributorsContextRoot {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsContextRoot
		return ret
	}).(ServiceFullWebRequestIdContributorsContextRootOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebRequestIdContributorsContextRootPtrOutput) EnableIdContributor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRoot) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIdContributor
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsContextRootPtrOutput) ServiceIdContributor() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRoot) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor {
		if v == nil {
			return nil
		}
		return v.ServiceIdContributor
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributor struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
	ContributionType string `pulumi:"contributionType"`
	// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
	SegmentCount *int `pulumi:"segmentCount"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride `pulumi:"valueOverride"`
}

// ServiceFullWebRequestIdContributorsContextRootServiceIdContributorInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs and ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootServiceIdContributorInput` via:
//
//	ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs{...}
type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput
	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
	ContributionType pulumi.StringInput `pulumi:"contributionType"`
	// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
	SegmentCount pulumi.IntPtrInput `pulumi:"segmentCount"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrInput `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrInput `pulumi:"valueOverride"`
}

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributor)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput)
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput).ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs, ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtr and ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput
	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput
}

type serviceFullWebRequestIdContributorsContextRootServiceIdContributorPtrType ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs

func ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtr(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrInput {
	return (*serviceFullWebRequestIdContributorsContextRootServiceIdContributorPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsContextRootServiceIdContributorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsContextRootServiceIdContributor)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsContextRootServiceIdContributorPtrType) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsContextRootServiceIdContributorPtrType) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor {
		return &v
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) ContributionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) string {
		return v.ContributionType
	}).(pulumi.StringOutput)
}

// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) *int { return v.SegmentCount }).(pulumi.IntPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) Transformations() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations {
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput) ValueOverride() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride {
		return v.ValueOverride
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsContextRootServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput) Elem() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) ServiceFullWebRequestIdContributorsContextRootServiceIdContributor {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsContextRootServiceIdContributor
		return ret
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput) ContributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) *string {
		if v == nil {
			return nil
		}
		return &v.ContributionType
	}).(pulumi.StringPtrOutput)
}

// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) *int {
		if v == nil {
			return nil
		}
		return v.SegmentCount
	}).(pulumi.IntPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput) Transformations() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput) ValueOverride() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributor) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride {
		if v == nil {
			return nil
		}
		return v.ValueOverride
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations struct {
	Transformations []ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation `pulumi:"transformations"`
}

// ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs and ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsInput` via:
//
//	ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs{...}
type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput
	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs struct {
	Transformations ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput `pulumi:"transformations"`
}

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput)
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput).ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs, ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtr and ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput
	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput
}

type serviceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrType ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs

func ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtr(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrInput {
	return (*serviceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrType) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrType) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations {
		return &v
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput)
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput) Transformations() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations) []ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation {
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) Elem() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations
		return ret
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput)
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) Transformations() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformations) []ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation struct {
	// include hexadecimal numbers
	IncludeHexNumbers *bool `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount *int `pulumi:"minDigitCount"`
	// no documentation available
	Prefix *string `pulumi:"prefix"`
	// replacement
	ReplacementValue *string `pulumi:"replacementValue"`
	// no documentation available
	Suffix *string `pulumi:"suffix"`
	// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
	TransformationType string `pulumi:"transformationType"`
}

// ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs and ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationInput` via:
//
//	ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs{...}
type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput
	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs struct {
	// include hexadecimal numbers
	IncludeHexNumbers pulumi.BoolPtrInput `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount pulumi.IntPtrInput `pulumi:"minDigitCount"`
	// no documentation available
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// replacement
	ReplacementValue pulumi.StringPtrInput `pulumi:"replacementValue"`
	// no documentation available
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
	TransformationType pulumi.StringInput `pulumi:"transformationType"`
}

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput)
}

// ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArray and ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput` via:
//
//	ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArray{ ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs{...} }
type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput
	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArray []ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationInput

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArray) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArray) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return o
}

// include hexadecimal numbers
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) IncludeHexNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation) *bool {
		return v.IncludeHexNumbers
	}).(pulumi.BoolPtrOutput)
}

// min digit count
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) MinDigitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation) *int {
		return v.MinDigitCount
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// replacement
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) ReplacementValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation) *string {
		return v.ReplacementValue
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation) *string {
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) TransformationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation) string {
		return v.TransformationType
	}).(pulumi.StringOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput) Index(i pulumi.IntInput) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation {
		return vs[0].([]ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformation)[vs[1].(int)]
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride struct {
	// no documentation available
	Value string `pulumi:"value"`
}

// ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs and ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideInput` via:
//
//	ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs{...}
type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput
	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs struct {
	// no documentation available
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput)
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput).ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrInput is an input type that accepts ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs, ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtr and ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput
	ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput
}

type serviceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrType ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs

func ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtr(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrInput {
	return (*serviceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrType)(v)
}

func (*serviceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrType) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrType) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o.ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride) *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride {
		return &v
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) ToServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) Elem() ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride) ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride
		return ret
	}).(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverride) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceFullWebRequestIdContributorsServerName struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor bool `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor *ServiceFullWebRequestIdContributorsServerNameServiceIdContributor `pulumi:"serviceIdContributor"`
}

// ServiceFullWebRequestIdContributorsServerNameInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameArgs and ServiceFullWebRequestIdContributorsServerNameOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameInput` via:
//
//	ServiceFullWebRequestIdContributorsServerNameArgs{...}
type ServiceFullWebRequestIdContributorsServerNameInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameOutput() ServiceFullWebRequestIdContributorsServerNameOutput
	ToServiceFullWebRequestIdContributorsServerNameOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameOutput
}

type ServiceFullWebRequestIdContributorsServerNameArgs struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor pulumi.BoolInput `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrInput `pulumi:"serviceIdContributor"`
}

func (ServiceFullWebRequestIdContributorsServerNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerName)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsServerNameArgs) ToServiceFullWebRequestIdContributorsServerNameOutput() ServiceFullWebRequestIdContributorsServerNameOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameArgs) ToServiceFullWebRequestIdContributorsServerNameOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameOutput)
}

func (i ServiceFullWebRequestIdContributorsServerNameArgs) ToServiceFullWebRequestIdContributorsServerNamePtrOutput() ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameArgs) ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameOutput).ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsServerNamePtrInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameArgs, ServiceFullWebRequestIdContributorsServerNamePtr and ServiceFullWebRequestIdContributorsServerNamePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNamePtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsServerNameArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsServerNamePtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNamePtrOutput() ServiceFullWebRequestIdContributorsServerNamePtrOutput
	ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNamePtrOutput
}

type serviceFullWebRequestIdContributorsServerNamePtrType ServiceFullWebRequestIdContributorsServerNameArgs

func ServiceFullWebRequestIdContributorsServerNamePtr(v *ServiceFullWebRequestIdContributorsServerNameArgs) ServiceFullWebRequestIdContributorsServerNamePtrInput {
	return (*serviceFullWebRequestIdContributorsServerNamePtrType)(v)
}

func (*serviceFullWebRequestIdContributorsServerNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsServerName)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsServerNamePtrType) ToServiceFullWebRequestIdContributorsServerNamePtrOutput() ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsServerNamePtrType) ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNamePtrOutput)
}

type ServiceFullWebRequestIdContributorsServerNameOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerName)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameOutput) ToServiceFullWebRequestIdContributorsServerNameOutput() ServiceFullWebRequestIdContributorsServerNameOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameOutput) ToServiceFullWebRequestIdContributorsServerNameOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameOutput) ToServiceFullWebRequestIdContributorsServerNamePtrOutput() ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return o.ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsServerNameOutput) ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsServerName) *ServiceFullWebRequestIdContributorsServerName {
		return &v
	}).(ServiceFullWebRequestIdContributorsServerNamePtrOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebRequestIdContributorsServerNameOutput) EnableIdContributor() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerName) bool { return v.EnableIdContributor }).(pulumi.BoolOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsServerNameOutput) ServiceIdContributor() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerName) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributor {
		return v.ServiceIdContributor
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsServerNamePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsServerName)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNamePtrOutput) ToServiceFullWebRequestIdContributorsServerNamePtrOutput() ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNamePtrOutput) ToServiceFullWebRequestIdContributorsServerNamePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNamePtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNamePtrOutput) Elem() ServiceFullWebRequestIdContributorsServerNameOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerName) ServiceFullWebRequestIdContributorsServerName {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsServerName
		return ret
	}).(ServiceFullWebRequestIdContributorsServerNameOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebRequestIdContributorsServerNamePtrOutput) EnableIdContributor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerName) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIdContributor
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsServerNamePtrOutput) ServiceIdContributor() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerName) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributor {
		if v == nil {
			return nil
		}
		return v.ServiceIdContributor
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributor struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType string `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride `pulumi:"valueOverride"`
}

// ServiceFullWebRequestIdContributorsServerNameServiceIdContributorInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs and ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameServiceIdContributorInput` via:
//
//	ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs{...}
type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput
	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType pulumi.StringInput `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrInput `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrInput `pulumi:"valueOverride"`
}

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributor)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput)
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput).ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs, ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtr and ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput
	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput
}

type serviceFullWebRequestIdContributorsServerNameServiceIdContributorPtrType ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs

func ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtr(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrInput {
	return (*serviceFullWebRequestIdContributorsServerNameServiceIdContributorPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsServerNameServiceIdContributorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsServerNameServiceIdContributor)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsServerNameServiceIdContributorPtrType) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsServerNameServiceIdContributorPtrType) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsServerNameServiceIdContributor) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributor {
		return &v
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput) ContributionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributor) string {
		return v.ContributionType
	}).(pulumi.StringOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput) Transformations() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributor) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations {
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput) ValueOverride() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributor) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride {
		return v.ValueOverride
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsServerNameServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput) Elem() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributor) ServiceFullWebRequestIdContributorsServerNameServiceIdContributor {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsServerNameServiceIdContributor
		return ret
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput) ContributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributor) *string {
		if v == nil {
			return nil
		}
		return &v.ContributionType
	}).(pulumi.StringPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput) Transformations() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributor) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput) ValueOverride() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributor) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride {
		if v == nil {
			return nil
		}
		return v.ValueOverride
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations struct {
	Transformations []ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation `pulumi:"transformations"`
}

// ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs and ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsInput` via:
//
//	ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs{...}
type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput
	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs struct {
	Transformations ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput `pulumi:"transformations"`
}

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput)
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput).ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs, ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtr and ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput
	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput
}

type serviceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrType ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs

func ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtr(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrInput {
	return (*serviceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrType)(v)
}

func (*serviceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrType) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrType) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations {
		return &v
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput)
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput) Transformations() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations) []ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation {
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) Elem() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations
		return ret
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput)
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) Transformations() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformations) []ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation struct {
	// include hexadecimal numbers
	IncludeHexNumbers *bool `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount *int `pulumi:"minDigitCount"`
	// no documentation available
	Prefix *string `pulumi:"prefix"`
	// replacement
	ReplacementValue *string `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount *int `pulumi:"segmentCount"`
	// select index
	SelectIndex *int `pulumi:"selectIndex"`
	// split by
	SplitDelimiter *string `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix *string `pulumi:"suffix"`
	// take from end
	TakeFromEnd *bool `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType string `pulumi:"transformationType"`
}

// ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs and ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationInput` via:
//
//	ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs{...}
type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput
	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs struct {
	// include hexadecimal numbers
	IncludeHexNumbers pulumi.BoolPtrInput `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount pulumi.IntPtrInput `pulumi:"minDigitCount"`
	// no documentation available
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// replacement
	ReplacementValue pulumi.StringPtrInput `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount pulumi.IntPtrInput `pulumi:"segmentCount"`
	// select index
	SelectIndex pulumi.IntPtrInput `pulumi:"selectIndex"`
	// split by
	SplitDelimiter pulumi.StringPtrInput `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// take from end
	TakeFromEnd pulumi.BoolPtrInput `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType pulumi.StringInput `pulumi:"transformationType"`
}

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput)
}

// ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArray and ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput` via:
//
//	ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArray{ ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs{...} }
type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput
	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArray []ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationInput

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArray) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArray) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return o
}

// include hexadecimal numbers
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) IncludeHexNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *bool {
		return v.IncludeHexNumbers
	}).(pulumi.BoolPtrOutput)
}

// min digit count
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) MinDigitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *int {
		return v.MinDigitCount
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// replacement
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) ReplacementValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *string {
		return v.ReplacementValue
	}).(pulumi.StringPtrOutput)
}

// How many segments should be taken.
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *int {
		return v.SegmentCount
	}).(pulumi.IntPtrOutput)
}

// select index
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) SelectIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *int {
		return v.SelectIndex
	}).(pulumi.IntPtrOutput)
}

// split by
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) SplitDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *string {
		return v.SplitDelimiter
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *string {
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// take from end
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) TakeFromEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) *bool {
		return v.TakeFromEnd
	}).(pulumi.BoolPtrOutput)
}

// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) TransformationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation) string {
		return v.TransformationType
	}).(pulumi.StringOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput) Index(i pulumi.IntInput) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation {
		return vs[0].([]ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformation)[vs[1].(int)]
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride struct {
	// no documentation available
	Value string `pulumi:"value"`
}

// ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs and ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideInput` via:
//
//	ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs{...}
type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput
	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs struct {
	// no documentation available
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput)
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput).ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx)
}

// ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrInput is an input type that accepts ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs, ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtr and ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrInput` via:
//
//	        ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrInput interface {
	pulumi.Input

	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput
	ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput
}

type serviceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrType ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs

func ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtr(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrInput {
	return (*serviceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrType)(v)
}

func (*serviceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (i *serviceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrType) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrType) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o.ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride) *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride {
		return &v
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) ToServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) Elem() ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride) ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride
		return ret
	}).(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput)
}

// no documentation available
func (o ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverride) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceFullWebServiceConditions struct {
	Conditions []ServiceFullWebServiceConditionsCondition `pulumi:"conditions"`
}

// ServiceFullWebServiceConditionsInput is an input type that accepts ServiceFullWebServiceConditionsArgs and ServiceFullWebServiceConditionsOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceConditionsInput` via:
//
//	ServiceFullWebServiceConditionsArgs{...}
type ServiceFullWebServiceConditionsInput interface {
	pulumi.Input

	ToServiceFullWebServiceConditionsOutput() ServiceFullWebServiceConditionsOutput
	ToServiceFullWebServiceConditionsOutputWithContext(context.Context) ServiceFullWebServiceConditionsOutput
}

type ServiceFullWebServiceConditionsArgs struct {
	Conditions ServiceFullWebServiceConditionsConditionArrayInput `pulumi:"conditions"`
}

func (ServiceFullWebServiceConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceConditions)(nil)).Elem()
}

func (i ServiceFullWebServiceConditionsArgs) ToServiceFullWebServiceConditionsOutput() ServiceFullWebServiceConditionsOutput {
	return i.ToServiceFullWebServiceConditionsOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceConditionsArgs) ToServiceFullWebServiceConditionsOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceConditionsOutput)
}

func (i ServiceFullWebServiceConditionsArgs) ToServiceFullWebServiceConditionsPtrOutput() ServiceFullWebServiceConditionsPtrOutput {
	return i.ToServiceFullWebServiceConditionsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceConditionsArgs) ToServiceFullWebServiceConditionsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceConditionsOutput).ToServiceFullWebServiceConditionsPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceConditionsPtrInput is an input type that accepts ServiceFullWebServiceConditionsArgs, ServiceFullWebServiceConditionsPtr and ServiceFullWebServiceConditionsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceConditionsPtrInput` via:
//
//	        ServiceFullWebServiceConditionsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceConditionsPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceConditionsPtrOutput() ServiceFullWebServiceConditionsPtrOutput
	ToServiceFullWebServiceConditionsPtrOutputWithContext(context.Context) ServiceFullWebServiceConditionsPtrOutput
}

type serviceFullWebServiceConditionsPtrType ServiceFullWebServiceConditionsArgs

func ServiceFullWebServiceConditionsPtr(v *ServiceFullWebServiceConditionsArgs) ServiceFullWebServiceConditionsPtrInput {
	return (*serviceFullWebServiceConditionsPtrType)(v)
}

func (*serviceFullWebServiceConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceConditions)(nil)).Elem()
}

func (i *serviceFullWebServiceConditionsPtrType) ToServiceFullWebServiceConditionsPtrOutput() ServiceFullWebServiceConditionsPtrOutput {
	return i.ToServiceFullWebServiceConditionsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceConditionsPtrType) ToServiceFullWebServiceConditionsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceConditionsPtrOutput)
}

type ServiceFullWebServiceConditionsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceConditions)(nil)).Elem()
}

func (o ServiceFullWebServiceConditionsOutput) ToServiceFullWebServiceConditionsOutput() ServiceFullWebServiceConditionsOutput {
	return o
}

func (o ServiceFullWebServiceConditionsOutput) ToServiceFullWebServiceConditionsOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsOutput {
	return o
}

func (o ServiceFullWebServiceConditionsOutput) ToServiceFullWebServiceConditionsPtrOutput() ServiceFullWebServiceConditionsPtrOutput {
	return o.ToServiceFullWebServiceConditionsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceConditionsOutput) ToServiceFullWebServiceConditionsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceConditions) *ServiceFullWebServiceConditions {
		return &v
	}).(ServiceFullWebServiceConditionsPtrOutput)
}

func (o ServiceFullWebServiceConditionsOutput) Conditions() ServiceFullWebServiceConditionsConditionArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditions) []ServiceFullWebServiceConditionsCondition {
		return v.Conditions
	}).(ServiceFullWebServiceConditionsConditionArrayOutput)
}

type ServiceFullWebServiceConditionsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceConditions)(nil)).Elem()
}

func (o ServiceFullWebServiceConditionsPtrOutput) ToServiceFullWebServiceConditionsPtrOutput() ServiceFullWebServiceConditionsPtrOutput {
	return o
}

func (o ServiceFullWebServiceConditionsPtrOutput) ToServiceFullWebServiceConditionsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsPtrOutput {
	return o
}

func (o ServiceFullWebServiceConditionsPtrOutput) Elem() ServiceFullWebServiceConditionsOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceConditions) ServiceFullWebServiceConditions {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceConditions
		return ret
	}).(ServiceFullWebServiceConditionsOutput)
}

func (o ServiceFullWebServiceConditionsPtrOutput) Conditions() ServiceFullWebServiceConditionsConditionArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceConditions) []ServiceFullWebServiceConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ServiceFullWebServiceConditionsConditionArrayOutput)
}

type ServiceFullWebServiceConditionsCondition struct {
	// Take the value of this attribute
	Attribute string `pulumi:"attribute"`
	// Apply this operation
	CompareOperationType string `pulumi:"compareOperationType"`
	// Technology
	Frameworks []string `pulumi:"frameworks"`
	// Ignore case sensitivity for texts.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Value
	IntValue *int `pulumi:"intValue"`
	// Values
	IntValues []int `pulumi:"intValues"`
	// From
	IpRangeFrom *string `pulumi:"ipRangeFrom"`
	// To
	IpRangeTo *string `pulumi:"ipRangeTo"`
	// If multiple values are specified, at least one of them must match for the condition to match
	TagValues []string `pulumi:"tagValues"`
	// If multiple values are specified, at least one of them must match for the condition to match
	TextValues []string `pulumi:"textValues"`
}

// ServiceFullWebServiceConditionsConditionInput is an input type that accepts ServiceFullWebServiceConditionsConditionArgs and ServiceFullWebServiceConditionsConditionOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceConditionsConditionInput` via:
//
//	ServiceFullWebServiceConditionsConditionArgs{...}
type ServiceFullWebServiceConditionsConditionInput interface {
	pulumi.Input

	ToServiceFullWebServiceConditionsConditionOutput() ServiceFullWebServiceConditionsConditionOutput
	ToServiceFullWebServiceConditionsConditionOutputWithContext(context.Context) ServiceFullWebServiceConditionsConditionOutput
}

type ServiceFullWebServiceConditionsConditionArgs struct {
	// Take the value of this attribute
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// Apply this operation
	CompareOperationType pulumi.StringInput `pulumi:"compareOperationType"`
	// Technology
	Frameworks pulumi.StringArrayInput `pulumi:"frameworks"`
	// Ignore case sensitivity for texts.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Value
	IntValue pulumi.IntPtrInput `pulumi:"intValue"`
	// Values
	IntValues pulumi.IntArrayInput `pulumi:"intValues"`
	// From
	IpRangeFrom pulumi.StringPtrInput `pulumi:"ipRangeFrom"`
	// To
	IpRangeTo pulumi.StringPtrInput `pulumi:"ipRangeTo"`
	// If multiple values are specified, at least one of them must match for the condition to match
	TagValues pulumi.StringArrayInput `pulumi:"tagValues"`
	// If multiple values are specified, at least one of them must match for the condition to match
	TextValues pulumi.StringArrayInput `pulumi:"textValues"`
}

func (ServiceFullWebServiceConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceConditionsCondition)(nil)).Elem()
}

func (i ServiceFullWebServiceConditionsConditionArgs) ToServiceFullWebServiceConditionsConditionOutput() ServiceFullWebServiceConditionsConditionOutput {
	return i.ToServiceFullWebServiceConditionsConditionOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceConditionsConditionArgs) ToServiceFullWebServiceConditionsConditionOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceConditionsConditionOutput)
}

// ServiceFullWebServiceConditionsConditionArrayInput is an input type that accepts ServiceFullWebServiceConditionsConditionArray and ServiceFullWebServiceConditionsConditionArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceConditionsConditionArrayInput` via:
//
//	ServiceFullWebServiceConditionsConditionArray{ ServiceFullWebServiceConditionsConditionArgs{...} }
type ServiceFullWebServiceConditionsConditionArrayInput interface {
	pulumi.Input

	ToServiceFullWebServiceConditionsConditionArrayOutput() ServiceFullWebServiceConditionsConditionArrayOutput
	ToServiceFullWebServiceConditionsConditionArrayOutputWithContext(context.Context) ServiceFullWebServiceConditionsConditionArrayOutput
}

type ServiceFullWebServiceConditionsConditionArray []ServiceFullWebServiceConditionsConditionInput

func (ServiceFullWebServiceConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceConditionsCondition)(nil)).Elem()
}

func (i ServiceFullWebServiceConditionsConditionArray) ToServiceFullWebServiceConditionsConditionArrayOutput() ServiceFullWebServiceConditionsConditionArrayOutput {
	return i.ToServiceFullWebServiceConditionsConditionArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceConditionsConditionArray) ToServiceFullWebServiceConditionsConditionArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceConditionsConditionArrayOutput)
}

type ServiceFullWebServiceConditionsConditionOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceConditionsCondition)(nil)).Elem()
}

func (o ServiceFullWebServiceConditionsConditionOutput) ToServiceFullWebServiceConditionsConditionOutput() ServiceFullWebServiceConditionsConditionOutput {
	return o
}

func (o ServiceFullWebServiceConditionsConditionOutput) ToServiceFullWebServiceConditionsConditionOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsConditionOutput {
	return o
}

// Take the value of this attribute
func (o ServiceFullWebServiceConditionsConditionOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) string { return v.Attribute }).(pulumi.StringOutput)
}

// Apply this operation
func (o ServiceFullWebServiceConditionsConditionOutput) CompareOperationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) string { return v.CompareOperationType }).(pulumi.StringOutput)
}

// Technology
func (o ServiceFullWebServiceConditionsConditionOutput) Frameworks() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) []string { return v.Frameworks }).(pulumi.StringArrayOutput)
}

// Ignore case sensitivity for texts.
func (o ServiceFullWebServiceConditionsConditionOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Value
func (o ServiceFullWebServiceConditionsConditionOutput) IntValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) *int { return v.IntValue }).(pulumi.IntPtrOutput)
}

// Values
func (o ServiceFullWebServiceConditionsConditionOutput) IntValues() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) []int { return v.IntValues }).(pulumi.IntArrayOutput)
}

// From
func (o ServiceFullWebServiceConditionsConditionOutput) IpRangeFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) *string { return v.IpRangeFrom }).(pulumi.StringPtrOutput)
}

// To
func (o ServiceFullWebServiceConditionsConditionOutput) IpRangeTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) *string { return v.IpRangeTo }).(pulumi.StringPtrOutput)
}

// If multiple values are specified, at least one of them must match for the condition to match
func (o ServiceFullWebServiceConditionsConditionOutput) TagValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) []string { return v.TagValues }).(pulumi.StringArrayOutput)
}

// If multiple values are specified, at least one of them must match for the condition to match
func (o ServiceFullWebServiceConditionsConditionOutput) TextValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceConditionsCondition) []string { return v.TextValues }).(pulumi.StringArrayOutput)
}

type ServiceFullWebServiceConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceConditionsCondition)(nil)).Elem()
}

func (o ServiceFullWebServiceConditionsConditionArrayOutput) ToServiceFullWebServiceConditionsConditionArrayOutput() ServiceFullWebServiceConditionsConditionArrayOutput {
	return o
}

func (o ServiceFullWebServiceConditionsConditionArrayOutput) ToServiceFullWebServiceConditionsConditionArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceConditionsConditionArrayOutput {
	return o
}

func (o ServiceFullWebServiceConditionsConditionArrayOutput) Index(i pulumi.IntInput) ServiceFullWebServiceConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebServiceConditionsCondition {
		return vs[0].([]ServiceFullWebServiceConditionsCondition)[vs[1].(int)]
	}).(ServiceFullWebServiceConditionsConditionOutput)
}

type ServiceFullWebServiceIdContributors struct {
	// Application identifier
	ApplicationId *ServiceFullWebServiceIdContributorsApplicationId `pulumi:"applicationId"`
	// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
	ContextRoot *ServiceFullWebServiceIdContributorsContextRoot `pulumi:"contextRoot"`
	// Detect the matching requests as full web services (false) or web request services (true).
	DetectAsWebRequestService bool `pulumi:"detectAsWebRequestService"`
	// Server name
	ServerName *ServiceFullWebServiceIdContributorsServerName `pulumi:"serverName"`
	// Web service name
	WebServiceName *ServiceFullWebServiceIdContributorsWebServiceName `pulumi:"webServiceName"`
	// Web service namespace
	WebServiceNamespace *ServiceFullWebServiceIdContributorsWebServiceNamespace `pulumi:"webServiceNamespace"`
}

// ServiceFullWebServiceIdContributorsInput is an input type that accepts ServiceFullWebServiceIdContributorsArgs and ServiceFullWebServiceIdContributorsOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsInput` via:
//
//	ServiceFullWebServiceIdContributorsArgs{...}
type ServiceFullWebServiceIdContributorsInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsOutput() ServiceFullWebServiceIdContributorsOutput
	ToServiceFullWebServiceIdContributorsOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsOutput
}

type ServiceFullWebServiceIdContributorsArgs struct {
	// Application identifier
	ApplicationId ServiceFullWebServiceIdContributorsApplicationIdPtrInput `pulumi:"applicationId"`
	// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
	ContextRoot ServiceFullWebServiceIdContributorsContextRootPtrInput `pulumi:"contextRoot"`
	// Detect the matching requests as full web services (false) or web request services (true).
	DetectAsWebRequestService pulumi.BoolInput `pulumi:"detectAsWebRequestService"`
	// Server name
	ServerName ServiceFullWebServiceIdContributorsServerNamePtrInput `pulumi:"serverName"`
	// Web service name
	WebServiceName ServiceFullWebServiceIdContributorsWebServiceNamePtrInput `pulumi:"webServiceName"`
	// Web service namespace
	WebServiceNamespace ServiceFullWebServiceIdContributorsWebServiceNamespacePtrInput `pulumi:"webServiceNamespace"`
}

func (ServiceFullWebServiceIdContributorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributors)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsArgs) ToServiceFullWebServiceIdContributorsOutput() ServiceFullWebServiceIdContributorsOutput {
	return i.ToServiceFullWebServiceIdContributorsOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsArgs) ToServiceFullWebServiceIdContributorsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsOutput)
}

func (i ServiceFullWebServiceIdContributorsArgs) ToServiceFullWebServiceIdContributorsPtrOutput() ServiceFullWebServiceIdContributorsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsArgs) ToServiceFullWebServiceIdContributorsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsOutput).ToServiceFullWebServiceIdContributorsPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsArgs, ServiceFullWebServiceIdContributorsPtr and ServiceFullWebServiceIdContributorsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsPtrOutput() ServiceFullWebServiceIdContributorsPtrOutput
	ToServiceFullWebServiceIdContributorsPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsPtrOutput
}

type serviceFullWebServiceIdContributorsPtrType ServiceFullWebServiceIdContributorsArgs

func ServiceFullWebServiceIdContributorsPtr(v *ServiceFullWebServiceIdContributorsArgs) ServiceFullWebServiceIdContributorsPtrInput {
	return (*serviceFullWebServiceIdContributorsPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributors)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsPtrType) ToServiceFullWebServiceIdContributorsPtrOutput() ServiceFullWebServiceIdContributorsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsPtrType) ToServiceFullWebServiceIdContributorsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsPtrOutput)
}

type ServiceFullWebServiceIdContributorsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributors)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsOutput) ToServiceFullWebServiceIdContributorsOutput() ServiceFullWebServiceIdContributorsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsOutput) ToServiceFullWebServiceIdContributorsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsOutput) ToServiceFullWebServiceIdContributorsPtrOutput() ServiceFullWebServiceIdContributorsPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsOutput) ToServiceFullWebServiceIdContributorsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributors {
		return &v
	}).(ServiceFullWebServiceIdContributorsPtrOutput)
}

// Application identifier
func (o ServiceFullWebServiceIdContributorsOutput) ApplicationId() ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsApplicationId {
		return v.ApplicationId
	}).(ServiceFullWebServiceIdContributorsApplicationIdPtrOutput)
}

// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsOutput) ContextRoot() ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsContextRoot {
		return v.ContextRoot
	}).(ServiceFullWebServiceIdContributorsContextRootPtrOutput)
}

// Detect the matching requests as full web services (false) or web request services (true).
func (o ServiceFullWebServiceIdContributorsOutput) DetectAsWebRequestService() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributors) bool { return v.DetectAsWebRequestService }).(pulumi.BoolOutput)
}

// Server name
func (o ServiceFullWebServiceIdContributorsOutput) ServerName() ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsServerName {
		return v.ServerName
	}).(ServiceFullWebServiceIdContributorsServerNamePtrOutput)
}

// Web service name
func (o ServiceFullWebServiceIdContributorsOutput) WebServiceName() ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsWebServiceName {
		return v.WebServiceName
	}).(ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput)
}

// Web service namespace
func (o ServiceFullWebServiceIdContributorsOutput) WebServiceNamespace() ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsWebServiceNamespace {
		return v.WebServiceNamespace
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput)
}

type ServiceFullWebServiceIdContributorsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributors)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsPtrOutput) ToServiceFullWebServiceIdContributorsPtrOutput() ServiceFullWebServiceIdContributorsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsPtrOutput) ToServiceFullWebServiceIdContributorsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsPtrOutput) Elem() ServiceFullWebServiceIdContributorsOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributors) ServiceFullWebServiceIdContributors {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributors
		return ret
	}).(ServiceFullWebServiceIdContributorsOutput)
}

// Application identifier
func (o ServiceFullWebServiceIdContributorsPtrOutput) ApplicationId() ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsApplicationId {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(ServiceFullWebServiceIdContributorsApplicationIdPtrOutput)
}

// The context root is the first segment of the request URL after the Server name. For example, in the `www.dynatrace.com/support/help/dynatrace-api/` URL the context root is `/support`. The context root value can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsPtrOutput) ContextRoot() ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsContextRoot {
		if v == nil {
			return nil
		}
		return v.ContextRoot
	}).(ServiceFullWebServiceIdContributorsContextRootPtrOutput)
}

// Detect the matching requests as full web services (false) or web request services (true).
func (o ServiceFullWebServiceIdContributorsPtrOutput) DetectAsWebRequestService() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributors) *bool {
		if v == nil {
			return nil
		}
		return &v.DetectAsWebRequestService
	}).(pulumi.BoolPtrOutput)
}

// Server name
func (o ServiceFullWebServiceIdContributorsPtrOutput) ServerName() ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsServerName {
		if v == nil {
			return nil
		}
		return v.ServerName
	}).(ServiceFullWebServiceIdContributorsServerNamePtrOutput)
}

// Web service name
func (o ServiceFullWebServiceIdContributorsPtrOutput) WebServiceName() ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsWebServiceName {
		if v == nil {
			return nil
		}
		return v.WebServiceName
	}).(ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput)
}

// Web service namespace
func (o ServiceFullWebServiceIdContributorsPtrOutput) WebServiceNamespace() ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributors) *ServiceFullWebServiceIdContributorsWebServiceNamespace {
		if v == nil {
			return nil
		}
		return v.WebServiceNamespace
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationId struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor bool `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor `pulumi:"serviceIdContributor"`
}

// ServiceFullWebServiceIdContributorsApplicationIdInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdArgs and ServiceFullWebServiceIdContributorsApplicationIdOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdInput` via:
//
//	ServiceFullWebServiceIdContributorsApplicationIdArgs{...}
type ServiceFullWebServiceIdContributorsApplicationIdInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdOutput() ServiceFullWebServiceIdContributorsApplicationIdOutput
	ToServiceFullWebServiceIdContributorsApplicationIdOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdOutput
}

type ServiceFullWebServiceIdContributorsApplicationIdArgs struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor pulumi.BoolInput `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrInput `pulumi:"serviceIdContributor"`
}

func (ServiceFullWebServiceIdContributorsApplicationIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationId)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsApplicationIdArgs) ToServiceFullWebServiceIdContributorsApplicationIdOutput() ServiceFullWebServiceIdContributorsApplicationIdOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdArgs) ToServiceFullWebServiceIdContributorsApplicationIdOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdOutput)
}

func (i ServiceFullWebServiceIdContributorsApplicationIdArgs) ToServiceFullWebServiceIdContributorsApplicationIdPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdArgs) ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdOutput).ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsApplicationIdPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdArgs, ServiceFullWebServiceIdContributorsApplicationIdPtr and ServiceFullWebServiceIdContributorsApplicationIdPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsApplicationIdArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsApplicationIdPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdPtrOutput
	ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdPtrOutput
}

type serviceFullWebServiceIdContributorsApplicationIdPtrType ServiceFullWebServiceIdContributorsApplicationIdArgs

func ServiceFullWebServiceIdContributorsApplicationIdPtr(v *ServiceFullWebServiceIdContributorsApplicationIdArgs) ServiceFullWebServiceIdContributorsApplicationIdPtrInput {
	return (*serviceFullWebServiceIdContributorsApplicationIdPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsApplicationIdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsApplicationId)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsApplicationIdPtrType) ToServiceFullWebServiceIdContributorsApplicationIdPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsApplicationIdPtrType) ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdPtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationId)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdOutput) ToServiceFullWebServiceIdContributorsApplicationIdOutput() ServiceFullWebServiceIdContributorsApplicationIdOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdOutput) ToServiceFullWebServiceIdContributorsApplicationIdOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdOutput) ToServiceFullWebServiceIdContributorsApplicationIdPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsApplicationIdOutput) ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsApplicationId) *ServiceFullWebServiceIdContributorsApplicationId {
		return &v
	}).(ServiceFullWebServiceIdContributorsApplicationIdPtrOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsApplicationIdOutput) EnableIdContributor() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationId) bool { return v.EnableIdContributor }).(pulumi.BoolOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsApplicationIdOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationId) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor {
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsApplicationId)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdPtrOutput) ToServiceFullWebServiceIdContributorsApplicationIdPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdPtrOutput) ToServiceFullWebServiceIdContributorsApplicationIdPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdPtrOutput) Elem() ServiceFullWebServiceIdContributorsApplicationIdOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationId) ServiceFullWebServiceIdContributorsApplicationId {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsApplicationId
		return ret
	}).(ServiceFullWebServiceIdContributorsApplicationIdOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsApplicationIdPtrOutput) EnableIdContributor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationId) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIdContributor
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsApplicationIdPtrOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationId) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor {
		if v == nil {
			return nil
		}
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType string `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride `pulumi:"valueOverride"`
}

// ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs and ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorInput` via:
//
//	ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs{...}
type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput
	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType pulumi.StringInput `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput `pulumi:"valueOverride"`
}

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput)
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput).ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs, ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtr and ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput
	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput
}

type serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrType ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs

func ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtr(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrInput {
	return (*serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor {
		return &v
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput) ContributionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor) string {
		return v.ContributionType
	}).(pulumi.StringOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput) Transformations() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput) ValueOverride() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride {
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput) Elem() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor
		return ret
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput) ContributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor) *string {
		if v == nil {
			return nil
		}
		return &v.ContributionType
	}).(pulumi.StringPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput) Transformations() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput) ValueOverride() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributor) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride {
		if v == nil {
			return nil
		}
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations struct {
	Transformations []ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation `pulumi:"transformations"`
}

// ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs and ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsInput` via:
//
//	ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs{...}
type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput
	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs struct {
	Transformations ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput `pulumi:"transformations"`
}

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput)
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput).ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs, ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtr and ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput
	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput
}

type serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrType ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs

func ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtr(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput {
	return (*serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations {
		return &v
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput)
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput) Transformations() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) Elem() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations
		return ret
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput)
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput) Transformations() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation struct {
	// include hexadecimal numbers
	IncludeHexNumbers *bool `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount *int `pulumi:"minDigitCount"`
	// no documentation available
	Prefix *string `pulumi:"prefix"`
	// replacement
	ReplacementValue *string `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount *int `pulumi:"segmentCount"`
	// select index
	SelectIndex *int `pulumi:"selectIndex"`
	// split by
	SplitDelimiter *string `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix *string `pulumi:"suffix"`
	// take from end
	TakeFromEnd *bool `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType string `pulumi:"transformationType"`
}

// ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs and ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput` via:
//
//	ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs{...}
type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput
	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs struct {
	// include hexadecimal numbers
	IncludeHexNumbers pulumi.BoolPtrInput `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount pulumi.IntPtrInput `pulumi:"minDigitCount"`
	// no documentation available
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// replacement
	ReplacementValue pulumi.StringPtrInput `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount pulumi.IntPtrInput `pulumi:"segmentCount"`
	// select index
	SelectIndex pulumi.IntPtrInput `pulumi:"selectIndex"`
	// split by
	SplitDelimiter pulumi.StringPtrInput `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// take from end
	TakeFromEnd pulumi.BoolPtrInput `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType pulumi.StringInput `pulumi:"transformationType"`
}

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput)
}

// ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray and ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput` via:
//
//	ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray{ ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs{...} }
type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput
	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray []ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return o
}

// include hexadecimal numbers
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) IncludeHexNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *bool {
		return v.IncludeHexNumbers
	}).(pulumi.BoolPtrOutput)
}

// min digit count
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) MinDigitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *int {
		return v.MinDigitCount
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// replacement
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) ReplacementValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *string {
		return v.ReplacementValue
	}).(pulumi.StringPtrOutput)
}

// How many segments should be taken.
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *int {
		return v.SegmentCount
	}).(pulumi.IntPtrOutput)
}

// select index
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) SelectIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *int {
		return v.SelectIndex
	}).(pulumi.IntPtrOutput)
}

// split by
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) SplitDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *string {
		return v.SplitDelimiter
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *string {
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// take from end
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) TakeFromEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) *bool {
		return v.TakeFromEnd
	}).(pulumi.BoolPtrOutput)
}

// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput) TransformationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation) string {
		return v.TransformationType
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput) Index(i pulumi.IntInput) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation {
		return vs[0].([]ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformation)[vs[1].(int)]
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride struct {
	// no documentation available
	Value string `pulumi:"value"`
}

// ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs and ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideInput` via:
//
//	ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs{...}
type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput
	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs struct {
	// no documentation available
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput)
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput).ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput is an input type that accepts ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs, ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtr and ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput
	ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput
}

type serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrType ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs

func ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtr(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput {
	return (*serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrType)(v)
}

func (*serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o.ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride) *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride {
		return &v
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) Elem() ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride) ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride
		return ret
	}).(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverride) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRoot struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor bool `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor `pulumi:"serviceIdContributor"`
}

// ServiceFullWebServiceIdContributorsContextRootInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootArgs and ServiceFullWebServiceIdContributorsContextRootOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootInput` via:
//
//	ServiceFullWebServiceIdContributorsContextRootArgs{...}
type ServiceFullWebServiceIdContributorsContextRootInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootOutput() ServiceFullWebServiceIdContributorsContextRootOutput
	ToServiceFullWebServiceIdContributorsContextRootOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootOutput
}

type ServiceFullWebServiceIdContributorsContextRootArgs struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor pulumi.BoolInput `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrInput `pulumi:"serviceIdContributor"`
}

func (ServiceFullWebServiceIdContributorsContextRootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRoot)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsContextRootArgs) ToServiceFullWebServiceIdContributorsContextRootOutput() ServiceFullWebServiceIdContributorsContextRootOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootArgs) ToServiceFullWebServiceIdContributorsContextRootOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootOutput)
}

func (i ServiceFullWebServiceIdContributorsContextRootArgs) ToServiceFullWebServiceIdContributorsContextRootPtrOutput() ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootArgs) ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootOutput).ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsContextRootPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootArgs, ServiceFullWebServiceIdContributorsContextRootPtr and ServiceFullWebServiceIdContributorsContextRootPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsContextRootArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsContextRootPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootPtrOutput() ServiceFullWebServiceIdContributorsContextRootPtrOutput
	ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootPtrOutput
}

type serviceFullWebServiceIdContributorsContextRootPtrType ServiceFullWebServiceIdContributorsContextRootArgs

func ServiceFullWebServiceIdContributorsContextRootPtr(v *ServiceFullWebServiceIdContributorsContextRootArgs) ServiceFullWebServiceIdContributorsContextRootPtrInput {
	return (*serviceFullWebServiceIdContributorsContextRootPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsContextRootPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsContextRoot)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsContextRootPtrType) ToServiceFullWebServiceIdContributorsContextRootPtrOutput() ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsContextRootPtrType) ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootPtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRootOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRoot)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootOutput) ToServiceFullWebServiceIdContributorsContextRootOutput() ServiceFullWebServiceIdContributorsContextRootOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootOutput) ToServiceFullWebServiceIdContributorsContextRootOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootOutput) ToServiceFullWebServiceIdContributorsContextRootPtrOutput() ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsContextRootOutput) ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsContextRoot) *ServiceFullWebServiceIdContributorsContextRoot {
		return &v
	}).(ServiceFullWebServiceIdContributorsContextRootPtrOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsContextRootOutput) EnableIdContributor() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRoot) bool { return v.EnableIdContributor }).(pulumi.BoolOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsContextRootOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRoot) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor {
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRootPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsContextRoot)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootPtrOutput) ToServiceFullWebServiceIdContributorsContextRootPtrOutput() ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootPtrOutput) ToServiceFullWebServiceIdContributorsContextRootPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootPtrOutput) Elem() ServiceFullWebServiceIdContributorsContextRootOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRoot) ServiceFullWebServiceIdContributorsContextRoot {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsContextRoot
		return ret
	}).(ServiceFullWebServiceIdContributorsContextRootOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsContextRootPtrOutput) EnableIdContributor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRoot) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIdContributor
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsContextRootPtrOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRoot) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor {
		if v == nil {
			return nil
		}
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributor struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
	ContributionType string `pulumi:"contributionType"`
	// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
	SegmentCount *int `pulumi:"segmentCount"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride `pulumi:"valueOverride"`
}

// ServiceFullWebServiceIdContributorsContextRootServiceIdContributorInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs and ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootServiceIdContributorInput` via:
//
//	ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs{...}
type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput
	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
	ContributionType pulumi.StringInput `pulumi:"contributionType"`
	// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
	SegmentCount pulumi.IntPtrInput `pulumi:"segmentCount"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrInput `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrInput `pulumi:"valueOverride"`
}

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributor)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput)
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput).ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs, ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtr and ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput
	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput
}

type serviceFullWebServiceIdContributorsContextRootServiceIdContributorPtrType ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs

func ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtr(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrInput {
	return (*serviceFullWebServiceIdContributorsContextRootServiceIdContributorPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsContextRootServiceIdContributorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsContextRootServiceIdContributor)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsContextRootServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsContextRootServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor {
		return &v
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) ContributionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) string {
		return v.ContributionType
	}).(pulumi.StringOutput)
}

// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) *int { return v.SegmentCount }).(pulumi.IntPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) Transformations() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput) ValueOverride() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride {
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsContextRootServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput) Elem() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) ServiceFullWebServiceIdContributorsContextRootServiceIdContributor {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsContextRootServiceIdContributor
		return ret
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformURL`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput) ContributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) *string {
		if v == nil {
			return nil
		}
		return &v.ContributionType
	}).(pulumi.StringPtrOutput)
}

// The number of segments of the URL to be kept. The URL is divided by slashes (/), the indexing starts with 1 at context root. For example, if you specify 2 for the `www.dynatrace.com/support/help/dynatrace-api/` URL, the value of `support/help` is used.
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) *int {
		if v == nil {
			return nil
		}
		return v.SegmentCount
	}).(pulumi.IntPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput) Transformations() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput) ValueOverride() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributor) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride {
		if v == nil {
			return nil
		}
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations struct {
	Transformations []ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation `pulumi:"transformations"`
}

// ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs and ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsInput` via:
//
//	ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs{...}
type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput
	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs struct {
	Transformations ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput `pulumi:"transformations"`
}

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput)
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput).ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs, ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtr and ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput
	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput
}

type serviceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrType ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs

func ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtr(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrInput {
	return (*serviceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations {
		return &v
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput)
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput) Transformations() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) Elem() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations
		return ret
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput)
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput) Transformations() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation struct {
	// include hexadecimal numbers
	IncludeHexNumbers *bool `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount *int `pulumi:"minDigitCount"`
	// no documentation available
	Prefix *string `pulumi:"prefix"`
	// replacement
	ReplacementValue *string `pulumi:"replacementValue"`
	// no documentation available
	Suffix *string `pulumi:"suffix"`
	// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
	TransformationType string `pulumi:"transformationType"`
}

// ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs and ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationInput` via:
//
//	ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs{...}
type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput
	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs struct {
	// include hexadecimal numbers
	IncludeHexNumbers pulumi.BoolPtrInput `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount pulumi.IntPtrInput `pulumi:"minDigitCount"`
	// no documentation available
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// replacement
	ReplacementValue pulumi.StringPtrInput `pulumi:"replacementValue"`
	// no documentation available
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
	TransformationType pulumi.StringInput `pulumi:"transformationType"`
}

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput)
}

// ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArray and ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput` via:
//
//	ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArray{ ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs{...} }
type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput
	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArray []ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationInput

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return o
}

// include hexadecimal numbers
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) IncludeHexNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation) *bool {
		return v.IncludeHexNumbers
	}).(pulumi.BoolPtrOutput)
}

// min digit count
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) MinDigitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation) *int {
		return v.MinDigitCount
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// replacement
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) ReplacementValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation) *string {
		return v.ReplacementValue
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation) *string {
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `BEFORE`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput) TransformationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation) string {
		return v.TransformationType
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput) Index(i pulumi.IntInput) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation {
		return vs[0].([]ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformation)[vs[1].(int)]
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride struct {
	// no documentation available
	Value string `pulumi:"value"`
}

// ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs and ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideInput` via:
//
//	ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs{...}
type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput
	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs struct {
	// no documentation available
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput)
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput).ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrInput is an input type that accepts ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs, ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtr and ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput
	ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput
}

type serviceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrType ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs

func ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtr(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrInput {
	return (*serviceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrType)(v)
}

func (*serviceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o.ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride) *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride {
		return &v
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) Elem() ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride) ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride
		return ret
	}).(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverride) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceFullWebServiceIdContributorsServerName struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor bool `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor *ServiceFullWebServiceIdContributorsServerNameServiceIdContributor `pulumi:"serviceIdContributor"`
}

// ServiceFullWebServiceIdContributorsServerNameInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameArgs and ServiceFullWebServiceIdContributorsServerNameOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameInput` via:
//
//	ServiceFullWebServiceIdContributorsServerNameArgs{...}
type ServiceFullWebServiceIdContributorsServerNameInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameOutput() ServiceFullWebServiceIdContributorsServerNameOutput
	ToServiceFullWebServiceIdContributorsServerNameOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameOutput
}

type ServiceFullWebServiceIdContributorsServerNameArgs struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor pulumi.BoolInput `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrInput `pulumi:"serviceIdContributor"`
}

func (ServiceFullWebServiceIdContributorsServerNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerName)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsServerNameArgs) ToServiceFullWebServiceIdContributorsServerNameOutput() ServiceFullWebServiceIdContributorsServerNameOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameArgs) ToServiceFullWebServiceIdContributorsServerNameOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameOutput)
}

func (i ServiceFullWebServiceIdContributorsServerNameArgs) ToServiceFullWebServiceIdContributorsServerNamePtrOutput() ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameArgs) ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameOutput).ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsServerNamePtrInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameArgs, ServiceFullWebServiceIdContributorsServerNamePtr and ServiceFullWebServiceIdContributorsServerNamePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNamePtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsServerNameArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsServerNamePtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNamePtrOutput() ServiceFullWebServiceIdContributorsServerNamePtrOutput
	ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNamePtrOutput
}

type serviceFullWebServiceIdContributorsServerNamePtrType ServiceFullWebServiceIdContributorsServerNameArgs

func ServiceFullWebServiceIdContributorsServerNamePtr(v *ServiceFullWebServiceIdContributorsServerNameArgs) ServiceFullWebServiceIdContributorsServerNamePtrInput {
	return (*serviceFullWebServiceIdContributorsServerNamePtrType)(v)
}

func (*serviceFullWebServiceIdContributorsServerNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsServerName)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsServerNamePtrType) ToServiceFullWebServiceIdContributorsServerNamePtrOutput() ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsServerNamePtrType) ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNamePtrOutput)
}

type ServiceFullWebServiceIdContributorsServerNameOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerName)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameOutput) ToServiceFullWebServiceIdContributorsServerNameOutput() ServiceFullWebServiceIdContributorsServerNameOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameOutput) ToServiceFullWebServiceIdContributorsServerNameOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameOutput) ToServiceFullWebServiceIdContributorsServerNamePtrOutput() ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return o.ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsServerNameOutput) ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsServerName) *ServiceFullWebServiceIdContributorsServerName {
		return &v
	}).(ServiceFullWebServiceIdContributorsServerNamePtrOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsServerNameOutput) EnableIdContributor() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerName) bool { return v.EnableIdContributor }).(pulumi.BoolOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsServerNameOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerName) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributor {
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsServerNamePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsServerName)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNamePtrOutput) ToServiceFullWebServiceIdContributorsServerNamePtrOutput() ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNamePtrOutput) ToServiceFullWebServiceIdContributorsServerNamePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNamePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNamePtrOutput) Elem() ServiceFullWebServiceIdContributorsServerNameOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerName) ServiceFullWebServiceIdContributorsServerName {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsServerName
		return ret
	}).(ServiceFullWebServiceIdContributorsServerNameOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsServerNamePtrOutput) EnableIdContributor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerName) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIdContributor
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsServerNamePtrOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerName) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributor {
		if v == nil {
			return nil
		}
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributor struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType string `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride `pulumi:"valueOverride"`
}

// ServiceFullWebServiceIdContributorsServerNameServiceIdContributorInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs and ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameServiceIdContributorInput` via:
//
//	ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs{...}
type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput
	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType pulumi.StringInput `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrInput `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrInput `pulumi:"valueOverride"`
}

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributor)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput)
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput).ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs, ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtr and ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput
	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput
}

type serviceFullWebServiceIdContributorsServerNameServiceIdContributorPtrType ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs

func ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtr(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrInput {
	return (*serviceFullWebServiceIdContributorsServerNameServiceIdContributorPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsServerNameServiceIdContributorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsServerNameServiceIdContributor)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsServerNameServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsServerNameServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsServerNameServiceIdContributor) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributor {
		return &v
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput) ContributionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributor) string {
		return v.ContributionType
	}).(pulumi.StringOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput) Transformations() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributor) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput) ValueOverride() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributor) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride {
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsServerNameServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput) Elem() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributor) ServiceFullWebServiceIdContributorsServerNameServiceIdContributor {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsServerNameServiceIdContributor
		return ret
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput) ContributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributor) *string {
		if v == nil {
			return nil
		}
		return &v.ContributionType
	}).(pulumi.StringPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput) Transformations() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributor) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput) ValueOverride() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributor) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride {
		if v == nil {
			return nil
		}
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations struct {
	Transformations []ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation `pulumi:"transformations"`
}

// ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs and ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsInput` via:
//
//	ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs{...}
type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput
	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs struct {
	Transformations ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput `pulumi:"transformations"`
}

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput)
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput).ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs, ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtr and ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput
	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput
}

type serviceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrType ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs

func ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtr(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrInput {
	return (*serviceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations {
		return &v
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput)
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput) Transformations() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) Elem() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations
		return ret
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput)
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput) Transformations() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation struct {
	// include hexadecimal numbers
	IncludeHexNumbers *bool `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount *int `pulumi:"minDigitCount"`
	// no documentation available
	Prefix *string `pulumi:"prefix"`
	// replacement
	ReplacementValue *string `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount *int `pulumi:"segmentCount"`
	// select index
	SelectIndex *int `pulumi:"selectIndex"`
	// split by
	SplitDelimiter *string `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix *string `pulumi:"suffix"`
	// take from end
	TakeFromEnd *bool `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType string `pulumi:"transformationType"`
}

// ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs and ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationInput` via:
//
//	ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs{...}
type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput
	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs struct {
	// include hexadecimal numbers
	IncludeHexNumbers pulumi.BoolPtrInput `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount pulumi.IntPtrInput `pulumi:"minDigitCount"`
	// no documentation available
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// replacement
	ReplacementValue pulumi.StringPtrInput `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount pulumi.IntPtrInput `pulumi:"segmentCount"`
	// select index
	SelectIndex pulumi.IntPtrInput `pulumi:"selectIndex"`
	// split by
	SplitDelimiter pulumi.StringPtrInput `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// take from end
	TakeFromEnd pulumi.BoolPtrInput `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType pulumi.StringInput `pulumi:"transformationType"`
}

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput)
}

// ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArray and ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput` via:
//
//	ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArray{ ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs{...} }
type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput
	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArray []ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationInput

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return o
}

// include hexadecimal numbers
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) IncludeHexNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *bool {
		return v.IncludeHexNumbers
	}).(pulumi.BoolPtrOutput)
}

// min digit count
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) MinDigitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *int {
		return v.MinDigitCount
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// replacement
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) ReplacementValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *string {
		return v.ReplacementValue
	}).(pulumi.StringPtrOutput)
}

// How many segments should be taken.
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *int {
		return v.SegmentCount
	}).(pulumi.IntPtrOutput)
}

// select index
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) SelectIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *int {
		return v.SelectIndex
	}).(pulumi.IntPtrOutput)
}

// split by
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) SplitDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *string {
		return v.SplitDelimiter
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *string {
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// take from end
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) TakeFromEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) *bool {
		return v.TakeFromEnd
	}).(pulumi.BoolPtrOutput)
}

// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput) TransformationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation) string {
		return v.TransformationType
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput) Index(i pulumi.IntInput) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation {
		return vs[0].([]ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformation)[vs[1].(int)]
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride struct {
	// no documentation available
	Value string `pulumi:"value"`
}

// ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs and ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideInput` via:
//
//	ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs{...}
type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput
	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs struct {
	// no documentation available
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput)
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput).ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrInput is an input type that accepts ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs, ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtr and ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput
	ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput
}

type serviceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrType ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs

func ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtr(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrInput {
	return (*serviceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrType)(v)
}

func (*serviceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o.ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride) *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride {
		return &v
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) Elem() ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride) ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride
		return ret
	}).(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverride) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceName struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor bool `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor `pulumi:"serviceIdContributor"`
}

// ServiceFullWebServiceIdContributorsWebServiceNameInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameArgs and ServiceFullWebServiceIdContributorsWebServiceNameOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNameArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNameInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameOutput() ServiceFullWebServiceIdContributorsWebServiceNameOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNameArgs struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor pulumi.BoolInput `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrInput `pulumi:"serviceIdContributor"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceName)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameArgs) ToServiceFullWebServiceIdContributorsWebServiceNameOutput() ServiceFullWebServiceIdContributorsWebServiceNameOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameArgs) ToServiceFullWebServiceIdContributorsWebServiceNameOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameOutput)
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameArgs) ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameArgs) ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameOutput).ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsWebServiceNamePtrInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameArgs, ServiceFullWebServiceIdContributorsWebServiceNamePtr and ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamePtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsWebServiceNameArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsWebServiceNamePtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput
}

type serviceFullWebServiceIdContributorsWebServiceNamePtrType ServiceFullWebServiceIdContributorsWebServiceNameArgs

func ServiceFullWebServiceIdContributorsWebServiceNamePtr(v *ServiceFullWebServiceIdContributorsWebServiceNameArgs) ServiceFullWebServiceIdContributorsWebServiceNamePtrInput {
	return (*serviceFullWebServiceIdContributorsWebServiceNamePtrType)(v)
}

func (*serviceFullWebServiceIdContributorsWebServiceNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceName)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamePtrType) ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamePtrType) ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceName)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameOutput) ToServiceFullWebServiceIdContributorsWebServiceNameOutput() ServiceFullWebServiceIdContributorsWebServiceNameOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameOutput) ToServiceFullWebServiceIdContributorsWebServiceNameOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameOutput) ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return o.ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameOutput) ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsWebServiceName) *ServiceFullWebServiceIdContributorsWebServiceName {
		return &v
	}).(ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsWebServiceNameOutput) EnableIdContributor() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceName) bool { return v.EnableIdContributor }).(pulumi.BoolOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNameOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceName) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor {
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceName)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput) Elem() ServiceFullWebServiceIdContributorsWebServiceNameOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceName) ServiceFullWebServiceIdContributorsWebServiceName {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsWebServiceName
		return ret
	}).(ServiceFullWebServiceIdContributorsWebServiceNameOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput) EnableIdContributor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceName) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIdContributor
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceName) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor {
		if v == nil {
			return nil
		}
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType string `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride `pulumi:"valueOverride"`
}

// ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs and ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType pulumi.StringInput `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrInput `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrInput `pulumi:"valueOverride"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput)
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput).ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs, ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtr and ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput
}

type serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrType ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs

func ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtr(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrInput {
	return (*serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor {
		return &v
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput) ContributionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor) string {
		return v.ContributionType
	}).(pulumi.StringOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput) Transformations() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput) ValueOverride() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride {
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput) Elem() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor
		return ret
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput) ContributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor) *string {
		if v == nil {
			return nil
		}
		return &v.ContributionType
	}).(pulumi.StringPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput) Transformations() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput) ValueOverride() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride {
		if v == nil {
			return nil
		}
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations struct {
	Transformations []ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation `pulumi:"transformations"`
}

// ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs and ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs struct {
	Transformations ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayInput `pulumi:"transformations"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput)
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput).ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs, ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtr and ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput
}

type serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrType ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs

func ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtr(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrInput {
	return (*serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations {
		return &v
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput)
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput) Transformations() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput) Elem() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations
		return ret
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput)
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput) Transformations() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation struct {
	// include hexadecimal numbers
	IncludeHexNumbers *bool `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount *int `pulumi:"minDigitCount"`
	// no documentation available
	Prefix *string `pulumi:"prefix"`
	// replacement
	ReplacementValue *string `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount *int `pulumi:"segmentCount"`
	// select index
	SelectIndex *int `pulumi:"selectIndex"`
	// split by
	SplitDelimiter *string `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix *string `pulumi:"suffix"`
	// take from end
	TakeFromEnd *bool `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType string `pulumi:"transformationType"`
}

// ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArgs and ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArgs struct {
	// include hexadecimal numbers
	IncludeHexNumbers pulumi.BoolPtrInput `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount pulumi.IntPtrInput `pulumi:"minDigitCount"`
	// no documentation available
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// replacement
	ReplacementValue pulumi.StringPtrInput `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount pulumi.IntPtrInput `pulumi:"segmentCount"`
	// select index
	SelectIndex pulumi.IntPtrInput `pulumi:"selectIndex"`
	// split by
	SplitDelimiter pulumi.StringPtrInput `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// take from end
	TakeFromEnd pulumi.BoolPtrInput `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType pulumi.StringInput `pulumi:"transformationType"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput)
}

// ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArray and ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArray{ ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArgs{...} }
type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArray []ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationInput

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput {
	return o
}

// include hexadecimal numbers
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) IncludeHexNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *bool {
		return v.IncludeHexNumbers
	}).(pulumi.BoolPtrOutput)
}

// min digit count
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) MinDigitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *int {
		return v.MinDigitCount
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// replacement
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) ReplacementValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *string {
		return v.ReplacementValue
	}).(pulumi.StringPtrOutput)
}

// How many segments should be taken.
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *int {
		return v.SegmentCount
	}).(pulumi.IntPtrOutput)
}

// select index
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) SelectIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *int {
		return v.SelectIndex
	}).(pulumi.IntPtrOutput)
}

// split by
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) SplitDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *string {
		return v.SplitDelimiter
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *string {
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// take from end
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) TakeFromEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) *bool {
		return v.TakeFromEnd
	}).(pulumi.BoolPtrOutput)
}

// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput) TransformationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation) string {
		return v.TransformationType
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput) Index(i pulumi.IntInput) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation {
		return vs[0].([]ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformation)[vs[1].(int)]
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride struct {
	// no documentation available
	Value string `pulumi:"value"`
}

// ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs and ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs struct {
	// no documentation available
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput)
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput).ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs, ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtr and ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput
	ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput
}

type serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrType ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs

func ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtr(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrInput {
	return (*serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrType)(v)
}

func (*serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return o.ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride) *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride {
		return &v
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput) Elem() ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride) ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride
		return ret
	}).(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverride) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespace struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor bool `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor `pulumi:"serviceIdContributor"`
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs and ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNamespaceInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs struct {
	// Transform this value before letting it contribute to the Service Id
	EnableIdContributor pulumi.BoolInput `pulumi:"enableIdContributor"`
	// no documentation available
	ServiceIdContributor ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrInput `pulumi:"serviceIdContributor"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespace)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput)
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput).ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsWebServiceNamespacePtrInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs, ServiceFullWebServiceIdContributorsWebServiceNamespacePtr and ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespacePtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsWebServiceNamespacePtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput
}

type serviceFullWebServiceIdContributorsWebServiceNamespacePtrType ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs

func ServiceFullWebServiceIdContributorsWebServiceNamespacePtr(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs) ServiceFullWebServiceIdContributorsWebServiceNamespacePtrInput {
	return (*serviceFullWebServiceIdContributorsWebServiceNamespacePtrType)(v)
}

func (*serviceFullWebServiceIdContributorsWebServiceNamespacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNamespace)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamespacePtrType) ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamespacePtrType) ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespace)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return o.ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsWebServiceNamespace) *ServiceFullWebServiceIdContributorsWebServiceNamespace {
		return &v
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput) EnableIdContributor() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespace) bool { return v.EnableIdContributor }).(pulumi.BoolOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespace) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor {
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNamespace)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput) Elem() ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespace) ServiceFullWebServiceIdContributorsWebServiceNamespace {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsWebServiceNamespace
		return ret
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput)
}

// Transform this value before letting it contribute to the Service Id
func (o ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput) EnableIdContributor() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespace) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableIdContributor
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput) ServiceIdContributor() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespace) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor {
		if v == nil {
			return nil
		}
		return v.ServiceIdContributor
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType string `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride `pulumi:"valueOverride"`
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs and ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs struct {
	// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
	ContributionType pulumi.StringInput `pulumi:"contributionType"`
	// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
	Transformations ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrInput `pulumi:"transformations"`
	// The value to be used instead of the detected value.
	ValueOverride ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrInput `pulumi:"valueOverride"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput)
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput).ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs, ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtr and ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput
}

type serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrType ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs

func ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtr(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrInput {
	return (*serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrType) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor {
		return &v
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput) ContributionType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor) string {
		return v.ContributionType
	}).(pulumi.StringOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput) Transformations() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput) ValueOverride() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride {
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput) Elem() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor
		return ret
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput)
}

// Possible Values: `OriginalValue`, `OverrideValue`, `TransformValue`
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput) ContributionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor) *string {
		if v == nil {
			return nil
		}
		return &v.ContributionType
	}).(pulumi.StringPtrOutput)
}

// Choose how to transform a value before it contributes to the Service Id. Note that all of the Transformations are always applied. Transformations are applied in the order they are specified, and the output of the previous transformation is the input for the next one. The resulting value contributes to the Service Id and can be found on the **Service overview page** under **Properties and tags**.
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput) Transformations() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput)
}

// The value to be used instead of the detected value.
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput) ValueOverride() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributor) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride {
		if v == nil {
			return nil
		}
		return v.ValueOverride
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations struct {
	Transformations []ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation `pulumi:"transformations"`
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs and ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs struct {
	Transformations ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayInput `pulumi:"transformations"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput)
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput).ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs, ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtr and ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput
}

type serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrType ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs

func ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtr(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrInput {
	return (*serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrType)(v)
}

func (*serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrType) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return o.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations {
		return &v
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput)
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput) Transformations() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation {
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput) Elem() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations
		return ret
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput)
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput) Transformations() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformations) []ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation {
		if v == nil {
			return nil
		}
		return v.Transformations
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation struct {
	// include hexadecimal numbers
	IncludeHexNumbers *bool `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount *int `pulumi:"minDigitCount"`
	// no documentation available
	Prefix *string `pulumi:"prefix"`
	// replacement
	ReplacementValue *string `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount *int `pulumi:"segmentCount"`
	// select index
	SelectIndex *int `pulumi:"selectIndex"`
	// split by
	SplitDelimiter *string `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix *string `pulumi:"suffix"`
	// take from end
	TakeFromEnd *bool `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType string `pulumi:"transformationType"`
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArgs and ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArgs struct {
	// include hexadecimal numbers
	IncludeHexNumbers pulumi.BoolPtrInput `pulumi:"includeHexNumbers"`
	// min digit count
	MinDigitCount pulumi.IntPtrInput `pulumi:"minDigitCount"`
	// no documentation available
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// replacement
	ReplacementValue pulumi.StringPtrInput `pulumi:"replacementValue"`
	// How many segments should be taken.
	SegmentCount pulumi.IntPtrInput `pulumi:"segmentCount"`
	// select index
	SelectIndex pulumi.IntPtrInput `pulumi:"selectIndex"`
	// split by
	SplitDelimiter pulumi.StringPtrInput `pulumi:"splitDelimiter"`
	// no documentation available
	Suffix pulumi.StringPtrInput `pulumi:"suffix"`
	// take from end
	TakeFromEnd pulumi.BoolPtrInput `pulumi:"takeFromEnd"`
	// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
	TransformationType pulumi.StringInput `pulumi:"transformationType"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput)
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArray and ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArray{ ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArgs{...} }
type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArray []ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationInput

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArray) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput {
	return o
}

// include hexadecimal numbers
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) IncludeHexNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *bool {
		return v.IncludeHexNumbers
	}).(pulumi.BoolPtrOutput)
}

// min digit count
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) MinDigitCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *int {
		return v.MinDigitCount
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *string {
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// replacement
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) ReplacementValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *string {
		return v.ReplacementValue
	}).(pulumi.StringPtrOutput)
}

// How many segments should be taken.
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) SegmentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *int {
		return v.SegmentCount
	}).(pulumi.IntPtrOutput)
}

// select index
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) SelectIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *int {
		return v.SelectIndex
	}).(pulumi.IntPtrOutput)
}

// split by
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) SplitDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *string {
		return v.SplitDelimiter
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) Suffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *string {
		return v.Suffix
	}).(pulumi.StringPtrOutput)
}

// take from end
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) TakeFromEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) *bool {
		return v.TakeFromEnd
	}).(pulumi.BoolPtrOutput)
}

// Possible Values: `AFTER`, `BEFORE`, `BETWEEN`, `REMOVE_CREDIT_CARDS`, `REMOVE_IBANS`, `REMOVE_IPS`, `REMOVE_NUMBERS`, `REPLACE_BETWEEN`, `SPLIT_SELECT`, `TAKE_SEGMENTS`
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput) TransformationType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation) string {
		return v.TransformationType
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput) Index(i pulumi.IntInput) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation {
		return vs[0].([]ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformation)[vs[1].(int)]
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride struct {
	// no documentation available
	Value string `pulumi:"value"`
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs and ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideInput` via:
//
//	ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs{...}
type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs struct {
	// no documentation available
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride)(nil)).Elem()
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput)
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput).ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(ctx)
}

// ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrInput is an input type that accepts ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs, ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtr and ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput values.
// You can construct a concrete instance of `ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrInput` via:
//
//	        ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs{...}
//
//	or:
//
//	        nil
type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrInput interface {
	pulumi.Input

	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput
	ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput
}

type serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrType ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs

func ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtr(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrInput {
	return (*serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrType)(v)
}

func (*serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride)(nil)).Elem()
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return i.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (i *serviceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrType) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return o.ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(context.Background())
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride) *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride {
		return &v
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput struct{ *pulumi.OutputState }

func (ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride)(nil)).Elem()
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput) ToServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutputWithContext(ctx context.Context) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput {
	return o
}

func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput) Elem() ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride) ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride {
		if v != nil {
			return *v
		}
		var ret ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride
		return ret
	}).(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput)
}

// no documentation available
func (o ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverride) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceHttpFailureBrokenLinks struct {
	// If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.
	BrokenLinkDomains []string `pulumi:"brokenLinkDomains"`
	// Consider 404 HTTP response codes as failures
	Http404NotFoundFailures bool `pulumi:"http404NotFoundFailures"`
}

// ServiceHttpFailureBrokenLinksInput is an input type that accepts ServiceHttpFailureBrokenLinksArgs and ServiceHttpFailureBrokenLinksOutput values.
// You can construct a concrete instance of `ServiceHttpFailureBrokenLinksInput` via:
//
//	ServiceHttpFailureBrokenLinksArgs{...}
type ServiceHttpFailureBrokenLinksInput interface {
	pulumi.Input

	ToServiceHttpFailureBrokenLinksOutput() ServiceHttpFailureBrokenLinksOutput
	ToServiceHttpFailureBrokenLinksOutputWithContext(context.Context) ServiceHttpFailureBrokenLinksOutput
}

type ServiceHttpFailureBrokenLinksArgs struct {
	// If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.
	BrokenLinkDomains pulumi.StringArrayInput `pulumi:"brokenLinkDomains"`
	// Consider 404 HTTP response codes as failures
	Http404NotFoundFailures pulumi.BoolInput `pulumi:"http404NotFoundFailures"`
}

func (ServiceHttpFailureBrokenLinksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHttpFailureBrokenLinks)(nil)).Elem()
}

func (i ServiceHttpFailureBrokenLinksArgs) ToServiceHttpFailureBrokenLinksOutput() ServiceHttpFailureBrokenLinksOutput {
	return i.ToServiceHttpFailureBrokenLinksOutputWithContext(context.Background())
}

func (i ServiceHttpFailureBrokenLinksArgs) ToServiceHttpFailureBrokenLinksOutputWithContext(ctx context.Context) ServiceHttpFailureBrokenLinksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHttpFailureBrokenLinksOutput)
}

func (i ServiceHttpFailureBrokenLinksArgs) ToServiceHttpFailureBrokenLinksPtrOutput() ServiceHttpFailureBrokenLinksPtrOutput {
	return i.ToServiceHttpFailureBrokenLinksPtrOutputWithContext(context.Background())
}

func (i ServiceHttpFailureBrokenLinksArgs) ToServiceHttpFailureBrokenLinksPtrOutputWithContext(ctx context.Context) ServiceHttpFailureBrokenLinksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHttpFailureBrokenLinksOutput).ToServiceHttpFailureBrokenLinksPtrOutputWithContext(ctx)
}

// ServiceHttpFailureBrokenLinksPtrInput is an input type that accepts ServiceHttpFailureBrokenLinksArgs, ServiceHttpFailureBrokenLinksPtr and ServiceHttpFailureBrokenLinksPtrOutput values.
// You can construct a concrete instance of `ServiceHttpFailureBrokenLinksPtrInput` via:
//
//	        ServiceHttpFailureBrokenLinksArgs{...}
//
//	or:
//
//	        nil
type ServiceHttpFailureBrokenLinksPtrInput interface {
	pulumi.Input

	ToServiceHttpFailureBrokenLinksPtrOutput() ServiceHttpFailureBrokenLinksPtrOutput
	ToServiceHttpFailureBrokenLinksPtrOutputWithContext(context.Context) ServiceHttpFailureBrokenLinksPtrOutput
}

type serviceHttpFailureBrokenLinksPtrType ServiceHttpFailureBrokenLinksArgs

func ServiceHttpFailureBrokenLinksPtr(v *ServiceHttpFailureBrokenLinksArgs) ServiceHttpFailureBrokenLinksPtrInput {
	return (*serviceHttpFailureBrokenLinksPtrType)(v)
}

func (*serviceHttpFailureBrokenLinksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHttpFailureBrokenLinks)(nil)).Elem()
}

func (i *serviceHttpFailureBrokenLinksPtrType) ToServiceHttpFailureBrokenLinksPtrOutput() ServiceHttpFailureBrokenLinksPtrOutput {
	return i.ToServiceHttpFailureBrokenLinksPtrOutputWithContext(context.Background())
}

func (i *serviceHttpFailureBrokenLinksPtrType) ToServiceHttpFailureBrokenLinksPtrOutputWithContext(ctx context.Context) ServiceHttpFailureBrokenLinksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHttpFailureBrokenLinksPtrOutput)
}

type ServiceHttpFailureBrokenLinksOutput struct{ *pulumi.OutputState }

func (ServiceHttpFailureBrokenLinksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHttpFailureBrokenLinks)(nil)).Elem()
}

func (o ServiceHttpFailureBrokenLinksOutput) ToServiceHttpFailureBrokenLinksOutput() ServiceHttpFailureBrokenLinksOutput {
	return o
}

func (o ServiceHttpFailureBrokenLinksOutput) ToServiceHttpFailureBrokenLinksOutputWithContext(ctx context.Context) ServiceHttpFailureBrokenLinksOutput {
	return o
}

func (o ServiceHttpFailureBrokenLinksOutput) ToServiceHttpFailureBrokenLinksPtrOutput() ServiceHttpFailureBrokenLinksPtrOutput {
	return o.ToServiceHttpFailureBrokenLinksPtrOutputWithContext(context.Background())
}

func (o ServiceHttpFailureBrokenLinksOutput) ToServiceHttpFailureBrokenLinksPtrOutputWithContext(ctx context.Context) ServiceHttpFailureBrokenLinksPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceHttpFailureBrokenLinks) *ServiceHttpFailureBrokenLinks {
		return &v
	}).(ServiceHttpFailureBrokenLinksPtrOutput)
}

// If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.
func (o ServiceHttpFailureBrokenLinksOutput) BrokenLinkDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceHttpFailureBrokenLinks) []string { return v.BrokenLinkDomains }).(pulumi.StringArrayOutput)
}

// Consider 404 HTTP response codes as failures
func (o ServiceHttpFailureBrokenLinksOutput) Http404NotFoundFailures() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceHttpFailureBrokenLinks) bool { return v.Http404NotFoundFailures }).(pulumi.BoolOutput)
}

type ServiceHttpFailureBrokenLinksPtrOutput struct{ *pulumi.OutputState }

func (ServiceHttpFailureBrokenLinksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHttpFailureBrokenLinks)(nil)).Elem()
}

func (o ServiceHttpFailureBrokenLinksPtrOutput) ToServiceHttpFailureBrokenLinksPtrOutput() ServiceHttpFailureBrokenLinksPtrOutput {
	return o
}

func (o ServiceHttpFailureBrokenLinksPtrOutput) ToServiceHttpFailureBrokenLinksPtrOutputWithContext(ctx context.Context) ServiceHttpFailureBrokenLinksPtrOutput {
	return o
}

func (o ServiceHttpFailureBrokenLinksPtrOutput) Elem() ServiceHttpFailureBrokenLinksOutput {
	return o.ApplyT(func(v *ServiceHttpFailureBrokenLinks) ServiceHttpFailureBrokenLinks {
		if v != nil {
			return *v
		}
		var ret ServiceHttpFailureBrokenLinks
		return ret
	}).(ServiceHttpFailureBrokenLinksOutput)
}

// If your application relies on other hosts at other domains, add the associated domain names here. Once configured, Dynatrace will consider 404s thrown by hosts at these domains to be service failures related to your application.
func (o ServiceHttpFailureBrokenLinksPtrOutput) BrokenLinkDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceHttpFailureBrokenLinks) []string {
		if v == nil {
			return nil
		}
		return v.BrokenLinkDomains
	}).(pulumi.StringArrayOutput)
}

// Consider 404 HTTP response codes as failures
func (o ServiceHttpFailureBrokenLinksPtrOutput) Http404NotFoundFailures() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceHttpFailureBrokenLinks) *bool {
		if v == nil {
			return nil
		}
		return &v.Http404NotFoundFailures
	}).(pulumi.BoolPtrOutput)
}

type ServiceHttpFailureHttpResponseCodes struct {
	// HTTP response codes which indicate client side errors
	ClientSideErrors string `pulumi:"clientSideErrors"`
	// Treat missing HTTP response code as client side error
	FailOnMissingResponseCodeClientSide bool `pulumi:"failOnMissingResponseCodeClientSide"`
	// Treat missing HTTP response code as server side errors
	FailOnMissingResponseCodeServerSide bool `pulumi:"failOnMissingResponseCodeServerSide"`
	// HTTP response codes which indicate an error on the server side
	ServerSideErrors string `pulumi:"serverSideErrors"`
}

// ServiceHttpFailureHttpResponseCodesInput is an input type that accepts ServiceHttpFailureHttpResponseCodesArgs and ServiceHttpFailureHttpResponseCodesOutput values.
// You can construct a concrete instance of `ServiceHttpFailureHttpResponseCodesInput` via:
//
//	ServiceHttpFailureHttpResponseCodesArgs{...}
type ServiceHttpFailureHttpResponseCodesInput interface {
	pulumi.Input

	ToServiceHttpFailureHttpResponseCodesOutput() ServiceHttpFailureHttpResponseCodesOutput
	ToServiceHttpFailureHttpResponseCodesOutputWithContext(context.Context) ServiceHttpFailureHttpResponseCodesOutput
}

type ServiceHttpFailureHttpResponseCodesArgs struct {
	// HTTP response codes which indicate client side errors
	ClientSideErrors pulumi.StringInput `pulumi:"clientSideErrors"`
	// Treat missing HTTP response code as client side error
	FailOnMissingResponseCodeClientSide pulumi.BoolInput `pulumi:"failOnMissingResponseCodeClientSide"`
	// Treat missing HTTP response code as server side errors
	FailOnMissingResponseCodeServerSide pulumi.BoolInput `pulumi:"failOnMissingResponseCodeServerSide"`
	// HTTP response codes which indicate an error on the server side
	ServerSideErrors pulumi.StringInput `pulumi:"serverSideErrors"`
}

func (ServiceHttpFailureHttpResponseCodesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHttpFailureHttpResponseCodes)(nil)).Elem()
}

func (i ServiceHttpFailureHttpResponseCodesArgs) ToServiceHttpFailureHttpResponseCodesOutput() ServiceHttpFailureHttpResponseCodesOutput {
	return i.ToServiceHttpFailureHttpResponseCodesOutputWithContext(context.Background())
}

func (i ServiceHttpFailureHttpResponseCodesArgs) ToServiceHttpFailureHttpResponseCodesOutputWithContext(ctx context.Context) ServiceHttpFailureHttpResponseCodesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHttpFailureHttpResponseCodesOutput)
}

func (i ServiceHttpFailureHttpResponseCodesArgs) ToServiceHttpFailureHttpResponseCodesPtrOutput() ServiceHttpFailureHttpResponseCodesPtrOutput {
	return i.ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(context.Background())
}

func (i ServiceHttpFailureHttpResponseCodesArgs) ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(ctx context.Context) ServiceHttpFailureHttpResponseCodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHttpFailureHttpResponseCodesOutput).ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(ctx)
}

// ServiceHttpFailureHttpResponseCodesPtrInput is an input type that accepts ServiceHttpFailureHttpResponseCodesArgs, ServiceHttpFailureHttpResponseCodesPtr and ServiceHttpFailureHttpResponseCodesPtrOutput values.
// You can construct a concrete instance of `ServiceHttpFailureHttpResponseCodesPtrInput` via:
//
//	        ServiceHttpFailureHttpResponseCodesArgs{...}
//
//	or:
//
//	        nil
type ServiceHttpFailureHttpResponseCodesPtrInput interface {
	pulumi.Input

	ToServiceHttpFailureHttpResponseCodesPtrOutput() ServiceHttpFailureHttpResponseCodesPtrOutput
	ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(context.Context) ServiceHttpFailureHttpResponseCodesPtrOutput
}

type serviceHttpFailureHttpResponseCodesPtrType ServiceHttpFailureHttpResponseCodesArgs

func ServiceHttpFailureHttpResponseCodesPtr(v *ServiceHttpFailureHttpResponseCodesArgs) ServiceHttpFailureHttpResponseCodesPtrInput {
	return (*serviceHttpFailureHttpResponseCodesPtrType)(v)
}

func (*serviceHttpFailureHttpResponseCodesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHttpFailureHttpResponseCodes)(nil)).Elem()
}

func (i *serviceHttpFailureHttpResponseCodesPtrType) ToServiceHttpFailureHttpResponseCodesPtrOutput() ServiceHttpFailureHttpResponseCodesPtrOutput {
	return i.ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(context.Background())
}

func (i *serviceHttpFailureHttpResponseCodesPtrType) ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(ctx context.Context) ServiceHttpFailureHttpResponseCodesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHttpFailureHttpResponseCodesPtrOutput)
}

type ServiceHttpFailureHttpResponseCodesOutput struct{ *pulumi.OutputState }

func (ServiceHttpFailureHttpResponseCodesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHttpFailureHttpResponseCodes)(nil)).Elem()
}

func (o ServiceHttpFailureHttpResponseCodesOutput) ToServiceHttpFailureHttpResponseCodesOutput() ServiceHttpFailureHttpResponseCodesOutput {
	return o
}

func (o ServiceHttpFailureHttpResponseCodesOutput) ToServiceHttpFailureHttpResponseCodesOutputWithContext(ctx context.Context) ServiceHttpFailureHttpResponseCodesOutput {
	return o
}

func (o ServiceHttpFailureHttpResponseCodesOutput) ToServiceHttpFailureHttpResponseCodesPtrOutput() ServiceHttpFailureHttpResponseCodesPtrOutput {
	return o.ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(context.Background())
}

func (o ServiceHttpFailureHttpResponseCodesOutput) ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(ctx context.Context) ServiceHttpFailureHttpResponseCodesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceHttpFailureHttpResponseCodes) *ServiceHttpFailureHttpResponseCodes {
		return &v
	}).(ServiceHttpFailureHttpResponseCodesPtrOutput)
}

// HTTP response codes which indicate client side errors
func (o ServiceHttpFailureHttpResponseCodesOutput) ClientSideErrors() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHttpFailureHttpResponseCodes) string { return v.ClientSideErrors }).(pulumi.StringOutput)
}

// Treat missing HTTP response code as client side error
func (o ServiceHttpFailureHttpResponseCodesOutput) FailOnMissingResponseCodeClientSide() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceHttpFailureHttpResponseCodes) bool { return v.FailOnMissingResponseCodeClientSide }).(pulumi.BoolOutput)
}

// Treat missing HTTP response code as server side errors
func (o ServiceHttpFailureHttpResponseCodesOutput) FailOnMissingResponseCodeServerSide() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceHttpFailureHttpResponseCodes) bool { return v.FailOnMissingResponseCodeServerSide }).(pulumi.BoolOutput)
}

// HTTP response codes which indicate an error on the server side
func (o ServiceHttpFailureHttpResponseCodesOutput) ServerSideErrors() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceHttpFailureHttpResponseCodes) string { return v.ServerSideErrors }).(pulumi.StringOutput)
}

type ServiceHttpFailureHttpResponseCodesPtrOutput struct{ *pulumi.OutputState }

func (ServiceHttpFailureHttpResponseCodesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHttpFailureHttpResponseCodes)(nil)).Elem()
}

func (o ServiceHttpFailureHttpResponseCodesPtrOutput) ToServiceHttpFailureHttpResponseCodesPtrOutput() ServiceHttpFailureHttpResponseCodesPtrOutput {
	return o
}

func (o ServiceHttpFailureHttpResponseCodesPtrOutput) ToServiceHttpFailureHttpResponseCodesPtrOutputWithContext(ctx context.Context) ServiceHttpFailureHttpResponseCodesPtrOutput {
	return o
}

func (o ServiceHttpFailureHttpResponseCodesPtrOutput) Elem() ServiceHttpFailureHttpResponseCodesOutput {
	return o.ApplyT(func(v *ServiceHttpFailureHttpResponseCodes) ServiceHttpFailureHttpResponseCodes {
		if v != nil {
			return *v
		}
		var ret ServiceHttpFailureHttpResponseCodes
		return ret
	}).(ServiceHttpFailureHttpResponseCodesOutput)
}

// HTTP response codes which indicate client side errors
func (o ServiceHttpFailureHttpResponseCodesPtrOutput) ClientSideErrors() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHttpFailureHttpResponseCodes) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSideErrors
	}).(pulumi.StringPtrOutput)
}

// Treat missing HTTP response code as client side error
func (o ServiceHttpFailureHttpResponseCodesPtrOutput) FailOnMissingResponseCodeClientSide() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceHttpFailureHttpResponseCodes) *bool {
		if v == nil {
			return nil
		}
		return &v.FailOnMissingResponseCodeClientSide
	}).(pulumi.BoolPtrOutput)
}

// Treat missing HTTP response code as server side errors
func (o ServiceHttpFailureHttpResponseCodesPtrOutput) FailOnMissingResponseCodeServerSide() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceHttpFailureHttpResponseCodes) *bool {
		if v == nil {
			return nil
		}
		return &v.FailOnMissingResponseCodeServerSide
	}).(pulumi.BoolPtrOutput)
}

// HTTP response codes which indicate an error on the server side
func (o ServiceHttpFailureHttpResponseCodesPtrOutput) ServerSideErrors() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHttpFailureHttpResponseCodes) *string {
		if v == nil {
			return nil
		}
		return &v.ServerSideErrors
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingCondition struct {
	// A conditions for the metric usage
	Conditions []ServiceNamingConditionCondition `pulumi:"conditions"`
}

// ServiceNamingConditionInput is an input type that accepts ServiceNamingConditionArgs and ServiceNamingConditionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionInput` via:
//
//	ServiceNamingConditionArgs{...}
type ServiceNamingConditionInput interface {
	pulumi.Input

	ToServiceNamingConditionOutput() ServiceNamingConditionOutput
	ToServiceNamingConditionOutputWithContext(context.Context) ServiceNamingConditionOutput
}

type ServiceNamingConditionArgs struct {
	// A conditions for the metric usage
	Conditions ServiceNamingConditionConditionArrayInput `pulumi:"conditions"`
}

func (ServiceNamingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingCondition)(nil)).Elem()
}

func (i ServiceNamingConditionArgs) ToServiceNamingConditionOutput() ServiceNamingConditionOutput {
	return i.ToServiceNamingConditionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionArgs) ToServiceNamingConditionOutputWithContext(ctx context.Context) ServiceNamingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionOutput)
}

// ServiceNamingConditionArrayInput is an input type that accepts ServiceNamingConditionArray and ServiceNamingConditionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionArrayInput` via:
//
//	ServiceNamingConditionArray{ ServiceNamingConditionArgs{...} }
type ServiceNamingConditionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionArrayOutput() ServiceNamingConditionArrayOutput
	ToServiceNamingConditionArrayOutputWithContext(context.Context) ServiceNamingConditionArrayOutput
}

type ServiceNamingConditionArray []ServiceNamingConditionInput

func (ServiceNamingConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingCondition)(nil)).Elem()
}

func (i ServiceNamingConditionArray) ToServiceNamingConditionArrayOutput() ServiceNamingConditionArrayOutput {
	return i.ToServiceNamingConditionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionArray) ToServiceNamingConditionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionArrayOutput)
}

type ServiceNamingConditionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingCondition)(nil)).Elem()
}

func (o ServiceNamingConditionOutput) ToServiceNamingConditionOutput() ServiceNamingConditionOutput {
	return o
}

func (o ServiceNamingConditionOutput) ToServiceNamingConditionOutputWithContext(ctx context.Context) ServiceNamingConditionOutput {
	return o
}

// A conditions for the metric usage
func (o ServiceNamingConditionOutput) Conditions() ServiceNamingConditionConditionArrayOutput {
	return o.ApplyT(func(v ServiceNamingCondition) []ServiceNamingConditionCondition { return v.Conditions }).(ServiceNamingConditionConditionArrayOutput)
}

type ServiceNamingConditionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingCondition)(nil)).Elem()
}

func (o ServiceNamingConditionArrayOutput) ToServiceNamingConditionArrayOutput() ServiceNamingConditionArrayOutput {
	return o
}

func (o ServiceNamingConditionArrayOutput) ToServiceNamingConditionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionArrayOutput {
	return o
}

func (o ServiceNamingConditionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingCondition {
		return vs[0].([]ServiceNamingCondition)[vs[1].(int)]
	}).(ServiceNamingConditionOutput)
}

type ServiceNamingConditionCondition struct {
	// Comparison for `APPLICATION_TYPE` attributes
	//
	// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
	ApplicationTypeComparisons []ServiceNamingConditionConditionApplicationTypeComparison `pulumi:"applicationTypeComparisons"`
	// Comparison for `APPLICATION_TYPE` attributes
	ApplicationTypes []ServiceNamingConditionConditionApplicationType `pulumi:"applicationTypes"`
	// Comparison for `AZURE_COMPUTE_MODE` attributes
	AzureComputeModeComparisons []ServiceNamingConditionConditionAzureComputeModeComparison `pulumi:"azureComputeModeComparisons"`
	// Comparison for `AZURE_COMPUTE_MODE` attributes
	//
	// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
	AzureComputeModes []ServiceNamingConditionConditionAzureComputeMode `pulumi:"azureComputeModes"`
	// Comparison for `AZURE_SKU` attributes
	//
	// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
	AzureSkuComparisions []ServiceNamingConditionConditionAzureSkuComparision `pulumi:"azureSkuComparisions"`
	// Comparison for `AZURE_SKU` attributes
	AzureSkus []ServiceNamingConditionConditionAzureSkus `pulumi:"azureSkus"`
	// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
	//
	// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
	BaseComparisonBasics []ServiceNamingConditionConditionBaseComparisonBasic `pulumi:"baseComparisonBasics"`
	// Fallback for not yet known type
	//
	// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
	BaseConditionKeys []ServiceNamingConditionConditionBaseConditionKey `pulumi:"baseConditionKeys"`
	// Comparison for `BITNESS` attributes
	//
	// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
	BitnessComparisions []ServiceNamingConditionConditionBitnessComparision `pulumi:"bitnessComparisions"`
	// Comparison for `BITNESS` attributes
	Bitnesses []ServiceNamingConditionConditionBitness `pulumi:"bitnesses"`
	// Comparison for `CLOUD_TYPE` attributes
	//
	// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
	CloudTypeComparisons []ServiceNamingConditionConditionCloudTypeComparison `pulumi:"cloudTypeComparisons"`
	// Comparison for `CLOUD_TYPE` attributes
	CloudTypes []ServiceNamingConditionConditionCloudType `pulumi:"cloudTypes"`
	// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
	Comparisons []ServiceNamingConditionConditionComparison `pulumi:"comparisons"`
	// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
	//
	// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
	CustomApplicationTypeComparisons []ServiceNamingConditionConditionCustomApplicationTypeComparison `pulumi:"customApplicationTypeComparisons"`
	// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
	CustomApplicationTypes []ServiceNamingConditionConditionCustomApplicationType `pulumi:"customApplicationTypes"`
	// Key for Custom Host Metadata
	//
	// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
	CustomHostMetadataConditionKeys []ServiceNamingConditionConditionCustomHostMetadataConditionKey `pulumi:"customHostMetadataConditionKeys"`
	// Key for Custom Host Metadata
	CustomHostMetadatas []ServiceNamingConditionConditionCustomHostMetadata `pulumi:"customHostMetadatas"`
	// Key for Custom Process Metadata
	//
	// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
	CustomProcessMetadataConditionKeys []ServiceNamingConditionConditionCustomProcessMetadataConditionKey `pulumi:"customProcessMetadataConditionKeys"`
	// Key for Custom Process Metadata
	CustomProcessMetadatas []ServiceNamingConditionConditionCustomProcessMetadata `pulumi:"customProcessMetadatas"`
	// Comparison for `DATABASE_TOPOLOGY` attributes
	DatabaseTopologies []ServiceNamingConditionConditionDatabaseTopology `pulumi:"databaseTopologies"`
	// Comparison for `DATABASE_TOPOLOGY` attributes
	//
	// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
	DatabaseTopologyComparisons []ServiceNamingConditionConditionDatabaseTopologyComparison `pulumi:"databaseTopologyComparisons"`
	// Comparison for `DCRUM_DECODER_TYPE` attributes
	//
	// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
	DcrumDecoderComparisons []ServiceNamingConditionConditionDcrumDecoderComparison `pulumi:"dcrumDecoderComparisons"`
	// Comparison for `DCRUM_DECODER_TYPE` attributes
	DcrumDecoders []ServiceNamingConditionConditionDcrumDecoder `pulumi:"dcrumDecoders"`
	// Comparison for `ENTITY_ID` attributes
	Entities []ServiceNamingConditionConditionEntity `pulumi:"entities"`
	// Comparison for `ENTITY_ID` attributes
	//
	// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
	EntityIdComparisons []ServiceNamingConditionConditionEntityIdComparison `pulumi:"entityIdComparisons"`
	// Comparison for `SIMPLE_HOST_TECH` attributes
	HostTeches []ServiceNamingConditionConditionHostTech `pulumi:"hostTeches"`
	// `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
	//
	// Deprecated: `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
	HypervisorTypeComparisions []ServiceNamingConditionConditionHypervisorTypeComparision `pulumi:"hypervisorTypeComparisions"`
	// Comparison for `HYPERVISOR_TYPE` attributes
	Hypervisors []ServiceNamingConditionConditionHypervisor `pulumi:"hypervisors"`
	// Comparison for `INDEXED_NAME` attributes
	//
	// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
	IndexedNameComparisons []ServiceNamingConditionConditionIndexedNameComparison `pulumi:"indexedNameComparisons"`
	// Comparison for `INDEXED_NAME` attributes
	IndexedNames []ServiceNamingConditionConditionIndexedName `pulumi:"indexedNames"`
	// Comparison for `INDEXED_STRING` attributes
	//
	// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
	IndexedStringComparisons []ServiceNamingConditionConditionIndexedStringComparison `pulumi:"indexedStringComparisons"`
	// Comparison for `INDEXED_STRING` attributes
	IndexedStrings []ServiceNamingConditionConditionIndexedString `pulumi:"indexedStrings"`
	// Comparison for `INDEXED_TAG` attributes
	//
	// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
	IndexedTagComparisons []ServiceNamingConditionConditionIndexedTagComparison `pulumi:"indexedTagComparisons"`
	// Comparison for `INDEXED_TAG` attributes
	IndexedTags []ServiceNamingConditionConditionIndexedTag `pulumi:"indexedTags"`
	// Comparison for `INTEGER` attributes
	//
	// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
	IntegerComparisons []ServiceNamingConditionConditionIntegerComparison `pulumi:"integerComparisons"`
	// Comparison for `INTEGER` attributes
	Integers []ServiceNamingConditionConditionInteger `pulumi:"integers"`
	// Comparison for `IP_ADDRESS` attributes
	//
	// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
	IpaddressComparisons []ServiceNamingConditionConditionIpaddressComparison `pulumi:"ipaddressComparisons"`
	// Comparison for `IP_ADDRESS` attributes
	Ipaddresses []ServiceNamingConditionConditionIpaddress `pulumi:"ipaddresses"`
	// Fallback for not yet known type
	Keys []ServiceNamingConditionConditionKey `pulumi:"keys"`
	// Comparison for `MOBILE_PLATFORM` attributes
	//
	// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
	MobilePlatformComparisons []ServiceNamingConditionConditionMobilePlatformComparison `pulumi:"mobilePlatformComparisons"`
	// Comparison for `MOBILE_PLATFORM` attributes
	MobilePlatforms []ServiceNamingConditionConditionMobilePlatform `pulumi:"mobilePlatforms"`
	// Comparison for `OS_ARCHITECTURE` attributes
	OsArches []ServiceNamingConditionConditionOsArch `pulumi:"osArches"`
	// Comparison for `OS_TYPE` attributes
	OsTypes []ServiceNamingConditionConditionOsType `pulumi:"osTypes"`
	// Comparison for `OS_ARCHITECTURE` attributes
	//
	// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
	OsarchitectureComparisons []ServiceNamingConditionConditionOsarchitectureComparison `pulumi:"osarchitectureComparisons"`
	// Comparison for `OS_TYPE` attributes
	//
	// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
	OstypeComparisons []ServiceNamingConditionConditionOstypeComparison `pulumi:"ostypeComparisons"`
	// Comparison for `PAAS_TYPE` attributes
	//
	// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
	PaasTypeComparisons []ServiceNamingConditionConditionPaasTypeComparison `pulumi:"paasTypeComparisons"`
	// Comparison for `PAAS_TYPE` attributes
	PaasTypes []ServiceNamingConditionConditionPaasType `pulumi:"paasTypes"`
	// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
	//
	// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
	ProcessMetadataConditionKeys []ServiceNamingConditionConditionProcessMetadataConditionKey `pulumi:"processMetadataConditionKeys"`
	// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
	ProcessMetadatas []ServiceNamingConditionConditionProcessMetadata `pulumi:"processMetadatas"`
	// Comparison for `SERVICE_TOPOLOGY` attributes
	ServiceTopologies []ServiceNamingConditionConditionServiceTopology `pulumi:"serviceTopologies"`
	// Comparison for `SERVICE_TOPOLOGY` attributes
	//
	// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
	ServiceTopologyComparisons []ServiceNamingConditionConditionServiceTopologyComparison `pulumi:"serviceTopologyComparisons"`
	// Comparison for `SERVICE_TYPE` attributes
	//
	// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
	ServiceTypeComparisons []ServiceNamingConditionConditionServiceTypeComparison `pulumi:"serviceTypeComparisons"`
	// Comparison for `SERVICE_TYPE` attributes
	ServiceTypes []ServiceNamingConditionConditionServiceType `pulumi:"serviceTypes"`
	// Comparison for `SIMPLE_HOST_TECH` attributes
	//
	// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleHostTechComparisons []ServiceNamingConditionConditionSimpleHostTechComparison `pulumi:"simpleHostTechComparisons"`
	// Comparison for `SIMPLE_TECH` attributes
	//
	// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleTechComparisons []ServiceNamingConditionConditionSimpleTechComparison `pulumi:"simpleTechComparisons"`
	// Comparison for `STRING` attributes
	//
	// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
	StringComparisons []ServiceNamingConditionConditionStringComparison `pulumi:"stringComparisons"`
	// The key for dynamic attributes of the `STRING` type
	//
	// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
	StringConditionKeys []ServiceNamingConditionConditionStringConditionKey `pulumi:"stringConditionKeys"`
	// The key for dynamic attributes of the `STRING` type
	StringKeys []ServiceNamingConditionConditionStringKey `pulumi:"stringKeys"`
	// Comparison for `STRING` attributes
	Strings []ServiceNamingConditionConditionString `pulumi:"strings"`
	// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
	//
	// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
	SyntheticEngineTypeComparisons []ServiceNamingConditionConditionSyntheticEngineTypeComparison `pulumi:"syntheticEngineTypeComparisons"`
	// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
	SyntheticEngines []ServiceNamingConditionConditionSyntheticEngine `pulumi:"syntheticEngines"`
	// Comparison for `TAG` attributes
	//
	// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
	TagComparisons []ServiceNamingConditionConditionTagComparison `pulumi:"tagComparisons"`
	// Comparison for `TAG` attributes
	Tags []ServiceNamingConditionConditionTag `pulumi:"tags"`
	// Comparison for `SIMPLE_TECH` attributes
	Teches []ServiceNamingConditionConditionTech `pulumi:"teches"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionInput is an input type that accepts ServiceNamingConditionConditionArgs and ServiceNamingConditionConditionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionInput` via:
//
//	ServiceNamingConditionConditionArgs{...}
type ServiceNamingConditionConditionInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOutput() ServiceNamingConditionConditionOutput
	ToServiceNamingConditionConditionOutputWithContext(context.Context) ServiceNamingConditionConditionOutput
}

type ServiceNamingConditionConditionArgs struct {
	// Comparison for `APPLICATION_TYPE` attributes
	//
	// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
	ApplicationTypeComparisons ServiceNamingConditionConditionApplicationTypeComparisonArrayInput `pulumi:"applicationTypeComparisons"`
	// Comparison for `APPLICATION_TYPE` attributes
	ApplicationTypes ServiceNamingConditionConditionApplicationTypeArrayInput `pulumi:"applicationTypes"`
	// Comparison for `AZURE_COMPUTE_MODE` attributes
	AzureComputeModeComparisons ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput `pulumi:"azureComputeModeComparisons"`
	// Comparison for `AZURE_COMPUTE_MODE` attributes
	//
	// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
	AzureComputeModes ServiceNamingConditionConditionAzureComputeModeArrayInput `pulumi:"azureComputeModes"`
	// Comparison for `AZURE_SKU` attributes
	//
	// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
	AzureSkuComparisions ServiceNamingConditionConditionAzureSkuComparisionArrayInput `pulumi:"azureSkuComparisions"`
	// Comparison for `AZURE_SKU` attributes
	AzureSkus ServiceNamingConditionConditionAzureSkusArrayInput `pulumi:"azureSkus"`
	// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
	//
	// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
	BaseComparisonBasics ServiceNamingConditionConditionBaseComparisonBasicArrayInput `pulumi:"baseComparisonBasics"`
	// Fallback for not yet known type
	//
	// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
	BaseConditionKeys ServiceNamingConditionConditionBaseConditionKeyArrayInput `pulumi:"baseConditionKeys"`
	// Comparison for `BITNESS` attributes
	//
	// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
	BitnessComparisions ServiceNamingConditionConditionBitnessComparisionArrayInput `pulumi:"bitnessComparisions"`
	// Comparison for `BITNESS` attributes
	Bitnesses ServiceNamingConditionConditionBitnessArrayInput `pulumi:"bitnesses"`
	// Comparison for `CLOUD_TYPE` attributes
	//
	// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
	CloudTypeComparisons ServiceNamingConditionConditionCloudTypeComparisonArrayInput `pulumi:"cloudTypeComparisons"`
	// Comparison for `CLOUD_TYPE` attributes
	CloudTypes ServiceNamingConditionConditionCloudTypeArrayInput `pulumi:"cloudTypes"`
	// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
	Comparisons ServiceNamingConditionConditionComparisonArrayInput `pulumi:"comparisons"`
	// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
	//
	// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
	CustomApplicationTypeComparisons ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput `pulumi:"customApplicationTypeComparisons"`
	// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
	CustomApplicationTypes ServiceNamingConditionConditionCustomApplicationTypeArrayInput `pulumi:"customApplicationTypes"`
	// Key for Custom Host Metadata
	//
	// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
	CustomHostMetadataConditionKeys ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput `pulumi:"customHostMetadataConditionKeys"`
	// Key for Custom Host Metadata
	CustomHostMetadatas ServiceNamingConditionConditionCustomHostMetadataArrayInput `pulumi:"customHostMetadatas"`
	// Key for Custom Process Metadata
	//
	// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
	CustomProcessMetadataConditionKeys ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput `pulumi:"customProcessMetadataConditionKeys"`
	// Key for Custom Process Metadata
	CustomProcessMetadatas ServiceNamingConditionConditionCustomProcessMetadataArrayInput `pulumi:"customProcessMetadatas"`
	// Comparison for `DATABASE_TOPOLOGY` attributes
	DatabaseTopologies ServiceNamingConditionConditionDatabaseTopologyArrayInput `pulumi:"databaseTopologies"`
	// Comparison for `DATABASE_TOPOLOGY` attributes
	//
	// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
	DatabaseTopologyComparisons ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput `pulumi:"databaseTopologyComparisons"`
	// Comparison for `DCRUM_DECODER_TYPE` attributes
	//
	// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
	DcrumDecoderComparisons ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput `pulumi:"dcrumDecoderComparisons"`
	// Comparison for `DCRUM_DECODER_TYPE` attributes
	DcrumDecoders ServiceNamingConditionConditionDcrumDecoderArrayInput `pulumi:"dcrumDecoders"`
	// Comparison for `ENTITY_ID` attributes
	Entities ServiceNamingConditionConditionEntityArrayInput `pulumi:"entities"`
	// Comparison for `ENTITY_ID` attributes
	//
	// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
	EntityIdComparisons ServiceNamingConditionConditionEntityIdComparisonArrayInput `pulumi:"entityIdComparisons"`
	// Comparison for `SIMPLE_HOST_TECH` attributes
	HostTeches ServiceNamingConditionConditionHostTechArrayInput `pulumi:"hostTeches"`
	// `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
	//
	// Deprecated: `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
	HypervisorTypeComparisions ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput `pulumi:"hypervisorTypeComparisions"`
	// Comparison for `HYPERVISOR_TYPE` attributes
	Hypervisors ServiceNamingConditionConditionHypervisorArrayInput `pulumi:"hypervisors"`
	// Comparison for `INDEXED_NAME` attributes
	//
	// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
	IndexedNameComparisons ServiceNamingConditionConditionIndexedNameComparisonArrayInput `pulumi:"indexedNameComparisons"`
	// Comparison for `INDEXED_NAME` attributes
	IndexedNames ServiceNamingConditionConditionIndexedNameArrayInput `pulumi:"indexedNames"`
	// Comparison for `INDEXED_STRING` attributes
	//
	// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
	IndexedStringComparisons ServiceNamingConditionConditionIndexedStringComparisonArrayInput `pulumi:"indexedStringComparisons"`
	// Comparison for `INDEXED_STRING` attributes
	IndexedStrings ServiceNamingConditionConditionIndexedStringArrayInput `pulumi:"indexedStrings"`
	// Comparison for `INDEXED_TAG` attributes
	//
	// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
	IndexedTagComparisons ServiceNamingConditionConditionIndexedTagComparisonArrayInput `pulumi:"indexedTagComparisons"`
	// Comparison for `INDEXED_TAG` attributes
	IndexedTags ServiceNamingConditionConditionIndexedTagArrayInput `pulumi:"indexedTags"`
	// Comparison for `INTEGER` attributes
	//
	// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
	IntegerComparisons ServiceNamingConditionConditionIntegerComparisonArrayInput `pulumi:"integerComparisons"`
	// Comparison for `INTEGER` attributes
	Integers ServiceNamingConditionConditionIntegerArrayInput `pulumi:"integers"`
	// Comparison for `IP_ADDRESS` attributes
	//
	// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
	IpaddressComparisons ServiceNamingConditionConditionIpaddressComparisonArrayInput `pulumi:"ipaddressComparisons"`
	// Comparison for `IP_ADDRESS` attributes
	Ipaddresses ServiceNamingConditionConditionIpaddressArrayInput `pulumi:"ipaddresses"`
	// Fallback for not yet known type
	Keys ServiceNamingConditionConditionKeyArrayInput `pulumi:"keys"`
	// Comparison for `MOBILE_PLATFORM` attributes
	//
	// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
	MobilePlatformComparisons ServiceNamingConditionConditionMobilePlatformComparisonArrayInput `pulumi:"mobilePlatformComparisons"`
	// Comparison for `MOBILE_PLATFORM` attributes
	MobilePlatforms ServiceNamingConditionConditionMobilePlatformArrayInput `pulumi:"mobilePlatforms"`
	// Comparison for `OS_ARCHITECTURE` attributes
	OsArches ServiceNamingConditionConditionOsArchArrayInput `pulumi:"osArches"`
	// Comparison for `OS_TYPE` attributes
	OsTypes ServiceNamingConditionConditionOsTypeArrayInput `pulumi:"osTypes"`
	// Comparison for `OS_ARCHITECTURE` attributes
	//
	// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
	OsarchitectureComparisons ServiceNamingConditionConditionOsarchitectureComparisonArrayInput `pulumi:"osarchitectureComparisons"`
	// Comparison for `OS_TYPE` attributes
	//
	// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
	OstypeComparisons ServiceNamingConditionConditionOstypeComparisonArrayInput `pulumi:"ostypeComparisons"`
	// Comparison for `PAAS_TYPE` attributes
	//
	// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
	PaasTypeComparisons ServiceNamingConditionConditionPaasTypeComparisonArrayInput `pulumi:"paasTypeComparisons"`
	// Comparison for `PAAS_TYPE` attributes
	PaasTypes ServiceNamingConditionConditionPaasTypeArrayInput `pulumi:"paasTypes"`
	// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
	//
	// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
	ProcessMetadataConditionKeys ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput `pulumi:"processMetadataConditionKeys"`
	// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
	ProcessMetadatas ServiceNamingConditionConditionProcessMetadataArrayInput `pulumi:"processMetadatas"`
	// Comparison for `SERVICE_TOPOLOGY` attributes
	ServiceTopologies ServiceNamingConditionConditionServiceTopologyArrayInput `pulumi:"serviceTopologies"`
	// Comparison for `SERVICE_TOPOLOGY` attributes
	//
	// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
	ServiceTopologyComparisons ServiceNamingConditionConditionServiceTopologyComparisonArrayInput `pulumi:"serviceTopologyComparisons"`
	// Comparison for `SERVICE_TYPE` attributes
	//
	// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
	ServiceTypeComparisons ServiceNamingConditionConditionServiceTypeComparisonArrayInput `pulumi:"serviceTypeComparisons"`
	// Comparison for `SERVICE_TYPE` attributes
	ServiceTypes ServiceNamingConditionConditionServiceTypeArrayInput `pulumi:"serviceTypes"`
	// Comparison for `SIMPLE_HOST_TECH` attributes
	//
	// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleHostTechComparisons ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput `pulumi:"simpleHostTechComparisons"`
	// Comparison for `SIMPLE_TECH` attributes
	//
	// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
	SimpleTechComparisons ServiceNamingConditionConditionSimpleTechComparisonArrayInput `pulumi:"simpleTechComparisons"`
	// Comparison for `STRING` attributes
	//
	// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
	StringComparisons ServiceNamingConditionConditionStringComparisonArrayInput `pulumi:"stringComparisons"`
	// The key for dynamic attributes of the `STRING` type
	//
	// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
	StringConditionKeys ServiceNamingConditionConditionStringConditionKeyArrayInput `pulumi:"stringConditionKeys"`
	// The key for dynamic attributes of the `STRING` type
	StringKeys ServiceNamingConditionConditionStringKeyArrayInput `pulumi:"stringKeys"`
	// Comparison for `STRING` attributes
	Strings ServiceNamingConditionConditionStringArrayInput `pulumi:"strings"`
	// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
	//
	// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
	SyntheticEngineTypeComparisons ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput `pulumi:"syntheticEngineTypeComparisons"`
	// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
	SyntheticEngines ServiceNamingConditionConditionSyntheticEngineArrayInput `pulumi:"syntheticEngines"`
	// Comparison for `TAG` attributes
	//
	// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
	TagComparisons ServiceNamingConditionConditionTagComparisonArrayInput `pulumi:"tagComparisons"`
	// Comparison for `TAG` attributes
	Tags ServiceNamingConditionConditionTagArrayInput `pulumi:"tags"`
	// Comparison for `SIMPLE_TECH` attributes
	Teches ServiceNamingConditionConditionTechArrayInput `pulumi:"teches"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionCondition)(nil)).Elem()
}

func (i ServiceNamingConditionConditionArgs) ToServiceNamingConditionConditionOutput() ServiceNamingConditionConditionOutput {
	return i.ToServiceNamingConditionConditionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionArgs) ToServiceNamingConditionConditionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOutput)
}

// ServiceNamingConditionConditionArrayInput is an input type that accepts ServiceNamingConditionConditionArray and ServiceNamingConditionConditionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionArrayInput` via:
//
//	ServiceNamingConditionConditionArray{ ServiceNamingConditionConditionArgs{...} }
type ServiceNamingConditionConditionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionArrayOutput() ServiceNamingConditionConditionArrayOutput
	ToServiceNamingConditionConditionArrayOutputWithContext(context.Context) ServiceNamingConditionConditionArrayOutput
}

type ServiceNamingConditionConditionArray []ServiceNamingConditionConditionInput

func (ServiceNamingConditionConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionCondition)(nil)).Elem()
}

func (i ServiceNamingConditionConditionArray) ToServiceNamingConditionConditionArrayOutput() ServiceNamingConditionConditionArrayOutput {
	return i.ToServiceNamingConditionConditionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionArray) ToServiceNamingConditionConditionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionArrayOutput)
}

type ServiceNamingConditionConditionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionCondition)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOutput) ToServiceNamingConditionConditionOutput() ServiceNamingConditionConditionOutput {
	return o
}

func (o ServiceNamingConditionConditionOutput) ToServiceNamingConditionConditionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOutput {
	return o
}

// Comparison for `APPLICATION_TYPE` attributes
//
// Deprecated: You should use 'application_type' instead of 'application_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) ApplicationTypeComparisons() ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionApplicationTypeComparison {
		return v.ApplicationTypeComparisons
	}).(ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput)
}

// Comparison for `APPLICATION_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) ApplicationTypes() ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionApplicationType {
		return v.ApplicationTypes
	}).(ServiceNamingConditionConditionApplicationTypeArrayOutput)
}

// Comparison for `AZURE_COMPUTE_MODE` attributes
func (o ServiceNamingConditionConditionOutput) AzureComputeModeComparisons() ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionAzureComputeModeComparison {
		return v.AzureComputeModeComparisons
	}).(ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput)
}

// Comparison for `AZURE_COMPUTE_MODE` attributes
//
// Deprecated: You should use 'azure_compute_mode' instead of 'azure_compute_mode_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) AzureComputeModes() ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionAzureComputeMode {
		return v.AzureComputeModes
	}).(ServiceNamingConditionConditionAzureComputeModeArrayOutput)
}

// Comparison for `AZURE_SKU` attributes
//
// Deprecated: You should use 'azure_sku' instead of 'azure_sku_comparision'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) AzureSkuComparisions() ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionAzureSkuComparision {
		return v.AzureSkuComparisions
	}).(ServiceNamingConditionConditionAzureSkuComparisionArrayOutput)
}

// Comparison for `AZURE_SKU` attributes
func (o ServiceNamingConditionConditionOutput) AzureSkus() ServiceNamingConditionConditionAzureSkusArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionAzureSkus { return v.AzureSkus }).(ServiceNamingConditionConditionAzureSkusArrayOutput)
}

// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
//
// Deprecated: You should use 'comparison' instead of 'base_comparison_basic'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) BaseComparisonBasics() ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionBaseComparisonBasic {
		return v.BaseComparisonBasics
	}).(ServiceNamingConditionConditionBaseComparisonBasicArrayOutput)
}

// Fallback for not yet known type
//
// Deprecated: 'base_condition_key' is deprecated. You should use 'key'
func (o ServiceNamingConditionConditionOutput) BaseConditionKeys() ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionBaseConditionKey {
		return v.BaseConditionKeys
	}).(ServiceNamingConditionConditionBaseConditionKeyArrayOutput)
}

// Comparison for `BITNESS` attributes
//
// Deprecated: You should use 'bitness' instead of 'bitness_comparision'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) BitnessComparisions() ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionBitnessComparision {
		return v.BitnessComparisions
	}).(ServiceNamingConditionConditionBitnessComparisionArrayOutput)
}

// Comparison for `BITNESS` attributes
func (o ServiceNamingConditionConditionOutput) Bitnesses() ServiceNamingConditionConditionBitnessArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionBitness { return v.Bitnesses }).(ServiceNamingConditionConditionBitnessArrayOutput)
}

// Comparison for `CLOUD_TYPE` attributes
//
// Deprecated: You should use 'cloud_type' instead of 'cloud_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) CloudTypeComparisons() ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCloudTypeComparison {
		return v.CloudTypeComparisons
	}).(ServiceNamingConditionConditionCloudTypeComparisonArrayOutput)
}

// Comparison for `CLOUD_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) CloudTypes() ServiceNamingConditionConditionCloudTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCloudType {
		return v.CloudTypes
	}).(ServiceNamingConditionConditionCloudTypeArrayOutput)
}

// A comparison that's yet unknown to the provider. Operator and Value need to be encoded using the 'unknowns' property.
func (o ServiceNamingConditionConditionOutput) Comparisons() ServiceNamingConditionConditionComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionComparison {
		return v.Comparisons
	}).(ServiceNamingConditionConditionComparisonArrayOutput)
}

// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
//
// Deprecated: You should use 'custom_application_type' instead of 'custom_application_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) CustomApplicationTypeComparisons() ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomApplicationTypeComparison {
		return v.CustomApplicationTypeComparisons
	}).(ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput)
}

// Comparison for `CUSTOM_APPLICATION_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) CustomApplicationTypes() ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomApplicationType {
		return v.CustomApplicationTypes
	}).(ServiceNamingConditionConditionCustomApplicationTypeArrayOutput)
}

// Key for Custom Host Metadata
//
// Deprecated: 'custom_host_metadata_condition_key' is deprecated. You should use 'custom_host_metadata'
func (o ServiceNamingConditionConditionOutput) CustomHostMetadataConditionKeys() ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomHostMetadataConditionKey {
		return v.CustomHostMetadataConditionKeys
	}).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput)
}

// Key for Custom Host Metadata
func (o ServiceNamingConditionConditionOutput) CustomHostMetadatas() ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomHostMetadata {
		return v.CustomHostMetadatas
	}).(ServiceNamingConditionConditionCustomHostMetadataArrayOutput)
}

// Key for Custom Process Metadata
//
// Deprecated: 'custom_process_metadata_condition_key' is deprecated. You should use 'custom_process_metadata'
func (o ServiceNamingConditionConditionOutput) CustomProcessMetadataConditionKeys() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomProcessMetadataConditionKey {
		return v.CustomProcessMetadataConditionKeys
	}).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput)
}

// Key for Custom Process Metadata
func (o ServiceNamingConditionConditionOutput) CustomProcessMetadatas() ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionCustomProcessMetadata {
		return v.CustomProcessMetadatas
	}).(ServiceNamingConditionConditionCustomProcessMetadataArrayOutput)
}

// Comparison for `DATABASE_TOPOLOGY` attributes
func (o ServiceNamingConditionConditionOutput) DatabaseTopologies() ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionDatabaseTopology {
		return v.DatabaseTopologies
	}).(ServiceNamingConditionConditionDatabaseTopologyArrayOutput)
}

// Comparison for `DATABASE_TOPOLOGY` attributes
//
// Deprecated: You should use 'database_topology' instead of 'database_topology_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) DatabaseTopologyComparisons() ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionDatabaseTopologyComparison {
		return v.DatabaseTopologyComparisons
	}).(ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput)
}

// Comparison for `DCRUM_DECODER_TYPE` attributes
//
// Deprecated: You should use 'dcrum_decoder' instead of 'dcrum_decoder_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) DcrumDecoderComparisons() ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionDcrumDecoderComparison {
		return v.DcrumDecoderComparisons
	}).(ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput)
}

// Comparison for `DCRUM_DECODER_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) DcrumDecoders() ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionDcrumDecoder {
		return v.DcrumDecoders
	}).(ServiceNamingConditionConditionDcrumDecoderArrayOutput)
}

// Comparison for `ENTITY_ID` attributes
func (o ServiceNamingConditionConditionOutput) Entities() ServiceNamingConditionConditionEntityArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionEntity { return v.Entities }).(ServiceNamingConditionConditionEntityArrayOutput)
}

// Comparison for `ENTITY_ID` attributes
//
// Deprecated: You should use 'entity' instead of 'entity_id_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) EntityIdComparisons() ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionEntityIdComparison {
		return v.EntityIdComparisons
	}).(ServiceNamingConditionConditionEntityIdComparisonArrayOutput)
}

// Comparison for `SIMPLE_HOST_TECH` attributes
func (o ServiceNamingConditionConditionOutput) HostTeches() ServiceNamingConditionConditionHostTechArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionHostTech { return v.HostTeches }).(ServiceNamingConditionConditionHostTechArrayOutput)
}

// `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
//
// Deprecated: `hypervisorTypeComparision` is deprecated. Use `hypervisor` instead
func (o ServiceNamingConditionConditionOutput) HypervisorTypeComparisions() ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionHypervisorTypeComparision {
		return v.HypervisorTypeComparisions
	}).(ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput)
}

// Comparison for `HYPERVISOR_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) Hypervisors() ServiceNamingConditionConditionHypervisorArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionHypervisor {
		return v.Hypervisors
	}).(ServiceNamingConditionConditionHypervisorArrayOutput)
}

// Comparison for `INDEXED_NAME` attributes
//
// Deprecated: You should use 'indexed_name' instead of 'indexed_name_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IndexedNameComparisons() ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedNameComparison {
		return v.IndexedNameComparisons
	}).(ServiceNamingConditionConditionIndexedNameComparisonArrayOutput)
}

// Comparison for `INDEXED_NAME` attributes
func (o ServiceNamingConditionConditionOutput) IndexedNames() ServiceNamingConditionConditionIndexedNameArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedName {
		return v.IndexedNames
	}).(ServiceNamingConditionConditionIndexedNameArrayOutput)
}

// Comparison for `INDEXED_STRING` attributes
//
// Deprecated: You should use 'indexed_string' instead of 'indexed_string_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IndexedStringComparisons() ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedStringComparison {
		return v.IndexedStringComparisons
	}).(ServiceNamingConditionConditionIndexedStringComparisonArrayOutput)
}

// Comparison for `INDEXED_STRING` attributes
func (o ServiceNamingConditionConditionOutput) IndexedStrings() ServiceNamingConditionConditionIndexedStringArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedString {
		return v.IndexedStrings
	}).(ServiceNamingConditionConditionIndexedStringArrayOutput)
}

// Comparison for `INDEXED_TAG` attributes
//
// Deprecated: You should use 'indexed_tag' instead of 'indexed_tag_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IndexedTagComparisons() ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedTagComparison {
		return v.IndexedTagComparisons
	}).(ServiceNamingConditionConditionIndexedTagComparisonArrayOutput)
}

// Comparison for `INDEXED_TAG` attributes
func (o ServiceNamingConditionConditionOutput) IndexedTags() ServiceNamingConditionConditionIndexedTagArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIndexedTag {
		return v.IndexedTags
	}).(ServiceNamingConditionConditionIndexedTagArrayOutput)
}

// Comparison for `INTEGER` attributes
//
// Deprecated: You should use 'integer' instead of 'integer_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IntegerComparisons() ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIntegerComparison {
		return v.IntegerComparisons
	}).(ServiceNamingConditionConditionIntegerComparisonArrayOutput)
}

// Comparison for `INTEGER` attributes
func (o ServiceNamingConditionConditionOutput) Integers() ServiceNamingConditionConditionIntegerArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionInteger { return v.Integers }).(ServiceNamingConditionConditionIntegerArrayOutput)
}

// Comparison for `IP_ADDRESS` attributes
//
// Deprecated: You should use 'ipaddress' instead of 'ipaddress_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) IpaddressComparisons() ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIpaddressComparison {
		return v.IpaddressComparisons
	}).(ServiceNamingConditionConditionIpaddressComparisonArrayOutput)
}

// Comparison for `IP_ADDRESS` attributes
func (o ServiceNamingConditionConditionOutput) Ipaddresses() ServiceNamingConditionConditionIpaddressArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionIpaddress {
		return v.Ipaddresses
	}).(ServiceNamingConditionConditionIpaddressArrayOutput)
}

// Fallback for not yet known type
func (o ServiceNamingConditionConditionOutput) Keys() ServiceNamingConditionConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionKey { return v.Keys }).(ServiceNamingConditionConditionKeyArrayOutput)
}

// Comparison for `MOBILE_PLATFORM` attributes
//
// Deprecated: You should use 'mobile_platform' instead of 'mobile_platform_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) MobilePlatformComparisons() ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionMobilePlatformComparison {
		return v.MobilePlatformComparisons
	}).(ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput)
}

// Comparison for `MOBILE_PLATFORM` attributes
func (o ServiceNamingConditionConditionOutput) MobilePlatforms() ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionMobilePlatform {
		return v.MobilePlatforms
	}).(ServiceNamingConditionConditionMobilePlatformArrayOutput)
}

// Comparison for `OS_ARCHITECTURE` attributes
func (o ServiceNamingConditionConditionOutput) OsArches() ServiceNamingConditionConditionOsArchArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionOsArch { return v.OsArches }).(ServiceNamingConditionConditionOsArchArrayOutput)
}

// Comparison for `OS_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) OsTypes() ServiceNamingConditionConditionOsTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionOsType { return v.OsTypes }).(ServiceNamingConditionConditionOsTypeArrayOutput)
}

// Comparison for `OS_ARCHITECTURE` attributes
//
// Deprecated: You should use 'os_arch' instead of 'osarchitecture_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) OsarchitectureComparisons() ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionOsarchitectureComparison {
		return v.OsarchitectureComparisons
	}).(ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput)
}

// Comparison for `OS_TYPE` attributes
//
// Deprecated: You should use 'os_type' instead of 'ostype_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) OstypeComparisons() ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionOstypeComparison {
		return v.OstypeComparisons
	}).(ServiceNamingConditionConditionOstypeComparisonArrayOutput)
}

// Comparison for `PAAS_TYPE` attributes
//
// Deprecated: You should use 'paas_type' instead of 'paas_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) PaasTypeComparisons() ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionPaasTypeComparison {
		return v.PaasTypeComparisons
	}).(ServiceNamingConditionConditionPaasTypeComparisonArrayOutput)
}

// Comparison for `PAAS_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) PaasTypes() ServiceNamingConditionConditionPaasTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionPaasType { return v.PaasTypes }).(ServiceNamingConditionConditionPaasTypeArrayOutput)
}

// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
//
// Deprecated: 'process_metadata_condition_key' is deprecated. You should use 'process_metadata'
func (o ServiceNamingConditionConditionOutput) ProcessMetadataConditionKeys() ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionProcessMetadataConditionKey {
		return v.ProcessMetadataConditionKeys
	}).(ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput)
}

// The key for dynamic attributes of the `PROCESS_PREDEFINED_METADATA_KEY` type
func (o ServiceNamingConditionConditionOutput) ProcessMetadatas() ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionProcessMetadata {
		return v.ProcessMetadatas
	}).(ServiceNamingConditionConditionProcessMetadataArrayOutput)
}

// Comparison for `SERVICE_TOPOLOGY` attributes
func (o ServiceNamingConditionConditionOutput) ServiceTopologies() ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionServiceTopology {
		return v.ServiceTopologies
	}).(ServiceNamingConditionConditionServiceTopologyArrayOutput)
}

// Comparison for `SERVICE_TOPOLOGY` attributes
//
// Deprecated: You should use 'service_topology' instead of 'service_topology_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) ServiceTopologyComparisons() ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionServiceTopologyComparison {
		return v.ServiceTopologyComparisons
	}).(ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput)
}

// Comparison for `SERVICE_TYPE` attributes
//
// Deprecated: You should use 'service_type' instead of 'service_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) ServiceTypeComparisons() ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionServiceTypeComparison {
		return v.ServiceTypeComparisons
	}).(ServiceNamingConditionConditionServiceTypeComparisonArrayOutput)
}

// Comparison for `SERVICE_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) ServiceTypes() ServiceNamingConditionConditionServiceTypeArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionServiceType {
		return v.ServiceTypes
	}).(ServiceNamingConditionConditionServiceTypeArrayOutput)
}

// Comparison for `SIMPLE_HOST_TECH` attributes
//
// Deprecated: You should use 'host_tech' instead of 'simple_host_tech_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) SimpleHostTechComparisons() ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionSimpleHostTechComparison {
		return v.SimpleHostTechComparisons
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput)
}

// Comparison for `SIMPLE_TECH` attributes
//
// Deprecated: You should use 'tech' instead of 'simple_tech_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) SimpleTechComparisons() ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionSimpleTechComparison {
		return v.SimpleTechComparisons
	}).(ServiceNamingConditionConditionSimpleTechComparisonArrayOutput)
}

// Comparison for `STRING` attributes
//
// Deprecated: You should use 'string' instead of 'string_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) StringComparisons() ServiceNamingConditionConditionStringComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionStringComparison {
		return v.StringComparisons
	}).(ServiceNamingConditionConditionStringComparisonArrayOutput)
}

// The key for dynamic attributes of the `STRING` type
//
// Deprecated: 'string_condition_key' is deprecated. You should use 'string_key'
func (o ServiceNamingConditionConditionOutput) StringConditionKeys() ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionStringConditionKey {
		return v.StringConditionKeys
	}).(ServiceNamingConditionConditionStringConditionKeyArrayOutput)
}

// The key for dynamic attributes of the `STRING` type
func (o ServiceNamingConditionConditionOutput) StringKeys() ServiceNamingConditionConditionStringKeyArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionStringKey {
		return v.StringKeys
	}).(ServiceNamingConditionConditionStringKeyArrayOutput)
}

// Comparison for `STRING` attributes
func (o ServiceNamingConditionConditionOutput) Strings() ServiceNamingConditionConditionStringArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionString { return v.Strings }).(ServiceNamingConditionConditionStringArrayOutput)
}

// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
//
// Deprecated: You should use 'synthetic_engine' instead of 'synthetic_engine_type_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) SyntheticEngineTypeComparisons() ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionSyntheticEngineTypeComparison {
		return v.SyntheticEngineTypeComparisons
	}).(ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput)
}

// Comparison for `SYNTHETIC_ENGINE_TYPE` attributes
func (o ServiceNamingConditionConditionOutput) SyntheticEngines() ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionSyntheticEngine {
		return v.SyntheticEngines
	}).(ServiceNamingConditionConditionSyntheticEngineArrayOutput)
}

// Comparison for `TAG` attributes
//
// Deprecated: You should use 'tag' instead of 'tag_comparison'. This attribute still exists for backwards compatibility.
func (o ServiceNamingConditionConditionOutput) TagComparisons() ServiceNamingConditionConditionTagComparisonArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionTagComparison {
		return v.TagComparisons
	}).(ServiceNamingConditionConditionTagComparisonArrayOutput)
}

// Comparison for `TAG` attributes
func (o ServiceNamingConditionConditionOutput) Tags() ServiceNamingConditionConditionTagArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionTag { return v.Tags }).(ServiceNamingConditionConditionTagArrayOutput)
}

// Comparison for `SIMPLE_TECH` attributes
func (o ServiceNamingConditionConditionOutput) Teches() ServiceNamingConditionConditionTechArrayOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) []ServiceNamingConditionConditionTech { return v.Teches }).(ServiceNamingConditionConditionTechArrayOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionCondition) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionCondition)(nil)).Elem()
}

func (o ServiceNamingConditionConditionArrayOutput) ToServiceNamingConditionConditionArrayOutput() ServiceNamingConditionConditionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionArrayOutput) ToServiceNamingConditionConditionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionCondition {
		return vs[0].([]ServiceNamingConditionCondition)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOutput)
}

type ServiceNamingConditionConditionApplicationType struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionApplicationTypeInput is an input type that accepts ServiceNamingConditionConditionApplicationTypeArgs and ServiceNamingConditionConditionApplicationTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionApplicationTypeInput` via:
//
//	ServiceNamingConditionConditionApplicationTypeArgs{...}
type ServiceNamingConditionConditionApplicationTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionApplicationTypeOutput() ServiceNamingConditionConditionApplicationTypeOutput
	ToServiceNamingConditionConditionApplicationTypeOutputWithContext(context.Context) ServiceNamingConditionConditionApplicationTypeOutput
}

type ServiceNamingConditionConditionApplicationTypeArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionApplicationType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionApplicationTypeArgs) ToServiceNamingConditionConditionApplicationTypeOutput() ServiceNamingConditionConditionApplicationTypeOutput {
	return i.ToServiceNamingConditionConditionApplicationTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionApplicationTypeArgs) ToServiceNamingConditionConditionApplicationTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionApplicationTypeOutput)
}

// ServiceNamingConditionConditionApplicationTypeArrayInput is an input type that accepts ServiceNamingConditionConditionApplicationTypeArray and ServiceNamingConditionConditionApplicationTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionApplicationTypeArrayInput` via:
//
//	ServiceNamingConditionConditionApplicationTypeArray{ ServiceNamingConditionConditionApplicationTypeArgs{...} }
type ServiceNamingConditionConditionApplicationTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionApplicationTypeArrayOutput() ServiceNamingConditionConditionApplicationTypeArrayOutput
	ToServiceNamingConditionConditionApplicationTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionApplicationTypeArrayOutput
}

type ServiceNamingConditionConditionApplicationTypeArray []ServiceNamingConditionConditionApplicationTypeInput

func (ServiceNamingConditionConditionApplicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionApplicationType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionApplicationTypeArray) ToServiceNamingConditionConditionApplicationTypeArrayOutput() ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return i.ToServiceNamingConditionConditionApplicationTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionApplicationTypeArray) ToServiceNamingConditionConditionApplicationTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionApplicationTypeArrayOutput)
}

type ServiceNamingConditionConditionApplicationTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionApplicationType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionApplicationTypeOutput) ToServiceNamingConditionConditionApplicationTypeOutput() ServiceNamingConditionConditionApplicationTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeOutput) ToServiceNamingConditionConditionApplicationTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionApplicationTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionApplicationTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationType) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionApplicationTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionApplicationTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionApplicationTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionApplicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionApplicationType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionApplicationTypeArrayOutput) ToServiceNamingConditionConditionApplicationTypeArrayOutput() ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeArrayOutput) ToServiceNamingConditionConditionApplicationTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionApplicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionApplicationType {
		return vs[0].([]ServiceNamingConditionConditionApplicationType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionApplicationTypeOutput)
}

type ServiceNamingConditionConditionApplicationTypeComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be APPLICATION_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionApplicationTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionApplicationTypeComparisonArgs and ServiceNamingConditionConditionApplicationTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionApplicationTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionApplicationTypeComparisonArgs{...}
type ServiceNamingConditionConditionApplicationTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionApplicationTypeComparisonOutput() ServiceNamingConditionConditionApplicationTypeComparisonOutput
	ToServiceNamingConditionConditionApplicationTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionApplicationTypeComparisonOutput
}

type ServiceNamingConditionConditionApplicationTypeComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be APPLICATION_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionApplicationTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionApplicationTypeComparisonArgs) ToServiceNamingConditionConditionApplicationTypeComparisonOutput() ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionApplicationTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionApplicationTypeComparisonArgs) ToServiceNamingConditionConditionApplicationTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionApplicationTypeComparisonOutput)
}

// ServiceNamingConditionConditionApplicationTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionApplicationTypeComparisonArray and ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionApplicationTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionApplicationTypeComparisonArray{ ServiceNamingConditionConditionApplicationTypeComparisonArgs{...} }
type ServiceNamingConditionConditionApplicationTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput
	ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionApplicationTypeComparisonArray []ServiceNamingConditionConditionApplicationTypeComparisonInput

func (ServiceNamingConditionConditionApplicationTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionApplicationTypeComparisonArray) ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionApplicationTypeComparisonArray) ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionApplicationTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionApplicationTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) ToServiceNamingConditionConditionApplicationTypeComparisonOutput() ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) ToServiceNamingConditionConditionApplicationTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be APPLICATION_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionApplicationTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionApplicationTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionApplicationTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput) ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput) ToServiceNamingConditionConditionApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionApplicationTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionApplicationTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionApplicationTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionApplicationTypeComparisonOutput)
}

type ServiceNamingConditionConditionAzureComputeMode struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are DEDICATED or SHARED.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionAzureComputeModeInput is an input type that accepts ServiceNamingConditionConditionAzureComputeModeArgs and ServiceNamingConditionConditionAzureComputeModeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureComputeModeInput` via:
//
//	ServiceNamingConditionConditionAzureComputeModeArgs{...}
type ServiceNamingConditionConditionAzureComputeModeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureComputeModeOutput() ServiceNamingConditionConditionAzureComputeModeOutput
	ToServiceNamingConditionConditionAzureComputeModeOutputWithContext(context.Context) ServiceNamingConditionConditionAzureComputeModeOutput
}

type ServiceNamingConditionConditionAzureComputeModeArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are DEDICATED or SHARED.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionAzureComputeModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureComputeModeArgs) ToServiceNamingConditionConditionAzureComputeModeOutput() ServiceNamingConditionConditionAzureComputeModeOutput {
	return i.ToServiceNamingConditionConditionAzureComputeModeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureComputeModeArgs) ToServiceNamingConditionConditionAzureComputeModeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureComputeModeOutput)
}

// ServiceNamingConditionConditionAzureComputeModeArrayInput is an input type that accepts ServiceNamingConditionConditionAzureComputeModeArray and ServiceNamingConditionConditionAzureComputeModeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureComputeModeArrayInput` via:
//
//	ServiceNamingConditionConditionAzureComputeModeArray{ ServiceNamingConditionConditionAzureComputeModeArgs{...} }
type ServiceNamingConditionConditionAzureComputeModeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureComputeModeArrayOutput() ServiceNamingConditionConditionAzureComputeModeArrayOutput
	ToServiceNamingConditionConditionAzureComputeModeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionAzureComputeModeArrayOutput
}

type ServiceNamingConditionConditionAzureComputeModeArray []ServiceNamingConditionConditionAzureComputeModeInput

func (ServiceNamingConditionConditionAzureComputeModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureComputeModeArray) ToServiceNamingConditionConditionAzureComputeModeArrayOutput() ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return i.ToServiceNamingConditionConditionAzureComputeModeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureComputeModeArray) ToServiceNamingConditionConditionAzureComputeModeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureComputeModeArrayOutput)
}

type ServiceNamingConditionConditionAzureComputeModeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureComputeModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureComputeModeOutput) ToServiceNamingConditionConditionAzureComputeModeOutput() ServiceNamingConditionConditionAzureComputeModeOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeOutput) ToServiceNamingConditionConditionAzureComputeModeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionAzureComputeModeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeMode) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionAzureComputeModeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeMode) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionAzureComputeModeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeMode) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are DEDICATED or SHARED.
func (o ServiceNamingConditionConditionAzureComputeModeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeMode) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionAzureComputeModeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureComputeModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureComputeMode)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureComputeModeArrayOutput) ToServiceNamingConditionConditionAzureComputeModeArrayOutput() ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeArrayOutput) ToServiceNamingConditionConditionAzureComputeModeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionAzureComputeModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionAzureComputeMode {
		return vs[0].([]ServiceNamingConditionConditionAzureComputeMode)[vs[1].(int)]
	}).(ServiceNamingConditionConditionAzureComputeModeOutput)
}

type ServiceNamingConditionConditionAzureComputeModeComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are DEDICATED or SHARED.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionAzureComputeModeComparisonInput is an input type that accepts ServiceNamingConditionConditionAzureComputeModeComparisonArgs and ServiceNamingConditionConditionAzureComputeModeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureComputeModeComparisonInput` via:
//
//	ServiceNamingConditionConditionAzureComputeModeComparisonArgs{...}
type ServiceNamingConditionConditionAzureComputeModeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureComputeModeComparisonOutput() ServiceNamingConditionConditionAzureComputeModeComparisonOutput
	ToServiceNamingConditionConditionAzureComputeModeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonOutput
}

type ServiceNamingConditionConditionAzureComputeModeComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are DEDICATED or SHARED.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionAzureComputeModeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureComputeModeComparisonArgs) ToServiceNamingConditionConditionAzureComputeModeComparisonOutput() ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return i.ToServiceNamingConditionConditionAzureComputeModeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureComputeModeComparisonArgs) ToServiceNamingConditionConditionAzureComputeModeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureComputeModeComparisonOutput)
}

// ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionAzureComputeModeComparisonArray and ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionAzureComputeModeComparisonArray{ ServiceNamingConditionConditionAzureComputeModeComparisonArgs{...} }
type ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput() ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput
	ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput
}

type ServiceNamingConditionConditionAzureComputeModeComparisonArray []ServiceNamingConditionConditionAzureComputeModeComparisonInput

func (ServiceNamingConditionConditionAzureComputeModeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureComputeModeComparisonArray) ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput() ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureComputeModeComparisonArray) ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput)
}

type ServiceNamingConditionConditionAzureComputeModeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureComputeModeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) ToServiceNamingConditionConditionAzureComputeModeComparisonOutput() ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) ToServiceNamingConditionConditionAzureComputeModeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeModeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeModeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeModeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are DEDICATED or SHARED.
func (o ServiceNamingConditionConditionAzureComputeModeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureComputeModeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureComputeModeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput) ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput() ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput) ToServiceNamingConditionConditionAzureComputeModeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionAzureComputeModeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionAzureComputeModeComparison {
		return vs[0].([]ServiceNamingConditionConditionAzureComputeModeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionAzureComputeModeComparisonOutput)
}

type ServiceNamingConditionConditionAzureSkuComparision struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be AZURE_SKU
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionAzureSkuComparisionInput is an input type that accepts ServiceNamingConditionConditionAzureSkuComparisionArgs and ServiceNamingConditionConditionAzureSkuComparisionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureSkuComparisionInput` via:
//
//	ServiceNamingConditionConditionAzureSkuComparisionArgs{...}
type ServiceNamingConditionConditionAzureSkuComparisionInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureSkuComparisionOutput() ServiceNamingConditionConditionAzureSkuComparisionOutput
	ToServiceNamingConditionConditionAzureSkuComparisionOutputWithContext(context.Context) ServiceNamingConditionConditionAzureSkuComparisionOutput
}

type ServiceNamingConditionConditionAzureSkuComparisionArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be AZURE_SKU
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionAzureSkuComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureSkuComparisionArgs) ToServiceNamingConditionConditionAzureSkuComparisionOutput() ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return i.ToServiceNamingConditionConditionAzureSkuComparisionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureSkuComparisionArgs) ToServiceNamingConditionConditionAzureSkuComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureSkuComparisionOutput)
}

// ServiceNamingConditionConditionAzureSkuComparisionArrayInput is an input type that accepts ServiceNamingConditionConditionAzureSkuComparisionArray and ServiceNamingConditionConditionAzureSkuComparisionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureSkuComparisionArrayInput` via:
//
//	ServiceNamingConditionConditionAzureSkuComparisionArray{ ServiceNamingConditionConditionAzureSkuComparisionArgs{...} }
type ServiceNamingConditionConditionAzureSkuComparisionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureSkuComparisionArrayOutput() ServiceNamingConditionConditionAzureSkuComparisionArrayOutput
	ToServiceNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(context.Context) ServiceNamingConditionConditionAzureSkuComparisionArrayOutput
}

type ServiceNamingConditionConditionAzureSkuComparisionArray []ServiceNamingConditionConditionAzureSkuComparisionInput

func (ServiceNamingConditionConditionAzureSkuComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureSkuComparisionArray) ToServiceNamingConditionConditionAzureSkuComparisionArrayOutput() ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return i.ToServiceNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureSkuComparisionArray) ToServiceNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureSkuComparisionArrayOutput)
}

type ServiceNamingConditionConditionAzureSkuComparisionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureSkuComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) ToServiceNamingConditionConditionAzureSkuComparisionOutput() ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) ToServiceNamingConditionConditionAzureSkuComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be AZURE_SKU
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
func (o ServiceNamingConditionConditionAzureSkuComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkuComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionAzureSkuComparisionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureSkuComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureSkuComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureSkuComparisionArrayOutput) ToServiceNamingConditionConditionAzureSkuComparisionArrayOutput() ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkuComparisionArrayOutput) ToServiceNamingConditionConditionAzureSkuComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkuComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkuComparisionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionAzureSkuComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionAzureSkuComparision {
		return vs[0].([]ServiceNamingConditionConditionAzureSkuComparision)[vs[1].(int)]
	}).(ServiceNamingConditionConditionAzureSkuComparisionOutput)
}

type ServiceNamingConditionConditionAzureSkus struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionAzureSkusInput is an input type that accepts ServiceNamingConditionConditionAzureSkusArgs and ServiceNamingConditionConditionAzureSkusOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureSkusInput` via:
//
//	ServiceNamingConditionConditionAzureSkusArgs{...}
type ServiceNamingConditionConditionAzureSkusInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureSkusOutput() ServiceNamingConditionConditionAzureSkusOutput
	ToServiceNamingConditionConditionAzureSkusOutputWithContext(context.Context) ServiceNamingConditionConditionAzureSkusOutput
}

type ServiceNamingConditionConditionAzureSkusArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionAzureSkusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureSkusArgs) ToServiceNamingConditionConditionAzureSkusOutput() ServiceNamingConditionConditionAzureSkusOutput {
	return i.ToServiceNamingConditionConditionAzureSkusOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureSkusArgs) ToServiceNamingConditionConditionAzureSkusOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureSkusOutput)
}

// ServiceNamingConditionConditionAzureSkusArrayInput is an input type that accepts ServiceNamingConditionConditionAzureSkusArray and ServiceNamingConditionConditionAzureSkusArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionAzureSkusArrayInput` via:
//
//	ServiceNamingConditionConditionAzureSkusArray{ ServiceNamingConditionConditionAzureSkusArgs{...} }
type ServiceNamingConditionConditionAzureSkusArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionAzureSkusArrayOutput() ServiceNamingConditionConditionAzureSkusArrayOutput
	ToServiceNamingConditionConditionAzureSkusArrayOutputWithContext(context.Context) ServiceNamingConditionConditionAzureSkusArrayOutput
}

type ServiceNamingConditionConditionAzureSkusArray []ServiceNamingConditionConditionAzureSkusInput

func (ServiceNamingConditionConditionAzureSkusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (i ServiceNamingConditionConditionAzureSkusArray) ToServiceNamingConditionConditionAzureSkusArrayOutput() ServiceNamingConditionConditionAzureSkusArrayOutput {
	return i.ToServiceNamingConditionConditionAzureSkusArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionAzureSkusArray) ToServiceNamingConditionConditionAzureSkusArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionAzureSkusArrayOutput)
}

type ServiceNamingConditionConditionAzureSkusOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureSkusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureSkusOutput) ToServiceNamingConditionConditionAzureSkusOutput() ServiceNamingConditionConditionAzureSkusOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkusOutput) ToServiceNamingConditionConditionAzureSkusOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkusOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionAzureSkusOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkus) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionAzureSkusOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkus) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionAzureSkusOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkus) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are BASIC, DYNAMIC, FREE, PREMIUM, SHARED and STANDARD.
func (o ServiceNamingConditionConditionAzureSkusOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionAzureSkus) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionAzureSkusArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionAzureSkusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionAzureSkus)(nil)).Elem()
}

func (o ServiceNamingConditionConditionAzureSkusArrayOutput) ToServiceNamingConditionConditionAzureSkusArrayOutput() ServiceNamingConditionConditionAzureSkusArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkusArrayOutput) ToServiceNamingConditionConditionAzureSkusArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionAzureSkusArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionAzureSkusArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionAzureSkusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionAzureSkus {
		return vs[0].([]ServiceNamingConditionConditionAzureSkus)[vs[1].(int)]
	}).(ServiceNamingConditionConditionAzureSkusOutput)
}

type ServiceNamingConditionConditionBaseComparisonBasic struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// The type of comparison
	Type string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionBaseComparisonBasicInput is an input type that accepts ServiceNamingConditionConditionBaseComparisonBasicArgs and ServiceNamingConditionConditionBaseComparisonBasicOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBaseComparisonBasicInput` via:
//
//	ServiceNamingConditionConditionBaseComparisonBasicArgs{...}
type ServiceNamingConditionConditionBaseComparisonBasicInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBaseComparisonBasicOutput() ServiceNamingConditionConditionBaseComparisonBasicOutput
	ToServiceNamingConditionConditionBaseComparisonBasicOutputWithContext(context.Context) ServiceNamingConditionConditionBaseComparisonBasicOutput
}

type ServiceNamingConditionConditionBaseComparisonBasicArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// The type of comparison
	Type pulumi.StringInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionBaseComparisonBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBaseComparisonBasicArgs) ToServiceNamingConditionConditionBaseComparisonBasicOutput() ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return i.ToServiceNamingConditionConditionBaseComparisonBasicOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBaseComparisonBasicArgs) ToServiceNamingConditionConditionBaseComparisonBasicOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBaseComparisonBasicOutput)
}

// ServiceNamingConditionConditionBaseComparisonBasicArrayInput is an input type that accepts ServiceNamingConditionConditionBaseComparisonBasicArray and ServiceNamingConditionConditionBaseComparisonBasicArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBaseComparisonBasicArrayInput` via:
//
//	ServiceNamingConditionConditionBaseComparisonBasicArray{ ServiceNamingConditionConditionBaseComparisonBasicArgs{...} }
type ServiceNamingConditionConditionBaseComparisonBasicArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBaseComparisonBasicArrayOutput() ServiceNamingConditionConditionBaseComparisonBasicArrayOutput
	ToServiceNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(context.Context) ServiceNamingConditionConditionBaseComparisonBasicArrayOutput
}

type ServiceNamingConditionConditionBaseComparisonBasicArray []ServiceNamingConditionConditionBaseComparisonBasicInput

func (ServiceNamingConditionConditionBaseComparisonBasicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBaseComparisonBasicArray) ToServiceNamingConditionConditionBaseComparisonBasicArrayOutput() ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return i.ToServiceNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBaseComparisonBasicArray) ToServiceNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBaseComparisonBasicArrayOutput)
}

type ServiceNamingConditionConditionBaseComparisonBasicOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBaseComparisonBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) ToServiceNamingConditionConditionBaseComparisonBasicOutput() ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) ToServiceNamingConditionConditionBaseComparisonBasicOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseComparisonBasic) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// The type of comparison
func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseComparisonBasic) string { return v.Type }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionBaseComparisonBasicOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseComparisonBasic) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionBaseComparisonBasicArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBaseComparisonBasicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBaseComparisonBasic)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBaseComparisonBasicArrayOutput) ToServiceNamingConditionConditionBaseComparisonBasicArrayOutput() ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseComparisonBasicArrayOutput) ToServiceNamingConditionConditionBaseComparisonBasicArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseComparisonBasicArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseComparisonBasicArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionBaseComparisonBasicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionBaseComparisonBasic {
		return vs[0].([]ServiceNamingConditionConditionBaseComparisonBasic)[vs[1].(int)]
	}).(ServiceNamingConditionConditionBaseComparisonBasicOutput)
}

type ServiceNamingConditionConditionBaseConditionKey struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// Defines the actual set of fields depending on the value
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionBaseConditionKeyInput is an input type that accepts ServiceNamingConditionConditionBaseConditionKeyArgs and ServiceNamingConditionConditionBaseConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBaseConditionKeyInput` via:
//
//	ServiceNamingConditionConditionBaseConditionKeyArgs{...}
type ServiceNamingConditionConditionBaseConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBaseConditionKeyOutput() ServiceNamingConditionConditionBaseConditionKeyOutput
	ToServiceNamingConditionConditionBaseConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionBaseConditionKeyOutput
}

type ServiceNamingConditionConditionBaseConditionKeyArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// Defines the actual set of fields depending on the value
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionBaseConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBaseConditionKeyArgs) ToServiceNamingConditionConditionBaseConditionKeyOutput() ServiceNamingConditionConditionBaseConditionKeyOutput {
	return i.ToServiceNamingConditionConditionBaseConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBaseConditionKeyArgs) ToServiceNamingConditionConditionBaseConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBaseConditionKeyOutput)
}

// ServiceNamingConditionConditionBaseConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionBaseConditionKeyArray and ServiceNamingConditionConditionBaseConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBaseConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionBaseConditionKeyArray{ ServiceNamingConditionConditionBaseConditionKeyArgs{...} }
type ServiceNamingConditionConditionBaseConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBaseConditionKeyArrayOutput() ServiceNamingConditionConditionBaseConditionKeyArrayOutput
	ToServiceNamingConditionConditionBaseConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionBaseConditionKeyArrayOutput
}

type ServiceNamingConditionConditionBaseConditionKeyArray []ServiceNamingConditionConditionBaseConditionKeyInput

func (ServiceNamingConditionConditionBaseConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBaseConditionKeyArray) ToServiceNamingConditionConditionBaseConditionKeyArrayOutput() ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionBaseConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBaseConditionKeyArray) ToServiceNamingConditionConditionBaseConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBaseConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionBaseConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBaseConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBaseConditionKeyOutput) ToServiceNamingConditionConditionBaseConditionKeyOutput() ServiceNamingConditionConditionBaseConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseConditionKeyOutput) ToServiceNamingConditionConditionBaseConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseConditionKeyOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionBaseConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

// Defines the actual set of fields depending on the value
func (o ServiceNamingConditionConditionBaseConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionBaseConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBaseConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionBaseConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBaseConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBaseConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBaseConditionKeyArrayOutput) ToServiceNamingConditionConditionBaseConditionKeyArrayOutput() ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseConditionKeyArrayOutput) ToServiceNamingConditionConditionBaseConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBaseConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBaseConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionBaseConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionBaseConditionKey {
		return vs[0].([]ServiceNamingConditionConditionBaseConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionBaseConditionKeyOutput)
}

type ServiceNamingConditionConditionBitness struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are 32 and 64.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionBitnessInput is an input type that accepts ServiceNamingConditionConditionBitnessArgs and ServiceNamingConditionConditionBitnessOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBitnessInput` via:
//
//	ServiceNamingConditionConditionBitnessArgs{...}
type ServiceNamingConditionConditionBitnessInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBitnessOutput() ServiceNamingConditionConditionBitnessOutput
	ToServiceNamingConditionConditionBitnessOutputWithContext(context.Context) ServiceNamingConditionConditionBitnessOutput
}

type ServiceNamingConditionConditionBitnessArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are 32 and 64.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionBitnessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBitness)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBitnessArgs) ToServiceNamingConditionConditionBitnessOutput() ServiceNamingConditionConditionBitnessOutput {
	return i.ToServiceNamingConditionConditionBitnessOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBitnessArgs) ToServiceNamingConditionConditionBitnessOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBitnessOutput)
}

// ServiceNamingConditionConditionBitnessArrayInput is an input type that accepts ServiceNamingConditionConditionBitnessArray and ServiceNamingConditionConditionBitnessArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBitnessArrayInput` via:
//
//	ServiceNamingConditionConditionBitnessArray{ ServiceNamingConditionConditionBitnessArgs{...} }
type ServiceNamingConditionConditionBitnessArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBitnessArrayOutput() ServiceNamingConditionConditionBitnessArrayOutput
	ToServiceNamingConditionConditionBitnessArrayOutputWithContext(context.Context) ServiceNamingConditionConditionBitnessArrayOutput
}

type ServiceNamingConditionConditionBitnessArray []ServiceNamingConditionConditionBitnessInput

func (ServiceNamingConditionConditionBitnessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBitness)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBitnessArray) ToServiceNamingConditionConditionBitnessArrayOutput() ServiceNamingConditionConditionBitnessArrayOutput {
	return i.ToServiceNamingConditionConditionBitnessArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBitnessArray) ToServiceNamingConditionConditionBitnessArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBitnessArrayOutput)
}

type ServiceNamingConditionConditionBitnessOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBitnessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBitness)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBitnessOutput) ToServiceNamingConditionConditionBitnessOutput() ServiceNamingConditionConditionBitnessOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessOutput) ToServiceNamingConditionConditionBitnessOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionBitnessOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitness) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionBitnessOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitness) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionBitnessOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitness) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are 32 and 64.
func (o ServiceNamingConditionConditionBitnessOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitness) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionBitnessArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBitnessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBitness)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBitnessArrayOutput) ToServiceNamingConditionConditionBitnessArrayOutput() ServiceNamingConditionConditionBitnessArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessArrayOutput) ToServiceNamingConditionConditionBitnessArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionBitnessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionBitness {
		return vs[0].([]ServiceNamingConditionConditionBitness)[vs[1].(int)]
	}).(ServiceNamingConditionConditionBitnessOutput)
}

type ServiceNamingConditionConditionBitnessComparision struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be BITNESS
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are 32 and 64.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionBitnessComparisionInput is an input type that accepts ServiceNamingConditionConditionBitnessComparisionArgs and ServiceNamingConditionConditionBitnessComparisionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBitnessComparisionInput` via:
//
//	ServiceNamingConditionConditionBitnessComparisionArgs{...}
type ServiceNamingConditionConditionBitnessComparisionInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBitnessComparisionOutput() ServiceNamingConditionConditionBitnessComparisionOutput
	ToServiceNamingConditionConditionBitnessComparisionOutputWithContext(context.Context) ServiceNamingConditionConditionBitnessComparisionOutput
}

type ServiceNamingConditionConditionBitnessComparisionArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be BITNESS
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are 32 and 64.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionBitnessComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBitnessComparisionArgs) ToServiceNamingConditionConditionBitnessComparisionOutput() ServiceNamingConditionConditionBitnessComparisionOutput {
	return i.ToServiceNamingConditionConditionBitnessComparisionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBitnessComparisionArgs) ToServiceNamingConditionConditionBitnessComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBitnessComparisionOutput)
}

// ServiceNamingConditionConditionBitnessComparisionArrayInput is an input type that accepts ServiceNamingConditionConditionBitnessComparisionArray and ServiceNamingConditionConditionBitnessComparisionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionBitnessComparisionArrayInput` via:
//
//	ServiceNamingConditionConditionBitnessComparisionArray{ ServiceNamingConditionConditionBitnessComparisionArgs{...} }
type ServiceNamingConditionConditionBitnessComparisionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionBitnessComparisionArrayOutput() ServiceNamingConditionConditionBitnessComparisionArrayOutput
	ToServiceNamingConditionConditionBitnessComparisionArrayOutputWithContext(context.Context) ServiceNamingConditionConditionBitnessComparisionArrayOutput
}

type ServiceNamingConditionConditionBitnessComparisionArray []ServiceNamingConditionConditionBitnessComparisionInput

func (ServiceNamingConditionConditionBitnessComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionBitnessComparisionArray) ToServiceNamingConditionConditionBitnessComparisionArrayOutput() ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return i.ToServiceNamingConditionConditionBitnessComparisionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionBitnessComparisionArray) ToServiceNamingConditionConditionBitnessComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionBitnessComparisionArrayOutput)
}

type ServiceNamingConditionConditionBitnessComparisionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBitnessComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBitnessComparisionOutput) ToServiceNamingConditionConditionBitnessComparisionOutput() ServiceNamingConditionConditionBitnessComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessComparisionOutput) ToServiceNamingConditionConditionBitnessComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessComparisionOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionBitnessComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionBitnessComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be BITNESS
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionBitnessComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionBitnessComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are 32 and 64.
func (o ServiceNamingConditionConditionBitnessComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionBitnessComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionBitnessComparisionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionBitnessComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionBitnessComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionBitnessComparisionArrayOutput) ToServiceNamingConditionConditionBitnessComparisionArrayOutput() ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessComparisionArrayOutput) ToServiceNamingConditionConditionBitnessComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionBitnessComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionBitnessComparisionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionBitnessComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionBitnessComparision {
		return vs[0].([]ServiceNamingConditionConditionBitnessComparision)[vs[1].(int)]
	}).(ServiceNamingConditionConditionBitnessComparisionOutput)
}

type ServiceNamingConditionConditionCloudType struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionCloudTypeInput is an input type that accepts ServiceNamingConditionConditionCloudTypeArgs and ServiceNamingConditionConditionCloudTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCloudTypeInput` via:
//
//	ServiceNamingConditionConditionCloudTypeArgs{...}
type ServiceNamingConditionConditionCloudTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCloudTypeOutput() ServiceNamingConditionConditionCloudTypeOutput
	ToServiceNamingConditionConditionCloudTypeOutputWithContext(context.Context) ServiceNamingConditionConditionCloudTypeOutput
}

type ServiceNamingConditionConditionCloudTypeArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionCloudTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCloudType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCloudTypeArgs) ToServiceNamingConditionConditionCloudTypeOutput() ServiceNamingConditionConditionCloudTypeOutput {
	return i.ToServiceNamingConditionConditionCloudTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCloudTypeArgs) ToServiceNamingConditionConditionCloudTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCloudTypeOutput)
}

// ServiceNamingConditionConditionCloudTypeArrayInput is an input type that accepts ServiceNamingConditionConditionCloudTypeArray and ServiceNamingConditionConditionCloudTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCloudTypeArrayInput` via:
//
//	ServiceNamingConditionConditionCloudTypeArray{ ServiceNamingConditionConditionCloudTypeArgs{...} }
type ServiceNamingConditionConditionCloudTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCloudTypeArrayOutput() ServiceNamingConditionConditionCloudTypeArrayOutput
	ToServiceNamingConditionConditionCloudTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCloudTypeArrayOutput
}

type ServiceNamingConditionConditionCloudTypeArray []ServiceNamingConditionConditionCloudTypeInput

func (ServiceNamingConditionConditionCloudTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCloudType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCloudTypeArray) ToServiceNamingConditionConditionCloudTypeArrayOutput() ServiceNamingConditionConditionCloudTypeArrayOutput {
	return i.ToServiceNamingConditionConditionCloudTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCloudTypeArray) ToServiceNamingConditionConditionCloudTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCloudTypeArrayOutput)
}

type ServiceNamingConditionConditionCloudTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCloudTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCloudType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCloudTypeOutput) ToServiceNamingConditionConditionCloudTypeOutput() ServiceNamingConditionConditionCloudTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeOutput) ToServiceNamingConditionConditionCloudTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionCloudTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionCloudTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudType) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCloudTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
func (o ServiceNamingConditionConditionCloudTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCloudTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCloudTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCloudType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCloudTypeArrayOutput) ToServiceNamingConditionConditionCloudTypeArrayOutput() ServiceNamingConditionConditionCloudTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeArrayOutput) ToServiceNamingConditionConditionCloudTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCloudTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCloudType {
		return vs[0].([]ServiceNamingConditionConditionCloudType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCloudTypeOutput)
}

type ServiceNamingConditionConditionCloudTypeComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be CLOUD_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionCloudTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionCloudTypeComparisonArgs and ServiceNamingConditionConditionCloudTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCloudTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionCloudTypeComparisonArgs{...}
type ServiceNamingConditionConditionCloudTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCloudTypeComparisonOutput() ServiceNamingConditionConditionCloudTypeComparisonOutput
	ToServiceNamingConditionConditionCloudTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionCloudTypeComparisonOutput
}

type ServiceNamingConditionConditionCloudTypeComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be CLOUD_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionCloudTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCloudTypeComparisonArgs) ToServiceNamingConditionConditionCloudTypeComparisonOutput() ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionCloudTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCloudTypeComparisonArgs) ToServiceNamingConditionConditionCloudTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCloudTypeComparisonOutput)
}

// ServiceNamingConditionConditionCloudTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionCloudTypeComparisonArray and ServiceNamingConditionConditionCloudTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCloudTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionCloudTypeComparisonArray{ ServiceNamingConditionConditionCloudTypeComparisonArgs{...} }
type ServiceNamingConditionConditionCloudTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCloudTypeComparisonArrayOutput() ServiceNamingConditionConditionCloudTypeComparisonArrayOutput
	ToServiceNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCloudTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionCloudTypeComparisonArray []ServiceNamingConditionConditionCloudTypeComparisonInput

func (ServiceNamingConditionConditionCloudTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCloudTypeComparisonArray) ToServiceNamingConditionConditionCloudTypeComparisonArrayOutput() ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCloudTypeComparisonArray) ToServiceNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCloudTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionCloudTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCloudTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) ToServiceNamingConditionConditionCloudTypeComparisonOutput() ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) ToServiceNamingConditionConditionCloudTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be CLOUD_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AZURE, EC2, GOOGLE_CLOUD_PLATFORM, OPENSTACK, ORACLE and UNRECOGNIZED.
func (o ServiceNamingConditionConditionCloudTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCloudTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCloudTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCloudTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCloudTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCloudTypeComparisonArrayOutput) ToServiceNamingConditionConditionCloudTypeComparisonArrayOutput() ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeComparisonArrayOutput) ToServiceNamingConditionConditionCloudTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCloudTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCloudTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCloudTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCloudTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionCloudTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCloudTypeComparisonOutput)
}

type ServiceNamingConditionConditionComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// The type of comparison
	Type string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionComparisonInput is an input type that accepts ServiceNamingConditionConditionComparisonArgs and ServiceNamingConditionConditionComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionComparisonInput` via:
//
//	ServiceNamingConditionConditionComparisonArgs{...}
type ServiceNamingConditionConditionComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionComparisonOutput() ServiceNamingConditionConditionComparisonOutput
	ToServiceNamingConditionConditionComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionComparisonOutput
}

type ServiceNamingConditionConditionComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// The type of comparison
	Type pulumi.StringInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionComparisonArgs) ToServiceNamingConditionConditionComparisonOutput() ServiceNamingConditionConditionComparisonOutput {
	return i.ToServiceNamingConditionConditionComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionComparisonArgs) ToServiceNamingConditionConditionComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionComparisonOutput)
}

// ServiceNamingConditionConditionComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionComparisonArray and ServiceNamingConditionConditionComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionComparisonArray{ ServiceNamingConditionConditionComparisonArgs{...} }
type ServiceNamingConditionConditionComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionComparisonArrayOutput() ServiceNamingConditionConditionComparisonArrayOutput
	ToServiceNamingConditionConditionComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionComparisonArrayOutput
}

type ServiceNamingConditionConditionComparisonArray []ServiceNamingConditionConditionComparisonInput

func (ServiceNamingConditionConditionComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionComparisonArray) ToServiceNamingConditionConditionComparisonArrayOutput() ServiceNamingConditionConditionComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionComparisonArray) ToServiceNamingConditionConditionComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionComparisonArrayOutput)
}

type ServiceNamingConditionConditionComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionComparisonOutput) ToServiceNamingConditionConditionComparisonOutput() ServiceNamingConditionConditionComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionComparisonOutput) ToServiceNamingConditionConditionComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// The type of comparison
func (o ServiceNamingConditionConditionComparisonOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionComparison) string { return v.Type }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionComparisonArrayOutput) ToServiceNamingConditionConditionComparisonArrayOutput() ServiceNamingConditionConditionComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionComparisonArrayOutput) ToServiceNamingConditionConditionComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionComparison {
		return vs[0].([]ServiceNamingConditionConditionComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionComparisonOutput)
}

type ServiceNamingConditionConditionCustomApplicationType struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionCustomApplicationTypeInput is an input type that accepts ServiceNamingConditionConditionCustomApplicationTypeArgs and ServiceNamingConditionConditionCustomApplicationTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomApplicationTypeInput` via:
//
//	ServiceNamingConditionConditionCustomApplicationTypeArgs{...}
type ServiceNamingConditionConditionCustomApplicationTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomApplicationTypeOutput() ServiceNamingConditionConditionCustomApplicationTypeOutput
	ToServiceNamingConditionConditionCustomApplicationTypeOutputWithContext(context.Context) ServiceNamingConditionConditionCustomApplicationTypeOutput
}

type ServiceNamingConditionConditionCustomApplicationTypeArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionCustomApplicationTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomApplicationTypeArgs) ToServiceNamingConditionConditionCustomApplicationTypeOutput() ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return i.ToServiceNamingConditionConditionCustomApplicationTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomApplicationTypeArgs) ToServiceNamingConditionConditionCustomApplicationTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomApplicationTypeOutput)
}

// ServiceNamingConditionConditionCustomApplicationTypeArrayInput is an input type that accepts ServiceNamingConditionConditionCustomApplicationTypeArray and ServiceNamingConditionConditionCustomApplicationTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomApplicationTypeArrayInput` via:
//
//	ServiceNamingConditionConditionCustomApplicationTypeArray{ ServiceNamingConditionConditionCustomApplicationTypeArgs{...} }
type ServiceNamingConditionConditionCustomApplicationTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomApplicationTypeArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeArrayOutput
	ToServiceNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomApplicationTypeArrayOutput
}

type ServiceNamingConditionConditionCustomApplicationTypeArray []ServiceNamingConditionConditionCustomApplicationTypeInput

func (ServiceNamingConditionConditionCustomApplicationTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomApplicationTypeArray) ToServiceNamingConditionConditionCustomApplicationTypeArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return i.ToServiceNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomApplicationTypeArray) ToServiceNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomApplicationTypeArrayOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomApplicationTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) ToServiceNamingConditionConditionCustomApplicationTypeOutput() ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) ToServiceNamingConditionConditionCustomApplicationTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationType) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
func (o ServiceNamingConditionConditionCustomApplicationTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomApplicationTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomApplicationType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomApplicationTypeArrayOutput) ToServiceNamingConditionConditionCustomApplicationTypeArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeArrayOutput) ToServiceNamingConditionConditionCustomApplicationTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomApplicationTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomApplicationType {
		return vs[0].([]ServiceNamingConditionConditionCustomApplicationType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomApplicationTypeOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be CUSTOM_APPLICATION_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionCustomApplicationTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs and ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomApplicationTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs{...}
type ServiceNamingConditionConditionCustomApplicationTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput
	ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput
}

type ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be CUSTOM_APPLICATION_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs) ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs) ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput)
}

// ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionCustomApplicationTypeComparisonArray and ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionCustomApplicationTypeComparisonArray{ ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs{...} }
type ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput
	ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionCustomApplicationTypeComparisonArray []ServiceNamingConditionConditionCustomApplicationTypeComparisonInput

func (ServiceNamingConditionConditionCustomApplicationTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomApplicationTypeComparisonArray) ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomApplicationTypeComparisonArray) ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) ToServiceNamingConditionConditionCustomApplicationTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be CUSTOM_APPLICATION_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AMAZON_ECHO, DESKTOP, EMBEDDED, IOT, MICROSOFT_HOLOLENS and UFO.
func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomApplicationTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomApplicationTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput() ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) ToServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomApplicationTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionCustomApplicationTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput)
}

type ServiceNamingConditionConditionCustomHostMetadata struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
	DynamicKey ServiceNamingConditionConditionCustomHostMetadataDynamicKey `pulumi:"dynamicKey"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomHostMetadataInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataArgs and ServiceNamingConditionConditionCustomHostMetadataOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataArgs{...}
type ServiceNamingConditionConditionCustomHostMetadataInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataOutput() ServiceNamingConditionConditionCustomHostMetadataOutput
	ToServiceNamingConditionConditionCustomHostMetadataOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataOutput
}

type ServiceNamingConditionConditionCustomHostMetadataArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
	DynamicKey ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput `pulumi:"dynamicKey"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomHostMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataArgs) ToServiceNamingConditionConditionCustomHostMetadataOutput() ServiceNamingConditionConditionCustomHostMetadataOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataArgs) ToServiceNamingConditionConditionCustomHostMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataOutput)
}

// ServiceNamingConditionConditionCustomHostMetadataArrayInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataArray and ServiceNamingConditionConditionCustomHostMetadataArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataArrayInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataArray{ ServiceNamingConditionConditionCustomHostMetadataArgs{...} }
type ServiceNamingConditionConditionCustomHostMetadataArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataArrayOutput() ServiceNamingConditionConditionCustomHostMetadataArrayOutput
	ToServiceNamingConditionConditionCustomHostMetadataArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataArrayOutput
}

type ServiceNamingConditionConditionCustomHostMetadataArray []ServiceNamingConditionConditionCustomHostMetadataInput

func (ServiceNamingConditionConditionCustomHostMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataArray) ToServiceNamingConditionConditionCustomHostMetadataArrayOutput() ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataArray) ToServiceNamingConditionConditionCustomHostMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataArrayOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataOutput) ToServiceNamingConditionConditionCustomHostMetadataOutput() ServiceNamingConditionConditionCustomHostMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataOutput) ToServiceNamingConditionConditionCustomHostMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionCustomHostMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
func (o ServiceNamingConditionConditionCustomHostMetadataOutput) DynamicKey() ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadata) ServiceNamingConditionConditionCustomHostMetadataDynamicKey {
		return v.DynamicKey
	}).(ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomHostMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomHostMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataArrayOutput) ToServiceNamingConditionConditionCustomHostMetadataArrayOutput() ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataArrayOutput) ToServiceNamingConditionConditionCustomHostMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomHostMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomHostMetadata {
		return vs[0].([]ServiceNamingConditionConditionCustomHostMetadata)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomHostMetadataOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKey struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
	DynamicKey ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey `pulumi:"dynamicKey"`
	// if specified, needs to be HOST_CUSTOM_METADATA_KEY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs and ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs{...}
type ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput
	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
	DynamicKey ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput `pulumi:"dynamicKey"`
	// if specified, needs to be HOST_CUSTOM_METADATA_KEY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput)
}

// ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray and ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray{ ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs{...} }
type ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput
	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray []ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) DynamicKey() ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKey) ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey {
		return v.DynamicKey
	}).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput)
}

// if specified, needs to be HOST_CUSTOM_METADATA_KEY
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomHostMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomHostMetadataConditionKey {
		return vs[0].([]ServiceNamingConditionConditionCustomHostMetadataConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey struct {
	// The actual key of the custom metadata
	Key string `pulumi:"key"`
	// The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
	Source string `pulumi:"source"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs and ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs{...}
type ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput
	ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs struct {
	// The actual key of the custom metadata
	Key pulumi.StringInput `pulumi:"key"`
	// The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
	Source pulumi.StringInput `pulumi:"source"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput {
	return o
}

// The actual key of the custom metadata
func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

// The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) string {
		return v.Source
	}).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKey) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataDynamicKey struct {
	// The actual key of the custom metadata
	Key string `pulumi:"key"`
	// The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
	Source string `pulumi:"source"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput is an input type that accepts ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs and ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput` via:
//
//	ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs{...}
type ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput
	ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput
}

type ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs struct {
	// The actual key of the custom metadata
	Key pulumi.StringInput `pulumi:"key"`
	// The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
	Source pulumi.StringInput `pulumi:"source"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataDynamicKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return i.ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs) ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput)
}

type ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataDynamicKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) ToServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput {
	return o
}

// The actual key of the custom metadata
func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

// The source of the custom metadata. Possible values are ENVIRONMENT, GOOGLE_COMPUTE_ENGINE and PLUGIN
func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomHostMetadataDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadata struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
	DynamicKey ServiceNamingConditionConditionCustomProcessMetadataDynamicKey `pulumi:"dynamicKey"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomProcessMetadataInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataArgs and ServiceNamingConditionConditionCustomProcessMetadataOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataArgs{...}
type ServiceNamingConditionConditionCustomProcessMetadataInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataOutput() ServiceNamingConditionConditionCustomProcessMetadataOutput
	ToServiceNamingConditionConditionCustomProcessMetadataOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
	DynamicKey ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput `pulumi:"dynamicKey"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomProcessMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataArgs) ToServiceNamingConditionConditionCustomProcessMetadataOutput() ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataArgs) ToServiceNamingConditionConditionCustomProcessMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataOutput)
}

// ServiceNamingConditionConditionCustomProcessMetadataArrayInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataArray and ServiceNamingConditionConditionCustomProcessMetadataArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataArrayInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataArray{ ServiceNamingConditionConditionCustomProcessMetadataArgs{...} }
type ServiceNamingConditionConditionCustomProcessMetadataArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataArrayOutput
	ToServiceNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataArrayOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataArray []ServiceNamingConditionConditionCustomProcessMetadataInput

func (ServiceNamingConditionConditionCustomProcessMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataArray) ToServiceNamingConditionConditionCustomProcessMetadataArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataArray) ToServiceNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataArrayOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) ToServiceNamingConditionConditionCustomProcessMetadataOutput() ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) ToServiceNamingConditionConditionCustomProcessMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) DynamicKey() ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadata) ServiceNamingConditionConditionCustomProcessMetadataDynamicKey {
		return v.DynamicKey
	}).(ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomProcessMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomProcessMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataArrayOutput) ToServiceNamingConditionConditionCustomProcessMetadataArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataArrayOutput) ToServiceNamingConditionConditionCustomProcessMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomProcessMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomProcessMetadata {
		return vs[0].([]ServiceNamingConditionConditionCustomProcessMetadata)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomProcessMetadataOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKey struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
	DynamicKey ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey `pulumi:"dynamicKey"`
	// if specified, needs to be PROCESS_CUSTOM_METADATA_KEY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs and ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs{...}
type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput
	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
	DynamicKey ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput `pulumi:"dynamicKey"`
	// if specified, needs to be PROCESS_CUSTOM_METADATA_KEY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput)
}

// ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray and ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray{ ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs{...} }
type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput
	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray []ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key
func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) DynamicKey() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKey) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey {
		return v.DynamicKey
	}).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput)
}

// if specified, needs to be PROCESS_CUSTOM_METADATA_KEY
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionCustomProcessMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionCustomProcessMetadataConditionKey {
		return vs[0].([]ServiceNamingConditionConditionCustomProcessMetadataConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey struct {
	// The actual key of the custom metadata
	Key string `pulumi:"key"`
	// The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
	Source string `pulumi:"source"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs and ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs{...}
type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput
	ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs struct {
	// The actual key of the custom metadata
	Key pulumi.StringInput `pulumi:"key"`
	// The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
	Source pulumi.StringInput `pulumi:"source"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput {
	return o
}

// The actual key of the custom metadata
func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) string {
		return v.Source
	}).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKey) *string {
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataDynamicKey struct {
	// The actual key of the custom metadata
	Key string `pulumi:"key"`
	// The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
	Source string `pulumi:"source"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput is an input type that accepts ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs and ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput` via:
//
//	ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs{...}
type ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput
	ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(context.Context) ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput
}

type ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs struct {
	// The actual key of the custom metadata
	Key pulumi.StringInput `pulumi:"key"`
	// The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
	Source pulumi.StringInput `pulumi:"source"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataDynamicKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return i.ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs) ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput)
}

type ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataDynamicKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput() ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) ToServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput {
	return o
}

// The actual key of the custom metadata
func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataDynamicKey) string { return v.Key }).(pulumi.StringOutput)
}

// The source of the custom metadata. Possible values are CLOUD_FOUNDRY, ENVIRONMENT, GOOGLE_CLOUD, KUBERNETES and PLUGIN
func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataDynamicKey) string { return v.Source }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionCustomProcessMetadataDynamicKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDatabaseTopology struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionDatabaseTopologyInput is an input type that accepts ServiceNamingConditionConditionDatabaseTopologyArgs and ServiceNamingConditionConditionDatabaseTopologyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDatabaseTopologyInput` via:
//
//	ServiceNamingConditionConditionDatabaseTopologyArgs{...}
type ServiceNamingConditionConditionDatabaseTopologyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDatabaseTopologyOutput() ServiceNamingConditionConditionDatabaseTopologyOutput
	ToServiceNamingConditionConditionDatabaseTopologyOutputWithContext(context.Context) ServiceNamingConditionConditionDatabaseTopologyOutput
}

type ServiceNamingConditionConditionDatabaseTopologyArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionDatabaseTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDatabaseTopologyArgs) ToServiceNamingConditionConditionDatabaseTopologyOutput() ServiceNamingConditionConditionDatabaseTopologyOutput {
	return i.ToServiceNamingConditionConditionDatabaseTopologyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDatabaseTopologyArgs) ToServiceNamingConditionConditionDatabaseTopologyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDatabaseTopologyOutput)
}

// ServiceNamingConditionConditionDatabaseTopologyArrayInput is an input type that accepts ServiceNamingConditionConditionDatabaseTopologyArray and ServiceNamingConditionConditionDatabaseTopologyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDatabaseTopologyArrayInput` via:
//
//	ServiceNamingConditionConditionDatabaseTopologyArray{ ServiceNamingConditionConditionDatabaseTopologyArgs{...} }
type ServiceNamingConditionConditionDatabaseTopologyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDatabaseTopologyArrayOutput() ServiceNamingConditionConditionDatabaseTopologyArrayOutput
	ToServiceNamingConditionConditionDatabaseTopologyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionDatabaseTopologyArrayOutput
}

type ServiceNamingConditionConditionDatabaseTopologyArray []ServiceNamingConditionConditionDatabaseTopologyInput

func (ServiceNamingConditionConditionDatabaseTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDatabaseTopologyArray) ToServiceNamingConditionConditionDatabaseTopologyArrayOutput() ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return i.ToServiceNamingConditionConditionDatabaseTopologyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDatabaseTopologyArray) ToServiceNamingConditionConditionDatabaseTopologyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDatabaseTopologyArrayOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDatabaseTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDatabaseTopologyOutput) ToServiceNamingConditionConditionDatabaseTopologyOutput() ServiceNamingConditionConditionDatabaseTopologyOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyOutput) ToServiceNamingConditionConditionDatabaseTopologyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionDatabaseTopologyOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopology) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionDatabaseTopologyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopology) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionDatabaseTopologyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopology) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
func (o ServiceNamingConditionConditionDatabaseTopologyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopology) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDatabaseTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDatabaseTopology)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDatabaseTopologyArrayOutput) ToServiceNamingConditionConditionDatabaseTopologyArrayOutput() ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyArrayOutput) ToServiceNamingConditionConditionDatabaseTopologyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionDatabaseTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionDatabaseTopology {
		return vs[0].([]ServiceNamingConditionConditionDatabaseTopology)[vs[1].(int)]
	}).(ServiceNamingConditionConditionDatabaseTopologyOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be DATABASE_TOPOLOGY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionDatabaseTopologyComparisonInput is an input type that accepts ServiceNamingConditionConditionDatabaseTopologyComparisonArgs and ServiceNamingConditionConditionDatabaseTopologyComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDatabaseTopologyComparisonInput` via:
//
//	ServiceNamingConditionConditionDatabaseTopologyComparisonArgs{...}
type ServiceNamingConditionConditionDatabaseTopologyComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDatabaseTopologyComparisonOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonOutput
	ToServiceNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonOutput
}

type ServiceNamingConditionConditionDatabaseTopologyComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be DATABASE_TOPOLOGY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionDatabaseTopologyComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDatabaseTopologyComparisonArgs) ToServiceNamingConditionConditionDatabaseTopologyComparisonOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return i.ToServiceNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDatabaseTopologyComparisonArgs) ToServiceNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDatabaseTopologyComparisonOutput)
}

// ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionDatabaseTopologyComparisonArray and ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionDatabaseTopologyComparisonArray{ ServiceNamingConditionConditionDatabaseTopologyComparisonArgs{...} }
type ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput
	ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput
}

type ServiceNamingConditionConditionDatabaseTopologyComparisonArray []ServiceNamingConditionConditionDatabaseTopologyComparisonInput

func (ServiceNamingConditionConditionDatabaseTopologyComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDatabaseTopologyComparisonArray) ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDatabaseTopologyComparisonArray) ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) ToServiceNamingConditionConditionDatabaseTopologyComparisonOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) ToServiceNamingConditionConditionDatabaseTopologyComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be DATABASE_TOPOLOGY
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are CLUSTER, EMBEDDED, FAILOVER, IPC, LOAD_BALANCING, SINGLE_SERVER and UNSPECIFIED.
func (o ServiceNamingConditionConditionDatabaseTopologyComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDatabaseTopologyComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDatabaseTopologyComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput() ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput) ToServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionDatabaseTopologyComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionDatabaseTopologyComparison {
		return vs[0].([]ServiceNamingConditionConditionDatabaseTopologyComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionDatabaseTopologyComparisonOutput)
}

type ServiceNamingConditionConditionDcrumDecoder struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionDcrumDecoderInput is an input type that accepts ServiceNamingConditionConditionDcrumDecoderArgs and ServiceNamingConditionConditionDcrumDecoderOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDcrumDecoderInput` via:
//
//	ServiceNamingConditionConditionDcrumDecoderArgs{...}
type ServiceNamingConditionConditionDcrumDecoderInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDcrumDecoderOutput() ServiceNamingConditionConditionDcrumDecoderOutput
	ToServiceNamingConditionConditionDcrumDecoderOutputWithContext(context.Context) ServiceNamingConditionConditionDcrumDecoderOutput
}

type ServiceNamingConditionConditionDcrumDecoderArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionDcrumDecoderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDcrumDecoderArgs) ToServiceNamingConditionConditionDcrumDecoderOutput() ServiceNamingConditionConditionDcrumDecoderOutput {
	return i.ToServiceNamingConditionConditionDcrumDecoderOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDcrumDecoderArgs) ToServiceNamingConditionConditionDcrumDecoderOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDcrumDecoderOutput)
}

// ServiceNamingConditionConditionDcrumDecoderArrayInput is an input type that accepts ServiceNamingConditionConditionDcrumDecoderArray and ServiceNamingConditionConditionDcrumDecoderArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDcrumDecoderArrayInput` via:
//
//	ServiceNamingConditionConditionDcrumDecoderArray{ ServiceNamingConditionConditionDcrumDecoderArgs{...} }
type ServiceNamingConditionConditionDcrumDecoderArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDcrumDecoderArrayOutput() ServiceNamingConditionConditionDcrumDecoderArrayOutput
	ToServiceNamingConditionConditionDcrumDecoderArrayOutputWithContext(context.Context) ServiceNamingConditionConditionDcrumDecoderArrayOutput
}

type ServiceNamingConditionConditionDcrumDecoderArray []ServiceNamingConditionConditionDcrumDecoderInput

func (ServiceNamingConditionConditionDcrumDecoderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDcrumDecoderArray) ToServiceNamingConditionConditionDcrumDecoderArrayOutput() ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return i.ToServiceNamingConditionConditionDcrumDecoderArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDcrumDecoderArray) ToServiceNamingConditionConditionDcrumDecoderArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDcrumDecoderArrayOutput)
}

type ServiceNamingConditionConditionDcrumDecoderOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDcrumDecoderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDcrumDecoderOutput) ToServiceNamingConditionConditionDcrumDecoderOutput() ServiceNamingConditionConditionDcrumDecoderOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderOutput) ToServiceNamingConditionConditionDcrumDecoderOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionDcrumDecoderOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoder) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionDcrumDecoderOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoder) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionDcrumDecoderOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoder) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
func (o ServiceNamingConditionConditionDcrumDecoderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoder) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDcrumDecoderArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDcrumDecoderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDcrumDecoder)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDcrumDecoderArrayOutput) ToServiceNamingConditionConditionDcrumDecoderArrayOutput() ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderArrayOutput) ToServiceNamingConditionConditionDcrumDecoderArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionDcrumDecoderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionDcrumDecoder {
		return vs[0].([]ServiceNamingConditionConditionDcrumDecoder)[vs[1].(int)]
	}).(ServiceNamingConditionConditionDcrumDecoderOutput)
}

type ServiceNamingConditionConditionDcrumDecoderComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be DCRUM_DECODER_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionDcrumDecoderComparisonInput is an input type that accepts ServiceNamingConditionConditionDcrumDecoderComparisonArgs and ServiceNamingConditionConditionDcrumDecoderComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDcrumDecoderComparisonInput` via:
//
//	ServiceNamingConditionConditionDcrumDecoderComparisonArgs{...}
type ServiceNamingConditionConditionDcrumDecoderComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDcrumDecoderComparisonOutput() ServiceNamingConditionConditionDcrumDecoderComparisonOutput
	ToServiceNamingConditionConditionDcrumDecoderComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonOutput
}

type ServiceNamingConditionConditionDcrumDecoderComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be DCRUM_DECODER_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionDcrumDecoderComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDcrumDecoderComparisonArgs) ToServiceNamingConditionConditionDcrumDecoderComparisonOutput() ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return i.ToServiceNamingConditionConditionDcrumDecoderComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDcrumDecoderComparisonArgs) ToServiceNamingConditionConditionDcrumDecoderComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDcrumDecoderComparisonOutput)
}

// ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionDcrumDecoderComparisonArray and ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionDcrumDecoderComparisonArray{ ServiceNamingConditionConditionDcrumDecoderComparisonArgs{...} }
type ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput() ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput
	ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput
}

type ServiceNamingConditionConditionDcrumDecoderComparisonArray []ServiceNamingConditionConditionDcrumDecoderComparisonInput

func (ServiceNamingConditionConditionDcrumDecoderComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionDcrumDecoderComparisonArray) ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput() ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionDcrumDecoderComparisonArray) ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput)
}

type ServiceNamingConditionConditionDcrumDecoderComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDcrumDecoderComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) ToServiceNamingConditionConditionDcrumDecoderComparisonOutput() ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) ToServiceNamingConditionConditionDcrumDecoderComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be DCRUM_DECODER_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are ALL_OTHER, CITRIX_APPFLOW, CITRIX_ICA, CITRIX_ICA_OVER_SSL, DB2_DRDA, HTTP, HTTPS, HTTP_EXPRESS, INFORMIX, MYSQL, ORACLE, SAP_GUI, SAP_GUI_OVER_HTTP, SAP_GUI_OVER_HTTPS, SAP_HANA_DB, SAP_RFC, SSL and TDS.
func (o ServiceNamingConditionConditionDcrumDecoderComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionDcrumDecoderComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionDcrumDecoderComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput) ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput() ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput) ToServiceNamingConditionConditionDcrumDecoderComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionDcrumDecoderComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionDcrumDecoderComparison {
		return vs[0].([]ServiceNamingConditionConditionDcrumDecoderComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionDcrumDecoderComparisonOutput)
}

type ServiceNamingConditionConditionEntity struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionEntityInput is an input type that accepts ServiceNamingConditionConditionEntityArgs and ServiceNamingConditionConditionEntityOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionEntityInput` via:
//
//	ServiceNamingConditionConditionEntityArgs{...}
type ServiceNamingConditionConditionEntityInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionEntityOutput() ServiceNamingConditionConditionEntityOutput
	ToServiceNamingConditionConditionEntityOutputWithContext(context.Context) ServiceNamingConditionConditionEntityOutput
}

type ServiceNamingConditionConditionEntityArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionEntity)(nil)).Elem()
}

func (i ServiceNamingConditionConditionEntityArgs) ToServiceNamingConditionConditionEntityOutput() ServiceNamingConditionConditionEntityOutput {
	return i.ToServiceNamingConditionConditionEntityOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionEntityArgs) ToServiceNamingConditionConditionEntityOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionEntityOutput)
}

// ServiceNamingConditionConditionEntityArrayInput is an input type that accepts ServiceNamingConditionConditionEntityArray and ServiceNamingConditionConditionEntityArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionEntityArrayInput` via:
//
//	ServiceNamingConditionConditionEntityArray{ ServiceNamingConditionConditionEntityArgs{...} }
type ServiceNamingConditionConditionEntityArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionEntityArrayOutput() ServiceNamingConditionConditionEntityArrayOutput
	ToServiceNamingConditionConditionEntityArrayOutputWithContext(context.Context) ServiceNamingConditionConditionEntityArrayOutput
}

type ServiceNamingConditionConditionEntityArray []ServiceNamingConditionConditionEntityInput

func (ServiceNamingConditionConditionEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionEntity)(nil)).Elem()
}

func (i ServiceNamingConditionConditionEntityArray) ToServiceNamingConditionConditionEntityArrayOutput() ServiceNamingConditionConditionEntityArrayOutput {
	return i.ToServiceNamingConditionConditionEntityArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionEntityArray) ToServiceNamingConditionConditionEntityArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionEntityArrayOutput)
}

type ServiceNamingConditionConditionEntityOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionEntity)(nil)).Elem()
}

func (o ServiceNamingConditionConditionEntityOutput) ToServiceNamingConditionConditionEntityOutput() ServiceNamingConditionConditionEntityOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityOutput) ToServiceNamingConditionConditionEntityOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionEntityOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntity) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionEntityOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntity) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionEntityOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntity) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionEntityOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntity) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionEntityArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionEntity)(nil)).Elem()
}

func (o ServiceNamingConditionConditionEntityArrayOutput) ToServiceNamingConditionConditionEntityArrayOutput() ServiceNamingConditionConditionEntityArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityArrayOutput) ToServiceNamingConditionConditionEntityArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionEntity {
		return vs[0].([]ServiceNamingConditionConditionEntity)[vs[1].(int)]
	}).(ServiceNamingConditionConditionEntityOutput)
}

type ServiceNamingConditionConditionEntityIdComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be ENTITY_ID
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionEntityIdComparisonInput is an input type that accepts ServiceNamingConditionConditionEntityIdComparisonArgs and ServiceNamingConditionConditionEntityIdComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionEntityIdComparisonInput` via:
//
//	ServiceNamingConditionConditionEntityIdComparisonArgs{...}
type ServiceNamingConditionConditionEntityIdComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionEntityIdComparisonOutput() ServiceNamingConditionConditionEntityIdComparisonOutput
	ToServiceNamingConditionConditionEntityIdComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionEntityIdComparisonOutput
}

type ServiceNamingConditionConditionEntityIdComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be ENTITY_ID
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionEntityIdComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionEntityIdComparisonArgs) ToServiceNamingConditionConditionEntityIdComparisonOutput() ServiceNamingConditionConditionEntityIdComparisonOutput {
	return i.ToServiceNamingConditionConditionEntityIdComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionEntityIdComparisonArgs) ToServiceNamingConditionConditionEntityIdComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityIdComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionEntityIdComparisonOutput)
}

// ServiceNamingConditionConditionEntityIdComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionEntityIdComparisonArray and ServiceNamingConditionConditionEntityIdComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionEntityIdComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionEntityIdComparisonArray{ ServiceNamingConditionConditionEntityIdComparisonArgs{...} }
type ServiceNamingConditionConditionEntityIdComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionEntityIdComparisonArrayOutput() ServiceNamingConditionConditionEntityIdComparisonArrayOutput
	ToServiceNamingConditionConditionEntityIdComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionEntityIdComparisonArrayOutput
}

type ServiceNamingConditionConditionEntityIdComparisonArray []ServiceNamingConditionConditionEntityIdComparisonInput

func (ServiceNamingConditionConditionEntityIdComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionEntityIdComparisonArray) ToServiceNamingConditionConditionEntityIdComparisonArrayOutput() ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionEntityIdComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionEntityIdComparisonArray) ToServiceNamingConditionConditionEntityIdComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionEntityIdComparisonArrayOutput)
}

type ServiceNamingConditionConditionEntityIdComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionEntityIdComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionEntityIdComparisonOutput) ToServiceNamingConditionConditionEntityIdComparisonOutput() ServiceNamingConditionConditionEntityIdComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityIdComparisonOutput) ToServiceNamingConditionConditionEntityIdComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityIdComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Currently only EQUALS is supported. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be ENTITY_ID
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionEntityIdComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionEntityIdComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionEntityIdComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionEntityIdComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionEntityIdComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionEntityIdComparisonArrayOutput) ToServiceNamingConditionConditionEntityIdComparisonArrayOutput() ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityIdComparisonArrayOutput) ToServiceNamingConditionConditionEntityIdComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionEntityIdComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionEntityIdComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionEntityIdComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionEntityIdComparison {
		return vs[0].([]ServiceNamingConditionConditionEntityIdComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionEntityIdComparisonOutput)
}

type ServiceNamingConditionConditionHostTech struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *ServiceNamingConditionConditionHostTechValue `pulumi:"value"`
}

// ServiceNamingConditionConditionHostTechInput is an input type that accepts ServiceNamingConditionConditionHostTechArgs and ServiceNamingConditionConditionHostTechOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHostTechInput` via:
//
//	ServiceNamingConditionConditionHostTechArgs{...}
type ServiceNamingConditionConditionHostTechInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHostTechOutput() ServiceNamingConditionConditionHostTechOutput
	ToServiceNamingConditionConditionHostTechOutputWithContext(context.Context) ServiceNamingConditionConditionHostTechOutput
}

type ServiceNamingConditionConditionHostTechArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value ServiceNamingConditionConditionHostTechValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionHostTechArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHostTech)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHostTechArgs) ToServiceNamingConditionConditionHostTechOutput() ServiceNamingConditionConditionHostTechOutput {
	return i.ToServiceNamingConditionConditionHostTechOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHostTechArgs) ToServiceNamingConditionConditionHostTechOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechOutput)
}

// ServiceNamingConditionConditionHostTechArrayInput is an input type that accepts ServiceNamingConditionConditionHostTechArray and ServiceNamingConditionConditionHostTechArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHostTechArrayInput` via:
//
//	ServiceNamingConditionConditionHostTechArray{ ServiceNamingConditionConditionHostTechArgs{...} }
type ServiceNamingConditionConditionHostTechArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHostTechArrayOutput() ServiceNamingConditionConditionHostTechArrayOutput
	ToServiceNamingConditionConditionHostTechArrayOutputWithContext(context.Context) ServiceNamingConditionConditionHostTechArrayOutput
}

type ServiceNamingConditionConditionHostTechArray []ServiceNamingConditionConditionHostTechInput

func (ServiceNamingConditionConditionHostTechArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHostTech)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHostTechArray) ToServiceNamingConditionConditionHostTechArrayOutput() ServiceNamingConditionConditionHostTechArrayOutput {
	return i.ToServiceNamingConditionConditionHostTechArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHostTechArray) ToServiceNamingConditionConditionHostTechArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechArrayOutput)
}

type ServiceNamingConditionConditionHostTechOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHostTechOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHostTech)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHostTechOutput) ToServiceNamingConditionConditionHostTechOutput() ServiceNamingConditionConditionHostTechOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechOutput) ToServiceNamingConditionConditionHostTechOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionHostTechOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTech) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionHostTechOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTech) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionHostTechOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTech) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionHostTechOutput) Value() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTech) *ServiceNamingConditionConditionHostTechValue {
		return v.Value
	}).(ServiceNamingConditionConditionHostTechValuePtrOutput)
}

type ServiceNamingConditionConditionHostTechArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHostTechArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHostTech)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHostTechArrayOutput) ToServiceNamingConditionConditionHostTechArrayOutput() ServiceNamingConditionConditionHostTechArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechArrayOutput) ToServiceNamingConditionConditionHostTechArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionHostTechOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionHostTech {
		return vs[0].([]ServiceNamingConditionConditionHostTech)[vs[1].(int)]
	}).(ServiceNamingConditionConditionHostTechOutput)
}

type ServiceNamingConditionConditionHostTechValue struct {
	// Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// Non-predefined technology, use for custom technologies
	VerbatimType *string `pulumi:"verbatimType"`
}

// ServiceNamingConditionConditionHostTechValueInput is an input type that accepts ServiceNamingConditionConditionHostTechValueArgs and ServiceNamingConditionConditionHostTechValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHostTechValueInput` via:
//
//	ServiceNamingConditionConditionHostTechValueArgs{...}
type ServiceNamingConditionConditionHostTechValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHostTechValueOutput() ServiceNamingConditionConditionHostTechValueOutput
	ToServiceNamingConditionConditionHostTechValueOutputWithContext(context.Context) ServiceNamingConditionConditionHostTechValueOutput
}

type ServiceNamingConditionConditionHostTechValueArgs struct {
	// Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// Non-predefined technology, use for custom technologies
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ServiceNamingConditionConditionHostTechValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHostTechValueArgs) ToServiceNamingConditionConditionHostTechValueOutput() ServiceNamingConditionConditionHostTechValueOutput {
	return i.ToServiceNamingConditionConditionHostTechValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHostTechValueArgs) ToServiceNamingConditionConditionHostTechValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechValueOutput)
}

func (i ServiceNamingConditionConditionHostTechValueArgs) ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return i.ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHostTechValueArgs) ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechValueOutput).ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionHostTechValuePtrInput is an input type that accepts ServiceNamingConditionConditionHostTechValueArgs, ServiceNamingConditionConditionHostTechValuePtr and ServiceNamingConditionConditionHostTechValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHostTechValuePtrInput` via:
//
//	        ServiceNamingConditionConditionHostTechValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionHostTechValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput
	ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput
}

type serviceNamingConditionConditionHostTechValuePtrType ServiceNamingConditionConditionHostTechValueArgs

func ServiceNamingConditionConditionHostTechValuePtr(v *ServiceNamingConditionConditionHostTechValueArgs) ServiceNamingConditionConditionHostTechValuePtrInput {
	return (*serviceNamingConditionConditionHostTechValuePtrType)(v)
}

func (*serviceNamingConditionConditionHostTechValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionHostTechValuePtrType) ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return i.ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionHostTechValuePtrType) ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHostTechValuePtrOutput)
}

type ServiceNamingConditionConditionHostTechValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHostTechValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHostTechValueOutput) ToServiceNamingConditionConditionHostTechValueOutput() ServiceNamingConditionConditionHostTechValueOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechValueOutput) ToServiceNamingConditionConditionHostTechValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValueOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechValueOutput) ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o.ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionHostTechValueOutput) ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionHostTechValue) *ServiceNamingConditionConditionHostTechValue {
		return &v
	}).(ServiceNamingConditionConditionHostTechValuePtrOutput)
}

// Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
func (o ServiceNamingConditionConditionHostTechValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTechValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionHostTechValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTechValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// Non-predefined technology, use for custom technologies
func (o ServiceNamingConditionConditionHostTechValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHostTechValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionHostTechValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHostTechValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionHostTechValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) ToServiceNamingConditionConditionHostTechValuePtrOutput() ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) ToServiceNamingConditionConditionHostTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHostTechValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionHostTechValuePtrOutput) Elem() ServiceNamingConditionConditionHostTechValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionHostTechValue) ServiceNamingConditionConditionHostTechValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionHostTechValue
		return ret
	}).(ServiceNamingConditionConditionHostTechValueOutput)
}

// Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
func (o ServiceNamingConditionConditionHostTechValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionHostTechValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// Non-predefined technology, use for custom technologies
func (o ServiceNamingConditionConditionHostTechValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionHostTechValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionHypervisor struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionHypervisorInput is an input type that accepts ServiceNamingConditionConditionHypervisorArgs and ServiceNamingConditionConditionHypervisorOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHypervisorInput` via:
//
//	ServiceNamingConditionConditionHypervisorArgs{...}
type ServiceNamingConditionConditionHypervisorInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHypervisorOutput() ServiceNamingConditionConditionHypervisorOutput
	ToServiceNamingConditionConditionHypervisorOutputWithContext(context.Context) ServiceNamingConditionConditionHypervisorOutput
}

type ServiceNamingConditionConditionHypervisorArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionHypervisorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHypervisor)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHypervisorArgs) ToServiceNamingConditionConditionHypervisorOutput() ServiceNamingConditionConditionHypervisorOutput {
	return i.ToServiceNamingConditionConditionHypervisorOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHypervisorArgs) ToServiceNamingConditionConditionHypervisorOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHypervisorOutput)
}

// ServiceNamingConditionConditionHypervisorArrayInput is an input type that accepts ServiceNamingConditionConditionHypervisorArray and ServiceNamingConditionConditionHypervisorArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHypervisorArrayInput` via:
//
//	ServiceNamingConditionConditionHypervisorArray{ ServiceNamingConditionConditionHypervisorArgs{...} }
type ServiceNamingConditionConditionHypervisorArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHypervisorArrayOutput() ServiceNamingConditionConditionHypervisorArrayOutput
	ToServiceNamingConditionConditionHypervisorArrayOutputWithContext(context.Context) ServiceNamingConditionConditionHypervisorArrayOutput
}

type ServiceNamingConditionConditionHypervisorArray []ServiceNamingConditionConditionHypervisorInput

func (ServiceNamingConditionConditionHypervisorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHypervisor)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHypervisorArray) ToServiceNamingConditionConditionHypervisorArrayOutput() ServiceNamingConditionConditionHypervisorArrayOutput {
	return i.ToServiceNamingConditionConditionHypervisorArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHypervisorArray) ToServiceNamingConditionConditionHypervisorArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHypervisorArrayOutput)
}

type ServiceNamingConditionConditionHypervisorOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHypervisorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHypervisor)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHypervisorOutput) ToServiceNamingConditionConditionHypervisorOutput() ServiceNamingConditionConditionHypervisorOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorOutput) ToServiceNamingConditionConditionHypervisorOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionHypervisorOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisor) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionHypervisorOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisor) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionHypervisorOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisor) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
func (o ServiceNamingConditionConditionHypervisorOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisor) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionHypervisorArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHypervisorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHypervisor)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHypervisorArrayOutput) ToServiceNamingConditionConditionHypervisorArrayOutput() ServiceNamingConditionConditionHypervisorArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorArrayOutput) ToServiceNamingConditionConditionHypervisorArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionHypervisorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionHypervisor {
		return vs[0].([]ServiceNamingConditionConditionHypervisor)[vs[1].(int)]
	}).(ServiceNamingConditionConditionHypervisorOutput)
}

type ServiceNamingConditionConditionHypervisorTypeComparision struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be HYPERVISOR_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionHypervisorTypeComparisionInput is an input type that accepts ServiceNamingConditionConditionHypervisorTypeComparisionArgs and ServiceNamingConditionConditionHypervisorTypeComparisionOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHypervisorTypeComparisionInput` via:
//
//	ServiceNamingConditionConditionHypervisorTypeComparisionArgs{...}
type ServiceNamingConditionConditionHypervisorTypeComparisionInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHypervisorTypeComparisionOutput() ServiceNamingConditionConditionHypervisorTypeComparisionOutput
	ToServiceNamingConditionConditionHypervisorTypeComparisionOutputWithContext(context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionOutput
}

type ServiceNamingConditionConditionHypervisorTypeComparisionArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be HYPERVISOR_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionHypervisorTypeComparisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHypervisorTypeComparisionArgs) ToServiceNamingConditionConditionHypervisorTypeComparisionOutput() ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return i.ToServiceNamingConditionConditionHypervisorTypeComparisionOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHypervisorTypeComparisionArgs) ToServiceNamingConditionConditionHypervisorTypeComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHypervisorTypeComparisionOutput)
}

// ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput is an input type that accepts ServiceNamingConditionConditionHypervisorTypeComparisionArray and ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput` via:
//
//	ServiceNamingConditionConditionHypervisorTypeComparisionArray{ ServiceNamingConditionConditionHypervisorTypeComparisionArgs{...} }
type ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput() ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput
	ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput
}

type ServiceNamingConditionConditionHypervisorTypeComparisionArray []ServiceNamingConditionConditionHypervisorTypeComparisionInput

func (ServiceNamingConditionConditionHypervisorTypeComparisionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (i ServiceNamingConditionConditionHypervisorTypeComparisionArray) ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput() ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return i.ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionHypervisorTypeComparisionArray) ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput)
}

type ServiceNamingConditionConditionHypervisorTypeComparisionOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHypervisorTypeComparisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) ToServiceNamingConditionConditionHypervisorTypeComparisionOutput() ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) ToServiceNamingConditionConditionHypervisorTypeComparisionOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be HYPERVISOR_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AHV, HYPER_V, KVM, LPAR, QEMU, VIRTUAL_BOX, VMWARE, WPAR and XEN.
func (o ServiceNamingConditionConditionHypervisorTypeComparisionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionHypervisorTypeComparision) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionHypervisorTypeComparision)(nil)).Elem()
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput) ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput() ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput) ToServiceNamingConditionConditionHypervisorTypeComparisionArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionHypervisorTypeComparisionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionHypervisorTypeComparision {
		return vs[0].([]ServiceNamingConditionConditionHypervisorTypeComparision)[vs[1].(int)]
	}).(ServiceNamingConditionConditionHypervisorTypeComparisionOutput)
}

type ServiceNamingConditionConditionIndexedName struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedNameInput is an input type that accepts ServiceNamingConditionConditionIndexedNameArgs and ServiceNamingConditionConditionIndexedNameOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedNameInput` via:
//
//	ServiceNamingConditionConditionIndexedNameArgs{...}
type ServiceNamingConditionConditionIndexedNameInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedNameOutput() ServiceNamingConditionConditionIndexedNameOutput
	ToServiceNamingConditionConditionIndexedNameOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedNameOutput
}

type ServiceNamingConditionConditionIndexedNameArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedName)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedNameArgs) ToServiceNamingConditionConditionIndexedNameOutput() ServiceNamingConditionConditionIndexedNameOutput {
	return i.ToServiceNamingConditionConditionIndexedNameOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedNameArgs) ToServiceNamingConditionConditionIndexedNameOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedNameOutput)
}

// ServiceNamingConditionConditionIndexedNameArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedNameArray and ServiceNamingConditionConditionIndexedNameArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedNameArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedNameArray{ ServiceNamingConditionConditionIndexedNameArgs{...} }
type ServiceNamingConditionConditionIndexedNameArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedNameArrayOutput() ServiceNamingConditionConditionIndexedNameArrayOutput
	ToServiceNamingConditionConditionIndexedNameArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedNameArrayOutput
}

type ServiceNamingConditionConditionIndexedNameArray []ServiceNamingConditionConditionIndexedNameInput

func (ServiceNamingConditionConditionIndexedNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedName)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedNameArray) ToServiceNamingConditionConditionIndexedNameArrayOutput() ServiceNamingConditionConditionIndexedNameArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedNameArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedNameArray) ToServiceNamingConditionConditionIndexedNameArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedNameArrayOutput)
}

type ServiceNamingConditionConditionIndexedNameOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedName)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedNameOutput) ToServiceNamingConditionConditionIndexedNameOutput() ServiceNamingConditionConditionIndexedNameOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameOutput) ToServiceNamingConditionConditionIndexedNameOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionIndexedNameOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedName) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIndexedNameOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedName) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedNameOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedName) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionIndexedNameOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedName) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedNameArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedName)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedNameArrayOutput) ToServiceNamingConditionConditionIndexedNameArrayOutput() ServiceNamingConditionConditionIndexedNameArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameArrayOutput) ToServiceNamingConditionConditionIndexedNameArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedName {
		return vs[0].([]ServiceNamingConditionConditionIndexedName)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedNameOutput)
}

type ServiceNamingConditionConditionIndexedNameComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be INDEXED_NAME
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedNameComparisonInput is an input type that accepts ServiceNamingConditionConditionIndexedNameComparisonArgs and ServiceNamingConditionConditionIndexedNameComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedNameComparisonInput` via:
//
//	ServiceNamingConditionConditionIndexedNameComparisonArgs{...}
type ServiceNamingConditionConditionIndexedNameComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedNameComparisonOutput() ServiceNamingConditionConditionIndexedNameComparisonOutput
	ToServiceNamingConditionConditionIndexedNameComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedNameComparisonOutput
}

type ServiceNamingConditionConditionIndexedNameComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be INDEXED_NAME
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedNameComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedNameComparisonArgs) ToServiceNamingConditionConditionIndexedNameComparisonOutput() ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return i.ToServiceNamingConditionConditionIndexedNameComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedNameComparisonArgs) ToServiceNamingConditionConditionIndexedNameComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedNameComparisonOutput)
}

// ServiceNamingConditionConditionIndexedNameComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedNameComparisonArray and ServiceNamingConditionConditionIndexedNameComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedNameComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedNameComparisonArray{ ServiceNamingConditionConditionIndexedNameComparisonArgs{...} }
type ServiceNamingConditionConditionIndexedNameComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedNameComparisonArrayOutput() ServiceNamingConditionConditionIndexedNameComparisonArrayOutput
	ToServiceNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedNameComparisonArrayOutput
}

type ServiceNamingConditionConditionIndexedNameComparisonArray []ServiceNamingConditionConditionIndexedNameComparisonInput

func (ServiceNamingConditionConditionIndexedNameComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedNameComparisonArray) ToServiceNamingConditionConditionIndexedNameComparisonArrayOutput() ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedNameComparisonArray) ToServiceNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedNameComparisonArrayOutput)
}

type ServiceNamingConditionConditionIndexedNameComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedNameComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) ToServiceNamingConditionConditionIndexedNameComparisonOutput() ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) ToServiceNamingConditionConditionIndexedNameComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS, CONTAINS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be INDEXED_NAME
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionIndexedNameComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedNameComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedNameComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedNameComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedNameComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedNameComparisonArrayOutput) ToServiceNamingConditionConditionIndexedNameComparisonArrayOutput() ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameComparisonArrayOutput) ToServiceNamingConditionConditionIndexedNameComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedNameComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedNameComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedNameComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedNameComparison {
		return vs[0].([]ServiceNamingConditionConditionIndexedNameComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedNameComparisonOutput)
}

type ServiceNamingConditionConditionIndexedString struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedStringInput is an input type that accepts ServiceNamingConditionConditionIndexedStringArgs and ServiceNamingConditionConditionIndexedStringOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedStringInput` via:
//
//	ServiceNamingConditionConditionIndexedStringArgs{...}
type ServiceNamingConditionConditionIndexedStringInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedStringOutput() ServiceNamingConditionConditionIndexedStringOutput
	ToServiceNamingConditionConditionIndexedStringOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedStringOutput
}

type ServiceNamingConditionConditionIndexedStringArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedString)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedStringArgs) ToServiceNamingConditionConditionIndexedStringOutput() ServiceNamingConditionConditionIndexedStringOutput {
	return i.ToServiceNamingConditionConditionIndexedStringOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedStringArgs) ToServiceNamingConditionConditionIndexedStringOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedStringOutput)
}

// ServiceNamingConditionConditionIndexedStringArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedStringArray and ServiceNamingConditionConditionIndexedStringArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedStringArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedStringArray{ ServiceNamingConditionConditionIndexedStringArgs{...} }
type ServiceNamingConditionConditionIndexedStringArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedStringArrayOutput() ServiceNamingConditionConditionIndexedStringArrayOutput
	ToServiceNamingConditionConditionIndexedStringArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedStringArrayOutput
}

type ServiceNamingConditionConditionIndexedStringArray []ServiceNamingConditionConditionIndexedStringInput

func (ServiceNamingConditionConditionIndexedStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedString)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedStringArray) ToServiceNamingConditionConditionIndexedStringArrayOutput() ServiceNamingConditionConditionIndexedStringArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedStringArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedStringArray) ToServiceNamingConditionConditionIndexedStringArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedStringArrayOutput)
}

type ServiceNamingConditionConditionIndexedStringOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedString)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedStringOutput) ToServiceNamingConditionConditionIndexedStringOutput() ServiceNamingConditionConditionIndexedStringOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringOutput) ToServiceNamingConditionConditionIndexedStringOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionIndexedStringOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedString) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIndexedStringOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedString) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionIndexedStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedStringArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedString)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedStringArrayOutput) ToServiceNamingConditionConditionIndexedStringArrayOutput() ServiceNamingConditionConditionIndexedStringArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringArrayOutput) ToServiceNamingConditionConditionIndexedStringArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedString {
		return vs[0].([]ServiceNamingConditionConditionIndexedString)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedStringOutput)
}

type ServiceNamingConditionConditionIndexedStringComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be INDEXED_STRING
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedStringComparisonInput is an input type that accepts ServiceNamingConditionConditionIndexedStringComparisonArgs and ServiceNamingConditionConditionIndexedStringComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedStringComparisonInput` via:
//
//	ServiceNamingConditionConditionIndexedStringComparisonArgs{...}
type ServiceNamingConditionConditionIndexedStringComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedStringComparisonOutput() ServiceNamingConditionConditionIndexedStringComparisonOutput
	ToServiceNamingConditionConditionIndexedStringComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedStringComparisonOutput
}

type ServiceNamingConditionConditionIndexedStringComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be INDEXED_STRING
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedStringComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedStringComparisonArgs) ToServiceNamingConditionConditionIndexedStringComparisonOutput() ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return i.ToServiceNamingConditionConditionIndexedStringComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedStringComparisonArgs) ToServiceNamingConditionConditionIndexedStringComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedStringComparisonOutput)
}

// ServiceNamingConditionConditionIndexedStringComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedStringComparisonArray and ServiceNamingConditionConditionIndexedStringComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedStringComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedStringComparisonArray{ ServiceNamingConditionConditionIndexedStringComparisonArgs{...} }
type ServiceNamingConditionConditionIndexedStringComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedStringComparisonArrayOutput() ServiceNamingConditionConditionIndexedStringComparisonArrayOutput
	ToServiceNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedStringComparisonArrayOutput
}

type ServiceNamingConditionConditionIndexedStringComparisonArray []ServiceNamingConditionConditionIndexedStringComparisonInput

func (ServiceNamingConditionConditionIndexedStringComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedStringComparisonArray) ToServiceNamingConditionConditionIndexedStringComparisonArrayOutput() ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedStringComparisonArray) ToServiceNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedStringComparisonArrayOutput)
}

type ServiceNamingConditionConditionIndexedStringComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedStringComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) ToServiceNamingConditionConditionIndexedStringComparisonOutput() ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) ToServiceNamingConditionConditionIndexedStringComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be INDEXED_STRING
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionIndexedStringComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedStringComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedStringComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedStringComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedStringComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedStringComparisonArrayOutput) ToServiceNamingConditionConditionIndexedStringComparisonArrayOutput() ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringComparisonArrayOutput) ToServiceNamingConditionConditionIndexedStringComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedStringComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedStringComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedStringComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedStringComparison {
		return vs[0].([]ServiceNamingConditionConditionIndexedStringComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedStringComparisonOutput)
}

type ServiceNamingConditionConditionIndexedTag struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// Tag of a Dynatrace entity
	Value *ServiceNamingConditionConditionIndexedTagValue `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedTagInput is an input type that accepts ServiceNamingConditionConditionIndexedTagArgs and ServiceNamingConditionConditionIndexedTagOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagInput` via:
//
//	ServiceNamingConditionConditionIndexedTagArgs{...}
type ServiceNamingConditionConditionIndexedTagInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagOutput() ServiceNamingConditionConditionIndexedTagOutput
	ToServiceNamingConditionConditionIndexedTagOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagOutput
}

type ServiceNamingConditionConditionIndexedTagArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// Tag of a Dynatrace entity
	Value ServiceNamingConditionConditionIndexedTagValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagArgs) ToServiceNamingConditionConditionIndexedTagOutput() ServiceNamingConditionConditionIndexedTagOutput {
	return i.ToServiceNamingConditionConditionIndexedTagOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagArgs) ToServiceNamingConditionConditionIndexedTagOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagOutput)
}

// ServiceNamingConditionConditionIndexedTagArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedTagArray and ServiceNamingConditionConditionIndexedTagArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedTagArray{ ServiceNamingConditionConditionIndexedTagArgs{...} }
type ServiceNamingConditionConditionIndexedTagArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagArrayOutput() ServiceNamingConditionConditionIndexedTagArrayOutput
	ToServiceNamingConditionConditionIndexedTagArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagArrayOutput
}

type ServiceNamingConditionConditionIndexedTagArray []ServiceNamingConditionConditionIndexedTagInput

func (ServiceNamingConditionConditionIndexedTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagArray) ToServiceNamingConditionConditionIndexedTagArrayOutput() ServiceNamingConditionConditionIndexedTagArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedTagArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagArray) ToServiceNamingConditionConditionIndexedTagArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagArrayOutput)
}

type ServiceNamingConditionConditionIndexedTagOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagOutput) ToServiceNamingConditionConditionIndexedTagOutput() ServiceNamingConditionConditionIndexedTagOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagOutput) ToServiceNamingConditionConditionIndexedTagOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionIndexedTagOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTag) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIndexedTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTag) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// Tag of a Dynatrace entity
func (o ServiceNamingConditionConditionIndexedTagOutput) Value() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTag) *ServiceNamingConditionConditionIndexedTagValue {
		return v.Value
	}).(ServiceNamingConditionConditionIndexedTagValuePtrOutput)
}

type ServiceNamingConditionConditionIndexedTagArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedTag)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagArrayOutput) ToServiceNamingConditionConditionIndexedTagArrayOutput() ServiceNamingConditionConditionIndexedTagArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagArrayOutput) ToServiceNamingConditionConditionIndexedTagArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedTag {
		return vs[0].([]ServiceNamingConditionConditionIndexedTag)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedTagOutput)
}

type ServiceNamingConditionConditionIndexedTagComparison struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate *bool `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be INDEXED_TAG
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// Tag of a Dynatrace entity
	Value *ServiceNamingConditionConditionIndexedTagComparisonValue `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedTagComparisonInput is an input type that accepts ServiceNamingConditionConditionIndexedTagComparisonArgs and ServiceNamingConditionConditionIndexedTagComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagComparisonInput` via:
//
//	ServiceNamingConditionConditionIndexedTagComparisonArgs{...}
type ServiceNamingConditionConditionIndexedTagComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagComparisonOutput() ServiceNamingConditionConditionIndexedTagComparisonOutput
	ToServiceNamingConditionConditionIndexedTagComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagComparisonOutput
}

type ServiceNamingConditionConditionIndexedTagComparisonArgs struct {
	// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be INDEXED_TAG
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// Tag of a Dynatrace entity
	Value ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedTagComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagComparisonArgs) ToServiceNamingConditionConditionIndexedTagComparisonOutput() ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagComparisonArgs) ToServiceNamingConditionConditionIndexedTagComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonOutput)
}

// ServiceNamingConditionConditionIndexedTagComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIndexedTagComparisonArray and ServiceNamingConditionConditionIndexedTagComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIndexedTagComparisonArray{ ServiceNamingConditionConditionIndexedTagComparisonArgs{...} }
type ServiceNamingConditionConditionIndexedTagComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagComparisonArrayOutput() ServiceNamingConditionConditionIndexedTagComparisonArrayOutput
	ToServiceNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagComparisonArrayOutput
}

type ServiceNamingConditionConditionIndexedTagComparisonArray []ServiceNamingConditionConditionIndexedTagComparisonInput

func (ServiceNamingConditionConditionIndexedTagComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagComparisonArray) ToServiceNamingConditionConditionIndexedTagComparisonArrayOutput() ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagComparisonArray) ToServiceNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonArrayOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) ToServiceNamingConditionConditionIndexedTagComparisonOutput() ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) ToServiceNamingConditionConditionIndexedTagComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return o
}

// Reverses the operator. For example it turns EQUALS into DOES NOT EQUAL
func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Either EQUALS or EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be INDEXED_TAG
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// Tag of a Dynatrace entity
func (o ServiceNamingConditionConditionIndexedTagComparisonOutput) Value() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparison) *ServiceNamingConditionConditionIndexedTagComparisonValue {
		return v.Value
	}).(ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIndexedTagComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagComparisonArrayOutput) ToServiceNamingConditionConditionIndexedTagComparisonArrayOutput() ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonArrayOutput) ToServiceNamingConditionConditionIndexedTagComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIndexedTagComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIndexedTagComparison {
		return vs[0].([]ServiceNamingConditionConditionIndexedTagComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIndexedTagComparisonOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonValue struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
	Context string `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key string `pulumi:"key"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value of the tag. Not applicable to custom tags
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedTagComparisonValueInput is an input type that accepts ServiceNamingConditionConditionIndexedTagComparisonValueArgs and ServiceNamingConditionConditionIndexedTagComparisonValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagComparisonValueInput` via:
//
//	ServiceNamingConditionConditionIndexedTagComparisonValueArgs{...}
type ServiceNamingConditionConditionIndexedTagComparisonValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagComparisonValueOutput() ServiceNamingConditionConditionIndexedTagComparisonValueOutput
	ToServiceNamingConditionConditionIndexedTagComparisonValueOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagComparisonValueOutput
}

type ServiceNamingConditionConditionIndexedTagComparisonValueArgs struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
	Context pulumi.StringInput `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key pulumi.StringInput `pulumi:"key"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value of the tag. Not applicable to custom tags
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ToServiceNamingConditionConditionIndexedTagComparisonValueOutput() ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ToServiceNamingConditionConditionIndexedTagComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonValueOutput)
}

func (i ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonValueOutput).ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput is an input type that accepts ServiceNamingConditionConditionIndexedTagComparisonValueArgs, ServiceNamingConditionConditionIndexedTagComparisonValuePtr and ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput` via:
//
//	        ServiceNamingConditionConditionIndexedTagComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput
	ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput
}

type serviceNamingConditionConditionIndexedTagComparisonValuePtrType ServiceNamingConditionConditionIndexedTagComparisonValueArgs

func ServiceNamingConditionConditionIndexedTagComparisonValuePtr(v *ServiceNamingConditionConditionIndexedTagComparisonValueArgs) ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput {
	return (*serviceNamingConditionConditionIndexedTagComparisonValuePtrType)(v)
}

func (*serviceNamingConditionConditionIndexedTagComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionIndexedTagComparisonValuePtrType) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionIndexedTagComparisonValuePtrType) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ToServiceNamingConditionConditionIndexedTagComparisonValueOutput() ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ToServiceNamingConditionConditionIndexedTagComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionIndexedTagComparisonValue) *ServiceNamingConditionConditionIndexedTagComparisonValue {
		return &v
	}).(ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput)
}

// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparisonValue) string { return v.Context }).(pulumi.StringOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparisonValue) string { return v.Key }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o ServiceNamingConditionConditionIndexedTagComparisonValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagComparisonValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionIndexedTagComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput() ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) ToServiceNamingConditionConditionIndexedTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Elem() ServiceNamingConditionConditionIndexedTagComparisonValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) ServiceNamingConditionConditionIndexedTagComparisonValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionIndexedTagComparisonValue
		return ret
	}).(ServiceNamingConditionConditionIndexedTagComparisonValueOutput)
}

// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedTagValue struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
	Context string `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key string `pulumi:"key"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value of the tag. Not applicable to custom tags
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIndexedTagValueInput is an input type that accepts ServiceNamingConditionConditionIndexedTagValueArgs and ServiceNamingConditionConditionIndexedTagValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagValueInput` via:
//
//	ServiceNamingConditionConditionIndexedTagValueArgs{...}
type ServiceNamingConditionConditionIndexedTagValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagValueOutput() ServiceNamingConditionConditionIndexedTagValueOutput
	ToServiceNamingConditionConditionIndexedTagValueOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagValueOutput
}

type ServiceNamingConditionConditionIndexedTagValueArgs struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
	Context pulumi.StringInput `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key pulumi.StringInput `pulumi:"key"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value of the tag. Not applicable to custom tags
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIndexedTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIndexedTagValueArgs) ToServiceNamingConditionConditionIndexedTagValueOutput() ServiceNamingConditionConditionIndexedTagValueOutput {
	return i.ToServiceNamingConditionConditionIndexedTagValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagValueArgs) ToServiceNamingConditionConditionIndexedTagValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagValueOutput)
}

func (i ServiceNamingConditionConditionIndexedTagValueArgs) ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return i.ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIndexedTagValueArgs) ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagValueOutput).ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionIndexedTagValuePtrInput is an input type that accepts ServiceNamingConditionConditionIndexedTagValueArgs, ServiceNamingConditionConditionIndexedTagValuePtr and ServiceNamingConditionConditionIndexedTagValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIndexedTagValuePtrInput` via:
//
//	        ServiceNamingConditionConditionIndexedTagValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionIndexedTagValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput
	ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput
}

type serviceNamingConditionConditionIndexedTagValuePtrType ServiceNamingConditionConditionIndexedTagValueArgs

func ServiceNamingConditionConditionIndexedTagValuePtr(v *ServiceNamingConditionConditionIndexedTagValueArgs) ServiceNamingConditionConditionIndexedTagValuePtrInput {
	return (*serviceNamingConditionConditionIndexedTagValuePtrType)(v)
}

func (*serviceNamingConditionConditionIndexedTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionIndexedTagValuePtrType) ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return i.ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionIndexedTagValuePtrType) ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIndexedTagValuePtrOutput)
}

type ServiceNamingConditionConditionIndexedTagValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) ToServiceNamingConditionConditionIndexedTagValueOutput() ServiceNamingConditionConditionIndexedTagValueOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) ToServiceNamingConditionConditionIndexedTagValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValueOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionIndexedTagValueOutput) ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionIndexedTagValue) *ServiceNamingConditionConditionIndexedTagValue {
		return &v
	}).(ServiceNamingConditionConditionIndexedTagValuePtrOutput)
}

// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
func (o ServiceNamingConditionConditionIndexedTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagValue) string { return v.Context }).(pulumi.StringOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o ServiceNamingConditionConditionIndexedTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagValue) string { return v.Key }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o ServiceNamingConditionConditionIndexedTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIndexedTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIndexedTagValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIndexedTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionIndexedTagValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) ToServiceNamingConditionConditionIndexedTagValuePtrOutput() ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) ToServiceNamingConditionConditionIndexedTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIndexedTagValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Elem() ServiceNamingConditionConditionIndexedTagValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) ServiceNamingConditionConditionIndexedTagValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionIndexedTagValue
		return ret
	}).(ServiceNamingConditionConditionIndexedTagValueOutput)
}

// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o ServiceNamingConditionConditionIndexedTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionIndexedTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionInteger struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *int `pulumi:"value"`
}

// ServiceNamingConditionConditionIntegerInput is an input type that accepts ServiceNamingConditionConditionIntegerArgs and ServiceNamingConditionConditionIntegerOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIntegerInput` via:
//
//	ServiceNamingConditionConditionIntegerArgs{...}
type ServiceNamingConditionConditionIntegerInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIntegerOutput() ServiceNamingConditionConditionIntegerOutput
	ToServiceNamingConditionConditionIntegerOutputWithContext(context.Context) ServiceNamingConditionConditionIntegerOutput
}

type ServiceNamingConditionConditionIntegerArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIntegerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionInteger)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIntegerArgs) ToServiceNamingConditionConditionIntegerOutput() ServiceNamingConditionConditionIntegerOutput {
	return i.ToServiceNamingConditionConditionIntegerOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIntegerArgs) ToServiceNamingConditionConditionIntegerOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIntegerOutput)
}

// ServiceNamingConditionConditionIntegerArrayInput is an input type that accepts ServiceNamingConditionConditionIntegerArray and ServiceNamingConditionConditionIntegerArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIntegerArrayInput` via:
//
//	ServiceNamingConditionConditionIntegerArray{ ServiceNamingConditionConditionIntegerArgs{...} }
type ServiceNamingConditionConditionIntegerArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIntegerArrayOutput() ServiceNamingConditionConditionIntegerArrayOutput
	ToServiceNamingConditionConditionIntegerArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIntegerArrayOutput
}

type ServiceNamingConditionConditionIntegerArray []ServiceNamingConditionConditionIntegerInput

func (ServiceNamingConditionConditionIntegerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionInteger)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIntegerArray) ToServiceNamingConditionConditionIntegerArrayOutput() ServiceNamingConditionConditionIntegerArrayOutput {
	return i.ToServiceNamingConditionConditionIntegerArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIntegerArray) ToServiceNamingConditionConditionIntegerArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIntegerArrayOutput)
}

type ServiceNamingConditionConditionIntegerOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIntegerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionInteger)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIntegerOutput) ToServiceNamingConditionConditionIntegerOutput() ServiceNamingConditionConditionIntegerOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerOutput) ToServiceNamingConditionConditionIntegerOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionIntegerOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionInteger) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIntegerOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionInteger) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionIntegerOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionInteger) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionIntegerOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionInteger) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ServiceNamingConditionConditionIntegerArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIntegerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionInteger)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIntegerArrayOutput) ToServiceNamingConditionConditionIntegerArrayOutput() ServiceNamingConditionConditionIntegerArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerArrayOutput) ToServiceNamingConditionConditionIntegerArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIntegerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionInteger {
		return vs[0].([]ServiceNamingConditionConditionInteger)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIntegerOutput)
}

type ServiceNamingConditionConditionIntegerComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be INTEGER
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *int `pulumi:"value"`
}

// ServiceNamingConditionConditionIntegerComparisonInput is an input type that accepts ServiceNamingConditionConditionIntegerComparisonArgs and ServiceNamingConditionConditionIntegerComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIntegerComparisonInput` via:
//
//	ServiceNamingConditionConditionIntegerComparisonArgs{...}
type ServiceNamingConditionConditionIntegerComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIntegerComparisonOutput() ServiceNamingConditionConditionIntegerComparisonOutput
	ToServiceNamingConditionConditionIntegerComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIntegerComparisonOutput
}

type ServiceNamingConditionConditionIntegerComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be INTEGER
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIntegerComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIntegerComparisonArgs) ToServiceNamingConditionConditionIntegerComparisonOutput() ServiceNamingConditionConditionIntegerComparisonOutput {
	return i.ToServiceNamingConditionConditionIntegerComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIntegerComparisonArgs) ToServiceNamingConditionConditionIntegerComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIntegerComparisonOutput)
}

// ServiceNamingConditionConditionIntegerComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIntegerComparisonArray and ServiceNamingConditionConditionIntegerComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIntegerComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIntegerComparisonArray{ ServiceNamingConditionConditionIntegerComparisonArgs{...} }
type ServiceNamingConditionConditionIntegerComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIntegerComparisonArrayOutput() ServiceNamingConditionConditionIntegerComparisonArrayOutput
	ToServiceNamingConditionConditionIntegerComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIntegerComparisonArrayOutput
}

type ServiceNamingConditionConditionIntegerComparisonArray []ServiceNamingConditionConditionIntegerComparisonInput

func (ServiceNamingConditionConditionIntegerComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIntegerComparisonArray) ToServiceNamingConditionConditionIntegerComparisonArrayOutput() ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIntegerComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIntegerComparisonArray) ToServiceNamingConditionConditionIntegerComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIntegerComparisonArrayOutput)
}

type ServiceNamingConditionConditionIntegerComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIntegerComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIntegerComparisonOutput) ToServiceNamingConditionConditionIntegerComparisonOutput() ServiceNamingConditionConditionIntegerComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerComparisonOutput) ToServiceNamingConditionConditionIntegerComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionIntegerComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS, EXISTS, GREATER_THAN, GREATER_THAN_OR_EQUAL, LOWER_THAN and LOWER_THAN_OR_EQUAL. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIntegerComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be INTEGER
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIntegerComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionIntegerComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionIntegerComparisonOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIntegerComparison) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ServiceNamingConditionConditionIntegerComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIntegerComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIntegerComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIntegerComparisonArrayOutput) ToServiceNamingConditionConditionIntegerComparisonArrayOutput() ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerComparisonArrayOutput) ToServiceNamingConditionConditionIntegerComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIntegerComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIntegerComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIntegerComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIntegerComparison {
		return vs[0].([]ServiceNamingConditionConditionIntegerComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIntegerComparisonOutput)
}

type ServiceNamingConditionConditionIpaddress struct {
	// The comparison is case-sensitive (`true`) or insensitive (`false`)
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIpaddressInput is an input type that accepts ServiceNamingConditionConditionIpaddressArgs and ServiceNamingConditionConditionIpaddressOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIpaddressInput` via:
//
//	ServiceNamingConditionConditionIpaddressArgs{...}
type ServiceNamingConditionConditionIpaddressInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIpaddressOutput() ServiceNamingConditionConditionIpaddressOutput
	ToServiceNamingConditionConditionIpaddressOutputWithContext(context.Context) ServiceNamingConditionConditionIpaddressOutput
}

type ServiceNamingConditionConditionIpaddressArgs struct {
	// The comparison is case-sensitive (`true`) or insensitive (`false`)
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIpaddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIpaddress)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIpaddressArgs) ToServiceNamingConditionConditionIpaddressOutput() ServiceNamingConditionConditionIpaddressOutput {
	return i.ToServiceNamingConditionConditionIpaddressOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIpaddressArgs) ToServiceNamingConditionConditionIpaddressOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIpaddressOutput)
}

// ServiceNamingConditionConditionIpaddressArrayInput is an input type that accepts ServiceNamingConditionConditionIpaddressArray and ServiceNamingConditionConditionIpaddressArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIpaddressArrayInput` via:
//
//	ServiceNamingConditionConditionIpaddressArray{ ServiceNamingConditionConditionIpaddressArgs{...} }
type ServiceNamingConditionConditionIpaddressArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIpaddressArrayOutput() ServiceNamingConditionConditionIpaddressArrayOutput
	ToServiceNamingConditionConditionIpaddressArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIpaddressArrayOutput
}

type ServiceNamingConditionConditionIpaddressArray []ServiceNamingConditionConditionIpaddressInput

func (ServiceNamingConditionConditionIpaddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIpaddress)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIpaddressArray) ToServiceNamingConditionConditionIpaddressArrayOutput() ServiceNamingConditionConditionIpaddressArrayOutput {
	return i.ToServiceNamingConditionConditionIpaddressArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIpaddressArray) ToServiceNamingConditionConditionIpaddressArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIpaddressArrayOutput)
}

type ServiceNamingConditionConditionIpaddressOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIpaddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIpaddress)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIpaddressOutput) ToServiceNamingConditionConditionIpaddressOutput() ServiceNamingConditionConditionIpaddressOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressOutput) ToServiceNamingConditionConditionIpaddressOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressOutput {
	return o
}

// The comparison is case-sensitive (`true`) or insensitive (`false`)
func (o ServiceNamingConditionConditionIpaddressOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionIpaddressOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIpaddressOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionIpaddressOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionIpaddressOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddress) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIpaddressArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIpaddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIpaddress)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIpaddressArrayOutput) ToServiceNamingConditionConditionIpaddressArrayOutput() ServiceNamingConditionConditionIpaddressArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressArrayOutput) ToServiceNamingConditionConditionIpaddressArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIpaddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIpaddress {
		return vs[0].([]ServiceNamingConditionConditionIpaddress)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIpaddressOutput)
}

type ServiceNamingConditionConditionIpaddressComparison struct {
	// The comparison is case-sensitive (`true`) or insensitive (`false`)
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be IP_ADDRESS
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionIpaddressComparisonInput is an input type that accepts ServiceNamingConditionConditionIpaddressComparisonArgs and ServiceNamingConditionConditionIpaddressComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIpaddressComparisonInput` via:
//
//	ServiceNamingConditionConditionIpaddressComparisonArgs{...}
type ServiceNamingConditionConditionIpaddressComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIpaddressComparisonOutput() ServiceNamingConditionConditionIpaddressComparisonOutput
	ToServiceNamingConditionConditionIpaddressComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionIpaddressComparisonOutput
}

type ServiceNamingConditionConditionIpaddressComparisonArgs struct {
	// The comparison is case-sensitive (`true`) or insensitive (`false`)
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be IP_ADDRESS
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionIpaddressComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIpaddressComparisonArgs) ToServiceNamingConditionConditionIpaddressComparisonOutput() ServiceNamingConditionConditionIpaddressComparisonOutput {
	return i.ToServiceNamingConditionConditionIpaddressComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIpaddressComparisonArgs) ToServiceNamingConditionConditionIpaddressComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIpaddressComparisonOutput)
}

// ServiceNamingConditionConditionIpaddressComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionIpaddressComparisonArray and ServiceNamingConditionConditionIpaddressComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionIpaddressComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionIpaddressComparisonArray{ ServiceNamingConditionConditionIpaddressComparisonArgs{...} }
type ServiceNamingConditionConditionIpaddressComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionIpaddressComparisonArrayOutput() ServiceNamingConditionConditionIpaddressComparisonArrayOutput
	ToServiceNamingConditionConditionIpaddressComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionIpaddressComparisonArrayOutput
}

type ServiceNamingConditionConditionIpaddressComparisonArray []ServiceNamingConditionConditionIpaddressComparisonInput

func (ServiceNamingConditionConditionIpaddressComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionIpaddressComparisonArray) ToServiceNamingConditionConditionIpaddressComparisonArrayOutput() ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionIpaddressComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionIpaddressComparisonArray) ToServiceNamingConditionConditionIpaddressComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionIpaddressComparisonArrayOutput)
}

type ServiceNamingConditionConditionIpaddressComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIpaddressComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) ToServiceNamingConditionConditionIpaddressComparisonOutput() ServiceNamingConditionConditionIpaddressComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressComparisonOutput) ToServiceNamingConditionConditionIpaddressComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressComparisonOutput {
	return o
}

// The comparison is case-sensitive (`true`) or insensitive (`false`)
func (o ServiceNamingConditionConditionIpaddressComparisonOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS, IS_IP_IN_RANGE and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be IP_ADDRESS
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionIpaddressComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionIpaddressComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionIpaddressComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionIpaddressComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionIpaddressComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionIpaddressComparisonArrayOutput) ToServiceNamingConditionConditionIpaddressComparisonArrayOutput() ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressComparisonArrayOutput) ToServiceNamingConditionConditionIpaddressComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionIpaddressComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionIpaddressComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionIpaddressComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionIpaddressComparison {
		return vs[0].([]ServiceNamingConditionConditionIpaddressComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionIpaddressComparisonOutput)
}

type ServiceNamingConditionConditionKey struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// Defines the actual set of fields depending on the value
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionKeyInput is an input type that accepts ServiceNamingConditionConditionKeyArgs and ServiceNamingConditionConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionKeyInput` via:
//
//	ServiceNamingConditionConditionKeyArgs{...}
type ServiceNamingConditionConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionKeyOutput() ServiceNamingConditionConditionKeyOutput
	ToServiceNamingConditionConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionKeyOutput
}

type ServiceNamingConditionConditionKeyArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// Defines the actual set of fields depending on the value
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionKeyArgs) ToServiceNamingConditionConditionKeyOutput() ServiceNamingConditionConditionKeyOutput {
	return i.ToServiceNamingConditionConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionKeyArgs) ToServiceNamingConditionConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionKeyOutput)
}

// ServiceNamingConditionConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionKeyArray and ServiceNamingConditionConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionKeyArray{ ServiceNamingConditionConditionKeyArgs{...} }
type ServiceNamingConditionConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionKeyArrayOutput() ServiceNamingConditionConditionKeyArrayOutput
	ToServiceNamingConditionConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionKeyArrayOutput
}

type ServiceNamingConditionConditionKeyArray []ServiceNamingConditionConditionKeyInput

func (ServiceNamingConditionConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionKeyArray) ToServiceNamingConditionConditionKeyArrayOutput() ServiceNamingConditionConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionKeyArray) ToServiceNamingConditionConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionKeyOutput) ToServiceNamingConditionConditionKeyOutput() ServiceNamingConditionConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionKeyOutput) ToServiceNamingConditionConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionKeyOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

// Defines the actual set of fields depending on the value
func (o ServiceNamingConditionConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionKeyArrayOutput) ToServiceNamingConditionConditionKeyArrayOutput() ServiceNamingConditionConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionKeyArrayOutput) ToServiceNamingConditionConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionKey {
		return vs[0].([]ServiceNamingConditionConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionKeyOutput)
}

type ServiceNamingConditionConditionMobilePlatform struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionMobilePlatformInput is an input type that accepts ServiceNamingConditionConditionMobilePlatformArgs and ServiceNamingConditionConditionMobilePlatformOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionMobilePlatformInput` via:
//
//	ServiceNamingConditionConditionMobilePlatformArgs{...}
type ServiceNamingConditionConditionMobilePlatformInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionMobilePlatformOutput() ServiceNamingConditionConditionMobilePlatformOutput
	ToServiceNamingConditionConditionMobilePlatformOutputWithContext(context.Context) ServiceNamingConditionConditionMobilePlatformOutput
}

type ServiceNamingConditionConditionMobilePlatformArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionMobilePlatformArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (i ServiceNamingConditionConditionMobilePlatformArgs) ToServiceNamingConditionConditionMobilePlatformOutput() ServiceNamingConditionConditionMobilePlatformOutput {
	return i.ToServiceNamingConditionConditionMobilePlatformOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionMobilePlatformArgs) ToServiceNamingConditionConditionMobilePlatformOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionMobilePlatformOutput)
}

// ServiceNamingConditionConditionMobilePlatformArrayInput is an input type that accepts ServiceNamingConditionConditionMobilePlatformArray and ServiceNamingConditionConditionMobilePlatformArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionMobilePlatformArrayInput` via:
//
//	ServiceNamingConditionConditionMobilePlatformArray{ ServiceNamingConditionConditionMobilePlatformArgs{...} }
type ServiceNamingConditionConditionMobilePlatformArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionMobilePlatformArrayOutput() ServiceNamingConditionConditionMobilePlatformArrayOutput
	ToServiceNamingConditionConditionMobilePlatformArrayOutputWithContext(context.Context) ServiceNamingConditionConditionMobilePlatformArrayOutput
}

type ServiceNamingConditionConditionMobilePlatformArray []ServiceNamingConditionConditionMobilePlatformInput

func (ServiceNamingConditionConditionMobilePlatformArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (i ServiceNamingConditionConditionMobilePlatformArray) ToServiceNamingConditionConditionMobilePlatformArrayOutput() ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return i.ToServiceNamingConditionConditionMobilePlatformArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionMobilePlatformArray) ToServiceNamingConditionConditionMobilePlatformArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionMobilePlatformArrayOutput)
}

type ServiceNamingConditionConditionMobilePlatformOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionMobilePlatformOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (o ServiceNamingConditionConditionMobilePlatformOutput) ToServiceNamingConditionConditionMobilePlatformOutput() ServiceNamingConditionConditionMobilePlatformOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformOutput) ToServiceNamingConditionConditionMobilePlatformOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionMobilePlatformOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatform) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionMobilePlatformOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatform) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionMobilePlatformOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatform) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
func (o ServiceNamingConditionConditionMobilePlatformOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatform) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionMobilePlatformArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionMobilePlatformArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionMobilePlatform)(nil)).Elem()
}

func (o ServiceNamingConditionConditionMobilePlatformArrayOutput) ToServiceNamingConditionConditionMobilePlatformArrayOutput() ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformArrayOutput) ToServiceNamingConditionConditionMobilePlatformArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionMobilePlatformOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionMobilePlatform {
		return vs[0].([]ServiceNamingConditionConditionMobilePlatform)[vs[1].(int)]
	}).(ServiceNamingConditionConditionMobilePlatformOutput)
}

type ServiceNamingConditionConditionMobilePlatformComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be MOBILE_PLATFORM
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionMobilePlatformComparisonInput is an input type that accepts ServiceNamingConditionConditionMobilePlatformComparisonArgs and ServiceNamingConditionConditionMobilePlatformComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionMobilePlatformComparisonInput` via:
//
//	ServiceNamingConditionConditionMobilePlatformComparisonArgs{...}
type ServiceNamingConditionConditionMobilePlatformComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionMobilePlatformComparisonOutput() ServiceNamingConditionConditionMobilePlatformComparisonOutput
	ToServiceNamingConditionConditionMobilePlatformComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionMobilePlatformComparisonOutput
}

type ServiceNamingConditionConditionMobilePlatformComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be MOBILE_PLATFORM
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionMobilePlatformComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionMobilePlatformComparisonArgs) ToServiceNamingConditionConditionMobilePlatformComparisonOutput() ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return i.ToServiceNamingConditionConditionMobilePlatformComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionMobilePlatformComparisonArgs) ToServiceNamingConditionConditionMobilePlatformComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionMobilePlatformComparisonOutput)
}

// ServiceNamingConditionConditionMobilePlatformComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionMobilePlatformComparisonArray and ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionMobilePlatformComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionMobilePlatformComparisonArray{ ServiceNamingConditionConditionMobilePlatformComparisonArgs{...} }
type ServiceNamingConditionConditionMobilePlatformComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutput() ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput
	ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput
}

type ServiceNamingConditionConditionMobilePlatformComparisonArray []ServiceNamingConditionConditionMobilePlatformComparisonInput

func (ServiceNamingConditionConditionMobilePlatformComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionMobilePlatformComparisonArray) ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutput() ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionMobilePlatformComparisonArray) ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput)
}

type ServiceNamingConditionConditionMobilePlatformComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionMobilePlatformComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) ToServiceNamingConditionConditionMobilePlatformComparisonOutput() ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) ToServiceNamingConditionConditionMobilePlatformComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be MOBILE_PLATFORM
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are ANDROID, IOS, LINUX, MAC_OS, OTHER, TVOS and WINDOWS.
func (o ServiceNamingConditionConditionMobilePlatformComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionMobilePlatformComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionMobilePlatformComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput) ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutput() ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput) ToServiceNamingConditionConditionMobilePlatformComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionMobilePlatformComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionMobilePlatformComparison {
		return vs[0].([]ServiceNamingConditionConditionMobilePlatformComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionMobilePlatformComparisonOutput)
}

type ServiceNamingConditionConditionOsArch struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionOsArchInput is an input type that accepts ServiceNamingConditionConditionOsArchArgs and ServiceNamingConditionConditionOsArchOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsArchInput` via:
//
//	ServiceNamingConditionConditionOsArchArgs{...}
type ServiceNamingConditionConditionOsArchInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsArchOutput() ServiceNamingConditionConditionOsArchOutput
	ToServiceNamingConditionConditionOsArchOutputWithContext(context.Context) ServiceNamingConditionConditionOsArchOutput
}

type ServiceNamingConditionConditionOsArchArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionOsArchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsArch)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsArchArgs) ToServiceNamingConditionConditionOsArchOutput() ServiceNamingConditionConditionOsArchOutput {
	return i.ToServiceNamingConditionConditionOsArchOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsArchArgs) ToServiceNamingConditionConditionOsArchOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsArchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsArchOutput)
}

// ServiceNamingConditionConditionOsArchArrayInput is an input type that accepts ServiceNamingConditionConditionOsArchArray and ServiceNamingConditionConditionOsArchArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsArchArrayInput` via:
//
//	ServiceNamingConditionConditionOsArchArray{ ServiceNamingConditionConditionOsArchArgs{...} }
type ServiceNamingConditionConditionOsArchArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsArchArrayOutput() ServiceNamingConditionConditionOsArchArrayOutput
	ToServiceNamingConditionConditionOsArchArrayOutputWithContext(context.Context) ServiceNamingConditionConditionOsArchArrayOutput
}

type ServiceNamingConditionConditionOsArchArray []ServiceNamingConditionConditionOsArchInput

func (ServiceNamingConditionConditionOsArchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsArch)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsArchArray) ToServiceNamingConditionConditionOsArchArrayOutput() ServiceNamingConditionConditionOsArchArrayOutput {
	return i.ToServiceNamingConditionConditionOsArchArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsArchArray) ToServiceNamingConditionConditionOsArchArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsArchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsArchArrayOutput)
}

type ServiceNamingConditionConditionOsArchOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsArchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsArch)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsArchOutput) ToServiceNamingConditionConditionOsArchOutput() ServiceNamingConditionConditionOsArchOutput {
	return o
}

func (o ServiceNamingConditionConditionOsArchOutput) ToServiceNamingConditionConditionOsArchOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsArchOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionOsArchOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsArch) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionOsArchOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsArch) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionOsArchOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsArch) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
func (o ServiceNamingConditionConditionOsArchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsArch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionOsArchArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsArchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsArch)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsArchArrayOutput) ToServiceNamingConditionConditionOsArchArrayOutput() ServiceNamingConditionConditionOsArchArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsArchArrayOutput) ToServiceNamingConditionConditionOsArchArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsArchArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsArchArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOsArchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionOsArch {
		return vs[0].([]ServiceNamingConditionConditionOsArch)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOsArchOutput)
}

type ServiceNamingConditionConditionOsType struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionOsTypeInput is an input type that accepts ServiceNamingConditionConditionOsTypeArgs and ServiceNamingConditionConditionOsTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsTypeInput` via:
//
//	ServiceNamingConditionConditionOsTypeArgs{...}
type ServiceNamingConditionConditionOsTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsTypeOutput() ServiceNamingConditionConditionOsTypeOutput
	ToServiceNamingConditionConditionOsTypeOutputWithContext(context.Context) ServiceNamingConditionConditionOsTypeOutput
}

type ServiceNamingConditionConditionOsTypeArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionOsTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsTypeArgs) ToServiceNamingConditionConditionOsTypeOutput() ServiceNamingConditionConditionOsTypeOutput {
	return i.ToServiceNamingConditionConditionOsTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsTypeArgs) ToServiceNamingConditionConditionOsTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsTypeOutput)
}

// ServiceNamingConditionConditionOsTypeArrayInput is an input type that accepts ServiceNamingConditionConditionOsTypeArray and ServiceNamingConditionConditionOsTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsTypeArrayInput` via:
//
//	ServiceNamingConditionConditionOsTypeArray{ ServiceNamingConditionConditionOsTypeArgs{...} }
type ServiceNamingConditionConditionOsTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsTypeArrayOutput() ServiceNamingConditionConditionOsTypeArrayOutput
	ToServiceNamingConditionConditionOsTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionOsTypeArrayOutput
}

type ServiceNamingConditionConditionOsTypeArray []ServiceNamingConditionConditionOsTypeInput

func (ServiceNamingConditionConditionOsTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsTypeArray) ToServiceNamingConditionConditionOsTypeArrayOutput() ServiceNamingConditionConditionOsTypeArrayOutput {
	return i.ToServiceNamingConditionConditionOsTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsTypeArray) ToServiceNamingConditionConditionOsTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsTypeArrayOutput)
}

type ServiceNamingConditionConditionOsTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsTypeOutput) ToServiceNamingConditionConditionOsTypeOutput() ServiceNamingConditionConditionOsTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionOsTypeOutput) ToServiceNamingConditionConditionOsTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsTypeOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionOsTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionOsTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsType) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionOsTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
func (o ServiceNamingConditionConditionOsTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionOsTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsTypeArrayOutput) ToServiceNamingConditionConditionOsTypeArrayOutput() ServiceNamingConditionConditionOsTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsTypeArrayOutput) ToServiceNamingConditionConditionOsTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOsTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionOsType {
		return vs[0].([]ServiceNamingConditionConditionOsType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOsTypeOutput)
}

type ServiceNamingConditionConditionOsarchitectureComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be OS_ARCHITECTURE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionOsarchitectureComparisonInput is an input type that accepts ServiceNamingConditionConditionOsarchitectureComparisonArgs and ServiceNamingConditionConditionOsarchitectureComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsarchitectureComparisonInput` via:
//
//	ServiceNamingConditionConditionOsarchitectureComparisonArgs{...}
type ServiceNamingConditionConditionOsarchitectureComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsarchitectureComparisonOutput() ServiceNamingConditionConditionOsarchitectureComparisonOutput
	ToServiceNamingConditionConditionOsarchitectureComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionOsarchitectureComparisonOutput
}

type ServiceNamingConditionConditionOsarchitectureComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be OS_ARCHITECTURE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionOsarchitectureComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsarchitectureComparisonArgs) ToServiceNamingConditionConditionOsarchitectureComparisonOutput() ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return i.ToServiceNamingConditionConditionOsarchitectureComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsarchitectureComparisonArgs) ToServiceNamingConditionConditionOsarchitectureComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsarchitectureComparisonOutput)
}

// ServiceNamingConditionConditionOsarchitectureComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionOsarchitectureComparisonArray and ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOsarchitectureComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionOsarchitectureComparisonArray{ ServiceNamingConditionConditionOsarchitectureComparisonArgs{...} }
type ServiceNamingConditionConditionOsarchitectureComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutput() ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput
	ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput
}

type ServiceNamingConditionConditionOsarchitectureComparisonArray []ServiceNamingConditionConditionOsarchitectureComparisonInput

func (ServiceNamingConditionConditionOsarchitectureComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOsarchitectureComparisonArray) ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutput() ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOsarchitectureComparisonArray) ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput)
}

type ServiceNamingConditionConditionOsarchitectureComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsarchitectureComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) ToServiceNamingConditionConditionOsarchitectureComparisonOutput() ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) ToServiceNamingConditionConditionOsarchitectureComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be OS_ARCHITECTURE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are ARM, IA64, PARISC, PPC, PPCLE, S390, SPARC, X86 and ZOS.
func (o ServiceNamingConditionConditionOsarchitectureComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOsarchitectureComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOsarchitectureComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput) ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutput() ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput) ToServiceNamingConditionConditionOsarchitectureComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOsarchitectureComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionOsarchitectureComparison {
		return vs[0].([]ServiceNamingConditionConditionOsarchitectureComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOsarchitectureComparisonOutput)
}

type ServiceNamingConditionConditionOstypeComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be OS_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionOstypeComparisonInput is an input type that accepts ServiceNamingConditionConditionOstypeComparisonArgs and ServiceNamingConditionConditionOstypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOstypeComparisonInput` via:
//
//	ServiceNamingConditionConditionOstypeComparisonArgs{...}
type ServiceNamingConditionConditionOstypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOstypeComparisonOutput() ServiceNamingConditionConditionOstypeComparisonOutput
	ToServiceNamingConditionConditionOstypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionOstypeComparisonOutput
}

type ServiceNamingConditionConditionOstypeComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be OS_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionOstypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOstypeComparisonArgs) ToServiceNamingConditionConditionOstypeComparisonOutput() ServiceNamingConditionConditionOstypeComparisonOutput {
	return i.ToServiceNamingConditionConditionOstypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOstypeComparisonArgs) ToServiceNamingConditionConditionOstypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOstypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOstypeComparisonOutput)
}

// ServiceNamingConditionConditionOstypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionOstypeComparisonArray and ServiceNamingConditionConditionOstypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionOstypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionOstypeComparisonArray{ ServiceNamingConditionConditionOstypeComparisonArgs{...} }
type ServiceNamingConditionConditionOstypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionOstypeComparisonArrayOutput() ServiceNamingConditionConditionOstypeComparisonArrayOutput
	ToServiceNamingConditionConditionOstypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionOstypeComparisonArrayOutput
}

type ServiceNamingConditionConditionOstypeComparisonArray []ServiceNamingConditionConditionOstypeComparisonInput

func (ServiceNamingConditionConditionOstypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionOstypeComparisonArray) ToServiceNamingConditionConditionOstypeComparisonArrayOutput() ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionOstypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionOstypeComparisonArray) ToServiceNamingConditionConditionOstypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionOstypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionOstypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOstypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOstypeComparisonOutput) ToServiceNamingConditionConditionOstypeComparisonOutput() ServiceNamingConditionConditionOstypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionOstypeComparisonOutput) ToServiceNamingConditionConditionOstypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOstypeComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionOstypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionOstypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be OS_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionOstypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionOstypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AIX, DARWIN, HPUX, LINUX, SOLARIS, WINDOWS and ZOS.
func (o ServiceNamingConditionConditionOstypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionOstypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionOstypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionOstypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionOstypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionOstypeComparisonArrayOutput) ToServiceNamingConditionConditionOstypeComparisonArrayOutput() ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOstypeComparisonArrayOutput) ToServiceNamingConditionConditionOstypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionOstypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionOstypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionOstypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionOstypeComparison {
		return vs[0].([]ServiceNamingConditionConditionOstypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionOstypeComparisonOutput)
}

type ServiceNamingConditionConditionPaasType struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionPaasTypeInput is an input type that accepts ServiceNamingConditionConditionPaasTypeArgs and ServiceNamingConditionConditionPaasTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionPaasTypeInput` via:
//
//	ServiceNamingConditionConditionPaasTypeArgs{...}
type ServiceNamingConditionConditionPaasTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionPaasTypeOutput() ServiceNamingConditionConditionPaasTypeOutput
	ToServiceNamingConditionConditionPaasTypeOutputWithContext(context.Context) ServiceNamingConditionConditionPaasTypeOutput
}

type ServiceNamingConditionConditionPaasTypeArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionPaasTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionPaasType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionPaasTypeArgs) ToServiceNamingConditionConditionPaasTypeOutput() ServiceNamingConditionConditionPaasTypeOutput {
	return i.ToServiceNamingConditionConditionPaasTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionPaasTypeArgs) ToServiceNamingConditionConditionPaasTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionPaasTypeOutput)
}

// ServiceNamingConditionConditionPaasTypeArrayInput is an input type that accepts ServiceNamingConditionConditionPaasTypeArray and ServiceNamingConditionConditionPaasTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionPaasTypeArrayInput` via:
//
//	ServiceNamingConditionConditionPaasTypeArray{ ServiceNamingConditionConditionPaasTypeArgs{...} }
type ServiceNamingConditionConditionPaasTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionPaasTypeArrayOutput() ServiceNamingConditionConditionPaasTypeArrayOutput
	ToServiceNamingConditionConditionPaasTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionPaasTypeArrayOutput
}

type ServiceNamingConditionConditionPaasTypeArray []ServiceNamingConditionConditionPaasTypeInput

func (ServiceNamingConditionConditionPaasTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionPaasType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionPaasTypeArray) ToServiceNamingConditionConditionPaasTypeArrayOutput() ServiceNamingConditionConditionPaasTypeArrayOutput {
	return i.ToServiceNamingConditionConditionPaasTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionPaasTypeArray) ToServiceNamingConditionConditionPaasTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionPaasTypeArrayOutput)
}

type ServiceNamingConditionConditionPaasTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionPaasTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionPaasType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionPaasTypeOutput) ToServiceNamingConditionConditionPaasTypeOutput() ServiceNamingConditionConditionPaasTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeOutput) ToServiceNamingConditionConditionPaasTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionPaasTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionPaasTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasType) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionPaasTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
func (o ServiceNamingConditionConditionPaasTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionPaasTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionPaasTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionPaasType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionPaasTypeArrayOutput) ToServiceNamingConditionConditionPaasTypeArrayOutput() ServiceNamingConditionConditionPaasTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeArrayOutput) ToServiceNamingConditionConditionPaasTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionPaasTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionPaasType {
		return vs[0].([]ServiceNamingConditionConditionPaasType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionPaasTypeOutput)
}

type ServiceNamingConditionConditionPaasTypeComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be PAAS_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionPaasTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionPaasTypeComparisonArgs and ServiceNamingConditionConditionPaasTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionPaasTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionPaasTypeComparisonArgs{...}
type ServiceNamingConditionConditionPaasTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionPaasTypeComparisonOutput() ServiceNamingConditionConditionPaasTypeComparisonOutput
	ToServiceNamingConditionConditionPaasTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionPaasTypeComparisonOutput
}

type ServiceNamingConditionConditionPaasTypeComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be PAAS_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionPaasTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionPaasTypeComparisonArgs) ToServiceNamingConditionConditionPaasTypeComparisonOutput() ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionPaasTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionPaasTypeComparisonArgs) ToServiceNamingConditionConditionPaasTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionPaasTypeComparisonOutput)
}

// ServiceNamingConditionConditionPaasTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionPaasTypeComparisonArray and ServiceNamingConditionConditionPaasTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionPaasTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionPaasTypeComparisonArray{ ServiceNamingConditionConditionPaasTypeComparisonArgs{...} }
type ServiceNamingConditionConditionPaasTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionPaasTypeComparisonArrayOutput() ServiceNamingConditionConditionPaasTypeComparisonArrayOutput
	ToServiceNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionPaasTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionPaasTypeComparisonArray []ServiceNamingConditionConditionPaasTypeComparisonInput

func (ServiceNamingConditionConditionPaasTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionPaasTypeComparisonArray) ToServiceNamingConditionConditionPaasTypeComparisonArrayOutput() ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionPaasTypeComparisonArray) ToServiceNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionPaasTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionPaasTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionPaasTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) ToServiceNamingConditionConditionPaasTypeComparisonOutput() ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) ToServiceNamingConditionConditionPaasTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be PAAS_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are AWS_ECS_EC2, AWS_ECS_FARGATE, AWS_LAMBDA, AZURE_FUNCTIONS, AZURE_WEBSITES, CLOUD_FOUNDRY, GOOGLE_APP_ENGINE, HEROKU, KUBERNETES and OPENSHIFT.
func (o ServiceNamingConditionConditionPaasTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionPaasTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionPaasTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionPaasTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionPaasTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionPaasTypeComparisonArrayOutput) ToServiceNamingConditionConditionPaasTypeComparisonArrayOutput() ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeComparisonArrayOutput) ToServiceNamingConditionConditionPaasTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionPaasTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionPaasTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionPaasTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionPaasTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionPaasTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionPaasTypeComparisonOutput)
}

type ServiceNamingConditionConditionProcessMetadata struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
	DynamicKey string `pulumi:"dynamicKey"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionProcessMetadataInput is an input type that accepts ServiceNamingConditionConditionProcessMetadataArgs and ServiceNamingConditionConditionProcessMetadataOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionProcessMetadataInput` via:
//
//	ServiceNamingConditionConditionProcessMetadataArgs{...}
type ServiceNamingConditionConditionProcessMetadataInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionProcessMetadataOutput() ServiceNamingConditionConditionProcessMetadataOutput
	ToServiceNamingConditionConditionProcessMetadataOutputWithContext(context.Context) ServiceNamingConditionConditionProcessMetadataOutput
}

type ServiceNamingConditionConditionProcessMetadataArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionProcessMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionProcessMetadataArgs) ToServiceNamingConditionConditionProcessMetadataOutput() ServiceNamingConditionConditionProcessMetadataOutput {
	return i.ToServiceNamingConditionConditionProcessMetadataOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionProcessMetadataArgs) ToServiceNamingConditionConditionProcessMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionProcessMetadataOutput)
}

// ServiceNamingConditionConditionProcessMetadataArrayInput is an input type that accepts ServiceNamingConditionConditionProcessMetadataArray and ServiceNamingConditionConditionProcessMetadataArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionProcessMetadataArrayInput` via:
//
//	ServiceNamingConditionConditionProcessMetadataArray{ ServiceNamingConditionConditionProcessMetadataArgs{...} }
type ServiceNamingConditionConditionProcessMetadataArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionProcessMetadataArrayOutput() ServiceNamingConditionConditionProcessMetadataArrayOutput
	ToServiceNamingConditionConditionProcessMetadataArrayOutputWithContext(context.Context) ServiceNamingConditionConditionProcessMetadataArrayOutput
}

type ServiceNamingConditionConditionProcessMetadataArray []ServiceNamingConditionConditionProcessMetadataInput

func (ServiceNamingConditionConditionProcessMetadataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (i ServiceNamingConditionConditionProcessMetadataArray) ToServiceNamingConditionConditionProcessMetadataArrayOutput() ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return i.ToServiceNamingConditionConditionProcessMetadataArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionProcessMetadataArray) ToServiceNamingConditionConditionProcessMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionProcessMetadataArrayOutput)
}

type ServiceNamingConditionConditionProcessMetadataOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionProcessMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionProcessMetadataOutput) ToServiceNamingConditionConditionProcessMetadataOutput() ServiceNamingConditionConditionProcessMetadataOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataOutput) ToServiceNamingConditionConditionProcessMetadataOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionProcessMetadataOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadata) string { return v.Attribute }).(pulumi.StringOutput)
}

// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
func (o ServiceNamingConditionConditionProcessMetadataOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadata) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionProcessMetadataOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadata) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionProcessMetadataArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionProcessMetadataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionProcessMetadata)(nil)).Elem()
}

func (o ServiceNamingConditionConditionProcessMetadataArrayOutput) ToServiceNamingConditionConditionProcessMetadataArrayOutput() ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataArrayOutput) ToServiceNamingConditionConditionProcessMetadataArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionProcessMetadataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionProcessMetadata {
		return vs[0].([]ServiceNamingConditionConditionProcessMetadata)[vs[1].(int)]
	}).(ServiceNamingConditionConditionProcessMetadataOutput)
}

type ServiceNamingConditionConditionProcessMetadataConditionKey struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
	DynamicKey string `pulumi:"dynamicKey"`
	// if specified, needs to be PROCESS_PREDEFINED_METADATA_KEY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionProcessMetadataConditionKeyInput is an input type that accepts ServiceNamingConditionConditionProcessMetadataConditionKeyArgs and ServiceNamingConditionConditionProcessMetadataConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionProcessMetadataConditionKeyInput` via:
//
//	ServiceNamingConditionConditionProcessMetadataConditionKeyArgs{...}
type ServiceNamingConditionConditionProcessMetadataConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyOutput
	ToServiceNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyOutput
}

type ServiceNamingConditionConditionProcessMetadataConditionKeyArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// if specified, needs to be PROCESS_PREDEFINED_METADATA_KEY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionProcessMetadataConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionProcessMetadataConditionKeyArgs) ToServiceNamingConditionConditionProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return i.ToServiceNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionProcessMetadataConditionKeyArgs) ToServiceNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionProcessMetadataConditionKeyOutput)
}

// ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionProcessMetadataConditionKeyArray and ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionProcessMetadataConditionKeyArray{ ServiceNamingConditionConditionProcessMetadataConditionKeyArgs{...} }
type ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput
	ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput
}

type ServiceNamingConditionConditionProcessMetadataConditionKeyArray []ServiceNamingConditionConditionProcessMetadataConditionKeyInput

func (ServiceNamingConditionConditionProcessMetadataConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionProcessMetadataConditionKeyArray) ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionProcessMetadataConditionKeyArray) ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionProcessMetadataConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) ToServiceNamingConditionConditionProcessMetadataConditionKeyOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) ToServiceNamingConditionConditionProcessMetadataConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadataConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are AMAZON_ECR_IMAGE_ACCOUNT_ID,AMAZON_ECR_IMAGE_REGION, AMAZON_LAMBDA_FUNCTION_NAME, AMAZON_REGION, APACHE_CONFIG_PATH, APACHE_SPARK_MASTER_IP_ADDRESS, ASP_DOT_NET_CORE_APPLICATION_PATH, AWS_ECS_CLUSTER, AWS_ECS_CONTAINERNAME, AWS_ECS_FAMILY, AWS_ECS_REVISION, CASSANDRA_CLUSTER_NAME, CATALINA_BASE, CATALINA_HOME, CLOUD_FOUNDRY_APP_ID, CLOUD_FOUNDRY_APP_NAME, CLOUD_FOUNDRY_INSTANCE_INDEX, CLOUD_FOUNDRY_SPACE_ID, CLOUD_FOUNDRY_SPACE_NAME, COLDFUSION_JVM_CONFIG_FILE, COLDFUSION_SERVICE_NAME, COMMAND_LINE_ARGS, DOTNET_COMMAND, DOTNET_COMMAND_PATH, DYNATRACE_CLUSTER_ID, DYNATRACE_NODE_ID, ELASTICSEARCH_CLUSTER_NAME, ELASTICSEARCH_NODE_NAME, EQUINOX_CONFIG_PATH, EXE_NAME, EXE_PATH, GLASS_FISH_DOMAIN_NAME, GLASS_FISH_INSTANCE_NAME, GOOGLE_APP_ENGINE_INSTANCE, GOOGLE_APP_ENGINE_SERVICE, GOOGLE_CLOUD_PROJECT, HYBRIS_BIN_DIRECTORY, HYBRIS_CONFIG_DIRECTORY, HYBRIS_DATA_DIRECTORY, IBM_CICS_REGION, IBM_CTG_NAME, IBM_IMS_CONNECT_REGION, IBM_IMS_CONTROL_REGION, IBM_IMS_MESSAGE_PROCESSING_REGION, IBM_IMS_SOAP_GW_NAME, IBM_INTEGRATION_NODE_NAME, IBM_INTEGRATION_SERVER_NAME, IIS_APP_POOL, IIS_ROLE_NAME, JAVA_JAR_FILE, JAVA_JAR_PATH, JAVA_MAIN_CLASS, JAVA_MAIN_MODULE, JBOSS_HOME, JBOSS_MODE, JBOSS_SERVER_NAME, KUBERNETES_BASE_POD_NAME, KUBERNETES_CONTAINER_NAME, KUBERNETES_FULL_POD_NAME, KUBERNETES_NAMESPACE, KUBERNETES_POD_UID, MSSQL_INSTANCE_NAME, NODE_JS_APP_BASE_DIRECTORY, NODE_JS_APP_NAME, NODE_JS_SCRIPT_NAME, ORACLE_SID, PG_ID_CALC_INPUT_KEY_LINKAGE, PHP_SCRIPT_PATH, PHP_WORKING_DIRECTORY, RUBY_APP_ROOT_PATH, RUBY_SCRIPT_PATH, RULE_RESULT, SOFTWAREAG_INSTALL_ROOT, SOFTWAREAG_PRODUCTPROPNAME, SPRINGBOOT_APP_NAME, SPRINGBOOT_PROFILE_NAME, SPRINGBOOT_STARTUP_CLASS, TIBCO_BUSINESSWORKS_CE_APP_NAME, TIBCO_BUSINESSWORKS_CE_VERSION, TIBCO_BUSINESS_WORKS_APP_NODE_NAME, TIBCO_BUSINESS_WORKS_APP_SPACE_NAME, TIBCO_BUSINESS_WORKS_DOMAIN_NAME, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE, TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH, TIBCO_BUSINESS_WORKS_HOME, VARNISH_INSTANCE_NAME, WEB_LOGIC_CLUSTER_NAME, WEB_LOGIC_DOMAIN_NAME, WEB_LOGIC_HOME, WEB_LOGIC_NAME, WEB_SPHERE_CELL_NAME, WEB_SPHERE_CLUSTER_NAME, WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME
func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadataConditionKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// if specified, needs to be PROCESS_PREDEFINED_METADATA_KEY
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadataConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionProcessMetadataConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionProcessMetadataConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionProcessMetadataConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput() ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput) ToServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionProcessMetadataConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionProcessMetadataConditionKey {
		return vs[0].([]ServiceNamingConditionConditionProcessMetadataConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionProcessMetadataConditionKeyOutput)
}

type ServiceNamingConditionConditionServiceTopology struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionServiceTopologyInput is an input type that accepts ServiceNamingConditionConditionServiceTopologyArgs and ServiceNamingConditionConditionServiceTopologyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTopologyInput` via:
//
//	ServiceNamingConditionConditionServiceTopologyArgs{...}
type ServiceNamingConditionConditionServiceTopologyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTopologyOutput() ServiceNamingConditionConditionServiceTopologyOutput
	ToServiceNamingConditionConditionServiceTopologyOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTopologyOutput
}

type ServiceNamingConditionConditionServiceTopologyArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionServiceTopologyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTopologyArgs) ToServiceNamingConditionConditionServiceTopologyOutput() ServiceNamingConditionConditionServiceTopologyOutput {
	return i.ToServiceNamingConditionConditionServiceTopologyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTopologyArgs) ToServiceNamingConditionConditionServiceTopologyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTopologyOutput)
}

// ServiceNamingConditionConditionServiceTopologyArrayInput is an input type that accepts ServiceNamingConditionConditionServiceTopologyArray and ServiceNamingConditionConditionServiceTopologyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTopologyArrayInput` via:
//
//	ServiceNamingConditionConditionServiceTopologyArray{ ServiceNamingConditionConditionServiceTopologyArgs{...} }
type ServiceNamingConditionConditionServiceTopologyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTopologyArrayOutput() ServiceNamingConditionConditionServiceTopologyArrayOutput
	ToServiceNamingConditionConditionServiceTopologyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTopologyArrayOutput
}

type ServiceNamingConditionConditionServiceTopologyArray []ServiceNamingConditionConditionServiceTopologyInput

func (ServiceNamingConditionConditionServiceTopologyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTopologyArray) ToServiceNamingConditionConditionServiceTopologyArrayOutput() ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return i.ToServiceNamingConditionConditionServiceTopologyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTopologyArray) ToServiceNamingConditionConditionServiceTopologyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTopologyArrayOutput)
}

type ServiceNamingConditionConditionServiceTopologyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTopologyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTopologyOutput) ToServiceNamingConditionConditionServiceTopologyOutput() ServiceNamingConditionConditionServiceTopologyOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyOutput) ToServiceNamingConditionConditionServiceTopologyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionServiceTopologyOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopology) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionServiceTopologyOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopology) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionServiceTopologyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopology) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
func (o ServiceNamingConditionConditionServiceTopologyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopology) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionServiceTopologyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTopologyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTopology)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTopologyArrayOutput) ToServiceNamingConditionConditionServiceTopologyArrayOutput() ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyArrayOutput) ToServiceNamingConditionConditionServiceTopologyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionServiceTopologyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionServiceTopology {
		return vs[0].([]ServiceNamingConditionConditionServiceTopology)[vs[1].(int)]
	}).(ServiceNamingConditionConditionServiceTopologyOutput)
}

type ServiceNamingConditionConditionServiceTopologyComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be SERVICE_TOPOLOGY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionServiceTopologyComparisonInput is an input type that accepts ServiceNamingConditionConditionServiceTopologyComparisonArgs and ServiceNamingConditionConditionServiceTopologyComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTopologyComparisonInput` via:
//
//	ServiceNamingConditionConditionServiceTopologyComparisonArgs{...}
type ServiceNamingConditionConditionServiceTopologyComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTopologyComparisonOutput() ServiceNamingConditionConditionServiceTopologyComparisonOutput
	ToServiceNamingConditionConditionServiceTopologyComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTopologyComparisonOutput
}

type ServiceNamingConditionConditionServiceTopologyComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be SERVICE_TOPOLOGY
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionServiceTopologyComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTopologyComparisonArgs) ToServiceNamingConditionConditionServiceTopologyComparisonOutput() ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return i.ToServiceNamingConditionConditionServiceTopologyComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTopologyComparisonArgs) ToServiceNamingConditionConditionServiceTopologyComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTopologyComparisonOutput)
}

// ServiceNamingConditionConditionServiceTopologyComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionServiceTopologyComparisonArray and ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTopologyComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionServiceTopologyComparisonArray{ ServiceNamingConditionConditionServiceTopologyComparisonArgs{...} }
type ServiceNamingConditionConditionServiceTopologyComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutput() ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput
	ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput
}

type ServiceNamingConditionConditionServiceTopologyComparisonArray []ServiceNamingConditionConditionServiceTopologyComparisonInput

func (ServiceNamingConditionConditionServiceTopologyComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTopologyComparisonArray) ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutput() ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTopologyComparisonArray) ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput)
}

type ServiceNamingConditionConditionServiceTopologyComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTopologyComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) ToServiceNamingConditionConditionServiceTopologyComparisonOutput() ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) ToServiceNamingConditionConditionServiceTopologyComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be SERVICE_TOPOLOGY
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are EXTERNAL_SERVICE, FULLY_MONITORED and OPAQUE_SERVICE.
func (o ServiceNamingConditionConditionServiceTopologyComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTopologyComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTopologyComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput) ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutput() ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput) ToServiceNamingConditionConditionServiceTopologyComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionServiceTopologyComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionServiceTopologyComparison {
		return vs[0].([]ServiceNamingConditionConditionServiceTopologyComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionServiceTopologyComparisonOutput)
}

type ServiceNamingConditionConditionServiceType struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionServiceTypeInput is an input type that accepts ServiceNamingConditionConditionServiceTypeArgs and ServiceNamingConditionConditionServiceTypeOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTypeInput` via:
//
//	ServiceNamingConditionConditionServiceTypeArgs{...}
type ServiceNamingConditionConditionServiceTypeInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTypeOutput() ServiceNamingConditionConditionServiceTypeOutput
	ToServiceNamingConditionConditionServiceTypeOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTypeOutput
}

type ServiceNamingConditionConditionServiceTypeArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionServiceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTypeArgs) ToServiceNamingConditionConditionServiceTypeOutput() ServiceNamingConditionConditionServiceTypeOutput {
	return i.ToServiceNamingConditionConditionServiceTypeOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTypeArgs) ToServiceNamingConditionConditionServiceTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTypeOutput)
}

// ServiceNamingConditionConditionServiceTypeArrayInput is an input type that accepts ServiceNamingConditionConditionServiceTypeArray and ServiceNamingConditionConditionServiceTypeArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTypeArrayInput` via:
//
//	ServiceNamingConditionConditionServiceTypeArray{ ServiceNamingConditionConditionServiceTypeArgs{...} }
type ServiceNamingConditionConditionServiceTypeArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTypeArrayOutput() ServiceNamingConditionConditionServiceTypeArrayOutput
	ToServiceNamingConditionConditionServiceTypeArrayOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTypeArrayOutput
}

type ServiceNamingConditionConditionServiceTypeArray []ServiceNamingConditionConditionServiceTypeInput

func (ServiceNamingConditionConditionServiceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceType)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTypeArray) ToServiceNamingConditionConditionServiceTypeArrayOutput() ServiceNamingConditionConditionServiceTypeArrayOutput {
	return i.ToServiceNamingConditionConditionServiceTypeArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTypeArray) ToServiceNamingConditionConditionServiceTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTypeArrayOutput)
}

type ServiceNamingConditionConditionServiceTypeOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTypeOutput) ToServiceNamingConditionConditionServiceTypeOutput() ServiceNamingConditionConditionServiceTypeOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeOutput) ToServiceNamingConditionConditionServiceTypeOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionServiceTypeOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceType) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionServiceTypeOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceType) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionServiceTypeOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceType) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
func (o ServiceNamingConditionConditionServiceTypeOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceType) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionServiceTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceType)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTypeArrayOutput) ToServiceNamingConditionConditionServiceTypeArrayOutput() ServiceNamingConditionConditionServiceTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeArrayOutput) ToServiceNamingConditionConditionServiceTypeArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionServiceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionServiceType {
		return vs[0].([]ServiceNamingConditionConditionServiceType)[vs[1].(int)]
	}).(ServiceNamingConditionConditionServiceTypeOutput)
}

type ServiceNamingConditionConditionServiceTypeComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be SERVICE_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionServiceTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionServiceTypeComparisonArgs and ServiceNamingConditionConditionServiceTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionServiceTypeComparisonArgs{...}
type ServiceNamingConditionConditionServiceTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTypeComparisonOutput() ServiceNamingConditionConditionServiceTypeComparisonOutput
	ToServiceNamingConditionConditionServiceTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTypeComparisonOutput
}

type ServiceNamingConditionConditionServiceTypeComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be SERVICE_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionServiceTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTypeComparisonArgs) ToServiceNamingConditionConditionServiceTypeComparisonOutput() ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionServiceTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTypeComparisonArgs) ToServiceNamingConditionConditionServiceTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTypeComparisonOutput)
}

// ServiceNamingConditionConditionServiceTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionServiceTypeComparisonArray and ServiceNamingConditionConditionServiceTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionServiceTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionServiceTypeComparisonArray{ ServiceNamingConditionConditionServiceTypeComparisonArgs{...} }
type ServiceNamingConditionConditionServiceTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionServiceTypeComparisonArrayOutput() ServiceNamingConditionConditionServiceTypeComparisonArrayOutput
	ToServiceNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionServiceTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionServiceTypeComparisonArray []ServiceNamingConditionConditionServiceTypeComparisonInput

func (ServiceNamingConditionConditionServiceTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionServiceTypeComparisonArray) ToServiceNamingConditionConditionServiceTypeComparisonArrayOutput() ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionServiceTypeComparisonArray) ToServiceNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionServiceTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionServiceTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) ToServiceNamingConditionConditionServiceTypeComparisonOutput() ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) ToServiceNamingConditionConditionServiceTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be SERVICE_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are BACKGROUND_ACTIVITY, CICS_SERVICE, CUSTOM_SERVICE, DATABASE_SERVICE, ENTERPRISE_SERVICE_BUS_SERVICE, EXTERNAL, IBM_INTEGRATION_BUS_SERVICE, IMS_SERVICE, MESSAGING_SERVICE, QUEUE_LISTENER_SERVICE, RMI_SERVICE, RPC_SERVICE, WEB_REQUEST_SERVICE and WEB_SERVICE.
func (o ServiceNamingConditionConditionServiceTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionServiceTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionServiceTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionServiceTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionServiceTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionServiceTypeComparisonArrayOutput) ToServiceNamingConditionConditionServiceTypeComparisonArrayOutput() ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeComparisonArrayOutput) ToServiceNamingConditionConditionServiceTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionServiceTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionServiceTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionServiceTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionServiceTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionServiceTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionServiceTypeComparisonOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be SIMPLE_HOST_TECH
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *ServiceNamingConditionConditionSimpleHostTechComparisonValue `pulumi:"value"`
}

// ServiceNamingConditionConditionSimpleHostTechComparisonInput is an input type that accepts ServiceNamingConditionConditionSimpleHostTechComparisonArgs and ServiceNamingConditionConditionSimpleHostTechComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleHostTechComparisonInput` via:
//
//	ServiceNamingConditionConditionSimpleHostTechComparisonArgs{...}
type ServiceNamingConditionConditionSimpleHostTechComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleHostTechComparisonOutput() ServiceNamingConditionConditionSimpleHostTechComparisonOutput
	ToServiceNamingConditionConditionSimpleHostTechComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonOutput
}

type ServiceNamingConditionConditionSimpleHostTechComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be SIMPLE_HOST_TECH
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionSimpleHostTechComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonOutput() ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonOutput)
}

// ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionSimpleHostTechComparisonArray and ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionSimpleHostTechComparisonArray{ ServiceNamingConditionConditionSimpleHostTechComparisonArgs{...} }
type ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput
	ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput
}

type ServiceNamingConditionConditionSimpleHostTechComparisonArray []ServiceNamingConditionConditionSimpleHostTechComparisonInput

func (ServiceNamingConditionConditionSimpleHostTechComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonArray) ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonArray) ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleHostTechComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonOutput() ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be SIMPLE_HOST_TECH
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionSimpleHostTechComparisonOutput) Value() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparison) *ServiceNamingConditionConditionSimpleHostTechComparisonValue {
		return v.Value
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSimpleHostTechComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionSimpleHostTechComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionSimpleHostTechComparison {
		return vs[0].([]ServiceNamingConditionConditionSimpleHostTechComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonValue struct {
	// Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// Non-predefined technology, use for custom technologies
	VerbatimType *string `pulumi:"verbatimType"`
}

// ServiceNamingConditionConditionSimpleHostTechComparisonValueInput is an input type that accepts ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs and ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleHostTechComparisonValueInput` via:
//
//	ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs{...}
type ServiceNamingConditionConditionSimpleHostTechComparisonValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput
	ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput
}

type ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs struct {
	// Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// Non-predefined technology, use for custom technologies
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput)
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput).ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput is an input type that accepts ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs, ServiceNamingConditionConditionSimpleHostTechComparisonValuePtr and ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput` via:
//
//	        ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput
	ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput
}

type serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs

func ServiceNamingConditionConditionSimpleHostTechComparisonValuePtr(v *ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput {
	return (*serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType)(v)
}

func (*serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionSimpleHostTechComparisonValuePtrType) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionSimpleHostTechComparisonValue) *ServiceNamingConditionConditionSimpleHostTechComparisonValue {
		return &v
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput)
}

// Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// Non-predefined technology, use for custom technologies
func (o ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionSimpleHostTechComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) ToServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Elem() ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleHostTechComparisonValue) ServiceNamingConditionConditionSimpleHostTechComparisonValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionSimpleHostTechComparisonValue
		return ret
	}).(ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput)
}

// Predefined technology, if technology is not predefined, then the verbatim type must be set. Possible values are APPARMOR, BOSH, BOSHBPM, CLOUDFOUNDRY, CONTAINERD, CRIO, DIEGO_CELL, DOCKER, GARDEN, GRSECURITY, KUBERNETES, OPENSHIFT, OPENSTACK_COMPUTE, OPENSTACK_CONTROLLER and SELINUX
func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// Non-predefined technology, use for custom technologies
func (o ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleHostTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSimpleTechComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be SIMPLE_TECH
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *ServiceNamingConditionConditionSimpleTechComparisonValue `pulumi:"value"`
}

// ServiceNamingConditionConditionSimpleTechComparisonInput is an input type that accepts ServiceNamingConditionConditionSimpleTechComparisonArgs and ServiceNamingConditionConditionSimpleTechComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleTechComparisonInput` via:
//
//	ServiceNamingConditionConditionSimpleTechComparisonArgs{...}
type ServiceNamingConditionConditionSimpleTechComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleTechComparisonOutput() ServiceNamingConditionConditionSimpleTechComparisonOutput
	ToServiceNamingConditionConditionSimpleTechComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleTechComparisonOutput
}

type ServiceNamingConditionConditionSimpleTechComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be SIMPLE_TECH
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionSimpleTechComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleTechComparisonArgs) ToServiceNamingConditionConditionSimpleTechComparisonOutput() ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleTechComparisonArgs) ToServiceNamingConditionConditionSimpleTechComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonOutput)
}

// ServiceNamingConditionConditionSimpleTechComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionSimpleTechComparisonArray and ServiceNamingConditionConditionSimpleTechComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleTechComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionSimpleTechComparisonArray{ ServiceNamingConditionConditionSimpleTechComparisonArgs{...} }
type ServiceNamingConditionConditionSimpleTechComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleTechComparisonArrayOutput
	ToServiceNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleTechComparisonArrayOutput
}

type ServiceNamingConditionConditionSimpleTechComparisonArray []ServiceNamingConditionConditionSimpleTechComparisonInput

func (ServiceNamingConditionConditionSimpleTechComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleTechComparisonArray) ToServiceNamingConditionConditionSimpleTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleTechComparisonArray) ToServiceNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonArrayOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleTechComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) ToServiceNamingConditionConditionSimpleTechComparisonOutput() ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) ToServiceNamingConditionConditionSimpleTechComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be SIMPLE_TECH
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionSimpleTechComparisonOutput) Value() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparison) *ServiceNamingConditionConditionSimpleTechComparisonValue {
		return v.Value
	}).(ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleTechComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSimpleTechComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleTechComparisonArrayOutput) ToServiceNamingConditionConditionSimpleTechComparisonArrayOutput() ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonArrayOutput) ToServiceNamingConditionConditionSimpleTechComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionSimpleTechComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionSimpleTechComparison {
		return vs[0].([]ServiceNamingConditionConditionSimpleTechComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionSimpleTechComparisonOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonValue struct {
	// Predefined technology, if technology is not predefined, then the verbatim type must be set.
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// Non-predefined technology, use for custom technologies
	VerbatimType *string `pulumi:"verbatimType"`
}

// ServiceNamingConditionConditionSimpleTechComparisonValueInput is an input type that accepts ServiceNamingConditionConditionSimpleTechComparisonValueArgs and ServiceNamingConditionConditionSimpleTechComparisonValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleTechComparisonValueInput` via:
//
//	ServiceNamingConditionConditionSimpleTechComparisonValueArgs{...}
type ServiceNamingConditionConditionSimpleTechComparisonValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleTechComparisonValueOutput() ServiceNamingConditionConditionSimpleTechComparisonValueOutput
	ToServiceNamingConditionConditionSimpleTechComparisonValueOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleTechComparisonValueOutput
}

type ServiceNamingConditionConditionSimpleTechComparisonValueArgs struct {
	// Predefined technology, if technology is not predefined, then the verbatim type must be set.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// Non-predefined technology, use for custom technologies
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleTechComparisonValueOutput() ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleTechComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonValueOutput)
}

func (i ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonValueOutput).ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput is an input type that accepts ServiceNamingConditionConditionSimpleTechComparisonValueArgs, ServiceNamingConditionConditionSimpleTechComparisonValuePtr and ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput` via:
//
//	        ServiceNamingConditionConditionSimpleTechComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput
	ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput
}

type serviceNamingConditionConditionSimpleTechComparisonValuePtrType ServiceNamingConditionConditionSimpleTechComparisonValueArgs

func ServiceNamingConditionConditionSimpleTechComparisonValuePtr(v *ServiceNamingConditionConditionSimpleTechComparisonValueArgs) ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput {
	return (*serviceNamingConditionConditionSimpleTechComparisonValuePtrType)(v)
}

func (*serviceNamingConditionConditionSimpleTechComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionSimpleTechComparisonValuePtrType) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionSimpleTechComparisonValuePtrType) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleTechComparisonValueOutput() ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleTechComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionSimpleTechComparisonValue) *ServiceNamingConditionConditionSimpleTechComparisonValue {
		return &v
	}).(ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput)
}

// Predefined technology, if technology is not predefined, then the verbatim type must be set.
func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparisonValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// Non-predefined technology, use for custom technologies
func (o ServiceNamingConditionConditionSimpleTechComparisonValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSimpleTechComparisonValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionSimpleTechComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput() ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) ToServiceNamingConditionConditionSimpleTechComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) Elem() ServiceNamingConditionConditionSimpleTechComparisonValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleTechComparisonValue) ServiceNamingConditionConditionSimpleTechComparisonValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionSimpleTechComparisonValue
		return ret
	}).(ServiceNamingConditionConditionSimpleTechComparisonValueOutput)
}

// Predefined technology, if technology is not predefined, then the verbatim type must be set.
func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// Non-predefined technology, use for custom technologies
func (o ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionSimpleTechComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionString struct {
	// The comparison is case-sensitive (`true`) or insensitive (`false`)
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionStringInput is an input type that accepts ServiceNamingConditionConditionStringArgs and ServiceNamingConditionConditionStringOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringInput` via:
//
//	ServiceNamingConditionConditionStringArgs{...}
type ServiceNamingConditionConditionStringInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringOutput() ServiceNamingConditionConditionStringOutput
	ToServiceNamingConditionConditionStringOutputWithContext(context.Context) ServiceNamingConditionConditionStringOutput
}

type ServiceNamingConditionConditionStringArgs struct {
	// The comparison is case-sensitive (`true`) or insensitive (`false`)
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionString)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringArgs) ToServiceNamingConditionConditionStringOutput() ServiceNamingConditionConditionStringOutput {
	return i.ToServiceNamingConditionConditionStringOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringArgs) ToServiceNamingConditionConditionStringOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringOutput)
}

// ServiceNamingConditionConditionStringArrayInput is an input type that accepts ServiceNamingConditionConditionStringArray and ServiceNamingConditionConditionStringArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringArrayInput` via:
//
//	ServiceNamingConditionConditionStringArray{ ServiceNamingConditionConditionStringArgs{...} }
type ServiceNamingConditionConditionStringArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringArrayOutput() ServiceNamingConditionConditionStringArrayOutput
	ToServiceNamingConditionConditionStringArrayOutputWithContext(context.Context) ServiceNamingConditionConditionStringArrayOutput
}

type ServiceNamingConditionConditionStringArray []ServiceNamingConditionConditionStringInput

func (ServiceNamingConditionConditionStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionString)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringArray) ToServiceNamingConditionConditionStringArrayOutput() ServiceNamingConditionConditionStringArrayOutput {
	return i.ToServiceNamingConditionConditionStringArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringArray) ToServiceNamingConditionConditionStringArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringArrayOutput)
}

type ServiceNamingConditionConditionStringOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionString)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringOutput) ToServiceNamingConditionConditionStringOutput() ServiceNamingConditionConditionStringOutput {
	return o
}

func (o ServiceNamingConditionConditionStringOutput) ToServiceNamingConditionConditionStringOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringOutput {
	return o
}

// The comparison is case-sensitive (`true`) or insensitive (`false`)
func (o ServiceNamingConditionConditionStringOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionStringOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionStringOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionStringOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionStringArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionString)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringArrayOutput) ToServiceNamingConditionConditionStringArrayOutput() ServiceNamingConditionConditionStringArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringArrayOutput) ToServiceNamingConditionConditionStringArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionString {
		return vs[0].([]ServiceNamingConditionConditionString)[vs[1].(int)]
	}).(ServiceNamingConditionConditionStringOutput)
}

type ServiceNamingConditionConditionStringComparison struct {
	// The comparison is case-sensitive (`true`) or insensitive (`false`)
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be STRING
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionStringComparisonInput is an input type that accepts ServiceNamingConditionConditionStringComparisonArgs and ServiceNamingConditionConditionStringComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringComparisonInput` via:
//
//	ServiceNamingConditionConditionStringComparisonArgs{...}
type ServiceNamingConditionConditionStringComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringComparisonOutput() ServiceNamingConditionConditionStringComparisonOutput
	ToServiceNamingConditionConditionStringComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionStringComparisonOutput
}

type ServiceNamingConditionConditionStringComparisonArgs struct {
	// The comparison is case-sensitive (`true`) or insensitive (`false`)
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be STRING
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionStringComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringComparisonArgs) ToServiceNamingConditionConditionStringComparisonOutput() ServiceNamingConditionConditionStringComparisonOutput {
	return i.ToServiceNamingConditionConditionStringComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringComparisonArgs) ToServiceNamingConditionConditionStringComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringComparisonOutput)
}

// ServiceNamingConditionConditionStringComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionStringComparisonArray and ServiceNamingConditionConditionStringComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionStringComparisonArray{ ServiceNamingConditionConditionStringComparisonArgs{...} }
type ServiceNamingConditionConditionStringComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringComparisonArrayOutput() ServiceNamingConditionConditionStringComparisonArrayOutput
	ToServiceNamingConditionConditionStringComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionStringComparisonArrayOutput
}

type ServiceNamingConditionConditionStringComparisonArray []ServiceNamingConditionConditionStringComparisonInput

func (ServiceNamingConditionConditionStringComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringComparisonArray) ToServiceNamingConditionConditionStringComparisonArrayOutput() ServiceNamingConditionConditionStringComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionStringComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringComparisonArray) ToServiceNamingConditionConditionStringComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringComparisonArrayOutput)
}

type ServiceNamingConditionConditionStringComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringComparisonOutput) ToServiceNamingConditionConditionStringComparisonOutput() ServiceNamingConditionConditionStringComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionStringComparisonOutput) ToServiceNamingConditionConditionStringComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringComparisonOutput {
	return o
}

// The comparison is case-sensitive (`true`) or insensitive (`false`)
func (o ServiceNamingConditionConditionStringComparisonOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionStringComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are BEGINS_WITH, CONTAINS, ENDS_WITH, EQUALS, EXISTS and REGEX_MATCHES. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionStringComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be STRING
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionStringComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionStringComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionStringComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionStringComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringComparisonArrayOutput) ToServiceNamingConditionConditionStringComparisonArrayOutput() ServiceNamingConditionConditionStringComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringComparisonArrayOutput) ToServiceNamingConditionConditionStringComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionStringComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionStringComparison {
		return vs[0].([]ServiceNamingConditionConditionStringComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionStringComparisonOutput)
}

type ServiceNamingConditionConditionStringConditionKey struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
	//    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
	//    - `AMAZON_ECR_IMAGE_REGION`
	//    - `AMAZON_LAMBDA_FUNCTION_NAME`
	//    - `AMAZON_REGION`
	//    - `APACHE_CONFIG_PATH`
	//    - `APACHE_SPARK_MASTER_IP_ADDRESS`
	//    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
	//    - `AWS_ECS_CLUSTER`
	//    - `AWS_ECS_CONTAINERNAME`
	//    - `AWS_ECS_FAMILY`
	//    - `AWS_ECS_REVISION`
	//    - `CASSANDRA_CLUSTER_NAME`
	//    - `CATALINA_BASE`
	//    - `CATALINA_HOME`
	//    - `CLOUD_FOUNDRY_APP_ID`
	//    - `CLOUD_FOUNDRY_APP_NAME`
	//    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
	//    - `CLOUD_FOUNDRY_SPACE_ID`
	//    - `CLOUD_FOUNDRY_SPACE_NAME`
	//    - `COLDFUSION_JVM_CONFIG_FILE`
	//    - `COLDFUSION_SERVICE_NAME`
	//    - `COMMAND_LINE_ARGS`
	//    - `DOTNET_COMMAND`
	//    - `DOTNET_COMMAND_PATH`
	//    - `DYNATRACE_CLUSTER_ID`
	//    - `DYNATRACE_NODE_ID`
	//    - `ELASTICSEARCH_CLUSTER_NAME`
	//    - `ELASTICSEARCH_NODE_NAME`
	//    - `EQUINOX_CONFIG_PATH`
	//    - `EXE_NAME`
	//    - `EXE_PATH`
	//    - `GLASS_FISH_DOMAIN_NAME`
	//    - `GLASS_FISH_INSTANCE_NAME`
	//    - `GOOGLE_APP_ENGINE_INSTANCE`
	//    - `GOOGLE_APP_ENGINE_SERVICE`
	//    - `GOOGLE_CLOUD_PROJECT`
	//    - `HYBRIS_BIN_DIRECTORY`
	//    - `HYBRIS_CONFIG_DIRECTORY`
	//    - `HYBRIS_DATA_DIRECTORY`
	//    - `IBM_CICS_REGION`
	//    - `IBM_CTG_NAME`
	//    - `IBM_IMS_CONNECT_REGION`
	//    - `IBM_IMS_CONTROL_REGION`
	//    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
	//    - `IBM_IMS_SOAP_GW_NAME`
	//    - `IBM_INTEGRATION_NODE_NAME`
	//    - `IBM_INTEGRATION_SERVER_NAME`
	//    - `IIS_APP_POOL`
	//    - `IIS_ROLE_NAME`
	//    - `JAVA_JAR_FILE`
	//    - `JAVA_JAR_PATH`
	//    - `JAVA_MAIN_CLASS`
	//    - `JAVA_MAIN_MODULE`
	//    - `JBOSS_HOME`
	//    - `JBOSS_MODE`
	//    - `JBOSS_SERVER_NAME`
	//    - `KUBERNETES_BASE_POD_NAME`
	//    - `KUBERNETES_CONTAINER_NAME`
	//    - `KUBERNETES_FULL_POD_NAME`
	//    - `KUBERNETES_NAMESPACE`
	//    - `KUBERNETES_POD_UID`
	//    - `MSSQL_INSTANCE_NAME`
	//    - `NODE_JS_APP_BASE_DIRECTORY`
	//    - `NODE_JS_APP_NAME`
	//    - `NODE_JS_SCRIPT_NAME`
	//    - `ORACLE_SID`
	//    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
	//    - `PHP_SCRIPT_PATH`
	//    - `PHP_WORKING_DIRECTORY`
	//    - `RUBY_APP_ROOT_PATH`
	//    - `RUBY_SCRIPT_PATH`
	//    - `RULE_RESULT`
	//    - `SOFTWAREAG_INSTALL_ROOT`
	//    - `SOFTWAREAG_PRODUCTPROPNAME`
	//    - `SPRINGBOOT_APP_NAME`
	//    - `SPRINGBOOT_PROFILE_NAME`
	//    - `SPRINGBOOT_STARTUP_CLASS`
	//    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
	//    - `TIBCO_BUSINESSWORKS_CE_VERSION`
	//    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
	//    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
	//    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
	//    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
	//    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
	//    - `TIBCO_BUSINESS_WORKS_HOME`
	//    - `VARNISH_INSTANCE_NAME`
	//    - `WEB_LOGIC_CLUSTER_NAME`
	//    - `WEB_LOGIC_DOMAIN_NAME`
	//    - `WEB_LOGIC_HOME`
	//    - `WEB_LOGIC_NAME`
	//    - `WEB_SPHERE_CELL_NAME`
	//    - `WEB_SPHERE_CLUSTER_NAME`
	//    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
	DynamicKey string `pulumi:"dynamicKey"`
	// if specified, needs to be `STRING`
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionStringConditionKeyInput is an input type that accepts ServiceNamingConditionConditionStringConditionKeyArgs and ServiceNamingConditionConditionStringConditionKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringConditionKeyInput` via:
//
//	ServiceNamingConditionConditionStringConditionKeyArgs{...}
type ServiceNamingConditionConditionStringConditionKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringConditionKeyOutput() ServiceNamingConditionConditionStringConditionKeyOutput
	ToServiceNamingConditionConditionStringConditionKeyOutputWithContext(context.Context) ServiceNamingConditionConditionStringConditionKeyOutput
}

type ServiceNamingConditionConditionStringConditionKeyArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
	//    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
	//    - `AMAZON_ECR_IMAGE_REGION`
	//    - `AMAZON_LAMBDA_FUNCTION_NAME`
	//    - `AMAZON_REGION`
	//    - `APACHE_CONFIG_PATH`
	//    - `APACHE_SPARK_MASTER_IP_ADDRESS`
	//    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
	//    - `AWS_ECS_CLUSTER`
	//    - `AWS_ECS_CONTAINERNAME`
	//    - `AWS_ECS_FAMILY`
	//    - `AWS_ECS_REVISION`
	//    - `CASSANDRA_CLUSTER_NAME`
	//    - `CATALINA_BASE`
	//    - `CATALINA_HOME`
	//    - `CLOUD_FOUNDRY_APP_ID`
	//    - `CLOUD_FOUNDRY_APP_NAME`
	//    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
	//    - `CLOUD_FOUNDRY_SPACE_ID`
	//    - `CLOUD_FOUNDRY_SPACE_NAME`
	//    - `COLDFUSION_JVM_CONFIG_FILE`
	//    - `COLDFUSION_SERVICE_NAME`
	//    - `COMMAND_LINE_ARGS`
	//    - `DOTNET_COMMAND`
	//    - `DOTNET_COMMAND_PATH`
	//    - `DYNATRACE_CLUSTER_ID`
	//    - `DYNATRACE_NODE_ID`
	//    - `ELASTICSEARCH_CLUSTER_NAME`
	//    - `ELASTICSEARCH_NODE_NAME`
	//    - `EQUINOX_CONFIG_PATH`
	//    - `EXE_NAME`
	//    - `EXE_PATH`
	//    - `GLASS_FISH_DOMAIN_NAME`
	//    - `GLASS_FISH_INSTANCE_NAME`
	//    - `GOOGLE_APP_ENGINE_INSTANCE`
	//    - `GOOGLE_APP_ENGINE_SERVICE`
	//    - `GOOGLE_CLOUD_PROJECT`
	//    - `HYBRIS_BIN_DIRECTORY`
	//    - `HYBRIS_CONFIG_DIRECTORY`
	//    - `HYBRIS_DATA_DIRECTORY`
	//    - `IBM_CICS_REGION`
	//    - `IBM_CTG_NAME`
	//    - `IBM_IMS_CONNECT_REGION`
	//    - `IBM_IMS_CONTROL_REGION`
	//    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
	//    - `IBM_IMS_SOAP_GW_NAME`
	//    - `IBM_INTEGRATION_NODE_NAME`
	//    - `IBM_INTEGRATION_SERVER_NAME`
	//    - `IIS_APP_POOL`
	//    - `IIS_ROLE_NAME`
	//    - `JAVA_JAR_FILE`
	//    - `JAVA_JAR_PATH`
	//    - `JAVA_MAIN_CLASS`
	//    - `JAVA_MAIN_MODULE`
	//    - `JBOSS_HOME`
	//    - `JBOSS_MODE`
	//    - `JBOSS_SERVER_NAME`
	//    - `KUBERNETES_BASE_POD_NAME`
	//    - `KUBERNETES_CONTAINER_NAME`
	//    - `KUBERNETES_FULL_POD_NAME`
	//    - `KUBERNETES_NAMESPACE`
	//    - `KUBERNETES_POD_UID`
	//    - `MSSQL_INSTANCE_NAME`
	//    - `NODE_JS_APP_BASE_DIRECTORY`
	//    - `NODE_JS_APP_NAME`
	//    - `NODE_JS_SCRIPT_NAME`
	//    - `ORACLE_SID`
	//    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
	//    - `PHP_SCRIPT_PATH`
	//    - `PHP_WORKING_DIRECTORY`
	//    - `RUBY_APP_ROOT_PATH`
	//    - `RUBY_SCRIPT_PATH`
	//    - `RULE_RESULT`
	//    - `SOFTWAREAG_INSTALL_ROOT`
	//    - `SOFTWAREAG_PRODUCTPROPNAME`
	//    - `SPRINGBOOT_APP_NAME`
	//    - `SPRINGBOOT_PROFILE_NAME`
	//    - `SPRINGBOOT_STARTUP_CLASS`
	//    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
	//    - `TIBCO_BUSINESSWORKS_CE_VERSION`
	//    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
	//    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
	//    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
	//    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
	//    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
	//    - `TIBCO_BUSINESS_WORKS_HOME`
	//    - `VARNISH_INSTANCE_NAME`
	//    - `WEB_LOGIC_CLUSTER_NAME`
	//    - `WEB_LOGIC_DOMAIN_NAME`
	//    - `WEB_LOGIC_HOME`
	//    - `WEB_LOGIC_NAME`
	//    - `WEB_SPHERE_CELL_NAME`
	//    - `WEB_SPHERE_CLUSTER_NAME`
	//    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// if specified, needs to be `STRING`
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionStringConditionKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringConditionKeyArgs) ToServiceNamingConditionConditionStringConditionKeyOutput() ServiceNamingConditionConditionStringConditionKeyOutput {
	return i.ToServiceNamingConditionConditionStringConditionKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringConditionKeyArgs) ToServiceNamingConditionConditionStringConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringConditionKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringConditionKeyOutput)
}

// ServiceNamingConditionConditionStringConditionKeyArrayInput is an input type that accepts ServiceNamingConditionConditionStringConditionKeyArray and ServiceNamingConditionConditionStringConditionKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringConditionKeyArrayInput` via:
//
//	ServiceNamingConditionConditionStringConditionKeyArray{ ServiceNamingConditionConditionStringConditionKeyArgs{...} }
type ServiceNamingConditionConditionStringConditionKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringConditionKeyArrayOutput() ServiceNamingConditionConditionStringConditionKeyArrayOutput
	ToServiceNamingConditionConditionStringConditionKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionStringConditionKeyArrayOutput
}

type ServiceNamingConditionConditionStringConditionKeyArray []ServiceNamingConditionConditionStringConditionKeyInput

func (ServiceNamingConditionConditionStringConditionKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringConditionKeyArray) ToServiceNamingConditionConditionStringConditionKeyArrayOutput() ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return i.ToServiceNamingConditionConditionStringConditionKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringConditionKeyArray) ToServiceNamingConditionConditionStringConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringConditionKeyArrayOutput)
}

type ServiceNamingConditionConditionStringConditionKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringConditionKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringConditionKeyOutput) ToServiceNamingConditionConditionStringConditionKeyOutput() ServiceNamingConditionConditionStringConditionKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionStringConditionKeyOutput) ToServiceNamingConditionConditionStringConditionKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringConditionKeyOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionStringConditionKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringConditionKey) string { return v.Attribute }).(pulumi.StringOutput)
}

// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
//   - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
//   - `AMAZON_ECR_IMAGE_REGION`
//   - `AMAZON_LAMBDA_FUNCTION_NAME`
//   - `AMAZON_REGION`
//   - `APACHE_CONFIG_PATH`
//   - `APACHE_SPARK_MASTER_IP_ADDRESS`
//   - `ASP_DOT_NET_CORE_APPLICATION_PATH`
//   - `AWS_ECS_CLUSTER`
//   - `AWS_ECS_CONTAINERNAME`
//   - `AWS_ECS_FAMILY`
//   - `AWS_ECS_REVISION`
//   - `CASSANDRA_CLUSTER_NAME`
//   - `CATALINA_BASE`
//   - `CATALINA_HOME`
//   - `CLOUD_FOUNDRY_APP_ID`
//   - `CLOUD_FOUNDRY_APP_NAME`
//   - `CLOUD_FOUNDRY_INSTANCE_INDEX`
//   - `CLOUD_FOUNDRY_SPACE_ID`
//   - `CLOUD_FOUNDRY_SPACE_NAME`
//   - `COLDFUSION_JVM_CONFIG_FILE`
//   - `COLDFUSION_SERVICE_NAME`
//   - `COMMAND_LINE_ARGS`
//   - `DOTNET_COMMAND`
//   - `DOTNET_COMMAND_PATH`
//   - `DYNATRACE_CLUSTER_ID`
//   - `DYNATRACE_NODE_ID`
//   - `ELASTICSEARCH_CLUSTER_NAME`
//   - `ELASTICSEARCH_NODE_NAME`
//   - `EQUINOX_CONFIG_PATH`
//   - `EXE_NAME`
//   - `EXE_PATH`
//   - `GLASS_FISH_DOMAIN_NAME`
//   - `GLASS_FISH_INSTANCE_NAME`
//   - `GOOGLE_APP_ENGINE_INSTANCE`
//   - `GOOGLE_APP_ENGINE_SERVICE`
//   - `GOOGLE_CLOUD_PROJECT`
//   - `HYBRIS_BIN_DIRECTORY`
//   - `HYBRIS_CONFIG_DIRECTORY`
//   - `HYBRIS_DATA_DIRECTORY`
//   - `IBM_CICS_REGION`
//   - `IBM_CTG_NAME`
//   - `IBM_IMS_CONNECT_REGION`
//   - `IBM_IMS_CONTROL_REGION`
//   - `IBM_IMS_MESSAGE_PROCESSING_REGION`
//   - `IBM_IMS_SOAP_GW_NAME`
//   - `IBM_INTEGRATION_NODE_NAME`
//   - `IBM_INTEGRATION_SERVER_NAME`
//   - `IIS_APP_POOL`
//   - `IIS_ROLE_NAME`
//   - `JAVA_JAR_FILE`
//   - `JAVA_JAR_PATH`
//   - `JAVA_MAIN_CLASS`
//   - `JAVA_MAIN_MODULE`
//   - `JBOSS_HOME`
//   - `JBOSS_MODE`
//   - `JBOSS_SERVER_NAME`
//   - `KUBERNETES_BASE_POD_NAME`
//   - `KUBERNETES_CONTAINER_NAME`
//   - `KUBERNETES_FULL_POD_NAME`
//   - `KUBERNETES_NAMESPACE`
//   - `KUBERNETES_POD_UID`
//   - `MSSQL_INSTANCE_NAME`
//   - `NODE_JS_APP_BASE_DIRECTORY`
//   - `NODE_JS_APP_NAME`
//   - `NODE_JS_SCRIPT_NAME`
//   - `ORACLE_SID`
//   - `PG_ID_CALC_INPUT_KEY_LINKAGE`
//   - `PHP_SCRIPT_PATH`
//   - `PHP_WORKING_DIRECTORY`
//   - `RUBY_APP_ROOT_PATH`
//   - `RUBY_SCRIPT_PATH`
//   - `RULE_RESULT`
//   - `SOFTWAREAG_INSTALL_ROOT`
//   - `SOFTWAREAG_PRODUCTPROPNAME`
//   - `SPRINGBOOT_APP_NAME`
//   - `SPRINGBOOT_PROFILE_NAME`
//   - `SPRINGBOOT_STARTUP_CLASS`
//   - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
//   - `TIBCO_BUSINESSWORKS_CE_VERSION`
//   - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
//   - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
//   - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
//   - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
//   - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
//   - `TIBCO_BUSINESS_WORKS_HOME`
//   - `VARNISH_INSTANCE_NAME`
//   - `WEB_LOGIC_CLUSTER_NAME`
//   - `WEB_LOGIC_DOMAIN_NAME`
//   - `WEB_LOGIC_HOME`
//   - `WEB_LOGIC_NAME`
//   - `WEB_SPHERE_CELL_NAME`
//   - `WEB_SPHERE_CLUSTER_NAME`
//   - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
func (o ServiceNamingConditionConditionStringConditionKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringConditionKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// if specified, needs to be `STRING`
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionStringConditionKeyOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringConditionKey) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionStringConditionKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringConditionKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionStringConditionKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringConditionKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringConditionKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringConditionKeyArrayOutput) ToServiceNamingConditionConditionStringConditionKeyArrayOutput() ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringConditionKeyArrayOutput) ToServiceNamingConditionConditionStringConditionKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringConditionKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringConditionKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionStringConditionKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionStringConditionKey {
		return vs[0].([]ServiceNamingConditionConditionStringConditionKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionStringConditionKeyOutput)
}

type ServiceNamingConditionConditionStringKey struct {
	// The attribute to be used for comparision
	Attribute string `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
	//    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
	//    - `AMAZON_ECR_IMAGE_REGION`
	//    - `AMAZON_LAMBDA_FUNCTION_NAME`
	//    - `AMAZON_REGION`
	//    - `APACHE_CONFIG_PATH`
	//    - `APACHE_SPARK_MASTER_IP_ADDRESS`
	//    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
	//    - `AWS_ECS_CLUSTER`
	//    - `AWS_ECS_CONTAINERNAME`
	//    - `AWS_ECS_FAMILY`
	//    - `AWS_ECS_REVISION`
	//    - `CASSANDRA_CLUSTER_NAME`
	//    - `CATALINA_BASE`
	//    - `CATALINA_HOME`
	//    - `CLOUD_FOUNDRY_APP_ID`
	//    - `CLOUD_FOUNDRY_APP_NAME`
	//    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
	//    - `CLOUD_FOUNDRY_SPACE_ID`
	//    - `CLOUD_FOUNDRY_SPACE_NAME`
	//    - `COLDFUSION_JVM_CONFIG_FILE`
	//    - `COLDFUSION_SERVICE_NAME`
	//    - `COMMAND_LINE_ARGS`
	//    - `DOTNET_COMMAND`
	//    - `DOTNET_COMMAND_PATH`
	//    - `DYNATRACE_CLUSTER_ID`
	//    - `DYNATRACE_NODE_ID`
	//    - `ELASTICSEARCH_CLUSTER_NAME`
	//    - `ELASTICSEARCH_NODE_NAME`
	//    - `EQUINOX_CONFIG_PATH`
	//    - `EXE_NAME`
	//    - `EXE_PATH`
	//    - `GLASS_FISH_DOMAIN_NAME`
	//    - `GLASS_FISH_INSTANCE_NAME`
	//    - `GOOGLE_APP_ENGINE_INSTANCE`
	//    - `GOOGLE_APP_ENGINE_SERVICE`
	//    - `GOOGLE_CLOUD_PROJECT`
	//    - `HYBRIS_BIN_DIRECTORY`
	//    - `HYBRIS_CONFIG_DIRECTORY`
	//    - `HYBRIS_DATA_DIRECTORY`
	//    - `IBM_CICS_REGION`
	//    - `IBM_CTG_NAME`
	//    - `IBM_IMS_CONNECT_REGION`
	//    - `IBM_IMS_CONTROL_REGION`
	//    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
	//    - `IBM_IMS_SOAP_GW_NAME`
	//    - `IBM_INTEGRATION_NODE_NAME`
	//    - `IBM_INTEGRATION_SERVER_NAME`
	//    - `IIS_APP_POOL`
	//    - `IIS_ROLE_NAME`
	//    - `JAVA_JAR_FILE`
	//    - `JAVA_JAR_PATH`
	//    - `JAVA_MAIN_CLASS`
	//    - `JAVA_MAIN_MODULE`
	//    - `JBOSS_HOME`
	//    - `JBOSS_MODE`
	//    - `JBOSS_SERVER_NAME`
	//    - `KUBERNETES_BASE_POD_NAME`
	//    - `KUBERNETES_CONTAINER_NAME`
	//    - `KUBERNETES_FULL_POD_NAME`
	//    - `KUBERNETES_NAMESPACE`
	//    - `KUBERNETES_POD_UID`
	//    - `MSSQL_INSTANCE_NAME`
	//    - `NODE_JS_APP_BASE_DIRECTORY`
	//    - `NODE_JS_APP_NAME`
	//    - `NODE_JS_SCRIPT_NAME`
	//    - `ORACLE_SID`
	//    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
	//    - `PHP_SCRIPT_PATH`
	//    - `PHP_WORKING_DIRECTORY`
	//    - `RUBY_APP_ROOT_PATH`
	//    - `RUBY_SCRIPT_PATH`
	//    - `RULE_RESULT`
	//    - `SOFTWAREAG_INSTALL_ROOT`
	//    - `SOFTWAREAG_PRODUCTPROPNAME`
	//    - `SPRINGBOOT_APP_NAME`
	//    - `SPRINGBOOT_PROFILE_NAME`
	//    - `SPRINGBOOT_STARTUP_CLASS`
	//    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
	//    - `TIBCO_BUSINESSWORKS_CE_VERSION`
	//    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
	//    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
	//    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
	//    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
	//    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
	//    - `TIBCO_BUSINESS_WORKS_HOME`
	//    - `VARNISH_INSTANCE_NAME`
	//    - `WEB_LOGIC_CLUSTER_NAME`
	//    - `WEB_LOGIC_DOMAIN_NAME`
	//    - `WEB_LOGIC_HOME`
	//    - `WEB_LOGIC_NAME`
	//    - `WEB_SPHERE_CELL_NAME`
	//    - `WEB_SPHERE_CLUSTER_NAME`
	//    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
	DynamicKey string `pulumi:"dynamicKey"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
}

// ServiceNamingConditionConditionStringKeyInput is an input type that accepts ServiceNamingConditionConditionStringKeyArgs and ServiceNamingConditionConditionStringKeyOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringKeyInput` via:
//
//	ServiceNamingConditionConditionStringKeyArgs{...}
type ServiceNamingConditionConditionStringKeyInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringKeyOutput() ServiceNamingConditionConditionStringKeyOutput
	ToServiceNamingConditionConditionStringKeyOutputWithContext(context.Context) ServiceNamingConditionConditionStringKeyOutput
}

type ServiceNamingConditionConditionStringKeyArgs struct {
	// The attribute to be used for comparision
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
	//    - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
	//    - `AMAZON_ECR_IMAGE_REGION`
	//    - `AMAZON_LAMBDA_FUNCTION_NAME`
	//    - `AMAZON_REGION`
	//    - `APACHE_CONFIG_PATH`
	//    - `APACHE_SPARK_MASTER_IP_ADDRESS`
	//    - `ASP_DOT_NET_CORE_APPLICATION_PATH`
	//    - `AWS_ECS_CLUSTER`
	//    - `AWS_ECS_CONTAINERNAME`
	//    - `AWS_ECS_FAMILY`
	//    - `AWS_ECS_REVISION`
	//    - `CASSANDRA_CLUSTER_NAME`
	//    - `CATALINA_BASE`
	//    - `CATALINA_HOME`
	//    - `CLOUD_FOUNDRY_APP_ID`
	//    - `CLOUD_FOUNDRY_APP_NAME`
	//    - `CLOUD_FOUNDRY_INSTANCE_INDEX`
	//    - `CLOUD_FOUNDRY_SPACE_ID`
	//    - `CLOUD_FOUNDRY_SPACE_NAME`
	//    - `COLDFUSION_JVM_CONFIG_FILE`
	//    - `COLDFUSION_SERVICE_NAME`
	//    - `COMMAND_LINE_ARGS`
	//    - `DOTNET_COMMAND`
	//    - `DOTNET_COMMAND_PATH`
	//    - `DYNATRACE_CLUSTER_ID`
	//    - `DYNATRACE_NODE_ID`
	//    - `ELASTICSEARCH_CLUSTER_NAME`
	//    - `ELASTICSEARCH_NODE_NAME`
	//    - `EQUINOX_CONFIG_PATH`
	//    - `EXE_NAME`
	//    - `EXE_PATH`
	//    - `GLASS_FISH_DOMAIN_NAME`
	//    - `GLASS_FISH_INSTANCE_NAME`
	//    - `GOOGLE_APP_ENGINE_INSTANCE`
	//    - `GOOGLE_APP_ENGINE_SERVICE`
	//    - `GOOGLE_CLOUD_PROJECT`
	//    - `HYBRIS_BIN_DIRECTORY`
	//    - `HYBRIS_CONFIG_DIRECTORY`
	//    - `HYBRIS_DATA_DIRECTORY`
	//    - `IBM_CICS_REGION`
	//    - `IBM_CTG_NAME`
	//    - `IBM_IMS_CONNECT_REGION`
	//    - `IBM_IMS_CONTROL_REGION`
	//    - `IBM_IMS_MESSAGE_PROCESSING_REGION`
	//    - `IBM_IMS_SOAP_GW_NAME`
	//    - `IBM_INTEGRATION_NODE_NAME`
	//    - `IBM_INTEGRATION_SERVER_NAME`
	//    - `IIS_APP_POOL`
	//    - `IIS_ROLE_NAME`
	//    - `JAVA_JAR_FILE`
	//    - `JAVA_JAR_PATH`
	//    - `JAVA_MAIN_CLASS`
	//    - `JAVA_MAIN_MODULE`
	//    - `JBOSS_HOME`
	//    - `JBOSS_MODE`
	//    - `JBOSS_SERVER_NAME`
	//    - `KUBERNETES_BASE_POD_NAME`
	//    - `KUBERNETES_CONTAINER_NAME`
	//    - `KUBERNETES_FULL_POD_NAME`
	//    - `KUBERNETES_NAMESPACE`
	//    - `KUBERNETES_POD_UID`
	//    - `MSSQL_INSTANCE_NAME`
	//    - `NODE_JS_APP_BASE_DIRECTORY`
	//    - `NODE_JS_APP_NAME`
	//    - `NODE_JS_SCRIPT_NAME`
	//    - `ORACLE_SID`
	//    - `PG_ID_CALC_INPUT_KEY_LINKAGE`
	//    - `PHP_SCRIPT_PATH`
	//    - `PHP_WORKING_DIRECTORY`
	//    - `RUBY_APP_ROOT_PATH`
	//    - `RUBY_SCRIPT_PATH`
	//    - `RULE_RESULT`
	//    - `SOFTWAREAG_INSTALL_ROOT`
	//    - `SOFTWAREAG_PRODUCTPROPNAME`
	//    - `SPRINGBOOT_APP_NAME`
	//    - `SPRINGBOOT_PROFILE_NAME`
	//    - `SPRINGBOOT_STARTUP_CLASS`
	//    - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
	//    - `TIBCO_BUSINESSWORKS_CE_VERSION`
	//    - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
	//    - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
	//    - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
	//    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
	//    - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
	//    - `TIBCO_BUSINESS_WORKS_HOME`
	//    - `VARNISH_INSTANCE_NAME`
	//    - `WEB_LOGIC_CLUSTER_NAME`
	//    - `WEB_LOGIC_DOMAIN_NAME`
	//    - `WEB_LOGIC_HOME`
	//    - `WEB_LOGIC_NAME`
	//    - `WEB_SPHERE_CELL_NAME`
	//    - `WEB_SPHERE_CLUSTER_NAME`
	//    - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
	DynamicKey pulumi.StringInput `pulumi:"dynamicKey"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
}

func (ServiceNamingConditionConditionStringKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringKeyArgs) ToServiceNamingConditionConditionStringKeyOutput() ServiceNamingConditionConditionStringKeyOutput {
	return i.ToServiceNamingConditionConditionStringKeyOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringKeyArgs) ToServiceNamingConditionConditionStringKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringKeyOutput)
}

// ServiceNamingConditionConditionStringKeyArrayInput is an input type that accepts ServiceNamingConditionConditionStringKeyArray and ServiceNamingConditionConditionStringKeyArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionStringKeyArrayInput` via:
//
//	ServiceNamingConditionConditionStringKeyArray{ ServiceNamingConditionConditionStringKeyArgs{...} }
type ServiceNamingConditionConditionStringKeyArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionStringKeyArrayOutput() ServiceNamingConditionConditionStringKeyArrayOutput
	ToServiceNamingConditionConditionStringKeyArrayOutputWithContext(context.Context) ServiceNamingConditionConditionStringKeyArrayOutput
}

type ServiceNamingConditionConditionStringKeyArray []ServiceNamingConditionConditionStringKeyInput

func (ServiceNamingConditionConditionStringKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringKey)(nil)).Elem()
}

func (i ServiceNamingConditionConditionStringKeyArray) ToServiceNamingConditionConditionStringKeyArrayOutput() ServiceNamingConditionConditionStringKeyArrayOutput {
	return i.ToServiceNamingConditionConditionStringKeyArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionStringKeyArray) ToServiceNamingConditionConditionStringKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionStringKeyArrayOutput)
}

type ServiceNamingConditionConditionStringKeyOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionStringKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringKeyOutput) ToServiceNamingConditionConditionStringKeyOutput() ServiceNamingConditionConditionStringKeyOutput {
	return o
}

func (o ServiceNamingConditionConditionStringKeyOutput) ToServiceNamingConditionConditionStringKeyOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringKeyOutput {
	return o
}

// The attribute to be used for comparision
func (o ServiceNamingConditionConditionStringKeyOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringKey) string { return v.Attribute }).(pulumi.StringOutput)
}

// The key of the attribute, which need dynamic keys. Not applicable otherwise, as the attibute itself acts as a key. Possible values are
//   - `AMAZON_ECR_IMAGE_ACCOUNT_ID`
//   - `AMAZON_ECR_IMAGE_REGION`
//   - `AMAZON_LAMBDA_FUNCTION_NAME`
//   - `AMAZON_REGION`
//   - `APACHE_CONFIG_PATH`
//   - `APACHE_SPARK_MASTER_IP_ADDRESS`
//   - `ASP_DOT_NET_CORE_APPLICATION_PATH`
//   - `AWS_ECS_CLUSTER`
//   - `AWS_ECS_CONTAINERNAME`
//   - `AWS_ECS_FAMILY`
//   - `AWS_ECS_REVISION`
//   - `CASSANDRA_CLUSTER_NAME`
//   - `CATALINA_BASE`
//   - `CATALINA_HOME`
//   - `CLOUD_FOUNDRY_APP_ID`
//   - `CLOUD_FOUNDRY_APP_NAME`
//   - `CLOUD_FOUNDRY_INSTANCE_INDEX`
//   - `CLOUD_FOUNDRY_SPACE_ID`
//   - `CLOUD_FOUNDRY_SPACE_NAME`
//   - `COLDFUSION_JVM_CONFIG_FILE`
//   - `COLDFUSION_SERVICE_NAME`
//   - `COMMAND_LINE_ARGS`
//   - `DOTNET_COMMAND`
//   - `DOTNET_COMMAND_PATH`
//   - `DYNATRACE_CLUSTER_ID`
//   - `DYNATRACE_NODE_ID`
//   - `ELASTICSEARCH_CLUSTER_NAME`
//   - `ELASTICSEARCH_NODE_NAME`
//   - `EQUINOX_CONFIG_PATH`
//   - `EXE_NAME`
//   - `EXE_PATH`
//   - `GLASS_FISH_DOMAIN_NAME`
//   - `GLASS_FISH_INSTANCE_NAME`
//   - `GOOGLE_APP_ENGINE_INSTANCE`
//   - `GOOGLE_APP_ENGINE_SERVICE`
//   - `GOOGLE_CLOUD_PROJECT`
//   - `HYBRIS_BIN_DIRECTORY`
//   - `HYBRIS_CONFIG_DIRECTORY`
//   - `HYBRIS_DATA_DIRECTORY`
//   - `IBM_CICS_REGION`
//   - `IBM_CTG_NAME`
//   - `IBM_IMS_CONNECT_REGION`
//   - `IBM_IMS_CONTROL_REGION`
//   - `IBM_IMS_MESSAGE_PROCESSING_REGION`
//   - `IBM_IMS_SOAP_GW_NAME`
//   - `IBM_INTEGRATION_NODE_NAME`
//   - `IBM_INTEGRATION_SERVER_NAME`
//   - `IIS_APP_POOL`
//   - `IIS_ROLE_NAME`
//   - `JAVA_JAR_FILE`
//   - `JAVA_JAR_PATH`
//   - `JAVA_MAIN_CLASS`
//   - `JAVA_MAIN_MODULE`
//   - `JBOSS_HOME`
//   - `JBOSS_MODE`
//   - `JBOSS_SERVER_NAME`
//   - `KUBERNETES_BASE_POD_NAME`
//   - `KUBERNETES_CONTAINER_NAME`
//   - `KUBERNETES_FULL_POD_NAME`
//   - `KUBERNETES_NAMESPACE`
//   - `KUBERNETES_POD_UID`
//   - `MSSQL_INSTANCE_NAME`
//   - `NODE_JS_APP_BASE_DIRECTORY`
//   - `NODE_JS_APP_NAME`
//   - `NODE_JS_SCRIPT_NAME`
//   - `ORACLE_SID`
//   - `PG_ID_CALC_INPUT_KEY_LINKAGE`
//   - `PHP_SCRIPT_PATH`
//   - `PHP_WORKING_DIRECTORY`
//   - `RUBY_APP_ROOT_PATH`
//   - `RUBY_SCRIPT_PATH`
//   - `RULE_RESULT`
//   - `SOFTWAREAG_INSTALL_ROOT`
//   - `SOFTWAREAG_PRODUCTPROPNAME`
//   - `SPRINGBOOT_APP_NAME`
//   - `SPRINGBOOT_PROFILE_NAME`
//   - `SPRINGBOOT_STARTUP_CLASS`
//   - `TIBCO_BUSINESSWORKS_CE_APP_NAME`
//   - `TIBCO_BUSINESSWORKS_CE_VERSION`
//   - `TIBCO_BUSINESS_WORKS_APP_NODE_NAME`
//   - `TIBCO_BUSINESS_WORKS_APP_SPACE_NAME`
//   - `TIBCO_BUSINESS_WORKS_DOMAIN_NAME`
//   - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE`
//   - `TIBCO_BUSINESS_WORKS_ENGINE_PROPERTY_FILE_PATH`
//   - `TIBCO_BUSINESS_WORKS_HOME`
//   - `VARNISH_INSTANCE_NAME`
//   - `WEB_LOGIC_CLUSTER_NAME`
//   - `WEB_LOGIC_DOMAIN_NAME`
//   - `WEB_LOGIC_HOME`
//   - `WEB_LOGIC_NAME`
//   - `WEB_SPHERE_CELL_NAME`
//   - `WEB_SPHERE_CLUSTER_NAME`
//   - `WEB_SPHERE_NODE_NAME and WEB_SPHERE_SERVER_NAME`
func (o ServiceNamingConditionConditionStringKeyOutput) DynamicKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringKey) string { return v.DynamicKey }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionStringKeyOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionStringKey) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionStringKeyArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionStringKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionStringKey)(nil)).Elem()
}

func (o ServiceNamingConditionConditionStringKeyArrayOutput) ToServiceNamingConditionConditionStringKeyArrayOutput() ServiceNamingConditionConditionStringKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringKeyArrayOutput) ToServiceNamingConditionConditionStringKeyArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionStringKeyArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionStringKeyArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionStringKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionStringKey {
		return vs[0].([]ServiceNamingConditionConditionStringKey)[vs[1].(int)]
	}).(ServiceNamingConditionConditionStringKeyOutput)
}

type ServiceNamingConditionConditionSyntheticEngine struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are CLASSIC and CUSTOM
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionSyntheticEngineInput is an input type that accepts ServiceNamingConditionConditionSyntheticEngineArgs and ServiceNamingConditionConditionSyntheticEngineOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSyntheticEngineInput` via:
//
//	ServiceNamingConditionConditionSyntheticEngineArgs{...}
type ServiceNamingConditionConditionSyntheticEngineInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSyntheticEngineOutput() ServiceNamingConditionConditionSyntheticEngineOutput
	ToServiceNamingConditionConditionSyntheticEngineOutputWithContext(context.Context) ServiceNamingConditionConditionSyntheticEngineOutput
}

type ServiceNamingConditionConditionSyntheticEngineArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are CLASSIC and CUSTOM
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionSyntheticEngineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSyntheticEngineArgs) ToServiceNamingConditionConditionSyntheticEngineOutput() ServiceNamingConditionConditionSyntheticEngineOutput {
	return i.ToServiceNamingConditionConditionSyntheticEngineOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSyntheticEngineArgs) ToServiceNamingConditionConditionSyntheticEngineOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSyntheticEngineOutput)
}

// ServiceNamingConditionConditionSyntheticEngineArrayInput is an input type that accepts ServiceNamingConditionConditionSyntheticEngineArray and ServiceNamingConditionConditionSyntheticEngineArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSyntheticEngineArrayInput` via:
//
//	ServiceNamingConditionConditionSyntheticEngineArray{ ServiceNamingConditionConditionSyntheticEngineArgs{...} }
type ServiceNamingConditionConditionSyntheticEngineArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSyntheticEngineArrayOutput() ServiceNamingConditionConditionSyntheticEngineArrayOutput
	ToServiceNamingConditionConditionSyntheticEngineArrayOutputWithContext(context.Context) ServiceNamingConditionConditionSyntheticEngineArrayOutput
}

type ServiceNamingConditionConditionSyntheticEngineArray []ServiceNamingConditionConditionSyntheticEngineInput

func (ServiceNamingConditionConditionSyntheticEngineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSyntheticEngineArray) ToServiceNamingConditionConditionSyntheticEngineArrayOutput() ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return i.ToServiceNamingConditionConditionSyntheticEngineArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSyntheticEngineArray) ToServiceNamingConditionConditionSyntheticEngineArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSyntheticEngineArrayOutput)
}

type ServiceNamingConditionConditionSyntheticEngineOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSyntheticEngineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSyntheticEngineOutput) ToServiceNamingConditionConditionSyntheticEngineOutput() ServiceNamingConditionConditionSyntheticEngineOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineOutput) ToServiceNamingConditionConditionSyntheticEngineOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionSyntheticEngineOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngine) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionSyntheticEngineOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngine) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionSyntheticEngineOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngine) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are CLASSIC and CUSTOM
func (o ServiceNamingConditionConditionSyntheticEngineOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngine) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSyntheticEngineArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSyntheticEngineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSyntheticEngine)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSyntheticEngineArrayOutput) ToServiceNamingConditionConditionSyntheticEngineArrayOutput() ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineArrayOutput) ToServiceNamingConditionConditionSyntheticEngineArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionSyntheticEngineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionSyntheticEngine {
		return vs[0].([]ServiceNamingConditionConditionSyntheticEngine)[vs[1].(int)]
	}).(ServiceNamingConditionConditionSyntheticEngineOutput)
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be SYNTHETIC_ENGINE_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to. Possible values are CLASSIC and CUSTOM
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput is an input type that accepts ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs and ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput` via:
//
//	ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs{...}
type ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput
	ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be SYNTHETIC_ENGINE_TYPE
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to. Possible values are CLASSIC and CUSTOM
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return i.ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput)
}

// ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray and ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray{ ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs{...} }
type ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput
	ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray []ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput

func (ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput)
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are  EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be SYNTHETIC_ENGINE_TYPE
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to. Possible values are CLASSIC and CUSTOM
func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionSyntheticEngineTypeComparison) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionSyntheticEngineTypeComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput() ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) ToServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionSyntheticEngineTypeComparison {
		return vs[0].([]ServiceNamingConditionConditionSyntheticEngineTypeComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput)
}

type ServiceNamingConditionConditionTag struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// Tag of a Dynatrace entity
	Value *ServiceNamingConditionConditionTagValue `pulumi:"value"`
}

// ServiceNamingConditionConditionTagInput is an input type that accepts ServiceNamingConditionConditionTagArgs and ServiceNamingConditionConditionTagOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagInput` via:
//
//	ServiceNamingConditionConditionTagArgs{...}
type ServiceNamingConditionConditionTagInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagOutput() ServiceNamingConditionConditionTagOutput
	ToServiceNamingConditionConditionTagOutputWithContext(context.Context) ServiceNamingConditionConditionTagOutput
}

type ServiceNamingConditionConditionTagArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// Tag of a Dynatrace entity
	Value ServiceNamingConditionConditionTagValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTag)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagArgs) ToServiceNamingConditionConditionTagOutput() ServiceNamingConditionConditionTagOutput {
	return i.ToServiceNamingConditionConditionTagOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagArgs) ToServiceNamingConditionConditionTagOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagOutput)
}

// ServiceNamingConditionConditionTagArrayInput is an input type that accepts ServiceNamingConditionConditionTagArray and ServiceNamingConditionConditionTagArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagArrayInput` via:
//
//	ServiceNamingConditionConditionTagArray{ ServiceNamingConditionConditionTagArgs{...} }
type ServiceNamingConditionConditionTagArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagArrayOutput() ServiceNamingConditionConditionTagArrayOutput
	ToServiceNamingConditionConditionTagArrayOutputWithContext(context.Context) ServiceNamingConditionConditionTagArrayOutput
}

type ServiceNamingConditionConditionTagArray []ServiceNamingConditionConditionTagInput

func (ServiceNamingConditionConditionTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTag)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagArray) ToServiceNamingConditionConditionTagArrayOutput() ServiceNamingConditionConditionTagArrayOutput {
	return i.ToServiceNamingConditionConditionTagArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagArray) ToServiceNamingConditionConditionTagArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagArrayOutput)
}

type ServiceNamingConditionConditionTagOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTag)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagOutput) ToServiceNamingConditionConditionTagOutput() ServiceNamingConditionConditionTagOutput {
	return o
}

func (o ServiceNamingConditionConditionTagOutput) ToServiceNamingConditionConditionTagOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionTagOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTag) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionTagOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTag) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionTagOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTag) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// Tag of a Dynatrace entity
func (o ServiceNamingConditionConditionTagOutput) Value() ServiceNamingConditionConditionTagValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTag) *ServiceNamingConditionConditionTagValue { return v.Value }).(ServiceNamingConditionConditionTagValuePtrOutput)
}

type ServiceNamingConditionConditionTagArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTag)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagArrayOutput) ToServiceNamingConditionConditionTagArrayOutput() ServiceNamingConditionConditionTagArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTagArrayOutput) ToServiceNamingConditionConditionTagArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTagArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionTag {
		return vs[0].([]ServiceNamingConditionConditionTag)[vs[1].(int)]
	}).(ServiceNamingConditionConditionTagOutput)
}

type ServiceNamingConditionConditionTagComparison struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// if specified, needs to be TAG
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// Tag of a Dynatrace entity
	Value *ServiceNamingConditionConditionTagComparisonValue `pulumi:"value"`
}

// ServiceNamingConditionConditionTagComparisonInput is an input type that accepts ServiceNamingConditionConditionTagComparisonArgs and ServiceNamingConditionConditionTagComparisonOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagComparisonInput` via:
//
//	ServiceNamingConditionConditionTagComparisonArgs{...}
type ServiceNamingConditionConditionTagComparisonInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagComparisonOutput() ServiceNamingConditionConditionTagComparisonOutput
	ToServiceNamingConditionConditionTagComparisonOutputWithContext(context.Context) ServiceNamingConditionConditionTagComparisonOutput
}

type ServiceNamingConditionConditionTagComparisonArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// if specified, needs to be TAG
	//
	// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// Tag of a Dynatrace entity
	Value ServiceNamingConditionConditionTagComparisonValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTagComparisonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagComparisonArgs) ToServiceNamingConditionConditionTagComparisonOutput() ServiceNamingConditionConditionTagComparisonOutput {
	return i.ToServiceNamingConditionConditionTagComparisonOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagComparisonArgs) ToServiceNamingConditionConditionTagComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonOutput)
}

// ServiceNamingConditionConditionTagComparisonArrayInput is an input type that accepts ServiceNamingConditionConditionTagComparisonArray and ServiceNamingConditionConditionTagComparisonArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagComparisonArrayInput` via:
//
//	ServiceNamingConditionConditionTagComparisonArray{ ServiceNamingConditionConditionTagComparisonArgs{...} }
type ServiceNamingConditionConditionTagComparisonArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagComparisonArrayOutput() ServiceNamingConditionConditionTagComparisonArrayOutput
	ToServiceNamingConditionConditionTagComparisonArrayOutputWithContext(context.Context) ServiceNamingConditionConditionTagComparisonArrayOutput
}

type ServiceNamingConditionConditionTagComparisonArray []ServiceNamingConditionConditionTagComparisonInput

func (ServiceNamingConditionConditionTagComparisonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTagComparison)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagComparisonArray) ToServiceNamingConditionConditionTagComparisonArrayOutput() ServiceNamingConditionConditionTagComparisonArrayOutput {
	return i.ToServiceNamingConditionConditionTagComparisonArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagComparisonArray) ToServiceNamingConditionConditionTagComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonArrayOutput)
}

type ServiceNamingConditionConditionTagComparisonOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagComparisonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagComparisonOutput) ToServiceNamingConditionConditionTagComparisonOutput() ServiceNamingConditionConditionTagComparisonOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonOutput) ToServiceNamingConditionConditionTagComparisonOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionTagComparisonOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and TAG_KEY_EQUALS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionTagComparisonOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) string { return v.Operator }).(pulumi.StringOutput)
}

// if specified, needs to be TAG
//
// Deprecated: The value of the attribute type is implicit, therefore shouldn't get specified
func (o ServiceNamingConditionConditionTagComparisonOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionTagComparisonOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// Tag of a Dynatrace entity
func (o ServiceNamingConditionConditionTagComparisonOutput) Value() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparison) *ServiceNamingConditionConditionTagComparisonValue {
		return v.Value
	}).(ServiceNamingConditionConditionTagComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionTagComparisonArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagComparisonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTagComparison)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagComparisonArrayOutput) ToServiceNamingConditionConditionTagComparisonArrayOutput() ServiceNamingConditionConditionTagComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonArrayOutput) ToServiceNamingConditionConditionTagComparisonArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionTagComparisonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionTagComparison {
		return vs[0].([]ServiceNamingConditionConditionTagComparison)[vs[1].(int)]
	}).(ServiceNamingConditionConditionTagComparisonOutput)
}

type ServiceNamingConditionConditionTagComparisonValue struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
	Context string `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key string `pulumi:"key"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value of the tag. Not applicable to custom tags
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionTagComparisonValueInput is an input type that accepts ServiceNamingConditionConditionTagComparisonValueArgs and ServiceNamingConditionConditionTagComparisonValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagComparisonValueInput` via:
//
//	ServiceNamingConditionConditionTagComparisonValueArgs{...}
type ServiceNamingConditionConditionTagComparisonValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagComparisonValueOutput() ServiceNamingConditionConditionTagComparisonValueOutput
	ToServiceNamingConditionConditionTagComparisonValueOutputWithContext(context.Context) ServiceNamingConditionConditionTagComparisonValueOutput
}

type ServiceNamingConditionConditionTagComparisonValueArgs struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
	Context pulumi.StringInput `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key pulumi.StringInput `pulumi:"key"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value of the tag. Not applicable to custom tags
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTagComparisonValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagComparisonValueArgs) ToServiceNamingConditionConditionTagComparisonValueOutput() ServiceNamingConditionConditionTagComparisonValueOutput {
	return i.ToServiceNamingConditionConditionTagComparisonValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagComparisonValueArgs) ToServiceNamingConditionConditionTagComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonValueOutput)
}

func (i ServiceNamingConditionConditionTagComparisonValueArgs) ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagComparisonValueArgs) ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonValueOutput).ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionTagComparisonValuePtrInput is an input type that accepts ServiceNamingConditionConditionTagComparisonValueArgs, ServiceNamingConditionConditionTagComparisonValuePtr and ServiceNamingConditionConditionTagComparisonValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagComparisonValuePtrInput` via:
//
//	        ServiceNamingConditionConditionTagComparisonValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionTagComparisonValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput
	ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput
}

type serviceNamingConditionConditionTagComparisonValuePtrType ServiceNamingConditionConditionTagComparisonValueArgs

func ServiceNamingConditionConditionTagComparisonValuePtr(v *ServiceNamingConditionConditionTagComparisonValueArgs) ServiceNamingConditionConditionTagComparisonValuePtrInput {
	return (*serviceNamingConditionConditionTagComparisonValuePtrType)(v)
}

func (*serviceNamingConditionConditionTagComparisonValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionTagComparisonValuePtrType) ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return i.ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionTagComparisonValuePtrType) ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagComparisonValuePtrOutput)
}

type ServiceNamingConditionConditionTagComparisonValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagComparisonValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) ToServiceNamingConditionConditionTagComparisonValueOutput() ServiceNamingConditionConditionTagComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) ToServiceNamingConditionConditionTagComparisonValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionTagComparisonValueOutput) ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionTagComparisonValue) *ServiceNamingConditionConditionTagComparisonValue {
		return &v
	}).(ServiceNamingConditionConditionTagComparisonValuePtrOutput)
}

// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
func (o ServiceNamingConditionConditionTagComparisonValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparisonValue) string { return v.Context }).(pulumi.StringOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o ServiceNamingConditionConditionTagComparisonValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparisonValue) string { return v.Key }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionTagComparisonValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparisonValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o ServiceNamingConditionConditionTagComparisonValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagComparisonValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTagComparisonValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagComparisonValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTagComparisonValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) ToServiceNamingConditionConditionTagComparisonValuePtrOutput() ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) ToServiceNamingConditionConditionTagComparisonValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagComparisonValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Elem() ServiceNamingConditionConditionTagComparisonValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) ServiceNamingConditionConditionTagComparisonValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionTagComparisonValue
		return ret
	}).(ServiceNamingConditionConditionTagComparisonValueOutput)
}

// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o ServiceNamingConditionConditionTagComparisonValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagComparisonValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTagValue struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
	Context string `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key string `pulumi:"key"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns *string `pulumi:"unknowns"`
	// The value of the tag. Not applicable to custom tags
	Value *string `pulumi:"value"`
}

// ServiceNamingConditionConditionTagValueInput is an input type that accepts ServiceNamingConditionConditionTagValueArgs and ServiceNamingConditionConditionTagValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagValueInput` via:
//
//	ServiceNamingConditionConditionTagValueArgs{...}
type ServiceNamingConditionConditionTagValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagValueOutput() ServiceNamingConditionConditionTagValueOutput
	ToServiceNamingConditionConditionTagValueOutputWithContext(context.Context) ServiceNamingConditionConditionTagValueOutput
}

type ServiceNamingConditionConditionTagValueArgs struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
	Context pulumi.StringInput `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key pulumi.StringInput `pulumi:"key"`
	// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value of the tag. Not applicable to custom tags
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTagValueArgs) ToServiceNamingConditionConditionTagValueOutput() ServiceNamingConditionConditionTagValueOutput {
	return i.ToServiceNamingConditionConditionTagValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagValueArgs) ToServiceNamingConditionConditionTagValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagValueOutput)
}

func (i ServiceNamingConditionConditionTagValueArgs) ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput {
	return i.ToServiceNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTagValueArgs) ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagValueOutput).ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionTagValuePtrInput is an input type that accepts ServiceNamingConditionConditionTagValueArgs, ServiceNamingConditionConditionTagValuePtr and ServiceNamingConditionConditionTagValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTagValuePtrInput` via:
//
//	        ServiceNamingConditionConditionTagValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionTagValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput
	ToServiceNamingConditionConditionTagValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionTagValuePtrOutput
}

type serviceNamingConditionConditionTagValuePtrType ServiceNamingConditionConditionTagValueArgs

func ServiceNamingConditionConditionTagValuePtr(v *ServiceNamingConditionConditionTagValueArgs) ServiceNamingConditionConditionTagValuePtrInput {
	return (*serviceNamingConditionConditionTagValuePtrType)(v)
}

func (*serviceNamingConditionConditionTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTagValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionTagValuePtrType) ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput {
	return i.ToServiceNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionTagValuePtrType) ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTagValuePtrOutput)
}

type ServiceNamingConditionConditionTagValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTagValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagValueOutput) ToServiceNamingConditionConditionTagValueOutput() ServiceNamingConditionConditionTagValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTagValueOutput) ToServiceNamingConditionConditionTagValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTagValueOutput) ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput {
	return o.ToServiceNamingConditionConditionTagValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionTagValueOutput) ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionTagValue) *ServiceNamingConditionConditionTagValue {
		return &v
	}).(ServiceNamingConditionConditionTagValuePtrOutput)
}

// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
func (o ServiceNamingConditionConditionTagValueOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagValue) string { return v.Context }).(pulumi.StringOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o ServiceNamingConditionConditionTagValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagValue) string { return v.Key }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionTagValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o ServiceNamingConditionConditionTagValueOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTagValue) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTagValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTagValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) ToServiceNamingConditionConditionTagValuePtrOutput() ServiceNamingConditionConditionTagValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) ToServiceNamingConditionConditionTagValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTagValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTagValuePtrOutput) Elem() ServiceNamingConditionConditionTagValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) ServiceNamingConditionConditionTagValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionTagValue
		return ret
	}).(ServiceNamingConditionConditionTagValueOutput)
}

// The origin of the tag, such as AWS or Cloud Foundry. Possible values are AWS, AWS_GENERIC, AZURE, CLOUD_FOUNDRY, CONTEXTLESS, ENVIRONMENT, GOOGLE_CLOUD and KUBERNETES. Custom tags use the `CONTEXTLESS` value
func (o ServiceNamingConditionConditionTagValuePtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Context
	}).(pulumi.StringPtrOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o ServiceNamingConditionConditionTagValuePtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider but have meanwhile gotten introduced by a newer version of the Dynatrace REST API
func (o ServiceNamingConditionConditionTagValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o ServiceNamingConditionConditionTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTech struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate *bool `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator string `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The value to compare to
	Value *ServiceNamingConditionConditionTechValue `pulumi:"value"`
}

// ServiceNamingConditionConditionTechInput is an input type that accepts ServiceNamingConditionConditionTechArgs and ServiceNamingConditionConditionTechOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTechInput` via:
//
//	ServiceNamingConditionConditionTechArgs{...}
type ServiceNamingConditionConditionTechInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTechOutput() ServiceNamingConditionConditionTechOutput
	ToServiceNamingConditionConditionTechOutputWithContext(context.Context) ServiceNamingConditionConditionTechOutput
}

type ServiceNamingConditionConditionTechArgs struct {
	// Reverses the operator. For example it turns the **begins with** into **does not begin with**
	Negate pulumi.BoolPtrInput `pulumi:"negate"`
	// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
	Operator pulumi.StringInput `pulumi:"operator"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// The value to compare to
	Value ServiceNamingConditionConditionTechValuePtrInput `pulumi:"value"`
}

func (ServiceNamingConditionConditionTechArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTech)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTechArgs) ToServiceNamingConditionConditionTechOutput() ServiceNamingConditionConditionTechOutput {
	return i.ToServiceNamingConditionConditionTechOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTechArgs) ToServiceNamingConditionConditionTechOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechOutput)
}

// ServiceNamingConditionConditionTechArrayInput is an input type that accepts ServiceNamingConditionConditionTechArray and ServiceNamingConditionConditionTechArrayOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTechArrayInput` via:
//
//	ServiceNamingConditionConditionTechArray{ ServiceNamingConditionConditionTechArgs{...} }
type ServiceNamingConditionConditionTechArrayInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTechArrayOutput() ServiceNamingConditionConditionTechArrayOutput
	ToServiceNamingConditionConditionTechArrayOutputWithContext(context.Context) ServiceNamingConditionConditionTechArrayOutput
}

type ServiceNamingConditionConditionTechArray []ServiceNamingConditionConditionTechInput

func (ServiceNamingConditionConditionTechArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTech)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTechArray) ToServiceNamingConditionConditionTechArrayOutput() ServiceNamingConditionConditionTechArrayOutput {
	return i.ToServiceNamingConditionConditionTechArrayOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTechArray) ToServiceNamingConditionConditionTechArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechArrayOutput)
}

type ServiceNamingConditionConditionTechOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTechOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTech)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTechOutput) ToServiceNamingConditionConditionTechOutput() ServiceNamingConditionConditionTechOutput {
	return o
}

func (o ServiceNamingConditionConditionTechOutput) ToServiceNamingConditionConditionTechOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechOutput {
	return o
}

// Reverses the operator. For example it turns the **begins with** into **does not begin with**
func (o ServiceNamingConditionConditionTechOutput) Negate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTech) *bool { return v.Negate }).(pulumi.BoolPtrOutput)
}

// Operator of the comparison. Possible values are EQUALS and EXISTS. You can reverse it by setting **negate** to `true`
func (o ServiceNamingConditionConditionTechOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTech) string { return v.Operator }).(pulumi.StringOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionTechOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTech) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The value to compare to
func (o ServiceNamingConditionConditionTechOutput) Value() ServiceNamingConditionConditionTechValuePtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTech) *ServiceNamingConditionConditionTechValue { return v.Value }).(ServiceNamingConditionConditionTechValuePtrOutput)
}

type ServiceNamingConditionConditionTechArrayOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTechArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceNamingConditionConditionTech)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTechArrayOutput) ToServiceNamingConditionConditionTechArrayOutput() ServiceNamingConditionConditionTechArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTechArrayOutput) ToServiceNamingConditionConditionTechArrayOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechArrayOutput {
	return o
}

func (o ServiceNamingConditionConditionTechArrayOutput) Index(i pulumi.IntInput) ServiceNamingConditionConditionTechOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceNamingConditionConditionTech {
		return vs[0].([]ServiceNamingConditionConditionTech)[vs[1].(int)]
	}).(ServiceNamingConditionConditionTechOutput)
}

type ServiceNamingConditionConditionTechValue struct {
	// Predefined technology, if technology is not predefined, then the verbatim type must be set.
	Type *string `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// Non-predefined technology, use for custom technologies
	VerbatimType *string `pulumi:"verbatimType"`
}

// ServiceNamingConditionConditionTechValueInput is an input type that accepts ServiceNamingConditionConditionTechValueArgs and ServiceNamingConditionConditionTechValueOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTechValueInput` via:
//
//	ServiceNamingConditionConditionTechValueArgs{...}
type ServiceNamingConditionConditionTechValueInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTechValueOutput() ServiceNamingConditionConditionTechValueOutput
	ToServiceNamingConditionConditionTechValueOutputWithContext(context.Context) ServiceNamingConditionConditionTechValueOutput
}

type ServiceNamingConditionConditionTechValueArgs struct {
	// Predefined technology, if technology is not predefined, then the verbatim type must be set.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput `pulumi:"unknowns"`
	// Non-predefined technology, use for custom technologies
	VerbatimType pulumi.StringPtrInput `pulumi:"verbatimType"`
}

func (ServiceNamingConditionConditionTechValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTechValue)(nil)).Elem()
}

func (i ServiceNamingConditionConditionTechValueArgs) ToServiceNamingConditionConditionTechValueOutput() ServiceNamingConditionConditionTechValueOutput {
	return i.ToServiceNamingConditionConditionTechValueOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTechValueArgs) ToServiceNamingConditionConditionTechValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechValueOutput)
}

func (i ServiceNamingConditionConditionTechValueArgs) ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput {
	return i.ToServiceNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (i ServiceNamingConditionConditionTechValueArgs) ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechValueOutput).ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx)
}

// ServiceNamingConditionConditionTechValuePtrInput is an input type that accepts ServiceNamingConditionConditionTechValueArgs, ServiceNamingConditionConditionTechValuePtr and ServiceNamingConditionConditionTechValuePtrOutput values.
// You can construct a concrete instance of `ServiceNamingConditionConditionTechValuePtrInput` via:
//
//	        ServiceNamingConditionConditionTechValueArgs{...}
//
//	or:
//
//	        nil
type ServiceNamingConditionConditionTechValuePtrInput interface {
	pulumi.Input

	ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput
	ToServiceNamingConditionConditionTechValuePtrOutputWithContext(context.Context) ServiceNamingConditionConditionTechValuePtrOutput
}

type serviceNamingConditionConditionTechValuePtrType ServiceNamingConditionConditionTechValueArgs

func ServiceNamingConditionConditionTechValuePtr(v *ServiceNamingConditionConditionTechValueArgs) ServiceNamingConditionConditionTechValuePtrInput {
	return (*serviceNamingConditionConditionTechValuePtrType)(v)
}

func (*serviceNamingConditionConditionTechValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTechValue)(nil)).Elem()
}

func (i *serviceNamingConditionConditionTechValuePtrType) ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput {
	return i.ToServiceNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (i *serviceNamingConditionConditionTechValuePtrType) ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNamingConditionConditionTechValuePtrOutput)
}

type ServiceNamingConditionConditionTechValueOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTechValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNamingConditionConditionTechValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTechValueOutput) ToServiceNamingConditionConditionTechValueOutput() ServiceNamingConditionConditionTechValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTechValueOutput) ToServiceNamingConditionConditionTechValueOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValueOutput {
	return o
}

func (o ServiceNamingConditionConditionTechValueOutput) ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput {
	return o.ToServiceNamingConditionConditionTechValuePtrOutputWithContext(context.Background())
}

func (o ServiceNamingConditionConditionTechValueOutput) ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNamingConditionConditionTechValue) *ServiceNamingConditionConditionTechValue {
		return &v
	}).(ServiceNamingConditionConditionTechValuePtrOutput)
}

// Predefined technology, if technology is not predefined, then the verbatim type must be set.
func (o ServiceNamingConditionConditionTechValueOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTechValue) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionTechValueOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTechValue) *string { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// Non-predefined technology, use for custom technologies
func (o ServiceNamingConditionConditionTechValueOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNamingConditionConditionTechValue) *string { return v.VerbatimType }).(pulumi.StringPtrOutput)
}

type ServiceNamingConditionConditionTechValuePtrOutput struct{ *pulumi.OutputState }

func (ServiceNamingConditionConditionTechValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNamingConditionConditionTechValue)(nil)).Elem()
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) ToServiceNamingConditionConditionTechValuePtrOutput() ServiceNamingConditionConditionTechValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) ToServiceNamingConditionConditionTechValuePtrOutputWithContext(ctx context.Context) ServiceNamingConditionConditionTechValuePtrOutput {
	return o
}

func (o ServiceNamingConditionConditionTechValuePtrOutput) Elem() ServiceNamingConditionConditionTechValueOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTechValue) ServiceNamingConditionConditionTechValue {
		if v != nil {
			return *v
		}
		var ret ServiceNamingConditionConditionTechValue
		return ret
	}).(ServiceNamingConditionConditionTechValueOutput)
}

// Predefined technology, if technology is not predefined, then the verbatim type must be set.
func (o ServiceNamingConditionConditionTechValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o ServiceNamingConditionConditionTechValuePtrOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.Unknowns
	}).(pulumi.StringPtrOutput)
}

// Non-predefined technology, use for custom technologies
func (o ServiceNamingConditionConditionTechValuePtrOutput) VerbatimType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNamingConditionConditionTechValue) *string {
		if v == nil {
			return nil
		}
		return v.VerbatimType
	}).(pulumi.StringPtrOutput)
}

type SessionReplayWebPrivacyMaskingPresets struct {
	// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
	PlaybackMaskingAllowListRules *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules `pulumi:"playbackMaskingAllowListRules"`
	// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
	PlaybackMaskingBlockListRules *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules `pulumi:"playbackMaskingBlockListRules"`
	// (Field has overlap with `ApplicationDataPrivacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`
	PlaybackMaskingPreset string `pulumi:"playbackMaskingPreset"`
	// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
	RecordingMaskingAllowListRules *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules `pulumi:"recordingMaskingAllowListRules"`
	// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
	RecordingMaskingBlockListRules *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules `pulumi:"recordingMaskingBlockListRules"`
	// (Field has overlap with `ApplicationDataPrivacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`
	RecordingMaskingPreset string `pulumi:"recordingMaskingPreset"`
}

// SessionReplayWebPrivacyMaskingPresetsInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsArgs and SessionReplayWebPrivacyMaskingPresetsOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsArgs{...}
type SessionReplayWebPrivacyMaskingPresetsInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsOutput() SessionReplayWebPrivacyMaskingPresetsOutput
	ToSessionReplayWebPrivacyMaskingPresetsOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsOutput
}

type SessionReplayWebPrivacyMaskingPresetsArgs struct {
	// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
	PlaybackMaskingAllowListRules SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrInput `pulumi:"playbackMaskingAllowListRules"`
	// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
	PlaybackMaskingBlockListRules SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrInput `pulumi:"playbackMaskingBlockListRules"`
	// (Field has overlap with `ApplicationDataPrivacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`
	PlaybackMaskingPreset pulumi.StringInput `pulumi:"playbackMaskingPreset"`
	// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
	RecordingMaskingAllowListRules SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrInput `pulumi:"recordingMaskingAllowListRules"`
	// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
	RecordingMaskingBlockListRules SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrInput `pulumi:"recordingMaskingBlockListRules"`
	// (Field has overlap with `ApplicationDataPrivacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`
	RecordingMaskingPreset pulumi.StringInput `pulumi:"recordingMaskingPreset"`
}

func (SessionReplayWebPrivacyMaskingPresetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresets)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsArgs) ToSessionReplayWebPrivacyMaskingPresetsOutput() SessionReplayWebPrivacyMaskingPresetsOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsArgs) ToSessionReplayWebPrivacyMaskingPresetsOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsOutput)
}

func (i SessionReplayWebPrivacyMaskingPresetsArgs) ToSessionReplayWebPrivacyMaskingPresetsPtrOutput() SessionReplayWebPrivacyMaskingPresetsPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsArgs) ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsOutput).ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(ctx)
}

// SessionReplayWebPrivacyMaskingPresetsPtrInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsArgs, SessionReplayWebPrivacyMaskingPresetsPtr and SessionReplayWebPrivacyMaskingPresetsPtrOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPtrInput` via:
//
//	        SessionReplayWebPrivacyMaskingPresetsArgs{...}
//
//	or:
//
//	        nil
type SessionReplayWebPrivacyMaskingPresetsPtrInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPtrOutput() SessionReplayWebPrivacyMaskingPresetsPtrOutput
	ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPtrOutput
}

type sessionReplayWebPrivacyMaskingPresetsPtrType SessionReplayWebPrivacyMaskingPresetsArgs

func SessionReplayWebPrivacyMaskingPresetsPtr(v *SessionReplayWebPrivacyMaskingPresetsArgs) SessionReplayWebPrivacyMaskingPresetsPtrInput {
	return (*sessionReplayWebPrivacyMaskingPresetsPtrType)(v)
}

func (*sessionReplayWebPrivacyMaskingPresetsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresets)(nil)).Elem()
}

func (i *sessionReplayWebPrivacyMaskingPresetsPtrType) ToSessionReplayWebPrivacyMaskingPresetsPtrOutput() SessionReplayWebPrivacyMaskingPresetsPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(context.Background())
}

func (i *sessionReplayWebPrivacyMaskingPresetsPtrType) ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPtrOutput)
}

type SessionReplayWebPrivacyMaskingPresetsOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresets)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsOutput) ToSessionReplayWebPrivacyMaskingPresetsOutput() SessionReplayWebPrivacyMaskingPresetsOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsOutput) ToSessionReplayWebPrivacyMaskingPresetsOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsOutput) ToSessionReplayWebPrivacyMaskingPresetsPtrOutput() SessionReplayWebPrivacyMaskingPresetsPtrOutput {
	return o.ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(context.Background())
}

func (o SessionReplayWebPrivacyMaskingPresetsOutput) ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresets {
		return &v
	}).(SessionReplayWebPrivacyMaskingPresetsPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
func (o SessionReplayWebPrivacyMaskingPresetsOutput) PlaybackMaskingAllowListRules() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules {
		return v.PlaybackMaskingAllowListRules
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
func (o SessionReplayWebPrivacyMaskingPresetsOutput) PlaybackMaskingBlockListRules() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules {
		return v.PlaybackMaskingBlockListRules
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`
func (o SessionReplayWebPrivacyMaskingPresetsOutput) PlaybackMaskingPreset() pulumi.StringOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresets) string { return v.PlaybackMaskingPreset }).(pulumi.StringOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
func (o SessionReplayWebPrivacyMaskingPresetsOutput) RecordingMaskingAllowListRules() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules {
		return v.RecordingMaskingAllowListRules
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
func (o SessionReplayWebPrivacyMaskingPresetsOutput) RecordingMaskingBlockListRules() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules {
		return v.RecordingMaskingBlockListRules
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`
func (o SessionReplayWebPrivacyMaskingPresetsOutput) RecordingMaskingPreset() pulumi.StringOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresets) string { return v.RecordingMaskingPreset }).(pulumi.StringOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPtrOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresets)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsPtrOutput() SessionReplayWebPrivacyMaskingPresetsPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) Elem() SessionReplayWebPrivacyMaskingPresetsOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresets) SessionReplayWebPrivacyMaskingPresets {
		if v != nil {
			return *v
		}
		var ret SessionReplayWebPrivacyMaskingPresets
		return ret
	}).(SessionReplayWebPrivacyMaskingPresetsOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) PlaybackMaskingAllowListRules() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules {
		if v == nil {
			return nil
		}
		return v.PlaybackMaskingAllowListRules
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) PlaybackMaskingBlockListRules() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules {
		if v == nil {
			return nil
		}
		return v.PlaybackMaskingBlockListRules
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) Possible Values: `MASK_ALL`, `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`
func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) PlaybackMaskingPreset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresets) *string {
		if v == nil {
			return nil
		}
		return &v.PlaybackMaskingPreset
	}).(pulumi.StringPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) RecordingMaskingAllowListRules() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules {
		if v == nil {
			return nil
		}
		return v.RecordingMaskingAllowListRules
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) The elements are defined by the CSS selector or attribute name.
func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) RecordingMaskingBlockListRules() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresets) *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules {
		if v == nil {
			return nil
		}
		return v.RecordingMaskingBlockListRules
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) Possible Values: `MASK_USER_INPUT`, `ALLOW_LIST`, `BLOCK_LIST`, `MASK_ALL`
func (o SessionReplayWebPrivacyMaskingPresetsPtrOutput) RecordingMaskingPreset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresets) *string {
		if v == nil {
			return nil
		}
		return &v.RecordingMaskingPreset
	}).(pulumi.StringPtrOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules struct {
	AllowListRules []SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule `pulumi:"allowListRules"`
}

// SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs and SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs{...}
type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput
	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs struct {
	AllowListRules SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayInput `pulumi:"allowListRules"`
}

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput)
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput).ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(ctx)
}

// SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs, SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtr and SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrInput` via:
//
//	        SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs{...}
//
//	or:
//
//	        nil
type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput
	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput
}

type sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrType SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs

func SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtr(v *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrInput {
	return (*sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrType)(v)
}

func (*sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules)(nil)).Elem()
}

func (i *sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrType) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(context.Background())
}

func (i *sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrType) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return o.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(context.Background())
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules) *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules {
		return &v
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput)
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput) AllowListRules() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules) []SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule {
		return v.AllowListRules
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput) Elem() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules {
		if v != nil {
			return *v
		}
		var ret SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules
		return ret
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput)
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput) AllowListRules() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRules) []SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule {
		if v == nil {
			return nil
		}
		return v.AllowListRules
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule struct {
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `pulumi:"attributeExpression"`
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CssExpression *string `pulumi:"cssExpression"`
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	Target string `pulumi:"target"`
}

// SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArgs and SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArgs{...}
type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput
	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArgs struct {
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression pulumi.StringPtrInput `pulumi:"attributeExpression"`
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CssExpression pulumi.StringPtrInput `pulumi:"cssExpression"`
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	Target pulumi.StringInput `pulumi:"target"`
}

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput)
}

// SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArray and SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArray{ SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArgs{...} }
type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput
	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArray []SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleInput

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArray) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArray) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput {
	return o
}

// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput) AttributeExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule) *string {
		return v.AttributeExpression
	}).(pulumi.StringPtrOutput)
}

// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput) CssExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule) *string {
		return v.CssExpression
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `ATTRIBUTE`, `ELEMENT`
func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule) string {
		return v.Target
	}).(pulumi.StringOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput) Index(i pulumi.IntInput) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule {
		return vs[0].([]SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRule)[vs[1].(int)]
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules struct {
	BlockListRules []SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule `pulumi:"blockListRules"`
}

// SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs and SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs{...}
type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput
	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs struct {
	BlockListRules SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayInput `pulumi:"blockListRules"`
}

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput)
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput).ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(ctx)
}

// SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs, SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtr and SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrInput` via:
//
//	        SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs{...}
//
//	or:
//
//	        nil
type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput
	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput
}

type sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrType SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs

func SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtr(v *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrInput {
	return (*sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrType)(v)
}

func (*sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules)(nil)).Elem()
}

func (i *sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrType) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(context.Background())
}

func (i *sessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrType) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return o.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(context.Background())
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules) *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules {
		return &v
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput)
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput) BlockListRules() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules) []SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule {
		return v.BlockListRules
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput) Elem() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules {
		if v != nil {
			return *v
		}
		var ret SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules
		return ret
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput)
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput) BlockListRules() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRules) []SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule {
		if v == nil {
			return nil
		}
		return v.BlockListRules
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule struct {
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `pulumi:"attributeExpression"`
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CssExpression *string `pulumi:"cssExpression"`
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	HideUserInteraction *bool `pulumi:"hideUserInteraction"`
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	Target string `pulumi:"target"`
}

// SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArgs and SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArgs{...}
type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput
	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArgs struct {
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression pulumi.StringPtrInput `pulumi:"attributeExpression"`
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CssExpression pulumi.StringPtrInput `pulumi:"cssExpression"`
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	HideUserInteraction pulumi.BoolPtrInput `pulumi:"hideUserInteraction"`
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	Target pulumi.StringInput `pulumi:"target"`
}

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArgs) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput)
}

// SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArray and SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArray{ SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArgs{...} }
type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput
	ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArray []SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleInput

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArray) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArray) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput {
	return o
}

// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput) AttributeExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule) *string {
		return v.AttributeExpression
	}).(pulumi.StringPtrOutput)
}

// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput) CssExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule) *string {
		return v.CssExpression
	}).(pulumi.StringPtrOutput)
}

// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput) HideUserInteraction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule) *bool {
		return v.HideUserInteraction
	}).(pulumi.BoolPtrOutput)
}

// Possible Values: `ELEMENT`, `ATTRIBUTE`
func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule) string {
		return v.Target
	}).(pulumi.StringOutput)
}

type SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput) ToSessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput) Index(i pulumi.IntInput) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule {
		return vs[0].([]SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRule)[vs[1].(int)]
	}).(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules struct {
	AllowListRules []SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule `pulumi:"allowListRules"`
}

// SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs and SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs{...}
type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput
	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs struct {
	AllowListRules SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayInput `pulumi:"allowListRules"`
}

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput)
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput).ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(ctx)
}

// SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs, SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtr and SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrInput` via:
//
//	        SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs{...}
//
//	or:
//
//	        nil
type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput
	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput
}

type sessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrType SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs

func SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtr(v *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrInput {
	return (*sessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrType)(v)
}

func (*sessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules)(nil)).Elem()
}

func (i *sessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrType) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(context.Background())
}

func (i *sessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrType) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return o.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(context.Background())
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules) *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules {
		return &v
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput)
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput) AllowListRules() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules) []SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule {
		return v.AllowListRules
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput) Elem() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules {
		if v != nil {
			return *v
		}
		var ret SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules
		return ret
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput)
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput) AllowListRules() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRules) []SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule {
		if v == nil {
			return nil
		}
		return v.AllowListRules
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule struct {
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `pulumi:"attributeExpression"`
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CssExpression *string `pulumi:"cssExpression"`
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	Target string `pulumi:"target"`
}

// SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs and SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs{...}
type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput
	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs struct {
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression pulumi.StringPtrInput `pulumi:"attributeExpression"`
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CssExpression pulumi.StringPtrInput `pulumi:"cssExpression"`
	// Possible Values: `ATTRIBUTE`, `ELEMENT`
	Target pulumi.StringInput `pulumi:"target"`
}

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput)
}

// SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArray and SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArray{ SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs{...} }
type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput
	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArray []SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleInput

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArray) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArray) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput {
	return o
}

// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput) AttributeExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule) *string {
		return v.AttributeExpression
	}).(pulumi.StringPtrOutput)
}

// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput) CssExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule) *string {
		return v.CssExpression
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `ATTRIBUTE`, `ELEMENT`
func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule) string {
		return v.Target
	}).(pulumi.StringOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput) Index(i pulumi.IntInput) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule {
		return vs[0].([]SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRule)[vs[1].(int)]
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules struct {
	BlockListRules []SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule `pulumi:"blockListRules"`
}

// SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs and SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs{...}
type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput
	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs struct {
	BlockListRules SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayInput `pulumi:"blockListRules"`
}

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput)
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput).ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(ctx)
}

// SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs, SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtr and SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrInput` via:
//
//	        SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs{...}
//
//	or:
//
//	        nil
type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput
	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput
}

type sessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrType SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs

func SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtr(v *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrInput {
	return (*sessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrType)(v)
}

func (*sessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules)(nil)).Elem()
}

func (i *sessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrType) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(context.Background())
}

func (i *sessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrType) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return o.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(context.Background())
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules) *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules {
		return &v
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput)
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput) BlockListRules() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules) []SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule {
		return v.BlockListRules
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput) Elem() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules {
		if v != nil {
			return *v
		}
		var ret SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules
		return ret
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput)
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput) BlockListRules() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRules) []SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule {
		if v == nil {
			return nil
		}
		return v.BlockListRules
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule struct {
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression *string `pulumi:"attributeExpression"`
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CssExpression *string `pulumi:"cssExpression"`
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	HideUserInteraction *bool `pulumi:"hideUserInteraction"`
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	Target string `pulumi:"target"`
}

// SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArgs and SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArgs{...}
type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput
	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArgs struct {
	// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
	AttributeExpression pulumi.StringPtrInput `pulumi:"attributeExpression"`
	// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
	CssExpression pulumi.StringPtrInput `pulumi:"cssExpression"`
	// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
	HideUserInteraction pulumi.BoolPtrInput `pulumi:"hideUserInteraction"`
	// Possible Values: `ELEMENT`, `ATTRIBUTE`
	Target pulumi.StringInput `pulumi:"target"`
}

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArgs) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput)
}

// SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayInput is an input type that accepts SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArray and SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayInput` via:
//
//	SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArray{ SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArgs{...} }
type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput
	ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutputWithContext(context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArray []SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleInput

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArray) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput {
	return i.ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArray) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput {
	return o
}

// Attribute masking can be applied to web applications that store data within attributes, typically data-NAME attributes in HTML5. When you define attributes, their values are masked while recording but not removed.
func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput) AttributeExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule) *string {
		return v.AttributeExpression
	}).(pulumi.StringPtrOutput)
}

// Content masking can be applied to webpages where personal data is displayed. When content masking is applied to parent elements, all child elements are masked by default.
func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput) CssExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule) *string {
		return v.CssExpression
	}).(pulumi.StringPtrOutput)
}

// Hide user interactions with these elements, including clicks that expand elements, highlighting that results from hovering a cursor over an option, and selection of specific form options.
func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput) HideUserInteraction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule) *bool {
		return v.HideUserInteraction
	}).(pulumi.BoolPtrOutput)
}

// Possible Values: `ELEMENT`, `ATTRIBUTE`
func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule) string {
		return v.Target
	}).(pulumi.StringOutput)
}

type SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput() SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput) ToSessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput) Index(i pulumi.IntInput) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule {
		return vs[0].([]SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRule)[vs[1].(int)]
	}).(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput)
}

type SiteReliabilityGuardianObjectives struct {
	Objectives []SiteReliabilityGuardianObjectivesObjective `pulumi:"objectives"`
}

// SiteReliabilityGuardianObjectivesInput is an input type that accepts SiteReliabilityGuardianObjectivesArgs and SiteReliabilityGuardianObjectivesOutput values.
// You can construct a concrete instance of `SiteReliabilityGuardianObjectivesInput` via:
//
//	SiteReliabilityGuardianObjectivesArgs{...}
type SiteReliabilityGuardianObjectivesInput interface {
	pulumi.Input

	ToSiteReliabilityGuardianObjectivesOutput() SiteReliabilityGuardianObjectivesOutput
	ToSiteReliabilityGuardianObjectivesOutputWithContext(context.Context) SiteReliabilityGuardianObjectivesOutput
}

type SiteReliabilityGuardianObjectivesArgs struct {
	Objectives SiteReliabilityGuardianObjectivesObjectiveArrayInput `pulumi:"objectives"`
}

func (SiteReliabilityGuardianObjectivesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReliabilityGuardianObjectives)(nil)).Elem()
}

func (i SiteReliabilityGuardianObjectivesArgs) ToSiteReliabilityGuardianObjectivesOutput() SiteReliabilityGuardianObjectivesOutput {
	return i.ToSiteReliabilityGuardianObjectivesOutputWithContext(context.Background())
}

func (i SiteReliabilityGuardianObjectivesArgs) ToSiteReliabilityGuardianObjectivesOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianObjectivesOutput)
}

func (i SiteReliabilityGuardianObjectivesArgs) ToSiteReliabilityGuardianObjectivesPtrOutput() SiteReliabilityGuardianObjectivesPtrOutput {
	return i.ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(context.Background())
}

func (i SiteReliabilityGuardianObjectivesArgs) ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianObjectivesOutput).ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(ctx)
}

// SiteReliabilityGuardianObjectivesPtrInput is an input type that accepts SiteReliabilityGuardianObjectivesArgs, SiteReliabilityGuardianObjectivesPtr and SiteReliabilityGuardianObjectivesPtrOutput values.
// You can construct a concrete instance of `SiteReliabilityGuardianObjectivesPtrInput` via:
//
//	        SiteReliabilityGuardianObjectivesArgs{...}
//
//	or:
//
//	        nil
type SiteReliabilityGuardianObjectivesPtrInput interface {
	pulumi.Input

	ToSiteReliabilityGuardianObjectivesPtrOutput() SiteReliabilityGuardianObjectivesPtrOutput
	ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(context.Context) SiteReliabilityGuardianObjectivesPtrOutput
}

type siteReliabilityGuardianObjectivesPtrType SiteReliabilityGuardianObjectivesArgs

func SiteReliabilityGuardianObjectivesPtr(v *SiteReliabilityGuardianObjectivesArgs) SiteReliabilityGuardianObjectivesPtrInput {
	return (*siteReliabilityGuardianObjectivesPtrType)(v)
}

func (*siteReliabilityGuardianObjectivesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteReliabilityGuardianObjectives)(nil)).Elem()
}

func (i *siteReliabilityGuardianObjectivesPtrType) ToSiteReliabilityGuardianObjectivesPtrOutput() SiteReliabilityGuardianObjectivesPtrOutput {
	return i.ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(context.Background())
}

func (i *siteReliabilityGuardianObjectivesPtrType) ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianObjectivesPtrOutput)
}

type SiteReliabilityGuardianObjectivesOutput struct{ *pulumi.OutputState }

func (SiteReliabilityGuardianObjectivesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReliabilityGuardianObjectives)(nil)).Elem()
}

func (o SiteReliabilityGuardianObjectivesOutput) ToSiteReliabilityGuardianObjectivesOutput() SiteReliabilityGuardianObjectivesOutput {
	return o
}

func (o SiteReliabilityGuardianObjectivesOutput) ToSiteReliabilityGuardianObjectivesOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesOutput {
	return o
}

func (o SiteReliabilityGuardianObjectivesOutput) ToSiteReliabilityGuardianObjectivesPtrOutput() SiteReliabilityGuardianObjectivesPtrOutput {
	return o.ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(context.Background())
}

func (o SiteReliabilityGuardianObjectivesOutput) ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteReliabilityGuardianObjectives) *SiteReliabilityGuardianObjectives {
		return &v
	}).(SiteReliabilityGuardianObjectivesPtrOutput)
}

func (o SiteReliabilityGuardianObjectivesOutput) Objectives() SiteReliabilityGuardianObjectivesObjectiveArrayOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectives) []SiteReliabilityGuardianObjectivesObjective {
		return v.Objectives
	}).(SiteReliabilityGuardianObjectivesObjectiveArrayOutput)
}

type SiteReliabilityGuardianObjectivesPtrOutput struct{ *pulumi.OutputState }

func (SiteReliabilityGuardianObjectivesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteReliabilityGuardianObjectives)(nil)).Elem()
}

func (o SiteReliabilityGuardianObjectivesPtrOutput) ToSiteReliabilityGuardianObjectivesPtrOutput() SiteReliabilityGuardianObjectivesPtrOutput {
	return o
}

func (o SiteReliabilityGuardianObjectivesPtrOutput) ToSiteReliabilityGuardianObjectivesPtrOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesPtrOutput {
	return o
}

func (o SiteReliabilityGuardianObjectivesPtrOutput) Elem() SiteReliabilityGuardianObjectivesOutput {
	return o.ApplyT(func(v *SiteReliabilityGuardianObjectives) SiteReliabilityGuardianObjectives {
		if v != nil {
			return *v
		}
		var ret SiteReliabilityGuardianObjectives
		return ret
	}).(SiteReliabilityGuardianObjectivesOutput)
}

func (o SiteReliabilityGuardianObjectivesPtrOutput) Objectives() SiteReliabilityGuardianObjectivesObjectiveArrayOutput {
	return o.ApplyT(func(v *SiteReliabilityGuardianObjectives) []SiteReliabilityGuardianObjectivesObjective {
		if v == nil {
			return nil
		}
		return v.Objectives
	}).(SiteReliabilityGuardianObjectivesObjectiveArrayOutput)
}

type SiteReliabilityGuardianObjectivesObjective struct {
	// Enable auto adaptive threshold
	AutoAdaptiveThresholdEnabled *bool `pulumi:"autoAdaptiveThresholdEnabled"`
	// Possible Values: `GREATER_THAN_OR_EQUAL`, `LESS_THAN_OR_EQUAL`
	ComparisonOperator string `pulumi:"comparisonOperator"`
	// no documentation available
	Description *string `pulumi:"description"`
	// DQL query
	DqlQuery *string `pulumi:"dqlQuery"`
	// Objective name
	Name string `pulumi:"name"`
	// Possible Values: `DQL`, `REFERENCE_SLO`
	ObjectiveType string `pulumi:"objectiveType"`
	// Please enter the metric key of your desired SLO. SLO metric keys have to start with 'func:slo.'
	ReferenceSlo *string `pulumi:"referenceSlo"`
	// no documentation available
	Target *float64 `pulumi:"target"`
	// no documentation available
	Warning *float64 `pulumi:"warning"`
}

// SiteReliabilityGuardianObjectivesObjectiveInput is an input type that accepts SiteReliabilityGuardianObjectivesObjectiveArgs and SiteReliabilityGuardianObjectivesObjectiveOutput values.
// You can construct a concrete instance of `SiteReliabilityGuardianObjectivesObjectiveInput` via:
//
//	SiteReliabilityGuardianObjectivesObjectiveArgs{...}
type SiteReliabilityGuardianObjectivesObjectiveInput interface {
	pulumi.Input

	ToSiteReliabilityGuardianObjectivesObjectiveOutput() SiteReliabilityGuardianObjectivesObjectiveOutput
	ToSiteReliabilityGuardianObjectivesObjectiveOutputWithContext(context.Context) SiteReliabilityGuardianObjectivesObjectiveOutput
}

type SiteReliabilityGuardianObjectivesObjectiveArgs struct {
	// Enable auto adaptive threshold
	AutoAdaptiveThresholdEnabled pulumi.BoolPtrInput `pulumi:"autoAdaptiveThresholdEnabled"`
	// Possible Values: `GREATER_THAN_OR_EQUAL`, `LESS_THAN_OR_EQUAL`
	ComparisonOperator pulumi.StringInput `pulumi:"comparisonOperator"`
	// no documentation available
	Description pulumi.StringPtrInput `pulumi:"description"`
	// DQL query
	DqlQuery pulumi.StringPtrInput `pulumi:"dqlQuery"`
	// Objective name
	Name pulumi.StringInput `pulumi:"name"`
	// Possible Values: `DQL`, `REFERENCE_SLO`
	ObjectiveType pulumi.StringInput `pulumi:"objectiveType"`
	// Please enter the metric key of your desired SLO. SLO metric keys have to start with 'func:slo.'
	ReferenceSlo pulumi.StringPtrInput `pulumi:"referenceSlo"`
	// no documentation available
	Target pulumi.Float64PtrInput `pulumi:"target"`
	// no documentation available
	Warning pulumi.Float64PtrInput `pulumi:"warning"`
}

func (SiteReliabilityGuardianObjectivesObjectiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReliabilityGuardianObjectivesObjective)(nil)).Elem()
}

func (i SiteReliabilityGuardianObjectivesObjectiveArgs) ToSiteReliabilityGuardianObjectivesObjectiveOutput() SiteReliabilityGuardianObjectivesObjectiveOutput {
	return i.ToSiteReliabilityGuardianObjectivesObjectiveOutputWithContext(context.Background())
}

func (i SiteReliabilityGuardianObjectivesObjectiveArgs) ToSiteReliabilityGuardianObjectivesObjectiveOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesObjectiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianObjectivesObjectiveOutput)
}

// SiteReliabilityGuardianObjectivesObjectiveArrayInput is an input type that accepts SiteReliabilityGuardianObjectivesObjectiveArray and SiteReliabilityGuardianObjectivesObjectiveArrayOutput values.
// You can construct a concrete instance of `SiteReliabilityGuardianObjectivesObjectiveArrayInput` via:
//
//	SiteReliabilityGuardianObjectivesObjectiveArray{ SiteReliabilityGuardianObjectivesObjectiveArgs{...} }
type SiteReliabilityGuardianObjectivesObjectiveArrayInput interface {
	pulumi.Input

	ToSiteReliabilityGuardianObjectivesObjectiveArrayOutput() SiteReliabilityGuardianObjectivesObjectiveArrayOutput
	ToSiteReliabilityGuardianObjectivesObjectiveArrayOutputWithContext(context.Context) SiteReliabilityGuardianObjectivesObjectiveArrayOutput
}

type SiteReliabilityGuardianObjectivesObjectiveArray []SiteReliabilityGuardianObjectivesObjectiveInput

func (SiteReliabilityGuardianObjectivesObjectiveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteReliabilityGuardianObjectivesObjective)(nil)).Elem()
}

func (i SiteReliabilityGuardianObjectivesObjectiveArray) ToSiteReliabilityGuardianObjectivesObjectiveArrayOutput() SiteReliabilityGuardianObjectivesObjectiveArrayOutput {
	return i.ToSiteReliabilityGuardianObjectivesObjectiveArrayOutputWithContext(context.Background())
}

func (i SiteReliabilityGuardianObjectivesObjectiveArray) ToSiteReliabilityGuardianObjectivesObjectiveArrayOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesObjectiveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianObjectivesObjectiveArrayOutput)
}

type SiteReliabilityGuardianObjectivesObjectiveOutput struct{ *pulumi.OutputState }

func (SiteReliabilityGuardianObjectivesObjectiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReliabilityGuardianObjectivesObjective)(nil)).Elem()
}

func (o SiteReliabilityGuardianObjectivesObjectiveOutput) ToSiteReliabilityGuardianObjectivesObjectiveOutput() SiteReliabilityGuardianObjectivesObjectiveOutput {
	return o
}

func (o SiteReliabilityGuardianObjectivesObjectiveOutput) ToSiteReliabilityGuardianObjectivesObjectiveOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesObjectiveOutput {
	return o
}

// Enable auto adaptive threshold
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) AutoAdaptiveThresholdEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) *bool { return v.AutoAdaptiveThresholdEnabled }).(pulumi.BoolPtrOutput)
}

// Possible Values: `GREATER_THAN_OR_EQUAL`, `LESS_THAN_OR_EQUAL`
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) ComparisonOperator() pulumi.StringOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) string { return v.ComparisonOperator }).(pulumi.StringOutput)
}

// no documentation available
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// DQL query
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) DqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) *string { return v.DqlQuery }).(pulumi.StringPtrOutput)
}

// Objective name
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) string { return v.Name }).(pulumi.StringOutput)
}

// Possible Values: `DQL`, `REFERENCE_SLO`
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) ObjectiveType() pulumi.StringOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) string { return v.ObjectiveType }).(pulumi.StringOutput)
}

// Please enter the metric key of your desired SLO. SLO metric keys have to start with 'func:slo.'
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) ReferenceSlo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) *string { return v.ReferenceSlo }).(pulumi.StringPtrOutput)
}

// no documentation available
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) Target() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) *float64 { return v.Target }).(pulumi.Float64PtrOutput)
}

// no documentation available
func (o SiteReliabilityGuardianObjectivesObjectiveOutput) Warning() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianObjectivesObjective) *float64 { return v.Warning }).(pulumi.Float64PtrOutput)
}

type SiteReliabilityGuardianObjectivesObjectiveArrayOutput struct{ *pulumi.OutputState }

func (SiteReliabilityGuardianObjectivesObjectiveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteReliabilityGuardianObjectivesObjective)(nil)).Elem()
}

func (o SiteReliabilityGuardianObjectivesObjectiveArrayOutput) ToSiteReliabilityGuardianObjectivesObjectiveArrayOutput() SiteReliabilityGuardianObjectivesObjectiveArrayOutput {
	return o
}

func (o SiteReliabilityGuardianObjectivesObjectiveArrayOutput) ToSiteReliabilityGuardianObjectivesObjectiveArrayOutputWithContext(ctx context.Context) SiteReliabilityGuardianObjectivesObjectiveArrayOutput {
	return o
}

func (o SiteReliabilityGuardianObjectivesObjectiveArrayOutput) Index(i pulumi.IntInput) SiteReliabilityGuardianObjectivesObjectiveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SiteReliabilityGuardianObjectivesObjective {
		return vs[0].([]SiteReliabilityGuardianObjectivesObjective)[vs[1].(int)]
	}).(SiteReliabilityGuardianObjectivesObjectiveOutput)
}

type SiteReliabilityGuardianVariables struct {
	Variables []SiteReliabilityGuardianVariablesVariable `pulumi:"variables"`
}

// SiteReliabilityGuardianVariablesInput is an input type that accepts SiteReliabilityGuardianVariablesArgs and SiteReliabilityGuardianVariablesOutput values.
// You can construct a concrete instance of `SiteReliabilityGuardianVariablesInput` via:
//
//	SiteReliabilityGuardianVariablesArgs{...}
type SiteReliabilityGuardianVariablesInput interface {
	pulumi.Input

	ToSiteReliabilityGuardianVariablesOutput() SiteReliabilityGuardianVariablesOutput
	ToSiteReliabilityGuardianVariablesOutputWithContext(context.Context) SiteReliabilityGuardianVariablesOutput
}

type SiteReliabilityGuardianVariablesArgs struct {
	Variables SiteReliabilityGuardianVariablesVariableArrayInput `pulumi:"variables"`
}

func (SiteReliabilityGuardianVariablesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReliabilityGuardianVariables)(nil)).Elem()
}

func (i SiteReliabilityGuardianVariablesArgs) ToSiteReliabilityGuardianVariablesOutput() SiteReliabilityGuardianVariablesOutput {
	return i.ToSiteReliabilityGuardianVariablesOutputWithContext(context.Background())
}

func (i SiteReliabilityGuardianVariablesArgs) ToSiteReliabilityGuardianVariablesOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianVariablesOutput)
}

func (i SiteReliabilityGuardianVariablesArgs) ToSiteReliabilityGuardianVariablesPtrOutput() SiteReliabilityGuardianVariablesPtrOutput {
	return i.ToSiteReliabilityGuardianVariablesPtrOutputWithContext(context.Background())
}

func (i SiteReliabilityGuardianVariablesArgs) ToSiteReliabilityGuardianVariablesPtrOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianVariablesOutput).ToSiteReliabilityGuardianVariablesPtrOutputWithContext(ctx)
}

// SiteReliabilityGuardianVariablesPtrInput is an input type that accepts SiteReliabilityGuardianVariablesArgs, SiteReliabilityGuardianVariablesPtr and SiteReliabilityGuardianVariablesPtrOutput values.
// You can construct a concrete instance of `SiteReliabilityGuardianVariablesPtrInput` via:
//
//	        SiteReliabilityGuardianVariablesArgs{...}
//
//	or:
//
//	        nil
type SiteReliabilityGuardianVariablesPtrInput interface {
	pulumi.Input

	ToSiteReliabilityGuardianVariablesPtrOutput() SiteReliabilityGuardianVariablesPtrOutput
	ToSiteReliabilityGuardianVariablesPtrOutputWithContext(context.Context) SiteReliabilityGuardianVariablesPtrOutput
}

type siteReliabilityGuardianVariablesPtrType SiteReliabilityGuardianVariablesArgs

func SiteReliabilityGuardianVariablesPtr(v *SiteReliabilityGuardianVariablesArgs) SiteReliabilityGuardianVariablesPtrInput {
	return (*siteReliabilityGuardianVariablesPtrType)(v)
}

func (*siteReliabilityGuardianVariablesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteReliabilityGuardianVariables)(nil)).Elem()
}

func (i *siteReliabilityGuardianVariablesPtrType) ToSiteReliabilityGuardianVariablesPtrOutput() SiteReliabilityGuardianVariablesPtrOutput {
	return i.ToSiteReliabilityGuardianVariablesPtrOutputWithContext(context.Background())
}

func (i *siteReliabilityGuardianVariablesPtrType) ToSiteReliabilityGuardianVariablesPtrOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianVariablesPtrOutput)
}

type SiteReliabilityGuardianVariablesOutput struct{ *pulumi.OutputState }

func (SiteReliabilityGuardianVariablesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReliabilityGuardianVariables)(nil)).Elem()
}

func (o SiteReliabilityGuardianVariablesOutput) ToSiteReliabilityGuardianVariablesOutput() SiteReliabilityGuardianVariablesOutput {
	return o
}

func (o SiteReliabilityGuardianVariablesOutput) ToSiteReliabilityGuardianVariablesOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesOutput {
	return o
}

func (o SiteReliabilityGuardianVariablesOutput) ToSiteReliabilityGuardianVariablesPtrOutput() SiteReliabilityGuardianVariablesPtrOutput {
	return o.ToSiteReliabilityGuardianVariablesPtrOutputWithContext(context.Background())
}

func (o SiteReliabilityGuardianVariablesOutput) ToSiteReliabilityGuardianVariablesPtrOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteReliabilityGuardianVariables) *SiteReliabilityGuardianVariables {
		return &v
	}).(SiteReliabilityGuardianVariablesPtrOutput)
}

func (o SiteReliabilityGuardianVariablesOutput) Variables() SiteReliabilityGuardianVariablesVariableArrayOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianVariables) []SiteReliabilityGuardianVariablesVariable {
		return v.Variables
	}).(SiteReliabilityGuardianVariablesVariableArrayOutput)
}

type SiteReliabilityGuardianVariablesPtrOutput struct{ *pulumi.OutputState }

func (SiteReliabilityGuardianVariablesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteReliabilityGuardianVariables)(nil)).Elem()
}

func (o SiteReliabilityGuardianVariablesPtrOutput) ToSiteReliabilityGuardianVariablesPtrOutput() SiteReliabilityGuardianVariablesPtrOutput {
	return o
}

func (o SiteReliabilityGuardianVariablesPtrOutput) ToSiteReliabilityGuardianVariablesPtrOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesPtrOutput {
	return o
}

func (o SiteReliabilityGuardianVariablesPtrOutput) Elem() SiteReliabilityGuardianVariablesOutput {
	return o.ApplyT(func(v *SiteReliabilityGuardianVariables) SiteReliabilityGuardianVariables {
		if v != nil {
			return *v
		}
		var ret SiteReliabilityGuardianVariables
		return ret
	}).(SiteReliabilityGuardianVariablesOutput)
}

func (o SiteReliabilityGuardianVariablesPtrOutput) Variables() SiteReliabilityGuardianVariablesVariableArrayOutput {
	return o.ApplyT(func(v *SiteReliabilityGuardianVariables) []SiteReliabilityGuardianVariablesVariable {
		if v == nil {
			return nil
		}
		return v.Variables
	}).(SiteReliabilityGuardianVariablesVariableArrayOutput)
}

type SiteReliabilityGuardianVariablesVariable struct {
	// Value
	Definition string `pulumi:"definition"`
	// no documentation available
	Name string `pulumi:"name"`
}

// SiteReliabilityGuardianVariablesVariableInput is an input type that accepts SiteReliabilityGuardianVariablesVariableArgs and SiteReliabilityGuardianVariablesVariableOutput values.
// You can construct a concrete instance of `SiteReliabilityGuardianVariablesVariableInput` via:
//
//	SiteReliabilityGuardianVariablesVariableArgs{...}
type SiteReliabilityGuardianVariablesVariableInput interface {
	pulumi.Input

	ToSiteReliabilityGuardianVariablesVariableOutput() SiteReliabilityGuardianVariablesVariableOutput
	ToSiteReliabilityGuardianVariablesVariableOutputWithContext(context.Context) SiteReliabilityGuardianVariablesVariableOutput
}

type SiteReliabilityGuardianVariablesVariableArgs struct {
	// Value
	Definition pulumi.StringInput `pulumi:"definition"`
	// no documentation available
	Name pulumi.StringInput `pulumi:"name"`
}

func (SiteReliabilityGuardianVariablesVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReliabilityGuardianVariablesVariable)(nil)).Elem()
}

func (i SiteReliabilityGuardianVariablesVariableArgs) ToSiteReliabilityGuardianVariablesVariableOutput() SiteReliabilityGuardianVariablesVariableOutput {
	return i.ToSiteReliabilityGuardianVariablesVariableOutputWithContext(context.Background())
}

func (i SiteReliabilityGuardianVariablesVariableArgs) ToSiteReliabilityGuardianVariablesVariableOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianVariablesVariableOutput)
}

// SiteReliabilityGuardianVariablesVariableArrayInput is an input type that accepts SiteReliabilityGuardianVariablesVariableArray and SiteReliabilityGuardianVariablesVariableArrayOutput values.
// You can construct a concrete instance of `SiteReliabilityGuardianVariablesVariableArrayInput` via:
//
//	SiteReliabilityGuardianVariablesVariableArray{ SiteReliabilityGuardianVariablesVariableArgs{...} }
type SiteReliabilityGuardianVariablesVariableArrayInput interface {
	pulumi.Input

	ToSiteReliabilityGuardianVariablesVariableArrayOutput() SiteReliabilityGuardianVariablesVariableArrayOutput
	ToSiteReliabilityGuardianVariablesVariableArrayOutputWithContext(context.Context) SiteReliabilityGuardianVariablesVariableArrayOutput
}

type SiteReliabilityGuardianVariablesVariableArray []SiteReliabilityGuardianVariablesVariableInput

func (SiteReliabilityGuardianVariablesVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteReliabilityGuardianVariablesVariable)(nil)).Elem()
}

func (i SiteReliabilityGuardianVariablesVariableArray) ToSiteReliabilityGuardianVariablesVariableArrayOutput() SiteReliabilityGuardianVariablesVariableArrayOutput {
	return i.ToSiteReliabilityGuardianVariablesVariableArrayOutputWithContext(context.Background())
}

func (i SiteReliabilityGuardianVariablesVariableArray) ToSiteReliabilityGuardianVariablesVariableArrayOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteReliabilityGuardianVariablesVariableArrayOutput)
}

type SiteReliabilityGuardianVariablesVariableOutput struct{ *pulumi.OutputState }

func (SiteReliabilityGuardianVariablesVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteReliabilityGuardianVariablesVariable)(nil)).Elem()
}

func (o SiteReliabilityGuardianVariablesVariableOutput) ToSiteReliabilityGuardianVariablesVariableOutput() SiteReliabilityGuardianVariablesVariableOutput {
	return o
}

func (o SiteReliabilityGuardianVariablesVariableOutput) ToSiteReliabilityGuardianVariablesVariableOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesVariableOutput {
	return o
}

// Value
func (o SiteReliabilityGuardianVariablesVariableOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianVariablesVariable) string { return v.Definition }).(pulumi.StringOutput)
}

// no documentation available
func (o SiteReliabilityGuardianVariablesVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SiteReliabilityGuardianVariablesVariable) string { return v.Name }).(pulumi.StringOutput)
}

type SiteReliabilityGuardianVariablesVariableArrayOutput struct{ *pulumi.OutputState }

func (SiteReliabilityGuardianVariablesVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SiteReliabilityGuardianVariablesVariable)(nil)).Elem()
}

func (o SiteReliabilityGuardianVariablesVariableArrayOutput) ToSiteReliabilityGuardianVariablesVariableArrayOutput() SiteReliabilityGuardianVariablesVariableArrayOutput {
	return o
}

func (o SiteReliabilityGuardianVariablesVariableArrayOutput) ToSiteReliabilityGuardianVariablesVariableArrayOutputWithContext(ctx context.Context) SiteReliabilityGuardianVariablesVariableArrayOutput {
	return o
}

func (o SiteReliabilityGuardianVariablesVariableArrayOutput) Index(i pulumi.IntInput) SiteReliabilityGuardianVariablesVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SiteReliabilityGuardianVariablesVariable {
		return vs[0].([]SiteReliabilityGuardianVariablesVariable)[vs[1].(int)]
	}).(SiteReliabilityGuardianVariablesVariableOutput)
}

type SloErrorBudgetBurnRate struct {
	// The error budget burn rate calculation is enabled (true) or disabled (false).
	BurnRateVisualizationEnabled *bool `pulumi:"burnRateVisualizationEnabled"`
	// The threshold between a slow and a fast burn rate.
	FastBurnThreshold *float64 `pulumi:"fastBurnThreshold"`
}

// SloErrorBudgetBurnRateInput is an input type that accepts SloErrorBudgetBurnRateArgs and SloErrorBudgetBurnRateOutput values.
// You can construct a concrete instance of `SloErrorBudgetBurnRateInput` via:
//
//	SloErrorBudgetBurnRateArgs{...}
type SloErrorBudgetBurnRateInput interface {
	pulumi.Input

	ToSloErrorBudgetBurnRateOutput() SloErrorBudgetBurnRateOutput
	ToSloErrorBudgetBurnRateOutputWithContext(context.Context) SloErrorBudgetBurnRateOutput
}

type SloErrorBudgetBurnRateArgs struct {
	// The error budget burn rate calculation is enabled (true) or disabled (false).
	BurnRateVisualizationEnabled pulumi.BoolPtrInput `pulumi:"burnRateVisualizationEnabled"`
	// The threshold between a slow and a fast burn rate.
	FastBurnThreshold pulumi.Float64PtrInput `pulumi:"fastBurnThreshold"`
}

func (SloErrorBudgetBurnRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloErrorBudgetBurnRate)(nil)).Elem()
}

func (i SloErrorBudgetBurnRateArgs) ToSloErrorBudgetBurnRateOutput() SloErrorBudgetBurnRateOutput {
	return i.ToSloErrorBudgetBurnRateOutputWithContext(context.Background())
}

func (i SloErrorBudgetBurnRateArgs) ToSloErrorBudgetBurnRateOutputWithContext(ctx context.Context) SloErrorBudgetBurnRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloErrorBudgetBurnRateOutput)
}

func (i SloErrorBudgetBurnRateArgs) ToSloErrorBudgetBurnRatePtrOutput() SloErrorBudgetBurnRatePtrOutput {
	return i.ToSloErrorBudgetBurnRatePtrOutputWithContext(context.Background())
}

func (i SloErrorBudgetBurnRateArgs) ToSloErrorBudgetBurnRatePtrOutputWithContext(ctx context.Context) SloErrorBudgetBurnRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloErrorBudgetBurnRateOutput).ToSloErrorBudgetBurnRatePtrOutputWithContext(ctx)
}

// SloErrorBudgetBurnRatePtrInput is an input type that accepts SloErrorBudgetBurnRateArgs, SloErrorBudgetBurnRatePtr and SloErrorBudgetBurnRatePtrOutput values.
// You can construct a concrete instance of `SloErrorBudgetBurnRatePtrInput` via:
//
//	        SloErrorBudgetBurnRateArgs{...}
//
//	or:
//
//	        nil
type SloErrorBudgetBurnRatePtrInput interface {
	pulumi.Input

	ToSloErrorBudgetBurnRatePtrOutput() SloErrorBudgetBurnRatePtrOutput
	ToSloErrorBudgetBurnRatePtrOutputWithContext(context.Context) SloErrorBudgetBurnRatePtrOutput
}

type sloErrorBudgetBurnRatePtrType SloErrorBudgetBurnRateArgs

func SloErrorBudgetBurnRatePtr(v *SloErrorBudgetBurnRateArgs) SloErrorBudgetBurnRatePtrInput {
	return (*sloErrorBudgetBurnRatePtrType)(v)
}

func (*sloErrorBudgetBurnRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloErrorBudgetBurnRate)(nil)).Elem()
}

func (i *sloErrorBudgetBurnRatePtrType) ToSloErrorBudgetBurnRatePtrOutput() SloErrorBudgetBurnRatePtrOutput {
	return i.ToSloErrorBudgetBurnRatePtrOutputWithContext(context.Background())
}

func (i *sloErrorBudgetBurnRatePtrType) ToSloErrorBudgetBurnRatePtrOutputWithContext(ctx context.Context) SloErrorBudgetBurnRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloErrorBudgetBurnRatePtrOutput)
}

type SloErrorBudgetBurnRateOutput struct{ *pulumi.OutputState }

func (SloErrorBudgetBurnRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloErrorBudgetBurnRate)(nil)).Elem()
}

func (o SloErrorBudgetBurnRateOutput) ToSloErrorBudgetBurnRateOutput() SloErrorBudgetBurnRateOutput {
	return o
}

func (o SloErrorBudgetBurnRateOutput) ToSloErrorBudgetBurnRateOutputWithContext(ctx context.Context) SloErrorBudgetBurnRateOutput {
	return o
}

func (o SloErrorBudgetBurnRateOutput) ToSloErrorBudgetBurnRatePtrOutput() SloErrorBudgetBurnRatePtrOutput {
	return o.ToSloErrorBudgetBurnRatePtrOutputWithContext(context.Background())
}

func (o SloErrorBudgetBurnRateOutput) ToSloErrorBudgetBurnRatePtrOutputWithContext(ctx context.Context) SloErrorBudgetBurnRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloErrorBudgetBurnRate) *SloErrorBudgetBurnRate {
		return &v
	}).(SloErrorBudgetBurnRatePtrOutput)
}

// The error budget burn rate calculation is enabled (true) or disabled (false).
func (o SloErrorBudgetBurnRateOutput) BurnRateVisualizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloErrorBudgetBurnRate) *bool { return v.BurnRateVisualizationEnabled }).(pulumi.BoolPtrOutput)
}

// The threshold between a slow and a fast burn rate.
func (o SloErrorBudgetBurnRateOutput) FastBurnThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloErrorBudgetBurnRate) *float64 { return v.FastBurnThreshold }).(pulumi.Float64PtrOutput)
}

type SloErrorBudgetBurnRatePtrOutput struct{ *pulumi.OutputState }

func (SloErrorBudgetBurnRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloErrorBudgetBurnRate)(nil)).Elem()
}

func (o SloErrorBudgetBurnRatePtrOutput) ToSloErrorBudgetBurnRatePtrOutput() SloErrorBudgetBurnRatePtrOutput {
	return o
}

func (o SloErrorBudgetBurnRatePtrOutput) ToSloErrorBudgetBurnRatePtrOutputWithContext(ctx context.Context) SloErrorBudgetBurnRatePtrOutput {
	return o
}

func (o SloErrorBudgetBurnRatePtrOutput) Elem() SloErrorBudgetBurnRateOutput {
	return o.ApplyT(func(v *SloErrorBudgetBurnRate) SloErrorBudgetBurnRate {
		if v != nil {
			return *v
		}
		var ret SloErrorBudgetBurnRate
		return ret
	}).(SloErrorBudgetBurnRateOutput)
}

// The error budget burn rate calculation is enabled (true) or disabled (false).
func (o SloErrorBudgetBurnRatePtrOutput) BurnRateVisualizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SloErrorBudgetBurnRate) *bool {
		if v == nil {
			return nil
		}
		return v.BurnRateVisualizationEnabled
	}).(pulumi.BoolPtrOutput)
}

// The threshold between a slow and a fast burn rate.
func (o SloErrorBudgetBurnRatePtrOutput) FastBurnThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloErrorBudgetBurnRate) *float64 {
		if v == nil {
			return nil
		}
		return v.FastBurnThreshold
	}).(pulumi.Float64PtrOutput)
}

type SloV2ErrorBudgetBurnRate struct {
	// Burn rate visualization enabled
	BurnRateVisualizationEnabled bool `pulumi:"burnRateVisualizationEnabled"`
	// The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
	FastBurnThreshold *float64 `pulumi:"fastBurnThreshold"`
}

// SloV2ErrorBudgetBurnRateInput is an input type that accepts SloV2ErrorBudgetBurnRateArgs and SloV2ErrorBudgetBurnRateOutput values.
// You can construct a concrete instance of `SloV2ErrorBudgetBurnRateInput` via:
//
//	SloV2ErrorBudgetBurnRateArgs{...}
type SloV2ErrorBudgetBurnRateInput interface {
	pulumi.Input

	ToSloV2ErrorBudgetBurnRateOutput() SloV2ErrorBudgetBurnRateOutput
	ToSloV2ErrorBudgetBurnRateOutputWithContext(context.Context) SloV2ErrorBudgetBurnRateOutput
}

type SloV2ErrorBudgetBurnRateArgs struct {
	// Burn rate visualization enabled
	BurnRateVisualizationEnabled pulumi.BoolInput `pulumi:"burnRateVisualizationEnabled"`
	// The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
	FastBurnThreshold pulumi.Float64PtrInput `pulumi:"fastBurnThreshold"`
}

func (SloV2ErrorBudgetBurnRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloV2ErrorBudgetBurnRate)(nil)).Elem()
}

func (i SloV2ErrorBudgetBurnRateArgs) ToSloV2ErrorBudgetBurnRateOutput() SloV2ErrorBudgetBurnRateOutput {
	return i.ToSloV2ErrorBudgetBurnRateOutputWithContext(context.Background())
}

func (i SloV2ErrorBudgetBurnRateArgs) ToSloV2ErrorBudgetBurnRateOutputWithContext(ctx context.Context) SloV2ErrorBudgetBurnRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloV2ErrorBudgetBurnRateOutput)
}

func (i SloV2ErrorBudgetBurnRateArgs) ToSloV2ErrorBudgetBurnRatePtrOutput() SloV2ErrorBudgetBurnRatePtrOutput {
	return i.ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(context.Background())
}

func (i SloV2ErrorBudgetBurnRateArgs) ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(ctx context.Context) SloV2ErrorBudgetBurnRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloV2ErrorBudgetBurnRateOutput).ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(ctx)
}

// SloV2ErrorBudgetBurnRatePtrInput is an input type that accepts SloV2ErrorBudgetBurnRateArgs, SloV2ErrorBudgetBurnRatePtr and SloV2ErrorBudgetBurnRatePtrOutput values.
// You can construct a concrete instance of `SloV2ErrorBudgetBurnRatePtrInput` via:
//
//	        SloV2ErrorBudgetBurnRateArgs{...}
//
//	or:
//
//	        nil
type SloV2ErrorBudgetBurnRatePtrInput interface {
	pulumi.Input

	ToSloV2ErrorBudgetBurnRatePtrOutput() SloV2ErrorBudgetBurnRatePtrOutput
	ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(context.Context) SloV2ErrorBudgetBurnRatePtrOutput
}

type sloV2ErrorBudgetBurnRatePtrType SloV2ErrorBudgetBurnRateArgs

func SloV2ErrorBudgetBurnRatePtr(v *SloV2ErrorBudgetBurnRateArgs) SloV2ErrorBudgetBurnRatePtrInput {
	return (*sloV2ErrorBudgetBurnRatePtrType)(v)
}

func (*sloV2ErrorBudgetBurnRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloV2ErrorBudgetBurnRate)(nil)).Elem()
}

func (i *sloV2ErrorBudgetBurnRatePtrType) ToSloV2ErrorBudgetBurnRatePtrOutput() SloV2ErrorBudgetBurnRatePtrOutput {
	return i.ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(context.Background())
}

func (i *sloV2ErrorBudgetBurnRatePtrType) ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(ctx context.Context) SloV2ErrorBudgetBurnRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloV2ErrorBudgetBurnRatePtrOutput)
}

type SloV2ErrorBudgetBurnRateOutput struct{ *pulumi.OutputState }

func (SloV2ErrorBudgetBurnRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloV2ErrorBudgetBurnRate)(nil)).Elem()
}

func (o SloV2ErrorBudgetBurnRateOutput) ToSloV2ErrorBudgetBurnRateOutput() SloV2ErrorBudgetBurnRateOutput {
	return o
}

func (o SloV2ErrorBudgetBurnRateOutput) ToSloV2ErrorBudgetBurnRateOutputWithContext(ctx context.Context) SloV2ErrorBudgetBurnRateOutput {
	return o
}

func (o SloV2ErrorBudgetBurnRateOutput) ToSloV2ErrorBudgetBurnRatePtrOutput() SloV2ErrorBudgetBurnRatePtrOutput {
	return o.ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(context.Background())
}

func (o SloV2ErrorBudgetBurnRateOutput) ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(ctx context.Context) SloV2ErrorBudgetBurnRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloV2ErrorBudgetBurnRate) *SloV2ErrorBudgetBurnRate {
		return &v
	}).(SloV2ErrorBudgetBurnRatePtrOutput)
}

// Burn rate visualization enabled
func (o SloV2ErrorBudgetBurnRateOutput) BurnRateVisualizationEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SloV2ErrorBudgetBurnRate) bool { return v.BurnRateVisualizationEnabled }).(pulumi.BoolOutput)
}

// The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
func (o SloV2ErrorBudgetBurnRateOutput) FastBurnThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloV2ErrorBudgetBurnRate) *float64 { return v.FastBurnThreshold }).(pulumi.Float64PtrOutput)
}

type SloV2ErrorBudgetBurnRatePtrOutput struct{ *pulumi.OutputState }

func (SloV2ErrorBudgetBurnRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloV2ErrorBudgetBurnRate)(nil)).Elem()
}

func (o SloV2ErrorBudgetBurnRatePtrOutput) ToSloV2ErrorBudgetBurnRatePtrOutput() SloV2ErrorBudgetBurnRatePtrOutput {
	return o
}

func (o SloV2ErrorBudgetBurnRatePtrOutput) ToSloV2ErrorBudgetBurnRatePtrOutputWithContext(ctx context.Context) SloV2ErrorBudgetBurnRatePtrOutput {
	return o
}

func (o SloV2ErrorBudgetBurnRatePtrOutput) Elem() SloV2ErrorBudgetBurnRateOutput {
	return o.ApplyT(func(v *SloV2ErrorBudgetBurnRate) SloV2ErrorBudgetBurnRate {
		if v != nil {
			return *v
		}
		var ret SloV2ErrorBudgetBurnRate
		return ret
	}).(SloV2ErrorBudgetBurnRateOutput)
}

// Burn rate visualization enabled
func (o SloV2ErrorBudgetBurnRatePtrOutput) BurnRateVisualizationEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SloV2ErrorBudgetBurnRate) *bool {
		if v == nil {
			return nil
		}
		return &v.BurnRateVisualizationEnabled
	}).(pulumi.BoolPtrOutput)
}

// The threshold defines when a burn rate is marked as fast-burning (high-emergency). Burn rates lower than this threshold (and greater than 1) are highlighted as slow-burn (low-emergency).
func (o SloV2ErrorBudgetBurnRatePtrOutput) FastBurnThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloV2ErrorBudgetBurnRate) *float64 {
		if v == nil {
			return nil
		}
		return v.FastBurnThreshold
	}).(pulumi.Float64PtrOutput)
}

type SpanCaptureRuleMatches struct {
	// Matching strategies for the Span
	Matches []SpanCaptureRuleMatchesMatch `pulumi:"matches"`
}

// SpanCaptureRuleMatchesInput is an input type that accepts SpanCaptureRuleMatchesArgs and SpanCaptureRuleMatchesOutput values.
// You can construct a concrete instance of `SpanCaptureRuleMatchesInput` via:
//
//	SpanCaptureRuleMatchesArgs{...}
type SpanCaptureRuleMatchesInput interface {
	pulumi.Input

	ToSpanCaptureRuleMatchesOutput() SpanCaptureRuleMatchesOutput
	ToSpanCaptureRuleMatchesOutputWithContext(context.Context) SpanCaptureRuleMatchesOutput
}

type SpanCaptureRuleMatchesArgs struct {
	// Matching strategies for the Span
	Matches SpanCaptureRuleMatchesMatchArrayInput `pulumi:"matches"`
}

func (SpanCaptureRuleMatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanCaptureRuleMatches)(nil)).Elem()
}

func (i SpanCaptureRuleMatchesArgs) ToSpanCaptureRuleMatchesOutput() SpanCaptureRuleMatchesOutput {
	return i.ToSpanCaptureRuleMatchesOutputWithContext(context.Background())
}

func (i SpanCaptureRuleMatchesArgs) ToSpanCaptureRuleMatchesOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesOutput)
}

func (i SpanCaptureRuleMatchesArgs) ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput {
	return i.ToSpanCaptureRuleMatchesPtrOutputWithContext(context.Background())
}

func (i SpanCaptureRuleMatchesArgs) ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesOutput).ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx)
}

// SpanCaptureRuleMatchesPtrInput is an input type that accepts SpanCaptureRuleMatchesArgs, SpanCaptureRuleMatchesPtr and SpanCaptureRuleMatchesPtrOutput values.
// You can construct a concrete instance of `SpanCaptureRuleMatchesPtrInput` via:
//
//	        SpanCaptureRuleMatchesArgs{...}
//
//	or:
//
//	        nil
type SpanCaptureRuleMatchesPtrInput interface {
	pulumi.Input

	ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput
	ToSpanCaptureRuleMatchesPtrOutputWithContext(context.Context) SpanCaptureRuleMatchesPtrOutput
}

type spanCaptureRuleMatchesPtrType SpanCaptureRuleMatchesArgs

func SpanCaptureRuleMatchesPtr(v *SpanCaptureRuleMatchesArgs) SpanCaptureRuleMatchesPtrInput {
	return (*spanCaptureRuleMatchesPtrType)(v)
}

func (*spanCaptureRuleMatchesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanCaptureRuleMatches)(nil)).Elem()
}

func (i *spanCaptureRuleMatchesPtrType) ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput {
	return i.ToSpanCaptureRuleMatchesPtrOutputWithContext(context.Background())
}

func (i *spanCaptureRuleMatchesPtrType) ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesPtrOutput)
}

type SpanCaptureRuleMatchesOutput struct{ *pulumi.OutputState }

func (SpanCaptureRuleMatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanCaptureRuleMatches)(nil)).Elem()
}

func (o SpanCaptureRuleMatchesOutput) ToSpanCaptureRuleMatchesOutput() SpanCaptureRuleMatchesOutput {
	return o
}

func (o SpanCaptureRuleMatchesOutput) ToSpanCaptureRuleMatchesOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesOutput {
	return o
}

func (o SpanCaptureRuleMatchesOutput) ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput {
	return o.ToSpanCaptureRuleMatchesPtrOutputWithContext(context.Background())
}

func (o SpanCaptureRuleMatchesOutput) ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpanCaptureRuleMatches) *SpanCaptureRuleMatches {
		return &v
	}).(SpanCaptureRuleMatchesPtrOutput)
}

// Matching strategies for the Span
func (o SpanCaptureRuleMatchesOutput) Matches() SpanCaptureRuleMatchesMatchArrayOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatches) []SpanCaptureRuleMatchesMatch { return v.Matches }).(SpanCaptureRuleMatchesMatchArrayOutput)
}

type SpanCaptureRuleMatchesPtrOutput struct{ *pulumi.OutputState }

func (SpanCaptureRuleMatchesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanCaptureRuleMatches)(nil)).Elem()
}

func (o SpanCaptureRuleMatchesPtrOutput) ToSpanCaptureRuleMatchesPtrOutput() SpanCaptureRuleMatchesPtrOutput {
	return o
}

func (o SpanCaptureRuleMatchesPtrOutput) ToSpanCaptureRuleMatchesPtrOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesPtrOutput {
	return o
}

func (o SpanCaptureRuleMatchesPtrOutput) Elem() SpanCaptureRuleMatchesOutput {
	return o.ApplyT(func(v *SpanCaptureRuleMatches) SpanCaptureRuleMatches {
		if v != nil {
			return *v
		}
		var ret SpanCaptureRuleMatches
		return ret
	}).(SpanCaptureRuleMatchesOutput)
}

// Matching strategies for the Span
func (o SpanCaptureRuleMatchesPtrOutput) Matches() SpanCaptureRuleMatchesMatchArrayOutput {
	return o.ApplyT(func(v *SpanCaptureRuleMatches) []SpanCaptureRuleMatchesMatch {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(SpanCaptureRuleMatchesMatchArrayOutput)
}

type SpanCaptureRuleMatchesMatch struct {
	// Whether to match strings case sensitively or not
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
	Comparison string `pulumi:"comparison"`
	// The name of the attribute if `source` is `ATTRIBUTE`
	Key *string `pulumi:"key"`
	// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
	Source string `pulumi:"source"`
	// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
	Value *string `pulumi:"value"`
}

// SpanCaptureRuleMatchesMatchInput is an input type that accepts SpanCaptureRuleMatchesMatchArgs and SpanCaptureRuleMatchesMatchOutput values.
// You can construct a concrete instance of `SpanCaptureRuleMatchesMatchInput` via:
//
//	SpanCaptureRuleMatchesMatchArgs{...}
type SpanCaptureRuleMatchesMatchInput interface {
	pulumi.Input

	ToSpanCaptureRuleMatchesMatchOutput() SpanCaptureRuleMatchesMatchOutput
	ToSpanCaptureRuleMatchesMatchOutputWithContext(context.Context) SpanCaptureRuleMatchesMatchOutput
}

type SpanCaptureRuleMatchesMatchArgs struct {
	// Whether to match strings case sensitively or not
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// The name of the attribute if `source` is `ATTRIBUTE`
	Key pulumi.StringPtrInput `pulumi:"key"`
	// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
	Source pulumi.StringInput `pulumi:"source"`
	// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SpanCaptureRuleMatchesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanCaptureRuleMatchesMatch)(nil)).Elem()
}

func (i SpanCaptureRuleMatchesMatchArgs) ToSpanCaptureRuleMatchesMatchOutput() SpanCaptureRuleMatchesMatchOutput {
	return i.ToSpanCaptureRuleMatchesMatchOutputWithContext(context.Background())
}

func (i SpanCaptureRuleMatchesMatchArgs) ToSpanCaptureRuleMatchesMatchOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesMatchOutput)
}

// SpanCaptureRuleMatchesMatchArrayInput is an input type that accepts SpanCaptureRuleMatchesMatchArray and SpanCaptureRuleMatchesMatchArrayOutput values.
// You can construct a concrete instance of `SpanCaptureRuleMatchesMatchArrayInput` via:
//
//	SpanCaptureRuleMatchesMatchArray{ SpanCaptureRuleMatchesMatchArgs{...} }
type SpanCaptureRuleMatchesMatchArrayInput interface {
	pulumi.Input

	ToSpanCaptureRuleMatchesMatchArrayOutput() SpanCaptureRuleMatchesMatchArrayOutput
	ToSpanCaptureRuleMatchesMatchArrayOutputWithContext(context.Context) SpanCaptureRuleMatchesMatchArrayOutput
}

type SpanCaptureRuleMatchesMatchArray []SpanCaptureRuleMatchesMatchInput

func (SpanCaptureRuleMatchesMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanCaptureRuleMatchesMatch)(nil)).Elem()
}

func (i SpanCaptureRuleMatchesMatchArray) ToSpanCaptureRuleMatchesMatchArrayOutput() SpanCaptureRuleMatchesMatchArrayOutput {
	return i.ToSpanCaptureRuleMatchesMatchArrayOutputWithContext(context.Background())
}

func (i SpanCaptureRuleMatchesMatchArray) ToSpanCaptureRuleMatchesMatchArrayOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanCaptureRuleMatchesMatchArrayOutput)
}

type SpanCaptureRuleMatchesMatchOutput struct{ *pulumi.OutputState }

func (SpanCaptureRuleMatchesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanCaptureRuleMatchesMatch)(nil)).Elem()
}

func (o SpanCaptureRuleMatchesMatchOutput) ToSpanCaptureRuleMatchesMatchOutput() SpanCaptureRuleMatchesMatchOutput {
	return o
}

func (o SpanCaptureRuleMatchesMatchOutput) ToSpanCaptureRuleMatchesMatchOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesMatchOutput {
	return o
}

// Whether to match strings case sensitively or not
func (o SpanCaptureRuleMatchesMatchOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
func (o SpanCaptureRuleMatchesMatchOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) string { return v.Comparison }).(pulumi.StringOutput)
}

// The name of the attribute if `source` is `ATTRIBUTE`
func (o SpanCaptureRuleMatchesMatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
func (o SpanCaptureRuleMatchesMatchOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) string { return v.Source }).(pulumi.StringOutput)
}

// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
func (o SpanCaptureRuleMatchesMatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanCaptureRuleMatchesMatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpanCaptureRuleMatchesMatchArrayOutput struct{ *pulumi.OutputState }

func (SpanCaptureRuleMatchesMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanCaptureRuleMatchesMatch)(nil)).Elem()
}

func (o SpanCaptureRuleMatchesMatchArrayOutput) ToSpanCaptureRuleMatchesMatchArrayOutput() SpanCaptureRuleMatchesMatchArrayOutput {
	return o
}

func (o SpanCaptureRuleMatchesMatchArrayOutput) ToSpanCaptureRuleMatchesMatchArrayOutputWithContext(ctx context.Context) SpanCaptureRuleMatchesMatchArrayOutput {
	return o
}

func (o SpanCaptureRuleMatchesMatchArrayOutput) Index(i pulumi.IntInput) SpanCaptureRuleMatchesMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpanCaptureRuleMatchesMatch {
		return vs[0].([]SpanCaptureRuleMatchesMatch)[vs[1].(int)]
	}).(SpanCaptureRuleMatchesMatchOutput)
}

type SpanContextPropagationMatches struct {
	// Matching strategies for the Span
	Matches []SpanContextPropagationMatchesMatch `pulumi:"matches"`
}

// SpanContextPropagationMatchesInput is an input type that accepts SpanContextPropagationMatchesArgs and SpanContextPropagationMatchesOutput values.
// You can construct a concrete instance of `SpanContextPropagationMatchesInput` via:
//
//	SpanContextPropagationMatchesArgs{...}
type SpanContextPropagationMatchesInput interface {
	pulumi.Input

	ToSpanContextPropagationMatchesOutput() SpanContextPropagationMatchesOutput
	ToSpanContextPropagationMatchesOutputWithContext(context.Context) SpanContextPropagationMatchesOutput
}

type SpanContextPropagationMatchesArgs struct {
	// Matching strategies for the Span
	Matches SpanContextPropagationMatchesMatchArrayInput `pulumi:"matches"`
}

func (SpanContextPropagationMatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanContextPropagationMatches)(nil)).Elem()
}

func (i SpanContextPropagationMatchesArgs) ToSpanContextPropagationMatchesOutput() SpanContextPropagationMatchesOutput {
	return i.ToSpanContextPropagationMatchesOutputWithContext(context.Background())
}

func (i SpanContextPropagationMatchesArgs) ToSpanContextPropagationMatchesOutputWithContext(ctx context.Context) SpanContextPropagationMatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesOutput)
}

func (i SpanContextPropagationMatchesArgs) ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput {
	return i.ToSpanContextPropagationMatchesPtrOutputWithContext(context.Background())
}

func (i SpanContextPropagationMatchesArgs) ToSpanContextPropagationMatchesPtrOutputWithContext(ctx context.Context) SpanContextPropagationMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesOutput).ToSpanContextPropagationMatchesPtrOutputWithContext(ctx)
}

// SpanContextPropagationMatchesPtrInput is an input type that accepts SpanContextPropagationMatchesArgs, SpanContextPropagationMatchesPtr and SpanContextPropagationMatchesPtrOutput values.
// You can construct a concrete instance of `SpanContextPropagationMatchesPtrInput` via:
//
//	        SpanContextPropagationMatchesArgs{...}
//
//	or:
//
//	        nil
type SpanContextPropagationMatchesPtrInput interface {
	pulumi.Input

	ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput
	ToSpanContextPropagationMatchesPtrOutputWithContext(context.Context) SpanContextPropagationMatchesPtrOutput
}

type spanContextPropagationMatchesPtrType SpanContextPropagationMatchesArgs

func SpanContextPropagationMatchesPtr(v *SpanContextPropagationMatchesArgs) SpanContextPropagationMatchesPtrInput {
	return (*spanContextPropagationMatchesPtrType)(v)
}

func (*spanContextPropagationMatchesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanContextPropagationMatches)(nil)).Elem()
}

func (i *spanContextPropagationMatchesPtrType) ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput {
	return i.ToSpanContextPropagationMatchesPtrOutputWithContext(context.Background())
}

func (i *spanContextPropagationMatchesPtrType) ToSpanContextPropagationMatchesPtrOutputWithContext(ctx context.Context) SpanContextPropagationMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesPtrOutput)
}

type SpanContextPropagationMatchesOutput struct{ *pulumi.OutputState }

func (SpanContextPropagationMatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanContextPropagationMatches)(nil)).Elem()
}

func (o SpanContextPropagationMatchesOutput) ToSpanContextPropagationMatchesOutput() SpanContextPropagationMatchesOutput {
	return o
}

func (o SpanContextPropagationMatchesOutput) ToSpanContextPropagationMatchesOutputWithContext(ctx context.Context) SpanContextPropagationMatchesOutput {
	return o
}

func (o SpanContextPropagationMatchesOutput) ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput {
	return o.ToSpanContextPropagationMatchesPtrOutputWithContext(context.Background())
}

func (o SpanContextPropagationMatchesOutput) ToSpanContextPropagationMatchesPtrOutputWithContext(ctx context.Context) SpanContextPropagationMatchesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpanContextPropagationMatches) *SpanContextPropagationMatches {
		return &v
	}).(SpanContextPropagationMatchesPtrOutput)
}

// Matching strategies for the Span
func (o SpanContextPropagationMatchesOutput) Matches() SpanContextPropagationMatchesMatchArrayOutput {
	return o.ApplyT(func(v SpanContextPropagationMatches) []SpanContextPropagationMatchesMatch { return v.Matches }).(SpanContextPropagationMatchesMatchArrayOutput)
}

type SpanContextPropagationMatchesPtrOutput struct{ *pulumi.OutputState }

func (SpanContextPropagationMatchesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanContextPropagationMatches)(nil)).Elem()
}

func (o SpanContextPropagationMatchesPtrOutput) ToSpanContextPropagationMatchesPtrOutput() SpanContextPropagationMatchesPtrOutput {
	return o
}

func (o SpanContextPropagationMatchesPtrOutput) ToSpanContextPropagationMatchesPtrOutputWithContext(ctx context.Context) SpanContextPropagationMatchesPtrOutput {
	return o
}

func (o SpanContextPropagationMatchesPtrOutput) Elem() SpanContextPropagationMatchesOutput {
	return o.ApplyT(func(v *SpanContextPropagationMatches) SpanContextPropagationMatches {
		if v != nil {
			return *v
		}
		var ret SpanContextPropagationMatches
		return ret
	}).(SpanContextPropagationMatchesOutput)
}

// Matching strategies for the Span
func (o SpanContextPropagationMatchesPtrOutput) Matches() SpanContextPropagationMatchesMatchArrayOutput {
	return o.ApplyT(func(v *SpanContextPropagationMatches) []SpanContextPropagationMatchesMatch {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(SpanContextPropagationMatchesMatchArrayOutput)
}

type SpanContextPropagationMatchesMatch struct {
	// Whether to match strings case sensitively or not
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
	Comparison string `pulumi:"comparison"`
	// The name of the attribute if `source` is `ATTRIBUTE`
	Key *string `pulumi:"key"`
	// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
	Source string `pulumi:"source"`
	// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
	Value *string `pulumi:"value"`
}

// SpanContextPropagationMatchesMatchInput is an input type that accepts SpanContextPropagationMatchesMatchArgs and SpanContextPropagationMatchesMatchOutput values.
// You can construct a concrete instance of `SpanContextPropagationMatchesMatchInput` via:
//
//	SpanContextPropagationMatchesMatchArgs{...}
type SpanContextPropagationMatchesMatchInput interface {
	pulumi.Input

	ToSpanContextPropagationMatchesMatchOutput() SpanContextPropagationMatchesMatchOutput
	ToSpanContextPropagationMatchesMatchOutputWithContext(context.Context) SpanContextPropagationMatchesMatchOutput
}

type SpanContextPropagationMatchesMatchArgs struct {
	// Whether to match strings case sensitively or not
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// The name of the attribute if `source` is `ATTRIBUTE`
	Key pulumi.StringPtrInput `pulumi:"key"`
	// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
	Source pulumi.StringInput `pulumi:"source"`
	// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SpanContextPropagationMatchesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanContextPropagationMatchesMatch)(nil)).Elem()
}

func (i SpanContextPropagationMatchesMatchArgs) ToSpanContextPropagationMatchesMatchOutput() SpanContextPropagationMatchesMatchOutput {
	return i.ToSpanContextPropagationMatchesMatchOutputWithContext(context.Background())
}

func (i SpanContextPropagationMatchesMatchArgs) ToSpanContextPropagationMatchesMatchOutputWithContext(ctx context.Context) SpanContextPropagationMatchesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesMatchOutput)
}

// SpanContextPropagationMatchesMatchArrayInput is an input type that accepts SpanContextPropagationMatchesMatchArray and SpanContextPropagationMatchesMatchArrayOutput values.
// You can construct a concrete instance of `SpanContextPropagationMatchesMatchArrayInput` via:
//
//	SpanContextPropagationMatchesMatchArray{ SpanContextPropagationMatchesMatchArgs{...} }
type SpanContextPropagationMatchesMatchArrayInput interface {
	pulumi.Input

	ToSpanContextPropagationMatchesMatchArrayOutput() SpanContextPropagationMatchesMatchArrayOutput
	ToSpanContextPropagationMatchesMatchArrayOutputWithContext(context.Context) SpanContextPropagationMatchesMatchArrayOutput
}

type SpanContextPropagationMatchesMatchArray []SpanContextPropagationMatchesMatchInput

func (SpanContextPropagationMatchesMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanContextPropagationMatchesMatch)(nil)).Elem()
}

func (i SpanContextPropagationMatchesMatchArray) ToSpanContextPropagationMatchesMatchArrayOutput() SpanContextPropagationMatchesMatchArrayOutput {
	return i.ToSpanContextPropagationMatchesMatchArrayOutputWithContext(context.Background())
}

func (i SpanContextPropagationMatchesMatchArray) ToSpanContextPropagationMatchesMatchArrayOutputWithContext(ctx context.Context) SpanContextPropagationMatchesMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanContextPropagationMatchesMatchArrayOutput)
}

type SpanContextPropagationMatchesMatchOutput struct{ *pulumi.OutputState }

func (SpanContextPropagationMatchesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanContextPropagationMatchesMatch)(nil)).Elem()
}

func (o SpanContextPropagationMatchesMatchOutput) ToSpanContextPropagationMatchesMatchOutput() SpanContextPropagationMatchesMatchOutput {
	return o
}

func (o SpanContextPropagationMatchesMatchOutput) ToSpanContextPropagationMatchesMatchOutputWithContext(ctx context.Context) SpanContextPropagationMatchesMatchOutput {
	return o
}

// Whether to match strings case sensitively or not
func (o SpanContextPropagationMatchesMatchOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
func (o SpanContextPropagationMatchesMatchOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) string { return v.Comparison }).(pulumi.StringOutput)
}

// The name of the attribute if `source` is `ATTRIBUTE`
func (o SpanContextPropagationMatchesMatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
func (o SpanContextPropagationMatchesMatchOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) string { return v.Source }).(pulumi.StringOutput)
}

// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
func (o SpanContextPropagationMatchesMatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanContextPropagationMatchesMatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpanContextPropagationMatchesMatchArrayOutput struct{ *pulumi.OutputState }

func (SpanContextPropagationMatchesMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanContextPropagationMatchesMatch)(nil)).Elem()
}

func (o SpanContextPropagationMatchesMatchArrayOutput) ToSpanContextPropagationMatchesMatchArrayOutput() SpanContextPropagationMatchesMatchArrayOutput {
	return o
}

func (o SpanContextPropagationMatchesMatchArrayOutput) ToSpanContextPropagationMatchesMatchArrayOutputWithContext(ctx context.Context) SpanContextPropagationMatchesMatchArrayOutput {
	return o
}

func (o SpanContextPropagationMatchesMatchArrayOutput) Index(i pulumi.IntInput) SpanContextPropagationMatchesMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpanContextPropagationMatchesMatch {
		return vs[0].([]SpanContextPropagationMatchesMatch)[vs[1].(int)]
	}).(SpanContextPropagationMatchesMatchOutput)
}

type SpanEntryPointMatches struct {
	// Matching strategies for the Span
	Matches []SpanEntryPointMatchesMatch `pulumi:"matches"`
}

// SpanEntryPointMatchesInput is an input type that accepts SpanEntryPointMatchesArgs and SpanEntryPointMatchesOutput values.
// You can construct a concrete instance of `SpanEntryPointMatchesInput` via:
//
//	SpanEntryPointMatchesArgs{...}
type SpanEntryPointMatchesInput interface {
	pulumi.Input

	ToSpanEntryPointMatchesOutput() SpanEntryPointMatchesOutput
	ToSpanEntryPointMatchesOutputWithContext(context.Context) SpanEntryPointMatchesOutput
}

type SpanEntryPointMatchesArgs struct {
	// Matching strategies for the Span
	Matches SpanEntryPointMatchesMatchArrayInput `pulumi:"matches"`
}

func (SpanEntryPointMatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanEntryPointMatches)(nil)).Elem()
}

func (i SpanEntryPointMatchesArgs) ToSpanEntryPointMatchesOutput() SpanEntryPointMatchesOutput {
	return i.ToSpanEntryPointMatchesOutputWithContext(context.Background())
}

func (i SpanEntryPointMatchesArgs) ToSpanEntryPointMatchesOutputWithContext(ctx context.Context) SpanEntryPointMatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesOutput)
}

func (i SpanEntryPointMatchesArgs) ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput {
	return i.ToSpanEntryPointMatchesPtrOutputWithContext(context.Background())
}

func (i SpanEntryPointMatchesArgs) ToSpanEntryPointMatchesPtrOutputWithContext(ctx context.Context) SpanEntryPointMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesOutput).ToSpanEntryPointMatchesPtrOutputWithContext(ctx)
}

// SpanEntryPointMatchesPtrInput is an input type that accepts SpanEntryPointMatchesArgs, SpanEntryPointMatchesPtr and SpanEntryPointMatchesPtrOutput values.
// You can construct a concrete instance of `SpanEntryPointMatchesPtrInput` via:
//
//	        SpanEntryPointMatchesArgs{...}
//
//	or:
//
//	        nil
type SpanEntryPointMatchesPtrInput interface {
	pulumi.Input

	ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput
	ToSpanEntryPointMatchesPtrOutputWithContext(context.Context) SpanEntryPointMatchesPtrOutput
}

type spanEntryPointMatchesPtrType SpanEntryPointMatchesArgs

func SpanEntryPointMatchesPtr(v *SpanEntryPointMatchesArgs) SpanEntryPointMatchesPtrInput {
	return (*spanEntryPointMatchesPtrType)(v)
}

func (*spanEntryPointMatchesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanEntryPointMatches)(nil)).Elem()
}

func (i *spanEntryPointMatchesPtrType) ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput {
	return i.ToSpanEntryPointMatchesPtrOutputWithContext(context.Background())
}

func (i *spanEntryPointMatchesPtrType) ToSpanEntryPointMatchesPtrOutputWithContext(ctx context.Context) SpanEntryPointMatchesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesPtrOutput)
}

type SpanEntryPointMatchesOutput struct{ *pulumi.OutputState }

func (SpanEntryPointMatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanEntryPointMatches)(nil)).Elem()
}

func (o SpanEntryPointMatchesOutput) ToSpanEntryPointMatchesOutput() SpanEntryPointMatchesOutput {
	return o
}

func (o SpanEntryPointMatchesOutput) ToSpanEntryPointMatchesOutputWithContext(ctx context.Context) SpanEntryPointMatchesOutput {
	return o
}

func (o SpanEntryPointMatchesOutput) ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput {
	return o.ToSpanEntryPointMatchesPtrOutputWithContext(context.Background())
}

func (o SpanEntryPointMatchesOutput) ToSpanEntryPointMatchesPtrOutputWithContext(ctx context.Context) SpanEntryPointMatchesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpanEntryPointMatches) *SpanEntryPointMatches {
		return &v
	}).(SpanEntryPointMatchesPtrOutput)
}

// Matching strategies for the Span
func (o SpanEntryPointMatchesOutput) Matches() SpanEntryPointMatchesMatchArrayOutput {
	return o.ApplyT(func(v SpanEntryPointMatches) []SpanEntryPointMatchesMatch { return v.Matches }).(SpanEntryPointMatchesMatchArrayOutput)
}

type SpanEntryPointMatchesPtrOutput struct{ *pulumi.OutputState }

func (SpanEntryPointMatchesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpanEntryPointMatches)(nil)).Elem()
}

func (o SpanEntryPointMatchesPtrOutput) ToSpanEntryPointMatchesPtrOutput() SpanEntryPointMatchesPtrOutput {
	return o
}

func (o SpanEntryPointMatchesPtrOutput) ToSpanEntryPointMatchesPtrOutputWithContext(ctx context.Context) SpanEntryPointMatchesPtrOutput {
	return o
}

func (o SpanEntryPointMatchesPtrOutput) Elem() SpanEntryPointMatchesOutput {
	return o.ApplyT(func(v *SpanEntryPointMatches) SpanEntryPointMatches {
		if v != nil {
			return *v
		}
		var ret SpanEntryPointMatches
		return ret
	}).(SpanEntryPointMatchesOutput)
}

// Matching strategies for the Span
func (o SpanEntryPointMatchesPtrOutput) Matches() SpanEntryPointMatchesMatchArrayOutput {
	return o.ApplyT(func(v *SpanEntryPointMatches) []SpanEntryPointMatchesMatch {
		if v == nil {
			return nil
		}
		return v.Matches
	}).(SpanEntryPointMatchesMatchArrayOutput)
}

type SpanEntryPointMatchesMatch struct {
	// Whether to match strings case sensitively or not
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
	Comparison string `pulumi:"comparison"`
	// The name of the attribute if `source` is `ATTRIBUTE`
	Key *string `pulumi:"key"`
	// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
	Source string `pulumi:"source"`
	// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
	Value *string `pulumi:"value"`
}

// SpanEntryPointMatchesMatchInput is an input type that accepts SpanEntryPointMatchesMatchArgs and SpanEntryPointMatchesMatchOutput values.
// You can construct a concrete instance of `SpanEntryPointMatchesMatchInput` via:
//
//	SpanEntryPointMatchesMatchArgs{...}
type SpanEntryPointMatchesMatchInput interface {
	pulumi.Input

	ToSpanEntryPointMatchesMatchOutput() SpanEntryPointMatchesMatchOutput
	ToSpanEntryPointMatchesMatchOutputWithContext(context.Context) SpanEntryPointMatchesMatchOutput
}

type SpanEntryPointMatchesMatchArgs struct {
	// Whether to match strings case sensitively or not
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// The name of the attribute if `source` is `ATTRIBUTE`
	Key pulumi.StringPtrInput `pulumi:"key"`
	// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
	Source pulumi.StringInput `pulumi:"source"`
	// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SpanEntryPointMatchesMatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanEntryPointMatchesMatch)(nil)).Elem()
}

func (i SpanEntryPointMatchesMatchArgs) ToSpanEntryPointMatchesMatchOutput() SpanEntryPointMatchesMatchOutput {
	return i.ToSpanEntryPointMatchesMatchOutputWithContext(context.Background())
}

func (i SpanEntryPointMatchesMatchArgs) ToSpanEntryPointMatchesMatchOutputWithContext(ctx context.Context) SpanEntryPointMatchesMatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesMatchOutput)
}

// SpanEntryPointMatchesMatchArrayInput is an input type that accepts SpanEntryPointMatchesMatchArray and SpanEntryPointMatchesMatchArrayOutput values.
// You can construct a concrete instance of `SpanEntryPointMatchesMatchArrayInput` via:
//
//	SpanEntryPointMatchesMatchArray{ SpanEntryPointMatchesMatchArgs{...} }
type SpanEntryPointMatchesMatchArrayInput interface {
	pulumi.Input

	ToSpanEntryPointMatchesMatchArrayOutput() SpanEntryPointMatchesMatchArrayOutput
	ToSpanEntryPointMatchesMatchArrayOutputWithContext(context.Context) SpanEntryPointMatchesMatchArrayOutput
}

type SpanEntryPointMatchesMatchArray []SpanEntryPointMatchesMatchInput

func (SpanEntryPointMatchesMatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanEntryPointMatchesMatch)(nil)).Elem()
}

func (i SpanEntryPointMatchesMatchArray) ToSpanEntryPointMatchesMatchArrayOutput() SpanEntryPointMatchesMatchArrayOutput {
	return i.ToSpanEntryPointMatchesMatchArrayOutputWithContext(context.Background())
}

func (i SpanEntryPointMatchesMatchArray) ToSpanEntryPointMatchesMatchArrayOutputWithContext(ctx context.Context) SpanEntryPointMatchesMatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpanEntryPointMatchesMatchArrayOutput)
}

type SpanEntryPointMatchesMatchOutput struct{ *pulumi.OutputState }

func (SpanEntryPointMatchesMatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpanEntryPointMatchesMatch)(nil)).Elem()
}

func (o SpanEntryPointMatchesMatchOutput) ToSpanEntryPointMatchesMatchOutput() SpanEntryPointMatchesMatchOutput {
	return o
}

func (o SpanEntryPointMatchesMatchOutput) ToSpanEntryPointMatchesMatchOutputWithContext(ctx context.Context) SpanEntryPointMatchesMatchOutput {
	return o
}

// Whether to match strings case sensitively or not
func (o SpanEntryPointMatchesMatchOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// Possible values are `EQUALS`, `CONTAINS`, `STARTS_WITH`, `ENDS_WITH`, `DOES_NOT_EQUAL`, `DOES_NOT_CONTAIN`, `DOES_NOT_START_WITH` and `DOES_NOT_END_WITH`.
func (o SpanEntryPointMatchesMatchOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) string { return v.Comparison }).(pulumi.StringOutput)
}

// The name of the attribute if `source` is `ATTRIBUTE`
func (o SpanEntryPointMatchesMatchOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// What to match against. Possible values are `SPAN_NAME`, `SPAN_KIND`, `ATTRIBUTE`, `INSTRUMENTATION_LIBRARY_NAME` and `INSTRUMENTATION_LIBRARY_VERSION`
func (o SpanEntryPointMatchesMatchOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) string { return v.Source }).(pulumi.StringOutput)
}

// The value to compare against. When `source` is `SPAN_KIND` the only allowed values are `INTERNAL`, `SERVER`, `CLIENT`, `PRODUCER` and `CONSUMER`
func (o SpanEntryPointMatchesMatchOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpanEntryPointMatchesMatch) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SpanEntryPointMatchesMatchArrayOutput struct{ *pulumi.OutputState }

func (SpanEntryPointMatchesMatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpanEntryPointMatchesMatch)(nil)).Elem()
}

func (o SpanEntryPointMatchesMatchArrayOutput) ToSpanEntryPointMatchesMatchArrayOutput() SpanEntryPointMatchesMatchArrayOutput {
	return o
}

func (o SpanEntryPointMatchesMatchArrayOutput) ToSpanEntryPointMatchesMatchArrayOutputWithContext(ctx context.Context) SpanEntryPointMatchesMatchArrayOutput {
	return o
}

func (o SpanEntryPointMatchesMatchArrayOutput) Index(i pulumi.IntInput) SpanEntryPointMatchesMatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpanEntryPointMatchesMatch {
		return vs[0].([]SpanEntryPointMatchesMatch)[vs[1].(int)]
	}).(SpanEntryPointMatchesMatchOutput)
}

type UpdateWindowsDailyRecurrence struct {
	// Every **X** days:
	// * `1` = every day,
	// * `2` = every two days,
	// * `3` = every three days,
	// * etc.
	Every int `pulumi:"every"`
	// Recurrence range
	RecurrenceRange UpdateWindowsDailyRecurrenceRecurrenceRange `pulumi:"recurrenceRange"`
	// Update time
	UpdateTime UpdateWindowsDailyRecurrenceUpdateTime `pulumi:"updateTime"`
}

// UpdateWindowsDailyRecurrenceInput is an input type that accepts UpdateWindowsDailyRecurrenceArgs and UpdateWindowsDailyRecurrenceOutput values.
// You can construct a concrete instance of `UpdateWindowsDailyRecurrenceInput` via:
//
//	UpdateWindowsDailyRecurrenceArgs{...}
type UpdateWindowsDailyRecurrenceInput interface {
	pulumi.Input

	ToUpdateWindowsDailyRecurrenceOutput() UpdateWindowsDailyRecurrenceOutput
	ToUpdateWindowsDailyRecurrenceOutputWithContext(context.Context) UpdateWindowsDailyRecurrenceOutput
}

type UpdateWindowsDailyRecurrenceArgs struct {
	// Every **X** days:
	// * `1` = every day,
	// * `2` = every two days,
	// * `3` = every three days,
	// * etc.
	Every pulumi.IntInput `pulumi:"every"`
	// Recurrence range
	RecurrenceRange UpdateWindowsDailyRecurrenceRecurrenceRangeInput `pulumi:"recurrenceRange"`
	// Update time
	UpdateTime UpdateWindowsDailyRecurrenceUpdateTimeInput `pulumi:"updateTime"`
}

func (UpdateWindowsDailyRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsDailyRecurrence)(nil)).Elem()
}

func (i UpdateWindowsDailyRecurrenceArgs) ToUpdateWindowsDailyRecurrenceOutput() UpdateWindowsDailyRecurrenceOutput {
	return i.ToUpdateWindowsDailyRecurrenceOutputWithContext(context.Background())
}

func (i UpdateWindowsDailyRecurrenceArgs) ToUpdateWindowsDailyRecurrenceOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrenceOutput)
}

func (i UpdateWindowsDailyRecurrenceArgs) ToUpdateWindowsDailyRecurrencePtrOutput() UpdateWindowsDailyRecurrencePtrOutput {
	return i.ToUpdateWindowsDailyRecurrencePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsDailyRecurrenceArgs) ToUpdateWindowsDailyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrenceOutput).ToUpdateWindowsDailyRecurrencePtrOutputWithContext(ctx)
}

// UpdateWindowsDailyRecurrencePtrInput is an input type that accepts UpdateWindowsDailyRecurrenceArgs, UpdateWindowsDailyRecurrencePtr and UpdateWindowsDailyRecurrencePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsDailyRecurrencePtrInput` via:
//
//	        UpdateWindowsDailyRecurrenceArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsDailyRecurrencePtrInput interface {
	pulumi.Input

	ToUpdateWindowsDailyRecurrencePtrOutput() UpdateWindowsDailyRecurrencePtrOutput
	ToUpdateWindowsDailyRecurrencePtrOutputWithContext(context.Context) UpdateWindowsDailyRecurrencePtrOutput
}

type updateWindowsDailyRecurrencePtrType UpdateWindowsDailyRecurrenceArgs

func UpdateWindowsDailyRecurrencePtr(v *UpdateWindowsDailyRecurrenceArgs) UpdateWindowsDailyRecurrencePtrInput {
	return (*updateWindowsDailyRecurrencePtrType)(v)
}

func (*updateWindowsDailyRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsDailyRecurrence)(nil)).Elem()
}

func (i *updateWindowsDailyRecurrencePtrType) ToUpdateWindowsDailyRecurrencePtrOutput() UpdateWindowsDailyRecurrencePtrOutput {
	return i.ToUpdateWindowsDailyRecurrencePtrOutputWithContext(context.Background())
}

func (i *updateWindowsDailyRecurrencePtrType) ToUpdateWindowsDailyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrencePtrOutput)
}

type UpdateWindowsDailyRecurrenceOutput struct{ *pulumi.OutputState }

func (UpdateWindowsDailyRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsDailyRecurrence)(nil)).Elem()
}

func (o UpdateWindowsDailyRecurrenceOutput) ToUpdateWindowsDailyRecurrenceOutput() UpdateWindowsDailyRecurrenceOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceOutput) ToUpdateWindowsDailyRecurrenceOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceOutput) ToUpdateWindowsDailyRecurrencePtrOutput() UpdateWindowsDailyRecurrencePtrOutput {
	return o.ToUpdateWindowsDailyRecurrencePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsDailyRecurrenceOutput) ToUpdateWindowsDailyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsDailyRecurrence) *UpdateWindowsDailyRecurrence {
		return &v
	}).(UpdateWindowsDailyRecurrencePtrOutput)
}

// Every **X** days:
// * `1` = every day,
// * `2` = every two days,
// * `3` = every three days,
// * etc.
func (o UpdateWindowsDailyRecurrenceOutput) Every() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateWindowsDailyRecurrence) int { return v.Every }).(pulumi.IntOutput)
}

// Recurrence range
func (o UpdateWindowsDailyRecurrenceOutput) RecurrenceRange() UpdateWindowsDailyRecurrenceRecurrenceRangeOutput {
	return o.ApplyT(func(v UpdateWindowsDailyRecurrence) UpdateWindowsDailyRecurrenceRecurrenceRange {
		return v.RecurrenceRange
	}).(UpdateWindowsDailyRecurrenceRecurrenceRangeOutput)
}

// Update time
func (o UpdateWindowsDailyRecurrenceOutput) UpdateTime() UpdateWindowsDailyRecurrenceUpdateTimeOutput {
	return o.ApplyT(func(v UpdateWindowsDailyRecurrence) UpdateWindowsDailyRecurrenceUpdateTime { return v.UpdateTime }).(UpdateWindowsDailyRecurrenceUpdateTimeOutput)
}

type UpdateWindowsDailyRecurrencePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsDailyRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsDailyRecurrence)(nil)).Elem()
}

func (o UpdateWindowsDailyRecurrencePtrOutput) ToUpdateWindowsDailyRecurrencePtrOutput() UpdateWindowsDailyRecurrencePtrOutput {
	return o
}

func (o UpdateWindowsDailyRecurrencePtrOutput) ToUpdateWindowsDailyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrencePtrOutput {
	return o
}

func (o UpdateWindowsDailyRecurrencePtrOutput) Elem() UpdateWindowsDailyRecurrenceOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrence) UpdateWindowsDailyRecurrence {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsDailyRecurrence
		return ret
	}).(UpdateWindowsDailyRecurrenceOutput)
}

// Every **X** days:
// * `1` = every day,
// * `2` = every two days,
// * `3` = every three days,
// * etc.
func (o UpdateWindowsDailyRecurrencePtrOutput) Every() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.Every
	}).(pulumi.IntPtrOutput)
}

// Recurrence range
func (o UpdateWindowsDailyRecurrencePtrOutput) RecurrenceRange() UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrence) *UpdateWindowsDailyRecurrenceRecurrenceRange {
		if v == nil {
			return nil
		}
		return &v.RecurrenceRange
	}).(UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput)
}

// Update time
func (o UpdateWindowsDailyRecurrencePtrOutput) UpdateTime() UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrence) *UpdateWindowsDailyRecurrenceUpdateTime {
		if v == nil {
			return nil
		}
		return &v.UpdateTime
	}).(UpdateWindowsDailyRecurrenceUpdateTimePtrOutput)
}

type UpdateWindowsDailyRecurrenceRecurrenceRange struct {
	// no documentation available
	End string `pulumi:"end"`
	// no documentation available
	Start string `pulumi:"start"`
}

// UpdateWindowsDailyRecurrenceRecurrenceRangeInput is an input type that accepts UpdateWindowsDailyRecurrenceRecurrenceRangeArgs and UpdateWindowsDailyRecurrenceRecurrenceRangeOutput values.
// You can construct a concrete instance of `UpdateWindowsDailyRecurrenceRecurrenceRangeInput` via:
//
//	UpdateWindowsDailyRecurrenceRecurrenceRangeArgs{...}
type UpdateWindowsDailyRecurrenceRecurrenceRangeInput interface {
	pulumi.Input

	ToUpdateWindowsDailyRecurrenceRecurrenceRangeOutput() UpdateWindowsDailyRecurrenceRecurrenceRangeOutput
	ToUpdateWindowsDailyRecurrenceRecurrenceRangeOutputWithContext(context.Context) UpdateWindowsDailyRecurrenceRecurrenceRangeOutput
}

type UpdateWindowsDailyRecurrenceRecurrenceRangeArgs struct {
	// no documentation available
	End pulumi.StringInput `pulumi:"end"`
	// no documentation available
	Start pulumi.StringInput `pulumi:"start"`
}

func (UpdateWindowsDailyRecurrenceRecurrenceRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsDailyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (i UpdateWindowsDailyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsDailyRecurrenceRecurrenceRangeOutput() UpdateWindowsDailyRecurrenceRecurrenceRangeOutput {
	return i.ToUpdateWindowsDailyRecurrenceRecurrenceRangeOutputWithContext(context.Background())
}

func (i UpdateWindowsDailyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsDailyRecurrenceRecurrenceRangeOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceRecurrenceRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrenceRecurrenceRangeOutput)
}

func (i UpdateWindowsDailyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return i.ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsDailyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrenceRecurrenceRangeOutput).ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(ctx)
}

// UpdateWindowsDailyRecurrenceRecurrenceRangePtrInput is an input type that accepts UpdateWindowsDailyRecurrenceRecurrenceRangeArgs, UpdateWindowsDailyRecurrenceRecurrenceRangePtr and UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsDailyRecurrenceRecurrenceRangePtrInput` via:
//
//	        UpdateWindowsDailyRecurrenceRecurrenceRangeArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsDailyRecurrenceRecurrenceRangePtrInput interface {
	pulumi.Input

	ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput
	ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(context.Context) UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput
}

type updateWindowsDailyRecurrenceRecurrenceRangePtrType UpdateWindowsDailyRecurrenceRecurrenceRangeArgs

func UpdateWindowsDailyRecurrenceRecurrenceRangePtr(v *UpdateWindowsDailyRecurrenceRecurrenceRangeArgs) UpdateWindowsDailyRecurrenceRecurrenceRangePtrInput {
	return (*updateWindowsDailyRecurrenceRecurrenceRangePtrType)(v)
}

func (*updateWindowsDailyRecurrenceRecurrenceRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsDailyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (i *updateWindowsDailyRecurrenceRecurrenceRangePtrType) ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return i.ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (i *updateWindowsDailyRecurrenceRecurrenceRangePtrType) ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput)
}

type UpdateWindowsDailyRecurrenceRecurrenceRangeOutput struct{ *pulumi.OutputState }

func (UpdateWindowsDailyRecurrenceRecurrenceRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsDailyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (o UpdateWindowsDailyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsDailyRecurrenceRecurrenceRangeOutput() UpdateWindowsDailyRecurrenceRecurrenceRangeOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsDailyRecurrenceRecurrenceRangeOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceRecurrenceRangeOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return o.ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsDailyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsDailyRecurrenceRecurrenceRange) *UpdateWindowsDailyRecurrenceRecurrenceRange {
		return &v
	}).(UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput)
}

// no documentation available
func (o UpdateWindowsDailyRecurrenceRecurrenceRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsDailyRecurrenceRecurrenceRange) string { return v.End }).(pulumi.StringOutput)
}

// no documentation available
func (o UpdateWindowsDailyRecurrenceRecurrenceRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsDailyRecurrenceRecurrenceRange) string { return v.Start }).(pulumi.StringOutput)
}

type UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsDailyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (o UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput) ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput) ToUpdateWindowsDailyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput) Elem() UpdateWindowsDailyRecurrenceRecurrenceRangeOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrenceRecurrenceRange) UpdateWindowsDailyRecurrenceRecurrenceRange {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsDailyRecurrenceRecurrenceRange
		return ret
	}).(UpdateWindowsDailyRecurrenceRecurrenceRangeOutput)
}

// no documentation available
func (o UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrenceRecurrenceRange) *string {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrenceRecurrenceRange) *string {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.StringPtrOutput)
}

type UpdateWindowsDailyRecurrenceUpdateTime struct {
	// Duration (minutes)
	Duration int `pulumi:"duration"`
	// Start time (24-hour clock)
	StartTime string `pulumi:"startTime"`
	// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
	TimeZone string `pulumi:"timeZone"`
}

// UpdateWindowsDailyRecurrenceUpdateTimeInput is an input type that accepts UpdateWindowsDailyRecurrenceUpdateTimeArgs and UpdateWindowsDailyRecurrenceUpdateTimeOutput values.
// You can construct a concrete instance of `UpdateWindowsDailyRecurrenceUpdateTimeInput` via:
//
//	UpdateWindowsDailyRecurrenceUpdateTimeArgs{...}
type UpdateWindowsDailyRecurrenceUpdateTimeInput interface {
	pulumi.Input

	ToUpdateWindowsDailyRecurrenceUpdateTimeOutput() UpdateWindowsDailyRecurrenceUpdateTimeOutput
	ToUpdateWindowsDailyRecurrenceUpdateTimeOutputWithContext(context.Context) UpdateWindowsDailyRecurrenceUpdateTimeOutput
}

type UpdateWindowsDailyRecurrenceUpdateTimeArgs struct {
	// Duration (minutes)
	Duration pulumi.IntInput `pulumi:"duration"`
	// Start time (24-hour clock)
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (UpdateWindowsDailyRecurrenceUpdateTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsDailyRecurrenceUpdateTime)(nil)).Elem()
}

func (i UpdateWindowsDailyRecurrenceUpdateTimeArgs) ToUpdateWindowsDailyRecurrenceUpdateTimeOutput() UpdateWindowsDailyRecurrenceUpdateTimeOutput {
	return i.ToUpdateWindowsDailyRecurrenceUpdateTimeOutputWithContext(context.Background())
}

func (i UpdateWindowsDailyRecurrenceUpdateTimeArgs) ToUpdateWindowsDailyRecurrenceUpdateTimeOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceUpdateTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrenceUpdateTimeOutput)
}

func (i UpdateWindowsDailyRecurrenceUpdateTimeArgs) ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutput() UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return i.ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsDailyRecurrenceUpdateTimeArgs) ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrenceUpdateTimeOutput).ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(ctx)
}

// UpdateWindowsDailyRecurrenceUpdateTimePtrInput is an input type that accepts UpdateWindowsDailyRecurrenceUpdateTimeArgs, UpdateWindowsDailyRecurrenceUpdateTimePtr and UpdateWindowsDailyRecurrenceUpdateTimePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsDailyRecurrenceUpdateTimePtrInput` via:
//
//	        UpdateWindowsDailyRecurrenceUpdateTimeArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsDailyRecurrenceUpdateTimePtrInput interface {
	pulumi.Input

	ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutput() UpdateWindowsDailyRecurrenceUpdateTimePtrOutput
	ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(context.Context) UpdateWindowsDailyRecurrenceUpdateTimePtrOutput
}

type updateWindowsDailyRecurrenceUpdateTimePtrType UpdateWindowsDailyRecurrenceUpdateTimeArgs

func UpdateWindowsDailyRecurrenceUpdateTimePtr(v *UpdateWindowsDailyRecurrenceUpdateTimeArgs) UpdateWindowsDailyRecurrenceUpdateTimePtrInput {
	return (*updateWindowsDailyRecurrenceUpdateTimePtrType)(v)
}

func (*updateWindowsDailyRecurrenceUpdateTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsDailyRecurrenceUpdateTime)(nil)).Elem()
}

func (i *updateWindowsDailyRecurrenceUpdateTimePtrType) ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutput() UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return i.ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (i *updateWindowsDailyRecurrenceUpdateTimePtrType) ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsDailyRecurrenceUpdateTimePtrOutput)
}

type UpdateWindowsDailyRecurrenceUpdateTimeOutput struct{ *pulumi.OutputState }

func (UpdateWindowsDailyRecurrenceUpdateTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsDailyRecurrenceUpdateTime)(nil)).Elem()
}

func (o UpdateWindowsDailyRecurrenceUpdateTimeOutput) ToUpdateWindowsDailyRecurrenceUpdateTimeOutput() UpdateWindowsDailyRecurrenceUpdateTimeOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceUpdateTimeOutput) ToUpdateWindowsDailyRecurrenceUpdateTimeOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceUpdateTimeOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceUpdateTimeOutput) ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutput() UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return o.ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsDailyRecurrenceUpdateTimeOutput) ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsDailyRecurrenceUpdateTime) *UpdateWindowsDailyRecurrenceUpdateTime {
		return &v
	}).(UpdateWindowsDailyRecurrenceUpdateTimePtrOutput)
}

// Duration (minutes)
func (o UpdateWindowsDailyRecurrenceUpdateTimeOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateWindowsDailyRecurrenceUpdateTime) int { return v.Duration }).(pulumi.IntOutput)
}

// Start time (24-hour clock)
func (o UpdateWindowsDailyRecurrenceUpdateTimeOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsDailyRecurrenceUpdateTime) string { return v.StartTime }).(pulumi.StringOutput)
}

// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
func (o UpdateWindowsDailyRecurrenceUpdateTimeOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsDailyRecurrenceUpdateTime) string { return v.TimeZone }).(pulumi.StringOutput)
}

type UpdateWindowsDailyRecurrenceUpdateTimePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsDailyRecurrenceUpdateTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsDailyRecurrenceUpdateTime)(nil)).Elem()
}

func (o UpdateWindowsDailyRecurrenceUpdateTimePtrOutput) ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutput() UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceUpdateTimePtrOutput) ToUpdateWindowsDailyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsDailyRecurrenceUpdateTimePtrOutput {
	return o
}

func (o UpdateWindowsDailyRecurrenceUpdateTimePtrOutput) Elem() UpdateWindowsDailyRecurrenceUpdateTimeOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrenceUpdateTime) UpdateWindowsDailyRecurrenceUpdateTime {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsDailyRecurrenceUpdateTime
		return ret
	}).(UpdateWindowsDailyRecurrenceUpdateTimeOutput)
}

// Duration (minutes)
func (o UpdateWindowsDailyRecurrenceUpdateTimePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrenceUpdateTime) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

// Start time (24-hour clock)
func (o UpdateWindowsDailyRecurrenceUpdateTimePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrenceUpdateTime) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
func (o UpdateWindowsDailyRecurrenceUpdateTimePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsDailyRecurrenceUpdateTime) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type UpdateWindowsMonthlyRecurrence struct {
	// Every **X** months:
	// * `1` = every month,
	// * `2` = every two months,
	// * `3` = every three months,
	// * etc.
	Every int `pulumi:"every"`
	// Recurrence range
	RecurrenceRange UpdateWindowsMonthlyRecurrenceRecurrenceRange `pulumi:"recurrenceRange"`
	// Day of the month
	SelectedMonthDay int `pulumi:"selectedMonthDay"`
	// Update time
	UpdateTime UpdateWindowsMonthlyRecurrenceUpdateTime `pulumi:"updateTime"`
}

// UpdateWindowsMonthlyRecurrenceInput is an input type that accepts UpdateWindowsMonthlyRecurrenceArgs and UpdateWindowsMonthlyRecurrenceOutput values.
// You can construct a concrete instance of `UpdateWindowsMonthlyRecurrenceInput` via:
//
//	UpdateWindowsMonthlyRecurrenceArgs{...}
type UpdateWindowsMonthlyRecurrenceInput interface {
	pulumi.Input

	ToUpdateWindowsMonthlyRecurrenceOutput() UpdateWindowsMonthlyRecurrenceOutput
	ToUpdateWindowsMonthlyRecurrenceOutputWithContext(context.Context) UpdateWindowsMonthlyRecurrenceOutput
}

type UpdateWindowsMonthlyRecurrenceArgs struct {
	// Every **X** months:
	// * `1` = every month,
	// * `2` = every two months,
	// * `3` = every three months,
	// * etc.
	Every pulumi.IntInput `pulumi:"every"`
	// Recurrence range
	RecurrenceRange UpdateWindowsMonthlyRecurrenceRecurrenceRangeInput `pulumi:"recurrenceRange"`
	// Day of the month
	SelectedMonthDay pulumi.IntInput `pulumi:"selectedMonthDay"`
	// Update time
	UpdateTime UpdateWindowsMonthlyRecurrenceUpdateTimeInput `pulumi:"updateTime"`
}

func (UpdateWindowsMonthlyRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsMonthlyRecurrence)(nil)).Elem()
}

func (i UpdateWindowsMonthlyRecurrenceArgs) ToUpdateWindowsMonthlyRecurrenceOutput() UpdateWindowsMonthlyRecurrenceOutput {
	return i.ToUpdateWindowsMonthlyRecurrenceOutputWithContext(context.Background())
}

func (i UpdateWindowsMonthlyRecurrenceArgs) ToUpdateWindowsMonthlyRecurrenceOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrenceOutput)
}

func (i UpdateWindowsMonthlyRecurrenceArgs) ToUpdateWindowsMonthlyRecurrencePtrOutput() UpdateWindowsMonthlyRecurrencePtrOutput {
	return i.ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsMonthlyRecurrenceArgs) ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrenceOutput).ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(ctx)
}

// UpdateWindowsMonthlyRecurrencePtrInput is an input type that accepts UpdateWindowsMonthlyRecurrenceArgs, UpdateWindowsMonthlyRecurrencePtr and UpdateWindowsMonthlyRecurrencePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsMonthlyRecurrencePtrInput` via:
//
//	        UpdateWindowsMonthlyRecurrenceArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsMonthlyRecurrencePtrInput interface {
	pulumi.Input

	ToUpdateWindowsMonthlyRecurrencePtrOutput() UpdateWindowsMonthlyRecurrencePtrOutput
	ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(context.Context) UpdateWindowsMonthlyRecurrencePtrOutput
}

type updateWindowsMonthlyRecurrencePtrType UpdateWindowsMonthlyRecurrenceArgs

func UpdateWindowsMonthlyRecurrencePtr(v *UpdateWindowsMonthlyRecurrenceArgs) UpdateWindowsMonthlyRecurrencePtrInput {
	return (*updateWindowsMonthlyRecurrencePtrType)(v)
}

func (*updateWindowsMonthlyRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsMonthlyRecurrence)(nil)).Elem()
}

func (i *updateWindowsMonthlyRecurrencePtrType) ToUpdateWindowsMonthlyRecurrencePtrOutput() UpdateWindowsMonthlyRecurrencePtrOutput {
	return i.ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(context.Background())
}

func (i *updateWindowsMonthlyRecurrencePtrType) ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrencePtrOutput)
}

type UpdateWindowsMonthlyRecurrenceOutput struct{ *pulumi.OutputState }

func (UpdateWindowsMonthlyRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsMonthlyRecurrence)(nil)).Elem()
}

func (o UpdateWindowsMonthlyRecurrenceOutput) ToUpdateWindowsMonthlyRecurrenceOutput() UpdateWindowsMonthlyRecurrenceOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceOutput) ToUpdateWindowsMonthlyRecurrenceOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceOutput) ToUpdateWindowsMonthlyRecurrencePtrOutput() UpdateWindowsMonthlyRecurrencePtrOutput {
	return o.ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsMonthlyRecurrenceOutput) ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsMonthlyRecurrence) *UpdateWindowsMonthlyRecurrence {
		return &v
	}).(UpdateWindowsMonthlyRecurrencePtrOutput)
}

// Every **X** months:
// * `1` = every month,
// * `2` = every two months,
// * `3` = every three months,
// * etc.
func (o UpdateWindowsMonthlyRecurrenceOutput) Every() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrence) int { return v.Every }).(pulumi.IntOutput)
}

// Recurrence range
func (o UpdateWindowsMonthlyRecurrenceOutput) RecurrenceRange() UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrence) UpdateWindowsMonthlyRecurrenceRecurrenceRange {
		return v.RecurrenceRange
	}).(UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput)
}

// Day of the month
func (o UpdateWindowsMonthlyRecurrenceOutput) SelectedMonthDay() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrence) int { return v.SelectedMonthDay }).(pulumi.IntOutput)
}

// Update time
func (o UpdateWindowsMonthlyRecurrenceOutput) UpdateTime() UpdateWindowsMonthlyRecurrenceUpdateTimeOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrence) UpdateWindowsMonthlyRecurrenceUpdateTime { return v.UpdateTime }).(UpdateWindowsMonthlyRecurrenceUpdateTimeOutput)
}

type UpdateWindowsMonthlyRecurrencePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsMonthlyRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsMonthlyRecurrence)(nil)).Elem()
}

func (o UpdateWindowsMonthlyRecurrencePtrOutput) ToUpdateWindowsMonthlyRecurrencePtrOutput() UpdateWindowsMonthlyRecurrencePtrOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrencePtrOutput) ToUpdateWindowsMonthlyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrencePtrOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrencePtrOutput) Elem() UpdateWindowsMonthlyRecurrenceOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrence) UpdateWindowsMonthlyRecurrence {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsMonthlyRecurrence
		return ret
	}).(UpdateWindowsMonthlyRecurrenceOutput)
}

// Every **X** months:
// * `1` = every month,
// * `2` = every two months,
// * `3` = every three months,
// * etc.
func (o UpdateWindowsMonthlyRecurrencePtrOutput) Every() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.Every
	}).(pulumi.IntPtrOutput)
}

// Recurrence range
func (o UpdateWindowsMonthlyRecurrencePtrOutput) RecurrenceRange() UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrence) *UpdateWindowsMonthlyRecurrenceRecurrenceRange {
		if v == nil {
			return nil
		}
		return &v.RecurrenceRange
	}).(UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput)
}

// Day of the month
func (o UpdateWindowsMonthlyRecurrencePtrOutput) SelectedMonthDay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.SelectedMonthDay
	}).(pulumi.IntPtrOutput)
}

// Update time
func (o UpdateWindowsMonthlyRecurrencePtrOutput) UpdateTime() UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrence) *UpdateWindowsMonthlyRecurrenceUpdateTime {
		if v == nil {
			return nil
		}
		return &v.UpdateTime
	}).(UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput)
}

type UpdateWindowsMonthlyRecurrenceRecurrenceRange struct {
	// no documentation available
	End string `pulumi:"end"`
	// no documentation available
	Start string `pulumi:"start"`
}

// UpdateWindowsMonthlyRecurrenceRecurrenceRangeInput is an input type that accepts UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs and UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput values.
// You can construct a concrete instance of `UpdateWindowsMonthlyRecurrenceRecurrenceRangeInput` via:
//
//	UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs{...}
type UpdateWindowsMonthlyRecurrenceRecurrenceRangeInput interface {
	pulumi.Input

	ToUpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput() UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput
	ToUpdateWindowsMonthlyRecurrenceRecurrenceRangeOutputWithContext(context.Context) UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput
}

type UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs struct {
	// no documentation available
	End pulumi.StringInput `pulumi:"end"`
	// no documentation available
	Start pulumi.StringInput `pulumi:"start"`
}

func (UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (i UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput() UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput {
	return i.ToUpdateWindowsMonthlyRecurrenceRecurrenceRangeOutputWithContext(context.Background())
}

func (i UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangeOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput)
}

func (i UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return i.ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput).ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(ctx)
}

// UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrInput is an input type that accepts UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs, UpdateWindowsMonthlyRecurrenceRecurrenceRangePtr and UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrInput` via:
//
//	        UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrInput interface {
	pulumi.Input

	ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput
	ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(context.Context) UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput
}

type updateWindowsMonthlyRecurrenceRecurrenceRangePtrType UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs

func UpdateWindowsMonthlyRecurrenceRecurrenceRangePtr(v *UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs) UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrInput {
	return (*updateWindowsMonthlyRecurrenceRecurrenceRangePtrType)(v)
}

func (*updateWindowsMonthlyRecurrenceRecurrenceRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsMonthlyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (i *updateWindowsMonthlyRecurrenceRecurrenceRangePtrType) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return i.ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (i *updateWindowsMonthlyRecurrenceRecurrenceRangePtrType) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput)
}

type UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput struct{ *pulumi.OutputState }

func (UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput() UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangeOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return o.ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsMonthlyRecurrenceRecurrenceRange) *UpdateWindowsMonthlyRecurrenceRecurrenceRange {
		return &v
	}).(UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput)
}

// no documentation available
func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrenceRecurrenceRange) string { return v.End }).(pulumi.StringOutput)
}

// no documentation available
func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrenceRecurrenceRange) string { return v.Start }).(pulumi.StringOutput)
}

type UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsMonthlyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput) ToUpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput) Elem() UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrenceRecurrenceRange) UpdateWindowsMonthlyRecurrenceRecurrenceRange {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsMonthlyRecurrenceRecurrenceRange
		return ret
	}).(UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput)
}

// no documentation available
func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrenceRecurrenceRange) *string {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrenceRecurrenceRange) *string {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.StringPtrOutput)
}

type UpdateWindowsMonthlyRecurrenceUpdateTime struct {
	// Duration (minutes)
	Duration int `pulumi:"duration"`
	// Start time (24-hour clock)
	StartTime string `pulumi:"startTime"`
	// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
	TimeZone string `pulumi:"timeZone"`
}

// UpdateWindowsMonthlyRecurrenceUpdateTimeInput is an input type that accepts UpdateWindowsMonthlyRecurrenceUpdateTimeArgs and UpdateWindowsMonthlyRecurrenceUpdateTimeOutput values.
// You can construct a concrete instance of `UpdateWindowsMonthlyRecurrenceUpdateTimeInput` via:
//
//	UpdateWindowsMonthlyRecurrenceUpdateTimeArgs{...}
type UpdateWindowsMonthlyRecurrenceUpdateTimeInput interface {
	pulumi.Input

	ToUpdateWindowsMonthlyRecurrenceUpdateTimeOutput() UpdateWindowsMonthlyRecurrenceUpdateTimeOutput
	ToUpdateWindowsMonthlyRecurrenceUpdateTimeOutputWithContext(context.Context) UpdateWindowsMonthlyRecurrenceUpdateTimeOutput
}

type UpdateWindowsMonthlyRecurrenceUpdateTimeArgs struct {
	// Duration (minutes)
	Duration pulumi.IntInput `pulumi:"duration"`
	// Start time (24-hour clock)
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (UpdateWindowsMonthlyRecurrenceUpdateTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceUpdateTime)(nil)).Elem()
}

func (i UpdateWindowsMonthlyRecurrenceUpdateTimeArgs) ToUpdateWindowsMonthlyRecurrenceUpdateTimeOutput() UpdateWindowsMonthlyRecurrenceUpdateTimeOutput {
	return i.ToUpdateWindowsMonthlyRecurrenceUpdateTimeOutputWithContext(context.Background())
}

func (i UpdateWindowsMonthlyRecurrenceUpdateTimeArgs) ToUpdateWindowsMonthlyRecurrenceUpdateTimeOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceUpdateTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrenceUpdateTimeOutput)
}

func (i UpdateWindowsMonthlyRecurrenceUpdateTimeArgs) ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput() UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return i.ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsMonthlyRecurrenceUpdateTimeArgs) ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrenceUpdateTimeOutput).ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(ctx)
}

// UpdateWindowsMonthlyRecurrenceUpdateTimePtrInput is an input type that accepts UpdateWindowsMonthlyRecurrenceUpdateTimeArgs, UpdateWindowsMonthlyRecurrenceUpdateTimePtr and UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsMonthlyRecurrenceUpdateTimePtrInput` via:
//
//	        UpdateWindowsMonthlyRecurrenceUpdateTimeArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsMonthlyRecurrenceUpdateTimePtrInput interface {
	pulumi.Input

	ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput() UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput
	ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(context.Context) UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput
}

type updateWindowsMonthlyRecurrenceUpdateTimePtrType UpdateWindowsMonthlyRecurrenceUpdateTimeArgs

func UpdateWindowsMonthlyRecurrenceUpdateTimePtr(v *UpdateWindowsMonthlyRecurrenceUpdateTimeArgs) UpdateWindowsMonthlyRecurrenceUpdateTimePtrInput {
	return (*updateWindowsMonthlyRecurrenceUpdateTimePtrType)(v)
}

func (*updateWindowsMonthlyRecurrenceUpdateTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsMonthlyRecurrenceUpdateTime)(nil)).Elem()
}

func (i *updateWindowsMonthlyRecurrenceUpdateTimePtrType) ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput() UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return i.ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (i *updateWindowsMonthlyRecurrenceUpdateTimePtrType) ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput)
}

type UpdateWindowsMonthlyRecurrenceUpdateTimeOutput struct{ *pulumi.OutputState }

func (UpdateWindowsMonthlyRecurrenceUpdateTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceUpdateTime)(nil)).Elem()
}

func (o UpdateWindowsMonthlyRecurrenceUpdateTimeOutput) ToUpdateWindowsMonthlyRecurrenceUpdateTimeOutput() UpdateWindowsMonthlyRecurrenceUpdateTimeOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceUpdateTimeOutput) ToUpdateWindowsMonthlyRecurrenceUpdateTimeOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceUpdateTimeOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceUpdateTimeOutput) ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput() UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return o.ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsMonthlyRecurrenceUpdateTimeOutput) ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsMonthlyRecurrenceUpdateTime) *UpdateWindowsMonthlyRecurrenceUpdateTime {
		return &v
	}).(UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput)
}

// Duration (minutes)
func (o UpdateWindowsMonthlyRecurrenceUpdateTimeOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrenceUpdateTime) int { return v.Duration }).(pulumi.IntOutput)
}

// Start time (24-hour clock)
func (o UpdateWindowsMonthlyRecurrenceUpdateTimeOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrenceUpdateTime) string { return v.StartTime }).(pulumi.StringOutput)
}

// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
func (o UpdateWindowsMonthlyRecurrenceUpdateTimeOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsMonthlyRecurrenceUpdateTime) string { return v.TimeZone }).(pulumi.StringOutput)
}

type UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsMonthlyRecurrenceUpdateTime)(nil)).Elem()
}

func (o UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput) ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput() UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput) ToUpdateWindowsMonthlyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput {
	return o
}

func (o UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput) Elem() UpdateWindowsMonthlyRecurrenceUpdateTimeOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrenceUpdateTime) UpdateWindowsMonthlyRecurrenceUpdateTime {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsMonthlyRecurrenceUpdateTime
		return ret
	}).(UpdateWindowsMonthlyRecurrenceUpdateTimeOutput)
}

// Duration (minutes)
func (o UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrenceUpdateTime) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

// Start time (24-hour clock)
func (o UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrenceUpdateTime) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
func (o UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsMonthlyRecurrenceUpdateTime) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type UpdateWindowsOnceRecurrence struct {
	// Update time
	RecurrenceRange UpdateWindowsOnceRecurrenceRecurrenceRange `pulumi:"recurrenceRange"`
}

// UpdateWindowsOnceRecurrenceInput is an input type that accepts UpdateWindowsOnceRecurrenceArgs and UpdateWindowsOnceRecurrenceOutput values.
// You can construct a concrete instance of `UpdateWindowsOnceRecurrenceInput` via:
//
//	UpdateWindowsOnceRecurrenceArgs{...}
type UpdateWindowsOnceRecurrenceInput interface {
	pulumi.Input

	ToUpdateWindowsOnceRecurrenceOutput() UpdateWindowsOnceRecurrenceOutput
	ToUpdateWindowsOnceRecurrenceOutputWithContext(context.Context) UpdateWindowsOnceRecurrenceOutput
}

type UpdateWindowsOnceRecurrenceArgs struct {
	// Update time
	RecurrenceRange UpdateWindowsOnceRecurrenceRecurrenceRangeInput `pulumi:"recurrenceRange"`
}

func (UpdateWindowsOnceRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsOnceRecurrence)(nil)).Elem()
}

func (i UpdateWindowsOnceRecurrenceArgs) ToUpdateWindowsOnceRecurrenceOutput() UpdateWindowsOnceRecurrenceOutput {
	return i.ToUpdateWindowsOnceRecurrenceOutputWithContext(context.Background())
}

func (i UpdateWindowsOnceRecurrenceArgs) ToUpdateWindowsOnceRecurrenceOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsOnceRecurrenceOutput)
}

func (i UpdateWindowsOnceRecurrenceArgs) ToUpdateWindowsOnceRecurrencePtrOutput() UpdateWindowsOnceRecurrencePtrOutput {
	return i.ToUpdateWindowsOnceRecurrencePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsOnceRecurrenceArgs) ToUpdateWindowsOnceRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsOnceRecurrenceOutput).ToUpdateWindowsOnceRecurrencePtrOutputWithContext(ctx)
}

// UpdateWindowsOnceRecurrencePtrInput is an input type that accepts UpdateWindowsOnceRecurrenceArgs, UpdateWindowsOnceRecurrencePtr and UpdateWindowsOnceRecurrencePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsOnceRecurrencePtrInput` via:
//
//	        UpdateWindowsOnceRecurrenceArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsOnceRecurrencePtrInput interface {
	pulumi.Input

	ToUpdateWindowsOnceRecurrencePtrOutput() UpdateWindowsOnceRecurrencePtrOutput
	ToUpdateWindowsOnceRecurrencePtrOutputWithContext(context.Context) UpdateWindowsOnceRecurrencePtrOutput
}

type updateWindowsOnceRecurrencePtrType UpdateWindowsOnceRecurrenceArgs

func UpdateWindowsOnceRecurrencePtr(v *UpdateWindowsOnceRecurrenceArgs) UpdateWindowsOnceRecurrencePtrInput {
	return (*updateWindowsOnceRecurrencePtrType)(v)
}

func (*updateWindowsOnceRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsOnceRecurrence)(nil)).Elem()
}

func (i *updateWindowsOnceRecurrencePtrType) ToUpdateWindowsOnceRecurrencePtrOutput() UpdateWindowsOnceRecurrencePtrOutput {
	return i.ToUpdateWindowsOnceRecurrencePtrOutputWithContext(context.Background())
}

func (i *updateWindowsOnceRecurrencePtrType) ToUpdateWindowsOnceRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsOnceRecurrencePtrOutput)
}

type UpdateWindowsOnceRecurrenceOutput struct{ *pulumi.OutputState }

func (UpdateWindowsOnceRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsOnceRecurrence)(nil)).Elem()
}

func (o UpdateWindowsOnceRecurrenceOutput) ToUpdateWindowsOnceRecurrenceOutput() UpdateWindowsOnceRecurrenceOutput {
	return o
}

func (o UpdateWindowsOnceRecurrenceOutput) ToUpdateWindowsOnceRecurrenceOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrenceOutput {
	return o
}

func (o UpdateWindowsOnceRecurrenceOutput) ToUpdateWindowsOnceRecurrencePtrOutput() UpdateWindowsOnceRecurrencePtrOutput {
	return o.ToUpdateWindowsOnceRecurrencePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsOnceRecurrenceOutput) ToUpdateWindowsOnceRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsOnceRecurrence) *UpdateWindowsOnceRecurrence {
		return &v
	}).(UpdateWindowsOnceRecurrencePtrOutput)
}

// Update time
func (o UpdateWindowsOnceRecurrenceOutput) RecurrenceRange() UpdateWindowsOnceRecurrenceRecurrenceRangeOutput {
	return o.ApplyT(func(v UpdateWindowsOnceRecurrence) UpdateWindowsOnceRecurrenceRecurrenceRange {
		return v.RecurrenceRange
	}).(UpdateWindowsOnceRecurrenceRecurrenceRangeOutput)
}

type UpdateWindowsOnceRecurrencePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsOnceRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsOnceRecurrence)(nil)).Elem()
}

func (o UpdateWindowsOnceRecurrencePtrOutput) ToUpdateWindowsOnceRecurrencePtrOutput() UpdateWindowsOnceRecurrencePtrOutput {
	return o
}

func (o UpdateWindowsOnceRecurrencePtrOutput) ToUpdateWindowsOnceRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrencePtrOutput {
	return o
}

func (o UpdateWindowsOnceRecurrencePtrOutput) Elem() UpdateWindowsOnceRecurrenceOutput {
	return o.ApplyT(func(v *UpdateWindowsOnceRecurrence) UpdateWindowsOnceRecurrence {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsOnceRecurrence
		return ret
	}).(UpdateWindowsOnceRecurrenceOutput)
}

// Update time
func (o UpdateWindowsOnceRecurrencePtrOutput) RecurrenceRange() UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return o.ApplyT(func(v *UpdateWindowsOnceRecurrence) *UpdateWindowsOnceRecurrenceRecurrenceRange {
		if v == nil {
			return nil
		}
		return &v.RecurrenceRange
	}).(UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput)
}

type UpdateWindowsOnceRecurrenceRecurrenceRange struct {
	// no documentation available
	End string `pulumi:"end"`
	// no documentation available
	Start string `pulumi:"start"`
}

// UpdateWindowsOnceRecurrenceRecurrenceRangeInput is an input type that accepts UpdateWindowsOnceRecurrenceRecurrenceRangeArgs and UpdateWindowsOnceRecurrenceRecurrenceRangeOutput values.
// You can construct a concrete instance of `UpdateWindowsOnceRecurrenceRecurrenceRangeInput` via:
//
//	UpdateWindowsOnceRecurrenceRecurrenceRangeArgs{...}
type UpdateWindowsOnceRecurrenceRecurrenceRangeInput interface {
	pulumi.Input

	ToUpdateWindowsOnceRecurrenceRecurrenceRangeOutput() UpdateWindowsOnceRecurrenceRecurrenceRangeOutput
	ToUpdateWindowsOnceRecurrenceRecurrenceRangeOutputWithContext(context.Context) UpdateWindowsOnceRecurrenceRecurrenceRangeOutput
}

type UpdateWindowsOnceRecurrenceRecurrenceRangeArgs struct {
	// no documentation available
	End pulumi.StringInput `pulumi:"end"`
	// no documentation available
	Start pulumi.StringInput `pulumi:"start"`
}

func (UpdateWindowsOnceRecurrenceRecurrenceRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsOnceRecurrenceRecurrenceRange)(nil)).Elem()
}

func (i UpdateWindowsOnceRecurrenceRecurrenceRangeArgs) ToUpdateWindowsOnceRecurrenceRecurrenceRangeOutput() UpdateWindowsOnceRecurrenceRecurrenceRangeOutput {
	return i.ToUpdateWindowsOnceRecurrenceRecurrenceRangeOutputWithContext(context.Background())
}

func (i UpdateWindowsOnceRecurrenceRecurrenceRangeArgs) ToUpdateWindowsOnceRecurrenceRecurrenceRangeOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrenceRecurrenceRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsOnceRecurrenceRecurrenceRangeOutput)
}

func (i UpdateWindowsOnceRecurrenceRecurrenceRangeArgs) ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput() UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return i.ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsOnceRecurrenceRecurrenceRangeArgs) ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsOnceRecurrenceRecurrenceRangeOutput).ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(ctx)
}

// UpdateWindowsOnceRecurrenceRecurrenceRangePtrInput is an input type that accepts UpdateWindowsOnceRecurrenceRecurrenceRangeArgs, UpdateWindowsOnceRecurrenceRecurrenceRangePtr and UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsOnceRecurrenceRecurrenceRangePtrInput` via:
//
//	        UpdateWindowsOnceRecurrenceRecurrenceRangeArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsOnceRecurrenceRecurrenceRangePtrInput interface {
	pulumi.Input

	ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput() UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput
	ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(context.Context) UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput
}

type updateWindowsOnceRecurrenceRecurrenceRangePtrType UpdateWindowsOnceRecurrenceRecurrenceRangeArgs

func UpdateWindowsOnceRecurrenceRecurrenceRangePtr(v *UpdateWindowsOnceRecurrenceRecurrenceRangeArgs) UpdateWindowsOnceRecurrenceRecurrenceRangePtrInput {
	return (*updateWindowsOnceRecurrenceRecurrenceRangePtrType)(v)
}

func (*updateWindowsOnceRecurrenceRecurrenceRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsOnceRecurrenceRecurrenceRange)(nil)).Elem()
}

func (i *updateWindowsOnceRecurrenceRecurrenceRangePtrType) ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput() UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return i.ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (i *updateWindowsOnceRecurrenceRecurrenceRangePtrType) ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput)
}

type UpdateWindowsOnceRecurrenceRecurrenceRangeOutput struct{ *pulumi.OutputState }

func (UpdateWindowsOnceRecurrenceRecurrenceRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsOnceRecurrenceRecurrenceRange)(nil)).Elem()
}

func (o UpdateWindowsOnceRecurrenceRecurrenceRangeOutput) ToUpdateWindowsOnceRecurrenceRecurrenceRangeOutput() UpdateWindowsOnceRecurrenceRecurrenceRangeOutput {
	return o
}

func (o UpdateWindowsOnceRecurrenceRecurrenceRangeOutput) ToUpdateWindowsOnceRecurrenceRecurrenceRangeOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrenceRecurrenceRangeOutput {
	return o
}

func (o UpdateWindowsOnceRecurrenceRecurrenceRangeOutput) ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput() UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return o.ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsOnceRecurrenceRecurrenceRangeOutput) ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsOnceRecurrenceRecurrenceRange) *UpdateWindowsOnceRecurrenceRecurrenceRange {
		return &v
	}).(UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput)
}

// no documentation available
func (o UpdateWindowsOnceRecurrenceRecurrenceRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsOnceRecurrenceRecurrenceRange) string { return v.End }).(pulumi.StringOutput)
}

// no documentation available
func (o UpdateWindowsOnceRecurrenceRecurrenceRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsOnceRecurrenceRecurrenceRange) string { return v.Start }).(pulumi.StringOutput)
}

type UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsOnceRecurrenceRecurrenceRange)(nil)).Elem()
}

func (o UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput) ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput() UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return o
}

func (o UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput) ToUpdateWindowsOnceRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput {
	return o
}

func (o UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput) Elem() UpdateWindowsOnceRecurrenceRecurrenceRangeOutput {
	return o.ApplyT(func(v *UpdateWindowsOnceRecurrenceRecurrenceRange) UpdateWindowsOnceRecurrenceRecurrenceRange {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsOnceRecurrenceRecurrenceRange
		return ret
	}).(UpdateWindowsOnceRecurrenceRecurrenceRangeOutput)
}

// no documentation available
func (o UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsOnceRecurrenceRecurrenceRange) *string {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsOnceRecurrenceRecurrenceRange) *string {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.StringPtrOutput)
}

type UpdateWindowsWeeklyRecurrence struct {
	// Every **X** weeks:
	// * `1` = every week,
	// * `2` = every two weeks,
	// * `3` = every three weeks,
	// * etc.
	Every int `pulumi:"every"`
	// Recurrence range
	RecurrenceRange UpdateWindowsWeeklyRecurrenceRecurrenceRange `pulumi:"recurrenceRange"`
	// Day of the week
	SelectedWeekDays UpdateWindowsWeeklyRecurrenceSelectedWeekDays `pulumi:"selectedWeekDays"`
	// Update time
	UpdateTime UpdateWindowsWeeklyRecurrenceUpdateTime `pulumi:"updateTime"`
}

// UpdateWindowsWeeklyRecurrenceInput is an input type that accepts UpdateWindowsWeeklyRecurrenceArgs and UpdateWindowsWeeklyRecurrenceOutput values.
// You can construct a concrete instance of `UpdateWindowsWeeklyRecurrenceInput` via:
//
//	UpdateWindowsWeeklyRecurrenceArgs{...}
type UpdateWindowsWeeklyRecurrenceInput interface {
	pulumi.Input

	ToUpdateWindowsWeeklyRecurrenceOutput() UpdateWindowsWeeklyRecurrenceOutput
	ToUpdateWindowsWeeklyRecurrenceOutputWithContext(context.Context) UpdateWindowsWeeklyRecurrenceOutput
}

type UpdateWindowsWeeklyRecurrenceArgs struct {
	// Every **X** weeks:
	// * `1` = every week,
	// * `2` = every two weeks,
	// * `3` = every three weeks,
	// * etc.
	Every pulumi.IntInput `pulumi:"every"`
	// Recurrence range
	RecurrenceRange UpdateWindowsWeeklyRecurrenceRecurrenceRangeInput `pulumi:"recurrenceRange"`
	// Day of the week
	SelectedWeekDays UpdateWindowsWeeklyRecurrenceSelectedWeekDaysInput `pulumi:"selectedWeekDays"`
	// Update time
	UpdateTime UpdateWindowsWeeklyRecurrenceUpdateTimeInput `pulumi:"updateTime"`
}

func (UpdateWindowsWeeklyRecurrenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsWeeklyRecurrence)(nil)).Elem()
}

func (i UpdateWindowsWeeklyRecurrenceArgs) ToUpdateWindowsWeeklyRecurrenceOutput() UpdateWindowsWeeklyRecurrenceOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceOutputWithContext(context.Background())
}

func (i UpdateWindowsWeeklyRecurrenceArgs) ToUpdateWindowsWeeklyRecurrenceOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceOutput)
}

func (i UpdateWindowsWeeklyRecurrenceArgs) ToUpdateWindowsWeeklyRecurrencePtrOutput() UpdateWindowsWeeklyRecurrencePtrOutput {
	return i.ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsWeeklyRecurrenceArgs) ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceOutput).ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(ctx)
}

// UpdateWindowsWeeklyRecurrencePtrInput is an input type that accepts UpdateWindowsWeeklyRecurrenceArgs, UpdateWindowsWeeklyRecurrencePtr and UpdateWindowsWeeklyRecurrencePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsWeeklyRecurrencePtrInput` via:
//
//	        UpdateWindowsWeeklyRecurrenceArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsWeeklyRecurrencePtrInput interface {
	pulumi.Input

	ToUpdateWindowsWeeklyRecurrencePtrOutput() UpdateWindowsWeeklyRecurrencePtrOutput
	ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(context.Context) UpdateWindowsWeeklyRecurrencePtrOutput
}

type updateWindowsWeeklyRecurrencePtrType UpdateWindowsWeeklyRecurrenceArgs

func UpdateWindowsWeeklyRecurrencePtr(v *UpdateWindowsWeeklyRecurrenceArgs) UpdateWindowsWeeklyRecurrencePtrInput {
	return (*updateWindowsWeeklyRecurrencePtrType)(v)
}

func (*updateWindowsWeeklyRecurrencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsWeeklyRecurrence)(nil)).Elem()
}

func (i *updateWindowsWeeklyRecurrencePtrType) ToUpdateWindowsWeeklyRecurrencePtrOutput() UpdateWindowsWeeklyRecurrencePtrOutput {
	return i.ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(context.Background())
}

func (i *updateWindowsWeeklyRecurrencePtrType) ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrencePtrOutput)
}

type UpdateWindowsWeeklyRecurrenceOutput struct{ *pulumi.OutputState }

func (UpdateWindowsWeeklyRecurrenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsWeeklyRecurrence)(nil)).Elem()
}

func (o UpdateWindowsWeeklyRecurrenceOutput) ToUpdateWindowsWeeklyRecurrenceOutput() UpdateWindowsWeeklyRecurrenceOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceOutput) ToUpdateWindowsWeeklyRecurrenceOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceOutput) ToUpdateWindowsWeeklyRecurrencePtrOutput() UpdateWindowsWeeklyRecurrencePtrOutput {
	return o.ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsWeeklyRecurrenceOutput) ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsWeeklyRecurrence) *UpdateWindowsWeeklyRecurrence {
		return &v
	}).(UpdateWindowsWeeklyRecurrencePtrOutput)
}

// Every **X** weeks:
// * `1` = every week,
// * `2` = every two weeks,
// * `3` = every three weeks,
// * etc.
func (o UpdateWindowsWeeklyRecurrenceOutput) Every() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrence) int { return v.Every }).(pulumi.IntOutput)
}

// Recurrence range
func (o UpdateWindowsWeeklyRecurrenceOutput) RecurrenceRange() UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrence) UpdateWindowsWeeklyRecurrenceRecurrenceRange {
		return v.RecurrenceRange
	}).(UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput)
}

// Day of the week
func (o UpdateWindowsWeeklyRecurrenceOutput) SelectedWeekDays() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrence) UpdateWindowsWeeklyRecurrenceSelectedWeekDays {
		return v.SelectedWeekDays
	}).(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput)
}

// Update time
func (o UpdateWindowsWeeklyRecurrenceOutput) UpdateTime() UpdateWindowsWeeklyRecurrenceUpdateTimeOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrence) UpdateWindowsWeeklyRecurrenceUpdateTime { return v.UpdateTime }).(UpdateWindowsWeeklyRecurrenceUpdateTimeOutput)
}

type UpdateWindowsWeeklyRecurrencePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsWeeklyRecurrencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsWeeklyRecurrence)(nil)).Elem()
}

func (o UpdateWindowsWeeklyRecurrencePtrOutput) ToUpdateWindowsWeeklyRecurrencePtrOutput() UpdateWindowsWeeklyRecurrencePtrOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrencePtrOutput) ToUpdateWindowsWeeklyRecurrencePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrencePtrOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrencePtrOutput) Elem() UpdateWindowsWeeklyRecurrenceOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrence) UpdateWindowsWeeklyRecurrence {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsWeeklyRecurrence
		return ret
	}).(UpdateWindowsWeeklyRecurrenceOutput)
}

// Every **X** weeks:
// * `1` = every week,
// * `2` = every two weeks,
// * `3` = every three weeks,
// * etc.
func (o UpdateWindowsWeeklyRecurrencePtrOutput) Every() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrence) *int {
		if v == nil {
			return nil
		}
		return &v.Every
	}).(pulumi.IntPtrOutput)
}

// Recurrence range
func (o UpdateWindowsWeeklyRecurrencePtrOutput) RecurrenceRange() UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrence) *UpdateWindowsWeeklyRecurrenceRecurrenceRange {
		if v == nil {
			return nil
		}
		return &v.RecurrenceRange
	}).(UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput)
}

// Day of the week
func (o UpdateWindowsWeeklyRecurrencePtrOutput) SelectedWeekDays() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrence) *UpdateWindowsWeeklyRecurrenceSelectedWeekDays {
		if v == nil {
			return nil
		}
		return &v.SelectedWeekDays
	}).(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput)
}

// Update time
func (o UpdateWindowsWeeklyRecurrencePtrOutput) UpdateTime() UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrence) *UpdateWindowsWeeklyRecurrenceUpdateTime {
		if v == nil {
			return nil
		}
		return &v.UpdateTime
	}).(UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput)
}

type UpdateWindowsWeeklyRecurrenceRecurrenceRange struct {
	// no documentation available
	End string `pulumi:"end"`
	// no documentation available
	Start string `pulumi:"start"`
}

// UpdateWindowsWeeklyRecurrenceRecurrenceRangeInput is an input type that accepts UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs and UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput values.
// You can construct a concrete instance of `UpdateWindowsWeeklyRecurrenceRecurrenceRangeInput` via:
//
//	UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs{...}
type UpdateWindowsWeeklyRecurrenceRecurrenceRangeInput interface {
	pulumi.Input

	ToUpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput() UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput
	ToUpdateWindowsWeeklyRecurrenceRecurrenceRangeOutputWithContext(context.Context) UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput
}

type UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs struct {
	// no documentation available
	End pulumi.StringInput `pulumi:"end"`
	// no documentation available
	Start pulumi.StringInput `pulumi:"start"`
}

func (UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (i UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput() UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceRecurrenceRangeOutputWithContext(context.Background())
}

func (i UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangeOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput)
}

func (i UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput).ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(ctx)
}

// UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrInput is an input type that accepts UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs, UpdateWindowsWeeklyRecurrenceRecurrenceRangePtr and UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrInput` via:
//
//	        UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrInput interface {
	pulumi.Input

	ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput
	ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(context.Context) UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput
}

type updateWindowsWeeklyRecurrenceRecurrenceRangePtrType UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs

func UpdateWindowsWeeklyRecurrenceRecurrenceRangePtr(v *UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs) UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrInput {
	return (*updateWindowsWeeklyRecurrenceRecurrenceRangePtrType)(v)
}

func (*updateWindowsWeeklyRecurrenceRecurrenceRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsWeeklyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (i *updateWindowsWeeklyRecurrenceRecurrenceRangePtrType) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (i *updateWindowsWeeklyRecurrenceRecurrenceRangePtrType) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput)
}

type UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput struct{ *pulumi.OutputState }

func (UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput() UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangeOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return o.ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsWeeklyRecurrenceRecurrenceRange) *UpdateWindowsWeeklyRecurrenceRecurrenceRange {
		return &v
	}).(UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceRecurrenceRange) string { return v.End }).(pulumi.StringOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceRecurrenceRange) string { return v.Start }).(pulumi.StringOutput)
}

type UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsWeeklyRecurrenceRecurrenceRange)(nil)).Elem()
}

func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput() UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput) ToUpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput) Elem() UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceRecurrenceRange) UpdateWindowsWeeklyRecurrenceRecurrenceRange {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsWeeklyRecurrenceRecurrenceRange
		return ret
	}).(UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput) End() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceRecurrenceRange) *string {
		if v == nil {
			return nil
		}
		return &v.End
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput) Start() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceRecurrenceRange) *string {
		if v == nil {
			return nil
		}
		return &v.Start
	}).(pulumi.StringPtrOutput)
}

type UpdateWindowsWeeklyRecurrenceSelectedWeekDays struct {
	// no documentation available
	Friday bool `pulumi:"friday"`
	// no documentation available
	Monday bool `pulumi:"monday"`
	// no documentation available
	Saturday bool `pulumi:"saturday"`
	// no documentation available
	Sunday bool `pulumi:"sunday"`
	// no documentation available
	Thursday bool `pulumi:"thursday"`
	// no documentation available
	Tuesday bool `pulumi:"tuesday"`
	// no documentation available
	Wednesday bool `pulumi:"wednesday"`
}

// UpdateWindowsWeeklyRecurrenceSelectedWeekDaysInput is an input type that accepts UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs and UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput values.
// You can construct a concrete instance of `UpdateWindowsWeeklyRecurrenceSelectedWeekDaysInput` via:
//
//	UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs{...}
type UpdateWindowsWeeklyRecurrenceSelectedWeekDaysInput interface {
	pulumi.Input

	ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput
	ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutputWithContext(context.Context) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput
}

type UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs struct {
	// no documentation available
	Friday pulumi.BoolInput `pulumi:"friday"`
	// no documentation available
	Monday pulumi.BoolInput `pulumi:"monday"`
	// no documentation available
	Saturday pulumi.BoolInput `pulumi:"saturday"`
	// no documentation available
	Sunday pulumi.BoolInput `pulumi:"sunday"`
	// no documentation available
	Thursday pulumi.BoolInput `pulumi:"thursday"`
	// no documentation available
	Tuesday pulumi.BoolInput `pulumi:"tuesday"`
	// no documentation available
	Wednesday pulumi.BoolInput `pulumi:"wednesday"`
}

func (UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceSelectedWeekDays)(nil)).Elem()
}

func (i UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutputWithContext(context.Background())
}

func (i UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput)
}

func (i UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(context.Background())
}

func (i UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput).ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(ctx)
}

// UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrInput is an input type that accepts UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs, UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtr and UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput values.
// You can construct a concrete instance of `UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrInput` via:
//
//	        UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrInput interface {
	pulumi.Input

	ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput
	ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(context.Context) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput
}

type updateWindowsWeeklyRecurrenceSelectedWeekDaysPtrType UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs

func UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtr(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrInput {
	return (*updateWindowsWeeklyRecurrenceSelectedWeekDaysPtrType)(v)
}

func (*updateWindowsWeeklyRecurrenceSelectedWeekDaysPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsWeeklyRecurrenceSelectedWeekDays)(nil)).Elem()
}

func (i *updateWindowsWeeklyRecurrenceSelectedWeekDaysPtrType) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(context.Background())
}

func (i *updateWindowsWeeklyRecurrenceSelectedWeekDaysPtrType) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput)
}

type UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput struct{ *pulumi.OutputState }

func (UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceSelectedWeekDays)(nil)).Elem()
}

func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return o.ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(context.Background())
}

func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsWeeklyRecurrenceSelectedWeekDays) *UpdateWindowsWeeklyRecurrenceSelectedWeekDays {
		return &v
	}).(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) Friday() pulumi.BoolOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceSelectedWeekDays) bool { return v.Friday }).(pulumi.BoolOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) Monday() pulumi.BoolOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceSelectedWeekDays) bool { return v.Monday }).(pulumi.BoolOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) Saturday() pulumi.BoolOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceSelectedWeekDays) bool { return v.Saturday }).(pulumi.BoolOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) Sunday() pulumi.BoolOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceSelectedWeekDays) bool { return v.Sunday }).(pulumi.BoolOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) Thursday() pulumi.BoolOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceSelectedWeekDays) bool { return v.Thursday }).(pulumi.BoolOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) Tuesday() pulumi.BoolOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceSelectedWeekDays) bool { return v.Tuesday }).(pulumi.BoolOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput) Wednesday() pulumi.BoolOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceSelectedWeekDays) bool { return v.Wednesday }).(pulumi.BoolOutput)
}

type UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsWeeklyRecurrenceSelectedWeekDays)(nil)).Elem()
}

func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) ToUpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) Elem() UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDays) UpdateWindowsWeeklyRecurrenceSelectedWeekDays {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsWeeklyRecurrenceSelectedWeekDays
		return ret
	}).(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) Friday() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDays) *bool {
		if v == nil {
			return nil
		}
		return &v.Friday
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) Monday() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDays) *bool {
		if v == nil {
			return nil
		}
		return &v.Monday
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) Saturday() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDays) *bool {
		if v == nil {
			return nil
		}
		return &v.Saturday
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) Sunday() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDays) *bool {
		if v == nil {
			return nil
		}
		return &v.Sunday
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) Thursday() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDays) *bool {
		if v == nil {
			return nil
		}
		return &v.Thursday
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) Tuesday() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDays) *bool {
		if v == nil {
			return nil
		}
		return &v.Tuesday
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput) Wednesday() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceSelectedWeekDays) *bool {
		if v == nil {
			return nil
		}
		return &v.Wednesday
	}).(pulumi.BoolPtrOutput)
}

type UpdateWindowsWeeklyRecurrenceUpdateTime struct {
	// Duration (minutes)
	Duration int `pulumi:"duration"`
	// Start time (24-hour clock)
	StartTime string `pulumi:"startTime"`
	// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
	TimeZone string `pulumi:"timeZone"`
}

// UpdateWindowsWeeklyRecurrenceUpdateTimeInput is an input type that accepts UpdateWindowsWeeklyRecurrenceUpdateTimeArgs and UpdateWindowsWeeklyRecurrenceUpdateTimeOutput values.
// You can construct a concrete instance of `UpdateWindowsWeeklyRecurrenceUpdateTimeInput` via:
//
//	UpdateWindowsWeeklyRecurrenceUpdateTimeArgs{...}
type UpdateWindowsWeeklyRecurrenceUpdateTimeInput interface {
	pulumi.Input

	ToUpdateWindowsWeeklyRecurrenceUpdateTimeOutput() UpdateWindowsWeeklyRecurrenceUpdateTimeOutput
	ToUpdateWindowsWeeklyRecurrenceUpdateTimeOutputWithContext(context.Context) UpdateWindowsWeeklyRecurrenceUpdateTimeOutput
}

type UpdateWindowsWeeklyRecurrenceUpdateTimeArgs struct {
	// Duration (minutes)
	Duration pulumi.IntInput `pulumi:"duration"`
	// Start time (24-hour clock)
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (UpdateWindowsWeeklyRecurrenceUpdateTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceUpdateTime)(nil)).Elem()
}

func (i UpdateWindowsWeeklyRecurrenceUpdateTimeArgs) ToUpdateWindowsWeeklyRecurrenceUpdateTimeOutput() UpdateWindowsWeeklyRecurrenceUpdateTimeOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceUpdateTimeOutputWithContext(context.Background())
}

func (i UpdateWindowsWeeklyRecurrenceUpdateTimeArgs) ToUpdateWindowsWeeklyRecurrenceUpdateTimeOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceUpdateTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceUpdateTimeOutput)
}

func (i UpdateWindowsWeeklyRecurrenceUpdateTimeArgs) ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput() UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (i UpdateWindowsWeeklyRecurrenceUpdateTimeArgs) ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceUpdateTimeOutput).ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(ctx)
}

// UpdateWindowsWeeklyRecurrenceUpdateTimePtrInput is an input type that accepts UpdateWindowsWeeklyRecurrenceUpdateTimeArgs, UpdateWindowsWeeklyRecurrenceUpdateTimePtr and UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput values.
// You can construct a concrete instance of `UpdateWindowsWeeklyRecurrenceUpdateTimePtrInput` via:
//
//	        UpdateWindowsWeeklyRecurrenceUpdateTimeArgs{...}
//
//	or:
//
//	        nil
type UpdateWindowsWeeklyRecurrenceUpdateTimePtrInput interface {
	pulumi.Input

	ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput() UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput
	ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(context.Context) UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput
}

type updateWindowsWeeklyRecurrenceUpdateTimePtrType UpdateWindowsWeeklyRecurrenceUpdateTimeArgs

func UpdateWindowsWeeklyRecurrenceUpdateTimePtr(v *UpdateWindowsWeeklyRecurrenceUpdateTimeArgs) UpdateWindowsWeeklyRecurrenceUpdateTimePtrInput {
	return (*updateWindowsWeeklyRecurrenceUpdateTimePtrType)(v)
}

func (*updateWindowsWeeklyRecurrenceUpdateTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsWeeklyRecurrenceUpdateTime)(nil)).Elem()
}

func (i *updateWindowsWeeklyRecurrenceUpdateTimePtrType) ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput() UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return i.ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (i *updateWindowsWeeklyRecurrenceUpdateTimePtrType) ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput)
}

type UpdateWindowsWeeklyRecurrenceUpdateTimeOutput struct{ *pulumi.OutputState }

func (UpdateWindowsWeeklyRecurrenceUpdateTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceUpdateTime)(nil)).Elem()
}

func (o UpdateWindowsWeeklyRecurrenceUpdateTimeOutput) ToUpdateWindowsWeeklyRecurrenceUpdateTimeOutput() UpdateWindowsWeeklyRecurrenceUpdateTimeOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceUpdateTimeOutput) ToUpdateWindowsWeeklyRecurrenceUpdateTimeOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceUpdateTimeOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceUpdateTimeOutput) ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput() UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return o.ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(context.Background())
}

func (o UpdateWindowsWeeklyRecurrenceUpdateTimeOutput) ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UpdateWindowsWeeklyRecurrenceUpdateTime) *UpdateWindowsWeeklyRecurrenceUpdateTime {
		return &v
	}).(UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput)
}

// Duration (minutes)
func (o UpdateWindowsWeeklyRecurrenceUpdateTimeOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceUpdateTime) int { return v.Duration }).(pulumi.IntOutput)
}

// Start time (24-hour clock)
func (o UpdateWindowsWeeklyRecurrenceUpdateTimeOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceUpdateTime) string { return v.StartTime }).(pulumi.StringOutput)
}

// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
func (o UpdateWindowsWeeklyRecurrenceUpdateTimeOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v UpdateWindowsWeeklyRecurrenceUpdateTime) string { return v.TimeZone }).(pulumi.StringOutput)
}

type UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput struct{ *pulumi.OutputState }

func (UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateWindowsWeeklyRecurrenceUpdateTime)(nil)).Elem()
}

func (o UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput) ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput() UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput) ToUpdateWindowsWeeklyRecurrenceUpdateTimePtrOutputWithContext(ctx context.Context) UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput {
	return o
}

func (o UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput) Elem() UpdateWindowsWeeklyRecurrenceUpdateTimeOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceUpdateTime) UpdateWindowsWeeklyRecurrenceUpdateTime {
		if v != nil {
			return *v
		}
		var ret UpdateWindowsWeeklyRecurrenceUpdateTime
		return ret
	}).(UpdateWindowsWeeklyRecurrenceUpdateTimeOutput)
}

// Duration (minutes)
func (o UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceUpdateTime) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

// Start time (24-hour clock)
func (o UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceUpdateTime) *string {
		if v == nil {
			return nil
		}
		return &v.StartTime
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `GMT_06_00`, `GMT_12_00`, `GMT_10_00`, `GMT_07_00`, `GMT_00_00`, `GMT_11_00`, `GMT_03_00`, `GMT_01_00`, `GMT_05_00`, `GMT_09_00`, `GMT_02_00`, `GMT_04_00`, `GMT_08_00`
func (o UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UpdateWindowsWeeklyRecurrenceUpdateTime) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

type UrlBasedSamplingQueryParameters struct {
	Parameters []UrlBasedSamplingQueryParametersParameter `pulumi:"parameters"`
}

// UrlBasedSamplingQueryParametersInput is an input type that accepts UrlBasedSamplingQueryParametersArgs and UrlBasedSamplingQueryParametersOutput values.
// You can construct a concrete instance of `UrlBasedSamplingQueryParametersInput` via:
//
//	UrlBasedSamplingQueryParametersArgs{...}
type UrlBasedSamplingQueryParametersInput interface {
	pulumi.Input

	ToUrlBasedSamplingQueryParametersOutput() UrlBasedSamplingQueryParametersOutput
	ToUrlBasedSamplingQueryParametersOutputWithContext(context.Context) UrlBasedSamplingQueryParametersOutput
}

type UrlBasedSamplingQueryParametersArgs struct {
	Parameters UrlBasedSamplingQueryParametersParameterArrayInput `pulumi:"parameters"`
}

func (UrlBasedSamplingQueryParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlBasedSamplingQueryParameters)(nil)).Elem()
}

func (i UrlBasedSamplingQueryParametersArgs) ToUrlBasedSamplingQueryParametersOutput() UrlBasedSamplingQueryParametersOutput {
	return i.ToUrlBasedSamplingQueryParametersOutputWithContext(context.Background())
}

func (i UrlBasedSamplingQueryParametersArgs) ToUrlBasedSamplingQueryParametersOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlBasedSamplingQueryParametersOutput)
}

func (i UrlBasedSamplingQueryParametersArgs) ToUrlBasedSamplingQueryParametersPtrOutput() UrlBasedSamplingQueryParametersPtrOutput {
	return i.ToUrlBasedSamplingQueryParametersPtrOutputWithContext(context.Background())
}

func (i UrlBasedSamplingQueryParametersArgs) ToUrlBasedSamplingQueryParametersPtrOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlBasedSamplingQueryParametersOutput).ToUrlBasedSamplingQueryParametersPtrOutputWithContext(ctx)
}

// UrlBasedSamplingQueryParametersPtrInput is an input type that accepts UrlBasedSamplingQueryParametersArgs, UrlBasedSamplingQueryParametersPtr and UrlBasedSamplingQueryParametersPtrOutput values.
// You can construct a concrete instance of `UrlBasedSamplingQueryParametersPtrInput` via:
//
//	        UrlBasedSamplingQueryParametersArgs{...}
//
//	or:
//
//	        nil
type UrlBasedSamplingQueryParametersPtrInput interface {
	pulumi.Input

	ToUrlBasedSamplingQueryParametersPtrOutput() UrlBasedSamplingQueryParametersPtrOutput
	ToUrlBasedSamplingQueryParametersPtrOutputWithContext(context.Context) UrlBasedSamplingQueryParametersPtrOutput
}

type urlBasedSamplingQueryParametersPtrType UrlBasedSamplingQueryParametersArgs

func UrlBasedSamplingQueryParametersPtr(v *UrlBasedSamplingQueryParametersArgs) UrlBasedSamplingQueryParametersPtrInput {
	return (*urlBasedSamplingQueryParametersPtrType)(v)
}

func (*urlBasedSamplingQueryParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlBasedSamplingQueryParameters)(nil)).Elem()
}

func (i *urlBasedSamplingQueryParametersPtrType) ToUrlBasedSamplingQueryParametersPtrOutput() UrlBasedSamplingQueryParametersPtrOutput {
	return i.ToUrlBasedSamplingQueryParametersPtrOutputWithContext(context.Background())
}

func (i *urlBasedSamplingQueryParametersPtrType) ToUrlBasedSamplingQueryParametersPtrOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlBasedSamplingQueryParametersPtrOutput)
}

type UrlBasedSamplingQueryParametersOutput struct{ *pulumi.OutputState }

func (UrlBasedSamplingQueryParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlBasedSamplingQueryParameters)(nil)).Elem()
}

func (o UrlBasedSamplingQueryParametersOutput) ToUrlBasedSamplingQueryParametersOutput() UrlBasedSamplingQueryParametersOutput {
	return o
}

func (o UrlBasedSamplingQueryParametersOutput) ToUrlBasedSamplingQueryParametersOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersOutput {
	return o
}

func (o UrlBasedSamplingQueryParametersOutput) ToUrlBasedSamplingQueryParametersPtrOutput() UrlBasedSamplingQueryParametersPtrOutput {
	return o.ToUrlBasedSamplingQueryParametersPtrOutputWithContext(context.Background())
}

func (o UrlBasedSamplingQueryParametersOutput) ToUrlBasedSamplingQueryParametersPtrOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UrlBasedSamplingQueryParameters) *UrlBasedSamplingQueryParameters {
		return &v
	}).(UrlBasedSamplingQueryParametersPtrOutput)
}

func (o UrlBasedSamplingQueryParametersOutput) Parameters() UrlBasedSamplingQueryParametersParameterArrayOutput {
	return o.ApplyT(func(v UrlBasedSamplingQueryParameters) []UrlBasedSamplingQueryParametersParameter {
		return v.Parameters
	}).(UrlBasedSamplingQueryParametersParameterArrayOutput)
}

type UrlBasedSamplingQueryParametersPtrOutput struct{ *pulumi.OutputState }

func (UrlBasedSamplingQueryParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UrlBasedSamplingQueryParameters)(nil)).Elem()
}

func (o UrlBasedSamplingQueryParametersPtrOutput) ToUrlBasedSamplingQueryParametersPtrOutput() UrlBasedSamplingQueryParametersPtrOutput {
	return o
}

func (o UrlBasedSamplingQueryParametersPtrOutput) ToUrlBasedSamplingQueryParametersPtrOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersPtrOutput {
	return o
}

func (o UrlBasedSamplingQueryParametersPtrOutput) Elem() UrlBasedSamplingQueryParametersOutput {
	return o.ApplyT(func(v *UrlBasedSamplingQueryParameters) UrlBasedSamplingQueryParameters {
		if v != nil {
			return *v
		}
		var ret UrlBasedSamplingQueryParameters
		return ret
	}).(UrlBasedSamplingQueryParametersOutput)
}

func (o UrlBasedSamplingQueryParametersPtrOutput) Parameters() UrlBasedSamplingQueryParametersParameterArrayOutput {
	return o.ApplyT(func(v *UrlBasedSamplingQueryParameters) []UrlBasedSamplingQueryParametersParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(UrlBasedSamplingQueryParametersParameterArrayOutput)
}

type UrlBasedSamplingQueryParametersParameter struct {
	// Query parameter name
	Name string `pulumi:"name"`
	// Query parameter value
	Value *string `pulumi:"value"`
	// Query parameter value is undefined
	ValueIsUndefined *bool `pulumi:"valueIsUndefined"`
}

// UrlBasedSamplingQueryParametersParameterInput is an input type that accepts UrlBasedSamplingQueryParametersParameterArgs and UrlBasedSamplingQueryParametersParameterOutput values.
// You can construct a concrete instance of `UrlBasedSamplingQueryParametersParameterInput` via:
//
//	UrlBasedSamplingQueryParametersParameterArgs{...}
type UrlBasedSamplingQueryParametersParameterInput interface {
	pulumi.Input

	ToUrlBasedSamplingQueryParametersParameterOutput() UrlBasedSamplingQueryParametersParameterOutput
	ToUrlBasedSamplingQueryParametersParameterOutputWithContext(context.Context) UrlBasedSamplingQueryParametersParameterOutput
}

type UrlBasedSamplingQueryParametersParameterArgs struct {
	// Query parameter name
	Name pulumi.StringInput `pulumi:"name"`
	// Query parameter value
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Query parameter value is undefined
	ValueIsUndefined pulumi.BoolPtrInput `pulumi:"valueIsUndefined"`
}

func (UrlBasedSamplingQueryParametersParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlBasedSamplingQueryParametersParameter)(nil)).Elem()
}

func (i UrlBasedSamplingQueryParametersParameterArgs) ToUrlBasedSamplingQueryParametersParameterOutput() UrlBasedSamplingQueryParametersParameterOutput {
	return i.ToUrlBasedSamplingQueryParametersParameterOutputWithContext(context.Background())
}

func (i UrlBasedSamplingQueryParametersParameterArgs) ToUrlBasedSamplingQueryParametersParameterOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlBasedSamplingQueryParametersParameterOutput)
}

// UrlBasedSamplingQueryParametersParameterArrayInput is an input type that accepts UrlBasedSamplingQueryParametersParameterArray and UrlBasedSamplingQueryParametersParameterArrayOutput values.
// You can construct a concrete instance of `UrlBasedSamplingQueryParametersParameterArrayInput` via:
//
//	UrlBasedSamplingQueryParametersParameterArray{ UrlBasedSamplingQueryParametersParameterArgs{...} }
type UrlBasedSamplingQueryParametersParameterArrayInput interface {
	pulumi.Input

	ToUrlBasedSamplingQueryParametersParameterArrayOutput() UrlBasedSamplingQueryParametersParameterArrayOutput
	ToUrlBasedSamplingQueryParametersParameterArrayOutputWithContext(context.Context) UrlBasedSamplingQueryParametersParameterArrayOutput
}

type UrlBasedSamplingQueryParametersParameterArray []UrlBasedSamplingQueryParametersParameterInput

func (UrlBasedSamplingQueryParametersParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlBasedSamplingQueryParametersParameter)(nil)).Elem()
}

func (i UrlBasedSamplingQueryParametersParameterArray) ToUrlBasedSamplingQueryParametersParameterArrayOutput() UrlBasedSamplingQueryParametersParameterArrayOutput {
	return i.ToUrlBasedSamplingQueryParametersParameterArrayOutputWithContext(context.Background())
}

func (i UrlBasedSamplingQueryParametersParameterArray) ToUrlBasedSamplingQueryParametersParameterArrayOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UrlBasedSamplingQueryParametersParameterArrayOutput)
}

type UrlBasedSamplingQueryParametersParameterOutput struct{ *pulumi.OutputState }

func (UrlBasedSamplingQueryParametersParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UrlBasedSamplingQueryParametersParameter)(nil)).Elem()
}

func (o UrlBasedSamplingQueryParametersParameterOutput) ToUrlBasedSamplingQueryParametersParameterOutput() UrlBasedSamplingQueryParametersParameterOutput {
	return o
}

func (o UrlBasedSamplingQueryParametersParameterOutput) ToUrlBasedSamplingQueryParametersParameterOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersParameterOutput {
	return o
}

// Query parameter name
func (o UrlBasedSamplingQueryParametersParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UrlBasedSamplingQueryParametersParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Query parameter value
func (o UrlBasedSamplingQueryParametersParameterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UrlBasedSamplingQueryParametersParameter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Query parameter value is undefined
func (o UrlBasedSamplingQueryParametersParameterOutput) ValueIsUndefined() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UrlBasedSamplingQueryParametersParameter) *bool { return v.ValueIsUndefined }).(pulumi.BoolPtrOutput)
}

type UrlBasedSamplingQueryParametersParameterArrayOutput struct{ *pulumi.OutputState }

func (UrlBasedSamplingQueryParametersParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UrlBasedSamplingQueryParametersParameter)(nil)).Elem()
}

func (o UrlBasedSamplingQueryParametersParameterArrayOutput) ToUrlBasedSamplingQueryParametersParameterArrayOutput() UrlBasedSamplingQueryParametersParameterArrayOutput {
	return o
}

func (o UrlBasedSamplingQueryParametersParameterArrayOutput) ToUrlBasedSamplingQueryParametersParameterArrayOutputWithContext(ctx context.Context) UrlBasedSamplingQueryParametersParameterArrayOutput {
	return o
}

func (o UrlBasedSamplingQueryParametersParameterArrayOutput) Index(i pulumi.IntInput) UrlBasedSamplingQueryParametersParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UrlBasedSamplingQueryParametersParameter {
		return vs[0].([]UrlBasedSamplingQueryParametersParameter)[vs[1].(int)]
	}).(UrlBasedSamplingQueryParametersParameterOutput)
}

type UserActionMetricsFilters struct {
	Filters []UserActionMetricsFiltersFilter `pulumi:"filters"`
}

// UserActionMetricsFiltersInput is an input type that accepts UserActionMetricsFiltersArgs and UserActionMetricsFiltersOutput values.
// You can construct a concrete instance of `UserActionMetricsFiltersInput` via:
//
//	UserActionMetricsFiltersArgs{...}
type UserActionMetricsFiltersInput interface {
	pulumi.Input

	ToUserActionMetricsFiltersOutput() UserActionMetricsFiltersOutput
	ToUserActionMetricsFiltersOutputWithContext(context.Context) UserActionMetricsFiltersOutput
}

type UserActionMetricsFiltersArgs struct {
	Filters UserActionMetricsFiltersFilterArrayInput `pulumi:"filters"`
}

func (UserActionMetricsFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserActionMetricsFilters)(nil)).Elem()
}

func (i UserActionMetricsFiltersArgs) ToUserActionMetricsFiltersOutput() UserActionMetricsFiltersOutput {
	return i.ToUserActionMetricsFiltersOutputWithContext(context.Background())
}

func (i UserActionMetricsFiltersArgs) ToUserActionMetricsFiltersOutputWithContext(ctx context.Context) UserActionMetricsFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserActionMetricsFiltersOutput)
}

func (i UserActionMetricsFiltersArgs) ToUserActionMetricsFiltersPtrOutput() UserActionMetricsFiltersPtrOutput {
	return i.ToUserActionMetricsFiltersPtrOutputWithContext(context.Background())
}

func (i UserActionMetricsFiltersArgs) ToUserActionMetricsFiltersPtrOutputWithContext(ctx context.Context) UserActionMetricsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserActionMetricsFiltersOutput).ToUserActionMetricsFiltersPtrOutputWithContext(ctx)
}

// UserActionMetricsFiltersPtrInput is an input type that accepts UserActionMetricsFiltersArgs, UserActionMetricsFiltersPtr and UserActionMetricsFiltersPtrOutput values.
// You can construct a concrete instance of `UserActionMetricsFiltersPtrInput` via:
//
//	        UserActionMetricsFiltersArgs{...}
//
//	or:
//
//	        nil
type UserActionMetricsFiltersPtrInput interface {
	pulumi.Input

	ToUserActionMetricsFiltersPtrOutput() UserActionMetricsFiltersPtrOutput
	ToUserActionMetricsFiltersPtrOutputWithContext(context.Context) UserActionMetricsFiltersPtrOutput
}

type userActionMetricsFiltersPtrType UserActionMetricsFiltersArgs

func UserActionMetricsFiltersPtr(v *UserActionMetricsFiltersArgs) UserActionMetricsFiltersPtrInput {
	return (*userActionMetricsFiltersPtrType)(v)
}

func (*userActionMetricsFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserActionMetricsFilters)(nil)).Elem()
}

func (i *userActionMetricsFiltersPtrType) ToUserActionMetricsFiltersPtrOutput() UserActionMetricsFiltersPtrOutput {
	return i.ToUserActionMetricsFiltersPtrOutputWithContext(context.Background())
}

func (i *userActionMetricsFiltersPtrType) ToUserActionMetricsFiltersPtrOutputWithContext(ctx context.Context) UserActionMetricsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserActionMetricsFiltersPtrOutput)
}

type UserActionMetricsFiltersOutput struct{ *pulumi.OutputState }

func (UserActionMetricsFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserActionMetricsFilters)(nil)).Elem()
}

func (o UserActionMetricsFiltersOutput) ToUserActionMetricsFiltersOutput() UserActionMetricsFiltersOutput {
	return o
}

func (o UserActionMetricsFiltersOutput) ToUserActionMetricsFiltersOutputWithContext(ctx context.Context) UserActionMetricsFiltersOutput {
	return o
}

func (o UserActionMetricsFiltersOutput) ToUserActionMetricsFiltersPtrOutput() UserActionMetricsFiltersPtrOutput {
	return o.ToUserActionMetricsFiltersPtrOutputWithContext(context.Background())
}

func (o UserActionMetricsFiltersOutput) ToUserActionMetricsFiltersPtrOutputWithContext(ctx context.Context) UserActionMetricsFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserActionMetricsFilters) *UserActionMetricsFilters {
		return &v
	}).(UserActionMetricsFiltersPtrOutput)
}

func (o UserActionMetricsFiltersOutput) Filters() UserActionMetricsFiltersFilterArrayOutput {
	return o.ApplyT(func(v UserActionMetricsFilters) []UserActionMetricsFiltersFilter { return v.Filters }).(UserActionMetricsFiltersFilterArrayOutput)
}

type UserActionMetricsFiltersPtrOutput struct{ *pulumi.OutputState }

func (UserActionMetricsFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserActionMetricsFilters)(nil)).Elem()
}

func (o UserActionMetricsFiltersPtrOutput) ToUserActionMetricsFiltersPtrOutput() UserActionMetricsFiltersPtrOutput {
	return o
}

func (o UserActionMetricsFiltersPtrOutput) ToUserActionMetricsFiltersPtrOutputWithContext(ctx context.Context) UserActionMetricsFiltersPtrOutput {
	return o
}

func (o UserActionMetricsFiltersPtrOutput) Elem() UserActionMetricsFiltersOutput {
	return o.ApplyT(func(v *UserActionMetricsFilters) UserActionMetricsFilters {
		if v != nil {
			return *v
		}
		var ret UserActionMetricsFilters
		return ret
	}).(UserActionMetricsFiltersOutput)
}

func (o UserActionMetricsFiltersPtrOutput) Filters() UserActionMetricsFiltersFilterArrayOutput {
	return o.ApplyT(func(v *UserActionMetricsFilters) []UserActionMetricsFiltersFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(UserActionMetricsFiltersFilterArrayOutput)
}

type UserActionMetricsFiltersFilter struct {
	// Field name
	FieldName string `pulumi:"fieldName"`
	// Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`
	Operator string `pulumi:"operator"`
	// no documentation available
	Value *string `pulumi:"value"`
	// Values
	ValueIns []string `pulumi:"valueIns"`
}

// UserActionMetricsFiltersFilterInput is an input type that accepts UserActionMetricsFiltersFilterArgs and UserActionMetricsFiltersFilterOutput values.
// You can construct a concrete instance of `UserActionMetricsFiltersFilterInput` via:
//
//	UserActionMetricsFiltersFilterArgs{...}
type UserActionMetricsFiltersFilterInput interface {
	pulumi.Input

	ToUserActionMetricsFiltersFilterOutput() UserActionMetricsFiltersFilterOutput
	ToUserActionMetricsFiltersFilterOutputWithContext(context.Context) UserActionMetricsFiltersFilterOutput
}

type UserActionMetricsFiltersFilterArgs struct {
	// Field name
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`
	Operator pulumi.StringInput `pulumi:"operator"`
	// no documentation available
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Values
	ValueIns pulumi.StringArrayInput `pulumi:"valueIns"`
}

func (UserActionMetricsFiltersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserActionMetricsFiltersFilter)(nil)).Elem()
}

func (i UserActionMetricsFiltersFilterArgs) ToUserActionMetricsFiltersFilterOutput() UserActionMetricsFiltersFilterOutput {
	return i.ToUserActionMetricsFiltersFilterOutputWithContext(context.Background())
}

func (i UserActionMetricsFiltersFilterArgs) ToUserActionMetricsFiltersFilterOutputWithContext(ctx context.Context) UserActionMetricsFiltersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserActionMetricsFiltersFilterOutput)
}

// UserActionMetricsFiltersFilterArrayInput is an input type that accepts UserActionMetricsFiltersFilterArray and UserActionMetricsFiltersFilterArrayOutput values.
// You can construct a concrete instance of `UserActionMetricsFiltersFilterArrayInput` via:
//
//	UserActionMetricsFiltersFilterArray{ UserActionMetricsFiltersFilterArgs{...} }
type UserActionMetricsFiltersFilterArrayInput interface {
	pulumi.Input

	ToUserActionMetricsFiltersFilterArrayOutput() UserActionMetricsFiltersFilterArrayOutput
	ToUserActionMetricsFiltersFilterArrayOutputWithContext(context.Context) UserActionMetricsFiltersFilterArrayOutput
}

type UserActionMetricsFiltersFilterArray []UserActionMetricsFiltersFilterInput

func (UserActionMetricsFiltersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserActionMetricsFiltersFilter)(nil)).Elem()
}

func (i UserActionMetricsFiltersFilterArray) ToUserActionMetricsFiltersFilterArrayOutput() UserActionMetricsFiltersFilterArrayOutput {
	return i.ToUserActionMetricsFiltersFilterArrayOutputWithContext(context.Background())
}

func (i UserActionMetricsFiltersFilterArray) ToUserActionMetricsFiltersFilterArrayOutputWithContext(ctx context.Context) UserActionMetricsFiltersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserActionMetricsFiltersFilterArrayOutput)
}

type UserActionMetricsFiltersFilterOutput struct{ *pulumi.OutputState }

func (UserActionMetricsFiltersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserActionMetricsFiltersFilter)(nil)).Elem()
}

func (o UserActionMetricsFiltersFilterOutput) ToUserActionMetricsFiltersFilterOutput() UserActionMetricsFiltersFilterOutput {
	return o
}

func (o UserActionMetricsFiltersFilterOutput) ToUserActionMetricsFiltersFilterOutputWithContext(ctx context.Context) UserActionMetricsFiltersFilterOutput {
	return o
}

// Field name
func (o UserActionMetricsFiltersFilterOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v UserActionMetricsFiltersFilter) string { return v.FieldName }).(pulumi.StringOutput)
}

// Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`
func (o UserActionMetricsFiltersFilterOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UserActionMetricsFiltersFilter) string { return v.Operator }).(pulumi.StringOutput)
}

// no documentation available
func (o UserActionMetricsFiltersFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserActionMetricsFiltersFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Values
func (o UserActionMetricsFiltersFilterOutput) ValueIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserActionMetricsFiltersFilter) []string { return v.ValueIns }).(pulumi.StringArrayOutput)
}

type UserActionMetricsFiltersFilterArrayOutput struct{ *pulumi.OutputState }

func (UserActionMetricsFiltersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserActionMetricsFiltersFilter)(nil)).Elem()
}

func (o UserActionMetricsFiltersFilterArrayOutput) ToUserActionMetricsFiltersFilterArrayOutput() UserActionMetricsFiltersFilterArrayOutput {
	return o
}

func (o UserActionMetricsFiltersFilterArrayOutput) ToUserActionMetricsFiltersFilterArrayOutputWithContext(ctx context.Context) UserActionMetricsFiltersFilterArrayOutput {
	return o
}

func (o UserActionMetricsFiltersFilterArrayOutput) Index(i pulumi.IntInput) UserActionMetricsFiltersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserActionMetricsFiltersFilter {
		return vs[0].([]UserActionMetricsFiltersFilter)[vs[1].(int)]
	}).(UserActionMetricsFiltersFilterOutput)
}

type UserActionMetricsValue struct {
	// Field name
	FieldName *string `pulumi:"fieldName"`
	// Possible Values: `COUNTER`, `FIELD`
	Type string `pulumi:"type"`
}

// UserActionMetricsValueInput is an input type that accepts UserActionMetricsValueArgs and UserActionMetricsValueOutput values.
// You can construct a concrete instance of `UserActionMetricsValueInput` via:
//
//	UserActionMetricsValueArgs{...}
type UserActionMetricsValueInput interface {
	pulumi.Input

	ToUserActionMetricsValueOutput() UserActionMetricsValueOutput
	ToUserActionMetricsValueOutputWithContext(context.Context) UserActionMetricsValueOutput
}

type UserActionMetricsValueArgs struct {
	// Field name
	FieldName pulumi.StringPtrInput `pulumi:"fieldName"`
	// Possible Values: `COUNTER`, `FIELD`
	Type pulumi.StringInput `pulumi:"type"`
}

func (UserActionMetricsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserActionMetricsValue)(nil)).Elem()
}

func (i UserActionMetricsValueArgs) ToUserActionMetricsValueOutput() UserActionMetricsValueOutput {
	return i.ToUserActionMetricsValueOutputWithContext(context.Background())
}

func (i UserActionMetricsValueArgs) ToUserActionMetricsValueOutputWithContext(ctx context.Context) UserActionMetricsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserActionMetricsValueOutput)
}

func (i UserActionMetricsValueArgs) ToUserActionMetricsValuePtrOutput() UserActionMetricsValuePtrOutput {
	return i.ToUserActionMetricsValuePtrOutputWithContext(context.Background())
}

func (i UserActionMetricsValueArgs) ToUserActionMetricsValuePtrOutputWithContext(ctx context.Context) UserActionMetricsValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserActionMetricsValueOutput).ToUserActionMetricsValuePtrOutputWithContext(ctx)
}

// UserActionMetricsValuePtrInput is an input type that accepts UserActionMetricsValueArgs, UserActionMetricsValuePtr and UserActionMetricsValuePtrOutput values.
// You can construct a concrete instance of `UserActionMetricsValuePtrInput` via:
//
//	        UserActionMetricsValueArgs{...}
//
//	or:
//
//	        nil
type UserActionMetricsValuePtrInput interface {
	pulumi.Input

	ToUserActionMetricsValuePtrOutput() UserActionMetricsValuePtrOutput
	ToUserActionMetricsValuePtrOutputWithContext(context.Context) UserActionMetricsValuePtrOutput
}

type userActionMetricsValuePtrType UserActionMetricsValueArgs

func UserActionMetricsValuePtr(v *UserActionMetricsValueArgs) UserActionMetricsValuePtrInput {
	return (*userActionMetricsValuePtrType)(v)
}

func (*userActionMetricsValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserActionMetricsValue)(nil)).Elem()
}

func (i *userActionMetricsValuePtrType) ToUserActionMetricsValuePtrOutput() UserActionMetricsValuePtrOutput {
	return i.ToUserActionMetricsValuePtrOutputWithContext(context.Background())
}

func (i *userActionMetricsValuePtrType) ToUserActionMetricsValuePtrOutputWithContext(ctx context.Context) UserActionMetricsValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserActionMetricsValuePtrOutput)
}

type UserActionMetricsValueOutput struct{ *pulumi.OutputState }

func (UserActionMetricsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserActionMetricsValue)(nil)).Elem()
}

func (o UserActionMetricsValueOutput) ToUserActionMetricsValueOutput() UserActionMetricsValueOutput {
	return o
}

func (o UserActionMetricsValueOutput) ToUserActionMetricsValueOutputWithContext(ctx context.Context) UserActionMetricsValueOutput {
	return o
}

func (o UserActionMetricsValueOutput) ToUserActionMetricsValuePtrOutput() UserActionMetricsValuePtrOutput {
	return o.ToUserActionMetricsValuePtrOutputWithContext(context.Background())
}

func (o UserActionMetricsValueOutput) ToUserActionMetricsValuePtrOutputWithContext(ctx context.Context) UserActionMetricsValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserActionMetricsValue) *UserActionMetricsValue {
		return &v
	}).(UserActionMetricsValuePtrOutput)
}

// Field name
func (o UserActionMetricsValueOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserActionMetricsValue) *string { return v.FieldName }).(pulumi.StringPtrOutput)
}

// Possible Values: `COUNTER`, `FIELD`
func (o UserActionMetricsValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UserActionMetricsValue) string { return v.Type }).(pulumi.StringOutput)
}

type UserActionMetricsValuePtrOutput struct{ *pulumi.OutputState }

func (UserActionMetricsValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserActionMetricsValue)(nil)).Elem()
}

func (o UserActionMetricsValuePtrOutput) ToUserActionMetricsValuePtrOutput() UserActionMetricsValuePtrOutput {
	return o
}

func (o UserActionMetricsValuePtrOutput) ToUserActionMetricsValuePtrOutputWithContext(ctx context.Context) UserActionMetricsValuePtrOutput {
	return o
}

func (o UserActionMetricsValuePtrOutput) Elem() UserActionMetricsValueOutput {
	return o.ApplyT(func(v *UserActionMetricsValue) UserActionMetricsValue {
		if v != nil {
			return *v
		}
		var ret UserActionMetricsValue
		return ret
	}).(UserActionMetricsValueOutput)
}

// Field name
func (o UserActionMetricsValuePtrOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserActionMetricsValue) *string {
		if v == nil {
			return nil
		}
		return v.FieldName
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `COUNTER`, `FIELD`
func (o UserActionMetricsValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserActionMetricsValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type UserGroupPermissions struct {
	// A permission granted to one or multiple environments
	Grants []UserGroupPermissionsGrant `pulumi:"grants"`
}

// UserGroupPermissionsInput is an input type that accepts UserGroupPermissionsArgs and UserGroupPermissionsOutput values.
// You can construct a concrete instance of `UserGroupPermissionsInput` via:
//
//	UserGroupPermissionsArgs{...}
type UserGroupPermissionsInput interface {
	pulumi.Input

	ToUserGroupPermissionsOutput() UserGroupPermissionsOutput
	ToUserGroupPermissionsOutputWithContext(context.Context) UserGroupPermissionsOutput
}

type UserGroupPermissionsArgs struct {
	// A permission granted to one or multiple environments
	Grants UserGroupPermissionsGrantArrayInput `pulumi:"grants"`
}

func (UserGroupPermissionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPermissions)(nil)).Elem()
}

func (i UserGroupPermissionsArgs) ToUserGroupPermissionsOutput() UserGroupPermissionsOutput {
	return i.ToUserGroupPermissionsOutputWithContext(context.Background())
}

func (i UserGroupPermissionsArgs) ToUserGroupPermissionsOutputWithContext(ctx context.Context) UserGroupPermissionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsOutput)
}

func (i UserGroupPermissionsArgs) ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput {
	return i.ToUserGroupPermissionsPtrOutputWithContext(context.Background())
}

func (i UserGroupPermissionsArgs) ToUserGroupPermissionsPtrOutputWithContext(ctx context.Context) UserGroupPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsOutput).ToUserGroupPermissionsPtrOutputWithContext(ctx)
}

// UserGroupPermissionsPtrInput is an input type that accepts UserGroupPermissionsArgs, UserGroupPermissionsPtr and UserGroupPermissionsPtrOutput values.
// You can construct a concrete instance of `UserGroupPermissionsPtrInput` via:
//
//	        UserGroupPermissionsArgs{...}
//
//	or:
//
//	        nil
type UserGroupPermissionsPtrInput interface {
	pulumi.Input

	ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput
	ToUserGroupPermissionsPtrOutputWithContext(context.Context) UserGroupPermissionsPtrOutput
}

type userGroupPermissionsPtrType UserGroupPermissionsArgs

func UserGroupPermissionsPtr(v *UserGroupPermissionsArgs) UserGroupPermissionsPtrInput {
	return (*userGroupPermissionsPtrType)(v)
}

func (*userGroupPermissionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGroupPermissions)(nil)).Elem()
}

func (i *userGroupPermissionsPtrType) ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput {
	return i.ToUserGroupPermissionsPtrOutputWithContext(context.Background())
}

func (i *userGroupPermissionsPtrType) ToUserGroupPermissionsPtrOutputWithContext(ctx context.Context) UserGroupPermissionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsPtrOutput)
}

type UserGroupPermissionsOutput struct{ *pulumi.OutputState }

func (UserGroupPermissionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPermissions)(nil)).Elem()
}

func (o UserGroupPermissionsOutput) ToUserGroupPermissionsOutput() UserGroupPermissionsOutput {
	return o
}

func (o UserGroupPermissionsOutput) ToUserGroupPermissionsOutputWithContext(ctx context.Context) UserGroupPermissionsOutput {
	return o
}

func (o UserGroupPermissionsOutput) ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput {
	return o.ToUserGroupPermissionsPtrOutputWithContext(context.Background())
}

func (o UserGroupPermissionsOutput) ToUserGroupPermissionsPtrOutputWithContext(ctx context.Context) UserGroupPermissionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserGroupPermissions) *UserGroupPermissions {
		return &v
	}).(UserGroupPermissionsPtrOutput)
}

// A permission granted to one or multiple environments
func (o UserGroupPermissionsOutput) Grants() UserGroupPermissionsGrantArrayOutput {
	return o.ApplyT(func(v UserGroupPermissions) []UserGroupPermissionsGrant { return v.Grants }).(UserGroupPermissionsGrantArrayOutput)
}

type UserGroupPermissionsPtrOutput struct{ *pulumi.OutputState }

func (UserGroupPermissionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserGroupPermissions)(nil)).Elem()
}

func (o UserGroupPermissionsPtrOutput) ToUserGroupPermissionsPtrOutput() UserGroupPermissionsPtrOutput {
	return o
}

func (o UserGroupPermissionsPtrOutput) ToUserGroupPermissionsPtrOutputWithContext(ctx context.Context) UserGroupPermissionsPtrOutput {
	return o
}

func (o UserGroupPermissionsPtrOutput) Elem() UserGroupPermissionsOutput {
	return o.ApplyT(func(v *UserGroupPermissions) UserGroupPermissions {
		if v != nil {
			return *v
		}
		var ret UserGroupPermissions
		return ret
	}).(UserGroupPermissionsOutput)
}

// A permission granted to one or multiple environments
func (o UserGroupPermissionsPtrOutput) Grants() UserGroupPermissionsGrantArrayOutput {
	return o.ApplyT(func(v *UserGroupPermissions) []UserGroupPermissionsGrant {
		if v == nil {
			return nil
		}
		return v.Grants
	}).(UserGroupPermissionsGrantArrayOutput)
}

type UserGroupPermissionsGrant struct {
	// The ids of the environments this permission grants the user access to.
	Environments []string `pulumi:"environments"`
	// The permission. Possible values are `VIEWER`, `MANAGE_SETTINGS`, `AGENT_INSTALL`, `LOG_VIEWER`, `VIEW_SENSITIVE_REQUEST_DATA`, `CONFIGURE_REQUEST_CAPTURE_DATA`, `REPLAY_SESSION_DATA`, `REPLAY_SESSION_DATA_WITHOUT_MASKING`, `MANAGE_SECURITY_PROBLEMS` and `MANAGE_SUPPORT_TICKETS`.
	Permission string `pulumi:"permission"`
}

// UserGroupPermissionsGrantInput is an input type that accepts UserGroupPermissionsGrantArgs and UserGroupPermissionsGrantOutput values.
// You can construct a concrete instance of `UserGroupPermissionsGrantInput` via:
//
//	UserGroupPermissionsGrantArgs{...}
type UserGroupPermissionsGrantInput interface {
	pulumi.Input

	ToUserGroupPermissionsGrantOutput() UserGroupPermissionsGrantOutput
	ToUserGroupPermissionsGrantOutputWithContext(context.Context) UserGroupPermissionsGrantOutput
}

type UserGroupPermissionsGrantArgs struct {
	// The ids of the environments this permission grants the user access to.
	Environments pulumi.StringArrayInput `pulumi:"environments"`
	// The permission. Possible values are `VIEWER`, `MANAGE_SETTINGS`, `AGENT_INSTALL`, `LOG_VIEWER`, `VIEW_SENSITIVE_REQUEST_DATA`, `CONFIGURE_REQUEST_CAPTURE_DATA`, `REPLAY_SESSION_DATA`, `REPLAY_SESSION_DATA_WITHOUT_MASKING`, `MANAGE_SECURITY_PROBLEMS` and `MANAGE_SUPPORT_TICKETS`.
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (UserGroupPermissionsGrantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPermissionsGrant)(nil)).Elem()
}

func (i UserGroupPermissionsGrantArgs) ToUserGroupPermissionsGrantOutput() UserGroupPermissionsGrantOutput {
	return i.ToUserGroupPermissionsGrantOutputWithContext(context.Background())
}

func (i UserGroupPermissionsGrantArgs) ToUserGroupPermissionsGrantOutputWithContext(ctx context.Context) UserGroupPermissionsGrantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsGrantOutput)
}

// UserGroupPermissionsGrantArrayInput is an input type that accepts UserGroupPermissionsGrantArray and UserGroupPermissionsGrantArrayOutput values.
// You can construct a concrete instance of `UserGroupPermissionsGrantArrayInput` via:
//
//	UserGroupPermissionsGrantArray{ UserGroupPermissionsGrantArgs{...} }
type UserGroupPermissionsGrantArrayInput interface {
	pulumi.Input

	ToUserGroupPermissionsGrantArrayOutput() UserGroupPermissionsGrantArrayOutput
	ToUserGroupPermissionsGrantArrayOutputWithContext(context.Context) UserGroupPermissionsGrantArrayOutput
}

type UserGroupPermissionsGrantArray []UserGroupPermissionsGrantInput

func (UserGroupPermissionsGrantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupPermissionsGrant)(nil)).Elem()
}

func (i UserGroupPermissionsGrantArray) ToUserGroupPermissionsGrantArrayOutput() UserGroupPermissionsGrantArrayOutput {
	return i.ToUserGroupPermissionsGrantArrayOutputWithContext(context.Background())
}

func (i UserGroupPermissionsGrantArray) ToUserGroupPermissionsGrantArrayOutputWithContext(ctx context.Context) UserGroupPermissionsGrantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserGroupPermissionsGrantArrayOutput)
}

type UserGroupPermissionsGrantOutput struct{ *pulumi.OutputState }

func (UserGroupPermissionsGrantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserGroupPermissionsGrant)(nil)).Elem()
}

func (o UserGroupPermissionsGrantOutput) ToUserGroupPermissionsGrantOutput() UserGroupPermissionsGrantOutput {
	return o
}

func (o UserGroupPermissionsGrantOutput) ToUserGroupPermissionsGrantOutputWithContext(ctx context.Context) UserGroupPermissionsGrantOutput {
	return o
}

// The ids of the environments this permission grants the user access to.
func (o UserGroupPermissionsGrantOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserGroupPermissionsGrant) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

// The permission. Possible values are `VIEWER`, `MANAGE_SETTINGS`, `AGENT_INSTALL`, `LOG_VIEWER`, `VIEW_SENSITIVE_REQUEST_DATA`, `CONFIGURE_REQUEST_CAPTURE_DATA`, `REPLAY_SESSION_DATA`, `REPLAY_SESSION_DATA_WITHOUT_MASKING`, `MANAGE_SECURITY_PROBLEMS` and `MANAGE_SUPPORT_TICKETS`.
func (o UserGroupPermissionsGrantOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v UserGroupPermissionsGrant) string { return v.Permission }).(pulumi.StringOutput)
}

type UserGroupPermissionsGrantArrayOutput struct{ *pulumi.OutputState }

func (UserGroupPermissionsGrantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserGroupPermissionsGrant)(nil)).Elem()
}

func (o UserGroupPermissionsGrantArrayOutput) ToUserGroupPermissionsGrantArrayOutput() UserGroupPermissionsGrantArrayOutput {
	return o
}

func (o UserGroupPermissionsGrantArrayOutput) ToUserGroupPermissionsGrantArrayOutputWithContext(ctx context.Context) UserGroupPermissionsGrantArrayOutput {
	return o
}

func (o UserGroupPermissionsGrantArrayOutput) Index(i pulumi.IntInput) UserGroupPermissionsGrantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserGroupPermissionsGrant {
		return vs[0].([]UserGroupPermissionsGrant)[vs[1].(int)]
	}).(UserGroupPermissionsGrantOutput)
}

type UserSessionMetricsFilters struct {
	Filters []UserSessionMetricsFiltersFilter `pulumi:"filters"`
}

// UserSessionMetricsFiltersInput is an input type that accepts UserSessionMetricsFiltersArgs and UserSessionMetricsFiltersOutput values.
// You can construct a concrete instance of `UserSessionMetricsFiltersInput` via:
//
//	UserSessionMetricsFiltersArgs{...}
type UserSessionMetricsFiltersInput interface {
	pulumi.Input

	ToUserSessionMetricsFiltersOutput() UserSessionMetricsFiltersOutput
	ToUserSessionMetricsFiltersOutputWithContext(context.Context) UserSessionMetricsFiltersOutput
}

type UserSessionMetricsFiltersArgs struct {
	Filters UserSessionMetricsFiltersFilterArrayInput `pulumi:"filters"`
}

func (UserSessionMetricsFiltersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSessionMetricsFilters)(nil)).Elem()
}

func (i UserSessionMetricsFiltersArgs) ToUserSessionMetricsFiltersOutput() UserSessionMetricsFiltersOutput {
	return i.ToUserSessionMetricsFiltersOutputWithContext(context.Background())
}

func (i UserSessionMetricsFiltersArgs) ToUserSessionMetricsFiltersOutputWithContext(ctx context.Context) UserSessionMetricsFiltersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSessionMetricsFiltersOutput)
}

func (i UserSessionMetricsFiltersArgs) ToUserSessionMetricsFiltersPtrOutput() UserSessionMetricsFiltersPtrOutput {
	return i.ToUserSessionMetricsFiltersPtrOutputWithContext(context.Background())
}

func (i UserSessionMetricsFiltersArgs) ToUserSessionMetricsFiltersPtrOutputWithContext(ctx context.Context) UserSessionMetricsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSessionMetricsFiltersOutput).ToUserSessionMetricsFiltersPtrOutputWithContext(ctx)
}

// UserSessionMetricsFiltersPtrInput is an input type that accepts UserSessionMetricsFiltersArgs, UserSessionMetricsFiltersPtr and UserSessionMetricsFiltersPtrOutput values.
// You can construct a concrete instance of `UserSessionMetricsFiltersPtrInput` via:
//
//	        UserSessionMetricsFiltersArgs{...}
//
//	or:
//
//	        nil
type UserSessionMetricsFiltersPtrInput interface {
	pulumi.Input

	ToUserSessionMetricsFiltersPtrOutput() UserSessionMetricsFiltersPtrOutput
	ToUserSessionMetricsFiltersPtrOutputWithContext(context.Context) UserSessionMetricsFiltersPtrOutput
}

type userSessionMetricsFiltersPtrType UserSessionMetricsFiltersArgs

func UserSessionMetricsFiltersPtr(v *UserSessionMetricsFiltersArgs) UserSessionMetricsFiltersPtrInput {
	return (*userSessionMetricsFiltersPtrType)(v)
}

func (*userSessionMetricsFiltersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSessionMetricsFilters)(nil)).Elem()
}

func (i *userSessionMetricsFiltersPtrType) ToUserSessionMetricsFiltersPtrOutput() UserSessionMetricsFiltersPtrOutput {
	return i.ToUserSessionMetricsFiltersPtrOutputWithContext(context.Background())
}

func (i *userSessionMetricsFiltersPtrType) ToUserSessionMetricsFiltersPtrOutputWithContext(ctx context.Context) UserSessionMetricsFiltersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSessionMetricsFiltersPtrOutput)
}

type UserSessionMetricsFiltersOutput struct{ *pulumi.OutputState }

func (UserSessionMetricsFiltersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSessionMetricsFilters)(nil)).Elem()
}

func (o UserSessionMetricsFiltersOutput) ToUserSessionMetricsFiltersOutput() UserSessionMetricsFiltersOutput {
	return o
}

func (o UserSessionMetricsFiltersOutput) ToUserSessionMetricsFiltersOutputWithContext(ctx context.Context) UserSessionMetricsFiltersOutput {
	return o
}

func (o UserSessionMetricsFiltersOutput) ToUserSessionMetricsFiltersPtrOutput() UserSessionMetricsFiltersPtrOutput {
	return o.ToUserSessionMetricsFiltersPtrOutputWithContext(context.Background())
}

func (o UserSessionMetricsFiltersOutput) ToUserSessionMetricsFiltersPtrOutputWithContext(ctx context.Context) UserSessionMetricsFiltersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserSessionMetricsFilters) *UserSessionMetricsFilters {
		return &v
	}).(UserSessionMetricsFiltersPtrOutput)
}

func (o UserSessionMetricsFiltersOutput) Filters() UserSessionMetricsFiltersFilterArrayOutput {
	return o.ApplyT(func(v UserSessionMetricsFilters) []UserSessionMetricsFiltersFilter { return v.Filters }).(UserSessionMetricsFiltersFilterArrayOutput)
}

type UserSessionMetricsFiltersPtrOutput struct{ *pulumi.OutputState }

func (UserSessionMetricsFiltersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSessionMetricsFilters)(nil)).Elem()
}

func (o UserSessionMetricsFiltersPtrOutput) ToUserSessionMetricsFiltersPtrOutput() UserSessionMetricsFiltersPtrOutput {
	return o
}

func (o UserSessionMetricsFiltersPtrOutput) ToUserSessionMetricsFiltersPtrOutputWithContext(ctx context.Context) UserSessionMetricsFiltersPtrOutput {
	return o
}

func (o UserSessionMetricsFiltersPtrOutput) Elem() UserSessionMetricsFiltersOutput {
	return o.ApplyT(func(v *UserSessionMetricsFilters) UserSessionMetricsFilters {
		if v != nil {
			return *v
		}
		var ret UserSessionMetricsFilters
		return ret
	}).(UserSessionMetricsFiltersOutput)
}

func (o UserSessionMetricsFiltersPtrOutput) Filters() UserSessionMetricsFiltersFilterArrayOutput {
	return o.ApplyT(func(v *UserSessionMetricsFilters) []UserSessionMetricsFiltersFilter {
		if v == nil {
			return nil
		}
		return v.Filters
	}).(UserSessionMetricsFiltersFilterArrayOutput)
}

type UserSessionMetricsFiltersFilter struct {
	// Field name
	FieldName string `pulumi:"fieldName"`
	// Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`
	Operator string `pulumi:"operator"`
	// no documentation available
	Value *string `pulumi:"value"`
	// Values
	ValueIns []string `pulumi:"valueIns"`
}

// UserSessionMetricsFiltersFilterInput is an input type that accepts UserSessionMetricsFiltersFilterArgs and UserSessionMetricsFiltersFilterOutput values.
// You can construct a concrete instance of `UserSessionMetricsFiltersFilterInput` via:
//
//	UserSessionMetricsFiltersFilterArgs{...}
type UserSessionMetricsFiltersFilterInput interface {
	pulumi.Input

	ToUserSessionMetricsFiltersFilterOutput() UserSessionMetricsFiltersFilterOutput
	ToUserSessionMetricsFiltersFilterOutputWithContext(context.Context) UserSessionMetricsFiltersFilterOutput
}

type UserSessionMetricsFiltersFilterArgs struct {
	// Field name
	FieldName pulumi.StringInput `pulumi:"fieldName"`
	// Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`
	Operator pulumi.StringInput `pulumi:"operator"`
	// no documentation available
	Value pulumi.StringPtrInput `pulumi:"value"`
	// Values
	ValueIns pulumi.StringArrayInput `pulumi:"valueIns"`
}

func (UserSessionMetricsFiltersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSessionMetricsFiltersFilter)(nil)).Elem()
}

func (i UserSessionMetricsFiltersFilterArgs) ToUserSessionMetricsFiltersFilterOutput() UserSessionMetricsFiltersFilterOutput {
	return i.ToUserSessionMetricsFiltersFilterOutputWithContext(context.Background())
}

func (i UserSessionMetricsFiltersFilterArgs) ToUserSessionMetricsFiltersFilterOutputWithContext(ctx context.Context) UserSessionMetricsFiltersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSessionMetricsFiltersFilterOutput)
}

// UserSessionMetricsFiltersFilterArrayInput is an input type that accepts UserSessionMetricsFiltersFilterArray and UserSessionMetricsFiltersFilterArrayOutput values.
// You can construct a concrete instance of `UserSessionMetricsFiltersFilterArrayInput` via:
//
//	UserSessionMetricsFiltersFilterArray{ UserSessionMetricsFiltersFilterArgs{...} }
type UserSessionMetricsFiltersFilterArrayInput interface {
	pulumi.Input

	ToUserSessionMetricsFiltersFilterArrayOutput() UserSessionMetricsFiltersFilterArrayOutput
	ToUserSessionMetricsFiltersFilterArrayOutputWithContext(context.Context) UserSessionMetricsFiltersFilterArrayOutput
}

type UserSessionMetricsFiltersFilterArray []UserSessionMetricsFiltersFilterInput

func (UserSessionMetricsFiltersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSessionMetricsFiltersFilter)(nil)).Elem()
}

func (i UserSessionMetricsFiltersFilterArray) ToUserSessionMetricsFiltersFilterArrayOutput() UserSessionMetricsFiltersFilterArrayOutput {
	return i.ToUserSessionMetricsFiltersFilterArrayOutputWithContext(context.Background())
}

func (i UserSessionMetricsFiltersFilterArray) ToUserSessionMetricsFiltersFilterArrayOutputWithContext(ctx context.Context) UserSessionMetricsFiltersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSessionMetricsFiltersFilterArrayOutput)
}

type UserSessionMetricsFiltersFilterOutput struct{ *pulumi.OutputState }

func (UserSessionMetricsFiltersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSessionMetricsFiltersFilter)(nil)).Elem()
}

func (o UserSessionMetricsFiltersFilterOutput) ToUserSessionMetricsFiltersFilterOutput() UserSessionMetricsFiltersFilterOutput {
	return o
}

func (o UserSessionMetricsFiltersFilterOutput) ToUserSessionMetricsFiltersFilterOutputWithContext(ctx context.Context) UserSessionMetricsFiltersFilterOutput {
	return o
}

// Field name
func (o UserSessionMetricsFiltersFilterOutput) FieldName() pulumi.StringOutput {
	return o.ApplyT(func(v UserSessionMetricsFiltersFilter) string { return v.FieldName }).(pulumi.StringOutput)
}

// Possible Values: `EQUALS`, `GREATER_THAN`, `GREATER_THAN_OR_EQUAL_TO`, `IN`, `IS_NOT_NULL`, `IS_NULL`, `LESS_THAN`, `LESS_THAN_OR_EQUAL_TO`, `LIKE`, `NOT_EQUAL`, `NOT_LIKE`, `STARTS_WITH`
func (o UserSessionMetricsFiltersFilterOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v UserSessionMetricsFiltersFilter) string { return v.Operator }).(pulumi.StringOutput)
}

// no documentation available
func (o UserSessionMetricsFiltersFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSessionMetricsFiltersFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

// Values
func (o UserSessionMetricsFiltersFilterOutput) ValueIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserSessionMetricsFiltersFilter) []string { return v.ValueIns }).(pulumi.StringArrayOutput)
}

type UserSessionMetricsFiltersFilterArrayOutput struct{ *pulumi.OutputState }

func (UserSessionMetricsFiltersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserSessionMetricsFiltersFilter)(nil)).Elem()
}

func (o UserSessionMetricsFiltersFilterArrayOutput) ToUserSessionMetricsFiltersFilterArrayOutput() UserSessionMetricsFiltersFilterArrayOutput {
	return o
}

func (o UserSessionMetricsFiltersFilterArrayOutput) ToUserSessionMetricsFiltersFilterArrayOutputWithContext(ctx context.Context) UserSessionMetricsFiltersFilterArrayOutput {
	return o
}

func (o UserSessionMetricsFiltersFilterArrayOutput) Index(i pulumi.IntInput) UserSessionMetricsFiltersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserSessionMetricsFiltersFilter {
		return vs[0].([]UserSessionMetricsFiltersFilter)[vs[1].(int)]
	}).(UserSessionMetricsFiltersFilterOutput)
}

type UserSessionMetricsValue struct {
	// Field name
	FieldName *string `pulumi:"fieldName"`
	// Possible Values: `COUNTER`, `FIELD`
	Type string `pulumi:"type"`
}

// UserSessionMetricsValueInput is an input type that accepts UserSessionMetricsValueArgs and UserSessionMetricsValueOutput values.
// You can construct a concrete instance of `UserSessionMetricsValueInput` via:
//
//	UserSessionMetricsValueArgs{...}
type UserSessionMetricsValueInput interface {
	pulumi.Input

	ToUserSessionMetricsValueOutput() UserSessionMetricsValueOutput
	ToUserSessionMetricsValueOutputWithContext(context.Context) UserSessionMetricsValueOutput
}

type UserSessionMetricsValueArgs struct {
	// Field name
	FieldName pulumi.StringPtrInput `pulumi:"fieldName"`
	// Possible Values: `COUNTER`, `FIELD`
	Type pulumi.StringInput `pulumi:"type"`
}

func (UserSessionMetricsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSessionMetricsValue)(nil)).Elem()
}

func (i UserSessionMetricsValueArgs) ToUserSessionMetricsValueOutput() UserSessionMetricsValueOutput {
	return i.ToUserSessionMetricsValueOutputWithContext(context.Background())
}

func (i UserSessionMetricsValueArgs) ToUserSessionMetricsValueOutputWithContext(ctx context.Context) UserSessionMetricsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSessionMetricsValueOutput)
}

func (i UserSessionMetricsValueArgs) ToUserSessionMetricsValuePtrOutput() UserSessionMetricsValuePtrOutput {
	return i.ToUserSessionMetricsValuePtrOutputWithContext(context.Background())
}

func (i UserSessionMetricsValueArgs) ToUserSessionMetricsValuePtrOutputWithContext(ctx context.Context) UserSessionMetricsValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSessionMetricsValueOutput).ToUserSessionMetricsValuePtrOutputWithContext(ctx)
}

// UserSessionMetricsValuePtrInput is an input type that accepts UserSessionMetricsValueArgs, UserSessionMetricsValuePtr and UserSessionMetricsValuePtrOutput values.
// You can construct a concrete instance of `UserSessionMetricsValuePtrInput` via:
//
//	        UserSessionMetricsValueArgs{...}
//
//	or:
//
//	        nil
type UserSessionMetricsValuePtrInput interface {
	pulumi.Input

	ToUserSessionMetricsValuePtrOutput() UserSessionMetricsValuePtrOutput
	ToUserSessionMetricsValuePtrOutputWithContext(context.Context) UserSessionMetricsValuePtrOutput
}

type userSessionMetricsValuePtrType UserSessionMetricsValueArgs

func UserSessionMetricsValuePtr(v *UserSessionMetricsValueArgs) UserSessionMetricsValuePtrInput {
	return (*userSessionMetricsValuePtrType)(v)
}

func (*userSessionMetricsValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSessionMetricsValue)(nil)).Elem()
}

func (i *userSessionMetricsValuePtrType) ToUserSessionMetricsValuePtrOutput() UserSessionMetricsValuePtrOutput {
	return i.ToUserSessionMetricsValuePtrOutputWithContext(context.Background())
}

func (i *userSessionMetricsValuePtrType) ToUserSessionMetricsValuePtrOutputWithContext(ctx context.Context) UserSessionMetricsValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserSessionMetricsValuePtrOutput)
}

type UserSessionMetricsValueOutput struct{ *pulumi.OutputState }

func (UserSessionMetricsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserSessionMetricsValue)(nil)).Elem()
}

func (o UserSessionMetricsValueOutput) ToUserSessionMetricsValueOutput() UserSessionMetricsValueOutput {
	return o
}

func (o UserSessionMetricsValueOutput) ToUserSessionMetricsValueOutputWithContext(ctx context.Context) UserSessionMetricsValueOutput {
	return o
}

func (o UserSessionMetricsValueOutput) ToUserSessionMetricsValuePtrOutput() UserSessionMetricsValuePtrOutput {
	return o.ToUserSessionMetricsValuePtrOutputWithContext(context.Background())
}

func (o UserSessionMetricsValueOutput) ToUserSessionMetricsValuePtrOutputWithContext(ctx context.Context) UserSessionMetricsValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserSessionMetricsValue) *UserSessionMetricsValue {
		return &v
	}).(UserSessionMetricsValuePtrOutput)
}

// Field name
func (o UserSessionMetricsValueOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserSessionMetricsValue) *string { return v.FieldName }).(pulumi.StringPtrOutput)
}

// Possible Values: `COUNTER`, `FIELD`
func (o UserSessionMetricsValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v UserSessionMetricsValue) string { return v.Type }).(pulumi.StringOutput)
}

type UserSessionMetricsValuePtrOutput struct{ *pulumi.OutputState }

func (UserSessionMetricsValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserSessionMetricsValue)(nil)).Elem()
}

func (o UserSessionMetricsValuePtrOutput) ToUserSessionMetricsValuePtrOutput() UserSessionMetricsValuePtrOutput {
	return o
}

func (o UserSessionMetricsValuePtrOutput) ToUserSessionMetricsValuePtrOutputWithContext(ctx context.Context) UserSessionMetricsValuePtrOutput {
	return o
}

func (o UserSessionMetricsValuePtrOutput) Elem() UserSessionMetricsValueOutput {
	return o.ApplyT(func(v *UserSessionMetricsValue) UserSessionMetricsValue {
		if v != nil {
			return *v
		}
		var ret UserSessionMetricsValue
		return ret
	}).(UserSessionMetricsValueOutput)
}

// Field name
func (o UserSessionMetricsValuePtrOutput) FieldName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSessionMetricsValue) *string {
		if v == nil {
			return nil
		}
		return v.FieldName
	}).(pulumi.StringPtrOutput)
}

// Possible Values: `COUNTER`, `FIELD`
func (o UserSessionMetricsValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserSessionMetricsValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type VmwareAnomaliesDroppedPacketsDetection struct {
	// Alert if the condition is met in 3 out of 5 samples
	CustomThresholds *VmwareAnomaliesDroppedPacketsDetectionCustomThresholds `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// VmwareAnomaliesDroppedPacketsDetectionInput is an input type that accepts VmwareAnomaliesDroppedPacketsDetectionArgs and VmwareAnomaliesDroppedPacketsDetectionOutput values.
// You can construct a concrete instance of `VmwareAnomaliesDroppedPacketsDetectionInput` via:
//
//	VmwareAnomaliesDroppedPacketsDetectionArgs{...}
type VmwareAnomaliesDroppedPacketsDetectionInput interface {
	pulumi.Input

	ToVmwareAnomaliesDroppedPacketsDetectionOutput() VmwareAnomaliesDroppedPacketsDetectionOutput
	ToVmwareAnomaliesDroppedPacketsDetectionOutputWithContext(context.Context) VmwareAnomaliesDroppedPacketsDetectionOutput
}

type VmwareAnomaliesDroppedPacketsDetectionArgs struct {
	// Alert if the condition is met in 3 out of 5 samples
	CustomThresholds VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrInput `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VmwareAnomaliesDroppedPacketsDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesDroppedPacketsDetection)(nil)).Elem()
}

func (i VmwareAnomaliesDroppedPacketsDetectionArgs) ToVmwareAnomaliesDroppedPacketsDetectionOutput() VmwareAnomaliesDroppedPacketsDetectionOutput {
	return i.ToVmwareAnomaliesDroppedPacketsDetectionOutputWithContext(context.Background())
}

func (i VmwareAnomaliesDroppedPacketsDetectionArgs) ToVmwareAnomaliesDroppedPacketsDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesDroppedPacketsDetectionOutput)
}

func (i VmwareAnomaliesDroppedPacketsDetectionArgs) ToVmwareAnomaliesDroppedPacketsDetectionPtrOutput() VmwareAnomaliesDroppedPacketsDetectionPtrOutput {
	return i.ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesDroppedPacketsDetectionArgs) ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesDroppedPacketsDetectionOutput).ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(ctx)
}

// VmwareAnomaliesDroppedPacketsDetectionPtrInput is an input type that accepts VmwareAnomaliesDroppedPacketsDetectionArgs, VmwareAnomaliesDroppedPacketsDetectionPtr and VmwareAnomaliesDroppedPacketsDetectionPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesDroppedPacketsDetectionPtrInput` via:
//
//	        VmwareAnomaliesDroppedPacketsDetectionArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesDroppedPacketsDetectionPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesDroppedPacketsDetectionPtrOutput() VmwareAnomaliesDroppedPacketsDetectionPtrOutput
	ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(context.Context) VmwareAnomaliesDroppedPacketsDetectionPtrOutput
}

type vmwareAnomaliesDroppedPacketsDetectionPtrType VmwareAnomaliesDroppedPacketsDetectionArgs

func VmwareAnomaliesDroppedPacketsDetectionPtr(v *VmwareAnomaliesDroppedPacketsDetectionArgs) VmwareAnomaliesDroppedPacketsDetectionPtrInput {
	return (*vmwareAnomaliesDroppedPacketsDetectionPtrType)(v)
}

func (*vmwareAnomaliesDroppedPacketsDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesDroppedPacketsDetection)(nil)).Elem()
}

func (i *vmwareAnomaliesDroppedPacketsDetectionPtrType) ToVmwareAnomaliesDroppedPacketsDetectionPtrOutput() VmwareAnomaliesDroppedPacketsDetectionPtrOutput {
	return i.ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesDroppedPacketsDetectionPtrType) ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesDroppedPacketsDetectionPtrOutput)
}

type VmwareAnomaliesDroppedPacketsDetectionOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesDroppedPacketsDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesDroppedPacketsDetection)(nil)).Elem()
}

func (o VmwareAnomaliesDroppedPacketsDetectionOutput) ToVmwareAnomaliesDroppedPacketsDetectionOutput() VmwareAnomaliesDroppedPacketsDetectionOutput {
	return o
}

func (o VmwareAnomaliesDroppedPacketsDetectionOutput) ToVmwareAnomaliesDroppedPacketsDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionOutput {
	return o
}

func (o VmwareAnomaliesDroppedPacketsDetectionOutput) ToVmwareAnomaliesDroppedPacketsDetectionPtrOutput() VmwareAnomaliesDroppedPacketsDetectionPtrOutput {
	return o.ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesDroppedPacketsDetectionOutput) ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesDroppedPacketsDetection) *VmwareAnomaliesDroppedPacketsDetection {
		return &v
	}).(VmwareAnomaliesDroppedPacketsDetectionPtrOutput)
}

// Alert if the condition is met in 3 out of 5 samples
func (o VmwareAnomaliesDroppedPacketsDetectionOutput) CustomThresholds() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesDroppedPacketsDetection) *VmwareAnomaliesDroppedPacketsDetectionCustomThresholds {
		return v.CustomThresholds
	}).(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesDroppedPacketsDetectionOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesDroppedPacketsDetection) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesDroppedPacketsDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VmwareAnomaliesDroppedPacketsDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VmwareAnomaliesDroppedPacketsDetectionPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesDroppedPacketsDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesDroppedPacketsDetection)(nil)).Elem()
}

func (o VmwareAnomaliesDroppedPacketsDetectionPtrOutput) ToVmwareAnomaliesDroppedPacketsDetectionPtrOutput() VmwareAnomaliesDroppedPacketsDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesDroppedPacketsDetectionPtrOutput) ToVmwareAnomaliesDroppedPacketsDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesDroppedPacketsDetectionPtrOutput) Elem() VmwareAnomaliesDroppedPacketsDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomaliesDroppedPacketsDetection) VmwareAnomaliesDroppedPacketsDetection {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesDroppedPacketsDetection
		return ret
	}).(VmwareAnomaliesDroppedPacketsDetectionOutput)
}

// Alert if the condition is met in 3 out of 5 samples
func (o VmwareAnomaliesDroppedPacketsDetectionPtrOutput) CustomThresholds() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesDroppedPacketsDetection) *VmwareAnomaliesDroppedPacketsDetectionCustomThresholds {
		if v == nil {
			return nil
		}
		return v.CustomThresholds
	}).(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesDroppedPacketsDetectionPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesDroppedPacketsDetection) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesDroppedPacketsDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesDroppedPacketsDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VmwareAnomaliesDroppedPacketsDetectionCustomThresholds struct {
	// Receive/transmit dropped packets rate on NIC is higher than
	DroppedPacketsPerSecond int `pulumi:"droppedPacketsPerSecond"`
}

// VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsInput is an input type that accepts VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs and VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput values.
// You can construct a concrete instance of `VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsInput` via:
//
//	VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs{...}
type VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsInput interface {
	pulumi.Input

	ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput
	ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutputWithContext(context.Context) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput
}

type VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs struct {
	// Receive/transmit dropped packets rate on NIC is higher than
	DroppedPacketsPerSecond pulumi.IntInput `pulumi:"droppedPacketsPerSecond"`
}

func (VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesDroppedPacketsDetectionCustomThresholds)(nil)).Elem()
}

func (i VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput {
	return i.ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutputWithContext(context.Background())
}

func (i VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput)
}

func (i VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput).ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(ctx)
}

// VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrInput is an input type that accepts VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs, VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtr and VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrInput` via:
//
//	        VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput
	ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(context.Context) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput
}

type vmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrType VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs

func VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtr(v *VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrInput {
	return (*vmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrType)(v)
}

func (*vmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesDroppedPacketsDetectionCustomThresholds)(nil)).Elem()
}

func (i *vmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrType) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrType) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput)
}

type VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesDroppedPacketsDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return o.ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesDroppedPacketsDetectionCustomThresholds) *VmwareAnomaliesDroppedPacketsDetectionCustomThresholds {
		return &v
	}).(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput)
}

// Receive/transmit dropped packets rate on NIC is higher than
func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput) DroppedPacketsPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesDroppedPacketsDetectionCustomThresholds) int { return v.DroppedPacketsPerSecond }).(pulumi.IntOutput)
}

type VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesDroppedPacketsDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput) Elem() VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput {
	return o.ApplyT(func(v *VmwareAnomaliesDroppedPacketsDetectionCustomThresholds) VmwareAnomaliesDroppedPacketsDetectionCustomThresholds {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesDroppedPacketsDetectionCustomThresholds
		return ret
	}).(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput)
}

// Receive/transmit dropped packets rate on NIC is higher than
func (o VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput) DroppedPacketsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesDroppedPacketsDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.DroppedPacketsPerSecond
	}).(pulumi.IntPtrOutput)
}

type VmwareAnomaliesEsxiHighCpuDetection struct {
	// Alert if **all three** conditions are met in 3 out of 5 samples
	CustomThresholds *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// VmwareAnomaliesEsxiHighCpuDetectionInput is an input type that accepts VmwareAnomaliesEsxiHighCpuDetectionArgs and VmwareAnomaliesEsxiHighCpuDetectionOutput values.
// You can construct a concrete instance of `VmwareAnomaliesEsxiHighCpuDetectionInput` via:
//
//	VmwareAnomaliesEsxiHighCpuDetectionArgs{...}
type VmwareAnomaliesEsxiHighCpuDetectionInput interface {
	pulumi.Input

	ToVmwareAnomaliesEsxiHighCpuDetectionOutput() VmwareAnomaliesEsxiHighCpuDetectionOutput
	ToVmwareAnomaliesEsxiHighCpuDetectionOutputWithContext(context.Context) VmwareAnomaliesEsxiHighCpuDetectionOutput
}

type VmwareAnomaliesEsxiHighCpuDetectionArgs struct {
	// Alert if **all three** conditions are met in 3 out of 5 samples
	CustomThresholds VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrInput `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VmwareAnomaliesEsxiHighCpuDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesEsxiHighCpuDetection)(nil)).Elem()
}

func (i VmwareAnomaliesEsxiHighCpuDetectionArgs) ToVmwareAnomaliesEsxiHighCpuDetectionOutput() VmwareAnomaliesEsxiHighCpuDetectionOutput {
	return i.ToVmwareAnomaliesEsxiHighCpuDetectionOutputWithContext(context.Background())
}

func (i VmwareAnomaliesEsxiHighCpuDetectionArgs) ToVmwareAnomaliesEsxiHighCpuDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighCpuDetectionOutput)
}

func (i VmwareAnomaliesEsxiHighCpuDetectionArgs) ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionPtrOutput {
	return i.ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesEsxiHighCpuDetectionArgs) ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighCpuDetectionOutput).ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(ctx)
}

// VmwareAnomaliesEsxiHighCpuDetectionPtrInput is an input type that accepts VmwareAnomaliesEsxiHighCpuDetectionArgs, VmwareAnomaliesEsxiHighCpuDetectionPtr and VmwareAnomaliesEsxiHighCpuDetectionPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesEsxiHighCpuDetectionPtrInput` via:
//
//	        VmwareAnomaliesEsxiHighCpuDetectionArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesEsxiHighCpuDetectionPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionPtrOutput
	ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(context.Context) VmwareAnomaliesEsxiHighCpuDetectionPtrOutput
}

type vmwareAnomaliesEsxiHighCpuDetectionPtrType VmwareAnomaliesEsxiHighCpuDetectionArgs

func VmwareAnomaliesEsxiHighCpuDetectionPtr(v *VmwareAnomaliesEsxiHighCpuDetectionArgs) VmwareAnomaliesEsxiHighCpuDetectionPtrInput {
	return (*vmwareAnomaliesEsxiHighCpuDetectionPtrType)(v)
}

func (*vmwareAnomaliesEsxiHighCpuDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesEsxiHighCpuDetection)(nil)).Elem()
}

func (i *vmwareAnomaliesEsxiHighCpuDetectionPtrType) ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionPtrOutput {
	return i.ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesEsxiHighCpuDetectionPtrType) ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighCpuDetectionPtrOutput)
}

type VmwareAnomaliesEsxiHighCpuDetectionOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesEsxiHighCpuDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesEsxiHighCpuDetection)(nil)).Elem()
}

func (o VmwareAnomaliesEsxiHighCpuDetectionOutput) ToVmwareAnomaliesEsxiHighCpuDetectionOutput() VmwareAnomaliesEsxiHighCpuDetectionOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighCpuDetectionOutput) ToVmwareAnomaliesEsxiHighCpuDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighCpuDetectionOutput) ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionPtrOutput {
	return o.ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesEsxiHighCpuDetectionOutput) ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesEsxiHighCpuDetection) *VmwareAnomaliesEsxiHighCpuDetection {
		return &v
	}).(VmwareAnomaliesEsxiHighCpuDetectionPtrOutput)
}

// Alert if **all three** conditions are met in 3 out of 5 samples
func (o VmwareAnomaliesEsxiHighCpuDetectionOutput) CustomThresholds() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighCpuDetection) *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds {
		return v.CustomThresholds
	}).(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesEsxiHighCpuDetectionOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighCpuDetection) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesEsxiHighCpuDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighCpuDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VmwareAnomaliesEsxiHighCpuDetectionPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesEsxiHighCpuDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesEsxiHighCpuDetection)(nil)).Elem()
}

func (o VmwareAnomaliesEsxiHighCpuDetectionPtrOutput) ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighCpuDetectionPtrOutput) ToVmwareAnomaliesEsxiHighCpuDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighCpuDetectionPtrOutput) Elem() VmwareAnomaliesEsxiHighCpuDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighCpuDetection) VmwareAnomaliesEsxiHighCpuDetection {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesEsxiHighCpuDetection
		return ret
	}).(VmwareAnomaliesEsxiHighCpuDetectionOutput)
}

// Alert if **all three** conditions are met in 3 out of 5 samples
func (o VmwareAnomaliesEsxiHighCpuDetectionPtrOutput) CustomThresholds() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighCpuDetection) *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds {
		if v == nil {
			return nil
		}
		return v.CustomThresholds
	}).(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesEsxiHighCpuDetectionPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighCpuDetection) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesEsxiHighCpuDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighCpuDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds struct {
	// At least one peak occurred when Hypervisor CPU usage was higher than
	CpuPeakPercentage int `pulumi:"cpuPeakPercentage"`
	// CPU usage is higher than
	CpuUsagePercentage int `pulumi:"cpuUsagePercentage"`
	// VM CPU ready is higher than
	VmCpuReadyPercentage int `pulumi:"vmCpuReadyPercentage"`
}

// VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsInput is an input type that accepts VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs and VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput values.
// You can construct a concrete instance of `VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsInput` via:
//
//	VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs{...}
type VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsInput interface {
	pulumi.Input

	ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput
	ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutputWithContext(context.Context) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput
}

type VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs struct {
	// At least one peak occurred when Hypervisor CPU usage was higher than
	CpuPeakPercentage pulumi.IntInput `pulumi:"cpuPeakPercentage"`
	// CPU usage is higher than
	CpuUsagePercentage pulumi.IntInput `pulumi:"cpuUsagePercentage"`
	// VM CPU ready is higher than
	VmCpuReadyPercentage pulumi.IntInput `pulumi:"vmCpuReadyPercentage"`
}

func (VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds)(nil)).Elem()
}

func (i VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput {
	return i.ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutputWithContext(context.Background())
}

func (i VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput)
}

func (i VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput).ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(ctx)
}

// VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrInput is an input type that accepts VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs, VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtr and VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrInput` via:
//
//	        VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput
	ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(context.Context) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput
}

type vmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrType VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs

func VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtr(v *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrInput {
	return (*vmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrType)(v)
}

func (*vmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds)(nil)).Elem()
}

func (i *vmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrType) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrType) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput)
}

type VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return o.ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds) *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds {
		return &v
	}).(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput)
}

// At least one peak occurred when Hypervisor CPU usage was higher than
func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput) CpuPeakPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds) int { return v.CpuPeakPercentage }).(pulumi.IntOutput)
}

// CPU usage is higher than
func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput) CpuUsagePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds) int { return v.CpuUsagePercentage }).(pulumi.IntOutput)
}

// VM CPU ready is higher than
func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput) VmCpuReadyPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds) int { return v.VmCpuReadyPercentage }).(pulumi.IntOutput)
}

type VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput) Elem() VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds) VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds
		return ret
	}).(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput)
}

// At least one peak occurred when Hypervisor CPU usage was higher than
func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput) CpuPeakPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.CpuPeakPercentage
	}).(pulumi.IntPtrOutput)
}

// CPU usage is higher than
func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput) CpuUsagePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.CpuUsagePercentage
	}).(pulumi.IntPtrOutput)
}

// VM CPU ready is higher than
func (o VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput) VmCpuReadyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighCpuDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.VmCpuReadyPercentage
	}).(pulumi.IntPtrOutput)
}

type VmwareAnomaliesEsxiHighMemoryDetection struct {
	// Alert if the condition is met in 3 out of 5 samples
	CustomThresholds *VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// VmwareAnomaliesEsxiHighMemoryDetectionInput is an input type that accepts VmwareAnomaliesEsxiHighMemoryDetectionArgs and VmwareAnomaliesEsxiHighMemoryDetectionOutput values.
// You can construct a concrete instance of `VmwareAnomaliesEsxiHighMemoryDetectionInput` via:
//
//	VmwareAnomaliesEsxiHighMemoryDetectionArgs{...}
type VmwareAnomaliesEsxiHighMemoryDetectionInput interface {
	pulumi.Input

	ToVmwareAnomaliesEsxiHighMemoryDetectionOutput() VmwareAnomaliesEsxiHighMemoryDetectionOutput
	ToVmwareAnomaliesEsxiHighMemoryDetectionOutputWithContext(context.Context) VmwareAnomaliesEsxiHighMemoryDetectionOutput
}

type VmwareAnomaliesEsxiHighMemoryDetectionArgs struct {
	// Alert if the condition is met in 3 out of 5 samples
	CustomThresholds VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrInput `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VmwareAnomaliesEsxiHighMemoryDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesEsxiHighMemoryDetection)(nil)).Elem()
}

func (i VmwareAnomaliesEsxiHighMemoryDetectionArgs) ToVmwareAnomaliesEsxiHighMemoryDetectionOutput() VmwareAnomaliesEsxiHighMemoryDetectionOutput {
	return i.ToVmwareAnomaliesEsxiHighMemoryDetectionOutputWithContext(context.Background())
}

func (i VmwareAnomaliesEsxiHighMemoryDetectionArgs) ToVmwareAnomaliesEsxiHighMemoryDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighMemoryDetectionOutput)
}

func (i VmwareAnomaliesEsxiHighMemoryDetectionArgs) ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput {
	return i.ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesEsxiHighMemoryDetectionArgs) ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighMemoryDetectionOutput).ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(ctx)
}

// VmwareAnomaliesEsxiHighMemoryDetectionPtrInput is an input type that accepts VmwareAnomaliesEsxiHighMemoryDetectionArgs, VmwareAnomaliesEsxiHighMemoryDetectionPtr and VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesEsxiHighMemoryDetectionPtrInput` via:
//
//	        VmwareAnomaliesEsxiHighMemoryDetectionArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesEsxiHighMemoryDetectionPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput
	ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(context.Context) VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput
}

type vmwareAnomaliesEsxiHighMemoryDetectionPtrType VmwareAnomaliesEsxiHighMemoryDetectionArgs

func VmwareAnomaliesEsxiHighMemoryDetectionPtr(v *VmwareAnomaliesEsxiHighMemoryDetectionArgs) VmwareAnomaliesEsxiHighMemoryDetectionPtrInput {
	return (*vmwareAnomaliesEsxiHighMemoryDetectionPtrType)(v)
}

func (*vmwareAnomaliesEsxiHighMemoryDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesEsxiHighMemoryDetection)(nil)).Elem()
}

func (i *vmwareAnomaliesEsxiHighMemoryDetectionPtrType) ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput {
	return i.ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesEsxiHighMemoryDetectionPtrType) ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput)
}

type VmwareAnomaliesEsxiHighMemoryDetectionOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesEsxiHighMemoryDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesEsxiHighMemoryDetection)(nil)).Elem()
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionOutput() VmwareAnomaliesEsxiHighMemoryDetectionOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput {
	return o.ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesEsxiHighMemoryDetection) *VmwareAnomaliesEsxiHighMemoryDetection {
		return &v
	}).(VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput)
}

// Alert if the condition is met in 3 out of 5 samples
func (o VmwareAnomaliesEsxiHighMemoryDetectionOutput) CustomThresholds() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighMemoryDetection) *VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds {
		return v.CustomThresholds
	}).(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesEsxiHighMemoryDetectionOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighMemoryDetection) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesEsxiHighMemoryDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighMemoryDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesEsxiHighMemoryDetection)(nil)).Elem()
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput) Elem() VmwareAnomaliesEsxiHighMemoryDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighMemoryDetection) VmwareAnomaliesEsxiHighMemoryDetection {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesEsxiHighMemoryDetection
		return ret
	}).(VmwareAnomaliesEsxiHighMemoryDetectionOutput)
}

// Alert if the condition is met in 3 out of 5 samples
func (o VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput) CustomThresholds() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighMemoryDetection) *VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds {
		if v == nil {
			return nil
		}
		return v.CustomThresholds
	}).(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighMemoryDetection) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighMemoryDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds struct {
	// ESXi host swap IN/OUT or compression/decompression rate is higher than
	CompressionDecompressionRate float64 `pulumi:"compressionDecompressionRate"`
}

// VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsInput is an input type that accepts VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs and VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput values.
// You can construct a concrete instance of `VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsInput` via:
//
//	VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs{...}
type VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsInput interface {
	pulumi.Input

	ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput
	ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutputWithContext(context.Context) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput
}

type VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs struct {
	// ESXi host swap IN/OUT or compression/decompression rate is higher than
	CompressionDecompressionRate pulumi.Float64Input `pulumi:"compressionDecompressionRate"`
}

func (VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds)(nil)).Elem()
}

func (i VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput {
	return i.ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutputWithContext(context.Background())
}

func (i VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput)
}

func (i VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput).ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(ctx)
}

// VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrInput is an input type that accepts VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs, VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtr and VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrInput` via:
//
//	        VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput
	ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(context.Context) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput
}

type vmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrType VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs

func VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtr(v *VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrInput {
	return (*vmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrType)(v)
}

func (*vmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds)(nil)).Elem()
}

func (i *vmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrType) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrType) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput)
}

type VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return o.ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds) *VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds {
		return &v
	}).(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput)
}

// ESXi host swap IN/OUT or compression/decompression rate is higher than
func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput) CompressionDecompressionRate() pulumi.Float64Output {
	return o.ApplyT(func(v VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds) float64 {
		return v.CompressionDecompressionRate
	}).(pulumi.Float64Output)
}

type VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput) Elem() VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds) VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds
		return ret
	}).(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput)
}

// ESXi host swap IN/OUT or compression/decompression rate is higher than
func (o VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput) CompressionDecompressionRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.CompressionDecompressionRate
	}).(pulumi.Float64PtrOutput)
}

type VmwareAnomaliesGuestCpuLimitDetection struct {
	// Alert if **all three** conditions are met in 3 out of 5 samples
	CustomThresholds *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// VmwareAnomaliesGuestCpuLimitDetectionInput is an input type that accepts VmwareAnomaliesGuestCpuLimitDetectionArgs and VmwareAnomaliesGuestCpuLimitDetectionOutput values.
// You can construct a concrete instance of `VmwareAnomaliesGuestCpuLimitDetectionInput` via:
//
//	VmwareAnomaliesGuestCpuLimitDetectionArgs{...}
type VmwareAnomaliesGuestCpuLimitDetectionInput interface {
	pulumi.Input

	ToVmwareAnomaliesGuestCpuLimitDetectionOutput() VmwareAnomaliesGuestCpuLimitDetectionOutput
	ToVmwareAnomaliesGuestCpuLimitDetectionOutputWithContext(context.Context) VmwareAnomaliesGuestCpuLimitDetectionOutput
}

type VmwareAnomaliesGuestCpuLimitDetectionArgs struct {
	// Alert if **all three** conditions are met in 3 out of 5 samples
	CustomThresholds VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrInput `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VmwareAnomaliesGuestCpuLimitDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesGuestCpuLimitDetection)(nil)).Elem()
}

func (i VmwareAnomaliesGuestCpuLimitDetectionArgs) ToVmwareAnomaliesGuestCpuLimitDetectionOutput() VmwareAnomaliesGuestCpuLimitDetectionOutput {
	return i.ToVmwareAnomaliesGuestCpuLimitDetectionOutputWithContext(context.Background())
}

func (i VmwareAnomaliesGuestCpuLimitDetectionArgs) ToVmwareAnomaliesGuestCpuLimitDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesGuestCpuLimitDetectionOutput)
}

func (i VmwareAnomaliesGuestCpuLimitDetectionArgs) ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionPtrOutput {
	return i.ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesGuestCpuLimitDetectionArgs) ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesGuestCpuLimitDetectionOutput).ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(ctx)
}

// VmwareAnomaliesGuestCpuLimitDetectionPtrInput is an input type that accepts VmwareAnomaliesGuestCpuLimitDetectionArgs, VmwareAnomaliesGuestCpuLimitDetectionPtr and VmwareAnomaliesGuestCpuLimitDetectionPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesGuestCpuLimitDetectionPtrInput` via:
//
//	        VmwareAnomaliesGuestCpuLimitDetectionArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesGuestCpuLimitDetectionPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionPtrOutput
	ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(context.Context) VmwareAnomaliesGuestCpuLimitDetectionPtrOutput
}

type vmwareAnomaliesGuestCpuLimitDetectionPtrType VmwareAnomaliesGuestCpuLimitDetectionArgs

func VmwareAnomaliesGuestCpuLimitDetectionPtr(v *VmwareAnomaliesGuestCpuLimitDetectionArgs) VmwareAnomaliesGuestCpuLimitDetectionPtrInput {
	return (*vmwareAnomaliesGuestCpuLimitDetectionPtrType)(v)
}

func (*vmwareAnomaliesGuestCpuLimitDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesGuestCpuLimitDetection)(nil)).Elem()
}

func (i *vmwareAnomaliesGuestCpuLimitDetectionPtrType) ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionPtrOutput {
	return i.ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesGuestCpuLimitDetectionPtrType) ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesGuestCpuLimitDetectionPtrOutput)
}

type VmwareAnomaliesGuestCpuLimitDetectionOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesGuestCpuLimitDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesGuestCpuLimitDetection)(nil)).Elem()
}

func (o VmwareAnomaliesGuestCpuLimitDetectionOutput) ToVmwareAnomaliesGuestCpuLimitDetectionOutput() VmwareAnomaliesGuestCpuLimitDetectionOutput {
	return o
}

func (o VmwareAnomaliesGuestCpuLimitDetectionOutput) ToVmwareAnomaliesGuestCpuLimitDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionOutput {
	return o
}

func (o VmwareAnomaliesGuestCpuLimitDetectionOutput) ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionPtrOutput {
	return o.ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesGuestCpuLimitDetectionOutput) ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesGuestCpuLimitDetection) *VmwareAnomaliesGuestCpuLimitDetection {
		return &v
	}).(VmwareAnomaliesGuestCpuLimitDetectionPtrOutput)
}

// Alert if **all three** conditions are met in 3 out of 5 samples
func (o VmwareAnomaliesGuestCpuLimitDetectionOutput) CustomThresholds() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesGuestCpuLimitDetection) *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds {
		return v.CustomThresholds
	}).(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesGuestCpuLimitDetectionOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesGuestCpuLimitDetection) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesGuestCpuLimitDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VmwareAnomaliesGuestCpuLimitDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VmwareAnomaliesGuestCpuLimitDetectionPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesGuestCpuLimitDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesGuestCpuLimitDetection)(nil)).Elem()
}

func (o VmwareAnomaliesGuestCpuLimitDetectionPtrOutput) ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesGuestCpuLimitDetectionPtrOutput) ToVmwareAnomaliesGuestCpuLimitDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesGuestCpuLimitDetectionPtrOutput) Elem() VmwareAnomaliesGuestCpuLimitDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomaliesGuestCpuLimitDetection) VmwareAnomaliesGuestCpuLimitDetection {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesGuestCpuLimitDetection
		return ret
	}).(VmwareAnomaliesGuestCpuLimitDetectionOutput)
}

// Alert if **all three** conditions are met in 3 out of 5 samples
func (o VmwareAnomaliesGuestCpuLimitDetectionPtrOutput) CustomThresholds() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesGuestCpuLimitDetection) *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds {
		if v == nil {
			return nil
		}
		return v.CustomThresholds
	}).(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesGuestCpuLimitDetectionPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesGuestCpuLimitDetection) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesGuestCpuLimitDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesGuestCpuLimitDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds struct {
	// Hypervisor CPU usage is higher than
	HostCpuUsagePercentage int `pulumi:"hostCpuUsagePercentage"`
	// VM CPU ready is higher than
	VmCpuReadyPercentage int `pulumi:"vmCpuReadyPercentage"`
	// VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than
	VmCpuUsagePercentage int `pulumi:"vmCpuUsagePercentage"`
}

// VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsInput is an input type that accepts VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs and VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput values.
// You can construct a concrete instance of `VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsInput` via:
//
//	VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs{...}
type VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsInput interface {
	pulumi.Input

	ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput
	ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutputWithContext(context.Context) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput
}

type VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs struct {
	// Hypervisor CPU usage is higher than
	HostCpuUsagePercentage pulumi.IntInput `pulumi:"hostCpuUsagePercentage"`
	// VM CPU ready is higher than
	VmCpuReadyPercentage pulumi.IntInput `pulumi:"vmCpuReadyPercentage"`
	// VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than
	VmCpuUsagePercentage pulumi.IntInput `pulumi:"vmCpuUsagePercentage"`
}

func (VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds)(nil)).Elem()
}

func (i VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput {
	return i.ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutputWithContext(context.Background())
}

func (i VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput)
}

func (i VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput).ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(ctx)
}

// VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrInput is an input type that accepts VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs, VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtr and VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrInput` via:
//
//	        VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput
	ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(context.Context) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput
}

type vmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrType VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs

func VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtr(v *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrInput {
	return (*vmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrType)(v)
}

func (*vmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds)(nil)).Elem()
}

func (i *vmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrType) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrType) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput)
}

type VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return o.ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds) *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds {
		return &v
	}).(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput)
}

// Hypervisor CPU usage is higher than
func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput) HostCpuUsagePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds) int { return v.HostCpuUsagePercentage }).(pulumi.IntOutput)
}

// VM CPU ready is higher than
func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput) VmCpuReadyPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds) int { return v.VmCpuReadyPercentage }).(pulumi.IntOutput)
}

// VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than
func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput) VmCpuUsagePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds) int { return v.VmCpuUsagePercentage }).(pulumi.IntOutput)
}

type VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput) Elem() VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput {
	return o.ApplyT(func(v *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds) VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds
		return ret
	}).(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput)
}

// Hypervisor CPU usage is higher than
func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput) HostCpuUsagePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.HostCpuUsagePercentage
	}).(pulumi.IntPtrOutput)
}

// VM CPU ready is higher than
func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput) VmCpuReadyPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.VmCpuReadyPercentage
	}).(pulumi.IntPtrOutput)
}

// VM CPU usage (VM CPU Usage Mhz / VM CPU limit in Mhz) is higher than
func (o VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput) VmCpuUsagePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesGuestCpuLimitDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.VmCpuUsagePercentage
	}).(pulumi.IntPtrOutput)
}

type VmwareAnomaliesLowDatastoreSpaceDetection struct {
	// Alert if the condition is met in 1 out of 5 samples
	CustomThresholds *VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// VmwareAnomaliesLowDatastoreSpaceDetectionInput is an input type that accepts VmwareAnomaliesLowDatastoreSpaceDetectionArgs and VmwareAnomaliesLowDatastoreSpaceDetectionOutput values.
// You can construct a concrete instance of `VmwareAnomaliesLowDatastoreSpaceDetectionInput` via:
//
//	VmwareAnomaliesLowDatastoreSpaceDetectionArgs{...}
type VmwareAnomaliesLowDatastoreSpaceDetectionInput interface {
	pulumi.Input

	ToVmwareAnomaliesLowDatastoreSpaceDetectionOutput() VmwareAnomaliesLowDatastoreSpaceDetectionOutput
	ToVmwareAnomaliesLowDatastoreSpaceDetectionOutputWithContext(context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionOutput
}

type VmwareAnomaliesLowDatastoreSpaceDetectionArgs struct {
	// Alert if the condition is met in 1 out of 5 samples
	CustomThresholds VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrInput `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VmwareAnomaliesLowDatastoreSpaceDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesLowDatastoreSpaceDetection)(nil)).Elem()
}

func (i VmwareAnomaliesLowDatastoreSpaceDetectionArgs) ToVmwareAnomaliesLowDatastoreSpaceDetectionOutput() VmwareAnomaliesLowDatastoreSpaceDetectionOutput {
	return i.ToVmwareAnomaliesLowDatastoreSpaceDetectionOutputWithContext(context.Background())
}

func (i VmwareAnomaliesLowDatastoreSpaceDetectionArgs) ToVmwareAnomaliesLowDatastoreSpaceDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesLowDatastoreSpaceDetectionOutput)
}

func (i VmwareAnomaliesLowDatastoreSpaceDetectionArgs) ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput {
	return i.ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesLowDatastoreSpaceDetectionArgs) ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesLowDatastoreSpaceDetectionOutput).ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(ctx)
}

// VmwareAnomaliesLowDatastoreSpaceDetectionPtrInput is an input type that accepts VmwareAnomaliesLowDatastoreSpaceDetectionArgs, VmwareAnomaliesLowDatastoreSpaceDetectionPtr and VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesLowDatastoreSpaceDetectionPtrInput` via:
//
//	        VmwareAnomaliesLowDatastoreSpaceDetectionArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesLowDatastoreSpaceDetectionPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput
	ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput
}

type vmwareAnomaliesLowDatastoreSpaceDetectionPtrType VmwareAnomaliesLowDatastoreSpaceDetectionArgs

func VmwareAnomaliesLowDatastoreSpaceDetectionPtr(v *VmwareAnomaliesLowDatastoreSpaceDetectionArgs) VmwareAnomaliesLowDatastoreSpaceDetectionPtrInput {
	return (*vmwareAnomaliesLowDatastoreSpaceDetectionPtrType)(v)
}

func (*vmwareAnomaliesLowDatastoreSpaceDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesLowDatastoreSpaceDetection)(nil)).Elem()
}

func (i *vmwareAnomaliesLowDatastoreSpaceDetectionPtrType) ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput {
	return i.ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesLowDatastoreSpaceDetectionPtrType) ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput)
}

type VmwareAnomaliesLowDatastoreSpaceDetectionOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesLowDatastoreSpaceDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesLowDatastoreSpaceDetection)(nil)).Elem()
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionOutput() VmwareAnomaliesLowDatastoreSpaceDetectionOutput {
	return o
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionOutput {
	return o
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput {
	return o.ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesLowDatastoreSpaceDetection) *VmwareAnomaliesLowDatastoreSpaceDetection {
		return &v
	}).(VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput)
}

// Alert if the condition is met in 1 out of 5 samples
func (o VmwareAnomaliesLowDatastoreSpaceDetectionOutput) CustomThresholds() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesLowDatastoreSpaceDetection) *VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds {
		return v.CustomThresholds
	}).(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesLowDatastoreSpaceDetectionOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesLowDatastoreSpaceDetection) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesLowDatastoreSpaceDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VmwareAnomaliesLowDatastoreSpaceDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesLowDatastoreSpaceDetection)(nil)).Elem()
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput) Elem() VmwareAnomaliesLowDatastoreSpaceDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomaliesLowDatastoreSpaceDetection) VmwareAnomaliesLowDatastoreSpaceDetection {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesLowDatastoreSpaceDetection
		return ret
	}).(VmwareAnomaliesLowDatastoreSpaceDetectionOutput)
}

// Alert if the condition is met in 1 out of 5 samples
func (o VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput) CustomThresholds() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesLowDatastoreSpaceDetection) *VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds {
		if v == nil {
			return nil
		}
		return v.CustomThresholds
	}).(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesLowDatastoreSpaceDetection) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesLowDatastoreSpaceDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds struct {
	// Datastore free space is lower than
	FreeSpacePercentage int `pulumi:"freeSpacePercentage"`
}

// VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsInput is an input type that accepts VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs and VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput values.
// You can construct a concrete instance of `VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsInput` via:
//
//	VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs{...}
type VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsInput interface {
	pulumi.Input

	ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput
	ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutputWithContext(context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput
}

type VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs struct {
	// Datastore free space is lower than
	FreeSpacePercentage pulumi.IntInput `pulumi:"freeSpacePercentage"`
}

func (VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds)(nil)).Elem()
}

func (i VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput {
	return i.ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutputWithContext(context.Background())
}

func (i VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput)
}

func (i VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput).ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(ctx)
}

// VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrInput is an input type that accepts VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs, VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtr and VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrInput` via:
//
//	        VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput
	ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput
}

type vmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrType VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs

func VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtr(v *VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrInput {
	return (*vmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrType)(v)
}

func (*vmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds)(nil)).Elem()
}

func (i *vmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrType) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrType) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput)
}

type VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return o.ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds) *VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds {
		return &v
	}).(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput)
}

// Datastore free space is lower than
func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput) FreeSpacePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds) int { return v.FreeSpacePercentage }).(pulumi.IntOutput)
}

type VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput) Elem() VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput {
	return o.ApplyT(func(v *VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds) VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds
		return ret
	}).(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput)
}

// Datastore free space is lower than
func (o VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput) FreeSpacePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.FreeSpacePercentage
	}).(pulumi.IntPtrOutput)
}

type VmwareAnomaliesOverloadedStorageDetection struct {
	// Alert if the condition is met in 3 out of 5 samples
	CustomThresholds *VmwareAnomaliesOverloadedStorageDetectionCustomThresholds `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// VmwareAnomaliesOverloadedStorageDetectionInput is an input type that accepts VmwareAnomaliesOverloadedStorageDetectionArgs and VmwareAnomaliesOverloadedStorageDetectionOutput values.
// You can construct a concrete instance of `VmwareAnomaliesOverloadedStorageDetectionInput` via:
//
//	VmwareAnomaliesOverloadedStorageDetectionArgs{...}
type VmwareAnomaliesOverloadedStorageDetectionInput interface {
	pulumi.Input

	ToVmwareAnomaliesOverloadedStorageDetectionOutput() VmwareAnomaliesOverloadedStorageDetectionOutput
	ToVmwareAnomaliesOverloadedStorageDetectionOutputWithContext(context.Context) VmwareAnomaliesOverloadedStorageDetectionOutput
}

type VmwareAnomaliesOverloadedStorageDetectionArgs struct {
	// Alert if the condition is met in 3 out of 5 samples
	CustomThresholds VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrInput `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VmwareAnomaliesOverloadedStorageDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesOverloadedStorageDetection)(nil)).Elem()
}

func (i VmwareAnomaliesOverloadedStorageDetectionArgs) ToVmwareAnomaliesOverloadedStorageDetectionOutput() VmwareAnomaliesOverloadedStorageDetectionOutput {
	return i.ToVmwareAnomaliesOverloadedStorageDetectionOutputWithContext(context.Background())
}

func (i VmwareAnomaliesOverloadedStorageDetectionArgs) ToVmwareAnomaliesOverloadedStorageDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesOverloadedStorageDetectionOutput)
}

func (i VmwareAnomaliesOverloadedStorageDetectionArgs) ToVmwareAnomaliesOverloadedStorageDetectionPtrOutput() VmwareAnomaliesOverloadedStorageDetectionPtrOutput {
	return i.ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesOverloadedStorageDetectionArgs) ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesOverloadedStorageDetectionOutput).ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(ctx)
}

// VmwareAnomaliesOverloadedStorageDetectionPtrInput is an input type that accepts VmwareAnomaliesOverloadedStorageDetectionArgs, VmwareAnomaliesOverloadedStorageDetectionPtr and VmwareAnomaliesOverloadedStorageDetectionPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesOverloadedStorageDetectionPtrInput` via:
//
//	        VmwareAnomaliesOverloadedStorageDetectionArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesOverloadedStorageDetectionPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesOverloadedStorageDetectionPtrOutput() VmwareAnomaliesOverloadedStorageDetectionPtrOutput
	ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(context.Context) VmwareAnomaliesOverloadedStorageDetectionPtrOutput
}

type vmwareAnomaliesOverloadedStorageDetectionPtrType VmwareAnomaliesOverloadedStorageDetectionArgs

func VmwareAnomaliesOverloadedStorageDetectionPtr(v *VmwareAnomaliesOverloadedStorageDetectionArgs) VmwareAnomaliesOverloadedStorageDetectionPtrInput {
	return (*vmwareAnomaliesOverloadedStorageDetectionPtrType)(v)
}

func (*vmwareAnomaliesOverloadedStorageDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesOverloadedStorageDetection)(nil)).Elem()
}

func (i *vmwareAnomaliesOverloadedStorageDetectionPtrType) ToVmwareAnomaliesOverloadedStorageDetectionPtrOutput() VmwareAnomaliesOverloadedStorageDetectionPtrOutput {
	return i.ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesOverloadedStorageDetectionPtrType) ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesOverloadedStorageDetectionPtrOutput)
}

type VmwareAnomaliesOverloadedStorageDetectionOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesOverloadedStorageDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesOverloadedStorageDetection)(nil)).Elem()
}

func (o VmwareAnomaliesOverloadedStorageDetectionOutput) ToVmwareAnomaliesOverloadedStorageDetectionOutput() VmwareAnomaliesOverloadedStorageDetectionOutput {
	return o
}

func (o VmwareAnomaliesOverloadedStorageDetectionOutput) ToVmwareAnomaliesOverloadedStorageDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionOutput {
	return o
}

func (o VmwareAnomaliesOverloadedStorageDetectionOutput) ToVmwareAnomaliesOverloadedStorageDetectionPtrOutput() VmwareAnomaliesOverloadedStorageDetectionPtrOutput {
	return o.ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesOverloadedStorageDetectionOutput) ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesOverloadedStorageDetection) *VmwareAnomaliesOverloadedStorageDetection {
		return &v
	}).(VmwareAnomaliesOverloadedStorageDetectionPtrOutput)
}

// Alert if the condition is met in 3 out of 5 samples
func (o VmwareAnomaliesOverloadedStorageDetectionOutput) CustomThresholds() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesOverloadedStorageDetection) *VmwareAnomaliesOverloadedStorageDetectionCustomThresholds {
		return v.CustomThresholds
	}).(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesOverloadedStorageDetectionOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesOverloadedStorageDetection) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesOverloadedStorageDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VmwareAnomaliesOverloadedStorageDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VmwareAnomaliesOverloadedStorageDetectionPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesOverloadedStorageDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesOverloadedStorageDetection)(nil)).Elem()
}

func (o VmwareAnomaliesOverloadedStorageDetectionPtrOutput) ToVmwareAnomaliesOverloadedStorageDetectionPtrOutput() VmwareAnomaliesOverloadedStorageDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesOverloadedStorageDetectionPtrOutput) ToVmwareAnomaliesOverloadedStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesOverloadedStorageDetectionPtrOutput) Elem() VmwareAnomaliesOverloadedStorageDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomaliesOverloadedStorageDetection) VmwareAnomaliesOverloadedStorageDetection {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesOverloadedStorageDetection
		return ret
	}).(VmwareAnomaliesOverloadedStorageDetectionOutput)
}

// Alert if the condition is met in 3 out of 5 samples
func (o VmwareAnomaliesOverloadedStorageDetectionPtrOutput) CustomThresholds() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesOverloadedStorageDetection) *VmwareAnomaliesOverloadedStorageDetectionCustomThresholds {
		if v == nil {
			return nil
		}
		return v.CustomThresholds
	}).(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesOverloadedStorageDetectionPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesOverloadedStorageDetection) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesOverloadedStorageDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesOverloadedStorageDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VmwareAnomaliesOverloadedStorageDetectionCustomThresholds struct {
	// Number of command aborts is higher than
	CommandAbortsNumber int `pulumi:"commandAbortsNumber"`
}

// VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsInput is an input type that accepts VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs and VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput values.
// You can construct a concrete instance of `VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsInput` via:
//
//	VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs{...}
type VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsInput interface {
	pulumi.Input

	ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput
	ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutputWithContext(context.Context) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput
}

type VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs struct {
	// Number of command aborts is higher than
	CommandAbortsNumber pulumi.IntInput `pulumi:"commandAbortsNumber"`
}

func (VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesOverloadedStorageDetectionCustomThresholds)(nil)).Elem()
}

func (i VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput {
	return i.ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutputWithContext(context.Background())
}

func (i VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput)
}

func (i VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput).ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx)
}

// VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrInput is an input type that accepts VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs, VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtr and VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrInput` via:
//
//	        VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput
	ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(context.Context) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput
}

type vmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrType VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs

func VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtr(v *VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrInput {
	return (*vmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrType)(v)
}

func (*vmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesOverloadedStorageDetectionCustomThresholds)(nil)).Elem()
}

func (i *vmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrType) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrType) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput)
}

type VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesOverloadedStorageDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return o.ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesOverloadedStorageDetectionCustomThresholds) *VmwareAnomaliesOverloadedStorageDetectionCustomThresholds {
		return &v
	}).(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput)
}

// Number of command aborts is higher than
func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput) CommandAbortsNumber() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesOverloadedStorageDetectionCustomThresholds) int { return v.CommandAbortsNumber }).(pulumi.IntOutput)
}

type VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesOverloadedStorageDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput) Elem() VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput {
	return o.ApplyT(func(v *VmwareAnomaliesOverloadedStorageDetectionCustomThresholds) VmwareAnomaliesOverloadedStorageDetectionCustomThresholds {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesOverloadedStorageDetectionCustomThresholds
		return ret
	}).(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput)
}

// Number of command aborts is higher than
func (o VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput) CommandAbortsNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesOverloadedStorageDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.CommandAbortsNumber
	}).(pulumi.IntPtrOutput)
}

type VmwareAnomaliesSlowPhysicalStorageDetection struct {
	// Alert if **any** condition is met in 4 out of 5 samples
	CustomThresholds *VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// VmwareAnomaliesSlowPhysicalStorageDetectionInput is an input type that accepts VmwareAnomaliesSlowPhysicalStorageDetectionArgs and VmwareAnomaliesSlowPhysicalStorageDetectionOutput values.
// You can construct a concrete instance of `VmwareAnomaliesSlowPhysicalStorageDetectionInput` via:
//
//	VmwareAnomaliesSlowPhysicalStorageDetectionArgs{...}
type VmwareAnomaliesSlowPhysicalStorageDetectionInput interface {
	pulumi.Input

	ToVmwareAnomaliesSlowPhysicalStorageDetectionOutput() VmwareAnomaliesSlowPhysicalStorageDetectionOutput
	ToVmwareAnomaliesSlowPhysicalStorageDetectionOutputWithContext(context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionOutput
}

type VmwareAnomaliesSlowPhysicalStorageDetectionArgs struct {
	// Alert if **any** condition is met in 4 out of 5 samples
	CustomThresholds VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrInput `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VmwareAnomaliesSlowPhysicalStorageDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesSlowPhysicalStorageDetection)(nil)).Elem()
}

func (i VmwareAnomaliesSlowPhysicalStorageDetectionArgs) ToVmwareAnomaliesSlowPhysicalStorageDetectionOutput() VmwareAnomaliesSlowPhysicalStorageDetectionOutput {
	return i.ToVmwareAnomaliesSlowPhysicalStorageDetectionOutputWithContext(context.Background())
}

func (i VmwareAnomaliesSlowPhysicalStorageDetectionArgs) ToVmwareAnomaliesSlowPhysicalStorageDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesSlowPhysicalStorageDetectionOutput)
}

func (i VmwareAnomaliesSlowPhysicalStorageDetectionArgs) ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput {
	return i.ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesSlowPhysicalStorageDetectionArgs) ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesSlowPhysicalStorageDetectionOutput).ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(ctx)
}

// VmwareAnomaliesSlowPhysicalStorageDetectionPtrInput is an input type that accepts VmwareAnomaliesSlowPhysicalStorageDetectionArgs, VmwareAnomaliesSlowPhysicalStorageDetectionPtr and VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesSlowPhysicalStorageDetectionPtrInput` via:
//
//	        VmwareAnomaliesSlowPhysicalStorageDetectionArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesSlowPhysicalStorageDetectionPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput
	ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput
}

type vmwareAnomaliesSlowPhysicalStorageDetectionPtrType VmwareAnomaliesSlowPhysicalStorageDetectionArgs

func VmwareAnomaliesSlowPhysicalStorageDetectionPtr(v *VmwareAnomaliesSlowPhysicalStorageDetectionArgs) VmwareAnomaliesSlowPhysicalStorageDetectionPtrInput {
	return (*vmwareAnomaliesSlowPhysicalStorageDetectionPtrType)(v)
}

func (*vmwareAnomaliesSlowPhysicalStorageDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesSlowPhysicalStorageDetection)(nil)).Elem()
}

func (i *vmwareAnomaliesSlowPhysicalStorageDetectionPtrType) ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput {
	return i.ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesSlowPhysicalStorageDetectionPtrType) ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput)
}

type VmwareAnomaliesSlowPhysicalStorageDetectionOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesSlowPhysicalStorageDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesSlowPhysicalStorageDetection)(nil)).Elem()
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionOutput() VmwareAnomaliesSlowPhysicalStorageDetectionOutput {
	return o
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionOutput {
	return o
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput {
	return o.ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesSlowPhysicalStorageDetection) *VmwareAnomaliesSlowPhysicalStorageDetection {
		return &v
	}).(VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput)
}

// Alert if **any** condition is met in 4 out of 5 samples
func (o VmwareAnomaliesSlowPhysicalStorageDetectionOutput) CustomThresholds() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesSlowPhysicalStorageDetection) *VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds {
		return v.CustomThresholds
	}).(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesSlowPhysicalStorageDetectionOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesSlowPhysicalStorageDetection) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesSlowPhysicalStorageDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VmwareAnomaliesSlowPhysicalStorageDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesSlowPhysicalStorageDetection)(nil)).Elem()
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput) Elem() VmwareAnomaliesSlowPhysicalStorageDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomaliesSlowPhysicalStorageDetection) VmwareAnomaliesSlowPhysicalStorageDetection {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesSlowPhysicalStorageDetection
		return ret
	}).(VmwareAnomaliesSlowPhysicalStorageDetectionOutput)
}

// Alert if **any** condition is met in 4 out of 5 samples
func (o VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput) CustomThresholds() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesSlowPhysicalStorageDetection) *VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds {
		if v == nil {
			return nil
		}
		return v.CustomThresholds
	}).(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesSlowPhysicalStorageDetection) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesSlowPhysicalStorageDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds struct {
	// Read/write latency is higher than
	AvgReadWriteLatency int `pulumi:"avgReadWriteLatency"`
	// Peak value for read/write latency is higher than
	PeakReadWriteLatency int `pulumi:"peakReadWriteLatency"`
}

// VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsInput is an input type that accepts VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs and VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput values.
// You can construct a concrete instance of `VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsInput` via:
//
//	VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs{...}
type VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsInput interface {
	pulumi.Input

	ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput
	ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutputWithContext(context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput
}

type VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs struct {
	// Read/write latency is higher than
	AvgReadWriteLatency pulumi.IntInput `pulumi:"avgReadWriteLatency"`
	// Peak value for read/write latency is higher than
	PeakReadWriteLatency pulumi.IntInput `pulumi:"peakReadWriteLatency"`
}

func (VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds)(nil)).Elem()
}

func (i VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput {
	return i.ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutputWithContext(context.Background())
}

func (i VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput)
}

func (i VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput).ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(ctx)
}

// VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrInput is an input type that accepts VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs, VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtr and VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrInput` via:
//
//	        VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput
	ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput
}

type vmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrType VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs

func VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtr(v *VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrInput {
	return (*vmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrType)(v)
}

func (*vmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds)(nil)).Elem()
}

func (i *vmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrType) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrType) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput)
}

type VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return o.ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds) *VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds {
		return &v
	}).(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput)
}

// Read/write latency is higher than
func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput) AvgReadWriteLatency() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds) int { return v.AvgReadWriteLatency }).(pulumi.IntOutput)
}

// Peak value for read/write latency is higher than
func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput) PeakReadWriteLatency() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds) int { return v.PeakReadWriteLatency }).(pulumi.IntOutput)
}

type VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput) Elem() VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput {
	return o.ApplyT(func(v *VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds) VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds
		return ret
	}).(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput)
}

// Read/write latency is higher than
func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput) AvgReadWriteLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.AvgReadWriteLatency
	}).(pulumi.IntPtrOutput)
}

// Peak value for read/write latency is higher than
func (o VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput) PeakReadWriteLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.PeakReadWriteLatency
	}).(pulumi.IntPtrOutput)
}

type VmwareAnomaliesUndersizedStorageDetection struct {
	// Alert if **any** condition is met in 3 out of 5 samples
	CustomThresholds *VmwareAnomaliesUndersizedStorageDetectionCustomThresholds `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// VmwareAnomaliesUndersizedStorageDetectionInput is an input type that accepts VmwareAnomaliesUndersizedStorageDetectionArgs and VmwareAnomaliesUndersizedStorageDetectionOutput values.
// You can construct a concrete instance of `VmwareAnomaliesUndersizedStorageDetectionInput` via:
//
//	VmwareAnomaliesUndersizedStorageDetectionArgs{...}
type VmwareAnomaliesUndersizedStorageDetectionInput interface {
	pulumi.Input

	ToVmwareAnomaliesUndersizedStorageDetectionOutput() VmwareAnomaliesUndersizedStorageDetectionOutput
	ToVmwareAnomaliesUndersizedStorageDetectionOutputWithContext(context.Context) VmwareAnomaliesUndersizedStorageDetectionOutput
}

type VmwareAnomaliesUndersizedStorageDetectionArgs struct {
	// Alert if **any** condition is met in 3 out of 5 samples
	CustomThresholds VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrInput `pulumi:"customThresholds"`
	// Possible Values: `Auto`, `Custom`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (VmwareAnomaliesUndersizedStorageDetectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesUndersizedStorageDetection)(nil)).Elem()
}

func (i VmwareAnomaliesUndersizedStorageDetectionArgs) ToVmwareAnomaliesUndersizedStorageDetectionOutput() VmwareAnomaliesUndersizedStorageDetectionOutput {
	return i.ToVmwareAnomaliesUndersizedStorageDetectionOutputWithContext(context.Background())
}

func (i VmwareAnomaliesUndersizedStorageDetectionArgs) ToVmwareAnomaliesUndersizedStorageDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesUndersizedStorageDetectionOutput)
}

func (i VmwareAnomaliesUndersizedStorageDetectionArgs) ToVmwareAnomaliesUndersizedStorageDetectionPtrOutput() VmwareAnomaliesUndersizedStorageDetectionPtrOutput {
	return i.ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesUndersizedStorageDetectionArgs) ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesUndersizedStorageDetectionOutput).ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(ctx)
}

// VmwareAnomaliesUndersizedStorageDetectionPtrInput is an input type that accepts VmwareAnomaliesUndersizedStorageDetectionArgs, VmwareAnomaliesUndersizedStorageDetectionPtr and VmwareAnomaliesUndersizedStorageDetectionPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesUndersizedStorageDetectionPtrInput` via:
//
//	        VmwareAnomaliesUndersizedStorageDetectionArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesUndersizedStorageDetectionPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesUndersizedStorageDetectionPtrOutput() VmwareAnomaliesUndersizedStorageDetectionPtrOutput
	ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(context.Context) VmwareAnomaliesUndersizedStorageDetectionPtrOutput
}

type vmwareAnomaliesUndersizedStorageDetectionPtrType VmwareAnomaliesUndersizedStorageDetectionArgs

func VmwareAnomaliesUndersizedStorageDetectionPtr(v *VmwareAnomaliesUndersizedStorageDetectionArgs) VmwareAnomaliesUndersizedStorageDetectionPtrInput {
	return (*vmwareAnomaliesUndersizedStorageDetectionPtrType)(v)
}

func (*vmwareAnomaliesUndersizedStorageDetectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesUndersizedStorageDetection)(nil)).Elem()
}

func (i *vmwareAnomaliesUndersizedStorageDetectionPtrType) ToVmwareAnomaliesUndersizedStorageDetectionPtrOutput() VmwareAnomaliesUndersizedStorageDetectionPtrOutput {
	return i.ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesUndersizedStorageDetectionPtrType) ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesUndersizedStorageDetectionPtrOutput)
}

type VmwareAnomaliesUndersizedStorageDetectionOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesUndersizedStorageDetectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesUndersizedStorageDetection)(nil)).Elem()
}

func (o VmwareAnomaliesUndersizedStorageDetectionOutput) ToVmwareAnomaliesUndersizedStorageDetectionOutput() VmwareAnomaliesUndersizedStorageDetectionOutput {
	return o
}

func (o VmwareAnomaliesUndersizedStorageDetectionOutput) ToVmwareAnomaliesUndersizedStorageDetectionOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionOutput {
	return o
}

func (o VmwareAnomaliesUndersizedStorageDetectionOutput) ToVmwareAnomaliesUndersizedStorageDetectionPtrOutput() VmwareAnomaliesUndersizedStorageDetectionPtrOutput {
	return o.ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesUndersizedStorageDetectionOutput) ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesUndersizedStorageDetection) *VmwareAnomaliesUndersizedStorageDetection {
		return &v
	}).(VmwareAnomaliesUndersizedStorageDetectionPtrOutput)
}

// Alert if **any** condition is met in 3 out of 5 samples
func (o VmwareAnomaliesUndersizedStorageDetectionOutput) CustomThresholds() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesUndersizedStorageDetection) *VmwareAnomaliesUndersizedStorageDetectionCustomThresholds {
		return v.CustomThresholds
	}).(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesUndersizedStorageDetectionOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VmwareAnomaliesUndersizedStorageDetection) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesUndersizedStorageDetectionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v VmwareAnomaliesUndersizedStorageDetection) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type VmwareAnomaliesUndersizedStorageDetectionPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesUndersizedStorageDetectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesUndersizedStorageDetection)(nil)).Elem()
}

func (o VmwareAnomaliesUndersizedStorageDetectionPtrOutput) ToVmwareAnomaliesUndersizedStorageDetectionPtrOutput() VmwareAnomaliesUndersizedStorageDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesUndersizedStorageDetectionPtrOutput) ToVmwareAnomaliesUndersizedStorageDetectionPtrOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionPtrOutput {
	return o
}

func (o VmwareAnomaliesUndersizedStorageDetectionPtrOutput) Elem() VmwareAnomaliesUndersizedStorageDetectionOutput {
	return o.ApplyT(func(v *VmwareAnomaliesUndersizedStorageDetection) VmwareAnomaliesUndersizedStorageDetection {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesUndersizedStorageDetection
		return ret
	}).(VmwareAnomaliesUndersizedStorageDetectionOutput)
}

// Alert if **any** condition is met in 3 out of 5 samples
func (o VmwareAnomaliesUndersizedStorageDetectionPtrOutput) CustomThresholds() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesUndersizedStorageDetection) *VmwareAnomaliesUndersizedStorageDetectionCustomThresholds {
		if v == nil {
			return nil
		}
		return v.CustomThresholds
	}).(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput)
}

// Possible Values: `Auto`, `Custom`
func (o VmwareAnomaliesUndersizedStorageDetectionPtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesUndersizedStorageDetection) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o VmwareAnomaliesUndersizedStorageDetectionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesUndersizedStorageDetection) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type VmwareAnomaliesUndersizedStorageDetectionCustomThresholds struct {
	// Average queue command latency is higher than
	AverageQueueCommandLatency int `pulumi:"averageQueueCommandLatency"`
	// Peak queue command latency is higher than
	PeakQueueCommandLatency int `pulumi:"peakQueueCommandLatency"`
}

// VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsInput is an input type that accepts VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs and VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput values.
// You can construct a concrete instance of `VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsInput` via:
//
//	VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs{...}
type VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsInput interface {
	pulumi.Input

	ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput
	ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutputWithContext(context.Context) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput
}

type VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs struct {
	// Average queue command latency is higher than
	AverageQueueCommandLatency pulumi.IntInput `pulumi:"averageQueueCommandLatency"`
	// Peak queue command latency is higher than
	PeakQueueCommandLatency pulumi.IntInput `pulumi:"peakQueueCommandLatency"`
}

func (VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesUndersizedStorageDetectionCustomThresholds)(nil)).Elem()
}

func (i VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput {
	return i.ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutputWithContext(context.Background())
}

func (i VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput)
}

func (i VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput).ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx)
}

// VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrInput is an input type that accepts VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs, VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtr and VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrInput` via:
//
//	        VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrInput interface {
	pulumi.Input

	ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput
	ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(context.Context) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput
}

type vmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrType VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs

func VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtr(v *VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrInput {
	return (*vmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrType)(v)
}

func (*vmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesUndersizedStorageDetectionCustomThresholds)(nil)).Elem()
}

func (i *vmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrType) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return i.ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *vmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrType) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput)
}

type VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VmwareAnomaliesUndersizedStorageDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput {
	return o
}

func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return o.ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VmwareAnomaliesUndersizedStorageDetectionCustomThresholds) *VmwareAnomaliesUndersizedStorageDetectionCustomThresholds {
		return &v
	}).(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput)
}

// Average queue command latency is higher than
func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput) AverageQueueCommandLatency() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesUndersizedStorageDetectionCustomThresholds) int {
		return v.AverageQueueCommandLatency
	}).(pulumi.IntOutput)
}

// Peak queue command latency is higher than
func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput) PeakQueueCommandLatency() pulumi.IntOutput {
	return o.ApplyT(func(v VmwareAnomaliesUndersizedStorageDetectionCustomThresholds) int {
		return v.PeakQueueCommandLatency
	}).(pulumi.IntOutput)
}

type VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VmwareAnomaliesUndersizedStorageDetectionCustomThresholds)(nil)).Elem()
}

func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput) ToVmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutputWithContext(ctx context.Context) VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput {
	return o
}

func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput) Elem() VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput {
	return o.ApplyT(func(v *VmwareAnomaliesUndersizedStorageDetectionCustomThresholds) VmwareAnomaliesUndersizedStorageDetectionCustomThresholds {
		if v != nil {
			return *v
		}
		var ret VmwareAnomaliesUndersizedStorageDetectionCustomThresholds
		return ret
	}).(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput)
}

// Average queue command latency is higher than
func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput) AverageQueueCommandLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesUndersizedStorageDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.AverageQueueCommandLatency
	}).(pulumi.IntPtrOutput)
}

// Peak queue command latency is higher than
func (o VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput) PeakQueueCommandLatency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VmwareAnomaliesUndersizedStorageDetectionCustomThresholds) *int {
		if v == nil {
			return nil
		}
		return &v.PeakQueueCommandLatency
	}).(pulumi.IntPtrOutput)
}

type VulnerabilityCodeCriteria struct {
	// Process group
	ProcessGroup *string `pulumi:"processGroup"`
}

// VulnerabilityCodeCriteriaInput is an input type that accepts VulnerabilityCodeCriteriaArgs and VulnerabilityCodeCriteriaOutput values.
// You can construct a concrete instance of `VulnerabilityCodeCriteriaInput` via:
//
//	VulnerabilityCodeCriteriaArgs{...}
type VulnerabilityCodeCriteriaInput interface {
	pulumi.Input

	ToVulnerabilityCodeCriteriaOutput() VulnerabilityCodeCriteriaOutput
	ToVulnerabilityCodeCriteriaOutputWithContext(context.Context) VulnerabilityCodeCriteriaOutput
}

type VulnerabilityCodeCriteriaArgs struct {
	// Process group
	ProcessGroup pulumi.StringPtrInput `pulumi:"processGroup"`
}

func (VulnerabilityCodeCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeCriteria)(nil)).Elem()
}

func (i VulnerabilityCodeCriteriaArgs) ToVulnerabilityCodeCriteriaOutput() VulnerabilityCodeCriteriaOutput {
	return i.ToVulnerabilityCodeCriteriaOutputWithContext(context.Background())
}

func (i VulnerabilityCodeCriteriaArgs) ToVulnerabilityCodeCriteriaOutputWithContext(ctx context.Context) VulnerabilityCodeCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeCriteriaOutput)
}

func (i VulnerabilityCodeCriteriaArgs) ToVulnerabilityCodeCriteriaPtrOutput() VulnerabilityCodeCriteriaPtrOutput {
	return i.ToVulnerabilityCodeCriteriaPtrOutputWithContext(context.Background())
}

func (i VulnerabilityCodeCriteriaArgs) ToVulnerabilityCodeCriteriaPtrOutputWithContext(ctx context.Context) VulnerabilityCodeCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeCriteriaOutput).ToVulnerabilityCodeCriteriaPtrOutputWithContext(ctx)
}

// VulnerabilityCodeCriteriaPtrInput is an input type that accepts VulnerabilityCodeCriteriaArgs, VulnerabilityCodeCriteriaPtr and VulnerabilityCodeCriteriaPtrOutput values.
// You can construct a concrete instance of `VulnerabilityCodeCriteriaPtrInput` via:
//
//	        VulnerabilityCodeCriteriaArgs{...}
//
//	or:
//
//	        nil
type VulnerabilityCodeCriteriaPtrInput interface {
	pulumi.Input

	ToVulnerabilityCodeCriteriaPtrOutput() VulnerabilityCodeCriteriaPtrOutput
	ToVulnerabilityCodeCriteriaPtrOutputWithContext(context.Context) VulnerabilityCodeCriteriaPtrOutput
}

type vulnerabilityCodeCriteriaPtrType VulnerabilityCodeCriteriaArgs

func VulnerabilityCodeCriteriaPtr(v *VulnerabilityCodeCriteriaArgs) VulnerabilityCodeCriteriaPtrInput {
	return (*vulnerabilityCodeCriteriaPtrType)(v)
}

func (*vulnerabilityCodeCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityCodeCriteria)(nil)).Elem()
}

func (i *vulnerabilityCodeCriteriaPtrType) ToVulnerabilityCodeCriteriaPtrOutput() VulnerabilityCodeCriteriaPtrOutput {
	return i.ToVulnerabilityCodeCriteriaPtrOutputWithContext(context.Background())
}

func (i *vulnerabilityCodeCriteriaPtrType) ToVulnerabilityCodeCriteriaPtrOutputWithContext(ctx context.Context) VulnerabilityCodeCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeCriteriaPtrOutput)
}

type VulnerabilityCodeCriteriaOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeCriteria)(nil)).Elem()
}

func (o VulnerabilityCodeCriteriaOutput) ToVulnerabilityCodeCriteriaOutput() VulnerabilityCodeCriteriaOutput {
	return o
}

func (o VulnerabilityCodeCriteriaOutput) ToVulnerabilityCodeCriteriaOutputWithContext(ctx context.Context) VulnerabilityCodeCriteriaOutput {
	return o
}

func (o VulnerabilityCodeCriteriaOutput) ToVulnerabilityCodeCriteriaPtrOutput() VulnerabilityCodeCriteriaPtrOutput {
	return o.ToVulnerabilityCodeCriteriaPtrOutputWithContext(context.Background())
}

func (o VulnerabilityCodeCriteriaOutput) ToVulnerabilityCodeCriteriaPtrOutputWithContext(ctx context.Context) VulnerabilityCodeCriteriaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityCodeCriteria) *VulnerabilityCodeCriteria {
		return &v
	}).(VulnerabilityCodeCriteriaPtrOutput)
}

// Process group
func (o VulnerabilityCodeCriteriaOutput) ProcessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VulnerabilityCodeCriteria) *string { return v.ProcessGroup }).(pulumi.StringPtrOutput)
}

type VulnerabilityCodeCriteriaPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityCodeCriteria)(nil)).Elem()
}

func (o VulnerabilityCodeCriteriaPtrOutput) ToVulnerabilityCodeCriteriaPtrOutput() VulnerabilityCodeCriteriaPtrOutput {
	return o
}

func (o VulnerabilityCodeCriteriaPtrOutput) ToVulnerabilityCodeCriteriaPtrOutputWithContext(ctx context.Context) VulnerabilityCodeCriteriaPtrOutput {
	return o
}

func (o VulnerabilityCodeCriteriaPtrOutput) Elem() VulnerabilityCodeCriteriaOutput {
	return o.ApplyT(func(v *VulnerabilityCodeCriteria) VulnerabilityCodeCriteria {
		if v != nil {
			return *v
		}
		var ret VulnerabilityCodeCriteria
		return ret
	}).(VulnerabilityCodeCriteriaOutput)
}

// Process group
func (o VulnerabilityCodeCriteriaPtrOutput) ProcessGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VulnerabilityCodeCriteria) *string {
		if v == nil {
			return nil
		}
		return v.ProcessGroup
	}).(pulumi.StringPtrOutput)
}

type VulnerabilityCodeMetadata struct {
	// no documentation available
	Comment string `pulumi:"comment"`
}

// VulnerabilityCodeMetadataInput is an input type that accepts VulnerabilityCodeMetadataArgs and VulnerabilityCodeMetadataOutput values.
// You can construct a concrete instance of `VulnerabilityCodeMetadataInput` via:
//
//	VulnerabilityCodeMetadataArgs{...}
type VulnerabilityCodeMetadataInput interface {
	pulumi.Input

	ToVulnerabilityCodeMetadataOutput() VulnerabilityCodeMetadataOutput
	ToVulnerabilityCodeMetadataOutputWithContext(context.Context) VulnerabilityCodeMetadataOutput
}

type VulnerabilityCodeMetadataArgs struct {
	// no documentation available
	Comment pulumi.StringInput `pulumi:"comment"`
}

func (VulnerabilityCodeMetadataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeMetadata)(nil)).Elem()
}

func (i VulnerabilityCodeMetadataArgs) ToVulnerabilityCodeMetadataOutput() VulnerabilityCodeMetadataOutput {
	return i.ToVulnerabilityCodeMetadataOutputWithContext(context.Background())
}

func (i VulnerabilityCodeMetadataArgs) ToVulnerabilityCodeMetadataOutputWithContext(ctx context.Context) VulnerabilityCodeMetadataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeMetadataOutput)
}

func (i VulnerabilityCodeMetadataArgs) ToVulnerabilityCodeMetadataPtrOutput() VulnerabilityCodeMetadataPtrOutput {
	return i.ToVulnerabilityCodeMetadataPtrOutputWithContext(context.Background())
}

func (i VulnerabilityCodeMetadataArgs) ToVulnerabilityCodeMetadataPtrOutputWithContext(ctx context.Context) VulnerabilityCodeMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeMetadataOutput).ToVulnerabilityCodeMetadataPtrOutputWithContext(ctx)
}

// VulnerabilityCodeMetadataPtrInput is an input type that accepts VulnerabilityCodeMetadataArgs, VulnerabilityCodeMetadataPtr and VulnerabilityCodeMetadataPtrOutput values.
// You can construct a concrete instance of `VulnerabilityCodeMetadataPtrInput` via:
//
//	        VulnerabilityCodeMetadataArgs{...}
//
//	or:
//
//	        nil
type VulnerabilityCodeMetadataPtrInput interface {
	pulumi.Input

	ToVulnerabilityCodeMetadataPtrOutput() VulnerabilityCodeMetadataPtrOutput
	ToVulnerabilityCodeMetadataPtrOutputWithContext(context.Context) VulnerabilityCodeMetadataPtrOutput
}

type vulnerabilityCodeMetadataPtrType VulnerabilityCodeMetadataArgs

func VulnerabilityCodeMetadataPtr(v *VulnerabilityCodeMetadataArgs) VulnerabilityCodeMetadataPtrInput {
	return (*vulnerabilityCodeMetadataPtrType)(v)
}

func (*vulnerabilityCodeMetadataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityCodeMetadata)(nil)).Elem()
}

func (i *vulnerabilityCodeMetadataPtrType) ToVulnerabilityCodeMetadataPtrOutput() VulnerabilityCodeMetadataPtrOutput {
	return i.ToVulnerabilityCodeMetadataPtrOutputWithContext(context.Background())
}

func (i *vulnerabilityCodeMetadataPtrType) ToVulnerabilityCodeMetadataPtrOutputWithContext(ctx context.Context) VulnerabilityCodeMetadataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeMetadataPtrOutput)
}

type VulnerabilityCodeMetadataOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeMetadataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeMetadata)(nil)).Elem()
}

func (o VulnerabilityCodeMetadataOutput) ToVulnerabilityCodeMetadataOutput() VulnerabilityCodeMetadataOutput {
	return o
}

func (o VulnerabilityCodeMetadataOutput) ToVulnerabilityCodeMetadataOutputWithContext(ctx context.Context) VulnerabilityCodeMetadataOutput {
	return o
}

func (o VulnerabilityCodeMetadataOutput) ToVulnerabilityCodeMetadataPtrOutput() VulnerabilityCodeMetadataPtrOutput {
	return o.ToVulnerabilityCodeMetadataPtrOutputWithContext(context.Background())
}

func (o VulnerabilityCodeMetadataOutput) ToVulnerabilityCodeMetadataPtrOutputWithContext(ctx context.Context) VulnerabilityCodeMetadataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityCodeMetadata) *VulnerabilityCodeMetadata {
		return &v
	}).(VulnerabilityCodeMetadataPtrOutput)
}

// no documentation available
func (o VulnerabilityCodeMetadataOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v VulnerabilityCodeMetadata) string { return v.Comment }).(pulumi.StringOutput)
}

type VulnerabilityCodeMetadataPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeMetadataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityCodeMetadata)(nil)).Elem()
}

func (o VulnerabilityCodeMetadataPtrOutput) ToVulnerabilityCodeMetadataPtrOutput() VulnerabilityCodeMetadataPtrOutput {
	return o
}

func (o VulnerabilityCodeMetadataPtrOutput) ToVulnerabilityCodeMetadataPtrOutputWithContext(ctx context.Context) VulnerabilityCodeMetadataPtrOutput {
	return o
}

func (o VulnerabilityCodeMetadataPtrOutput) Elem() VulnerabilityCodeMetadataOutput {
	return o.ApplyT(func(v *VulnerabilityCodeMetadata) VulnerabilityCodeMetadata {
		if v != nil {
			return *v
		}
		var ret VulnerabilityCodeMetadata
		return ret
	}).(VulnerabilityCodeMetadataOutput)
}

// no documentation available
func (o VulnerabilityCodeMetadataPtrOutput) Comment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VulnerabilityCodeMetadata) *string {
		if v == nil {
			return nil
		}
		return &v.Comment
	}).(pulumi.StringPtrOutput)
}

type VulnerabilityCodeResourceAttributeConditions struct {
	ResourceAttributeConditions []VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition `pulumi:"resourceAttributeConditions"`
}

// VulnerabilityCodeResourceAttributeConditionsInput is an input type that accepts VulnerabilityCodeResourceAttributeConditionsArgs and VulnerabilityCodeResourceAttributeConditionsOutput values.
// You can construct a concrete instance of `VulnerabilityCodeResourceAttributeConditionsInput` via:
//
//	VulnerabilityCodeResourceAttributeConditionsArgs{...}
type VulnerabilityCodeResourceAttributeConditionsInput interface {
	pulumi.Input

	ToVulnerabilityCodeResourceAttributeConditionsOutput() VulnerabilityCodeResourceAttributeConditionsOutput
	ToVulnerabilityCodeResourceAttributeConditionsOutputWithContext(context.Context) VulnerabilityCodeResourceAttributeConditionsOutput
}

type VulnerabilityCodeResourceAttributeConditionsArgs struct {
	ResourceAttributeConditions VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayInput `pulumi:"resourceAttributeConditions"`
}

func (VulnerabilityCodeResourceAttributeConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeResourceAttributeConditions)(nil)).Elem()
}

func (i VulnerabilityCodeResourceAttributeConditionsArgs) ToVulnerabilityCodeResourceAttributeConditionsOutput() VulnerabilityCodeResourceAttributeConditionsOutput {
	return i.ToVulnerabilityCodeResourceAttributeConditionsOutputWithContext(context.Background())
}

func (i VulnerabilityCodeResourceAttributeConditionsArgs) ToVulnerabilityCodeResourceAttributeConditionsOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeResourceAttributeConditionsOutput)
}

func (i VulnerabilityCodeResourceAttributeConditionsArgs) ToVulnerabilityCodeResourceAttributeConditionsPtrOutput() VulnerabilityCodeResourceAttributeConditionsPtrOutput {
	return i.ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(context.Background())
}

func (i VulnerabilityCodeResourceAttributeConditionsArgs) ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeResourceAttributeConditionsOutput).ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(ctx)
}

// VulnerabilityCodeResourceAttributeConditionsPtrInput is an input type that accepts VulnerabilityCodeResourceAttributeConditionsArgs, VulnerabilityCodeResourceAttributeConditionsPtr and VulnerabilityCodeResourceAttributeConditionsPtrOutput values.
// You can construct a concrete instance of `VulnerabilityCodeResourceAttributeConditionsPtrInput` via:
//
//	        VulnerabilityCodeResourceAttributeConditionsArgs{...}
//
//	or:
//
//	        nil
type VulnerabilityCodeResourceAttributeConditionsPtrInput interface {
	pulumi.Input

	ToVulnerabilityCodeResourceAttributeConditionsPtrOutput() VulnerabilityCodeResourceAttributeConditionsPtrOutput
	ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(context.Context) VulnerabilityCodeResourceAttributeConditionsPtrOutput
}

type vulnerabilityCodeResourceAttributeConditionsPtrType VulnerabilityCodeResourceAttributeConditionsArgs

func VulnerabilityCodeResourceAttributeConditionsPtr(v *VulnerabilityCodeResourceAttributeConditionsArgs) VulnerabilityCodeResourceAttributeConditionsPtrInput {
	return (*vulnerabilityCodeResourceAttributeConditionsPtrType)(v)
}

func (*vulnerabilityCodeResourceAttributeConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityCodeResourceAttributeConditions)(nil)).Elem()
}

func (i *vulnerabilityCodeResourceAttributeConditionsPtrType) ToVulnerabilityCodeResourceAttributeConditionsPtrOutput() VulnerabilityCodeResourceAttributeConditionsPtrOutput {
	return i.ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(context.Background())
}

func (i *vulnerabilityCodeResourceAttributeConditionsPtrType) ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeResourceAttributeConditionsPtrOutput)
}

type VulnerabilityCodeResourceAttributeConditionsOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeResourceAttributeConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeResourceAttributeConditions)(nil)).Elem()
}

func (o VulnerabilityCodeResourceAttributeConditionsOutput) ToVulnerabilityCodeResourceAttributeConditionsOutput() VulnerabilityCodeResourceAttributeConditionsOutput {
	return o
}

func (o VulnerabilityCodeResourceAttributeConditionsOutput) ToVulnerabilityCodeResourceAttributeConditionsOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsOutput {
	return o
}

func (o VulnerabilityCodeResourceAttributeConditionsOutput) ToVulnerabilityCodeResourceAttributeConditionsPtrOutput() VulnerabilityCodeResourceAttributeConditionsPtrOutput {
	return o.ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(context.Background())
}

func (o VulnerabilityCodeResourceAttributeConditionsOutput) ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityCodeResourceAttributeConditions) *VulnerabilityCodeResourceAttributeConditions {
		return &v
	}).(VulnerabilityCodeResourceAttributeConditionsPtrOutput)
}

func (o VulnerabilityCodeResourceAttributeConditionsOutput) ResourceAttributeConditions() VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput {
	return o.ApplyT(func(v VulnerabilityCodeResourceAttributeConditions) []VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition {
		return v.ResourceAttributeConditions
	}).(VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput)
}

type VulnerabilityCodeResourceAttributeConditionsPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeResourceAttributeConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityCodeResourceAttributeConditions)(nil)).Elem()
}

func (o VulnerabilityCodeResourceAttributeConditionsPtrOutput) ToVulnerabilityCodeResourceAttributeConditionsPtrOutput() VulnerabilityCodeResourceAttributeConditionsPtrOutput {
	return o
}

func (o VulnerabilityCodeResourceAttributeConditionsPtrOutput) ToVulnerabilityCodeResourceAttributeConditionsPtrOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsPtrOutput {
	return o
}

func (o VulnerabilityCodeResourceAttributeConditionsPtrOutput) Elem() VulnerabilityCodeResourceAttributeConditionsOutput {
	return o.ApplyT(func(v *VulnerabilityCodeResourceAttributeConditions) VulnerabilityCodeResourceAttributeConditions {
		if v != nil {
			return *v
		}
		var ret VulnerabilityCodeResourceAttributeConditions
		return ret
	}).(VulnerabilityCodeResourceAttributeConditionsOutput)
}

func (o VulnerabilityCodeResourceAttributeConditionsPtrOutput) ResourceAttributeConditions() VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput {
	return o.ApplyT(func(v *VulnerabilityCodeResourceAttributeConditions) []VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition {
		if v == nil {
			return nil
		}
		return v.ResourceAttributeConditions
	}).(VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput)
}

type VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition struct {
	// Possible Values: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_END_WITH`, `DOES_NOT_EXIST`, `DOES_NOT_START_WITH`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `NOT_EQUALS`, `STARTS_WITH`
	Matcher string `pulumi:"matcher"`
	// Resource attribute key
	ResourceAttributeKey string `pulumi:"resourceAttributeKey"`
	// Resource attribute value
	ResourceAttributeValue *string `pulumi:"resourceAttributeValue"`
}

// VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionInput is an input type that accepts VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArgs and VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput values.
// You can construct a concrete instance of `VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionInput` via:
//
//	VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArgs{...}
type VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionInput interface {
	pulumi.Input

	ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput() VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput
	ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutputWithContext(context.Context) VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput
}

type VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArgs struct {
	// Possible Values: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_END_WITH`, `DOES_NOT_EXIST`, `DOES_NOT_START_WITH`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `NOT_EQUALS`, `STARTS_WITH`
	Matcher pulumi.StringInput `pulumi:"matcher"`
	// Resource attribute key
	ResourceAttributeKey pulumi.StringInput `pulumi:"resourceAttributeKey"`
	// Resource attribute value
	ResourceAttributeValue pulumi.StringPtrInput `pulumi:"resourceAttributeValue"`
}

func (VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition)(nil)).Elem()
}

func (i VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArgs) ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput() VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput {
	return i.ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutputWithContext(context.Background())
}

func (i VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArgs) ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput)
}

// VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayInput is an input type that accepts VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArray and VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput values.
// You can construct a concrete instance of `VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayInput` via:
//
//	VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArray{ VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArgs{...} }
type VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayInput interface {
	pulumi.Input

	ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput() VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput
	ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutputWithContext(context.Context) VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput
}

type VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArray []VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionInput

func (VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition)(nil)).Elem()
}

func (i VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArray) ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput() VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput {
	return i.ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutputWithContext(context.Background())
}

func (i VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArray) ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput)
}

type VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition)(nil)).Elem()
}

func (o VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput) ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput() VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput {
	return o
}

func (o VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput) ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput {
	return o
}

// Possible Values: `CONTAINS`, `DOES_NOT_CONTAIN`, `DOES_NOT_END_WITH`, `DOES_NOT_EXIST`, `DOES_NOT_START_WITH`, `ENDS_WITH`, `EQUALS`, `EXISTS`, `NOT_EQUALS`, `STARTS_WITH`
func (o VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput) Matcher() pulumi.StringOutput {
	return o.ApplyT(func(v VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition) string {
		return v.Matcher
	}).(pulumi.StringOutput)
}

// Resource attribute key
func (o VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput) ResourceAttributeKey() pulumi.StringOutput {
	return o.ApplyT(func(v VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition) string {
		return v.ResourceAttributeKey
	}).(pulumi.StringOutput)
}

// Resource attribute value
func (o VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput) ResourceAttributeValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition) *string {
		return v.ResourceAttributeValue
	}).(pulumi.StringPtrOutput)
}

type VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition)(nil)).Elem()
}

func (o VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput) ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput() VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput {
	return o
}

func (o VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput) ToVulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutputWithContext(ctx context.Context) VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput {
	return o
}

func (o VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput) Index(i pulumi.IntInput) VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition {
		return vs[0].([]VulnerabilityCodeResourceAttributeConditionsResourceAttributeCondition)[vs[1].(int)]
	}).(VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput)
}

type VulnerabilityCodeVulnerabilityDetectionControl struct {
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	MonitoringMode string `pulumi:"monitoringMode"`
}

// VulnerabilityCodeVulnerabilityDetectionControlInput is an input type that accepts VulnerabilityCodeVulnerabilityDetectionControlArgs and VulnerabilityCodeVulnerabilityDetectionControlOutput values.
// You can construct a concrete instance of `VulnerabilityCodeVulnerabilityDetectionControlInput` via:
//
//	VulnerabilityCodeVulnerabilityDetectionControlArgs{...}
type VulnerabilityCodeVulnerabilityDetectionControlInput interface {
	pulumi.Input

	ToVulnerabilityCodeVulnerabilityDetectionControlOutput() VulnerabilityCodeVulnerabilityDetectionControlOutput
	ToVulnerabilityCodeVulnerabilityDetectionControlOutputWithContext(context.Context) VulnerabilityCodeVulnerabilityDetectionControlOutput
}

type VulnerabilityCodeVulnerabilityDetectionControlArgs struct {
	// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
	MonitoringMode pulumi.StringInput `pulumi:"monitoringMode"`
}

func (VulnerabilityCodeVulnerabilityDetectionControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeVulnerabilityDetectionControl)(nil)).Elem()
}

func (i VulnerabilityCodeVulnerabilityDetectionControlArgs) ToVulnerabilityCodeVulnerabilityDetectionControlOutput() VulnerabilityCodeVulnerabilityDetectionControlOutput {
	return i.ToVulnerabilityCodeVulnerabilityDetectionControlOutputWithContext(context.Background())
}

func (i VulnerabilityCodeVulnerabilityDetectionControlArgs) ToVulnerabilityCodeVulnerabilityDetectionControlOutputWithContext(ctx context.Context) VulnerabilityCodeVulnerabilityDetectionControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeVulnerabilityDetectionControlOutput)
}

func (i VulnerabilityCodeVulnerabilityDetectionControlArgs) ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutput() VulnerabilityCodeVulnerabilityDetectionControlPtrOutput {
	return i.ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(context.Background())
}

func (i VulnerabilityCodeVulnerabilityDetectionControlArgs) ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(ctx context.Context) VulnerabilityCodeVulnerabilityDetectionControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeVulnerabilityDetectionControlOutput).ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(ctx)
}

// VulnerabilityCodeVulnerabilityDetectionControlPtrInput is an input type that accepts VulnerabilityCodeVulnerabilityDetectionControlArgs, VulnerabilityCodeVulnerabilityDetectionControlPtr and VulnerabilityCodeVulnerabilityDetectionControlPtrOutput values.
// You can construct a concrete instance of `VulnerabilityCodeVulnerabilityDetectionControlPtrInput` via:
//
//	        VulnerabilityCodeVulnerabilityDetectionControlArgs{...}
//
//	or:
//
//	        nil
type VulnerabilityCodeVulnerabilityDetectionControlPtrInput interface {
	pulumi.Input

	ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutput() VulnerabilityCodeVulnerabilityDetectionControlPtrOutput
	ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(context.Context) VulnerabilityCodeVulnerabilityDetectionControlPtrOutput
}

type vulnerabilityCodeVulnerabilityDetectionControlPtrType VulnerabilityCodeVulnerabilityDetectionControlArgs

func VulnerabilityCodeVulnerabilityDetectionControlPtr(v *VulnerabilityCodeVulnerabilityDetectionControlArgs) VulnerabilityCodeVulnerabilityDetectionControlPtrInput {
	return (*vulnerabilityCodeVulnerabilityDetectionControlPtrType)(v)
}

func (*vulnerabilityCodeVulnerabilityDetectionControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityCodeVulnerabilityDetectionControl)(nil)).Elem()
}

func (i *vulnerabilityCodeVulnerabilityDetectionControlPtrType) ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutput() VulnerabilityCodeVulnerabilityDetectionControlPtrOutput {
	return i.ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(context.Background())
}

func (i *vulnerabilityCodeVulnerabilityDetectionControlPtrType) ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(ctx context.Context) VulnerabilityCodeVulnerabilityDetectionControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityCodeVulnerabilityDetectionControlPtrOutput)
}

type VulnerabilityCodeVulnerabilityDetectionControlOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeVulnerabilityDetectionControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityCodeVulnerabilityDetectionControl)(nil)).Elem()
}

func (o VulnerabilityCodeVulnerabilityDetectionControlOutput) ToVulnerabilityCodeVulnerabilityDetectionControlOutput() VulnerabilityCodeVulnerabilityDetectionControlOutput {
	return o
}

func (o VulnerabilityCodeVulnerabilityDetectionControlOutput) ToVulnerabilityCodeVulnerabilityDetectionControlOutputWithContext(ctx context.Context) VulnerabilityCodeVulnerabilityDetectionControlOutput {
	return o
}

func (o VulnerabilityCodeVulnerabilityDetectionControlOutput) ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutput() VulnerabilityCodeVulnerabilityDetectionControlPtrOutput {
	return o.ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(context.Background())
}

func (o VulnerabilityCodeVulnerabilityDetectionControlOutput) ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(ctx context.Context) VulnerabilityCodeVulnerabilityDetectionControlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityCodeVulnerabilityDetectionControl) *VulnerabilityCodeVulnerabilityDetectionControl {
		return &v
	}).(VulnerabilityCodeVulnerabilityDetectionControlPtrOutput)
}

// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
func (o VulnerabilityCodeVulnerabilityDetectionControlOutput) MonitoringMode() pulumi.StringOutput {
	return o.ApplyT(func(v VulnerabilityCodeVulnerabilityDetectionControl) string { return v.MonitoringMode }).(pulumi.StringOutput)
}

type VulnerabilityCodeVulnerabilityDetectionControlPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityCodeVulnerabilityDetectionControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityCodeVulnerabilityDetectionControl)(nil)).Elem()
}

func (o VulnerabilityCodeVulnerabilityDetectionControlPtrOutput) ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutput() VulnerabilityCodeVulnerabilityDetectionControlPtrOutput {
	return o
}

func (o VulnerabilityCodeVulnerabilityDetectionControlPtrOutput) ToVulnerabilityCodeVulnerabilityDetectionControlPtrOutputWithContext(ctx context.Context) VulnerabilityCodeVulnerabilityDetectionControlPtrOutput {
	return o
}

func (o VulnerabilityCodeVulnerabilityDetectionControlPtrOutput) Elem() VulnerabilityCodeVulnerabilityDetectionControlOutput {
	return o.ApplyT(func(v *VulnerabilityCodeVulnerabilityDetectionControl) VulnerabilityCodeVulnerabilityDetectionControl {
		if v != nil {
			return *v
		}
		var ret VulnerabilityCodeVulnerabilityDetectionControl
		return ret
	}).(VulnerabilityCodeVulnerabilityDetectionControlOutput)
}

// Possible Values: `MONITORING_OFF`, `MONITORING_ON`
func (o VulnerabilityCodeVulnerabilityDetectionControlPtrOutput) MonitoringMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VulnerabilityCodeVulnerabilityDetectionControl) *string {
		if v == nil {
			return nil
		}
		return &v.MonitoringMode
	}).(pulumi.StringPtrOutput)
}

type VulnerabilitySettingsTechnologies struct {
	// NET
	EnableDotNet bool `pulumi:"enableDotNet"`
	// NET runtimes
	EnableDotNetRuntime *bool `pulumi:"enableDotNetRuntime"`
	// Go
	EnableGo bool `pulumi:"enableGo"`
	// Java
	EnableJava bool `pulumi:"enableJava"`
	// Java runtimes
	EnableJavaRuntime *bool `pulumi:"enableJavaRuntime"`
	// Kubernetes
	EnableKubernetes bool `pulumi:"enableKubernetes"`
	// Node.js
	EnableNodeJs bool `pulumi:"enableNodeJs"`
	// Node.js runtimes
	EnableNodeJsRuntime *bool `pulumi:"enableNodeJsRuntime"`
	// PHP
	EnablePhp bool `pulumi:"enablePhp"`
}

// VulnerabilitySettingsTechnologiesInput is an input type that accepts VulnerabilitySettingsTechnologiesArgs and VulnerabilitySettingsTechnologiesOutput values.
// You can construct a concrete instance of `VulnerabilitySettingsTechnologiesInput` via:
//
//	VulnerabilitySettingsTechnologiesArgs{...}
type VulnerabilitySettingsTechnologiesInput interface {
	pulumi.Input

	ToVulnerabilitySettingsTechnologiesOutput() VulnerabilitySettingsTechnologiesOutput
	ToVulnerabilitySettingsTechnologiesOutputWithContext(context.Context) VulnerabilitySettingsTechnologiesOutput
}

type VulnerabilitySettingsTechnologiesArgs struct {
	// NET
	EnableDotNet pulumi.BoolInput `pulumi:"enableDotNet"`
	// NET runtimes
	EnableDotNetRuntime pulumi.BoolPtrInput `pulumi:"enableDotNetRuntime"`
	// Go
	EnableGo pulumi.BoolInput `pulumi:"enableGo"`
	// Java
	EnableJava pulumi.BoolInput `pulumi:"enableJava"`
	// Java runtimes
	EnableJavaRuntime pulumi.BoolPtrInput `pulumi:"enableJavaRuntime"`
	// Kubernetes
	EnableKubernetes pulumi.BoolInput `pulumi:"enableKubernetes"`
	// Node.js
	EnableNodeJs pulumi.BoolInput `pulumi:"enableNodeJs"`
	// Node.js runtimes
	EnableNodeJsRuntime pulumi.BoolPtrInput `pulumi:"enableNodeJsRuntime"`
	// PHP
	EnablePhp pulumi.BoolInput `pulumi:"enablePhp"`
}

func (VulnerabilitySettingsTechnologiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilitySettingsTechnologies)(nil)).Elem()
}

func (i VulnerabilitySettingsTechnologiesArgs) ToVulnerabilitySettingsTechnologiesOutput() VulnerabilitySettingsTechnologiesOutput {
	return i.ToVulnerabilitySettingsTechnologiesOutputWithContext(context.Background())
}

func (i VulnerabilitySettingsTechnologiesArgs) ToVulnerabilitySettingsTechnologiesOutputWithContext(ctx context.Context) VulnerabilitySettingsTechnologiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilitySettingsTechnologiesOutput)
}

func (i VulnerabilitySettingsTechnologiesArgs) ToVulnerabilitySettingsTechnologiesPtrOutput() VulnerabilitySettingsTechnologiesPtrOutput {
	return i.ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(context.Background())
}

func (i VulnerabilitySettingsTechnologiesArgs) ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(ctx context.Context) VulnerabilitySettingsTechnologiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilitySettingsTechnologiesOutput).ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(ctx)
}

// VulnerabilitySettingsTechnologiesPtrInput is an input type that accepts VulnerabilitySettingsTechnologiesArgs, VulnerabilitySettingsTechnologiesPtr and VulnerabilitySettingsTechnologiesPtrOutput values.
// You can construct a concrete instance of `VulnerabilitySettingsTechnologiesPtrInput` via:
//
//	        VulnerabilitySettingsTechnologiesArgs{...}
//
//	or:
//
//	        nil
type VulnerabilitySettingsTechnologiesPtrInput interface {
	pulumi.Input

	ToVulnerabilitySettingsTechnologiesPtrOutput() VulnerabilitySettingsTechnologiesPtrOutput
	ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(context.Context) VulnerabilitySettingsTechnologiesPtrOutput
}

type vulnerabilitySettingsTechnologiesPtrType VulnerabilitySettingsTechnologiesArgs

func VulnerabilitySettingsTechnologiesPtr(v *VulnerabilitySettingsTechnologiesArgs) VulnerabilitySettingsTechnologiesPtrInput {
	return (*vulnerabilitySettingsTechnologiesPtrType)(v)
}

func (*vulnerabilitySettingsTechnologiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilitySettingsTechnologies)(nil)).Elem()
}

func (i *vulnerabilitySettingsTechnologiesPtrType) ToVulnerabilitySettingsTechnologiesPtrOutput() VulnerabilitySettingsTechnologiesPtrOutput {
	return i.ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(context.Background())
}

func (i *vulnerabilitySettingsTechnologiesPtrType) ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(ctx context.Context) VulnerabilitySettingsTechnologiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilitySettingsTechnologiesPtrOutput)
}

type VulnerabilitySettingsTechnologiesOutput struct{ *pulumi.OutputState }

func (VulnerabilitySettingsTechnologiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilitySettingsTechnologies)(nil)).Elem()
}

func (o VulnerabilitySettingsTechnologiesOutput) ToVulnerabilitySettingsTechnologiesOutput() VulnerabilitySettingsTechnologiesOutput {
	return o
}

func (o VulnerabilitySettingsTechnologiesOutput) ToVulnerabilitySettingsTechnologiesOutputWithContext(ctx context.Context) VulnerabilitySettingsTechnologiesOutput {
	return o
}

func (o VulnerabilitySettingsTechnologiesOutput) ToVulnerabilitySettingsTechnologiesPtrOutput() VulnerabilitySettingsTechnologiesPtrOutput {
	return o.ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(context.Background())
}

func (o VulnerabilitySettingsTechnologiesOutput) ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(ctx context.Context) VulnerabilitySettingsTechnologiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilitySettingsTechnologies) *VulnerabilitySettingsTechnologies {
		return &v
	}).(VulnerabilitySettingsTechnologiesPtrOutput)
}

// NET
func (o VulnerabilitySettingsTechnologiesOutput) EnableDotNet() pulumi.BoolOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) bool { return v.EnableDotNet }).(pulumi.BoolOutput)
}

// NET runtimes
func (o VulnerabilitySettingsTechnologiesOutput) EnableDotNetRuntime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) *bool { return v.EnableDotNetRuntime }).(pulumi.BoolPtrOutput)
}

// Go
func (o VulnerabilitySettingsTechnologiesOutput) EnableGo() pulumi.BoolOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) bool { return v.EnableGo }).(pulumi.BoolOutput)
}

// Java
func (o VulnerabilitySettingsTechnologiesOutput) EnableJava() pulumi.BoolOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) bool { return v.EnableJava }).(pulumi.BoolOutput)
}

// Java runtimes
func (o VulnerabilitySettingsTechnologiesOutput) EnableJavaRuntime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) *bool { return v.EnableJavaRuntime }).(pulumi.BoolPtrOutput)
}

// Kubernetes
func (o VulnerabilitySettingsTechnologiesOutput) EnableKubernetes() pulumi.BoolOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) bool { return v.EnableKubernetes }).(pulumi.BoolOutput)
}

// Node.js
func (o VulnerabilitySettingsTechnologiesOutput) EnableNodeJs() pulumi.BoolOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) bool { return v.EnableNodeJs }).(pulumi.BoolOutput)
}

// Node.js runtimes
func (o VulnerabilitySettingsTechnologiesOutput) EnableNodeJsRuntime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) *bool { return v.EnableNodeJsRuntime }).(pulumi.BoolPtrOutput)
}

// PHP
func (o VulnerabilitySettingsTechnologiesOutput) EnablePhp() pulumi.BoolOutput {
	return o.ApplyT(func(v VulnerabilitySettingsTechnologies) bool { return v.EnablePhp }).(pulumi.BoolOutput)
}

type VulnerabilitySettingsTechnologiesPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilitySettingsTechnologiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilitySettingsTechnologies)(nil)).Elem()
}

func (o VulnerabilitySettingsTechnologiesPtrOutput) ToVulnerabilitySettingsTechnologiesPtrOutput() VulnerabilitySettingsTechnologiesPtrOutput {
	return o
}

func (o VulnerabilitySettingsTechnologiesPtrOutput) ToVulnerabilitySettingsTechnologiesPtrOutputWithContext(ctx context.Context) VulnerabilitySettingsTechnologiesPtrOutput {
	return o
}

func (o VulnerabilitySettingsTechnologiesPtrOutput) Elem() VulnerabilitySettingsTechnologiesOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) VulnerabilitySettingsTechnologies {
		if v != nil {
			return *v
		}
		var ret VulnerabilitySettingsTechnologies
		return ret
	}).(VulnerabilitySettingsTechnologiesOutput)
}

// NET
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnableDotNet() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableDotNet
	}).(pulumi.BoolPtrOutput)
}

// NET runtimes
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnableDotNetRuntime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDotNetRuntime
	}).(pulumi.BoolPtrOutput)
}

// Go
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnableGo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableGo
	}).(pulumi.BoolPtrOutput)
}

// Java
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnableJava() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableJava
	}).(pulumi.BoolPtrOutput)
}

// Java runtimes
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnableJavaRuntime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return v.EnableJavaRuntime
	}).(pulumi.BoolPtrOutput)
}

// Kubernetes
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnableKubernetes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableKubernetes
	}).(pulumi.BoolPtrOutput)
}

// Node.js
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnableNodeJs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableNodeJs
	}).(pulumi.BoolPtrOutput)
}

// Node.js runtimes
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnableNodeJsRuntime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return v.EnableNodeJsRuntime
	}).(pulumi.BoolPtrOutput)
}

// PHP
func (o VulnerabilitySettingsTechnologiesPtrOutput) EnablePhp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VulnerabilitySettingsTechnologies) *bool {
		if v == nil {
			return nil
		}
		return &v.EnablePhp
	}).(pulumi.BoolPtrOutput)
}

type WebAppAnomaliesErrorRate struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
	ErrorRateAuto *WebAppAnomaliesErrorRateErrorRateAuto `pulumi:"errorRateAuto"`
	// Possible Values: `Auto`, `Fixed`
	ErrorRateDetectionMode *string `pulumi:"errorRateDetectionMode"`
	// no documentation available
	ErrorRateFixed *WebAppAnomaliesErrorRateErrorRateFixed `pulumi:"errorRateFixed"`
}

// WebAppAnomaliesErrorRateInput is an input type that accepts WebAppAnomaliesErrorRateArgs and WebAppAnomaliesErrorRateOutput values.
// You can construct a concrete instance of `WebAppAnomaliesErrorRateInput` via:
//
//	WebAppAnomaliesErrorRateArgs{...}
type WebAppAnomaliesErrorRateInput interface {
	pulumi.Input

	ToWebAppAnomaliesErrorRateOutput() WebAppAnomaliesErrorRateOutput
	ToWebAppAnomaliesErrorRateOutputWithContext(context.Context) WebAppAnomaliesErrorRateOutput
}

type WebAppAnomaliesErrorRateArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
	ErrorRateAuto WebAppAnomaliesErrorRateErrorRateAutoPtrInput `pulumi:"errorRateAuto"`
	// Possible Values: `Auto`, `Fixed`
	ErrorRateDetectionMode pulumi.StringPtrInput `pulumi:"errorRateDetectionMode"`
	// no documentation available
	ErrorRateFixed WebAppAnomaliesErrorRateErrorRateFixedPtrInput `pulumi:"errorRateFixed"`
}

func (WebAppAnomaliesErrorRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesErrorRate)(nil)).Elem()
}

func (i WebAppAnomaliesErrorRateArgs) ToWebAppAnomaliesErrorRateOutput() WebAppAnomaliesErrorRateOutput {
	return i.ToWebAppAnomaliesErrorRateOutputWithContext(context.Background())
}

func (i WebAppAnomaliesErrorRateArgs) ToWebAppAnomaliesErrorRateOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateOutput)
}

func (i WebAppAnomaliesErrorRateArgs) ToWebAppAnomaliesErrorRatePtrOutput() WebAppAnomaliesErrorRatePtrOutput {
	return i.ToWebAppAnomaliesErrorRatePtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesErrorRateArgs) ToWebAppAnomaliesErrorRatePtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateOutput).ToWebAppAnomaliesErrorRatePtrOutputWithContext(ctx)
}

// WebAppAnomaliesErrorRatePtrInput is an input type that accepts WebAppAnomaliesErrorRateArgs, WebAppAnomaliesErrorRatePtr and WebAppAnomaliesErrorRatePtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesErrorRatePtrInput` via:
//
//	        WebAppAnomaliesErrorRateArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesErrorRatePtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesErrorRatePtrOutput() WebAppAnomaliesErrorRatePtrOutput
	ToWebAppAnomaliesErrorRatePtrOutputWithContext(context.Context) WebAppAnomaliesErrorRatePtrOutput
}

type webAppAnomaliesErrorRatePtrType WebAppAnomaliesErrorRateArgs

func WebAppAnomaliesErrorRatePtr(v *WebAppAnomaliesErrorRateArgs) WebAppAnomaliesErrorRatePtrInput {
	return (*webAppAnomaliesErrorRatePtrType)(v)
}

func (*webAppAnomaliesErrorRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesErrorRate)(nil)).Elem()
}

func (i *webAppAnomaliesErrorRatePtrType) ToWebAppAnomaliesErrorRatePtrOutput() WebAppAnomaliesErrorRatePtrOutput {
	return i.ToWebAppAnomaliesErrorRatePtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesErrorRatePtrType) ToWebAppAnomaliesErrorRatePtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRatePtrOutput)
}

type WebAppAnomaliesErrorRateOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesErrorRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesErrorRate)(nil)).Elem()
}

func (o WebAppAnomaliesErrorRateOutput) ToWebAppAnomaliesErrorRateOutput() WebAppAnomaliesErrorRateOutput {
	return o
}

func (o WebAppAnomaliesErrorRateOutput) ToWebAppAnomaliesErrorRateOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateOutput {
	return o
}

func (o WebAppAnomaliesErrorRateOutput) ToWebAppAnomaliesErrorRatePtrOutput() WebAppAnomaliesErrorRatePtrOutput {
	return o.ToWebAppAnomaliesErrorRatePtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesErrorRateOutput) ToWebAppAnomaliesErrorRatePtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesErrorRate) *WebAppAnomaliesErrorRate {
		return &v
	}).(WebAppAnomaliesErrorRatePtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o WebAppAnomaliesErrorRateOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppAnomaliesErrorRate) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
func (o WebAppAnomaliesErrorRateOutput) ErrorRateAuto() WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return o.ApplyT(func(v WebAppAnomaliesErrorRate) *WebAppAnomaliesErrorRateErrorRateAuto { return v.ErrorRateAuto }).(WebAppAnomaliesErrorRateErrorRateAutoPtrOutput)
}

// Possible Values: `Auto`, `Fixed`
func (o WebAppAnomaliesErrorRateOutput) ErrorRateDetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppAnomaliesErrorRate) *string { return v.ErrorRateDetectionMode }).(pulumi.StringPtrOutput)
}

// no documentation available
func (o WebAppAnomaliesErrorRateOutput) ErrorRateFixed() WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return o.ApplyT(func(v WebAppAnomaliesErrorRate) *WebAppAnomaliesErrorRateErrorRateFixed { return v.ErrorRateFixed }).(WebAppAnomaliesErrorRateErrorRateFixedPtrOutput)
}

type WebAppAnomaliesErrorRatePtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesErrorRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesErrorRate)(nil)).Elem()
}

func (o WebAppAnomaliesErrorRatePtrOutput) ToWebAppAnomaliesErrorRatePtrOutput() WebAppAnomaliesErrorRatePtrOutput {
	return o
}

func (o WebAppAnomaliesErrorRatePtrOutput) ToWebAppAnomaliesErrorRatePtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRatePtrOutput {
	return o
}

func (o WebAppAnomaliesErrorRatePtrOutput) Elem() WebAppAnomaliesErrorRateOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRate) WebAppAnomaliesErrorRate {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesErrorRate
		return ret
	}).(WebAppAnomaliesErrorRateOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o WebAppAnomaliesErrorRatePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRate) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Alert if the percentage of failing user actions increases by **both** the absolute and relative thresholds:
func (o WebAppAnomaliesErrorRatePtrOutput) ErrorRateAuto() WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRate) *WebAppAnomaliesErrorRateErrorRateAuto {
		if v == nil {
			return nil
		}
		return v.ErrorRateAuto
	}).(WebAppAnomaliesErrorRateErrorRateAutoPtrOutput)
}

// Possible Values: `Auto`, `Fixed`
func (o WebAppAnomaliesErrorRatePtrOutput) ErrorRateDetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRate) *string {
		if v == nil {
			return nil
		}
		return v.ErrorRateDetectionMode
	}).(pulumi.StringPtrOutput)
}

// no documentation available
func (o WebAppAnomaliesErrorRatePtrOutput) ErrorRateFixed() WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRate) *WebAppAnomaliesErrorRateErrorRateFixed {
		if v == nil {
			return nil
		}
		return v.ErrorRateFixed
	}).(WebAppAnomaliesErrorRateErrorRateFixedPtrOutput)
}

type WebAppAnomaliesErrorRateErrorRateAuto struct {
	// Absolute threshold
	AbsoluteIncrease float64 `pulumi:"absoluteIncrease"`
	// Avoid over-alerting
	OverAlertingProtection WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection `pulumi:"overAlertingProtection"`
	// Relative threshold
	RelativeIncrease float64 `pulumi:"relativeIncrease"`
}

// WebAppAnomaliesErrorRateErrorRateAutoInput is an input type that accepts WebAppAnomaliesErrorRateErrorRateAutoArgs and WebAppAnomaliesErrorRateErrorRateAutoOutput values.
// You can construct a concrete instance of `WebAppAnomaliesErrorRateErrorRateAutoInput` via:
//
//	WebAppAnomaliesErrorRateErrorRateAutoArgs{...}
type WebAppAnomaliesErrorRateErrorRateAutoInput interface {
	pulumi.Input

	ToWebAppAnomaliesErrorRateErrorRateAutoOutput() WebAppAnomaliesErrorRateErrorRateAutoOutput
	ToWebAppAnomaliesErrorRateErrorRateAutoOutputWithContext(context.Context) WebAppAnomaliesErrorRateErrorRateAutoOutput
}

type WebAppAnomaliesErrorRateErrorRateAutoArgs struct {
	// Absolute threshold
	AbsoluteIncrease pulumi.Float64Input `pulumi:"absoluteIncrease"`
	// Avoid over-alerting
	OverAlertingProtection WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionInput `pulumi:"overAlertingProtection"`
	// Relative threshold
	RelativeIncrease pulumi.Float64Input `pulumi:"relativeIncrease"`
}

func (WebAppAnomaliesErrorRateErrorRateAutoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateAuto)(nil)).Elem()
}

func (i WebAppAnomaliesErrorRateErrorRateAutoArgs) ToWebAppAnomaliesErrorRateErrorRateAutoOutput() WebAppAnomaliesErrorRateErrorRateAutoOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateAutoOutputWithContext(context.Background())
}

func (i WebAppAnomaliesErrorRateErrorRateAutoArgs) ToWebAppAnomaliesErrorRateErrorRateAutoOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateAutoOutput)
}

func (i WebAppAnomaliesErrorRateErrorRateAutoArgs) ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesErrorRateErrorRateAutoArgs) ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateAutoOutput).ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(ctx)
}

// WebAppAnomaliesErrorRateErrorRateAutoPtrInput is an input type that accepts WebAppAnomaliesErrorRateErrorRateAutoArgs, WebAppAnomaliesErrorRateErrorRateAutoPtr and WebAppAnomaliesErrorRateErrorRateAutoPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesErrorRateErrorRateAutoPtrInput` via:
//
//	        WebAppAnomaliesErrorRateErrorRateAutoArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesErrorRateErrorRateAutoPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoPtrOutput
	ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(context.Context) WebAppAnomaliesErrorRateErrorRateAutoPtrOutput
}

type webAppAnomaliesErrorRateErrorRateAutoPtrType WebAppAnomaliesErrorRateErrorRateAutoArgs

func WebAppAnomaliesErrorRateErrorRateAutoPtr(v *WebAppAnomaliesErrorRateErrorRateAutoArgs) WebAppAnomaliesErrorRateErrorRateAutoPtrInput {
	return (*webAppAnomaliesErrorRateErrorRateAutoPtrType)(v)
}

func (*webAppAnomaliesErrorRateErrorRateAutoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesErrorRateErrorRateAuto)(nil)).Elem()
}

func (i *webAppAnomaliesErrorRateErrorRateAutoPtrType) ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesErrorRateErrorRateAutoPtrType) ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateAutoPtrOutput)
}

type WebAppAnomaliesErrorRateErrorRateAutoOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesErrorRateErrorRateAutoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateAuto)(nil)).Elem()
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOutput) ToWebAppAnomaliesErrorRateErrorRateAutoOutput() WebAppAnomaliesErrorRateErrorRateAutoOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOutput) ToWebAppAnomaliesErrorRateErrorRateAutoOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOutput) ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return o.ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOutput) ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesErrorRateErrorRateAuto) *WebAppAnomaliesErrorRateErrorRateAuto {
		return &v
	}).(WebAppAnomaliesErrorRateErrorRateAutoPtrOutput)
}

// Absolute threshold
func (o WebAppAnomaliesErrorRateErrorRateAutoOutput) AbsoluteIncrease() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateAuto) float64 { return v.AbsoluteIncrease }).(pulumi.Float64Output)
}

// Avoid over-alerting
func (o WebAppAnomaliesErrorRateErrorRateAutoOutput) OverAlertingProtection() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateAuto) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection {
		return v.OverAlertingProtection
	}).(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput)
}

// Relative threshold
func (o WebAppAnomaliesErrorRateErrorRateAutoOutput) RelativeIncrease() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateAuto) float64 { return v.RelativeIncrease }).(pulumi.Float64Output)
}

type WebAppAnomaliesErrorRateErrorRateAutoPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesErrorRateErrorRateAutoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesErrorRateErrorRateAuto)(nil)).Elem()
}

func (o WebAppAnomaliesErrorRateErrorRateAutoPtrOutput) ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateAutoPtrOutput) ToWebAppAnomaliesErrorRateErrorRateAutoPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoPtrOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateAutoPtrOutput) Elem() WebAppAnomaliesErrorRateErrorRateAutoOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateAuto) WebAppAnomaliesErrorRateErrorRateAuto {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesErrorRateErrorRateAuto
		return ret
	}).(WebAppAnomaliesErrorRateErrorRateAutoOutput)
}

// Absolute threshold
func (o WebAppAnomaliesErrorRateErrorRateAutoPtrOutput) AbsoluteIncrease() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateAuto) *float64 {
		if v == nil {
			return nil
		}
		return &v.AbsoluteIncrease
	}).(pulumi.Float64PtrOutput)
}

// Avoid over-alerting
func (o WebAppAnomaliesErrorRateErrorRateAutoPtrOutput) OverAlertingProtection() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateAuto) *WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection {
		if v == nil {
			return nil
		}
		return &v.OverAlertingProtection
	}).(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput)
}

// Relative threshold
func (o WebAppAnomaliesErrorRateErrorRateAutoPtrOutput) RelativeIncrease() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateAuto) *float64 {
		if v == nil {
			return nil
		}
		return &v.RelativeIncrease
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection struct {
	// Only alert if there are at least
	ActionsPerMinute float64 `pulumi:"actionsPerMinute"`
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState float64 `pulumi:"minutesAbnormalState"`
}

// WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionInput is an input type that accepts WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs and WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput values.
// You can construct a concrete instance of `WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionInput` via:
//
//	WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs{...}
type WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionInput interface {
	pulumi.Input

	ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput
	ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutputWithContext(context.Context) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput
}

type WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs struct {
	// Only alert if there are at least
	ActionsPerMinute pulumi.Float64Input `pulumi:"actionsPerMinute"`
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState pulumi.Float64Input `pulumi:"minutesAbnormalState"`
}

func (WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection)(nil)).Elem()
}

func (i WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutputWithContext(context.Background())
}

func (i WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput)
}

func (i WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput).ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(ctx)
}

// WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrInput is an input type that accepts WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs, WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtr and WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrInput` via:
//
//	        WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput
	ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(context.Context) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput
}

type webAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrType WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs

func WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtr(v *WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrInput {
	return (*webAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrType)(v)
}

func (*webAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection)(nil)).Elem()
}

func (i *webAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrType) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrType) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput)
}

type WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection)(nil)).Elem()
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return o.ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection) *WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection {
		return &v
	}).(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput)
}

// Only alert if there are at least
func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput) ActionsPerMinute() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection) float64 { return v.ActionsPerMinute }).(pulumi.Float64Output)
}

// Only alert if the abnormal state remains for at least
func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput) MinutesAbnormalState() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection) float64 {
		return v.MinutesAbnormalState
	}).(pulumi.Float64Output)
}

type WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection)(nil)).Elem()
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput) ToWebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput) Elem() WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection) WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection
		return ret
	}).(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput)
}

// Only alert if there are at least
func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput) ActionsPerMinute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection) *float64 {
		if v == nil {
			return nil
		}
		return &v.ActionsPerMinute
	}).(pulumi.Float64PtrOutput)
}

// Only alert if the abnormal state remains for at least
func (o WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput) MinutesAbnormalState() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtection) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinutesAbnormalState
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesErrorRateErrorRateFixed struct {
	// To avoid over-alerting for low traffic applications
	ErrorRateReqPerMin float64 `pulumi:"errorRateReqPerMin"`
	// Possible Values: `Low`, `Medium`, `High`
	ErrorRateSensitivity string `pulumi:"errorRateSensitivity"`
	// Alert if this custom error rate threshold is exceeded during any 5-minute-period
	MaxFailureRateIncrease float64 `pulumi:"maxFailureRateIncrease"`
	// Amount of minutes the observed traffic has to stay in abnormal state before alert
	MinutesAbnormalState float64 `pulumi:"minutesAbnormalState"`
}

// WebAppAnomaliesErrorRateErrorRateFixedInput is an input type that accepts WebAppAnomaliesErrorRateErrorRateFixedArgs and WebAppAnomaliesErrorRateErrorRateFixedOutput values.
// You can construct a concrete instance of `WebAppAnomaliesErrorRateErrorRateFixedInput` via:
//
//	WebAppAnomaliesErrorRateErrorRateFixedArgs{...}
type WebAppAnomaliesErrorRateErrorRateFixedInput interface {
	pulumi.Input

	ToWebAppAnomaliesErrorRateErrorRateFixedOutput() WebAppAnomaliesErrorRateErrorRateFixedOutput
	ToWebAppAnomaliesErrorRateErrorRateFixedOutputWithContext(context.Context) WebAppAnomaliesErrorRateErrorRateFixedOutput
}

type WebAppAnomaliesErrorRateErrorRateFixedArgs struct {
	// To avoid over-alerting for low traffic applications
	ErrorRateReqPerMin pulumi.Float64Input `pulumi:"errorRateReqPerMin"`
	// Possible Values: `Low`, `Medium`, `High`
	ErrorRateSensitivity pulumi.StringInput `pulumi:"errorRateSensitivity"`
	// Alert if this custom error rate threshold is exceeded during any 5-minute-period
	MaxFailureRateIncrease pulumi.Float64Input `pulumi:"maxFailureRateIncrease"`
	// Amount of minutes the observed traffic has to stay in abnormal state before alert
	MinutesAbnormalState pulumi.Float64Input `pulumi:"minutesAbnormalState"`
}

func (WebAppAnomaliesErrorRateErrorRateFixedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateFixed)(nil)).Elem()
}

func (i WebAppAnomaliesErrorRateErrorRateFixedArgs) ToWebAppAnomaliesErrorRateErrorRateFixedOutput() WebAppAnomaliesErrorRateErrorRateFixedOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateFixedOutputWithContext(context.Background())
}

func (i WebAppAnomaliesErrorRateErrorRateFixedArgs) ToWebAppAnomaliesErrorRateErrorRateFixedOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateFixedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateFixedOutput)
}

func (i WebAppAnomaliesErrorRateErrorRateFixedArgs) ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutput() WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesErrorRateErrorRateFixedArgs) ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateFixedOutput).ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(ctx)
}

// WebAppAnomaliesErrorRateErrorRateFixedPtrInput is an input type that accepts WebAppAnomaliesErrorRateErrorRateFixedArgs, WebAppAnomaliesErrorRateErrorRateFixedPtr and WebAppAnomaliesErrorRateErrorRateFixedPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesErrorRateErrorRateFixedPtrInput` via:
//
//	        WebAppAnomaliesErrorRateErrorRateFixedArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesErrorRateErrorRateFixedPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutput() WebAppAnomaliesErrorRateErrorRateFixedPtrOutput
	ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(context.Context) WebAppAnomaliesErrorRateErrorRateFixedPtrOutput
}

type webAppAnomaliesErrorRateErrorRateFixedPtrType WebAppAnomaliesErrorRateErrorRateFixedArgs

func WebAppAnomaliesErrorRateErrorRateFixedPtr(v *WebAppAnomaliesErrorRateErrorRateFixedArgs) WebAppAnomaliesErrorRateErrorRateFixedPtrInput {
	return (*webAppAnomaliesErrorRateErrorRateFixedPtrType)(v)
}

func (*webAppAnomaliesErrorRateErrorRateFixedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesErrorRateErrorRateFixed)(nil)).Elem()
}

func (i *webAppAnomaliesErrorRateErrorRateFixedPtrType) ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutput() WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return i.ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesErrorRateErrorRateFixedPtrType) ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesErrorRateErrorRateFixedPtrOutput)
}

type WebAppAnomaliesErrorRateErrorRateFixedOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesErrorRateErrorRateFixedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateFixed)(nil)).Elem()
}

func (o WebAppAnomaliesErrorRateErrorRateFixedOutput) ToWebAppAnomaliesErrorRateErrorRateFixedOutput() WebAppAnomaliesErrorRateErrorRateFixedOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateFixedOutput) ToWebAppAnomaliesErrorRateErrorRateFixedOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateFixedOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateFixedOutput) ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutput() WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return o.ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesErrorRateErrorRateFixedOutput) ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesErrorRateErrorRateFixed) *WebAppAnomaliesErrorRateErrorRateFixed {
		return &v
	}).(WebAppAnomaliesErrorRateErrorRateFixedPtrOutput)
}

// To avoid over-alerting for low traffic applications
func (o WebAppAnomaliesErrorRateErrorRateFixedOutput) ErrorRateReqPerMin() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateFixed) float64 { return v.ErrorRateReqPerMin }).(pulumi.Float64Output)
}

// Possible Values: `Low`, `Medium`, `High`
func (o WebAppAnomaliesErrorRateErrorRateFixedOutput) ErrorRateSensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateFixed) string { return v.ErrorRateSensitivity }).(pulumi.StringOutput)
}

// Alert if this custom error rate threshold is exceeded during any 5-minute-period
func (o WebAppAnomaliesErrorRateErrorRateFixedOutput) MaxFailureRateIncrease() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateFixed) float64 { return v.MaxFailureRateIncrease }).(pulumi.Float64Output)
}

// Amount of minutes the observed traffic has to stay in abnormal state before alert
func (o WebAppAnomaliesErrorRateErrorRateFixedOutput) MinutesAbnormalState() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesErrorRateErrorRateFixed) float64 { return v.MinutesAbnormalState }).(pulumi.Float64Output)
}

type WebAppAnomaliesErrorRateErrorRateFixedPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesErrorRateErrorRateFixedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesErrorRateErrorRateFixed)(nil)).Elem()
}

func (o WebAppAnomaliesErrorRateErrorRateFixedPtrOutput) ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutput() WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateFixedPtrOutput) ToWebAppAnomaliesErrorRateErrorRateFixedPtrOutputWithContext(ctx context.Context) WebAppAnomaliesErrorRateErrorRateFixedPtrOutput {
	return o
}

func (o WebAppAnomaliesErrorRateErrorRateFixedPtrOutput) Elem() WebAppAnomaliesErrorRateErrorRateFixedOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateFixed) WebAppAnomaliesErrorRateErrorRateFixed {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesErrorRateErrorRateFixed
		return ret
	}).(WebAppAnomaliesErrorRateErrorRateFixedOutput)
}

// To avoid over-alerting for low traffic applications
func (o WebAppAnomaliesErrorRateErrorRateFixedPtrOutput) ErrorRateReqPerMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateFixed) *float64 {
		if v == nil {
			return nil
		}
		return &v.ErrorRateReqPerMin
	}).(pulumi.Float64PtrOutput)
}

// Possible Values: `Low`, `Medium`, `High`
func (o WebAppAnomaliesErrorRateErrorRateFixedPtrOutput) ErrorRateSensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateFixed) *string {
		if v == nil {
			return nil
		}
		return &v.ErrorRateSensitivity
	}).(pulumi.StringPtrOutput)
}

// Alert if this custom error rate threshold is exceeded during any 5-minute-period
func (o WebAppAnomaliesErrorRateErrorRateFixedPtrOutput) MaxFailureRateIncrease() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateFixed) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaxFailureRateIncrease
	}).(pulumi.Float64PtrOutput)
}

// Amount of minutes the observed traffic has to stay in abnormal state before alert
func (o WebAppAnomaliesErrorRateErrorRateFixedPtrOutput) MinutesAbnormalState() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesErrorRateErrorRateFixed) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinutesAbnormalState
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesResponseTime struct {
	// Possible Values: `Auto`, `Fixed`
	DetectionMode *string `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// no documentation available
	ResponseTimeAuto *WebAppAnomaliesResponseTimeResponseTimeAuto `pulumi:"responseTimeAuto"`
	// no documentation available
	ResponseTimeFixed *WebAppAnomaliesResponseTimeResponseTimeFixed `pulumi:"responseTimeFixed"`
}

// WebAppAnomaliesResponseTimeInput is an input type that accepts WebAppAnomaliesResponseTimeArgs and WebAppAnomaliesResponseTimeOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeInput` via:
//
//	WebAppAnomaliesResponseTimeArgs{...}
type WebAppAnomaliesResponseTimeInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeOutput() WebAppAnomaliesResponseTimeOutput
	ToWebAppAnomaliesResponseTimeOutputWithContext(context.Context) WebAppAnomaliesResponseTimeOutput
}

type WebAppAnomaliesResponseTimeArgs struct {
	// Possible Values: `Auto`, `Fixed`
	DetectionMode pulumi.StringPtrInput `pulumi:"detectionMode"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// no documentation available
	ResponseTimeAuto WebAppAnomaliesResponseTimeResponseTimeAutoPtrInput `pulumi:"responseTimeAuto"`
	// no documentation available
	ResponseTimeFixed WebAppAnomaliesResponseTimeResponseTimeFixedPtrInput `pulumi:"responseTimeFixed"`
}

func (WebAppAnomaliesResponseTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTime)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeArgs) ToWebAppAnomaliesResponseTimeOutput() WebAppAnomaliesResponseTimeOutput {
	return i.ToWebAppAnomaliesResponseTimeOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeArgs) ToWebAppAnomaliesResponseTimeOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeOutput)
}

func (i WebAppAnomaliesResponseTimeArgs) ToWebAppAnomaliesResponseTimePtrOutput() WebAppAnomaliesResponseTimePtrOutput {
	return i.ToWebAppAnomaliesResponseTimePtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeArgs) ToWebAppAnomaliesResponseTimePtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeOutput).ToWebAppAnomaliesResponseTimePtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimePtrInput is an input type that accepts WebAppAnomaliesResponseTimeArgs, WebAppAnomaliesResponseTimePtr and WebAppAnomaliesResponseTimePtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimePtrInput` via:
//
//	        WebAppAnomaliesResponseTimeArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimePtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimePtrOutput() WebAppAnomaliesResponseTimePtrOutput
	ToWebAppAnomaliesResponseTimePtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimePtrOutput
}

type webAppAnomaliesResponseTimePtrType WebAppAnomaliesResponseTimeArgs

func WebAppAnomaliesResponseTimePtr(v *WebAppAnomaliesResponseTimeArgs) WebAppAnomaliesResponseTimePtrInput {
	return (*webAppAnomaliesResponseTimePtrType)(v)
}

func (*webAppAnomaliesResponseTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTime)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimePtrType) ToWebAppAnomaliesResponseTimePtrOutput() WebAppAnomaliesResponseTimePtrOutput {
	return i.ToWebAppAnomaliesResponseTimePtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimePtrType) ToWebAppAnomaliesResponseTimePtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimePtrOutput)
}

type WebAppAnomaliesResponseTimeOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTime)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeOutput) ToWebAppAnomaliesResponseTimeOutput() WebAppAnomaliesResponseTimeOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeOutput) ToWebAppAnomaliesResponseTimeOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeOutput) ToWebAppAnomaliesResponseTimePtrOutput() WebAppAnomaliesResponseTimePtrOutput {
	return o.ToWebAppAnomaliesResponseTimePtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeOutput) ToWebAppAnomaliesResponseTimePtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTime) *WebAppAnomaliesResponseTime {
		return &v
	}).(WebAppAnomaliesResponseTimePtrOutput)
}

// Possible Values: `Auto`, `Fixed`
func (o WebAppAnomaliesResponseTimeOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTime) *string { return v.DetectionMode }).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o WebAppAnomaliesResponseTimeOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTime) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// no documentation available
func (o WebAppAnomaliesResponseTimeOutput) ResponseTimeAuto() WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTime) *WebAppAnomaliesResponseTimeResponseTimeAuto {
		return v.ResponseTimeAuto
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput)
}

// no documentation available
func (o WebAppAnomaliesResponseTimeOutput) ResponseTimeFixed() WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTime) *WebAppAnomaliesResponseTimeResponseTimeFixed {
		return v.ResponseTimeFixed
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput)
}

type WebAppAnomaliesResponseTimePtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTime)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimePtrOutput) ToWebAppAnomaliesResponseTimePtrOutput() WebAppAnomaliesResponseTimePtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimePtrOutput) ToWebAppAnomaliesResponseTimePtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimePtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimePtrOutput) Elem() WebAppAnomaliesResponseTimeOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTime) WebAppAnomaliesResponseTime {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTime
		return ret
	}).(WebAppAnomaliesResponseTimeOutput)
}

// Possible Values: `Auto`, `Fixed`
func (o WebAppAnomaliesResponseTimePtrOutput) DetectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTime) *string {
		if v == nil {
			return nil
		}
		return v.DetectionMode
	}).(pulumi.StringPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o WebAppAnomaliesResponseTimePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTime) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// no documentation available
func (o WebAppAnomaliesResponseTimePtrOutput) ResponseTimeAuto() WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTime) *WebAppAnomaliesResponseTimeResponseTimeAuto {
		if v == nil {
			return nil
		}
		return v.ResponseTimeAuto
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput)
}

// no documentation available
func (o WebAppAnomaliesResponseTimePtrOutput) ResponseTimeFixed() WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTime) *WebAppAnomaliesResponseTimeResponseTimeFixed {
		if v == nil {
			return nil
		}
		return v.ResponseTimeFixed
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAuto struct {
	// Avoid over-alerting
	OverAlertingProtection WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection `pulumi:"overAlertingProtection"`
	// Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeAll WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll `pulumi:"responseTimeAll"`
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeSlowest WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest `pulumi:"responseTimeSlowest"`
}

// WebAppAnomaliesResponseTimeResponseTimeAutoInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeAutoArgs and WebAppAnomaliesResponseTimeResponseTimeAutoOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeAutoInput` via:
//
//	WebAppAnomaliesResponseTimeResponseTimeAutoArgs{...}
type WebAppAnomaliesResponseTimeResponseTimeAutoInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeAutoOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOutput
	ToWebAppAnomaliesResponseTimeResponseTimeAutoOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOutput
}

type WebAppAnomaliesResponseTimeResponseTimeAutoArgs struct {
	// Avoid over-alerting
	OverAlertingProtection WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionInput `pulumi:"overAlertingProtection"`
	// Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeAll WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllInput `pulumi:"responseTimeAll"`
	// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
	ResponseTimeSlowest WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestInput `pulumi:"responseTimeSlowest"`
}

func (WebAppAnomaliesResponseTimeResponseTimeAutoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAuto)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoOutput)
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoOutput).ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimeResponseTimeAutoPtrInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeAutoArgs, WebAppAnomaliesResponseTimeResponseTimeAutoPtr and WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeAutoPtrInput` via:
//
//	        WebAppAnomaliesResponseTimeResponseTimeAutoArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimeResponseTimeAutoPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput
	ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput
}

type webAppAnomaliesResponseTimeResponseTimeAutoPtrType WebAppAnomaliesResponseTimeResponseTimeAutoArgs

func WebAppAnomaliesResponseTimeResponseTimeAutoPtr(v *WebAppAnomaliesResponseTimeResponseTimeAutoArgs) WebAppAnomaliesResponseTimeResponseTimeAutoPtrInput {
	return (*webAppAnomaliesResponseTimeResponseTimeAutoPtrType)(v)
}

func (*webAppAnomaliesResponseTimeResponseTimeAutoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeAuto)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimeResponseTimeAutoPtrType) ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimeResponseTimeAutoPtrType) ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeAutoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAuto)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return o.ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTimeResponseTimeAuto) *WebAppAnomaliesResponseTimeResponseTimeAuto {
		return &v
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput)
}

// Avoid over-alerting
func (o WebAppAnomaliesResponseTimeResponseTimeAutoOutput) OverAlertingProtection() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAuto) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection {
		return v.OverAlertingProtection
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput)
}

// Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:
func (o WebAppAnomaliesResponseTimeResponseTimeAutoOutput) ResponseTimeAll() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAuto) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll {
		return v.ResponseTimeAll
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput)
}

// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
func (o WebAppAnomaliesResponseTimeResponseTimeAutoOutput) ResponseTimeSlowest() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAuto) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest {
		return v.ResponseTimeSlowest
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeAuto)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput) Elem() WebAppAnomaliesResponseTimeResponseTimeAutoOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAuto) WebAppAnomaliesResponseTimeResponseTimeAuto {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTimeResponseTimeAuto
		return ret
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoOutput)
}

// Avoid over-alerting
func (o WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput) OverAlertingProtection() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAuto) *WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection {
		if v == nil {
			return nil
		}
		return &v.OverAlertingProtection
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput)
}

// Alert if the median response time of all user actions degrades beyond **both** the absolute and relative thresholds:
func (o WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput) ResponseTimeAll() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAuto) *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll {
		if v == nil {
			return nil
		}
		return &v.ResponseTimeAll
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput)
}

// Alert if the response time of the slowest 10% of requests degrades beyond **both** the absolute and relative thresholds:
func (o WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput) ResponseTimeSlowest() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAuto) *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest {
		if v == nil {
			return nil
		}
		return &v.ResponseTimeSlowest
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection struct {
	// Only alert if there are at least
	ActionsPerMinute float64 `pulumi:"actionsPerMinute"`
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState float64 `pulumi:"minutesAbnormalState"`
}

// WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs and WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionInput` via:
//
//	WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs{...}
type WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput
	ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput
}

type WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs struct {
	// Only alert if there are at least
	ActionsPerMinute pulumi.Float64Input `pulumi:"actionsPerMinute"`
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState pulumi.Float64Input `pulumi:"minutesAbnormalState"`
}

func (WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput)
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput).ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs, WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtr and WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrInput` via:
//
//	        WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput
	ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput
}

type webAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrType WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs

func WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtr(v *WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrInput {
	return (*webAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrType)(v)
}

func (*webAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrType) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrType) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return o.ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection) *WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection {
		return &v
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput)
}

// Only alert if there are at least
func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput) ActionsPerMinute() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection) float64 {
		return v.ActionsPerMinute
	}).(pulumi.Float64Output)
}

// Only alert if the abnormal state remains for at least
func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput) MinutesAbnormalState() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection) float64 {
		return v.MinutesAbnormalState
	}).(pulumi.Float64Output)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput) Elem() WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection) WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection
		return ret
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput)
}

// Only alert if there are at least
func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput) ActionsPerMinute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection) *float64 {
		if v == nil {
			return nil
		}
		return &v.ActionsPerMinute
	}).(pulumi.Float64PtrOutput)
}

// Only alert if the abnormal state remains for at least
func (o WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput) MinutesAbnormalState() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtection) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinutesAbnormalState
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll struct {
	// Absolute threshold
	DegradationMilliseconds float64 `pulumi:"degradationMilliseconds"`
	// Relative threshold
	DegradationPercent float64 `pulumi:"degradationPercent"`
}

// WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs and WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllInput` via:
//
//	WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs{...}
type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput
	ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput
}

type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs struct {
	// Absolute threshold
	DegradationMilliseconds pulumi.Float64Input `pulumi:"degradationMilliseconds"`
	// Relative threshold
	DegradationPercent pulumi.Float64Input `pulumi:"degradationPercent"`
}

func (WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput)
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput).ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs, WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtr and WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrInput` via:
//
//	        WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput
	ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput
}

type webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrType WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs

func WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtr(v *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrInput {
	return (*webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrType)(v)
}

func (*webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrType) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrType) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return o.ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll) *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll {
		return &v
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput)
}

// Absolute threshold
func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput) DegradationMilliseconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll) float64 {
		return v.DegradationMilliseconds
	}).(pulumi.Float64Output)
}

// Relative threshold
func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput) DegradationPercent() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll) float64 {
		return v.DegradationPercent
	}).(pulumi.Float64Output)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput) Elem() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll
		return ret
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput)
}

// Absolute threshold
func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput) DegradationMilliseconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll) *float64 {
		if v == nil {
			return nil
		}
		return &v.DegradationMilliseconds
	}).(pulumi.Float64PtrOutput)
}

// Relative threshold
func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput) DegradationPercent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAll) *float64 {
		if v == nil {
			return nil
		}
		return &v.DegradationPercent
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest struct {
	// Absolute threshold
	SlowestDegradationMilliseconds float64 `pulumi:"slowestDegradationMilliseconds"`
	// Relative threshold
	SlowestDegradationPercent float64 `pulumi:"slowestDegradationPercent"`
}

// WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs and WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestInput` via:
//
//	WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs{...}
type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput
	ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput
}

type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs struct {
	// Absolute threshold
	SlowestDegradationMilliseconds pulumi.Float64Input `pulumi:"slowestDegradationMilliseconds"`
	// Relative threshold
	SlowestDegradationPercent pulumi.Float64Input `pulumi:"slowestDegradationPercent"`
}

func (WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput)
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput).ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs, WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtr and WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrInput` via:
//
//	        WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput
	ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput
}

type webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrType WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs

func WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtr(v *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrInput {
	return (*webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrType)(v)
}

func (*webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrType) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrType) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return o.ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest) *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest {
		return &v
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput)
}

// Absolute threshold
func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput) SlowestDegradationMilliseconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest) float64 {
		return v.SlowestDegradationMilliseconds
	}).(pulumi.Float64Output)
}

// Relative threshold
func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput) SlowestDegradationPercent() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest) float64 {
		return v.SlowestDegradationPercent
	}).(pulumi.Float64Output)
}

type WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput) Elem() WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest) WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest
		return ret
	}).(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput)
}

// Absolute threshold
func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput) SlowestDegradationMilliseconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest) *float64 {
		if v == nil {
			return nil
		}
		return &v.SlowestDegradationMilliseconds
	}).(pulumi.Float64PtrOutput)
}

// Relative threshold
func (o WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput) SlowestDegradationPercent() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowest) *float64 {
		if v == nil {
			return nil
		}
		return &v.SlowestDegradationPercent
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixed struct {
	// Avoid over-alerting
	OverAlertingProtection WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection `pulumi:"overAlertingProtection"`
	// Alert if the key performance metric of all requests degrades beyond this threshold:
	ResponseTimeAll WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll `pulumi:"responseTimeAll"`
	// Alert if the key performance metric of the slowest 10% of requests degrades beyond this threshold:
	ResponseTimeSlowest WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest `pulumi:"responseTimeSlowest"`
	// Possible Values: `Medium`, `High`, `Low`
	Sensitivity string `pulumi:"sensitivity"`
}

// WebAppAnomaliesResponseTimeResponseTimeFixedInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeFixedArgs and WebAppAnomaliesResponseTimeResponseTimeFixedOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeFixedInput` via:
//
//	WebAppAnomaliesResponseTimeResponseTimeFixedArgs{...}
type WebAppAnomaliesResponseTimeResponseTimeFixedInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeFixedOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOutput
	ToWebAppAnomaliesResponseTimeResponseTimeFixedOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOutput
}

type WebAppAnomaliesResponseTimeResponseTimeFixedArgs struct {
	// Avoid over-alerting
	OverAlertingProtection WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionInput `pulumi:"overAlertingProtection"`
	// Alert if the key performance metric of all requests degrades beyond this threshold:
	ResponseTimeAll WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllInput `pulumi:"responseTimeAll"`
	// Alert if the key performance metric of the slowest 10% of requests degrades beyond this threshold:
	ResponseTimeSlowest WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestInput `pulumi:"responseTimeSlowest"`
	// Possible Values: `Medium`, `High`, `Low`
	Sensitivity pulumi.StringInput `pulumi:"sensitivity"`
}

func (WebAppAnomaliesResponseTimeResponseTimeFixedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixed)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedOutput)
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedOutput).ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimeResponseTimeFixedPtrInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeFixedArgs, WebAppAnomaliesResponseTimeResponseTimeFixedPtr and WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeFixedPtrInput` via:
//
//	        WebAppAnomaliesResponseTimeResponseTimeFixedArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimeResponseTimeFixedPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput
	ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput
}

type webAppAnomaliesResponseTimeResponseTimeFixedPtrType WebAppAnomaliesResponseTimeResponseTimeFixedArgs

func WebAppAnomaliesResponseTimeResponseTimeFixedPtr(v *WebAppAnomaliesResponseTimeResponseTimeFixedArgs) WebAppAnomaliesResponseTimeResponseTimeFixedPtrInput {
	return (*webAppAnomaliesResponseTimeResponseTimeFixedPtrType)(v)
}

func (*webAppAnomaliesResponseTimeResponseTimeFixedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeFixed)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimeResponseTimeFixedPtrType) ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimeResponseTimeFixedPtrType) ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeFixedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixed)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return o.ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTimeResponseTimeFixed) *WebAppAnomaliesResponseTimeResponseTimeFixed {
		return &v
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput)
}

// Avoid over-alerting
func (o WebAppAnomaliesResponseTimeResponseTimeFixedOutput) OverAlertingProtection() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeFixed) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection {
		return v.OverAlertingProtection
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput)
}

// Alert if the key performance metric of all requests degrades beyond this threshold:
func (o WebAppAnomaliesResponseTimeResponseTimeFixedOutput) ResponseTimeAll() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeFixed) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll {
		return v.ResponseTimeAll
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput)
}

// Alert if the key performance metric of the slowest 10% of requests degrades beyond this threshold:
func (o WebAppAnomaliesResponseTimeResponseTimeFixedOutput) ResponseTimeSlowest() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeFixed) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest {
		return v.ResponseTimeSlowest
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput)
}

// Possible Values: `Medium`, `High`, `Low`
func (o WebAppAnomaliesResponseTimeResponseTimeFixedOutput) Sensitivity() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeFixed) string { return v.Sensitivity }).(pulumi.StringOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeFixed)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput) Elem() WebAppAnomaliesResponseTimeResponseTimeFixedOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixed) WebAppAnomaliesResponseTimeResponseTimeFixed {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTimeResponseTimeFixed
		return ret
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedOutput)
}

// Avoid over-alerting
func (o WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput) OverAlertingProtection() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixed) *WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection {
		if v == nil {
			return nil
		}
		return &v.OverAlertingProtection
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput)
}

// Alert if the key performance metric of all requests degrades beyond this threshold:
func (o WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput) ResponseTimeAll() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixed) *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll {
		if v == nil {
			return nil
		}
		return &v.ResponseTimeAll
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput)
}

// Alert if the key performance metric of the slowest 10% of requests degrades beyond this threshold:
func (o WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput) ResponseTimeSlowest() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixed) *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest {
		if v == nil {
			return nil
		}
		return &v.ResponseTimeSlowest
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput)
}

// Possible Values: `Medium`, `High`, `Low`
func (o WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput) Sensitivity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixed) *string {
		if v == nil {
			return nil
		}
		return &v.Sensitivity
	}).(pulumi.StringPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection struct {
	// Only alert if there are at least
	ActionsPerMinute float64 `pulumi:"actionsPerMinute"`
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState float64 `pulumi:"minutesAbnormalState"`
}

// WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs and WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionInput` via:
//
//	WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs{...}
type WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput
	ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput
}

type WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs struct {
	// Only alert if there are at least
	ActionsPerMinute pulumi.Float64Input `pulumi:"actionsPerMinute"`
	// Only alert if the abnormal state remains for at least
	MinutesAbnormalState pulumi.Float64Input `pulumi:"minutesAbnormalState"`
}

func (WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput)
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput).ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs, WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtr and WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrInput` via:
//
//	        WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput
	ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput
}

type webAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrType WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs

func WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtr(v *WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrInput {
	return (*webAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrType)(v)
}

func (*webAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrType) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrType) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return o.ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection) *WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection {
		return &v
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput)
}

// Only alert if there are at least
func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput) ActionsPerMinute() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection) float64 {
		return v.ActionsPerMinute
	}).(pulumi.Float64Output)
}

// Only alert if the abnormal state remains for at least
func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput) MinutesAbnormalState() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection) float64 {
		return v.MinutesAbnormalState
	}).(pulumi.Float64Output)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput) Elem() WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection) WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection
		return ret
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput)
}

// Only alert if there are at least
func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput) ActionsPerMinute() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection) *float64 {
		if v == nil {
			return nil
		}
		return &v.ActionsPerMinute
	}).(pulumi.Float64PtrOutput)
}

// Only alert if the abnormal state remains for at least
func (o WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput) MinutesAbnormalState() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtection) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinutesAbnormalState
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll struct {
	// Alert if the key performance metric degrades beyond this many ms within an observation period of 5 minutes
	DegradationMilliseconds float64 `pulumi:"degradationMilliseconds"`
}

// WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs and WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllInput` via:
//
//	WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs{...}
type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput
	ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput
}

type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs struct {
	// Alert if the key performance metric degrades beyond this many ms within an observation period of 5 minutes
	DegradationMilliseconds pulumi.Float64Input `pulumi:"degradationMilliseconds"`
}

func (WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput)
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput).ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs, WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtr and WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrInput` via:
//
//	        WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput
	ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput
}

type webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrType WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs

func WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtr(v *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrInput {
	return (*webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrType)(v)
}

func (*webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrType) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrType) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return o.ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll) *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll {
		return &v
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput)
}

// Alert if the key performance metric degrades beyond this many ms within an observation period of 5 minutes
func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput) DegradationMilliseconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll) float64 {
		return v.DegradationMilliseconds
	}).(pulumi.Float64Output)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput) Elem() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll
		return ret
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput)
}

// Alert if the key performance metric degrades beyond this many ms within an observation period of 5 minutes
func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput) DegradationMilliseconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAll) *float64 {
		if v == nil {
			return nil
		}
		return &v.DegradationMilliseconds
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest struct {
	// Alert if the key performance metric of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
	SlowestDegradationMilliseconds float64 `pulumi:"slowestDegradationMilliseconds"`
}

// WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs and WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestInput` via:
//
//	WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs{...}
type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput
	ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput
}

type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs struct {
	// Alert if the key performance metric of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
	SlowestDegradationMilliseconds pulumi.Float64Input `pulumi:"slowestDegradationMilliseconds"`
}

func (WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest)(nil)).Elem()
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput)
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput).ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(ctx)
}

// WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrInput is an input type that accepts WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs, WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtr and WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrInput` via:
//
//	        WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput
	ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput
}

type webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrType WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs

func WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtr(v *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrInput {
	return (*webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrType)(v)
}

func (*webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest)(nil)).Elem()
}

func (i *webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrType) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return i.ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrType) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return o.ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest) *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest {
		return &v
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput)
}

// Alert if the key performance metric of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput) SlowestDegradationMilliseconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest) float64 {
		return v.SlowestDegradationMilliseconds
	}).(pulumi.Float64Output)
}

type WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest)(nil)).Elem()
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput) ToWebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutputWithContext(ctx context.Context) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput {
	return o
}

func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput) Elem() WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest) WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest
		return ret
	}).(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput)
}

// Alert if the key performance metric of the slowest 10% degrades beyond this many ms within an observation period of 5 minutes
func (o WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput) SlowestDegradationMilliseconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowest) *float64 {
		if v == nil {
			return nil
		}
		return &v.SlowestDegradationMilliseconds
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesTrafficDrops struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Dynatrace learns your typical application traffic over an observation period of one week.
	TrafficDrops *WebAppAnomaliesTrafficDropsTrafficDrops `pulumi:"trafficDrops"`
}

// WebAppAnomaliesTrafficDropsInput is an input type that accepts WebAppAnomaliesTrafficDropsArgs and WebAppAnomaliesTrafficDropsOutput values.
// You can construct a concrete instance of `WebAppAnomaliesTrafficDropsInput` via:
//
//	WebAppAnomaliesTrafficDropsArgs{...}
type WebAppAnomaliesTrafficDropsInput interface {
	pulumi.Input

	ToWebAppAnomaliesTrafficDropsOutput() WebAppAnomaliesTrafficDropsOutput
	ToWebAppAnomaliesTrafficDropsOutputWithContext(context.Context) WebAppAnomaliesTrafficDropsOutput
}

type WebAppAnomaliesTrafficDropsArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Dynatrace learns your typical application traffic over an observation period of one week.
	TrafficDrops WebAppAnomaliesTrafficDropsTrafficDropsPtrInput `pulumi:"trafficDrops"`
}

func (WebAppAnomaliesTrafficDropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesTrafficDrops)(nil)).Elem()
}

func (i WebAppAnomaliesTrafficDropsArgs) ToWebAppAnomaliesTrafficDropsOutput() WebAppAnomaliesTrafficDropsOutput {
	return i.ToWebAppAnomaliesTrafficDropsOutputWithContext(context.Background())
}

func (i WebAppAnomaliesTrafficDropsArgs) ToWebAppAnomaliesTrafficDropsOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficDropsOutput)
}

func (i WebAppAnomaliesTrafficDropsArgs) ToWebAppAnomaliesTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsPtrOutput {
	return i.ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesTrafficDropsArgs) ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficDropsOutput).ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(ctx)
}

// WebAppAnomaliesTrafficDropsPtrInput is an input type that accepts WebAppAnomaliesTrafficDropsArgs, WebAppAnomaliesTrafficDropsPtr and WebAppAnomaliesTrafficDropsPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesTrafficDropsPtrInput` via:
//
//	        WebAppAnomaliesTrafficDropsArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesTrafficDropsPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsPtrOutput
	ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(context.Context) WebAppAnomaliesTrafficDropsPtrOutput
}

type webAppAnomaliesTrafficDropsPtrType WebAppAnomaliesTrafficDropsArgs

func WebAppAnomaliesTrafficDropsPtr(v *WebAppAnomaliesTrafficDropsArgs) WebAppAnomaliesTrafficDropsPtrInput {
	return (*webAppAnomaliesTrafficDropsPtrType)(v)
}

func (*webAppAnomaliesTrafficDropsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesTrafficDrops)(nil)).Elem()
}

func (i *webAppAnomaliesTrafficDropsPtrType) ToWebAppAnomaliesTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsPtrOutput {
	return i.ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesTrafficDropsPtrType) ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficDropsPtrOutput)
}

type WebAppAnomaliesTrafficDropsOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesTrafficDropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesTrafficDrops)(nil)).Elem()
}

func (o WebAppAnomaliesTrafficDropsOutput) ToWebAppAnomaliesTrafficDropsOutput() WebAppAnomaliesTrafficDropsOutput {
	return o
}

func (o WebAppAnomaliesTrafficDropsOutput) ToWebAppAnomaliesTrafficDropsOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsOutput {
	return o
}

func (o WebAppAnomaliesTrafficDropsOutput) ToWebAppAnomaliesTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsPtrOutput {
	return o.ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesTrafficDropsOutput) ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesTrafficDrops) *WebAppAnomaliesTrafficDrops {
		return &v
	}).(WebAppAnomaliesTrafficDropsPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o WebAppAnomaliesTrafficDropsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppAnomaliesTrafficDrops) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Dynatrace learns your typical application traffic over an observation period of one week.
func (o WebAppAnomaliesTrafficDropsOutput) TrafficDrops() WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return o.ApplyT(func(v WebAppAnomaliesTrafficDrops) *WebAppAnomaliesTrafficDropsTrafficDrops { return v.TrafficDrops }).(WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput)
}

type WebAppAnomaliesTrafficDropsPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesTrafficDropsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesTrafficDrops)(nil)).Elem()
}

func (o WebAppAnomaliesTrafficDropsPtrOutput) ToWebAppAnomaliesTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsPtrOutput {
	return o
}

func (o WebAppAnomaliesTrafficDropsPtrOutput) ToWebAppAnomaliesTrafficDropsPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsPtrOutput {
	return o
}

func (o WebAppAnomaliesTrafficDropsPtrOutput) Elem() WebAppAnomaliesTrafficDropsOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficDrops) WebAppAnomaliesTrafficDrops {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesTrafficDrops
		return ret
	}).(WebAppAnomaliesTrafficDropsOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o WebAppAnomaliesTrafficDropsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficDrops) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Dynatrace learns your typical application traffic over an observation period of one week.
func (o WebAppAnomaliesTrafficDropsPtrOutput) TrafficDrops() WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficDrops) *WebAppAnomaliesTrafficDropsTrafficDrops {
		if v == nil {
			return nil
		}
		return v.TrafficDrops
	}).(WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput)
}

type WebAppAnomaliesTrafficDropsTrafficDrops struct {
	// Minutes the observed traffic has to stay in abnormal state before alert
	AbnormalStateAbnormalState float64 `pulumi:"abnormalStateAbnormalState"`
	// Alert if the observed traffic is less than this percentage of the expected value
	TrafficDropPercentage float64 `pulumi:"trafficDropPercentage"`
}

// WebAppAnomaliesTrafficDropsTrafficDropsInput is an input type that accepts WebAppAnomaliesTrafficDropsTrafficDropsArgs and WebAppAnomaliesTrafficDropsTrafficDropsOutput values.
// You can construct a concrete instance of `WebAppAnomaliesTrafficDropsTrafficDropsInput` via:
//
//	WebAppAnomaliesTrafficDropsTrafficDropsArgs{...}
type WebAppAnomaliesTrafficDropsTrafficDropsInput interface {
	pulumi.Input

	ToWebAppAnomaliesTrafficDropsTrafficDropsOutput() WebAppAnomaliesTrafficDropsTrafficDropsOutput
	ToWebAppAnomaliesTrafficDropsTrafficDropsOutputWithContext(context.Context) WebAppAnomaliesTrafficDropsTrafficDropsOutput
}

type WebAppAnomaliesTrafficDropsTrafficDropsArgs struct {
	// Minutes the observed traffic has to stay in abnormal state before alert
	AbnormalStateAbnormalState pulumi.Float64Input `pulumi:"abnormalStateAbnormalState"`
	// Alert if the observed traffic is less than this percentage of the expected value
	TrafficDropPercentage pulumi.Float64Input `pulumi:"trafficDropPercentage"`
}

func (WebAppAnomaliesTrafficDropsTrafficDropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesTrafficDropsTrafficDrops)(nil)).Elem()
}

func (i WebAppAnomaliesTrafficDropsTrafficDropsArgs) ToWebAppAnomaliesTrafficDropsTrafficDropsOutput() WebAppAnomaliesTrafficDropsTrafficDropsOutput {
	return i.ToWebAppAnomaliesTrafficDropsTrafficDropsOutputWithContext(context.Background())
}

func (i WebAppAnomaliesTrafficDropsTrafficDropsArgs) ToWebAppAnomaliesTrafficDropsTrafficDropsOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsTrafficDropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficDropsTrafficDropsOutput)
}

func (i WebAppAnomaliesTrafficDropsTrafficDropsArgs) ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return i.ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesTrafficDropsTrafficDropsArgs) ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficDropsTrafficDropsOutput).ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(ctx)
}

// WebAppAnomaliesTrafficDropsTrafficDropsPtrInput is an input type that accepts WebAppAnomaliesTrafficDropsTrafficDropsArgs, WebAppAnomaliesTrafficDropsTrafficDropsPtr and WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesTrafficDropsTrafficDropsPtrInput` via:
//
//	        WebAppAnomaliesTrafficDropsTrafficDropsArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesTrafficDropsTrafficDropsPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput
	ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(context.Context) WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput
}

type webAppAnomaliesTrafficDropsTrafficDropsPtrType WebAppAnomaliesTrafficDropsTrafficDropsArgs

func WebAppAnomaliesTrafficDropsTrafficDropsPtr(v *WebAppAnomaliesTrafficDropsTrafficDropsArgs) WebAppAnomaliesTrafficDropsTrafficDropsPtrInput {
	return (*webAppAnomaliesTrafficDropsTrafficDropsPtrType)(v)
}

func (*webAppAnomaliesTrafficDropsTrafficDropsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesTrafficDropsTrafficDrops)(nil)).Elem()
}

func (i *webAppAnomaliesTrafficDropsTrafficDropsPtrType) ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return i.ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesTrafficDropsTrafficDropsPtrType) ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput)
}

type WebAppAnomaliesTrafficDropsTrafficDropsOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesTrafficDropsTrafficDropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesTrafficDropsTrafficDrops)(nil)).Elem()
}

func (o WebAppAnomaliesTrafficDropsTrafficDropsOutput) ToWebAppAnomaliesTrafficDropsTrafficDropsOutput() WebAppAnomaliesTrafficDropsTrafficDropsOutput {
	return o
}

func (o WebAppAnomaliesTrafficDropsTrafficDropsOutput) ToWebAppAnomaliesTrafficDropsTrafficDropsOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsTrafficDropsOutput {
	return o
}

func (o WebAppAnomaliesTrafficDropsTrafficDropsOutput) ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return o.ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesTrafficDropsTrafficDropsOutput) ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesTrafficDropsTrafficDrops) *WebAppAnomaliesTrafficDropsTrafficDrops {
		return &v
	}).(WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput)
}

// Minutes the observed traffic has to stay in abnormal state before alert
func (o WebAppAnomaliesTrafficDropsTrafficDropsOutput) AbnormalStateAbnormalState() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesTrafficDropsTrafficDrops) float64 { return v.AbnormalStateAbnormalState }).(pulumi.Float64Output)
}

// Alert if the observed traffic is less than this percentage of the expected value
func (o WebAppAnomaliesTrafficDropsTrafficDropsOutput) TrafficDropPercentage() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesTrafficDropsTrafficDrops) float64 { return v.TrafficDropPercentage }).(pulumi.Float64Output)
}

type WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesTrafficDropsTrafficDrops)(nil)).Elem()
}

func (o WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput) ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutput() WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return o
}

func (o WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput) ToWebAppAnomaliesTrafficDropsTrafficDropsPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput {
	return o
}

func (o WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput) Elem() WebAppAnomaliesTrafficDropsTrafficDropsOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficDropsTrafficDrops) WebAppAnomaliesTrafficDropsTrafficDrops {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesTrafficDropsTrafficDrops
		return ret
	}).(WebAppAnomaliesTrafficDropsTrafficDropsOutput)
}

// Minutes the observed traffic has to stay in abnormal state before alert
func (o WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput) AbnormalStateAbnormalState() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficDropsTrafficDrops) *float64 {
		if v == nil {
			return nil
		}
		return &v.AbnormalStateAbnormalState
	}).(pulumi.Float64PtrOutput)
}

// Alert if the observed traffic is less than this percentage of the expected value
func (o WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput) TrafficDropPercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficDropsTrafficDrops) *float64 {
		if v == nil {
			return nil
		}
		return &v.TrafficDropPercentage
	}).(pulumi.Float64PtrOutput)
}

type WebAppAnomaliesTrafficSpikes struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Dynatrace learns your typical application traffic over an observation period of one week.
	TrafficSpikes *WebAppAnomaliesTrafficSpikesTrafficSpikes `pulumi:"trafficSpikes"`
}

// WebAppAnomaliesTrafficSpikesInput is an input type that accepts WebAppAnomaliesTrafficSpikesArgs and WebAppAnomaliesTrafficSpikesOutput values.
// You can construct a concrete instance of `WebAppAnomaliesTrafficSpikesInput` via:
//
//	WebAppAnomaliesTrafficSpikesArgs{...}
type WebAppAnomaliesTrafficSpikesInput interface {
	pulumi.Input

	ToWebAppAnomaliesTrafficSpikesOutput() WebAppAnomaliesTrafficSpikesOutput
	ToWebAppAnomaliesTrafficSpikesOutputWithContext(context.Context) WebAppAnomaliesTrafficSpikesOutput
}

type WebAppAnomaliesTrafficSpikesArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Dynatrace learns your typical application traffic over an observation period of one week.
	TrafficSpikes WebAppAnomaliesTrafficSpikesTrafficSpikesPtrInput `pulumi:"trafficSpikes"`
}

func (WebAppAnomaliesTrafficSpikesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesTrafficSpikes)(nil)).Elem()
}

func (i WebAppAnomaliesTrafficSpikesArgs) ToWebAppAnomaliesTrafficSpikesOutput() WebAppAnomaliesTrafficSpikesOutput {
	return i.ToWebAppAnomaliesTrafficSpikesOutputWithContext(context.Background())
}

func (i WebAppAnomaliesTrafficSpikesArgs) ToWebAppAnomaliesTrafficSpikesOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficSpikesOutput)
}

func (i WebAppAnomaliesTrafficSpikesArgs) ToWebAppAnomaliesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesPtrOutput {
	return i.ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesTrafficSpikesArgs) ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficSpikesOutput).ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(ctx)
}

// WebAppAnomaliesTrafficSpikesPtrInput is an input type that accepts WebAppAnomaliesTrafficSpikesArgs, WebAppAnomaliesTrafficSpikesPtr and WebAppAnomaliesTrafficSpikesPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesTrafficSpikesPtrInput` via:
//
//	        WebAppAnomaliesTrafficSpikesArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesTrafficSpikesPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesPtrOutput
	ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(context.Context) WebAppAnomaliesTrafficSpikesPtrOutput
}

type webAppAnomaliesTrafficSpikesPtrType WebAppAnomaliesTrafficSpikesArgs

func WebAppAnomaliesTrafficSpikesPtr(v *WebAppAnomaliesTrafficSpikesArgs) WebAppAnomaliesTrafficSpikesPtrInput {
	return (*webAppAnomaliesTrafficSpikesPtrType)(v)
}

func (*webAppAnomaliesTrafficSpikesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesTrafficSpikes)(nil)).Elem()
}

func (i *webAppAnomaliesTrafficSpikesPtrType) ToWebAppAnomaliesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesPtrOutput {
	return i.ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesTrafficSpikesPtrType) ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficSpikesPtrOutput)
}

type WebAppAnomaliesTrafficSpikesOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesTrafficSpikesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesTrafficSpikes)(nil)).Elem()
}

func (o WebAppAnomaliesTrafficSpikesOutput) ToWebAppAnomaliesTrafficSpikesOutput() WebAppAnomaliesTrafficSpikesOutput {
	return o
}

func (o WebAppAnomaliesTrafficSpikesOutput) ToWebAppAnomaliesTrafficSpikesOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesOutput {
	return o
}

func (o WebAppAnomaliesTrafficSpikesOutput) ToWebAppAnomaliesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesPtrOutput {
	return o.ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesTrafficSpikesOutput) ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesTrafficSpikes) *WebAppAnomaliesTrafficSpikes {
		return &v
	}).(WebAppAnomaliesTrafficSpikesPtrOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o WebAppAnomaliesTrafficSpikesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppAnomaliesTrafficSpikes) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Dynatrace learns your typical application traffic over an observation period of one week.
func (o WebAppAnomaliesTrafficSpikesOutput) TrafficSpikes() WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return o.ApplyT(func(v WebAppAnomaliesTrafficSpikes) *WebAppAnomaliesTrafficSpikesTrafficSpikes {
		return v.TrafficSpikes
	}).(WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput)
}

type WebAppAnomaliesTrafficSpikesPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesTrafficSpikesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesTrafficSpikes)(nil)).Elem()
}

func (o WebAppAnomaliesTrafficSpikesPtrOutput) ToWebAppAnomaliesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesPtrOutput {
	return o
}

func (o WebAppAnomaliesTrafficSpikesPtrOutput) ToWebAppAnomaliesTrafficSpikesPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesPtrOutput {
	return o
}

func (o WebAppAnomaliesTrafficSpikesPtrOutput) Elem() WebAppAnomaliesTrafficSpikesOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficSpikes) WebAppAnomaliesTrafficSpikes {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesTrafficSpikes
		return ret
	}).(WebAppAnomaliesTrafficSpikesOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o WebAppAnomaliesTrafficSpikesPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficSpikes) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Dynatrace learns your typical application traffic over an observation period of one week.
func (o WebAppAnomaliesTrafficSpikesPtrOutput) TrafficSpikes() WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficSpikes) *WebAppAnomaliesTrafficSpikesTrafficSpikes {
		if v == nil {
			return nil
		}
		return v.TrafficSpikes
	}).(WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput)
}

type WebAppAnomaliesTrafficSpikesTrafficSpikes struct {
	// Minutes an application has to stay in abnormal state before alert
	MinutesAbnormalState float64 `pulumi:"minutesAbnormalState"`
	// Alert if the observed traffic is more than this percentage of the expected value
	TrafficSpikePercentage float64 `pulumi:"trafficSpikePercentage"`
}

// WebAppAnomaliesTrafficSpikesTrafficSpikesInput is an input type that accepts WebAppAnomaliesTrafficSpikesTrafficSpikesArgs and WebAppAnomaliesTrafficSpikesTrafficSpikesOutput values.
// You can construct a concrete instance of `WebAppAnomaliesTrafficSpikesTrafficSpikesInput` via:
//
//	WebAppAnomaliesTrafficSpikesTrafficSpikesArgs{...}
type WebAppAnomaliesTrafficSpikesTrafficSpikesInput interface {
	pulumi.Input

	ToWebAppAnomaliesTrafficSpikesTrafficSpikesOutput() WebAppAnomaliesTrafficSpikesTrafficSpikesOutput
	ToWebAppAnomaliesTrafficSpikesTrafficSpikesOutputWithContext(context.Context) WebAppAnomaliesTrafficSpikesTrafficSpikesOutput
}

type WebAppAnomaliesTrafficSpikesTrafficSpikesArgs struct {
	// Minutes an application has to stay in abnormal state before alert
	MinutesAbnormalState pulumi.Float64Input `pulumi:"minutesAbnormalState"`
	// Alert if the observed traffic is more than this percentage of the expected value
	TrafficSpikePercentage pulumi.Float64Input `pulumi:"trafficSpikePercentage"`
}

func (WebAppAnomaliesTrafficSpikesTrafficSpikesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesTrafficSpikesTrafficSpikes)(nil)).Elem()
}

func (i WebAppAnomaliesTrafficSpikesTrafficSpikesArgs) ToWebAppAnomaliesTrafficSpikesTrafficSpikesOutput() WebAppAnomaliesTrafficSpikesTrafficSpikesOutput {
	return i.ToWebAppAnomaliesTrafficSpikesTrafficSpikesOutputWithContext(context.Background())
}

func (i WebAppAnomaliesTrafficSpikesTrafficSpikesArgs) ToWebAppAnomaliesTrafficSpikesTrafficSpikesOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesTrafficSpikesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficSpikesTrafficSpikesOutput)
}

func (i WebAppAnomaliesTrafficSpikesTrafficSpikesArgs) ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return i.ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(context.Background())
}

func (i WebAppAnomaliesTrafficSpikesTrafficSpikesArgs) ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficSpikesTrafficSpikesOutput).ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(ctx)
}

// WebAppAnomaliesTrafficSpikesTrafficSpikesPtrInput is an input type that accepts WebAppAnomaliesTrafficSpikesTrafficSpikesArgs, WebAppAnomaliesTrafficSpikesTrafficSpikesPtr and WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput values.
// You can construct a concrete instance of `WebAppAnomaliesTrafficSpikesTrafficSpikesPtrInput` via:
//
//	        WebAppAnomaliesTrafficSpikesTrafficSpikesArgs{...}
//
//	or:
//
//	        nil
type WebAppAnomaliesTrafficSpikesTrafficSpikesPtrInput interface {
	pulumi.Input

	ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput
	ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(context.Context) WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput
}

type webAppAnomaliesTrafficSpikesTrafficSpikesPtrType WebAppAnomaliesTrafficSpikesTrafficSpikesArgs

func WebAppAnomaliesTrafficSpikesTrafficSpikesPtr(v *WebAppAnomaliesTrafficSpikesTrafficSpikesArgs) WebAppAnomaliesTrafficSpikesTrafficSpikesPtrInput {
	return (*webAppAnomaliesTrafficSpikesTrafficSpikesPtrType)(v)
}

func (*webAppAnomaliesTrafficSpikesTrafficSpikesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesTrafficSpikesTrafficSpikes)(nil)).Elem()
}

func (i *webAppAnomaliesTrafficSpikesTrafficSpikesPtrType) ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return i.ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(context.Background())
}

func (i *webAppAnomaliesTrafficSpikesTrafficSpikesPtrType) ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput)
}

type WebAppAnomaliesTrafficSpikesTrafficSpikesOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesTrafficSpikesTrafficSpikesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppAnomaliesTrafficSpikesTrafficSpikes)(nil)).Elem()
}

func (o WebAppAnomaliesTrafficSpikesTrafficSpikesOutput) ToWebAppAnomaliesTrafficSpikesTrafficSpikesOutput() WebAppAnomaliesTrafficSpikesTrafficSpikesOutput {
	return o
}

func (o WebAppAnomaliesTrafficSpikesTrafficSpikesOutput) ToWebAppAnomaliesTrafficSpikesTrafficSpikesOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesTrafficSpikesOutput {
	return o
}

func (o WebAppAnomaliesTrafficSpikesTrafficSpikesOutput) ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return o.ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(context.Background())
}

func (o WebAppAnomaliesTrafficSpikesTrafficSpikesOutput) ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppAnomaliesTrafficSpikesTrafficSpikes) *WebAppAnomaliesTrafficSpikesTrafficSpikes {
		return &v
	}).(WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput)
}

// Minutes an application has to stay in abnormal state before alert
func (o WebAppAnomaliesTrafficSpikesTrafficSpikesOutput) MinutesAbnormalState() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesTrafficSpikesTrafficSpikes) float64 { return v.MinutesAbnormalState }).(pulumi.Float64Output)
}

// Alert if the observed traffic is more than this percentage of the expected value
func (o WebAppAnomaliesTrafficSpikesTrafficSpikesOutput) TrafficSpikePercentage() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppAnomaliesTrafficSpikesTrafficSpikes) float64 { return v.TrafficSpikePercentage }).(pulumi.Float64Output)
}

type WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput struct{ *pulumi.OutputState }

func (WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppAnomaliesTrafficSpikesTrafficSpikes)(nil)).Elem()
}

func (o WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput) ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput() WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return o
}

func (o WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput) ToWebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutputWithContext(ctx context.Context) WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput {
	return o
}

func (o WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput) Elem() WebAppAnomaliesTrafficSpikesTrafficSpikesOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficSpikesTrafficSpikes) WebAppAnomaliesTrafficSpikesTrafficSpikes {
		if v != nil {
			return *v
		}
		var ret WebAppAnomaliesTrafficSpikesTrafficSpikes
		return ret
	}).(WebAppAnomaliesTrafficSpikesTrafficSpikesOutput)
}

// Minutes an application has to stay in abnormal state before alert
func (o WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput) MinutesAbnormalState() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficSpikesTrafficSpikes) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinutesAbnormalState
	}).(pulumi.Float64PtrOutput)
}

// Alert if the observed traffic is more than this percentage of the expected value
func (o WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput) TrafficSpikePercentage() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppAnomaliesTrafficSpikesTrafficSpikes) *float64 {
		if v == nil {
			return nil
		}
		return &v.TrafficSpikePercentage
	}).(pulumi.Float64PtrOutput)
}

type WebAppCustomErrorsErrorRules struct {
	ErrorRules []WebAppCustomErrorsErrorRulesErrorRule `pulumi:"errorRules"`
}

// WebAppCustomErrorsErrorRulesInput is an input type that accepts WebAppCustomErrorsErrorRulesArgs and WebAppCustomErrorsErrorRulesOutput values.
// You can construct a concrete instance of `WebAppCustomErrorsErrorRulesInput` via:
//
//	WebAppCustomErrorsErrorRulesArgs{...}
type WebAppCustomErrorsErrorRulesInput interface {
	pulumi.Input

	ToWebAppCustomErrorsErrorRulesOutput() WebAppCustomErrorsErrorRulesOutput
	ToWebAppCustomErrorsErrorRulesOutputWithContext(context.Context) WebAppCustomErrorsErrorRulesOutput
}

type WebAppCustomErrorsErrorRulesArgs struct {
	ErrorRules WebAppCustomErrorsErrorRulesErrorRuleArrayInput `pulumi:"errorRules"`
}

func (WebAppCustomErrorsErrorRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppCustomErrorsErrorRules)(nil)).Elem()
}

func (i WebAppCustomErrorsErrorRulesArgs) ToWebAppCustomErrorsErrorRulesOutput() WebAppCustomErrorsErrorRulesOutput {
	return i.ToWebAppCustomErrorsErrorRulesOutputWithContext(context.Background())
}

func (i WebAppCustomErrorsErrorRulesArgs) ToWebAppCustomErrorsErrorRulesOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppCustomErrorsErrorRulesOutput)
}

func (i WebAppCustomErrorsErrorRulesArgs) ToWebAppCustomErrorsErrorRulesPtrOutput() WebAppCustomErrorsErrorRulesPtrOutput {
	return i.ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(context.Background())
}

func (i WebAppCustomErrorsErrorRulesArgs) ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppCustomErrorsErrorRulesOutput).ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(ctx)
}

// WebAppCustomErrorsErrorRulesPtrInput is an input type that accepts WebAppCustomErrorsErrorRulesArgs, WebAppCustomErrorsErrorRulesPtr and WebAppCustomErrorsErrorRulesPtrOutput values.
// You can construct a concrete instance of `WebAppCustomErrorsErrorRulesPtrInput` via:
//
//	        WebAppCustomErrorsErrorRulesArgs{...}
//
//	or:
//
//	        nil
type WebAppCustomErrorsErrorRulesPtrInput interface {
	pulumi.Input

	ToWebAppCustomErrorsErrorRulesPtrOutput() WebAppCustomErrorsErrorRulesPtrOutput
	ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(context.Context) WebAppCustomErrorsErrorRulesPtrOutput
}

type webAppCustomErrorsErrorRulesPtrType WebAppCustomErrorsErrorRulesArgs

func WebAppCustomErrorsErrorRulesPtr(v *WebAppCustomErrorsErrorRulesArgs) WebAppCustomErrorsErrorRulesPtrInput {
	return (*webAppCustomErrorsErrorRulesPtrType)(v)
}

func (*webAppCustomErrorsErrorRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppCustomErrorsErrorRules)(nil)).Elem()
}

func (i *webAppCustomErrorsErrorRulesPtrType) ToWebAppCustomErrorsErrorRulesPtrOutput() WebAppCustomErrorsErrorRulesPtrOutput {
	return i.ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(context.Background())
}

func (i *webAppCustomErrorsErrorRulesPtrType) ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppCustomErrorsErrorRulesPtrOutput)
}

type WebAppCustomErrorsErrorRulesOutput struct{ *pulumi.OutputState }

func (WebAppCustomErrorsErrorRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppCustomErrorsErrorRules)(nil)).Elem()
}

func (o WebAppCustomErrorsErrorRulesOutput) ToWebAppCustomErrorsErrorRulesOutput() WebAppCustomErrorsErrorRulesOutput {
	return o
}

func (o WebAppCustomErrorsErrorRulesOutput) ToWebAppCustomErrorsErrorRulesOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesOutput {
	return o
}

func (o WebAppCustomErrorsErrorRulesOutput) ToWebAppCustomErrorsErrorRulesPtrOutput() WebAppCustomErrorsErrorRulesPtrOutput {
	return o.ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(context.Background())
}

func (o WebAppCustomErrorsErrorRulesOutput) ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppCustomErrorsErrorRules) *WebAppCustomErrorsErrorRules {
		return &v
	}).(WebAppCustomErrorsErrorRulesPtrOutput)
}

func (o WebAppCustomErrorsErrorRulesOutput) ErrorRules() WebAppCustomErrorsErrorRulesErrorRuleArrayOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRules) []WebAppCustomErrorsErrorRulesErrorRule { return v.ErrorRules }).(WebAppCustomErrorsErrorRulesErrorRuleArrayOutput)
}

type WebAppCustomErrorsErrorRulesPtrOutput struct{ *pulumi.OutputState }

func (WebAppCustomErrorsErrorRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppCustomErrorsErrorRules)(nil)).Elem()
}

func (o WebAppCustomErrorsErrorRulesPtrOutput) ToWebAppCustomErrorsErrorRulesPtrOutput() WebAppCustomErrorsErrorRulesPtrOutput {
	return o
}

func (o WebAppCustomErrorsErrorRulesPtrOutput) ToWebAppCustomErrorsErrorRulesPtrOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesPtrOutput {
	return o
}

func (o WebAppCustomErrorsErrorRulesPtrOutput) Elem() WebAppCustomErrorsErrorRulesOutput {
	return o.ApplyT(func(v *WebAppCustomErrorsErrorRules) WebAppCustomErrorsErrorRules {
		if v != nil {
			return *v
		}
		var ret WebAppCustomErrorsErrorRules
		return ret
	}).(WebAppCustomErrorsErrorRulesOutput)
}

func (o WebAppCustomErrorsErrorRulesPtrOutput) ErrorRules() WebAppCustomErrorsErrorRulesErrorRuleArrayOutput {
	return o.ApplyT(func(v *WebAppCustomErrorsErrorRules) []WebAppCustomErrorsErrorRulesErrorRule {
		if v == nil {
			return nil
		}
		return v.ErrorRules
	}).(WebAppCustomErrorsErrorRulesErrorRuleArrayOutput)
}

type WebAppCustomErrorsErrorRulesErrorRule struct {
	// Capture settings
	CaptureSettings WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings `pulumi:"captureSettings"`
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	KeyMatcher string `pulumi:"keyMatcher"`
	// A case-insensitive key pattern
	KeyPattern *string `pulumi:"keyPattern"`
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	ValueMatcher string `pulumi:"valueMatcher"`
	// A case-insensitive value pattern
	ValuePattern *string `pulumi:"valuePattern"`
}

// WebAppCustomErrorsErrorRulesErrorRuleInput is an input type that accepts WebAppCustomErrorsErrorRulesErrorRuleArgs and WebAppCustomErrorsErrorRulesErrorRuleOutput values.
// You can construct a concrete instance of `WebAppCustomErrorsErrorRulesErrorRuleInput` via:
//
//	WebAppCustomErrorsErrorRulesErrorRuleArgs{...}
type WebAppCustomErrorsErrorRulesErrorRuleInput interface {
	pulumi.Input

	ToWebAppCustomErrorsErrorRulesErrorRuleOutput() WebAppCustomErrorsErrorRulesErrorRuleOutput
	ToWebAppCustomErrorsErrorRulesErrorRuleOutputWithContext(context.Context) WebAppCustomErrorsErrorRulesErrorRuleOutput
}

type WebAppCustomErrorsErrorRulesErrorRuleArgs struct {
	// Capture settings
	CaptureSettings WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsInput `pulumi:"captureSettings"`
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	KeyMatcher pulumi.StringInput `pulumi:"keyMatcher"`
	// A case-insensitive key pattern
	KeyPattern pulumi.StringPtrInput `pulumi:"keyPattern"`
	// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	ValueMatcher pulumi.StringInput `pulumi:"valueMatcher"`
	// A case-insensitive value pattern
	ValuePattern pulumi.StringPtrInput `pulumi:"valuePattern"`
}

func (WebAppCustomErrorsErrorRulesErrorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppCustomErrorsErrorRulesErrorRule)(nil)).Elem()
}

func (i WebAppCustomErrorsErrorRulesErrorRuleArgs) ToWebAppCustomErrorsErrorRulesErrorRuleOutput() WebAppCustomErrorsErrorRulesErrorRuleOutput {
	return i.ToWebAppCustomErrorsErrorRulesErrorRuleOutputWithContext(context.Background())
}

func (i WebAppCustomErrorsErrorRulesErrorRuleArgs) ToWebAppCustomErrorsErrorRulesErrorRuleOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesErrorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppCustomErrorsErrorRulesErrorRuleOutput)
}

// WebAppCustomErrorsErrorRulesErrorRuleArrayInput is an input type that accepts WebAppCustomErrorsErrorRulesErrorRuleArray and WebAppCustomErrorsErrorRulesErrorRuleArrayOutput values.
// You can construct a concrete instance of `WebAppCustomErrorsErrorRulesErrorRuleArrayInput` via:
//
//	WebAppCustomErrorsErrorRulesErrorRuleArray{ WebAppCustomErrorsErrorRulesErrorRuleArgs{...} }
type WebAppCustomErrorsErrorRulesErrorRuleArrayInput interface {
	pulumi.Input

	ToWebAppCustomErrorsErrorRulesErrorRuleArrayOutput() WebAppCustomErrorsErrorRulesErrorRuleArrayOutput
	ToWebAppCustomErrorsErrorRulesErrorRuleArrayOutputWithContext(context.Context) WebAppCustomErrorsErrorRulesErrorRuleArrayOutput
}

type WebAppCustomErrorsErrorRulesErrorRuleArray []WebAppCustomErrorsErrorRulesErrorRuleInput

func (WebAppCustomErrorsErrorRulesErrorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebAppCustomErrorsErrorRulesErrorRule)(nil)).Elem()
}

func (i WebAppCustomErrorsErrorRulesErrorRuleArray) ToWebAppCustomErrorsErrorRulesErrorRuleArrayOutput() WebAppCustomErrorsErrorRulesErrorRuleArrayOutput {
	return i.ToWebAppCustomErrorsErrorRulesErrorRuleArrayOutputWithContext(context.Background())
}

func (i WebAppCustomErrorsErrorRulesErrorRuleArray) ToWebAppCustomErrorsErrorRulesErrorRuleArrayOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesErrorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppCustomErrorsErrorRulesErrorRuleArrayOutput)
}

type WebAppCustomErrorsErrorRulesErrorRuleOutput struct{ *pulumi.OutputState }

func (WebAppCustomErrorsErrorRulesErrorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppCustomErrorsErrorRulesErrorRule)(nil)).Elem()
}

func (o WebAppCustomErrorsErrorRulesErrorRuleOutput) ToWebAppCustomErrorsErrorRulesErrorRuleOutput() WebAppCustomErrorsErrorRulesErrorRuleOutput {
	return o
}

func (o WebAppCustomErrorsErrorRulesErrorRuleOutput) ToWebAppCustomErrorsErrorRulesErrorRuleOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesErrorRuleOutput {
	return o
}

// Capture settings
func (o WebAppCustomErrorsErrorRulesErrorRuleOutput) CaptureSettings() WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRulesErrorRule) WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings {
		return v.CaptureSettings
	}).(WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput)
}

// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
func (o WebAppCustomErrorsErrorRulesErrorRuleOutput) KeyMatcher() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRulesErrorRule) string { return v.KeyMatcher }).(pulumi.StringOutput)
}

// A case-insensitive key pattern
func (o WebAppCustomErrorsErrorRulesErrorRuleOutput) KeyPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRulesErrorRule) *string { return v.KeyPattern }).(pulumi.StringPtrOutput)
}

// Possible Values: `ALL`, `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
func (o WebAppCustomErrorsErrorRulesErrorRuleOutput) ValueMatcher() pulumi.StringOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRulesErrorRule) string { return v.ValueMatcher }).(pulumi.StringOutput)
}

// A case-insensitive value pattern
func (o WebAppCustomErrorsErrorRulesErrorRuleOutput) ValuePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRulesErrorRule) *string { return v.ValuePattern }).(pulumi.StringPtrOutput)
}

type WebAppCustomErrorsErrorRulesErrorRuleArrayOutput struct{ *pulumi.OutputState }

func (WebAppCustomErrorsErrorRulesErrorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebAppCustomErrorsErrorRulesErrorRule)(nil)).Elem()
}

func (o WebAppCustomErrorsErrorRulesErrorRuleArrayOutput) ToWebAppCustomErrorsErrorRulesErrorRuleArrayOutput() WebAppCustomErrorsErrorRulesErrorRuleArrayOutput {
	return o
}

func (o WebAppCustomErrorsErrorRulesErrorRuleArrayOutput) ToWebAppCustomErrorsErrorRulesErrorRuleArrayOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesErrorRuleArrayOutput {
	return o
}

func (o WebAppCustomErrorsErrorRulesErrorRuleArrayOutput) Index(i pulumi.IntInput) WebAppCustomErrorsErrorRulesErrorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebAppCustomErrorsErrorRulesErrorRule {
		return vs[0].([]WebAppCustomErrorsErrorRulesErrorRule)[vs[1].(int)]
	}).(WebAppCustomErrorsErrorRulesErrorRuleOutput)
}

type WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings struct {
	// Capture this error
	Capture bool `pulumi:"capture"`
	// [View more details](https://dt-url.net/hd580p2k)
	ConsiderForAi *bool `pulumi:"considerForAi"`
	// Include error in Apdex calculations
	ImpactApdex *bool `pulumi:"impactApdex"`
}

// WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsInput is an input type that accepts WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsArgs and WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput values.
// You can construct a concrete instance of `WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsInput` via:
//
//	WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsArgs{...}
type WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsInput interface {
	pulumi.Input

	ToWebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput() WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput
	ToWebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutputWithContext(context.Context) WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput
}

type WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsArgs struct {
	// Capture this error
	Capture pulumi.BoolInput `pulumi:"capture"`
	// [View more details](https://dt-url.net/hd580p2k)
	ConsiderForAi pulumi.BoolPtrInput `pulumi:"considerForAi"`
	// Include error in Apdex calculations
	ImpactApdex pulumi.BoolPtrInput `pulumi:"impactApdex"`
}

func (WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings)(nil)).Elem()
}

func (i WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsArgs) ToWebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput() WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return i.ToWebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutputWithContext(context.Background())
}

func (i WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsArgs) ToWebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput)
}

type WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput struct{ *pulumi.OutputState }

func (WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings)(nil)).Elem()
}

func (o WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput) ToWebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput() WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return o
}

func (o WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput) ToWebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutputWithContext(ctx context.Context) WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return o
}

// Capture this error
func (o WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput) Capture() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings) bool { return v.Capture }).(pulumi.BoolOutput)
}

// [View more details](https://dt-url.net/hd580p2k)
func (o WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput) ConsiderForAi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings) *bool { return v.ConsiderForAi }).(pulumi.BoolPtrOutput)
}

// Include error in Apdex calculations
func (o WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput) ImpactApdex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebAppCustomErrorsErrorRulesErrorRuleCaptureSettings) *bool { return v.ImpactApdex }).(pulumi.BoolPtrOutput)
}

type WebAppEnablementRum struct {
	// (Field has overlap with `WebApplication`) Percentage of user sessions captured and analyzed
	CostAndTrafficControl int `pulumi:"costAndTrafficControl"`
	// (Field has overlap with `WebApplication`) This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Enable Real User Monitoring powered by Grail
	EnabledOnGrail *bool `pulumi:"enabledOnGrail"`
}

// WebAppEnablementRumInput is an input type that accepts WebAppEnablementRumArgs and WebAppEnablementRumOutput values.
// You can construct a concrete instance of `WebAppEnablementRumInput` via:
//
//	WebAppEnablementRumArgs{...}
type WebAppEnablementRumInput interface {
	pulumi.Input

	ToWebAppEnablementRumOutput() WebAppEnablementRumOutput
	ToWebAppEnablementRumOutputWithContext(context.Context) WebAppEnablementRumOutput
}

type WebAppEnablementRumArgs struct {
	// (Field has overlap with `WebApplication`) Percentage of user sessions captured and analyzed
	CostAndTrafficControl pulumi.IntInput `pulumi:"costAndTrafficControl"`
	// (Field has overlap with `WebApplication`) This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Enable Real User Monitoring powered by Grail
	EnabledOnGrail pulumi.BoolPtrInput `pulumi:"enabledOnGrail"`
}

func (WebAppEnablementRumArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppEnablementRum)(nil)).Elem()
}

func (i WebAppEnablementRumArgs) ToWebAppEnablementRumOutput() WebAppEnablementRumOutput {
	return i.ToWebAppEnablementRumOutputWithContext(context.Background())
}

func (i WebAppEnablementRumArgs) ToWebAppEnablementRumOutputWithContext(ctx context.Context) WebAppEnablementRumOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppEnablementRumOutput)
}

func (i WebAppEnablementRumArgs) ToWebAppEnablementRumPtrOutput() WebAppEnablementRumPtrOutput {
	return i.ToWebAppEnablementRumPtrOutputWithContext(context.Background())
}

func (i WebAppEnablementRumArgs) ToWebAppEnablementRumPtrOutputWithContext(ctx context.Context) WebAppEnablementRumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppEnablementRumOutput).ToWebAppEnablementRumPtrOutputWithContext(ctx)
}

// WebAppEnablementRumPtrInput is an input type that accepts WebAppEnablementRumArgs, WebAppEnablementRumPtr and WebAppEnablementRumPtrOutput values.
// You can construct a concrete instance of `WebAppEnablementRumPtrInput` via:
//
//	        WebAppEnablementRumArgs{...}
//
//	or:
//
//	        nil
type WebAppEnablementRumPtrInput interface {
	pulumi.Input

	ToWebAppEnablementRumPtrOutput() WebAppEnablementRumPtrOutput
	ToWebAppEnablementRumPtrOutputWithContext(context.Context) WebAppEnablementRumPtrOutput
}

type webAppEnablementRumPtrType WebAppEnablementRumArgs

func WebAppEnablementRumPtr(v *WebAppEnablementRumArgs) WebAppEnablementRumPtrInput {
	return (*webAppEnablementRumPtrType)(v)
}

func (*webAppEnablementRumPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppEnablementRum)(nil)).Elem()
}

func (i *webAppEnablementRumPtrType) ToWebAppEnablementRumPtrOutput() WebAppEnablementRumPtrOutput {
	return i.ToWebAppEnablementRumPtrOutputWithContext(context.Background())
}

func (i *webAppEnablementRumPtrType) ToWebAppEnablementRumPtrOutputWithContext(ctx context.Context) WebAppEnablementRumPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppEnablementRumPtrOutput)
}

type WebAppEnablementRumOutput struct{ *pulumi.OutputState }

func (WebAppEnablementRumOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppEnablementRum)(nil)).Elem()
}

func (o WebAppEnablementRumOutput) ToWebAppEnablementRumOutput() WebAppEnablementRumOutput {
	return o
}

func (o WebAppEnablementRumOutput) ToWebAppEnablementRumOutputWithContext(ctx context.Context) WebAppEnablementRumOutput {
	return o
}

func (o WebAppEnablementRumOutput) ToWebAppEnablementRumPtrOutput() WebAppEnablementRumPtrOutput {
	return o.ToWebAppEnablementRumPtrOutputWithContext(context.Background())
}

func (o WebAppEnablementRumOutput) ToWebAppEnablementRumPtrOutputWithContext(ctx context.Context) WebAppEnablementRumPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppEnablementRum) *WebAppEnablementRum {
		return &v
	}).(WebAppEnablementRumPtrOutput)
}

// (Field has overlap with `WebApplication`) Percentage of user sessions captured and analyzed
func (o WebAppEnablementRumOutput) CostAndTrafficControl() pulumi.IntOutput {
	return o.ApplyT(func(v WebAppEnablementRum) int { return v.CostAndTrafficControl }).(pulumi.IntOutput)
}

// (Field has overlap with `WebApplication`) This setting is enabled (`true`) or disabled (`false`)
func (o WebAppEnablementRumOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppEnablementRum) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Enable Real User Monitoring powered by Grail
func (o WebAppEnablementRumOutput) EnabledOnGrail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebAppEnablementRum) *bool { return v.EnabledOnGrail }).(pulumi.BoolPtrOutput)
}

type WebAppEnablementRumPtrOutput struct{ *pulumi.OutputState }

func (WebAppEnablementRumPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppEnablementRum)(nil)).Elem()
}

func (o WebAppEnablementRumPtrOutput) ToWebAppEnablementRumPtrOutput() WebAppEnablementRumPtrOutput {
	return o
}

func (o WebAppEnablementRumPtrOutput) ToWebAppEnablementRumPtrOutputWithContext(ctx context.Context) WebAppEnablementRumPtrOutput {
	return o
}

func (o WebAppEnablementRumPtrOutput) Elem() WebAppEnablementRumOutput {
	return o.ApplyT(func(v *WebAppEnablementRum) WebAppEnablementRum {
		if v != nil {
			return *v
		}
		var ret WebAppEnablementRum
		return ret
	}).(WebAppEnablementRumOutput)
}

// (Field has overlap with `WebApplication`) Percentage of user sessions captured and analyzed
func (o WebAppEnablementRumPtrOutput) CostAndTrafficControl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebAppEnablementRum) *int {
		if v == nil {
			return nil
		}
		return &v.CostAndTrafficControl
	}).(pulumi.IntPtrOutput)
}

// (Field has overlap with `WebApplication`) This setting is enabled (`true`) or disabled (`false`)
func (o WebAppEnablementRumPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppEnablementRum) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Enable Real User Monitoring powered by Grail
func (o WebAppEnablementRumPtrOutput) EnabledOnGrail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppEnablementRum) *bool {
		if v == nil {
			return nil
		}
		return v.EnabledOnGrail
	}).(pulumi.BoolPtrOutput)
}

type WebAppEnablementSessionReplay struct {
	// (Field has overlap with `WebApplication`) [Percentage of user sessions recorded with Session Replay](https://dt-url.net/sr-cost-traffic-control). For example, if you have 50% for RUM and 50% for Session Replay, it results in 25% of sessions recorded with Session Replay.
	CostAndTrafficControl int `pulumi:"costAndTrafficControl"`
	// (Field has overlap with `WebApplication`) This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
}

// WebAppEnablementSessionReplayInput is an input type that accepts WebAppEnablementSessionReplayArgs and WebAppEnablementSessionReplayOutput values.
// You can construct a concrete instance of `WebAppEnablementSessionReplayInput` via:
//
//	WebAppEnablementSessionReplayArgs{...}
type WebAppEnablementSessionReplayInput interface {
	pulumi.Input

	ToWebAppEnablementSessionReplayOutput() WebAppEnablementSessionReplayOutput
	ToWebAppEnablementSessionReplayOutputWithContext(context.Context) WebAppEnablementSessionReplayOutput
}

type WebAppEnablementSessionReplayArgs struct {
	// (Field has overlap with `WebApplication`) [Percentage of user sessions recorded with Session Replay](https://dt-url.net/sr-cost-traffic-control). For example, if you have 50% for RUM and 50% for Session Replay, it results in 25% of sessions recorded with Session Replay.
	CostAndTrafficControl pulumi.IntInput `pulumi:"costAndTrafficControl"`
	// (Field has overlap with `WebApplication`) This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (WebAppEnablementSessionReplayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppEnablementSessionReplay)(nil)).Elem()
}

func (i WebAppEnablementSessionReplayArgs) ToWebAppEnablementSessionReplayOutput() WebAppEnablementSessionReplayOutput {
	return i.ToWebAppEnablementSessionReplayOutputWithContext(context.Background())
}

func (i WebAppEnablementSessionReplayArgs) ToWebAppEnablementSessionReplayOutputWithContext(ctx context.Context) WebAppEnablementSessionReplayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppEnablementSessionReplayOutput)
}

func (i WebAppEnablementSessionReplayArgs) ToWebAppEnablementSessionReplayPtrOutput() WebAppEnablementSessionReplayPtrOutput {
	return i.ToWebAppEnablementSessionReplayPtrOutputWithContext(context.Background())
}

func (i WebAppEnablementSessionReplayArgs) ToWebAppEnablementSessionReplayPtrOutputWithContext(ctx context.Context) WebAppEnablementSessionReplayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppEnablementSessionReplayOutput).ToWebAppEnablementSessionReplayPtrOutputWithContext(ctx)
}

// WebAppEnablementSessionReplayPtrInput is an input type that accepts WebAppEnablementSessionReplayArgs, WebAppEnablementSessionReplayPtr and WebAppEnablementSessionReplayPtrOutput values.
// You can construct a concrete instance of `WebAppEnablementSessionReplayPtrInput` via:
//
//	        WebAppEnablementSessionReplayArgs{...}
//
//	or:
//
//	        nil
type WebAppEnablementSessionReplayPtrInput interface {
	pulumi.Input

	ToWebAppEnablementSessionReplayPtrOutput() WebAppEnablementSessionReplayPtrOutput
	ToWebAppEnablementSessionReplayPtrOutputWithContext(context.Context) WebAppEnablementSessionReplayPtrOutput
}

type webAppEnablementSessionReplayPtrType WebAppEnablementSessionReplayArgs

func WebAppEnablementSessionReplayPtr(v *WebAppEnablementSessionReplayArgs) WebAppEnablementSessionReplayPtrInput {
	return (*webAppEnablementSessionReplayPtrType)(v)
}

func (*webAppEnablementSessionReplayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppEnablementSessionReplay)(nil)).Elem()
}

func (i *webAppEnablementSessionReplayPtrType) ToWebAppEnablementSessionReplayPtrOutput() WebAppEnablementSessionReplayPtrOutput {
	return i.ToWebAppEnablementSessionReplayPtrOutputWithContext(context.Background())
}

func (i *webAppEnablementSessionReplayPtrType) ToWebAppEnablementSessionReplayPtrOutputWithContext(ctx context.Context) WebAppEnablementSessionReplayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppEnablementSessionReplayPtrOutput)
}

type WebAppEnablementSessionReplayOutput struct{ *pulumi.OutputState }

func (WebAppEnablementSessionReplayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppEnablementSessionReplay)(nil)).Elem()
}

func (o WebAppEnablementSessionReplayOutput) ToWebAppEnablementSessionReplayOutput() WebAppEnablementSessionReplayOutput {
	return o
}

func (o WebAppEnablementSessionReplayOutput) ToWebAppEnablementSessionReplayOutputWithContext(ctx context.Context) WebAppEnablementSessionReplayOutput {
	return o
}

func (o WebAppEnablementSessionReplayOutput) ToWebAppEnablementSessionReplayPtrOutput() WebAppEnablementSessionReplayPtrOutput {
	return o.ToWebAppEnablementSessionReplayPtrOutputWithContext(context.Background())
}

func (o WebAppEnablementSessionReplayOutput) ToWebAppEnablementSessionReplayPtrOutputWithContext(ctx context.Context) WebAppEnablementSessionReplayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppEnablementSessionReplay) *WebAppEnablementSessionReplay {
		return &v
	}).(WebAppEnablementSessionReplayPtrOutput)
}

// (Field has overlap with `WebApplication`) [Percentage of user sessions recorded with Session Replay](https://dt-url.net/sr-cost-traffic-control). For example, if you have 50% for RUM and 50% for Session Replay, it results in 25% of sessions recorded with Session Replay.
func (o WebAppEnablementSessionReplayOutput) CostAndTrafficControl() pulumi.IntOutput {
	return o.ApplyT(func(v WebAppEnablementSessionReplay) int { return v.CostAndTrafficControl }).(pulumi.IntOutput)
}

// (Field has overlap with `WebApplication`) This setting is enabled (`true`) or disabled (`false`)
func (o WebAppEnablementSessionReplayOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppEnablementSessionReplay) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type WebAppEnablementSessionReplayPtrOutput struct{ *pulumi.OutputState }

func (WebAppEnablementSessionReplayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppEnablementSessionReplay)(nil)).Elem()
}

func (o WebAppEnablementSessionReplayPtrOutput) ToWebAppEnablementSessionReplayPtrOutput() WebAppEnablementSessionReplayPtrOutput {
	return o
}

func (o WebAppEnablementSessionReplayPtrOutput) ToWebAppEnablementSessionReplayPtrOutputWithContext(ctx context.Context) WebAppEnablementSessionReplayPtrOutput {
	return o
}

func (o WebAppEnablementSessionReplayPtrOutput) Elem() WebAppEnablementSessionReplayOutput {
	return o.ApplyT(func(v *WebAppEnablementSessionReplay) WebAppEnablementSessionReplay {
		if v != nil {
			return *v
		}
		var ret WebAppEnablementSessionReplay
		return ret
	}).(WebAppEnablementSessionReplayOutput)
}

// (Field has overlap with `WebApplication`) [Percentage of user sessions recorded with Session Replay](https://dt-url.net/sr-cost-traffic-control). For example, if you have 50% for RUM and 50% for Session Replay, it results in 25% of sessions recorded with Session Replay.
func (o WebAppEnablementSessionReplayPtrOutput) CostAndTrafficControl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebAppEnablementSessionReplay) *int {
		if v == nil {
			return nil
		}
		return &v.CostAndTrafficControl
	}).(pulumi.IntPtrOutput)
}

// (Field has overlap with `WebApplication`) This setting is enabled (`true`) or disabled (`false`)
func (o WebAppEnablementSessionReplayPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebAppEnablementSessionReplay) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type WebAppKeyPerformanceCustomThresholds struct {
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingThresholdSeconds float64 `pulumi:"frustratingThresholdSeconds"`
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedThresholdSeconds float64 `pulumi:"toleratedThresholdSeconds"`
}

// WebAppKeyPerformanceCustomThresholdsInput is an input type that accepts WebAppKeyPerformanceCustomThresholdsArgs and WebAppKeyPerformanceCustomThresholdsOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceCustomThresholdsInput` via:
//
//	WebAppKeyPerformanceCustomThresholdsArgs{...}
type WebAppKeyPerformanceCustomThresholdsInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceCustomThresholdsOutput() WebAppKeyPerformanceCustomThresholdsOutput
	ToWebAppKeyPerformanceCustomThresholdsOutputWithContext(context.Context) WebAppKeyPerformanceCustomThresholdsOutput
}

type WebAppKeyPerformanceCustomThresholdsArgs struct {
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingThresholdSeconds pulumi.Float64Input `pulumi:"frustratingThresholdSeconds"`
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedThresholdSeconds pulumi.Float64Input `pulumi:"toleratedThresholdSeconds"`
}

func (WebAppKeyPerformanceCustomThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceCustomThresholds)(nil)).Elem()
}

func (i WebAppKeyPerformanceCustomThresholdsArgs) ToWebAppKeyPerformanceCustomThresholdsOutput() WebAppKeyPerformanceCustomThresholdsOutput {
	return i.ToWebAppKeyPerformanceCustomThresholdsOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceCustomThresholdsArgs) ToWebAppKeyPerformanceCustomThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceCustomThresholdsOutput)
}

func (i WebAppKeyPerformanceCustomThresholdsArgs) ToWebAppKeyPerformanceCustomThresholdsPtrOutput() WebAppKeyPerformanceCustomThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceCustomThresholdsArgs) ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceCustomThresholdsOutput).ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(ctx)
}

// WebAppKeyPerformanceCustomThresholdsPtrInput is an input type that accepts WebAppKeyPerformanceCustomThresholdsArgs, WebAppKeyPerformanceCustomThresholdsPtr and WebAppKeyPerformanceCustomThresholdsPtrOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceCustomThresholdsPtrInput` via:
//
//	        WebAppKeyPerformanceCustomThresholdsArgs{...}
//
//	or:
//
//	        nil
type WebAppKeyPerformanceCustomThresholdsPtrInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceCustomThresholdsPtrOutput() WebAppKeyPerformanceCustomThresholdsPtrOutput
	ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(context.Context) WebAppKeyPerformanceCustomThresholdsPtrOutput
}

type webAppKeyPerformanceCustomThresholdsPtrType WebAppKeyPerformanceCustomThresholdsArgs

func WebAppKeyPerformanceCustomThresholdsPtr(v *WebAppKeyPerformanceCustomThresholdsArgs) WebAppKeyPerformanceCustomThresholdsPtrInput {
	return (*webAppKeyPerformanceCustomThresholdsPtrType)(v)
}

func (*webAppKeyPerformanceCustomThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceCustomThresholds)(nil)).Elem()
}

func (i *webAppKeyPerformanceCustomThresholdsPtrType) ToWebAppKeyPerformanceCustomThresholdsPtrOutput() WebAppKeyPerformanceCustomThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(context.Background())
}

func (i *webAppKeyPerformanceCustomThresholdsPtrType) ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceCustomThresholdsPtrOutput)
}

type WebAppKeyPerformanceCustomThresholdsOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceCustomThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceCustomThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceCustomThresholdsOutput) ToWebAppKeyPerformanceCustomThresholdsOutput() WebAppKeyPerformanceCustomThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceCustomThresholdsOutput) ToWebAppKeyPerformanceCustomThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceCustomThresholdsOutput) ToWebAppKeyPerformanceCustomThresholdsPtrOutput() WebAppKeyPerformanceCustomThresholdsPtrOutput {
	return o.ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(context.Background())
}

func (o WebAppKeyPerformanceCustomThresholdsOutput) ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppKeyPerformanceCustomThresholds) *WebAppKeyPerformanceCustomThresholds {
		return &v
	}).(WebAppKeyPerformanceCustomThresholdsPtrOutput)
}

// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceCustomThresholdsOutput) FrustratingThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceCustomThresholds) float64 { return v.FrustratingThresholdSeconds }).(pulumi.Float64Output)
}

// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceCustomThresholdsOutput) ToleratedThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceCustomThresholds) float64 { return v.ToleratedThresholdSeconds }).(pulumi.Float64Output)
}

type WebAppKeyPerformanceCustomThresholdsPtrOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceCustomThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceCustomThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceCustomThresholdsPtrOutput) ToWebAppKeyPerformanceCustomThresholdsPtrOutput() WebAppKeyPerformanceCustomThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceCustomThresholdsPtrOutput) ToWebAppKeyPerformanceCustomThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceCustomThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceCustomThresholdsPtrOutput) Elem() WebAppKeyPerformanceCustomThresholdsOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceCustomThresholds) WebAppKeyPerformanceCustomThresholds {
		if v != nil {
			return *v
		}
		var ret WebAppKeyPerformanceCustomThresholds
		return ret
	}).(WebAppKeyPerformanceCustomThresholdsOutput)
}

// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceCustomThresholdsPtrOutput) FrustratingThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceCustomThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.FrustratingThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceCustomThresholdsPtrOutput) ToleratedThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceCustomThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.ToleratedThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

type WebAppKeyPerformanceLoadFallbackThresholds struct {
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingFallbackThresholdSeconds float64 `pulumi:"frustratingFallbackThresholdSeconds"`
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedFallbackThresholdSeconds float64 `pulumi:"toleratedFallbackThresholdSeconds"`
}

// WebAppKeyPerformanceLoadFallbackThresholdsInput is an input type that accepts WebAppKeyPerformanceLoadFallbackThresholdsArgs and WebAppKeyPerformanceLoadFallbackThresholdsOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceLoadFallbackThresholdsInput` via:
//
//	WebAppKeyPerformanceLoadFallbackThresholdsArgs{...}
type WebAppKeyPerformanceLoadFallbackThresholdsInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceLoadFallbackThresholdsOutput() WebAppKeyPerformanceLoadFallbackThresholdsOutput
	ToWebAppKeyPerformanceLoadFallbackThresholdsOutputWithContext(context.Context) WebAppKeyPerformanceLoadFallbackThresholdsOutput
}

type WebAppKeyPerformanceLoadFallbackThresholdsArgs struct {
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingFallbackThresholdSeconds pulumi.Float64Input `pulumi:"frustratingFallbackThresholdSeconds"`
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedFallbackThresholdSeconds pulumi.Float64Input `pulumi:"toleratedFallbackThresholdSeconds"`
}

func (WebAppKeyPerformanceLoadFallbackThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceLoadFallbackThresholds)(nil)).Elem()
}

func (i WebAppKeyPerformanceLoadFallbackThresholdsArgs) ToWebAppKeyPerformanceLoadFallbackThresholdsOutput() WebAppKeyPerformanceLoadFallbackThresholdsOutput {
	return i.ToWebAppKeyPerformanceLoadFallbackThresholdsOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceLoadFallbackThresholdsArgs) ToWebAppKeyPerformanceLoadFallbackThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadFallbackThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceLoadFallbackThresholdsOutput)
}

func (i WebAppKeyPerformanceLoadFallbackThresholdsArgs) ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutput() WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceLoadFallbackThresholdsArgs) ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceLoadFallbackThresholdsOutput).ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(ctx)
}

// WebAppKeyPerformanceLoadFallbackThresholdsPtrInput is an input type that accepts WebAppKeyPerformanceLoadFallbackThresholdsArgs, WebAppKeyPerformanceLoadFallbackThresholdsPtr and WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceLoadFallbackThresholdsPtrInput` via:
//
//	        WebAppKeyPerformanceLoadFallbackThresholdsArgs{...}
//
//	or:
//
//	        nil
type WebAppKeyPerformanceLoadFallbackThresholdsPtrInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutput() WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput
	ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(context.Context) WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput
}

type webAppKeyPerformanceLoadFallbackThresholdsPtrType WebAppKeyPerformanceLoadFallbackThresholdsArgs

func WebAppKeyPerformanceLoadFallbackThresholdsPtr(v *WebAppKeyPerformanceLoadFallbackThresholdsArgs) WebAppKeyPerformanceLoadFallbackThresholdsPtrInput {
	return (*webAppKeyPerformanceLoadFallbackThresholdsPtrType)(v)
}

func (*webAppKeyPerformanceLoadFallbackThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceLoadFallbackThresholds)(nil)).Elem()
}

func (i *webAppKeyPerformanceLoadFallbackThresholdsPtrType) ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutput() WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(context.Background())
}

func (i *webAppKeyPerformanceLoadFallbackThresholdsPtrType) ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput)
}

type WebAppKeyPerformanceLoadFallbackThresholdsOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceLoadFallbackThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceLoadFallbackThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceLoadFallbackThresholdsOutput) ToWebAppKeyPerformanceLoadFallbackThresholdsOutput() WebAppKeyPerformanceLoadFallbackThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceLoadFallbackThresholdsOutput) ToWebAppKeyPerformanceLoadFallbackThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadFallbackThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceLoadFallbackThresholdsOutput) ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutput() WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput {
	return o.ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(context.Background())
}

func (o WebAppKeyPerformanceLoadFallbackThresholdsOutput) ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppKeyPerformanceLoadFallbackThresholds) *WebAppKeyPerformanceLoadFallbackThresholds {
		return &v
	}).(WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput)
}

// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceLoadFallbackThresholdsOutput) FrustratingFallbackThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceLoadFallbackThresholds) float64 {
		return v.FrustratingFallbackThresholdSeconds
	}).(pulumi.Float64Output)
}

// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceLoadFallbackThresholdsOutput) ToleratedFallbackThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceLoadFallbackThresholds) float64 { return v.ToleratedFallbackThresholdSeconds }).(pulumi.Float64Output)
}

type WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceLoadFallbackThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput) ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutput() WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput) ToWebAppKeyPerformanceLoadFallbackThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput) Elem() WebAppKeyPerformanceLoadFallbackThresholdsOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceLoadFallbackThresholds) WebAppKeyPerformanceLoadFallbackThresholds {
		if v != nil {
			return *v
		}
		var ret WebAppKeyPerformanceLoadFallbackThresholds
		return ret
	}).(WebAppKeyPerformanceLoadFallbackThresholdsOutput)
}

// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput) FrustratingFallbackThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceLoadFallbackThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.FrustratingFallbackThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput) ToleratedFallbackThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceLoadFallbackThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.ToleratedFallbackThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

type WebAppKeyPerformanceLoadThresholds struct {
	// If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingThresholdSeconds float64 `pulumi:"frustratingThresholdSeconds"`
	// If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedThresholdSeconds float64 `pulumi:"toleratedThresholdSeconds"`
}

// WebAppKeyPerformanceLoadThresholdsInput is an input type that accepts WebAppKeyPerformanceLoadThresholdsArgs and WebAppKeyPerformanceLoadThresholdsOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceLoadThresholdsInput` via:
//
//	WebAppKeyPerformanceLoadThresholdsArgs{...}
type WebAppKeyPerformanceLoadThresholdsInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceLoadThresholdsOutput() WebAppKeyPerformanceLoadThresholdsOutput
	ToWebAppKeyPerformanceLoadThresholdsOutputWithContext(context.Context) WebAppKeyPerformanceLoadThresholdsOutput
}

type WebAppKeyPerformanceLoadThresholdsArgs struct {
	// If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingThresholdSeconds pulumi.Float64Input `pulumi:"frustratingThresholdSeconds"`
	// If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedThresholdSeconds pulumi.Float64Input `pulumi:"toleratedThresholdSeconds"`
}

func (WebAppKeyPerformanceLoadThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceLoadThresholds)(nil)).Elem()
}

func (i WebAppKeyPerformanceLoadThresholdsArgs) ToWebAppKeyPerformanceLoadThresholdsOutput() WebAppKeyPerformanceLoadThresholdsOutput {
	return i.ToWebAppKeyPerformanceLoadThresholdsOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceLoadThresholdsArgs) ToWebAppKeyPerformanceLoadThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceLoadThresholdsOutput)
}

func (i WebAppKeyPerformanceLoadThresholdsArgs) ToWebAppKeyPerformanceLoadThresholdsPtrOutput() WebAppKeyPerformanceLoadThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceLoadThresholdsArgs) ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceLoadThresholdsOutput).ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(ctx)
}

// WebAppKeyPerformanceLoadThresholdsPtrInput is an input type that accepts WebAppKeyPerformanceLoadThresholdsArgs, WebAppKeyPerformanceLoadThresholdsPtr and WebAppKeyPerformanceLoadThresholdsPtrOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceLoadThresholdsPtrInput` via:
//
//	        WebAppKeyPerformanceLoadThresholdsArgs{...}
//
//	or:
//
//	        nil
type WebAppKeyPerformanceLoadThresholdsPtrInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceLoadThresholdsPtrOutput() WebAppKeyPerformanceLoadThresholdsPtrOutput
	ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(context.Context) WebAppKeyPerformanceLoadThresholdsPtrOutput
}

type webAppKeyPerformanceLoadThresholdsPtrType WebAppKeyPerformanceLoadThresholdsArgs

func WebAppKeyPerformanceLoadThresholdsPtr(v *WebAppKeyPerformanceLoadThresholdsArgs) WebAppKeyPerformanceLoadThresholdsPtrInput {
	return (*webAppKeyPerformanceLoadThresholdsPtrType)(v)
}

func (*webAppKeyPerformanceLoadThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceLoadThresholds)(nil)).Elem()
}

func (i *webAppKeyPerformanceLoadThresholdsPtrType) ToWebAppKeyPerformanceLoadThresholdsPtrOutput() WebAppKeyPerformanceLoadThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(context.Background())
}

func (i *webAppKeyPerformanceLoadThresholdsPtrType) ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceLoadThresholdsPtrOutput)
}

type WebAppKeyPerformanceLoadThresholdsOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceLoadThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceLoadThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceLoadThresholdsOutput) ToWebAppKeyPerformanceLoadThresholdsOutput() WebAppKeyPerformanceLoadThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceLoadThresholdsOutput) ToWebAppKeyPerformanceLoadThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceLoadThresholdsOutput) ToWebAppKeyPerformanceLoadThresholdsPtrOutput() WebAppKeyPerformanceLoadThresholdsPtrOutput {
	return o.ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(context.Background())
}

func (o WebAppKeyPerformanceLoadThresholdsOutput) ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppKeyPerformanceLoadThresholds) *WebAppKeyPerformanceLoadThresholds {
		return &v
	}).(WebAppKeyPerformanceLoadThresholdsPtrOutput)
}

// If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceLoadThresholdsOutput) FrustratingThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceLoadThresholds) float64 { return v.FrustratingThresholdSeconds }).(pulumi.Float64Output)
}

// If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceLoadThresholdsOutput) ToleratedThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceLoadThresholds) float64 { return v.ToleratedThresholdSeconds }).(pulumi.Float64Output)
}

type WebAppKeyPerformanceLoadThresholdsPtrOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceLoadThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceLoadThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceLoadThresholdsPtrOutput) ToWebAppKeyPerformanceLoadThresholdsPtrOutput() WebAppKeyPerformanceLoadThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceLoadThresholdsPtrOutput) ToWebAppKeyPerformanceLoadThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceLoadThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceLoadThresholdsPtrOutput) Elem() WebAppKeyPerformanceLoadThresholdsOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceLoadThresholds) WebAppKeyPerformanceLoadThresholds {
		if v != nil {
			return *v
		}
		var ret WebAppKeyPerformanceLoadThresholds
		return ret
	}).(WebAppKeyPerformanceLoadThresholdsOutput)
}

// If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceLoadThresholdsPtrOutput) FrustratingThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceLoadThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.FrustratingThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

// If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceLoadThresholdsPtrOutput) ToleratedThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceLoadThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.ToleratedThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

type WebAppKeyPerformanceXhrFallbackThresholds struct {
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingFallbackThresholdSeconds float64 `pulumi:"frustratingFallbackThresholdSeconds"`
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedFallbackThresholdSeconds float64 `pulumi:"toleratedFallbackThresholdSeconds"`
}

// WebAppKeyPerformanceXhrFallbackThresholdsInput is an input type that accepts WebAppKeyPerformanceXhrFallbackThresholdsArgs and WebAppKeyPerformanceXhrFallbackThresholdsOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceXhrFallbackThresholdsInput` via:
//
//	WebAppKeyPerformanceXhrFallbackThresholdsArgs{...}
type WebAppKeyPerformanceXhrFallbackThresholdsInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceXhrFallbackThresholdsOutput() WebAppKeyPerformanceXhrFallbackThresholdsOutput
	ToWebAppKeyPerformanceXhrFallbackThresholdsOutputWithContext(context.Context) WebAppKeyPerformanceXhrFallbackThresholdsOutput
}

type WebAppKeyPerformanceXhrFallbackThresholdsArgs struct {
	// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingFallbackThresholdSeconds pulumi.Float64Input `pulumi:"frustratingFallbackThresholdSeconds"`
	// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedFallbackThresholdSeconds pulumi.Float64Input `pulumi:"toleratedFallbackThresholdSeconds"`
}

func (WebAppKeyPerformanceXhrFallbackThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceXhrFallbackThresholds)(nil)).Elem()
}

func (i WebAppKeyPerformanceXhrFallbackThresholdsArgs) ToWebAppKeyPerformanceXhrFallbackThresholdsOutput() WebAppKeyPerformanceXhrFallbackThresholdsOutput {
	return i.ToWebAppKeyPerformanceXhrFallbackThresholdsOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceXhrFallbackThresholdsArgs) ToWebAppKeyPerformanceXhrFallbackThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrFallbackThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceXhrFallbackThresholdsOutput)
}

func (i WebAppKeyPerformanceXhrFallbackThresholdsArgs) ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutput() WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceXhrFallbackThresholdsArgs) ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceXhrFallbackThresholdsOutput).ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(ctx)
}

// WebAppKeyPerformanceXhrFallbackThresholdsPtrInput is an input type that accepts WebAppKeyPerformanceXhrFallbackThresholdsArgs, WebAppKeyPerformanceXhrFallbackThresholdsPtr and WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceXhrFallbackThresholdsPtrInput` via:
//
//	        WebAppKeyPerformanceXhrFallbackThresholdsArgs{...}
//
//	or:
//
//	        nil
type WebAppKeyPerformanceXhrFallbackThresholdsPtrInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutput() WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput
	ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(context.Context) WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput
}

type webAppKeyPerformanceXhrFallbackThresholdsPtrType WebAppKeyPerformanceXhrFallbackThresholdsArgs

func WebAppKeyPerformanceXhrFallbackThresholdsPtr(v *WebAppKeyPerformanceXhrFallbackThresholdsArgs) WebAppKeyPerformanceXhrFallbackThresholdsPtrInput {
	return (*webAppKeyPerformanceXhrFallbackThresholdsPtrType)(v)
}

func (*webAppKeyPerformanceXhrFallbackThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceXhrFallbackThresholds)(nil)).Elem()
}

func (i *webAppKeyPerformanceXhrFallbackThresholdsPtrType) ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutput() WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(context.Background())
}

func (i *webAppKeyPerformanceXhrFallbackThresholdsPtrType) ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput)
}

type WebAppKeyPerformanceXhrFallbackThresholdsOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceXhrFallbackThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceXhrFallbackThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceXhrFallbackThresholdsOutput) ToWebAppKeyPerformanceXhrFallbackThresholdsOutput() WebAppKeyPerformanceXhrFallbackThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceXhrFallbackThresholdsOutput) ToWebAppKeyPerformanceXhrFallbackThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrFallbackThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceXhrFallbackThresholdsOutput) ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutput() WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput {
	return o.ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(context.Background())
}

func (o WebAppKeyPerformanceXhrFallbackThresholdsOutput) ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppKeyPerformanceXhrFallbackThresholds) *WebAppKeyPerformanceXhrFallbackThresholds {
		return &v
	}).(WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput)
}

// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceXhrFallbackThresholdsOutput) FrustratingFallbackThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceXhrFallbackThresholds) float64 {
		return v.FrustratingFallbackThresholdSeconds
	}).(pulumi.Float64Output)
}

// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceXhrFallbackThresholdsOutput) ToleratedFallbackThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceXhrFallbackThresholds) float64 { return v.ToleratedFallbackThresholdSeconds }).(pulumi.Float64Output)
}

type WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceXhrFallbackThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput) ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutput() WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput) ToWebAppKeyPerformanceXhrFallbackThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput) Elem() WebAppKeyPerformanceXhrFallbackThresholdsOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceXhrFallbackThresholds) WebAppKeyPerformanceXhrFallbackThresholds {
		if v != nil {
			return *v
		}
		var ret WebAppKeyPerformanceXhrFallbackThresholds
		return ret
	}).(WebAppKeyPerformanceXhrFallbackThresholdsOutput)
}

// If **User action duration** is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput) FrustratingFallbackThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceXhrFallbackThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.FrustratingFallbackThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

// If **User action duration** is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput) ToleratedFallbackThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceXhrFallbackThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.ToleratedFallbackThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

type WebAppKeyPerformanceXhrThresholds struct {
	// If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingThresholdSeconds float64 `pulumi:"frustratingThresholdSeconds"`
	// If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedThresholdSeconds float64 `pulumi:"toleratedThresholdSeconds"`
}

// WebAppKeyPerformanceXhrThresholdsInput is an input type that accepts WebAppKeyPerformanceXhrThresholdsArgs and WebAppKeyPerformanceXhrThresholdsOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceXhrThresholdsInput` via:
//
//	WebAppKeyPerformanceXhrThresholdsArgs{...}
type WebAppKeyPerformanceXhrThresholdsInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceXhrThresholdsOutput() WebAppKeyPerformanceXhrThresholdsOutput
	ToWebAppKeyPerformanceXhrThresholdsOutputWithContext(context.Context) WebAppKeyPerformanceXhrThresholdsOutput
}

type WebAppKeyPerformanceXhrThresholdsArgs struct {
	// If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
	FrustratingThresholdSeconds pulumi.Float64Input `pulumi:"frustratingThresholdSeconds"`
	// If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
	ToleratedThresholdSeconds pulumi.Float64Input `pulumi:"toleratedThresholdSeconds"`
}

func (WebAppKeyPerformanceXhrThresholdsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceXhrThresholds)(nil)).Elem()
}

func (i WebAppKeyPerformanceXhrThresholdsArgs) ToWebAppKeyPerformanceXhrThresholdsOutput() WebAppKeyPerformanceXhrThresholdsOutput {
	return i.ToWebAppKeyPerformanceXhrThresholdsOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceXhrThresholdsArgs) ToWebAppKeyPerformanceXhrThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrThresholdsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceXhrThresholdsOutput)
}

func (i WebAppKeyPerformanceXhrThresholdsArgs) ToWebAppKeyPerformanceXhrThresholdsPtrOutput() WebAppKeyPerformanceXhrThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(context.Background())
}

func (i WebAppKeyPerformanceXhrThresholdsArgs) ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceXhrThresholdsOutput).ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(ctx)
}

// WebAppKeyPerformanceXhrThresholdsPtrInput is an input type that accepts WebAppKeyPerformanceXhrThresholdsArgs, WebAppKeyPerformanceXhrThresholdsPtr and WebAppKeyPerformanceXhrThresholdsPtrOutput values.
// You can construct a concrete instance of `WebAppKeyPerformanceXhrThresholdsPtrInput` via:
//
//	        WebAppKeyPerformanceXhrThresholdsArgs{...}
//
//	or:
//
//	        nil
type WebAppKeyPerformanceXhrThresholdsPtrInput interface {
	pulumi.Input

	ToWebAppKeyPerformanceXhrThresholdsPtrOutput() WebAppKeyPerformanceXhrThresholdsPtrOutput
	ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(context.Context) WebAppKeyPerformanceXhrThresholdsPtrOutput
}

type webAppKeyPerformanceXhrThresholdsPtrType WebAppKeyPerformanceXhrThresholdsArgs

func WebAppKeyPerformanceXhrThresholdsPtr(v *WebAppKeyPerformanceXhrThresholdsArgs) WebAppKeyPerformanceXhrThresholdsPtrInput {
	return (*webAppKeyPerformanceXhrThresholdsPtrType)(v)
}

func (*webAppKeyPerformanceXhrThresholdsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceXhrThresholds)(nil)).Elem()
}

func (i *webAppKeyPerformanceXhrThresholdsPtrType) ToWebAppKeyPerformanceXhrThresholdsPtrOutput() WebAppKeyPerformanceXhrThresholdsPtrOutput {
	return i.ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(context.Background())
}

func (i *webAppKeyPerformanceXhrThresholdsPtrType) ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrThresholdsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppKeyPerformanceXhrThresholdsPtrOutput)
}

type WebAppKeyPerformanceXhrThresholdsOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceXhrThresholdsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppKeyPerformanceXhrThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceXhrThresholdsOutput) ToWebAppKeyPerformanceXhrThresholdsOutput() WebAppKeyPerformanceXhrThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceXhrThresholdsOutput) ToWebAppKeyPerformanceXhrThresholdsOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrThresholdsOutput {
	return o
}

func (o WebAppKeyPerformanceXhrThresholdsOutput) ToWebAppKeyPerformanceXhrThresholdsPtrOutput() WebAppKeyPerformanceXhrThresholdsPtrOutput {
	return o.ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(context.Background())
}

func (o WebAppKeyPerformanceXhrThresholdsOutput) ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrThresholdsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppKeyPerformanceXhrThresholds) *WebAppKeyPerformanceXhrThresholds {
		return &v
	}).(WebAppKeyPerformanceXhrThresholdsPtrOutput)
}

// If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceXhrThresholdsOutput) FrustratingThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceXhrThresholds) float64 { return v.FrustratingThresholdSeconds }).(pulumi.Float64Output)
}

// If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceXhrThresholdsOutput) ToleratedThresholdSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v WebAppKeyPerformanceXhrThresholds) float64 { return v.ToleratedThresholdSeconds }).(pulumi.Float64Output)
}

type WebAppKeyPerformanceXhrThresholdsPtrOutput struct{ *pulumi.OutputState }

func (WebAppKeyPerformanceXhrThresholdsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppKeyPerformanceXhrThresholds)(nil)).Elem()
}

func (o WebAppKeyPerformanceXhrThresholdsPtrOutput) ToWebAppKeyPerformanceXhrThresholdsPtrOutput() WebAppKeyPerformanceXhrThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceXhrThresholdsPtrOutput) ToWebAppKeyPerformanceXhrThresholdsPtrOutputWithContext(ctx context.Context) WebAppKeyPerformanceXhrThresholdsPtrOutput {
	return o
}

func (o WebAppKeyPerformanceXhrThresholdsPtrOutput) Elem() WebAppKeyPerformanceXhrThresholdsOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceXhrThresholds) WebAppKeyPerformanceXhrThresholds {
		if v != nil {
			return *v
		}
		var ret WebAppKeyPerformanceXhrThresholds
		return ret
	}).(WebAppKeyPerformanceXhrThresholdsOutput)
}

// If the key performance metric is above this value, the action is assigned to the Frustrated performance zone.
func (o WebAppKeyPerformanceXhrThresholdsPtrOutput) FrustratingThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceXhrThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.FrustratingThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

// If the key performance metric is below this value, the action is assigned to the Satisfied performance zone.
func (o WebAppKeyPerformanceXhrThresholdsPtrOutput) ToleratedThresholdSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *WebAppKeyPerformanceXhrThresholds) *float64 {
		if v == nil {
			return nil
		}
		return &v.ToleratedThresholdSeconds
	}).(pulumi.Float64PtrOutput)
}

type WebAppRequestErrorsErrorRules struct {
	ErrorRules []WebAppRequestErrorsErrorRulesErrorRule `pulumi:"errorRules"`
}

// WebAppRequestErrorsErrorRulesInput is an input type that accepts WebAppRequestErrorsErrorRulesArgs and WebAppRequestErrorsErrorRulesOutput values.
// You can construct a concrete instance of `WebAppRequestErrorsErrorRulesInput` via:
//
//	WebAppRequestErrorsErrorRulesArgs{...}
type WebAppRequestErrorsErrorRulesInput interface {
	pulumi.Input

	ToWebAppRequestErrorsErrorRulesOutput() WebAppRequestErrorsErrorRulesOutput
	ToWebAppRequestErrorsErrorRulesOutputWithContext(context.Context) WebAppRequestErrorsErrorRulesOutput
}

type WebAppRequestErrorsErrorRulesArgs struct {
	ErrorRules WebAppRequestErrorsErrorRulesErrorRuleArrayInput `pulumi:"errorRules"`
}

func (WebAppRequestErrorsErrorRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRequestErrorsErrorRules)(nil)).Elem()
}

func (i WebAppRequestErrorsErrorRulesArgs) ToWebAppRequestErrorsErrorRulesOutput() WebAppRequestErrorsErrorRulesOutput {
	return i.ToWebAppRequestErrorsErrorRulesOutputWithContext(context.Background())
}

func (i WebAppRequestErrorsErrorRulesArgs) ToWebAppRequestErrorsErrorRulesOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsErrorRulesOutput)
}

func (i WebAppRequestErrorsErrorRulesArgs) ToWebAppRequestErrorsErrorRulesPtrOutput() WebAppRequestErrorsErrorRulesPtrOutput {
	return i.ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(context.Background())
}

func (i WebAppRequestErrorsErrorRulesArgs) ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsErrorRulesOutput).ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(ctx)
}

// WebAppRequestErrorsErrorRulesPtrInput is an input type that accepts WebAppRequestErrorsErrorRulesArgs, WebAppRequestErrorsErrorRulesPtr and WebAppRequestErrorsErrorRulesPtrOutput values.
// You can construct a concrete instance of `WebAppRequestErrorsErrorRulesPtrInput` via:
//
//	        WebAppRequestErrorsErrorRulesArgs{...}
//
//	or:
//
//	        nil
type WebAppRequestErrorsErrorRulesPtrInput interface {
	pulumi.Input

	ToWebAppRequestErrorsErrorRulesPtrOutput() WebAppRequestErrorsErrorRulesPtrOutput
	ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(context.Context) WebAppRequestErrorsErrorRulesPtrOutput
}

type webAppRequestErrorsErrorRulesPtrType WebAppRequestErrorsErrorRulesArgs

func WebAppRequestErrorsErrorRulesPtr(v *WebAppRequestErrorsErrorRulesArgs) WebAppRequestErrorsErrorRulesPtrInput {
	return (*webAppRequestErrorsErrorRulesPtrType)(v)
}

func (*webAppRequestErrorsErrorRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppRequestErrorsErrorRules)(nil)).Elem()
}

func (i *webAppRequestErrorsErrorRulesPtrType) ToWebAppRequestErrorsErrorRulesPtrOutput() WebAppRequestErrorsErrorRulesPtrOutput {
	return i.ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(context.Background())
}

func (i *webAppRequestErrorsErrorRulesPtrType) ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsErrorRulesPtrOutput)
}

type WebAppRequestErrorsErrorRulesOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsErrorRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRequestErrorsErrorRules)(nil)).Elem()
}

func (o WebAppRequestErrorsErrorRulesOutput) ToWebAppRequestErrorsErrorRulesOutput() WebAppRequestErrorsErrorRulesOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesOutput) ToWebAppRequestErrorsErrorRulesOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesOutput) ToWebAppRequestErrorsErrorRulesPtrOutput() WebAppRequestErrorsErrorRulesPtrOutput {
	return o.ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(context.Background())
}

func (o WebAppRequestErrorsErrorRulesOutput) ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebAppRequestErrorsErrorRules) *WebAppRequestErrorsErrorRules {
		return &v
	}).(WebAppRequestErrorsErrorRulesPtrOutput)
}

func (o WebAppRequestErrorsErrorRulesOutput) ErrorRules() WebAppRequestErrorsErrorRulesErrorRuleArrayOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRules) []WebAppRequestErrorsErrorRulesErrorRule { return v.ErrorRules }).(WebAppRequestErrorsErrorRulesErrorRuleArrayOutput)
}

type WebAppRequestErrorsErrorRulesPtrOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsErrorRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAppRequestErrorsErrorRules)(nil)).Elem()
}

func (o WebAppRequestErrorsErrorRulesPtrOutput) ToWebAppRequestErrorsErrorRulesPtrOutput() WebAppRequestErrorsErrorRulesPtrOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesPtrOutput) ToWebAppRequestErrorsErrorRulesPtrOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesPtrOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesPtrOutput) Elem() WebAppRequestErrorsErrorRulesOutput {
	return o.ApplyT(func(v *WebAppRequestErrorsErrorRules) WebAppRequestErrorsErrorRules {
		if v != nil {
			return *v
		}
		var ret WebAppRequestErrorsErrorRules
		return ret
	}).(WebAppRequestErrorsErrorRulesOutput)
}

func (o WebAppRequestErrorsErrorRulesPtrOutput) ErrorRules() WebAppRequestErrorsErrorRulesErrorRuleArrayOutput {
	return o.ApplyT(func(v *WebAppRequestErrorsErrorRules) []WebAppRequestErrorsErrorRulesErrorRule {
		if v == nil {
			return nil
		}
		return v.ErrorRules
	}).(WebAppRequestErrorsErrorRulesErrorRuleArrayOutput)
}

type WebAppRequestErrorsErrorRulesErrorRule struct {
	// Capture settings
	CaptureSettings WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings `pulumi:"captureSettings"`
	// Match by errors that have CSP violations
	ConsiderCspViolations bool `pulumi:"considerCspViolations"`
	// Match by errors that have failed image requests
	ConsiderFailedImages bool `pulumi:"considerFailedImages"`
	// Match by error code
	ErrorCodes *string `pulumi:"errorCodes"`
	// Filter settings
	FilterSettings WebAppRequestErrorsErrorRulesErrorRuleFilterSettings `pulumi:"filterSettings"`
}

// WebAppRequestErrorsErrorRulesErrorRuleInput is an input type that accepts WebAppRequestErrorsErrorRulesErrorRuleArgs and WebAppRequestErrorsErrorRulesErrorRuleOutput values.
// You can construct a concrete instance of `WebAppRequestErrorsErrorRulesErrorRuleInput` via:
//
//	WebAppRequestErrorsErrorRulesErrorRuleArgs{...}
type WebAppRequestErrorsErrorRulesErrorRuleInput interface {
	pulumi.Input

	ToWebAppRequestErrorsErrorRulesErrorRuleOutput() WebAppRequestErrorsErrorRulesErrorRuleOutput
	ToWebAppRequestErrorsErrorRulesErrorRuleOutputWithContext(context.Context) WebAppRequestErrorsErrorRulesErrorRuleOutput
}

type WebAppRequestErrorsErrorRulesErrorRuleArgs struct {
	// Capture settings
	CaptureSettings WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsInput `pulumi:"captureSettings"`
	// Match by errors that have CSP violations
	ConsiderCspViolations pulumi.BoolInput `pulumi:"considerCspViolations"`
	// Match by errors that have failed image requests
	ConsiderFailedImages pulumi.BoolInput `pulumi:"considerFailedImages"`
	// Match by error code
	ErrorCodes pulumi.StringPtrInput `pulumi:"errorCodes"`
	// Filter settings
	FilterSettings WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsInput `pulumi:"filterSettings"`
}

func (WebAppRequestErrorsErrorRulesErrorRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRule)(nil)).Elem()
}

func (i WebAppRequestErrorsErrorRulesErrorRuleArgs) ToWebAppRequestErrorsErrorRulesErrorRuleOutput() WebAppRequestErrorsErrorRulesErrorRuleOutput {
	return i.ToWebAppRequestErrorsErrorRulesErrorRuleOutputWithContext(context.Background())
}

func (i WebAppRequestErrorsErrorRulesErrorRuleArgs) ToWebAppRequestErrorsErrorRulesErrorRuleOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesErrorRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsErrorRulesErrorRuleOutput)
}

// WebAppRequestErrorsErrorRulesErrorRuleArrayInput is an input type that accepts WebAppRequestErrorsErrorRulesErrorRuleArray and WebAppRequestErrorsErrorRulesErrorRuleArrayOutput values.
// You can construct a concrete instance of `WebAppRequestErrorsErrorRulesErrorRuleArrayInput` via:
//
//	WebAppRequestErrorsErrorRulesErrorRuleArray{ WebAppRequestErrorsErrorRulesErrorRuleArgs{...} }
type WebAppRequestErrorsErrorRulesErrorRuleArrayInput interface {
	pulumi.Input

	ToWebAppRequestErrorsErrorRulesErrorRuleArrayOutput() WebAppRequestErrorsErrorRulesErrorRuleArrayOutput
	ToWebAppRequestErrorsErrorRulesErrorRuleArrayOutputWithContext(context.Context) WebAppRequestErrorsErrorRulesErrorRuleArrayOutput
}

type WebAppRequestErrorsErrorRulesErrorRuleArray []WebAppRequestErrorsErrorRulesErrorRuleInput

func (WebAppRequestErrorsErrorRulesErrorRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebAppRequestErrorsErrorRulesErrorRule)(nil)).Elem()
}

func (i WebAppRequestErrorsErrorRulesErrorRuleArray) ToWebAppRequestErrorsErrorRulesErrorRuleArrayOutput() WebAppRequestErrorsErrorRulesErrorRuleArrayOutput {
	return i.ToWebAppRequestErrorsErrorRulesErrorRuleArrayOutputWithContext(context.Background())
}

func (i WebAppRequestErrorsErrorRulesErrorRuleArray) ToWebAppRequestErrorsErrorRulesErrorRuleArrayOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesErrorRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsErrorRulesErrorRuleArrayOutput)
}

type WebAppRequestErrorsErrorRulesErrorRuleOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsErrorRulesErrorRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRule)(nil)).Elem()
}

func (o WebAppRequestErrorsErrorRulesErrorRuleOutput) ToWebAppRequestErrorsErrorRulesErrorRuleOutput() WebAppRequestErrorsErrorRulesErrorRuleOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesErrorRuleOutput) ToWebAppRequestErrorsErrorRulesErrorRuleOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesErrorRuleOutput {
	return o
}

// Capture settings
func (o WebAppRequestErrorsErrorRulesErrorRuleOutput) CaptureSettings() WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRule) WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings {
		return v.CaptureSettings
	}).(WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput)
}

// Match by errors that have CSP violations
func (o WebAppRequestErrorsErrorRulesErrorRuleOutput) ConsiderCspViolations() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRule) bool { return v.ConsiderCspViolations }).(pulumi.BoolOutput)
}

// Match by errors that have failed image requests
func (o WebAppRequestErrorsErrorRulesErrorRuleOutput) ConsiderFailedImages() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRule) bool { return v.ConsiderFailedImages }).(pulumi.BoolOutput)
}

// Match by error code
func (o WebAppRequestErrorsErrorRulesErrorRuleOutput) ErrorCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRule) *string { return v.ErrorCodes }).(pulumi.StringPtrOutput)
}

// Filter settings
func (o WebAppRequestErrorsErrorRulesErrorRuleOutput) FilterSettings() WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRule) WebAppRequestErrorsErrorRulesErrorRuleFilterSettings {
		return v.FilterSettings
	}).(WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput)
}

type WebAppRequestErrorsErrorRulesErrorRuleArrayOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsErrorRulesErrorRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebAppRequestErrorsErrorRulesErrorRule)(nil)).Elem()
}

func (o WebAppRequestErrorsErrorRulesErrorRuleArrayOutput) ToWebAppRequestErrorsErrorRulesErrorRuleArrayOutput() WebAppRequestErrorsErrorRulesErrorRuleArrayOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesErrorRuleArrayOutput) ToWebAppRequestErrorsErrorRulesErrorRuleArrayOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesErrorRuleArrayOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesErrorRuleArrayOutput) Index(i pulumi.IntInput) WebAppRequestErrorsErrorRulesErrorRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebAppRequestErrorsErrorRulesErrorRule {
		return vs[0].([]WebAppRequestErrorsErrorRulesErrorRule)[vs[1].(int)]
	}).(WebAppRequestErrorsErrorRulesErrorRuleOutput)
}

type WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings struct {
	// Capture this error
	Capture bool `pulumi:"capture"`
	// [View more details](https://dt-url.net/hd580p2k)
	ConsiderForAi *bool `pulumi:"considerForAi"`
	// Include error in Apdex calculations
	ImpactApdex *bool `pulumi:"impactApdex"`
}

// WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsInput is an input type that accepts WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsArgs and WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput values.
// You can construct a concrete instance of `WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsInput` via:
//
//	WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsArgs{...}
type WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsInput interface {
	pulumi.Input

	ToWebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput() WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput
	ToWebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutputWithContext(context.Context) WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput
}

type WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsArgs struct {
	// Capture this error
	Capture pulumi.BoolInput `pulumi:"capture"`
	// [View more details](https://dt-url.net/hd580p2k)
	ConsiderForAi pulumi.BoolPtrInput `pulumi:"considerForAi"`
	// Include error in Apdex calculations
	ImpactApdex pulumi.BoolPtrInput `pulumi:"impactApdex"`
}

func (WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings)(nil)).Elem()
}

func (i WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsArgs) ToWebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput() WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return i.ToWebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutputWithContext(context.Background())
}

func (i WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsArgs) ToWebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput)
}

type WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings)(nil)).Elem()
}

func (o WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput) ToWebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput() WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput) ToWebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput {
	return o
}

// Capture this error
func (o WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput) Capture() pulumi.BoolOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings) bool { return v.Capture }).(pulumi.BoolOutput)
}

// [View more details](https://dt-url.net/hd580p2k)
func (o WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput) ConsiderForAi() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings) *bool { return v.ConsiderForAi }).(pulumi.BoolPtrOutput)
}

// Include error in Apdex calculations
func (o WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput) ImpactApdex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRuleCaptureSettings) *bool { return v.ImpactApdex }).(pulumi.BoolPtrOutput)
}

type WebAppRequestErrorsErrorRulesErrorRuleFilterSettings struct {
	// Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	Filter *string `pulumi:"filter"`
	// no documentation available
	Url *string `pulumi:"url"`
}

// WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsInput is an input type that accepts WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsArgs and WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput values.
// You can construct a concrete instance of `WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsInput` via:
//
//	WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsArgs{...}
type WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsInput interface {
	pulumi.Input

	ToWebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput() WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput
	ToWebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutputWithContext(context.Context) WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput
}

type WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsArgs struct {
	// Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// no documentation available
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRuleFilterSettings)(nil)).Elem()
}

func (i WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsArgs) ToWebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput() WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput {
	return i.ToWebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutputWithContext(context.Background())
}

func (i WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsArgs) ToWebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput)
}

type WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput struct{ *pulumi.OutputState }

func (WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRuleFilterSettings)(nil)).Elem()
}

func (o WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput) ToWebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput() WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput {
	return o
}

func (o WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput) ToWebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutputWithContext(ctx context.Context) WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput {
	return o
}

// Possible Values: `BEGINS_WITH`, `CONTAINS`, `ENDS_WITH`, `EQUALS`
func (o WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRuleFilterSettings) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// no documentation available
func (o WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebAppRequestErrorsErrorRulesErrorRuleFilterSettings) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoals struct {
	// A conversion goal of the application
	Goals []WebApplicationConversionGoalsGoal `pulumi:"goals"`
}

// WebApplicationConversionGoalsInput is an input type that accepts WebApplicationConversionGoalsArgs and WebApplicationConversionGoalsOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsInput` via:
//
//	WebApplicationConversionGoalsArgs{...}
type WebApplicationConversionGoalsInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsOutput() WebApplicationConversionGoalsOutput
	ToWebApplicationConversionGoalsOutputWithContext(context.Context) WebApplicationConversionGoalsOutput
}

type WebApplicationConversionGoalsArgs struct {
	// A conversion goal of the application
	Goals WebApplicationConversionGoalsGoalArrayInput `pulumi:"goals"`
}

func (WebApplicationConversionGoalsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoals)(nil)).Elem()
}

func (i WebApplicationConversionGoalsArgs) ToWebApplicationConversionGoalsOutput() WebApplicationConversionGoalsOutput {
	return i.ToWebApplicationConversionGoalsOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsArgs) ToWebApplicationConversionGoalsOutputWithContext(ctx context.Context) WebApplicationConversionGoalsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsOutput)
}

func (i WebApplicationConversionGoalsArgs) ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput {
	return i.ToWebApplicationConversionGoalsPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsArgs) ToWebApplicationConversionGoalsPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsOutput).ToWebApplicationConversionGoalsPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsPtrInput is an input type that accepts WebApplicationConversionGoalsArgs, WebApplicationConversionGoalsPtr and WebApplicationConversionGoalsPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsPtrInput` via:
//
//	        WebApplicationConversionGoalsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput
	ToWebApplicationConversionGoalsPtrOutputWithContext(context.Context) WebApplicationConversionGoalsPtrOutput
}

type webApplicationConversionGoalsPtrType WebApplicationConversionGoalsArgs

func WebApplicationConversionGoalsPtr(v *WebApplicationConversionGoalsArgs) WebApplicationConversionGoalsPtrInput {
	return (*webApplicationConversionGoalsPtrType)(v)
}

func (*webApplicationConversionGoalsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoals)(nil)).Elem()
}

func (i *webApplicationConversionGoalsPtrType) ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput {
	return i.ToWebApplicationConversionGoalsPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsPtrType) ToWebApplicationConversionGoalsPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsPtrOutput)
}

type WebApplicationConversionGoalsOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoals)(nil)).Elem()
}

func (o WebApplicationConversionGoalsOutput) ToWebApplicationConversionGoalsOutput() WebApplicationConversionGoalsOutput {
	return o
}

func (o WebApplicationConversionGoalsOutput) ToWebApplicationConversionGoalsOutputWithContext(ctx context.Context) WebApplicationConversionGoalsOutput {
	return o
}

func (o WebApplicationConversionGoalsOutput) ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput {
	return o.ToWebApplicationConversionGoalsPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsOutput) ToWebApplicationConversionGoalsPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoals) *WebApplicationConversionGoals {
		return &v
	}).(WebApplicationConversionGoalsPtrOutput)
}

// A conversion goal of the application
func (o WebApplicationConversionGoalsOutput) Goals() WebApplicationConversionGoalsGoalArrayOutput {
	return o.ApplyT(func(v WebApplicationConversionGoals) []WebApplicationConversionGoalsGoal { return v.Goals }).(WebApplicationConversionGoalsGoalArrayOutput)
}

type WebApplicationConversionGoalsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoals)(nil)).Elem()
}

func (o WebApplicationConversionGoalsPtrOutput) ToWebApplicationConversionGoalsPtrOutput() WebApplicationConversionGoalsPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsPtrOutput) ToWebApplicationConversionGoalsPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsPtrOutput) Elem() WebApplicationConversionGoalsOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoals) WebApplicationConversionGoals {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoals
		return ret
	}).(WebApplicationConversionGoalsOutput)
}

// A conversion goal of the application
func (o WebApplicationConversionGoalsPtrOutput) Goals() WebApplicationConversionGoalsGoalArrayOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoals) []WebApplicationConversionGoalsGoal {
		if v == nil {
			return nil
		}
		return v.Goals
	}).(WebApplicationConversionGoalsGoalArrayOutput)
}

type WebApplicationConversionGoalsGoal struct {
	// Configuration of a destination-based conversion goal
	Destination *WebApplicationConversionGoalsGoalDestination `pulumi:"destination"`
	// The ID of conversion goal.
	Id *string `pulumi:"id"`
	// The name of the conversion goal. Valid length within 1 and 50 characters.
	Name string `pulumi:"name"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type *string `pulumi:"type"`
	// Configuration of a destination-based conversion goal
	UserAction *WebApplicationConversionGoalsGoalUserAction `pulumi:"userAction"`
	// Configuration of a destination-based conversion goal
	VisitDuration *WebApplicationConversionGoalsGoalVisitDuration `pulumi:"visitDuration"`
	// Configuration of a destination-based conversion goal
	VisitNumAction *WebApplicationConversionGoalsGoalVisitNumAction `pulumi:"visitNumAction"`
}

// WebApplicationConversionGoalsGoalInput is an input type that accepts WebApplicationConversionGoalsGoalArgs and WebApplicationConversionGoalsGoalOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalInput` via:
//
//	WebApplicationConversionGoalsGoalArgs{...}
type WebApplicationConversionGoalsGoalInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput
	ToWebApplicationConversionGoalsGoalOutputWithContext(context.Context) WebApplicationConversionGoalsGoalOutput
}

type WebApplicationConversionGoalsGoalArgs struct {
	// Configuration of a destination-based conversion goal
	Destination WebApplicationConversionGoalsGoalDestinationPtrInput `pulumi:"destination"`
	// The ID of conversion goal.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the conversion goal. Valid length within 1 and 50 characters.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Configuration of a destination-based conversion goal
	UserAction WebApplicationConversionGoalsGoalUserActionPtrInput `pulumi:"userAction"`
	// Configuration of a destination-based conversion goal
	VisitDuration WebApplicationConversionGoalsGoalVisitDurationPtrInput `pulumi:"visitDuration"`
	// Configuration of a destination-based conversion goal
	VisitNumAction WebApplicationConversionGoalsGoalVisitNumActionPtrInput `pulumi:"visitNumAction"`
}

func (WebApplicationConversionGoalsGoalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalArgs) ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput {
	return i.ToWebApplicationConversionGoalsGoalOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalArgs) ToWebApplicationConversionGoalsGoalOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalOutput)
}

// WebApplicationConversionGoalsGoalArrayInput is an input type that accepts WebApplicationConversionGoalsGoalArray and WebApplicationConversionGoalsGoalArrayOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalArrayInput` via:
//
//	WebApplicationConversionGoalsGoalArray{ WebApplicationConversionGoalsGoalArgs{...} }
type WebApplicationConversionGoalsGoalArrayInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput
	ToWebApplicationConversionGoalsGoalArrayOutputWithContext(context.Context) WebApplicationConversionGoalsGoalArrayOutput
}

type WebApplicationConversionGoalsGoalArray []WebApplicationConversionGoalsGoalInput

func (WebApplicationConversionGoalsGoalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalArray) ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput {
	return i.ToWebApplicationConversionGoalsGoalArrayOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalArray) ToWebApplicationConversionGoalsGoalArrayOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalArrayOutput)
}

type WebApplicationConversionGoalsGoalOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalOutput) ToWebApplicationConversionGoalsGoalOutput() WebApplicationConversionGoalsGoalOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalOutput) ToWebApplicationConversionGoalsGoalOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalOutput {
	return o
}

// Configuration of a destination-based conversion goal
func (o WebApplicationConversionGoalsGoalOutput) Destination() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalDestination {
		return v.Destination
	}).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

// The ID of conversion goal.
func (o WebApplicationConversionGoalsGoalOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the conversion goal. Valid length within 1 and 50 characters.
func (o WebApplicationConversionGoalsGoalOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the web application. Possible values are `AUTO_INJECTED`, `BROWSER_EXTENSION_INJECTED` and `MANUALLY_INJECTED`
func (o WebApplicationConversionGoalsGoalOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Configuration of a destination-based conversion goal
func (o WebApplicationConversionGoalsGoalOutput) UserAction() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalUserAction {
		return v.UserAction
	}).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

// Configuration of a destination-based conversion goal
func (o WebApplicationConversionGoalsGoalOutput) VisitDuration() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalVisitDuration {
		return v.VisitDuration
	}).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

// Configuration of a destination-based conversion goal
func (o WebApplicationConversionGoalsGoalOutput) VisitNumAction() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoal) *WebApplicationConversionGoalsGoalVisitNumAction {
		return v.VisitNumAction
	}).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

type WebApplicationConversionGoalsGoalArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationConversionGoalsGoal)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalArrayOutput) ToWebApplicationConversionGoalsGoalArrayOutput() WebApplicationConversionGoalsGoalArrayOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalArrayOutput) ToWebApplicationConversionGoalsGoalArrayOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalArrayOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalArrayOutput) Index(i pulumi.IntInput) WebApplicationConversionGoalsGoalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationConversionGoalsGoal {
		return vs[0].([]WebApplicationConversionGoalsGoal)[vs[1].(int)]
	}).(WebApplicationConversionGoalsGoalOutput)
}

type WebApplicationConversionGoalsGoalDestination struct {
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType *string `pulumi:"matchType"`
	// The path to be reached to hit the conversion goal
	UrlOrPath string `pulumi:"urlOrPath"`
}

// WebApplicationConversionGoalsGoalDestinationInput is an input type that accepts WebApplicationConversionGoalsGoalDestinationArgs and WebApplicationConversionGoalsGoalDestinationOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalDestinationInput` via:
//
//	WebApplicationConversionGoalsGoalDestinationArgs{...}
type WebApplicationConversionGoalsGoalDestinationInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput
	ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(context.Context) WebApplicationConversionGoalsGoalDestinationOutput
}

type WebApplicationConversionGoalsGoalDestinationArgs struct {
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
	// The path to be reached to hit the conversion goal
	UrlOrPath pulumi.StringInput `pulumi:"urlOrPath"`
}

func (WebApplicationConversionGoalsGoalDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationOutput)
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalDestinationArgs) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationOutput).ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalDestinationPtrInput is an input type that accepts WebApplicationConversionGoalsGoalDestinationArgs, WebApplicationConversionGoalsGoalDestinationPtr and WebApplicationConversionGoalsGoalDestinationPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalDestinationPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalDestinationArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalDestinationPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput
	ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput
}

type webApplicationConversionGoalsGoalDestinationPtrType WebApplicationConversionGoalsGoalDestinationArgs

func WebApplicationConversionGoalsGoalDestinationPtr(v *WebApplicationConversionGoalsGoalDestinationArgs) WebApplicationConversionGoalsGoalDestinationPtrInput {
	return (*webApplicationConversionGoalsGoalDestinationPtrType)(v)
}

func (*webApplicationConversionGoalsGoalDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalDestinationPtrType) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalDestinationPtrType) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

type WebApplicationConversionGoalsGoalDestinationOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationOutput() WebApplicationConversionGoalsGoalDestinationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalDestinationOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalDestination) *WebApplicationConversionGoalsGoalDestination {
		return &v
	}).(WebApplicationConversionGoalsGoalDestinationPtrOutput)
}

// The match is case-sensitive (`true`) or (`false`)
func (o WebApplicationConversionGoalsGoalDestinationOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
func (o WebApplicationConversionGoalsGoalDestinationOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

// The path to be reached to hit the conversion goal
func (o WebApplicationConversionGoalsGoalDestinationOutput) UrlOrPath() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalDestination) string { return v.UrlOrPath }).(pulumi.StringOutput)
}

type WebApplicationConversionGoalsGoalDestinationPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalDestination)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutput() WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) ToWebApplicationConversionGoalsGoalDestinationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalDestinationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) Elem() WebApplicationConversionGoalsGoalDestinationOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) WebApplicationConversionGoalsGoalDestination {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalDestination
		return ret
	}).(WebApplicationConversionGoalsGoalDestinationOutput)
}

// The match is case-sensitive (`true`) or (`false`)
func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *string {
		if v == nil {
			return nil
		}
		return v.MatchType
	}).(pulumi.StringPtrOutput)
}

// The path to be reached to hit the conversion goal
func (o WebApplicationConversionGoalsGoalDestinationPtrOutput) UrlOrPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalDestination) *string {
		if v == nil {
			return nil
		}
		return &v.UrlOrPath
	}).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalUserAction struct {
	// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
	ActionType *string `pulumi:"actionType"`
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive *bool `pulumi:"caseSensitive"`
	// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
	MatchEntity *string `pulumi:"matchEntity"`
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType *string `pulumi:"matchType"`
	// The value to be matched to hit the conversion goal
	Value *string `pulumi:"value"`
}

// WebApplicationConversionGoalsGoalUserActionInput is an input type that accepts WebApplicationConversionGoalsGoalUserActionArgs and WebApplicationConversionGoalsGoalUserActionOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalUserActionInput` via:
//
//	WebApplicationConversionGoalsGoalUserActionArgs{...}
type WebApplicationConversionGoalsGoalUserActionInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput
	ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(context.Context) WebApplicationConversionGoalsGoalUserActionOutput
}

type WebApplicationConversionGoalsGoalUserActionArgs struct {
	// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
	ActionType pulumi.StringPtrInput `pulumi:"actionType"`
	// The match is case-sensitive (`true`) or (`false`)
	CaseSensitive pulumi.BoolPtrInput `pulumi:"caseSensitive"`
	// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
	MatchEntity pulumi.StringPtrInput `pulumi:"matchEntity"`
	// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
	MatchType pulumi.StringPtrInput `pulumi:"matchType"`
	// The value to be matched to hit the conversion goal
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WebApplicationConversionGoalsGoalUserActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionOutput)
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalUserActionArgs) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionOutput).ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalUserActionPtrInput is an input type that accepts WebApplicationConversionGoalsGoalUserActionArgs, WebApplicationConversionGoalsGoalUserActionPtr and WebApplicationConversionGoalsGoalUserActionPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalUserActionPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalUserActionArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalUserActionPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput
	ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput
}

type webApplicationConversionGoalsGoalUserActionPtrType WebApplicationConversionGoalsGoalUserActionArgs

func WebApplicationConversionGoalsGoalUserActionPtr(v *WebApplicationConversionGoalsGoalUserActionArgs) WebApplicationConversionGoalsGoalUserActionPtrInput {
	return (*webApplicationConversionGoalsGoalUserActionPtrType)(v)
}

func (*webApplicationConversionGoalsGoalUserActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalUserActionPtrType) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalUserActionPtrType) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

type WebApplicationConversionGoalsGoalUserActionOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalUserActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionOutput() WebApplicationConversionGoalsGoalUserActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalUserActionOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalUserAction) *WebApplicationConversionGoalsGoalUserAction {
		return &v
	}).(WebApplicationConversionGoalsGoalUserActionPtrOutput)
}

// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
func (o WebApplicationConversionGoalsGoalUserActionOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.ActionType }).(pulumi.StringPtrOutput)
}

// The match is case-sensitive (`true`) or (`false`)
func (o WebApplicationConversionGoalsGoalUserActionOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *bool { return v.CaseSensitive }).(pulumi.BoolPtrOutput)
}

// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
func (o WebApplicationConversionGoalsGoalUserActionOutput) MatchEntity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.MatchEntity }).(pulumi.StringPtrOutput)
}

// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
func (o WebApplicationConversionGoalsGoalUserActionOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

// The value to be matched to hit the conversion goal
func (o WebApplicationConversionGoalsGoalUserActionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalUserAction) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalUserActionPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalUserActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalUserAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutput() WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ToWebApplicationConversionGoalsGoalUserActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalUserActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) Elem() WebApplicationConversionGoalsGoalUserActionOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) WebApplicationConversionGoalsGoalUserAction {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalUserAction
		return ret
	}).(WebApplicationConversionGoalsGoalUserActionOutput)
}

// Type of the action to which the rule applies. Possible values are `Custom`, `Load` and `Xhr`.
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) ActionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.ActionType
	}).(pulumi.StringPtrOutput)
}

// The match is case-sensitive (`true`) or (`false`)
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *bool {
		if v == nil {
			return nil
		}
		return v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

// The type of the entity to which the rule applies. Possible values are `ActionName`, `CssSelector`, `JavaScriptVariable`, `MetaTag`, `PagePath`, `PageTitle`, `PageUrl`, `UrlAnchor` and `XhrUrl`.
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) MatchEntity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.MatchEntity
	}).(pulumi.StringPtrOutput)
}

// The operator of the match. Possible values are `Begins`, `Contains` and `Ends`.
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.MatchType
	}).(pulumi.StringPtrOutput)
}

// The value to be matched to hit the conversion goal
func (o WebApplicationConversionGoalsGoalUserActionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalUserAction) *string {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.StringPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitDuration struct {
	// The duration of session to hit the conversion goal, in milliseconds
	Duration int `pulumi:"duration"`
}

// WebApplicationConversionGoalsGoalVisitDurationInput is an input type that accepts WebApplicationConversionGoalsGoalVisitDurationArgs and WebApplicationConversionGoalsGoalVisitDurationOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitDurationInput` via:
//
//	WebApplicationConversionGoalsGoalVisitDurationArgs{...}
type WebApplicationConversionGoalsGoalVisitDurationInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput
	ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput
}

type WebApplicationConversionGoalsGoalVisitDurationArgs struct {
	// The duration of session to hit the conversion goal, in milliseconds
	Duration pulumi.IntInput `pulumi:"duration"`
}

func (WebApplicationConversionGoalsGoalVisitDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationOutput)
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitDurationArgs) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationOutput).ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalVisitDurationPtrInput is an input type that accepts WebApplicationConversionGoalsGoalVisitDurationArgs, WebApplicationConversionGoalsGoalVisitDurationPtr and WebApplicationConversionGoalsGoalVisitDurationPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitDurationPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalVisitDurationArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalVisitDurationPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput
	ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput
}

type webApplicationConversionGoalsGoalVisitDurationPtrType WebApplicationConversionGoalsGoalVisitDurationArgs

func WebApplicationConversionGoalsGoalVisitDurationPtr(v *WebApplicationConversionGoalsGoalVisitDurationArgs) WebApplicationConversionGoalsGoalVisitDurationPtrInput {
	return (*webApplicationConversionGoalsGoalVisitDurationPtrType)(v)
}

func (*webApplicationConversionGoalsGoalVisitDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalVisitDurationPtrType) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalVisitDurationPtrType) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitDurationOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationOutput() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalVisitDurationOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalVisitDuration) *WebApplicationConversionGoalsGoalVisitDuration {
		return &v
	}).(WebApplicationConversionGoalsGoalVisitDurationPtrOutput)
}

// The duration of session to hit the conversion goal, in milliseconds
func (o WebApplicationConversionGoalsGoalVisitDurationOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalVisitDuration) int { return v.Duration }).(pulumi.IntOutput)
}

type WebApplicationConversionGoalsGoalVisitDurationPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitDuration)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutput() WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) ToWebApplicationConversionGoalsGoalVisitDurationPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitDurationPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) Elem() WebApplicationConversionGoalsGoalVisitDurationOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitDuration) WebApplicationConversionGoalsGoalVisitDuration {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalVisitDuration
		return ret
	}).(WebApplicationConversionGoalsGoalVisitDurationOutput)
}

// The duration of session to hit the conversion goal, in milliseconds
func (o WebApplicationConversionGoalsGoalVisitDurationPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitDuration) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumAction struct {
	// The number of user actions to hit the conversion goal
	NumUserActions *int `pulumi:"numUserActions"`
}

// WebApplicationConversionGoalsGoalVisitNumActionInput is an input type that accepts WebApplicationConversionGoalsGoalVisitNumActionArgs and WebApplicationConversionGoalsGoalVisitNumActionOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitNumActionInput` via:
//
//	WebApplicationConversionGoalsGoalVisitNumActionArgs{...}
type WebApplicationConversionGoalsGoalVisitNumActionInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput
	ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput
}

type WebApplicationConversionGoalsGoalVisitNumActionArgs struct {
	// The number of user actions to hit the conversion goal
	NumUserActions pulumi.IntPtrInput `pulumi:"numUserActions"`
}

func (WebApplicationConversionGoalsGoalVisitNumActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionOutput)
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (i WebApplicationConversionGoalsGoalVisitNumActionArgs) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionOutput).ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx)
}

// WebApplicationConversionGoalsGoalVisitNumActionPtrInput is an input type that accepts WebApplicationConversionGoalsGoalVisitNumActionArgs, WebApplicationConversionGoalsGoalVisitNumActionPtr and WebApplicationConversionGoalsGoalVisitNumActionPtrOutput values.
// You can construct a concrete instance of `WebApplicationConversionGoalsGoalVisitNumActionPtrInput` via:
//
//	        WebApplicationConversionGoalsGoalVisitNumActionArgs{...}
//
//	or:
//
//	        nil
type WebApplicationConversionGoalsGoalVisitNumActionPtrInput interface {
	pulumi.Input

	ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput
	ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput
}

type webApplicationConversionGoalsGoalVisitNumActionPtrType WebApplicationConversionGoalsGoalVisitNumActionArgs

func WebApplicationConversionGoalsGoalVisitNumActionPtr(v *WebApplicationConversionGoalsGoalVisitNumActionArgs) WebApplicationConversionGoalsGoalVisitNumActionPtrInput {
	return (*webApplicationConversionGoalsGoalVisitNumActionPtrType)(v)
}

func (*webApplicationConversionGoalsGoalVisitNumActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (i *webApplicationConversionGoalsGoalVisitNumActionPtrType) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return i.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (i *webApplicationConversionGoalsGoalVisitNumActionPtrType) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumActionOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitNumActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionOutput() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(context.Background())
}

func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationConversionGoalsGoalVisitNumAction) *WebApplicationConversionGoalsGoalVisitNumAction {
		return &v
	}).(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput)
}

// The number of user actions to hit the conversion goal
func (o WebApplicationConversionGoalsGoalVisitNumActionOutput) NumUserActions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationConversionGoalsGoalVisitNumAction) *int { return v.NumUserActions }).(pulumi.IntPtrOutput)
}

type WebApplicationConversionGoalsGoalVisitNumActionPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationConversionGoalsGoalVisitNumAction)(nil)).Elem()
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutput() WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) ToWebApplicationConversionGoalsGoalVisitNumActionPtrOutputWithContext(ctx context.Context) WebApplicationConversionGoalsGoalVisitNumActionPtrOutput {
	return o
}

func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) Elem() WebApplicationConversionGoalsGoalVisitNumActionOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitNumAction) WebApplicationConversionGoalsGoalVisitNumAction {
		if v != nil {
			return *v
		}
		var ret WebApplicationConversionGoalsGoalVisitNumAction
		return ret
	}).(WebApplicationConversionGoalsGoalVisitNumActionOutput)
}

// The number of user actions to hit the conversion goal
func (o WebApplicationConversionGoalsGoalVisitNumActionPtrOutput) NumUserActions() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationConversionGoalsGoalVisitNumAction) *int {
		if v == nil {
			return nil
		}
		return v.NumUserActions
	}).(pulumi.IntPtrOutput)
}

type WebApplicationCustomActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold int `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold int `pulumi:"toleratedThreshold"`
}

// WebApplicationCustomActionApdexSettingsInput is an input type that accepts WebApplicationCustomActionApdexSettingsArgs and WebApplicationCustomActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationCustomActionApdexSettingsInput` via:
//
//	WebApplicationCustomActionApdexSettingsArgs{...}
type WebApplicationCustomActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput
	ToWebApplicationCustomActionApdexSettingsOutputWithContext(context.Context) WebApplicationCustomActionApdexSettingsOutput
}

type WebApplicationCustomActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntInput `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationCustomActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput {
	return i.ToWebApplicationCustomActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsOutput)
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return i.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationCustomActionApdexSettingsArgs) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsOutput).ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationCustomActionApdexSettingsPtrInput is an input type that accepts WebApplicationCustomActionApdexSettingsArgs, WebApplicationCustomActionApdexSettingsPtr and WebApplicationCustomActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationCustomActionApdexSettingsPtrInput` via:
//
//	        WebApplicationCustomActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationCustomActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput
	ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationCustomActionApdexSettingsPtrOutput
}

type webApplicationCustomActionApdexSettingsPtrType WebApplicationCustomActionApdexSettingsArgs

func WebApplicationCustomActionApdexSettingsPtr(v *WebApplicationCustomActionApdexSettingsArgs) WebApplicationCustomActionApdexSettingsPtrInput {
	return (*webApplicationCustomActionApdexSettingsPtrType)(v)
}

func (*webApplicationCustomActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationCustomActionApdexSettingsPtrType) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return i.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationCustomActionApdexSettingsPtrType) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationCustomActionApdexSettingsPtrOutput)
}

type WebApplicationCustomActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationCustomActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsOutput() WebApplicationCustomActionApdexSettingsOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return o.ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationCustomActionApdexSettingsOutput) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationCustomActionApdexSettings) *WebApplicationCustomActionApdexSettings {
		return &v
	}).(WebApplicationCustomActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) int { return v.FrustratingFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) int { return v.FrustratingThreshold }).(pulumi.IntOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationCustomActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) int { return v.ToleratedFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationCustomActionApdexSettings) int { return v.ToleratedThreshold }).(pulumi.IntOutput)
}

type WebApplicationCustomActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationCustomActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationCustomActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToWebApplicationCustomActionApdexSettingsPtrOutput() WebApplicationCustomActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToWebApplicationCustomActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationCustomActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationCustomActionApdexSettingsPtrOutput) Elem() WebApplicationCustomActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) WebApplicationCustomActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationCustomActionApdexSettings
		return ret
	}).(WebApplicationCustomActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationCustomActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationCustomActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationCustomActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationKeyUserAction struct {
	// Configuration of the key user action
	Actions []WebApplicationKeyUserActionAction `pulumi:"actions"`
}

// WebApplicationKeyUserActionInput is an input type that accepts WebApplicationKeyUserActionArgs and WebApplicationKeyUserActionOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionInput` via:
//
//	WebApplicationKeyUserActionArgs{...}
type WebApplicationKeyUserActionInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput
	ToWebApplicationKeyUserActionOutputWithContext(context.Context) WebApplicationKeyUserActionOutput
}

type WebApplicationKeyUserActionArgs struct {
	// Configuration of the key user action
	Actions WebApplicationKeyUserActionActionArrayInput `pulumi:"actions"`
}

func (WebApplicationKeyUserActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionArgs) ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput {
	return i.ToWebApplicationKeyUserActionOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionArgs) ToWebApplicationKeyUserActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionOutput)
}

// WebApplicationKeyUserActionArrayInput is an input type that accepts WebApplicationKeyUserActionArray and WebApplicationKeyUserActionArrayOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionArrayInput` via:
//
//	WebApplicationKeyUserActionArray{ WebApplicationKeyUserActionArgs{...} }
type WebApplicationKeyUserActionArrayInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput
	ToWebApplicationKeyUserActionArrayOutputWithContext(context.Context) WebApplicationKeyUserActionArrayOutput
}

type WebApplicationKeyUserActionArray []WebApplicationKeyUserActionInput

func (WebApplicationKeyUserActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionArray) ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput {
	return i.ToWebApplicationKeyUserActionArrayOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionArray) ToWebApplicationKeyUserActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionArrayOutput)
}

type WebApplicationKeyUserActionOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionOutput) ToWebApplicationKeyUserActionOutput() WebApplicationKeyUserActionOutput {
	return o
}

func (o WebApplicationKeyUserActionOutput) ToWebApplicationKeyUserActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionOutput {
	return o
}

// Configuration of the key user action
func (o WebApplicationKeyUserActionOutput) Actions() WebApplicationKeyUserActionActionArrayOutput {
	return o.ApplyT(func(v WebApplicationKeyUserAction) []WebApplicationKeyUserActionAction { return v.Actions }).(WebApplicationKeyUserActionActionArrayOutput)
}

type WebApplicationKeyUserActionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionArrayOutput) ToWebApplicationKeyUserActionArrayOutput() WebApplicationKeyUserActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionArrayOutput) ToWebApplicationKeyUserActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionArrayOutput) Index(i pulumi.IntInput) WebApplicationKeyUserActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationKeyUserAction {
		return vs[0].([]WebApplicationKeyUserAction)[vs[1].(int)]
	}).(WebApplicationKeyUserActionOutput)
}

type WebApplicationKeyUserActionAction struct {
	// The domain where the action is performed.
	Domain *string `pulumi:"domain"`
	// The name of the action
	Name string `pulumi:"name"`
	// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
	Type string `pulumi:"type"`
}

// WebApplicationKeyUserActionActionInput is an input type that accepts WebApplicationKeyUserActionActionArgs and WebApplicationKeyUserActionActionOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionActionInput` via:
//
//	WebApplicationKeyUserActionActionArgs{...}
type WebApplicationKeyUserActionActionInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput
	ToWebApplicationKeyUserActionActionOutputWithContext(context.Context) WebApplicationKeyUserActionActionOutput
}

type WebApplicationKeyUserActionActionArgs struct {
	// The domain where the action is performed.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// The name of the action
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationKeyUserActionActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionActionArgs) ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput {
	return i.ToWebApplicationKeyUserActionActionOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionActionArgs) ToWebApplicationKeyUserActionActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionActionOutput)
}

// WebApplicationKeyUserActionActionArrayInput is an input type that accepts WebApplicationKeyUserActionActionArray and WebApplicationKeyUserActionActionArrayOutput values.
// You can construct a concrete instance of `WebApplicationKeyUserActionActionArrayInput` via:
//
//	WebApplicationKeyUserActionActionArray{ WebApplicationKeyUserActionActionArgs{...} }
type WebApplicationKeyUserActionActionArrayInput interface {
	pulumi.Input

	ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput
	ToWebApplicationKeyUserActionActionArrayOutputWithContext(context.Context) WebApplicationKeyUserActionActionArrayOutput
}

type WebApplicationKeyUserActionActionArray []WebApplicationKeyUserActionActionInput

func (WebApplicationKeyUserActionActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (i WebApplicationKeyUserActionActionArray) ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput {
	return i.ToWebApplicationKeyUserActionActionArrayOutputWithContext(context.Background())
}

func (i WebApplicationKeyUserActionActionArray) ToWebApplicationKeyUserActionActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationKeyUserActionActionArrayOutput)
}

type WebApplicationKeyUserActionActionOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionActionOutput) ToWebApplicationKeyUserActionActionOutput() WebApplicationKeyUserActionActionOutput {
	return o
}

func (o WebApplicationKeyUserActionActionOutput) ToWebApplicationKeyUserActionActionOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionOutput {
	return o
}

// The domain where the action is performed.
func (o WebApplicationKeyUserActionActionOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// The name of the action
func (o WebApplicationKeyUserActionActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the action. Possible values are `Custom`, `Load` and `Xhr`.
func (o WebApplicationKeyUserActionActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationKeyUserActionAction) string { return v.Type }).(pulumi.StringOutput)
}

type WebApplicationKeyUserActionActionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationKeyUserActionActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationKeyUserActionAction)(nil)).Elem()
}

func (o WebApplicationKeyUserActionActionArrayOutput) ToWebApplicationKeyUserActionActionArrayOutput() WebApplicationKeyUserActionActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionActionArrayOutput) ToWebApplicationKeyUserActionActionArrayOutputWithContext(ctx context.Context) WebApplicationKeyUserActionActionArrayOutput {
	return o
}

func (o WebApplicationKeyUserActionActionArrayOutput) Index(i pulumi.IntInput) WebApplicationKeyUserActionActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationKeyUserActionAction {
		return vs[0].([]WebApplicationKeyUserActionAction)[vs[1].(int)]
	}).(WebApplicationKeyUserActionActionOutput)
}

type WebApplicationLoadActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold int `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold int `pulumi:"toleratedThreshold"`
}

// WebApplicationLoadActionApdexSettingsInput is an input type that accepts WebApplicationLoadActionApdexSettingsArgs and WebApplicationLoadActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationLoadActionApdexSettingsInput` via:
//
//	WebApplicationLoadActionApdexSettingsArgs{...}
type WebApplicationLoadActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput
	ToWebApplicationLoadActionApdexSettingsOutputWithContext(context.Context) WebApplicationLoadActionApdexSettingsOutput
}

type WebApplicationLoadActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntInput `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationLoadActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput {
	return i.ToWebApplicationLoadActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsOutput)
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return i.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationLoadActionApdexSettingsArgs) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsOutput).ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationLoadActionApdexSettingsPtrInput is an input type that accepts WebApplicationLoadActionApdexSettingsArgs, WebApplicationLoadActionApdexSettingsPtr and WebApplicationLoadActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationLoadActionApdexSettingsPtrInput` via:
//
//	        WebApplicationLoadActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationLoadActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput
	ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationLoadActionApdexSettingsPtrOutput
}

type webApplicationLoadActionApdexSettingsPtrType WebApplicationLoadActionApdexSettingsArgs

func WebApplicationLoadActionApdexSettingsPtr(v *WebApplicationLoadActionApdexSettingsArgs) WebApplicationLoadActionApdexSettingsPtrInput {
	return (*webApplicationLoadActionApdexSettingsPtrType)(v)
}

func (*webApplicationLoadActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationLoadActionApdexSettingsPtrType) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return i.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationLoadActionApdexSettingsPtrType) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationLoadActionApdexSettingsPtrOutput)
}

type WebApplicationLoadActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationLoadActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsOutput() WebApplicationLoadActionApdexSettingsOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return o.ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationLoadActionApdexSettingsOutput) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationLoadActionApdexSettings) *WebApplicationLoadActionApdexSettings {
		return &v
	}).(WebApplicationLoadActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) int { return v.FrustratingFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) int { return v.FrustratingThreshold }).(pulumi.IntOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationLoadActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) int { return v.ToleratedFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationLoadActionApdexSettings) int { return v.ToleratedThreshold }).(pulumi.IntOutput)
}

type WebApplicationLoadActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationLoadActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationLoadActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToWebApplicationLoadActionApdexSettingsPtrOutput() WebApplicationLoadActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToWebApplicationLoadActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationLoadActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationLoadActionApdexSettingsPtrOutput) Elem() WebApplicationLoadActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) WebApplicationLoadActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationLoadActionApdexSettings
		return ret
	}).(WebApplicationLoadActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationLoadActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationLoadActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationLoadActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMetaDataCaptureSettings struct {
	// Java script agent meta data capture settings
	Captures []WebApplicationMetaDataCaptureSettingsCapture `pulumi:"captures"`
}

// WebApplicationMetaDataCaptureSettingsInput is an input type that accepts WebApplicationMetaDataCaptureSettingsArgs and WebApplicationMetaDataCaptureSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsInput` via:
//
//	WebApplicationMetaDataCaptureSettingsArgs{...}
type WebApplicationMetaDataCaptureSettingsInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput
	ToWebApplicationMetaDataCaptureSettingsOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsOutput
}

type WebApplicationMetaDataCaptureSettingsArgs struct {
	// Java script agent meta data capture settings
	Captures WebApplicationMetaDataCaptureSettingsCaptureArrayInput `pulumi:"captures"`
}

func (WebApplicationMetaDataCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsOutput)
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsArgs) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsOutput).ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMetaDataCaptureSettingsPtrInput is an input type that accepts WebApplicationMetaDataCaptureSettingsArgs, WebApplicationMetaDataCaptureSettingsPtr and WebApplicationMetaDataCaptureSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsPtrInput` via:
//
//	        WebApplicationMetaDataCaptureSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMetaDataCaptureSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput
	ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput
}

type webApplicationMetaDataCaptureSettingsPtrType WebApplicationMetaDataCaptureSettingsArgs

func WebApplicationMetaDataCaptureSettingsPtr(v *WebApplicationMetaDataCaptureSettingsArgs) WebApplicationMetaDataCaptureSettingsPtrInput {
	return (*webApplicationMetaDataCaptureSettingsPtrType)(v)
}

func (*webApplicationMetaDataCaptureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (i *webApplicationMetaDataCaptureSettingsPtrType) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMetaDataCaptureSettingsPtrType) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsPtrOutput)
}

type WebApplicationMetaDataCaptureSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsOutput() WebApplicationMetaDataCaptureSettingsOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o.ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMetaDataCaptureSettingsOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMetaDataCaptureSettings) *WebApplicationMetaDataCaptureSettings {
		return &v
	}).(WebApplicationMetaDataCaptureSettingsPtrOutput)
}

// Java script agent meta data capture settings
func (o WebApplicationMetaDataCaptureSettingsOutput) Captures() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettings) []WebApplicationMetaDataCaptureSettingsCapture {
		return v.Captures
	}).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMetaDataCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutput() WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) ToWebApplicationMetaDataCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsPtrOutput) Elem() WebApplicationMetaDataCaptureSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMetaDataCaptureSettings) WebApplicationMetaDataCaptureSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMetaDataCaptureSettings
		return ret
	}).(WebApplicationMetaDataCaptureSettingsOutput)
}

// Java script agent meta data capture settings
func (o WebApplicationMetaDataCaptureSettingsPtrOutput) Captures() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o.ApplyT(func(v *WebApplicationMetaDataCaptureSettings) []WebApplicationMetaDataCaptureSettingsCapture {
		if v == nil {
			return nil
		}
		return v.Captures
	}).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsCapture struct {
	// The name of the meta data to capture
	CapturingName string `pulumi:"capturingName"`
	// Name for displaying the captured values in Dynatrace
	Name string `pulumi:"name"`
	// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
	PublicMetadata *bool `pulumi:"publicMetadata"`
	// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
	Type string `pulumi:"type"`
	// The unique ID of the meta data to capture
	UniqueId *int `pulumi:"uniqueId"`
	// `true` if the last captured value should be used for this metadata. By default the first value will be used.
	UseLastValue *bool `pulumi:"useLastValue"`
}

// WebApplicationMetaDataCaptureSettingsCaptureInput is an input type that accepts WebApplicationMetaDataCaptureSettingsCaptureArgs and WebApplicationMetaDataCaptureSettingsCaptureOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsCaptureInput` via:
//
//	WebApplicationMetaDataCaptureSettingsCaptureArgs{...}
type WebApplicationMetaDataCaptureSettingsCaptureInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput
	ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput
}

type WebApplicationMetaDataCaptureSettingsCaptureArgs struct {
	// The name of the meta data to capture
	CapturingName pulumi.StringInput `pulumi:"capturingName"`
	// Name for displaying the captured values in Dynatrace
	Name pulumi.StringInput `pulumi:"name"`
	// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
	PublicMetadata pulumi.BoolPtrInput `pulumi:"publicMetadata"`
	// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
	Type pulumi.StringInput `pulumi:"type"`
	// The unique ID of the meta data to capture
	UniqueId pulumi.IntPtrInput `pulumi:"uniqueId"`
	// `true` if the last captured value should be used for this metadata. By default the first value will be used.
	UseLastValue pulumi.BoolPtrInput `pulumi:"useLastValue"`
}

func (WebApplicationMetaDataCaptureSettingsCaptureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArgs) ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArgs) ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsCaptureOutput)
}

// WebApplicationMetaDataCaptureSettingsCaptureArrayInput is an input type that accepts WebApplicationMetaDataCaptureSettingsCaptureArray and WebApplicationMetaDataCaptureSettingsCaptureArrayOutput values.
// You can construct a concrete instance of `WebApplicationMetaDataCaptureSettingsCaptureArrayInput` via:
//
//	WebApplicationMetaDataCaptureSettingsCaptureArray{ WebApplicationMetaDataCaptureSettingsCaptureArgs{...} }
type WebApplicationMetaDataCaptureSettingsCaptureArrayInput interface {
	pulumi.Input

	ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput
	ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput
}

type WebApplicationMetaDataCaptureSettingsCaptureArray []WebApplicationMetaDataCaptureSettingsCaptureInput

func (WebApplicationMetaDataCaptureSettingsCaptureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArray) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return i.ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(context.Background())
}

func (i WebApplicationMetaDataCaptureSettingsCaptureArray) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput)
}

type WebApplicationMetaDataCaptureSettingsCaptureOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsCaptureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) ToWebApplicationMetaDataCaptureSettingsCaptureOutput() WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) ToWebApplicationMetaDataCaptureSettingsCaptureOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return o
}

// The name of the meta data to capture
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) CapturingName() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.CapturingName }).(pulumi.StringOutput)
}

// Name for displaying the captured values in Dynatrace
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.Name }).(pulumi.StringOutput)
}

// `true` if this metadata should be captured regardless of the privacy settings, `false` otherwise
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) PublicMetadata() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *bool { return v.PublicMetadata }).(pulumi.BoolPtrOutput)
}

// The type of the meta data to capture. Possible values are `COOKIE`, `CSS_SELECTOR`, `JAVA_SCRIPT_FUNCTION`, `JAVA_SCRIPT_VARIABLE`, `META_TAG` and `QUERY_STRING`.
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) string { return v.Type }).(pulumi.StringOutput)
}

// The unique ID of the meta data to capture
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) UniqueId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *int { return v.UniqueId }).(pulumi.IntPtrOutput)
}

// `true` if the last captured value should be used for this metadata. By default the first value will be used.
func (o WebApplicationMetaDataCaptureSettingsCaptureOutput) UseLastValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMetaDataCaptureSettingsCapture) *bool { return v.UseLastValue }).(pulumi.BoolPtrOutput)
}

type WebApplicationMetaDataCaptureSettingsCaptureArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMetaDataCaptureSettingsCapture)(nil)).Elem()
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutput() WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) ToWebApplicationMetaDataCaptureSettingsCaptureArrayOutputWithContext(ctx context.Context) WebApplicationMetaDataCaptureSettingsCaptureArrayOutput {
	return o
}

func (o WebApplicationMetaDataCaptureSettingsCaptureArrayOutput) Index(i pulumi.IntInput) WebApplicationMetaDataCaptureSettingsCaptureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMetaDataCaptureSettingsCapture {
		return vs[0].([]WebApplicationMetaDataCaptureSettingsCapture)[vs[1].(int)]
	}).(WebApplicationMetaDataCaptureSettingsCaptureOutput)
}

type WebApplicationMonitoringSettings struct {
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	AddCrossOriginAnonymousAttribute *bool `pulumi:"addCrossOriginAnonymousAttribute"`
	// Advanced JavaScript tag settings
	AdvancedJavascriptTagSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings `pulumi:"advancedJavascriptTagSettings"`
	// The name of the angular package
	AngularPackageName *string `pulumi:"angularPackageName"`
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	BrowserRestrictionSettings *WebApplicationMonitoringSettingsBrowserRestrictionSettings `pulumi:"browserRestrictionSettings"`
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	CacheControlHeaderOptimizations *bool `pulumi:"cacheControlHeaderOptimizations"`
	// Settings for content capture
	ContentCapture WebApplicationMonitoringSettingsContentCapture `pulumi:"contentCapture"`
	// Domain for cookie placement. Maximum 150 characters.
	CookiePlacementDomain *string `pulumi:"cookiePlacementDomain"`
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	CorrelationHeaderInclusionRegex *string `pulumi:"correlationHeaderInclusionRegex"`
	// The location to send monitoring data from the JavaScript tag.
	//
	//  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	//  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	CustomConfigurationProperties *string `pulumi:"customConfigurationProperties"`
	// You can exclude some actions from becoming XHR actions.
	//
	// Put a regular expression, matching all the required URLs, here.
	//
	// If noting specified the feature is disabled
	ExcludeXhrRegex *string `pulumi:"excludeXhrRegex"`
	// `fetch()` request capture enabled/disabled
	FetchRequests *bool `pulumi:"fetchRequests"`
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	InjectionMode string `pulumi:"injectionMode"`
	// Instrumented web or app server.
	InstrumentedWebServer *bool `pulumi:"instrumentedWebServer"`
	// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
	IpAddressRestrictionSettings *WebApplicationMonitoringSettingsIpAddressRestrictionSettings `pulumi:"ipAddressRestrictionSettings"`
	// Support of various JavaScript frameworks
	JavascriptFrameworkSupport *WebApplicationMonitoringSettingsJavascriptFrameworkSupport `pulumi:"javascriptFrameworkSupport"`
	// Java script injection rules
	JavascriptInjectionRules *WebApplicationMonitoringSettingsJavascriptInjectionRules `pulumi:"javascriptInjectionRules"`
	// The location of your application’s custom JavaScript library file.
	//
	//  If nothing specified the root directory of your web server is used.
	//
	//  **Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
	LibraryFileLocation *string `pulumi:"libraryFileLocation"`
	// The location to send monitoring data from the JavaScript tag.
	//
	//  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	//  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	MonitoringDataPath *string `pulumi:"monitoringDataPath"`
	// Same site cookie attribute
	SameSiteCookieAttribute *string `pulumi:"sameSiteCookieAttribute"`
	// Time duration for the cache settings
	ScriptTagCacheDurationInHours *int `pulumi:"scriptTagCacheDurationInHours"`
	// Secure attribute usage for Dynatrace cookies enabled/disabled
	SecureCookieAttribute *bool `pulumi:"secureCookieAttribute"`
	// Path to identify the server’s request ID. Maximum 150 characters.
	ServerRequestPathId *string `pulumi:"serverRequestPathId"`
	// Send beacon data via CORS.
	UseCors *bool `pulumi:"useCors"`
	// `XmlHttpRequest` support enabled/disabled
	XmlHttpRequest *bool `pulumi:"xmlHttpRequest"`
}

// WebApplicationMonitoringSettingsInput is an input type that accepts WebApplicationMonitoringSettingsArgs and WebApplicationMonitoringSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsInput` via:
//
//	WebApplicationMonitoringSettingsArgs{...}
type WebApplicationMonitoringSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput
	ToWebApplicationMonitoringSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsOutput
}

type WebApplicationMonitoringSettingsArgs struct {
	// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
	AddCrossOriginAnonymousAttribute pulumi.BoolPtrInput `pulumi:"addCrossOriginAnonymousAttribute"`
	// Advanced JavaScript tag settings
	AdvancedJavascriptTagSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput `pulumi:"advancedJavascriptTagSettings"`
	// The name of the angular package
	AngularPackageName pulumi.StringPtrInput `pulumi:"angularPackageName"`
	// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
	BrowserRestrictionSettings WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput `pulumi:"browserRestrictionSettings"`
	// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
	CacheControlHeaderOptimizations pulumi.BoolPtrInput `pulumi:"cacheControlHeaderOptimizations"`
	// Settings for content capture
	ContentCapture WebApplicationMonitoringSettingsContentCaptureInput `pulumi:"contentCapture"`
	// Domain for cookie placement. Maximum 150 characters.
	CookiePlacementDomain pulumi.StringPtrInput `pulumi:"cookiePlacementDomain"`
	// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
	CorrelationHeaderInclusionRegex pulumi.StringPtrInput `pulumi:"correlationHeaderInclusionRegex"`
	// The location to send monitoring data from the JavaScript tag.
	//
	//  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	//  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	CustomConfigurationProperties pulumi.StringPtrInput `pulumi:"customConfigurationProperties"`
	// You can exclude some actions from becoming XHR actions.
	//
	// Put a regular expression, matching all the required URLs, here.
	//
	// If noting specified the feature is disabled
	ExcludeXhrRegex pulumi.StringPtrInput `pulumi:"excludeXhrRegex"`
	// `fetch()` request capture enabled/disabled
	FetchRequests pulumi.BoolPtrInput `pulumi:"fetchRequests"`
	// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
	InjectionMode pulumi.StringInput `pulumi:"injectionMode"`
	// Instrumented web or app server.
	InstrumentedWebServer pulumi.BoolPtrInput `pulumi:"instrumentedWebServer"`
	// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
	IpAddressRestrictionSettings WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput `pulumi:"ipAddressRestrictionSettings"`
	// Support of various JavaScript frameworks
	JavascriptFrameworkSupport WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput `pulumi:"javascriptFrameworkSupport"`
	// Java script injection rules
	JavascriptInjectionRules WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput `pulumi:"javascriptInjectionRules"`
	// The location of your application’s custom JavaScript library file.
	//
	//  If nothing specified the root directory of your web server is used.
	//
	//  **Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
	LibraryFileLocation pulumi.StringPtrInput `pulumi:"libraryFileLocation"`
	// The location to send monitoring data from the JavaScript tag.
	//
	//  Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
	//
	//  **Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
	MonitoringDataPath pulumi.StringPtrInput `pulumi:"monitoringDataPath"`
	// Same site cookie attribute
	SameSiteCookieAttribute pulumi.StringPtrInput `pulumi:"sameSiteCookieAttribute"`
	// Time duration for the cache settings
	ScriptTagCacheDurationInHours pulumi.IntPtrInput `pulumi:"scriptTagCacheDurationInHours"`
	// Secure attribute usage for Dynatrace cookies enabled/disabled
	SecureCookieAttribute pulumi.BoolPtrInput `pulumi:"secureCookieAttribute"`
	// Path to identify the server’s request ID. Maximum 150 characters.
	ServerRequestPathId pulumi.StringPtrInput `pulumi:"serverRequestPathId"`
	// Send beacon data via CORS.
	UseCors pulumi.BoolPtrInput `pulumi:"useCors"`
	// `XmlHttpRequest` support enabled/disabled
	XmlHttpRequest pulumi.BoolPtrInput `pulumi:"xmlHttpRequest"`
}

func (WebApplicationMonitoringSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsOutput)
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsArgs) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsOutput).ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsArgs, WebApplicationMonitoringSettingsPtr and WebApplicationMonitoringSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput
	ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsPtrOutput
}

type webApplicationMonitoringSettingsPtrType WebApplicationMonitoringSettingsArgs

func WebApplicationMonitoringSettingsPtr(v *WebApplicationMonitoringSettingsArgs) WebApplicationMonitoringSettingsPtrInput {
	return (*webApplicationMonitoringSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsPtrType) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsPtrType) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsOutput() WebApplicationMonitoringSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsOutput) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettings {
		return &v
	}).(WebApplicationMonitoringSettingsPtrOutput)
}

// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
func (o WebApplicationMonitoringSettingsOutput) AddCrossOriginAnonymousAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.AddCrossOriginAnonymousAttribute }).(pulumi.BoolPtrOutput)
}

// Advanced JavaScript tag settings
func (o WebApplicationMonitoringSettingsOutput) AdvancedJavascriptTagSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		return v.AdvancedJavascriptTagSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput)
}

// The name of the angular package
func (o WebApplicationMonitoringSettingsOutput) AngularPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.AngularPackageName }).(pulumi.StringPtrOutput)
}

// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
func (o WebApplicationMonitoringSettingsOutput) BrowserRestrictionSettings() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		return v.BrowserRestrictionSettings
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) CacheControlHeaderOptimizations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.CacheControlHeaderOptimizations }).(pulumi.BoolPtrOutput)
}

// Settings for content capture
func (o WebApplicationMonitoringSettingsOutput) ContentCapture() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) WebApplicationMonitoringSettingsContentCapture {
		return v.ContentCapture
	}).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

// Domain for cookie placement. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsOutput) CookiePlacementDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CookiePlacementDomain }).(pulumi.StringPtrOutput)
}

// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
func (o WebApplicationMonitoringSettingsOutput) CorrelationHeaderInclusionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CorrelationHeaderInclusionRegex }).(pulumi.StringPtrOutput)
}

// The location to send monitoring data from the JavaScript tag.
//
//	Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
//
//	**Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsOutput) CustomConfigurationProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.CustomConfigurationProperties }).(pulumi.StringPtrOutput)
}

// You can exclude some actions from becoming XHR actions.
//
// Put a regular expression, matching all the required URLs, here.
//
// If noting specified the feature is disabled
func (o WebApplicationMonitoringSettingsOutput) ExcludeXhrRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.ExcludeXhrRegex }).(pulumi.StringPtrOutput)
}

// `fetch()` request capture enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) FetchRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.FetchRequests }).(pulumi.BoolPtrOutput)
}

// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
func (o WebApplicationMonitoringSettingsOutput) InjectionMode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) string { return v.InjectionMode }).(pulumi.StringOutput)
}

// Instrumented web or app server.
func (o WebApplicationMonitoringSettingsOutput) InstrumentedWebServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.InstrumentedWebServer }).(pulumi.BoolPtrOutput)
}

// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
func (o WebApplicationMonitoringSettingsOutput) IpAddressRestrictionSettings() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		return v.IpAddressRestrictionSettings
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

// Support of various JavaScript frameworks
func (o WebApplicationMonitoringSettingsOutput) JavascriptFrameworkSupport() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		return v.JavascriptFrameworkSupport
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

// Java script injection rules
func (o WebApplicationMonitoringSettingsOutput) JavascriptInjectionRules() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		return v.JavascriptInjectionRules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

// The location of your application’s custom JavaScript library file.
//
//	If nothing specified the root directory of your web server is used.
//
//	**Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsOutput) LibraryFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.LibraryFileLocation }).(pulumi.StringPtrOutput)
}

// The location to send monitoring data from the JavaScript tag.
//
//	Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
//
//	**Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsOutput) MonitoringDataPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.MonitoringDataPath }).(pulumi.StringPtrOutput)
}

// Same site cookie attribute
func (o WebApplicationMonitoringSettingsOutput) SameSiteCookieAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.SameSiteCookieAttribute }).(pulumi.StringPtrOutput)
}

// Time duration for the cache settings
func (o WebApplicationMonitoringSettingsOutput) ScriptTagCacheDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *int { return v.ScriptTagCacheDurationInHours }).(pulumi.IntPtrOutput)
}

// Secure attribute usage for Dynatrace cookies enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) SecureCookieAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.SecureCookieAttribute }).(pulumi.BoolPtrOutput)
}

// Path to identify the server’s request ID. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsOutput) ServerRequestPathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *string { return v.ServerRequestPathId }).(pulumi.StringPtrOutput)
}

// Send beacon data via CORS.
func (o WebApplicationMonitoringSettingsOutput) UseCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.UseCors }).(pulumi.BoolPtrOutput)
}

// `XmlHttpRequest` support enabled/disabled
func (o WebApplicationMonitoringSettingsOutput) XmlHttpRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettings) *bool { return v.XmlHttpRequest }).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsPtrOutput) ToWebApplicationMonitoringSettingsPtrOutput() WebApplicationMonitoringSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsPtrOutput) ToWebApplicationMonitoringSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) WebApplicationMonitoringSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettings
		return ret
	}).(WebApplicationMonitoringSettingsOutput)
}

// Add the cross origin = anonymous attribute to capture JavaScript error messages and W3C resource timings
func (o WebApplicationMonitoringSettingsPtrOutput) AddCrossOriginAnonymousAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.AddCrossOriginAnonymousAttribute
	}).(pulumi.BoolPtrOutput)
}

// Advanced JavaScript tag settings
func (o WebApplicationMonitoringSettingsPtrOutput) AdvancedJavascriptTagSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		if v == nil {
			return nil
		}
		return &v.AdvancedJavascriptTagSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

// The name of the angular package
func (o WebApplicationMonitoringSettingsPtrOutput) AngularPackageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.AngularPackageName
	}).(pulumi.StringPtrOutput)
}

// Settings for restricting certain browser type, version, platform and, comparator. It also restricts the mode
func (o WebApplicationMonitoringSettingsPtrOutput) BrowserRestrictionSettings() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		if v == nil {
			return nil
		}
		return v.BrowserRestrictionSettings
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

// Optimize the value of cache control headers for use with Dynatrace real user monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) CacheControlHeaderOptimizations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.CacheControlHeaderOptimizations
	}).(pulumi.BoolPtrOutput)
}

// Settings for content capture
func (o WebApplicationMonitoringSettingsPtrOutput) ContentCapture() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsContentCapture {
		if v == nil {
			return nil
		}
		return &v.ContentCapture
	}).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

// Domain for cookie placement. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) CookiePlacementDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CookiePlacementDomain
	}).(pulumi.StringPtrOutput)
}

// To enable RUM for XHR calls to AWS Lambda, define a regular expression matching these calls, Dynatrace can then automatically add a custom header (`x-dtc`) to each such request to the respective endpoints in AWS.
func (o WebApplicationMonitoringSettingsPtrOutput) CorrelationHeaderInclusionRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CorrelationHeaderInclusionRegex
	}).(pulumi.StringPtrOutput)
}

// The location to send monitoring data from the JavaScript tag.
//
//	Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
//
//	**Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) CustomConfigurationProperties() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.CustomConfigurationProperties
	}).(pulumi.StringPtrOutput)
}

// You can exclude some actions from becoming XHR actions.
//
// Put a regular expression, matching all the required URLs, here.
//
// If noting specified the feature is disabled
func (o WebApplicationMonitoringSettingsPtrOutput) ExcludeXhrRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeXhrRegex
	}).(pulumi.StringPtrOutput)
}

// `fetch()` request capture enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) FetchRequests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.FetchRequests
	}).(pulumi.BoolPtrOutput)
}

// Possible valures are `CODE_SNIPPET`, `CODE_SNIPPET_ASYNC`, `INLINE_CODE` and `JAVASCRIPT_TAG`.
func (o WebApplicationMonitoringSettingsPtrOutput) InjectionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return &v.InjectionMode
	}).(pulumi.StringPtrOutput)
}

// Instrumented web or app server.
func (o WebApplicationMonitoringSettingsPtrOutput) InstrumentedWebServer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.InstrumentedWebServer
	}).(pulumi.BoolPtrOutput)
}

// Settings for restricting certain ip addresses and for introducing subnet mask. It also restricts the mode
func (o WebApplicationMonitoringSettingsPtrOutput) IpAddressRestrictionSettings() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		if v == nil {
			return nil
		}
		return v.IpAddressRestrictionSettings
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

// Support of various JavaScript frameworks
func (o WebApplicationMonitoringSettingsPtrOutput) JavascriptFrameworkSupport() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		if v == nil {
			return nil
		}
		return v.JavascriptFrameworkSupport
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

// Java script injection rules
func (o WebApplicationMonitoringSettingsPtrOutput) JavascriptInjectionRules() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		if v == nil {
			return nil
		}
		return v.JavascriptInjectionRules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

// The location of your application’s custom JavaScript library file.
//
//	If nothing specified the root directory of your web server is used.
//
//	**Required** for auto-injected applications, not supported by agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) LibraryFileLocation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.LibraryFileLocation
	}).(pulumi.StringPtrOutput)
}

// The location to send monitoring data from the JavaScript tag.
//
//	Specify either a relative or an absolute URL. If you use an absolute URL, data will be sent using CORS.
//
//	**Required** for auto-injected applications, optional for agentless applications. Maximum 512 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) MonitoringDataPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.MonitoringDataPath
	}).(pulumi.StringPtrOutput)
}

// Same site cookie attribute
func (o WebApplicationMonitoringSettingsPtrOutput) SameSiteCookieAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.SameSiteCookieAttribute
	}).(pulumi.StringPtrOutput)
}

// Time duration for the cache settings
func (o WebApplicationMonitoringSettingsPtrOutput) ScriptTagCacheDurationInHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *int {
		if v == nil {
			return nil
		}
		return v.ScriptTagCacheDurationInHours
	}).(pulumi.IntPtrOutput)
}

// Secure attribute usage for Dynatrace cookies enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) SecureCookieAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SecureCookieAttribute
	}).(pulumi.BoolPtrOutput)
}

// Path to identify the server’s request ID. Maximum 150 characters.
func (o WebApplicationMonitoringSettingsPtrOutput) ServerRequestPathId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServerRequestPathId
	}).(pulumi.StringPtrOutput)
}

// Send beacon data via CORS.
func (o WebApplicationMonitoringSettingsPtrOutput) UseCors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.UseCors
	}).(pulumi.BoolPtrOutput)
}

// `XmlHttpRequest` support enabled/disabled
func (o WebApplicationMonitoringSettingsPtrOutput) XmlHttpRequest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettings) *bool {
		if v == nil {
			return nil
		}
		return v.XmlHttpRequest
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings struct {
	// Additional event handlers and wrappers
	AdditionalEventHandlers WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers `pulumi:"additionalEventHandlers"`
	// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
	EventWrapperSettings *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings `pulumi:"eventWrapperSettings"`
	// Global event capture settings
	GlobalEventCaptureSettings *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings `pulumi:"globalEventCaptureSettings"`
	// Instrumentation of unsupported Ajax frameworks enabled/disabled
	InstrumentUnsupportedAjaxFrameworks *bool `pulumi:"instrumentUnsupportedAjaxFrameworks"`
	// Maximum character length for action names. Valid values range from 5 to 10000.
	MaxActionNameLength int `pulumi:"maxActionNameLength"`
	// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	MaxErrorsToCapture int `pulumi:"maxErrorsToCapture"`
	// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
	SpecialCharactersToEscape *string `pulumi:"specialCharactersToEscape"`
	// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	SyncBeaconFirefox *bool `pulumi:"syncBeaconFirefox"`
	// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	SyncBeaconInternetExplorer *bool `pulumi:"syncBeaconInternetExplorer"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs struct {
	// Additional event handlers and wrappers
	AdditionalEventHandlers WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput `pulumi:"additionalEventHandlers"`
	// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
	EventWrapperSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput `pulumi:"eventWrapperSettings"`
	// Global event capture settings
	GlobalEventCaptureSettings WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput `pulumi:"globalEventCaptureSettings"`
	// Instrumentation of unsupported Ajax frameworks enabled/disabled
	InstrumentUnsupportedAjaxFrameworks pulumi.BoolPtrInput `pulumi:"instrumentUnsupportedAjaxFrameworks"`
	// Maximum character length for action names. Valid values range from 5 to 10000.
	MaxActionNameLength pulumi.IntInput `pulumi:"maxActionNameLength"`
	// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
	MaxErrorsToCapture pulumi.IntInput `pulumi:"maxErrorsToCapture"`
	// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
	SpecialCharactersToEscape pulumi.StringPtrInput `pulumi:"specialCharactersToEscape"`
	// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
	SyncBeaconFirefox pulumi.BoolPtrInput `pulumi:"syncBeaconFirefox"`
	// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
	SyncBeaconInternetExplorer pulumi.BoolPtrInput `pulumi:"syncBeaconInternetExplorer"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput)
}

// Additional event handlers and wrappers
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) AdditionalEventHandlers() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		return v.AdditionalEventHandlers
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput)
}

// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) EventWrapperSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		return v.EventWrapperSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

// Global event capture settings
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) GlobalEventCaptureSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		return v.GlobalEventCaptureSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

// Instrumentation of unsupported Ajax frameworks enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) InstrumentUnsupportedAjaxFrameworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.InstrumentUnsupportedAjaxFrameworks
	}).(pulumi.BoolPtrOutput)
}

// Maximum character length for action names. Valid values range from 5 to 10000.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) MaxActionNameLength() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) int {
		return v.MaxActionNameLength
	}).(pulumi.IntOutput)
}

// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) MaxErrorsToCapture() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) int { return v.MaxErrorsToCapture }).(pulumi.IntOutput)
}

// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SpecialCharactersToEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *string {
		return v.SpecialCharactersToEscape
	}).(pulumi.StringPtrOutput)
}

// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SyncBeaconFirefox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.SyncBeaconFirefox
	}).(pulumi.BoolPtrOutput)
}

// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput) SyncBeaconInternetExplorer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		return v.SyncBeaconInternetExplorer
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput)
}

// Additional event handlers and wrappers
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) AdditionalEventHandlers() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		if v == nil {
			return nil
		}
		return &v.AdditionalEventHandlers
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

// In addition to the event handlers, events called using `addEventListener` or `attachEvent` can be captured. Be careful with this option! Event wrappers can conflict with the JavaScript code on a web page
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) EventWrapperSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		if v == nil {
			return nil
		}
		return v.EventWrapperSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

// Global event capture settings
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) GlobalEventCaptureSettings() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		if v == nil {
			return nil
		}
		return v.GlobalEventCaptureSettings
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

// Instrumentation of unsupported Ajax frameworks enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) InstrumentUnsupportedAjaxFrameworks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.InstrumentUnsupportedAjaxFrameworks
	}).(pulumi.BoolPtrOutput)
}

// Maximum character length for action names. Valid values range from 5 to 10000.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) MaxActionNameLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxActionNameLength
	}).(pulumi.IntPtrOutput)
}

// Maximum number of errors to be captured per page. Valid values range from 0 to 50.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) MaxErrorsToCapture() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *int {
		if v == nil {
			return nil
		}
		return &v.MaxErrorsToCapture
	}).(pulumi.IntPtrOutput)
}

// Additional special characters that are to be escaped using non-alphanumeric characters in HTML escape format. Maximum length 30 character. Allowed characters are `^`, `\`, `<` and `>`.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SpecialCharactersToEscape() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *string {
		if v == nil {
			return nil
		}
		return v.SpecialCharactersToEscape
	}).(pulumi.StringPtrOutput)
}

// Send the beacon signal as a synchronous XMLHttpRequest using Firefox enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SyncBeaconFirefox() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SyncBeaconFirefox
	}).(pulumi.BoolPtrOutput)
}

// Send the beacon signal as a synchronous XMLHttpRequest using Internet Explorer enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput) SyncBeaconInternetExplorer() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SyncBeaconInternetExplorer
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers struct {
	// Blur event handler enabled/disabled
	Blur *bool `pulumi:"blur"`
	// Change event handler enabled/disabled
	Change *bool `pulumi:"change"`
	// Click event handler enabled/disabled
	Click *bool `pulumi:"click"`
	// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	MaxDomNodes int `pulumi:"maxDomNodes"`
	// Mouseup event handler enabled/disabled
	Mouseup *bool `pulumi:"mouseup"`
	// toString method enabled/disabled
	ToStringMethod *bool `pulumi:"toStringMethod"`
	// Use mouseup event for clicks enabled/disabled
	UseMouseUpEventForClicks *bool `pulumi:"useMouseUpEventForClicks"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs struct {
	// Blur event handler enabled/disabled
	Blur pulumi.BoolPtrInput `pulumi:"blur"`
	// Change event handler enabled/disabled
	Change pulumi.BoolPtrInput `pulumi:"change"`
	// Click event handler enabled/disabled
	Click pulumi.BoolPtrInput `pulumi:"click"`
	// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
	MaxDomNodes pulumi.IntInput `pulumi:"maxDomNodes"`
	// Mouseup event handler enabled/disabled
	Mouseup pulumi.BoolPtrInput `pulumi:"mouseup"`
	// toString method enabled/disabled
	ToStringMethod pulumi.BoolPtrInput `pulumi:"toStringMethod"`
	// Use mouseup event for clicks enabled/disabled
	UseMouseUpEventForClicks pulumi.BoolPtrInput `pulumi:"useMouseUpEventForClicks"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput)
}

// Blur event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

// Change event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) MaxDomNodes() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) int {
		return v.MaxDomNodes
	}).(pulumi.IntOutput)
}

// Mouseup event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// toString method enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) ToStringMethod() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.ToStringMethod
	}).(pulumi.BoolPtrOutput)
}

// Use mouseup event for clicks enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput) UseMouseUpEventForClicks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		return v.UseMouseUpEventForClicks
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput)
}

// Blur event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

// Change event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// Max. number of DOM nodes to instrument. Valid values range from 0 to 100000.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) MaxDomNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *int {
		if v == nil {
			return nil
		}
		return &v.MaxDomNodes
	}).(pulumi.IntPtrOutput)
}

// Mouseup event handler enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// toString method enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) ToStringMethod() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.ToStringMethod
	}).(pulumi.BoolPtrOutput)
}

// Use mouseup event for clicks enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput) UseMouseUpEventForClicks() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlers) *bool {
		if v == nil {
			return nil
		}
		return v.UseMouseUpEventForClicks
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings struct {
	// Blur enabled/disabled
	Blur *bool `pulumi:"blur"`
	// Change enabled/disabled
	Change *bool `pulumi:"change"`
	// Click enabled/disabled
	Click *bool `pulumi:"click"`
	// MouseUp enabled/disabled
	Mouseup *bool `pulumi:"mouseup"`
	// TouchEnd enabled/disabled
	TouchEnd *bool `pulumi:"touchEnd"`
	// TouchStart enabled/disabled
	TouchStart *bool `pulumi:"touchStart"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs struct {
	// Blur enabled/disabled
	Blur pulumi.BoolPtrInput `pulumi:"blur"`
	// Change enabled/disabled
	Change pulumi.BoolPtrInput `pulumi:"change"`
	// Click enabled/disabled
	Click pulumi.BoolPtrInput `pulumi:"click"`
	// MouseUp enabled/disabled
	Mouseup pulumi.BoolPtrInput `pulumi:"mouseup"`
	// TouchEnd enabled/disabled
	TouchEnd pulumi.BoolPtrInput `pulumi:"touchEnd"`
	// TouchStart enabled/disabled
	TouchStart pulumi.BoolPtrInput `pulumi:"touchStart"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput)
}

// Blur enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

// Change enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// MouseUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// TouchEnd enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

// TouchStart enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput)
}

// Blur enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Blur() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Blur
	}).(pulumi.BoolPtrOutput)
}

// Change enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// MouseUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// TouchEnd enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

// TouchStart enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings struct {
	// Additional events to be captured globally as user input.
	AdditionalEventCapturedAsUserInput *string `pulumi:"additionalEventCapturedAsUserInput"`
	// Change enabled/disabled
	Change *bool `pulumi:"change"`
	// Click enabled/disabled
	Click *bool `pulumi:"click"`
	// DoubleClick enabled/disabled
	Doubleclick *bool `pulumi:"doubleclick"`
	// KeyDown enabled/disabled
	Keydown *bool `pulumi:"keydown"`
	// KeyUp enabled/disabled
	Keyup *bool `pulumi:"keyup"`
	// MouseDown enabled/disabled
	Mousedown *bool `pulumi:"mousedown"`
	// MouseUp enabled/disabled
	Mouseup *bool `pulumi:"mouseup"`
	// Scroll enabled/disabled
	Scroll *bool `pulumi:"scroll"`
	// TouchEnd enabled/disabled
	TouchEnd *bool `pulumi:"touchEnd"`
	// TouchStart enabled/disabled
	TouchStart *bool `pulumi:"touchStart"`
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput` via:
//
//	WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{...}
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs struct {
	// Additional events to be captured globally as user input.
	AdditionalEventCapturedAsUserInput pulumi.StringPtrInput `pulumi:"additionalEventCapturedAsUserInput"`
	// Change enabled/disabled
	Change pulumi.BoolPtrInput `pulumi:"change"`
	// Click enabled/disabled
	Click pulumi.BoolPtrInput `pulumi:"click"`
	// DoubleClick enabled/disabled
	Doubleclick pulumi.BoolPtrInput `pulumi:"doubleclick"`
	// KeyDown enabled/disabled
	Keydown pulumi.BoolPtrInput `pulumi:"keydown"`
	// KeyUp enabled/disabled
	Keyup pulumi.BoolPtrInput `pulumi:"keyup"`
	// MouseDown enabled/disabled
	Mousedown pulumi.BoolPtrInput `pulumi:"mousedown"`
	// MouseUp enabled/disabled
	Mouseup pulumi.BoolPtrInput `pulumi:"mouseup"`
	// Scroll enabled/disabled
	Scroll pulumi.BoolPtrInput `pulumi:"scroll"`
	// TouchEnd enabled/disabled
	TouchEnd pulumi.BoolPtrInput `pulumi:"touchEnd"`
	// TouchStart enabled/disabled
	TouchStart pulumi.BoolPtrInput `pulumi:"touchStart"`
}

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput)
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput).ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs, WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtr and WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput
	ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput
}

type webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs

func WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtr(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput {
	return (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrType) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		return &v
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput)
}

// Additional events to be captured globally as user input.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) AdditionalEventCapturedAsUserInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *string {
		return v.AdditionalEventCapturedAsUserInput
	}).(pulumi.StringPtrOutput)
}

// Change enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// DoubleClick enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Doubleclick() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Doubleclick
	}).(pulumi.BoolPtrOutput)
}

// KeyDown enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Keydown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Keydown
	}).(pulumi.BoolPtrOutput)
}

// KeyUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Keyup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Keyup
	}).(pulumi.BoolPtrOutput)
}

// MouseDown enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Mousedown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Mousedown
	}).(pulumi.BoolPtrOutput)
}

// MouseUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// Scroll enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) Scroll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.Scroll
	}).(pulumi.BoolPtrOutput)
}

// TouchEnd enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

// TouchStart enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) ToWebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings
		return ret
	}).(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput)
}

// Additional events to be captured globally as user input.
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) AdditionalEventCapturedAsUserInput() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *string {
		if v == nil {
			return nil
		}
		return v.AdditionalEventCapturedAsUserInput
	}).(pulumi.StringPtrOutput)
}

// Change enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Change() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Change
	}).(pulumi.BoolPtrOutput)
}

// Click enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Click() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Click
	}).(pulumi.BoolPtrOutput)
}

// DoubleClick enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Doubleclick() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Doubleclick
	}).(pulumi.BoolPtrOutput)
}

// KeyDown enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Keydown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Keydown
	}).(pulumi.BoolPtrOutput)
}

// KeyUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Keyup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Keyup
	}).(pulumi.BoolPtrOutput)
}

// MouseDown enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Mousedown() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mousedown
	}).(pulumi.BoolPtrOutput)
}

// MouseUp enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Mouseup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Mouseup
	}).(pulumi.BoolPtrOutput)
}

// Scroll enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) Scroll() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Scroll
	}).(pulumi.BoolPtrOutput)
}

// TouchEnd enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) TouchEnd() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchEnd
	}).(pulumi.BoolPtrOutput)
}

// TouchStart enabled/disabled
func (o WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput) TouchStart() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TouchStart
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettings struct {
	// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode string `pulumi:"mode"`
	// A list of browser restrictions
	Restrictions *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs struct {
	// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// A list of browser restrictions
	Restrictions WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput)
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput).ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs, WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtr and WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput
}

type webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs

func WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtr(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput {
	return (*webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		return &v
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput)
}

// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettings) string { return v.Mode }).(pulumi.StringOutput)
}

// A list of browser restrictions
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) WebApplicationMonitoringSettingsBrowserRestrictionSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsBrowserRestrictionSettings
		return ret
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput)
}

// The mode of the list of browser restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// A list of browser restrictions
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettings) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions struct {
	// Browser exclusion rules for the browsers that are to be excluded
	Restrictions []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs struct {
	// Browser exclusion rules for the browsers that are to be excluded
	Restrictions WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput)
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput).ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs, WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtr and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput
}

type webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs

func WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtr(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput {
	return (*webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType)(v)
}

func (*webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		return &v
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput)
}

// Browser exclusion rules for the browsers that are to be excluded
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) Elem() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions
		return ret
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput)
}

// Browser exclusion rules for the browsers that are to be excluded
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput) Restrictions() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction struct {
	// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER,`OPERA`and`SAFARI`
	BrowserType string `pulumi:"browserType"`
	// The version of the browser that is used
	BrowserVersion *string `pulumi:"browserVersion"`
	// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
	Comparator *string `pulumi:"comparator"`
	// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
	Platform *string `pulumi:"platform"`
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{...}
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs struct {
	// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER,`OPERA`and`SAFARI`
	BrowserType pulumi.StringInput `pulumi:"browserType"`
	// The version of the browser that is used
	BrowserVersion pulumi.StringPtrInput `pulumi:"browserVersion"`
	// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
	Comparator pulumi.StringPtrInput `pulumi:"comparator"`
	// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
	Platform pulumi.StringPtrInput `pulumi:"platform"`
}

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput)
}

// WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput is an input type that accepts WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray and WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput` via:
//
//	WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray{ WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{...} }
type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput
	ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray []WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return i.ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return o
}

// The type of the browser that is used. Possible values are `ANDROID_WEBKIT`, `BOTS_SPIDERS`, `CHROME`, `EDGE`, `FIREFOX`, `INTERNET_EXPLORER,`OPERA`and`SAFARI`
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) BrowserType() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) string {
		return v.BrowserType
	}).(pulumi.StringOutput)
}

// The version of the browser that is used
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) BrowserVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.BrowserVersion
	}).(pulumi.StringPtrOutput)
}

// No documentation available. Possible values are `EQUALS`, `GREATER_THAN_OR_EQUAL` and `LOWER_THAN_OR_EQUAL`.
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) Comparator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.Comparator
	}).(pulumi.StringPtrOutput)
}

// The platform on which the browser is being used. Possible values are `ALL`, `DESKTOP` and `MOBILE`
func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput) Platform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction) *string {
		return v.Platform
	}).(pulumi.StringPtrOutput)
}

type WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput() WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) ToWebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction {
		return vs[0].([]WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestriction)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput)
}

type WebApplicationMonitoringSettingsContentCapture struct {
	// JavaScript errors monitoring enabled/disabled
	JavascriptErrors *bool `pulumi:"javascriptErrors"`
	// Settings for resource timings capture
	ResourceTimingSettings WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings `pulumi:"resourceTimingSettings"`
	// Settings for timed action capture
	TimeoutSettings WebApplicationMonitoringSettingsContentCaptureTimeoutSettings `pulumi:"timeoutSettings"`
	// Visually complete and Speed index support enabled/disabled
	VisuallyCompleteAndSpeedIndex *bool `pulumi:"visuallyCompleteAndSpeedIndex"`
	// Settings for VisuallyComplete
	VisuallyCompleteSettings *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings `pulumi:"visuallyCompleteSettings"`
}

// WebApplicationMonitoringSettingsContentCaptureInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureArgs and WebApplicationMonitoringSettingsContentCaptureOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureArgs{...}
type WebApplicationMonitoringSettingsContentCaptureInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput
	ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureOutput
}

type WebApplicationMonitoringSettingsContentCaptureArgs struct {
	// JavaScript errors monitoring enabled/disabled
	JavascriptErrors pulumi.BoolPtrInput `pulumi:"javascriptErrors"`
	// Settings for resource timings capture
	ResourceTimingSettings WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput `pulumi:"resourceTimingSettings"`
	// Settings for timed action capture
	TimeoutSettings WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput `pulumi:"timeoutSettings"`
	// Visually complete and Speed index support enabled/disabled
	VisuallyCompleteAndSpeedIndex pulumi.BoolPtrInput `pulumi:"visuallyCompleteAndSpeedIndex"`
	// Settings for VisuallyComplete
	VisuallyCompleteSettings WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput `pulumi:"visuallyCompleteSettings"`
}

func (WebApplicationMonitoringSettingsContentCaptureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureArgs) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureOutput).ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCapturePtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureArgs, WebApplicationMonitoringSettingsContentCapturePtr and WebApplicationMonitoringSettingsContentCapturePtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCapturePtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCapturePtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput
	ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput
}

type webApplicationMonitoringSettingsContentCapturePtrType WebApplicationMonitoringSettingsContentCaptureArgs

func WebApplicationMonitoringSettingsContentCapturePtr(v *WebApplicationMonitoringSettingsContentCaptureArgs) WebApplicationMonitoringSettingsContentCapturePtrInput {
	return (*webApplicationMonitoringSettingsContentCapturePtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCapturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCapturePtrType) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCapturePtrType) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCaptureOutput() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCaptureOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCapture {
		return &v
	}).(WebApplicationMonitoringSettingsContentCapturePtrOutput)
}

// JavaScript errors monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureOutput) JavascriptErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *bool { return v.JavascriptErrors }).(pulumi.BoolPtrOutput)
}

// Settings for resource timings capture
func (o WebApplicationMonitoringSettingsContentCaptureOutput) ResourceTimingSettings() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		return v.ResourceTimingSettings
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput)
}

// Settings for timed action capture
func (o WebApplicationMonitoringSettingsContentCaptureOutput) TimeoutSettings() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		return v.TimeoutSettings
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput)
}

// Visually complete and Speed index support enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureOutput) VisuallyCompleteAndSpeedIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *bool { return v.VisuallyCompleteAndSpeedIndex }).(pulumi.BoolPtrOutput)
}

// Settings for VisuallyComplete
func (o WebApplicationMonitoringSettingsContentCaptureOutput) VisuallyCompleteSettings() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		return v.VisuallyCompleteSettings
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCapturePtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCapturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCapture)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutput() WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ToWebApplicationMonitoringSettingsContentCapturePtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCapturePtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) WebApplicationMonitoringSettingsContentCapture {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCapture
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureOutput)
}

// JavaScript errors monitoring enabled/disabled
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) JavascriptErrors() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *bool {
		if v == nil {
			return nil
		}
		return v.JavascriptErrors
	}).(pulumi.BoolPtrOutput)
}

// Settings for resource timings capture
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) ResourceTimingSettings() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		if v == nil {
			return nil
		}
		return &v.ResourceTimingSettings
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

// Settings for timed action capture
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) TimeoutSettings() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		if v == nil {
			return nil
		}
		return &v.TimeoutSettings
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

// Visually complete and Speed index support enabled/disabled
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) VisuallyCompleteAndSpeedIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *bool {
		if v == nil {
			return nil
		}
		return v.VisuallyCompleteAndSpeedIndex
	}).(pulumi.BoolPtrOutput)
}

// Settings for VisuallyComplete
func (o WebApplicationMonitoringSettingsContentCapturePtrOutput) VisuallyCompleteSettings() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCapture) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		if v == nil {
			return nil
		}
		return v.VisuallyCompleteSettings
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings struct {
	// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	InstrumentationDelay int `pulumi:"instrumentationDelay"`
	// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
	NonW3cResourceTimings *bool `pulumi:"nonW3cResourceTimings"`
	// Defines how detailed resource timings are captured.
	//
	// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
	ResourceTimingCaptureType *string `pulumi:"resourceTimingCaptureType"`
	// Limits the number of domains for which W3C resource timings are captured.
	//
	// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
	ResourceTimingsDomainLimit *int `pulumi:"resourceTimingsDomainLimit"`
	// W3C resource timings for third party/CDN enabled/disabled
	W3cResourceTimings *bool `pulumi:"w3cResourceTimings"`
}

// WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs and WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs struct {
	// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
	InstrumentationDelay pulumi.IntInput `pulumi:"instrumentationDelay"`
	// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
	NonW3cResourceTimings pulumi.BoolPtrInput `pulumi:"nonW3cResourceTimings"`
	// Defines how detailed resource timings are captured.
	//
	// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
	ResourceTimingCaptureType pulumi.StringPtrInput `pulumi:"resourceTimingCaptureType"`
	// Limits the number of domains for which W3C resource timings are captured.
	//
	// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
	ResourceTimingsDomainLimit pulumi.IntPtrInput `pulumi:"resourceTimingsDomainLimit"`
	// W3C resource timings for third party/CDN enabled/disabled
	W3cResourceTimings pulumi.BoolPtrInput `pulumi:"w3cResourceTimings"`
}

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs, WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtr and WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput)
}

// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) InstrumentationDelay() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) int {
		return v.InstrumentationDelay
	}).(pulumi.IntOutput)
}

// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) NonW3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		return v.NonW3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

// Defines how detailed resource timings are captured.
//
// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ResourceTimingCaptureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *string {
		return v.ResourceTimingCaptureType
	}).(pulumi.StringPtrOutput)
}

// Limits the number of domains for which W3C resource timings are captured.
//
// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) ResourceTimingsDomainLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		return v.ResourceTimingsDomainLimit
	}).(pulumi.IntPtrOutput)
}

// W3C resource timings for third party/CDN enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput) W3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		return v.W3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput)
}

// Instrumentation delay for monitoring resource and image resource impact in browsers that don't offer W3C resource timings.
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) InstrumentationDelay() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		if v == nil {
			return nil
		}
		return &v.InstrumentationDelay
	}).(pulumi.IntPtrOutput)
}

// Timing for JavaScript files and images on non-W3C supported browsers enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) NonW3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.NonW3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

// Defines how detailed resource timings are captured.
//
// Only effective if **w3cResourceTimings** or **nonW3cResourceTimings** is enabled. Possible values are `CAPTURE_ALL_SUMMARIES`, `CAPTURE_FULL_DETAILS` and `CAPTURE_LIMITED_SUMMARIES`
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ResourceTimingCaptureType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *string {
		if v == nil {
			return nil
		}
		return v.ResourceTimingCaptureType
	}).(pulumi.StringPtrOutput)
}

// Limits the number of domains for which W3C resource timings are captured.
//
// Only effective if **resourceTimingCaptureType** is `CAPTURE_LIMITED_SUMMARIES`. Valid values range from 0 to 50.
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) ResourceTimingsDomainLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *int {
		if v == nil {
			return nil
		}
		return v.ResourceTimingsDomainLimit
	}).(pulumi.IntPtrOutput)
}

// W3C resource timings for third party/CDN enabled/disabled
func (o WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput) W3cResourceTimings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureResourceTimingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.W3cResourceTimings
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettings struct {
	// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	TemporaryActionLimit int `pulumi:"temporaryActionLimit"`
	// The total timeout of all cascaded timeouts that should still be able to create a temporary action
	TemporaryActionTotalTimeout int `pulumi:"temporaryActionTotalTimeout"`
	// Timed action support enabled/disabled.
	TimedActionSupport *bool `pulumi:"timedActionSupport"`
}

// WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs and WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs struct {
	// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
	TemporaryActionLimit pulumi.IntInput `pulumi:"temporaryActionLimit"`
	// The total timeout of all cascaded timeouts that should still be able to create a temporary action
	TemporaryActionTotalTimeout pulumi.IntInput `pulumi:"temporaryActionTotalTimeout"`
	// Timed action support enabled/disabled.
	TimedActionSupport pulumi.BoolPtrInput `pulumi:"timedActionSupport"`
}

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs, WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtr and WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput)
}

// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TemporaryActionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) int {
		return v.TemporaryActionLimit
	}).(pulumi.IntOutput)
}

// The total timeout of all cascaded timeouts that should still be able to create a temporary action
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TemporaryActionTotalTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) int {
		return v.TemporaryActionTotalTimeout
	}).(pulumi.IntOutput)
}

// Timed action support enabled/disabled.
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput) TimedActionSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *bool {
		return v.TimedActionSupport
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureTimeoutSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) WebApplicationMonitoringSettingsContentCaptureTimeoutSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureTimeoutSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput)
}

// Defines how deep temporary actions may cascade. 0 disables temporary actions completely. Recommended value if enabled is 3
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TemporaryActionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TemporaryActionLimit
	}).(pulumi.IntPtrOutput)
}

// The total timeout of all cascaded timeouts that should still be able to create a temporary action
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TemporaryActionTotalTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *int {
		if v == nil {
			return nil
		}
		return &v.TemporaryActionTotalTimeout
	}).(pulumi.IntPtrOutput)
}

// Timed action support enabled/disabled.
func (o WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput) TimedActionSupport() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureTimeoutSettings) *bool {
		if v == nil {
			return nil
		}
		return v.TimedActionSupport
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings struct {
	// A RegularExpression used to exclude images and iframes from being detected by the VC module
	ExcludeUrlRegex *string `pulumi:"excludeUrlRegex"`
	// Query selector for mutation nodes to ignore in VC and SI calculation
	IgnoredMutationsList *string `pulumi:"ignoredMutationsList"`
	// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	InactivityTimeout *int `pulumi:"inactivityTimeout"`
	// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	MutationTimeout *int `pulumi:"mutationTimeout"`
	// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
	Threshold *int `pulumi:"threshold"`
}

// WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs and WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput` via:
//
//	WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{...}
type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput
	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs struct {
	// A RegularExpression used to exclude images and iframes from being detected by the VC module
	ExcludeUrlRegex pulumi.StringPtrInput `pulumi:"excludeUrlRegex"`
	// Query selector for mutation nodes to ignore in VC and SI calculation
	IgnoredMutationsList pulumi.StringPtrInput `pulumi:"ignoredMutationsList"`
	// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
	InactivityTimeout pulumi.IntPtrInput `pulumi:"inactivityTimeout"`
	// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
	MutationTimeout pulumi.IntPtrInput `pulumi:"mutationTimeout"`
	// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
}

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput)
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput).ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs, WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtr and WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput
	ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput
}

type webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs

func WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtr(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput {
	return (*webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrType) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		return &v
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput)
}

// A RegularExpression used to exclude images and iframes from being detected by the VC module
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) ExcludeUrlRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		return v.ExcludeUrlRegex
	}).(pulumi.StringPtrOutput)
}

// Query selector for mutation nodes to ignore in VC and SI calculation
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) IgnoredMutationsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		return v.IgnoredMutationsList
	}).(pulumi.StringPtrOutput)
}

// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.InactivityTimeout
	}).(pulumi.IntPtrOutput)
}

// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) MutationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.MutationTimeout
	}).(pulumi.IntPtrOutput)
}

// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ToWebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings
		return ret
	}).(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput)
}

// A RegularExpression used to exclude images and iframes from being detected by the VC module
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) ExcludeUrlRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeUrlRegex
	}).(pulumi.StringPtrOutput)
}

// Query selector for mutation nodes to ignore in VC and SI calculation
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) IgnoredMutationsList() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *string {
		if v == nil {
			return nil
		}
		return v.IgnoredMutationsList
	}).(pulumi.StringPtrOutput)
}

// The time in ms the VC module waits for no mutations happening on the page after the load action. Defaults to 1000. Valid values range from 0 to 30000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) InactivityTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.InactivityTimeout
	}).(pulumi.IntPtrOutput)
}

// Determines the time in ms VC waits after an action closes to start calculation. Defaults to 50. Valid values range from 0 to 5000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) MutationTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.MutationTimeout
	}).(pulumi.IntPtrOutput)
}

// Minimum visible area in pixels of elements to be counted towards VC and SI. Defaults to 50. Valid values range from 0 to 10000.
func (o WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettings struct {
	// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode string `pulumi:"mode"`
	// The IP addresses or the IP address ranges to be mapped to the location
	Restrictions *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions `pulumi:"restrictions"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs struct {
	// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The IP addresses or the IP address ranges to be mapped to the location
	Restrictions WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput `pulumi:"restrictions"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput)
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput).ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs, WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtr and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput
}

type webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs

func WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtr(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput {
	return (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType)(v)
}

func (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		return &v
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput)
}

// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) string { return v.Mode }).(pulumi.StringOutput)
}

// The IP addresses or the IP address ranges to be mapped to the location
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput) Restrictions() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettings)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Elem() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) WebApplicationMonitoringSettingsIpAddressRestrictionSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsIpAddressRestrictionSettings
		return ret
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput)
}

// The mode of the list of ip address restrictions. Possible values area `EXCLUDE` and `INCLUDE`.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// The IP addresses or the IP address ranges to be mapped to the location
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput) Restrictions() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettings) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions struct {
	// The IP address or the IP address range to be mapped to the location
	Ranges []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange `pulumi:"ranges"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs struct {
	// The IP address or the IP address range to be mapped to the location
	Ranges WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput `pulumi:"ranges"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput)
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput).ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs, WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtr and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput` via:
//
//	        WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput
}

type webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs

func WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtr(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput {
	return (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType)(v)
}

func (*webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrType) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		return &v
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput)
}

// The IP address or the IP address range to be mapped to the location
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput) Ranges() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		return v.Ranges
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) Elem() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions
		return ret
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput)
}

// The IP address or the IP address range to be mapped to the location
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput) Ranges() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictions) []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		if v == nil {
			return nil
		}
		return v.Ranges
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange struct {
	// The IP address to be mapped.
	Address string `pulumi:"address"`
	// The **to** address of the IP address range.
	AddressTo *string `pulumi:"addressTo"`
	// The subnet mask of the IP address range. Valid values range from 0 to 128.
	SubnetMask *int `pulumi:"subnetMask"`
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{...}
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs struct {
	// The IP address to be mapped.
	Address pulumi.StringInput `pulumi:"address"`
	// The **to** address of the IP address range.
	AddressTo pulumi.StringPtrInput `pulumi:"addressTo"`
	// The subnet mask of the IP address range. Valid values range from 0 to 128.
	SubnetMask pulumi.IntPtrInput `pulumi:"subnetMask"`
}

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput)
}

// WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput is an input type that accepts WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray and WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput` via:
//
//	WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray{ WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{...} }
type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput
	ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray []WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return i.ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return o
}

// The IP address to be mapped.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) string {
		return v.Address
	}).(pulumi.StringOutput)
}

// The **to** address of the IP address range.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) AddressTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) *string {
		return v.AddressTo
	}).(pulumi.StringPtrOutput)
}

// The subnet mask of the IP address range. Valid values range from 0 to 128.
func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput) SubnetMask() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange) *int {
		return v.SubnetMask
	}).(pulumi.IntPtrOutput)
}

type WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput() WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) ToWebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange {
		return vs[0].([]WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRange)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupport struct {
	// ActiveXObject support enabled/disabled
	ActiveXObject *bool `pulumi:"activeXObject"`
	// AngularJS and Angular support enabled/disabled
	Angular *bool `pulumi:"angular"`
	// Dojo support enabled/disabled
	Dojo *bool `pulumi:"dojo"`
	// ExtJS, Sencha Touch support enabled/disabled
	Extjs *bool `pulumi:"extjs"`
	// ICEfaces support enabled/disabled
	Icefaces *bool `pulumi:"icefaces"`
	// jQuery, Backbone.js support enabled/disabled
	Jquery *bool `pulumi:"jquery"`
	// MooTools support enabled/disabled
	MooTools *bool `pulumi:"mooTools"`
	// Prototype support enabled/disabled
	Prototype *bool `pulumi:"prototype"`
}

// WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs and WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{...}
type WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput
	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs struct {
	// ActiveXObject support enabled/disabled
	ActiveXObject pulumi.BoolPtrInput `pulumi:"activeXObject"`
	// AngularJS and Angular support enabled/disabled
	Angular pulumi.BoolPtrInput `pulumi:"angular"`
	// Dojo support enabled/disabled
	Dojo pulumi.BoolPtrInput `pulumi:"dojo"`
	// ExtJS, Sencha Touch support enabled/disabled
	Extjs pulumi.BoolPtrInput `pulumi:"extjs"`
	// ICEfaces support enabled/disabled
	Icefaces pulumi.BoolPtrInput `pulumi:"icefaces"`
	// jQuery, Backbone.js support enabled/disabled
	Jquery pulumi.BoolPtrInput `pulumi:"jquery"`
	// MooTools support enabled/disabled
	MooTools pulumi.BoolPtrInput `pulumi:"mooTools"`
	// Prototype support enabled/disabled
	Prototype pulumi.BoolPtrInput `pulumi:"prototype"`
}

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput)
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput).ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs, WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtr and WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput` via:
//
//	        WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput
	ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput
}

type webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs

func WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtr(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput {
	return (*webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType)(v)
}

func (*webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsJavascriptFrameworkSupportPtrType) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		return &v
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput)
}

// ActiveXObject support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) ActiveXObject() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.ActiveXObject }).(pulumi.BoolPtrOutput)
}

// AngularJS and Angular support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Angular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Angular }).(pulumi.BoolPtrOutput)
}

// Dojo support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Dojo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Dojo }).(pulumi.BoolPtrOutput)
}

// ExtJS, Sencha Touch support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Extjs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Extjs }).(pulumi.BoolPtrOutput)
}

// ICEfaces support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Icefaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Icefaces }).(pulumi.BoolPtrOutput)
}

// jQuery, Backbone.js support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Jquery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Jquery }).(pulumi.BoolPtrOutput)
}

// MooTools support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) MooTools() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.MooTools }).(pulumi.BoolPtrOutput)
}

// Prototype support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput) Prototype() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool { return v.Prototype }).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptFrameworkSupport)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput() WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ToWebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Elem() WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) WebApplicationMonitoringSettingsJavascriptFrameworkSupport {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsJavascriptFrameworkSupport
		return ret
	}).(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput)
}

// ActiveXObject support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) ActiveXObject() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.ActiveXObject
	}).(pulumi.BoolPtrOutput)
}

// AngularJS and Angular support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Angular() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Angular
	}).(pulumi.BoolPtrOutput)
}

// Dojo support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Dojo() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Dojo
	}).(pulumi.BoolPtrOutput)
}

// ExtJS, Sencha Touch support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Extjs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Extjs
	}).(pulumi.BoolPtrOutput)
}

// ICEfaces support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Icefaces() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Icefaces
	}).(pulumi.BoolPtrOutput)
}

// jQuery, Backbone.js support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Jquery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Jquery
	}).(pulumi.BoolPtrOutput)
}

// MooTools support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) MooTools() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.MooTools
	}).(pulumi.BoolPtrOutput)
}

// Prototype support enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput) Prototype() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptFrameworkSupport) *bool {
		if v == nil {
			return nil
		}
		return v.Prototype
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRules struct {
	// Java script injection rule
	Rules []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule `pulumi:"rules"`
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs and WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{...}
type WebApplicationMonitoringSettingsJavascriptInjectionRulesInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs struct {
	// Java script injection rule
	Rules WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput)
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput).ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx)
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs, WebApplicationMonitoringSettingsJavascriptInjectionRulesPtr and WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput` via:
//
//	        WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput
}

type webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs

func WebApplicationMonitoringSettingsJavascriptInjectionRulesPtr(v *WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput {
	return (*webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType)(v)
}

func (*webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (i *webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationMonitoringSettingsJavascriptInjectionRulesPtrType) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationMonitoringSettingsJavascriptInjectionRules) *WebApplicationMonitoringSettingsJavascriptInjectionRules {
		return &v
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput)
}

// Java script injection rule
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput) Rules() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRules) []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		return v.Rules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationMonitoringSettingsJavascriptInjectionRules)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) Elem() WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptInjectionRules) WebApplicationMonitoringSettingsJavascriptInjectionRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationMonitoringSettingsJavascriptInjectionRules
		return ret
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput)
}

// Java script injection rule
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput) Rules() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationMonitoringSettingsJavascriptInjectionRules) []WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRule struct {
	// `fetch()` request capture enabled/disabled
	Enabled *bool `pulumi:"enabled"`
	// The HTML pattern of the java script injection
	HtmlPattern *string `pulumi:"htmlPattern"`
	// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
	Rule string `pulumi:"rule"`
	// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
	Target *string `pulumi:"target"`
	// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
	UrlOperator string `pulumi:"urlOperator"`
	// The url pattern of the java script injection
	UrlPattern *string `pulumi:"urlPattern"`
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs and WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{...}
type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs struct {
	// `fetch()` request capture enabled/disabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The HTML pattern of the java script injection
	HtmlPattern pulumi.StringPtrInput `pulumi:"htmlPattern"`
	// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
	Rule pulumi.StringInput `pulumi:"rule"`
	// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
	Target pulumi.StringPtrInput `pulumi:"target"`
	// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
	UrlOperator pulumi.StringInput `pulumi:"urlOperator"`
	// The url pattern of the java script injection
	UrlPattern pulumi.StringPtrInput `pulumi:"urlPattern"`
}

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput)
}

// WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput is an input type that accepts WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray and WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput` via:
//
//	WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray{ WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{...} }
type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput
	ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray []WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return i.ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return o
}

// `fetch()` request capture enabled/disabled
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The HTML pattern of the java script injection
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) HtmlPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.HtmlPattern }).(pulumi.StringPtrOutput)
}

// The url rule of the java script injection. Possible values are `AFTER_SPECIFIC_HTML`, `AUTOMATIC_INJECTION`, `BEFORE_SPECIFIC_HTML` and `DO_NOT_INJECT`.
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) string { return v.Rule }).(pulumi.StringOutput)
}

// The target against which the rule of the java script injection should be matched. Possible values are `PAGE_QUERY` and `URL`.
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.Target }).(pulumi.StringPtrOutput)
}

// The url operator of the java script injection. Possible values are `ALL_PAGES`, `CONTAINS`, `ENDS_WITH`, `EQUALS` and `STARTS_WITH`.
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) UrlOperator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) string { return v.UrlOperator }).(pulumi.StringOutput)
}

// The url pattern of the java script injection
func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput) UrlPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationMonitoringSettingsJavascriptInjectionRulesRule) *string { return v.UrlPattern }).(pulumi.StringPtrOutput)
}

type WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)(nil)).Elem()
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput() WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) ToWebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput {
	return o
}

func (o WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationMonitoringSettingsJavascriptInjectionRulesRule {
		return vs[0].([]WebApplicationMonitoringSettingsJavascriptInjectionRulesRule)[vs[1].(int)]
	}).(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput)
}

type WebApplicationSessionReplayConfig struct {
	// (Field has overlap with `WebAppEnablement`) Session replay sampling rating in percent
	CostControlPercentage int `pulumi:"costControlPercentage"`
	// (Field has overlap with `SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
	CssResourceCapturingExclusionRules []string `pulumi:"cssResourceCapturingExclusionRules"`
	// (Field has overlap with `SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
	EnableCssResourceCapturing *bool `pulumi:"enableCssResourceCapturing"`
	// (Field has overlap with `WebAppEnablement`) SessionReplay Enabled/Disabled
	Enabled *bool `pulumi:"enabled"`
}

// WebApplicationSessionReplayConfigInput is an input type that accepts WebApplicationSessionReplayConfigArgs and WebApplicationSessionReplayConfigOutput values.
// You can construct a concrete instance of `WebApplicationSessionReplayConfigInput` via:
//
//	WebApplicationSessionReplayConfigArgs{...}
type WebApplicationSessionReplayConfigInput interface {
	pulumi.Input

	ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput
	ToWebApplicationSessionReplayConfigOutputWithContext(context.Context) WebApplicationSessionReplayConfigOutput
}

type WebApplicationSessionReplayConfigArgs struct {
	// (Field has overlap with `WebAppEnablement`) Session replay sampling rating in percent
	CostControlPercentage pulumi.IntInput `pulumi:"costControlPercentage"`
	// (Field has overlap with `SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
	CssResourceCapturingExclusionRules pulumi.StringArrayInput `pulumi:"cssResourceCapturingExclusionRules"`
	// (Field has overlap with `SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
	EnableCssResourceCapturing pulumi.BoolPtrInput `pulumi:"enableCssResourceCapturing"`
	// (Field has overlap with `WebAppEnablement`) SessionReplay Enabled/Disabled
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (WebApplicationSessionReplayConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput {
	return i.ToWebApplicationSessionReplayConfigOutputWithContext(context.Background())
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigOutput)
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return i.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (i WebApplicationSessionReplayConfigArgs) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigOutput).ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx)
}

// WebApplicationSessionReplayConfigPtrInput is an input type that accepts WebApplicationSessionReplayConfigArgs, WebApplicationSessionReplayConfigPtr and WebApplicationSessionReplayConfigPtrOutput values.
// You can construct a concrete instance of `WebApplicationSessionReplayConfigPtrInput` via:
//
//	        WebApplicationSessionReplayConfigArgs{...}
//
//	or:
//
//	        nil
type WebApplicationSessionReplayConfigPtrInput interface {
	pulumi.Input

	ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput
	ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Context) WebApplicationSessionReplayConfigPtrOutput
}

type webApplicationSessionReplayConfigPtrType WebApplicationSessionReplayConfigArgs

func WebApplicationSessionReplayConfigPtr(v *WebApplicationSessionReplayConfigArgs) WebApplicationSessionReplayConfigPtrInput {
	return (*webApplicationSessionReplayConfigPtrType)(v)
}

func (*webApplicationSessionReplayConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (i *webApplicationSessionReplayConfigPtrType) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return i.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (i *webApplicationSessionReplayConfigPtrType) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationSessionReplayConfigPtrOutput)
}

type WebApplicationSessionReplayConfigOutput struct{ *pulumi.OutputState }

func (WebApplicationSessionReplayConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigOutput() WebApplicationSessionReplayConfigOutput {
	return o
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigOutput {
	return o
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return o.ToWebApplicationSessionReplayConfigPtrOutputWithContext(context.Background())
}

func (o WebApplicationSessionReplayConfigOutput) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationSessionReplayConfig) *WebApplicationSessionReplayConfig {
		return &v
	}).(WebApplicationSessionReplayConfigPtrOutput)
}

// (Field has overlap with `WebAppEnablement`) Session replay sampling rating in percent
func (o WebApplicationSessionReplayConfigOutput) CostControlPercentage() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) int { return v.CostControlPercentage }).(pulumi.IntOutput)
}

// (Field has overlap with `SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
func (o WebApplicationSessionReplayConfigOutput) CssResourceCapturingExclusionRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) []string { return v.CssResourceCapturingExclusionRules }).(pulumi.StringArrayOutput)
}

// (Field has overlap with `SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
func (o WebApplicationSessionReplayConfigOutput) EnableCssResourceCapturing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) *bool { return v.EnableCssResourceCapturing }).(pulumi.BoolPtrOutput)
}

// (Field has overlap with `WebAppEnablement`) SessionReplay Enabled/Disabled
func (o WebApplicationSessionReplayConfigOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationSessionReplayConfig) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type WebApplicationSessionReplayConfigPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationSessionReplayConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationSessionReplayConfig)(nil)).Elem()
}

func (o WebApplicationSessionReplayConfigPtrOutput) ToWebApplicationSessionReplayConfigPtrOutput() WebApplicationSessionReplayConfigPtrOutput {
	return o
}

func (o WebApplicationSessionReplayConfigPtrOutput) ToWebApplicationSessionReplayConfigPtrOutputWithContext(ctx context.Context) WebApplicationSessionReplayConfigPtrOutput {
	return o
}

func (o WebApplicationSessionReplayConfigPtrOutput) Elem() WebApplicationSessionReplayConfigOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) WebApplicationSessionReplayConfig {
		if v != nil {
			return *v
		}
		var ret WebApplicationSessionReplayConfig
		return ret
	}).(WebApplicationSessionReplayConfigOutput)
}

// (Field has overlap with `WebAppEnablement`) Session replay sampling rating in percent
func (o WebApplicationSessionReplayConfigPtrOutput) CostControlPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *int {
		if v == nil {
			return nil
		}
		return &v.CostControlPercentage
	}).(pulumi.IntPtrOutput)
}

// (Field has overlap with `SessionReplayResourceCapture`) A list of URLs to be excluded from CSS resource capturing
func (o WebApplicationSessionReplayConfigPtrOutput) CssResourceCapturingExclusionRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) []string {
		if v == nil {
			return nil
		}
		return v.CssResourceCapturingExclusionRules
	}).(pulumi.StringArrayOutput)
}

// (Field has overlap with `SessionReplayResourceCapture`) Capture (`true`) or don't capture (`false`) CSS resources from the session
func (o WebApplicationSessionReplayConfigPtrOutput) EnableCssResourceCapturing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *bool {
		if v == nil {
			return nil
		}
		return v.EnableCssResourceCapturing
	}).(pulumi.BoolPtrOutput)
}

// (Field has overlap with `WebAppEnablement`) SessionReplay Enabled/Disabled
func (o WebApplicationSessionReplayConfigPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationSessionReplayConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionAndSessionProperties struct {
	// User action and session properties settings
	Properties []WebApplicationUserActionAndSessionPropertiesProperty `pulumi:"properties"`
}

// WebApplicationUserActionAndSessionPropertiesInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesArgs and WebApplicationUserActionAndSessionPropertiesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesArgs{...}
type WebApplicationUserActionAndSessionPropertiesInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput
	ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesOutput
}

type WebApplicationUserActionAndSessionPropertiesArgs struct {
	// User action and session properties settings
	Properties WebApplicationUserActionAndSessionPropertiesPropertyArrayInput `pulumi:"properties"`
}

func (WebApplicationUserActionAndSessionPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesOutput)
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesArgs) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesOutput).ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionAndSessionPropertiesPtrInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesArgs, WebApplicationUserActionAndSessionPropertiesPtr and WebApplicationUserActionAndSessionPropertiesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPtrInput` via:
//
//	        WebApplicationUserActionAndSessionPropertiesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionAndSessionPropertiesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput
	ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput
}

type webApplicationUserActionAndSessionPropertiesPtrType WebApplicationUserActionAndSessionPropertiesArgs

func WebApplicationUserActionAndSessionPropertiesPtr(v *WebApplicationUserActionAndSessionPropertiesArgs) WebApplicationUserActionAndSessionPropertiesPtrInput {
	return (*webApplicationUserActionAndSessionPropertiesPtrType)(v)
}

func (*webApplicationUserActionAndSessionPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (i *webApplicationUserActionAndSessionPropertiesPtrType) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionAndSessionPropertiesPtrType) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPtrOutput)
}

type WebApplicationUserActionAndSessionPropertiesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesOutput() WebApplicationUserActionAndSessionPropertiesOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o.ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionAndSessionPropertiesOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionAndSessionProperties) *WebApplicationUserActionAndSessionProperties {
		return &v
	}).(WebApplicationUserActionAndSessionPropertiesPtrOutput)
}

// User action and session properties settings
func (o WebApplicationUserActionAndSessionPropertiesOutput) Properties() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionProperties) []WebApplicationUserActionAndSessionPropertiesProperty {
		return v.Properties
	}).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionAndSessionProperties)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutput() WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) ToWebApplicationUserActionAndSessionPropertiesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPtrOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) Elem() WebApplicationUserActionAndSessionPropertiesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionAndSessionProperties) WebApplicationUserActionAndSessionProperties {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionAndSessionProperties
		return ret
	}).(WebApplicationUserActionAndSessionPropertiesOutput)
}

// User action and session properties settings
func (o WebApplicationUserActionAndSessionPropertiesPtrOutput) Properties() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionAndSessionProperties) []WebApplicationUserActionAndSessionPropertiesProperty {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesProperty struct {
	// The aggregation type of the property.
	Aggregation *string `pulumi:"aggregation"`
	// The cleanup rule of the property.
	//
	// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
	CleanupRule *string `pulumi:"cleanupRule"`
	// The display name of the property
	DisplayName *string `pulumi:"displayName"`
	// Unique id among all userTags and properties of this application
	Id int `pulumi:"id"`
	// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// Key of the property
	Key string `pulumi:"key"`
	// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
	LongStringLength *int `pulumi:"longStringLength"`
	// If the origin is `META_DATA`, metaData id of the property
	MetadataId *int `pulumi:"metadataId"`
	// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
	Origin string `pulumi:"origin"`
	// The ID of the request attribute.
	//
	// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
	ServerSideRequestAttribute *string `pulumi:"serverSideRequestAttribute"`
	// If `true`, the property is stored as a session property
	StoreAsSessionProperty *bool `pulumi:"storeAsSessionProperty"`
	// If `true`, the property is stored as a user action property
	StoreAsUserActionProperty *bool `pulumi:"storeAsUserActionProperty"`
	// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
	Type string `pulumi:"type"`
}

// WebApplicationUserActionAndSessionPropertiesPropertyInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesPropertyArgs and WebApplicationUserActionAndSessionPropertiesPropertyOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPropertyInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesPropertyArgs{...}
type WebApplicationUserActionAndSessionPropertiesPropertyInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput
	ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput
}

type WebApplicationUserActionAndSessionPropertiesPropertyArgs struct {
	// The aggregation type of the property.
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// The cleanup rule of the property.
	//
	// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
	CleanupRule pulumi.StringPtrInput `pulumi:"cleanupRule"`
	// The display name of the property
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Unique id among all userTags and properties of this application
	Id pulumi.IntInput `pulumi:"id"`
	// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// Key of the property
	Key pulumi.StringInput `pulumi:"key"`
	// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
	LongStringLength pulumi.IntPtrInput `pulumi:"longStringLength"`
	// If the origin is `META_DATA`, metaData id of the property
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
	Origin pulumi.StringInput `pulumi:"origin"`
	// The ID of the request attribute.
	//
	// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
	ServerSideRequestAttribute pulumi.StringPtrInput `pulumi:"serverSideRequestAttribute"`
	// If `true`, the property is stored as a session property
	StoreAsSessionProperty pulumi.BoolPtrInput `pulumi:"storeAsSessionProperty"`
	// If `true`, the property is stored as a user action property
	StoreAsUserActionProperty pulumi.BoolPtrInput `pulumi:"storeAsUserActionProperty"`
	// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationUserActionAndSessionPropertiesPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArgs) ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArgs) ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPropertyOutput)
}

// WebApplicationUserActionAndSessionPropertiesPropertyArrayInput is an input type that accepts WebApplicationUserActionAndSessionPropertiesPropertyArray and WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionAndSessionPropertiesPropertyArrayInput` via:
//
//	WebApplicationUserActionAndSessionPropertiesPropertyArray{ WebApplicationUserActionAndSessionPropertiesPropertyArgs{...} }
type WebApplicationUserActionAndSessionPropertiesPropertyArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput
	ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput
}

type WebApplicationUserActionAndSessionPropertiesPropertyArray []WebApplicationUserActionAndSessionPropertiesPropertyInput

func (WebApplicationUserActionAndSessionPropertiesPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArray) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return i.ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionAndSessionPropertiesPropertyArray) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput)
}

type WebApplicationUserActionAndSessionPropertiesPropertyOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyOutput() WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return o
}

// The aggregation type of the property.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// The cleanup rule of the property.
//
// Defines how to extract the data you need from a string value. Specify the [regular expression](https://dt-url.net/k9e0iaq) for the data you need there
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

// The display name of the property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Unique id among all userTags and properties of this application
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) int { return v.Id }).(pulumi.IntOutput)
}

// If `true`, the value of this property will always be stored in lower case. Defaults to `false`.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// Key of the property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Key }).(pulumi.StringOutput)
}

// If the `type` is `LONG_STRING`, the max length for this property. Must be a multiple of `100`. Defaults to `200`. Maximum is `1000`.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) LongStringLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *int { return v.LongStringLength }).(pulumi.IntPtrOutput)
}

// If the origin is `META_DATA`, metaData id of the property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// The origin of the property. Possible values are `JAVASCRIPT_API`, `META_DATA` and `SERVER_SIDE_REQUEST_ATTRIBUTE`.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Origin }).(pulumi.StringOutput)
}

// The ID of the request attribute.
//
// Only applicable when the **origin** is set to `SERVER_SIDE_REQUEST_ATTRIBUTE`
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) ServerSideRequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *string {
		return v.ServerSideRequestAttribute
	}).(pulumi.StringPtrOutput)
}

// If `true`, the property is stored as a session property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) StoreAsSessionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.StoreAsSessionProperty }).(pulumi.BoolPtrOutput)
}

// If `true`, the property is stored as a user action property
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) StoreAsUserActionProperty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) *bool { return v.StoreAsUserActionProperty }).(pulumi.BoolPtrOutput)
}

// The data type of the property. Possible values are `DATE`, `DOUBLE`, `LONG`, `LONG_STRING` and `STRING`.
func (o WebApplicationUserActionAndSessionPropertiesPropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionAndSessionPropertiesProperty) string { return v.Type }).(pulumi.StringOutput)
}

type WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionAndSessionPropertiesProperty)(nil)).Elem()
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutput() WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) ToWebApplicationUserActionAndSessionPropertiesPropertyArrayOutputWithContext(ctx context.Context) WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput {
	return o
}

func (o WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionAndSessionPropertiesPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionAndSessionPropertiesProperty {
		return vs[0].([]WebApplicationUserActionAndSessionPropertiesProperty)[vs[1].(int)]
	}).(WebApplicationUserActionAndSessionPropertiesPropertyOutput)
}

type WebApplicationUserActionNamingSettings struct {
	// User action naming rules for custom actions
	CustomActionNamingRules *WebApplicationUserActionNamingSettingsCustomActionNamingRules `pulumi:"customActionNamingRules"`
	// Case insensitive naming
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// User action naming rules for loading actions
	LoadActionNamingRules *WebApplicationUserActionNamingSettingsLoadActionNamingRules `pulumi:"loadActionNamingRules"`
	// User action placeholders
	Placeholders *WebApplicationUserActionNamingSettingsPlaceholders `pulumi:"placeholders"`
	// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
	QueryParameterCleanups []string `pulumi:"queryParameterCleanups"`
	// Deactivate this setting if different domains should not result in separate user actions
	SplitUserActionsByDomain *bool `pulumi:"splitUserActionsByDomain"`
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	UseFirstDetectedLoadAction *bool `pulumi:"useFirstDetectedLoadAction"`
	// User action naming rules for XHR actions
	XhrActionNamingRules *WebApplicationUserActionNamingSettingsXhrActionNamingRules `pulumi:"xhrActionNamingRules"`
}

// WebApplicationUserActionNamingSettingsInput is an input type that accepts WebApplicationUserActionNamingSettingsArgs and WebApplicationUserActionNamingSettingsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsInput` via:
//
//	WebApplicationUserActionNamingSettingsArgs{...}
type WebApplicationUserActionNamingSettingsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput
	ToWebApplicationUserActionNamingSettingsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsOutput
}

type WebApplicationUserActionNamingSettingsArgs struct {
	// User action naming rules for custom actions
	CustomActionNamingRules WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput `pulumi:"customActionNamingRules"`
	// Case insensitive naming
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// User action naming rules for loading actions
	LoadActionNamingRules WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput `pulumi:"loadActionNamingRules"`
	// User action placeholders
	Placeholders WebApplicationUserActionNamingSettingsPlaceholdersPtrInput `pulumi:"placeholders"`
	// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
	QueryParameterCleanups pulumi.StringArrayInput `pulumi:"queryParameterCleanups"`
	// Deactivate this setting if different domains should not result in separate user actions
	SplitUserActionsByDomain pulumi.BoolPtrInput `pulumi:"splitUserActionsByDomain"`
	// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
	UseFirstDetectedLoadAction pulumi.BoolPtrInput `pulumi:"useFirstDetectedLoadAction"`
	// User action naming rules for XHR actions
	XhrActionNamingRules WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput `pulumi:"xhrActionNamingRules"`
}

func (WebApplicationUserActionNamingSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput {
	return i.ToWebApplicationUserActionNamingSettingsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsOutput)
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsArgs) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsOutput).ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsArgs, WebApplicationUserActionNamingSettingsPtr and WebApplicationUserActionNamingSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput
	ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPtrOutput
}

type webApplicationUserActionNamingSettingsPtrType WebApplicationUserActionNamingSettingsArgs

func WebApplicationUserActionNamingSettingsPtr(v *WebApplicationUserActionNamingSettingsArgs) WebApplicationUserActionNamingSettingsPtrInput {
	return (*webApplicationUserActionNamingSettingsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPtrType) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPtrType) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPtrOutput)
}

type WebApplicationUserActionNamingSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsOutput() WebApplicationUserActionNamingSettingsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsOutput) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettings {
		return &v
	}).(WebApplicationUserActionNamingSettingsPtrOutput)
}

// User action naming rules for custom actions
func (o WebApplicationUserActionNamingSettingsOutput) CustomActionNamingRules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		return v.CustomActionNamingRules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

// Case insensitive naming
func (o WebApplicationUserActionNamingSettingsOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// User action naming rules for loading actions
func (o WebApplicationUserActionNamingSettingsOutput) LoadActionNamingRules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		return v.LoadActionNamingRules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsPlaceholders {
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
func (o WebApplicationUserActionNamingSettingsOutput) QueryParameterCleanups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) []string { return v.QueryParameterCleanups }).(pulumi.StringArrayOutput)
}

// Deactivate this setting if different domains should not result in separate user actions
func (o WebApplicationUserActionNamingSettingsOutput) SplitUserActionsByDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.SplitUserActionsByDomain }).(pulumi.BoolPtrOutput)
}

// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
func (o WebApplicationUserActionNamingSettingsOutput) UseFirstDetectedLoadAction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *bool { return v.UseFirstDetectedLoadAction }).(pulumi.BoolPtrOutput)
}

// User action naming rules for XHR actions
func (o WebApplicationUserActionNamingSettingsOutput) XhrActionNamingRules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		return v.XhrActionNamingRules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettings)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) ToWebApplicationUserActionNamingSettingsPtrOutput() WebApplicationUserActionNamingSettingsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) ToWebApplicationUserActionNamingSettingsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPtrOutput) Elem() WebApplicationUserActionNamingSettingsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) WebApplicationUserActionNamingSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettings
		return ret
	}).(WebApplicationUserActionNamingSettingsOutput)
}

// User action naming rules for custom actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) CustomActionNamingRules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		if v == nil {
			return nil
		}
		return v.CustomActionNamingRules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

// Case insensitive naming
func (o WebApplicationUserActionNamingSettingsPtrOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IgnoreCase
	}).(pulumi.BoolPtrOutput)
}

// User action naming rules for loading actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) LoadActionNamingRules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		if v == nil {
			return nil
		}
		return v.LoadActionNamingRules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPtrOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsPlaceholders {
		if v == nil {
			return nil
		}
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action naming rules for custom actions. If not specified Dynatrace assumes `__sid`, `cfid`, `cftoken`, `phpsessid` and `sid`.
func (o WebApplicationUserActionNamingSettingsPtrOutput) QueryParameterCleanups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) []string {
		if v == nil {
			return nil
		}
		return v.QueryParameterCleanups
	}).(pulumi.StringArrayOutput)
}

// Deactivate this setting if different domains should not result in separate user actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) SplitUserActionsByDomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.SplitUserActionsByDomain
	}).(pulumi.BoolPtrOutput)
}

// First load action found under an XHR action should be used when true. Else the deepest one under the xhr action is used
func (o WebApplicationUserActionNamingSettingsPtrOutput) UseFirstDetectedLoadAction() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *bool {
		if v == nil {
			return nil
		}
		return v.UseFirstDetectedLoadAction
	}).(pulumi.BoolPtrOutput)
}

// User action naming rules for XHR actions
func (o WebApplicationUserActionNamingSettingsPtrOutput) XhrActionNamingRules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettings) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		if v == nil {
			return nil
		}
		return v.XhrActionNamingRules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRules struct {
	// The settings of naming rule
	Rules []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs struct {
	// The settings of naming rule
	Rules WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs, WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtr and WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsCustomActionNamingRules) *WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRules) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRules) WebApplicationUserActionNamingSettingsCustomActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsCustomActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRules) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule struct {
	// Defines the conditions when the naming rule should apply
	Conditions *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template string `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template pulumi.StringInput `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions pulumi.BoolPtrInput `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return o
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

// Naming pattern. Use Curly brackets `{}` to select placeholders
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

// If set to `true` the conditions will be connected by logical OR instead of logical AND
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule) *bool {
		return v.UseOrConditions
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions struct {
	// Defines the conditions when the naming rule should apply
	Conditions []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 string `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator string `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 pulumi.StringInput `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return o
}

// Must be a defined placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRules struct {
	// The settings of naming rule
	Rules []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs struct {
	// The settings of naming rule
	Rules WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs, WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtr and WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsLoadActionNamingRules) *WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRules) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRules) WebApplicationUserActionNamingSettingsLoadActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsLoadActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRules) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule struct {
	// Defines the conditions when the naming rule should apply
	Conditions *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template string `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template pulumi.StringInput `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions pulumi.BoolPtrInput `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return o
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

// Naming pattern. Use Curly brackets `{}` to select placeholders
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

// If set to `true` the conditions will be connected by logical OR instead of logical AND
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) *bool {
		return v.UseOrConditions
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions struct {
	// Defines the conditions when the naming rule should apply
	Conditions []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 string `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator string `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 pulumi.StringInput `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return o
}

// Must be a defined placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholders struct {
	// User action placeholders
	Placeholders []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder `pulumi:"placeholders"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersArgs and WebApplicationUserActionNamingSettingsPlaceholdersOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersArgs struct {
	// User action placeholders
	Placeholders WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput `pulumi:"placeholders"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersOutput)
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersOutput).ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersArgs, WebApplicationUserActionNamingSettingsPlaceholdersPtr and WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsPlaceholdersArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPlaceholdersPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput
}

type webApplicationUserActionNamingSettingsPlaceholdersPtrType WebApplicationUserActionNamingSettingsPlaceholdersArgs

func WebApplicationUserActionNamingSettingsPlaceholdersPtr(v *WebApplicationUserActionNamingSettingsPlaceholdersArgs) WebApplicationUserActionNamingSettingsPlaceholdersPtrInput {
	return (*webApplicationUserActionNamingSettingsPlaceholdersPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPlaceholdersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsPlaceholders) *WebApplicationUserActionNamingSettingsPlaceholders {
		return &v
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholders) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) Elem() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholders) WebApplicationUserActionNamingSettingsPlaceholders {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsPlaceholders
		return ret
	}).(WebApplicationUserActionNamingSettingsPlaceholdersOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholders) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		if v == nil {
			return nil
		}
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder struct {
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	Input string `pulumi:"input"`
	// The ID of the metadata
	MetadataId *int `pulumi:"metadataId"`
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	Name string `pulumi:"name"`
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	ProcessingPart string `pulumi:"processingPart"`
	// The processing step settings
	ProcessingSteps *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps `pulumi:"processingSteps"`
	// Use the element identifier that was selected by Dynatrace
	UseGuessedElementIdentifier *bool `pulumi:"useGuessedElementIdentifier"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs struct {
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	Input pulumi.StringInput `pulumi:"input"`
	// The ID of the metadata
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	Name pulumi.StringInput `pulumi:"name"`
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	ProcessingPart pulumi.StringInput `pulumi:"processingPart"`
	// The processing step settings
	ProcessingSteps WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput `pulumi:"processingSteps"`
	// Use the element identifier that was selected by Dynatrace
	UseGuessedElementIdentifier pulumi.BoolPtrInput `pulumi:"useGuessedElementIdentifier"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray{ WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{...} }
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return o
}

// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) Input() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.Input }).(pulumi.StringOutput)
}

// The ID of the metadata
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// Placeholder name. Valid length needs to be between 1 and 50 characters
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.Name }).(pulumi.StringOutput)
}

// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ProcessingPart() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.ProcessingPart }).(pulumi.StringOutput)
}

// The processing step settings
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ProcessingSteps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		return v.ProcessingSteps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

// Use the element identifier that was selected by Dynatrace
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) UseGuessedElementIdentifier() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *bool {
		return v.UseGuessedElementIdentifier
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		return vs[0].([]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps struct {
	// The processing step
	Steps []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep `pulumi:"steps"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs struct {
	// The processing step
	Steps WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput `pulumi:"steps"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput)
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput).ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs, WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtr and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput
}

type webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs

func WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtr(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput {
	return (*webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		return &v
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

// The processing step
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) Steps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		return v.Steps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) Elem() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps
		return ret
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput)
}

// The processing step
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) Steps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep struct {
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	FallbackToInput *bool `pulumi:"fallbackToInput"`
	// The pattern after the required value. It will be removed.
	PatternAfter *string `pulumi:"patternAfter"`
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	PatternAfterSearchType *string `pulumi:"patternAfterSearchType"`
	// The pattern before the required value. It will be removed.
	PatternBefore *string `pulumi:"patternBefore"`
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	PatternBeforeSearchType *string `pulumi:"patternBeforeSearchType"`
	// The pattern to be replaced.
	//
	//  Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	PatternToReplace *string `pulumi:"patternToReplace"`
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	RegularExpression *string `pulumi:"regularExpression"`
	// Replacement for the original value
	Replacement *string `pulumi:"replacement"`
	// An action to be taken by the processing:
	Type string `pulumi:"type"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs struct {
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	FallbackToInput pulumi.BoolPtrInput `pulumi:"fallbackToInput"`
	// The pattern after the required value. It will be removed.
	PatternAfter pulumi.StringPtrInput `pulumi:"patternAfter"`
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	PatternAfterSearchType pulumi.StringPtrInput `pulumi:"patternAfterSearchType"`
	// The pattern before the required value. It will be removed.
	PatternBefore pulumi.StringPtrInput `pulumi:"patternBefore"`
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	PatternBeforeSearchType pulumi.StringPtrInput `pulumi:"patternBeforeSearchType"`
	// The pattern to be replaced.
	//
	//  Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	PatternToReplace pulumi.StringPtrInput `pulumi:"patternToReplace"`
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	RegularExpression pulumi.StringPtrInput `pulumi:"regularExpression"`
	// Replacement for the original value
	Replacement pulumi.StringPtrInput `pulumi:"replacement"`
	// An action to be taken by the processing:
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray{ WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{...} }
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return o
}

// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) FallbackToInput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *bool {
		return v.FallbackToInput
	}).(pulumi.BoolPtrOutput)
}

// The pattern after the required value. It will be removed.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternAfter
	}).(pulumi.StringPtrOutput)
}

// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternAfterSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternAfterSearchType
	}).(pulumi.StringPtrOutput)
}

// The pattern before the required value. It will be removed.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternBefore
	}).(pulumi.StringPtrOutput)
}

// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternBeforeSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternBeforeSearchType
	}).(pulumi.StringPtrOutput)
}

// The pattern to be replaced.
//
//	Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternToReplace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternToReplace
	}).(pulumi.StringPtrOutput)
}

// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) RegularExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.RegularExpression
	}).(pulumi.StringPtrOutput)
}

// Replacement for the original value
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.Replacement
	}).(pulumi.StringPtrOutput)
}

// An action to be taken by the processing:
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		return vs[0].([]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRules struct {
	// The settings of naming rule
	Rules []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs struct {
	// The settings of naming rule
	Rules WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs, WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtr and WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsXhrActionNamingRules) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRules) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRules) WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsXhrActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRules) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule struct {
	// Defines the conditions when the naming rule should apply
	Conditions *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template string `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template pulumi.StringInput `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions pulumi.BoolPtrInput `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return o
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

// Naming pattern. Use Curly brackets `{}` to select placeholders
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

// If set to `true` the conditions will be connected by logical OR instead of logical AND
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) *bool { return v.UseOrConditions }).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions struct {
	// Defines the conditions when the naming rule should apply
	Conditions []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 string `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator string `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 pulumi.StringInput `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return o
}

// Must be a defined placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserTags struct {
	// User tag settings
	Tags []WebApplicationUserTagsTag `pulumi:"tags"`
}

// WebApplicationUserTagsInput is an input type that accepts WebApplicationUserTagsArgs and WebApplicationUserTagsOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsInput` via:
//
//	WebApplicationUserTagsArgs{...}
type WebApplicationUserTagsInput interface {
	pulumi.Input

	ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput
	ToWebApplicationUserTagsOutputWithContext(context.Context) WebApplicationUserTagsOutput
}

type WebApplicationUserTagsArgs struct {
	// User tag settings
	Tags WebApplicationUserTagsTagArrayInput `pulumi:"tags"`
}

func (WebApplicationUserTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTags)(nil)).Elem()
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput {
	return i.ToWebApplicationUserTagsOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsOutputWithContext(ctx context.Context) WebApplicationUserTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsOutput)
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return i.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsOutput).ToWebApplicationUserTagsPtrOutputWithContext(ctx)
}

// WebApplicationUserTagsPtrInput is an input type that accepts WebApplicationUserTagsArgs, WebApplicationUserTagsPtr and WebApplicationUserTagsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsPtrInput` via:
//
//	        WebApplicationUserTagsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserTagsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput
	ToWebApplicationUserTagsPtrOutputWithContext(context.Context) WebApplicationUserTagsPtrOutput
}

type webApplicationUserTagsPtrType WebApplicationUserTagsArgs

func WebApplicationUserTagsPtr(v *WebApplicationUserTagsArgs) WebApplicationUserTagsPtrInput {
	return (*webApplicationUserTagsPtrType)(v)
}

func (*webApplicationUserTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserTags)(nil)).Elem()
}

func (i *webApplicationUserTagsPtrType) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return i.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserTagsPtrType) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsPtrOutput)
}

type WebApplicationUserTagsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTags)(nil)).Elem()
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput {
	return o
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsOutputWithContext(ctx context.Context) WebApplicationUserTagsOutput {
	return o
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return o.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserTags) *WebApplicationUserTags {
		return &v
	}).(WebApplicationUserTagsPtrOutput)
}

// User tag settings
func (o WebApplicationUserTagsOutput) Tags() WebApplicationUserTagsTagArrayOutput {
	return o.ApplyT(func(v WebApplicationUserTags) []WebApplicationUserTagsTag { return v.Tags }).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserTags)(nil)).Elem()
}

func (o WebApplicationUserTagsPtrOutput) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return o
}

func (o WebApplicationUserTagsPtrOutput) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return o
}

func (o WebApplicationUserTagsPtrOutput) Elem() WebApplicationUserTagsOutput {
	return o.ApplyT(func(v *WebApplicationUserTags) WebApplicationUserTags {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserTags
		return ret
	}).(WebApplicationUserTagsOutput)
}

// User tag settings
func (o WebApplicationUserTagsPtrOutput) Tags() WebApplicationUserTagsTagArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserTags) []WebApplicationUserTagsTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsTag struct {
	// Cleanup rule expression of the userTag
	CleanupRule *string `pulumi:"cleanupRule"`
	Id          *int    `pulumi:"id"`
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// If it's of type metaData, metaData id of the userTag
	MetadataId *int `pulumi:"metadataId"`
	// The ID of the RrequestAttribute for the userTag
	ServerSideRequestAttribute *string `pulumi:"serverSideRequestAttribute"`
	// A unique ID among all userTags and properties of this application. Minimum value is 1.
	UniqueId *int `pulumi:"uniqueId"`
}

// WebApplicationUserTagsTagInput is an input type that accepts WebApplicationUserTagsTagArgs and WebApplicationUserTagsTagOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsTagInput` via:
//
//	WebApplicationUserTagsTagArgs{...}
type WebApplicationUserTagsTagInput interface {
	pulumi.Input

	ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput
	ToWebApplicationUserTagsTagOutputWithContext(context.Context) WebApplicationUserTagsTagOutput
}

type WebApplicationUserTagsTagArgs struct {
	// Cleanup rule expression of the userTag
	CleanupRule pulumi.StringPtrInput `pulumi:"cleanupRule"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// If it's of type metaData, metaData id of the userTag
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// The ID of the RrequestAttribute for the userTag
	ServerSideRequestAttribute pulumi.StringPtrInput `pulumi:"serverSideRequestAttribute"`
	// A unique ID among all userTags and properties of this application. Minimum value is 1.
	UniqueId pulumi.IntPtrInput `pulumi:"uniqueId"`
}

func (WebApplicationUserTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTagsTag)(nil)).Elem()
}

func (i WebApplicationUserTagsTagArgs) ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput {
	return i.ToWebApplicationUserTagsTagOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsTagArgs) ToWebApplicationUserTagsTagOutputWithContext(ctx context.Context) WebApplicationUserTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsTagOutput)
}

// WebApplicationUserTagsTagArrayInput is an input type that accepts WebApplicationUserTagsTagArray and WebApplicationUserTagsTagArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsTagArrayInput` via:
//
//	WebApplicationUserTagsTagArray{ WebApplicationUserTagsTagArgs{...} }
type WebApplicationUserTagsTagArrayInput interface {
	pulumi.Input

	ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput
	ToWebApplicationUserTagsTagArrayOutputWithContext(context.Context) WebApplicationUserTagsTagArrayOutput
}

type WebApplicationUserTagsTagArray []WebApplicationUserTagsTagInput

func (WebApplicationUserTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserTagsTag)(nil)).Elem()
}

func (i WebApplicationUserTagsTagArray) ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput {
	return i.ToWebApplicationUserTagsTagArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsTagArray) ToWebApplicationUserTagsTagArrayOutputWithContext(ctx context.Context) WebApplicationUserTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsTagOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTagsTag)(nil)).Elem()
}

func (o WebApplicationUserTagsTagOutput) ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput {
	return o
}

func (o WebApplicationUserTagsTagOutput) ToWebApplicationUserTagsTagOutputWithContext(ctx context.Context) WebApplicationUserTagsTagOutput {
	return o
}

// Cleanup rule expression of the userTag
func (o WebApplicationUserTagsTagOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserTagsTagOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
func (o WebApplicationUserTagsTagOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// If it's of type metaData, metaData id of the userTag
func (o WebApplicationUserTagsTagOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// The ID of the RrequestAttribute for the userTag
func (o WebApplicationUserTagsTagOutput) ServerSideRequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *string { return v.ServerSideRequestAttribute }).(pulumi.StringPtrOutput)
}

// A unique ID among all userTags and properties of this application. Minimum value is 1.
func (o WebApplicationUserTagsTagOutput) UniqueId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.UniqueId }).(pulumi.IntPtrOutput)
}

type WebApplicationUserTagsTagArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserTagsTag)(nil)).Elem()
}

func (o WebApplicationUserTagsTagArrayOutput) ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput {
	return o
}

func (o WebApplicationUserTagsTagArrayOutput) ToWebApplicationUserTagsTagArrayOutputWithContext(ctx context.Context) WebApplicationUserTagsTagArrayOutput {
	return o
}

func (o WebApplicationUserTagsTagArrayOutput) Index(i pulumi.IntInput) WebApplicationUserTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserTagsTag {
		return vs[0].([]WebApplicationUserTagsTag)[vs[1].(int)]
	}).(WebApplicationUserTagsTagOutput)
}

type WebApplicationWaterfallSettings struct {
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold int `pulumi:"resourceBrowserCachingThreshold"`
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold int `pulumi:"resourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold int `pulumi:"slowCndResourcesThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold int `pulumi:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold int `pulumi:"slowThirdPartyResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold int `pulumi:"speedIndexVisuallyCompleteRatioThreshold"`
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold int `pulumi:"uncompressedResourcesThreshold"`
}

// WebApplicationWaterfallSettingsInput is an input type that accepts WebApplicationWaterfallSettingsArgs and WebApplicationWaterfallSettingsOutput values.
// You can construct a concrete instance of `WebApplicationWaterfallSettingsInput` via:
//
//	WebApplicationWaterfallSettingsArgs{...}
type WebApplicationWaterfallSettingsInput interface {
	pulumi.Input

	ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput
	ToWebApplicationWaterfallSettingsOutputWithContext(context.Context) WebApplicationWaterfallSettingsOutput
}

type WebApplicationWaterfallSettingsArgs struct {
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold pulumi.IntInput `pulumi:"resourceBrowserCachingThreshold"`
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold pulumi.IntInput `pulumi:"resourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold pulumi.IntInput `pulumi:"slowCndResourcesThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold pulumi.IntInput `pulumi:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold pulumi.IntInput `pulumi:"slowThirdPartyResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold pulumi.IntInput `pulumi:"speedIndexVisuallyCompleteRatioThreshold"`
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold pulumi.IntInput `pulumi:"uncompressedResourcesThreshold"`
}

func (WebApplicationWaterfallSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationWaterfallSettings)(nil)).Elem()
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput {
	return i.ToWebApplicationWaterfallSettingsOutputWithContext(context.Background())
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsOutput)
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return i.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsOutput).ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx)
}

// WebApplicationWaterfallSettingsPtrInput is an input type that accepts WebApplicationWaterfallSettingsArgs, WebApplicationWaterfallSettingsPtr and WebApplicationWaterfallSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationWaterfallSettingsPtrInput` via:
//
//	        WebApplicationWaterfallSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationWaterfallSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput
	ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Context) WebApplicationWaterfallSettingsPtrOutput
}

type webApplicationWaterfallSettingsPtrType WebApplicationWaterfallSettingsArgs

func WebApplicationWaterfallSettingsPtr(v *WebApplicationWaterfallSettingsArgs) WebApplicationWaterfallSettingsPtrInput {
	return (*webApplicationWaterfallSettingsPtrType)(v)
}

func (*webApplicationWaterfallSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationWaterfallSettings)(nil)).Elem()
}

func (i *webApplicationWaterfallSettingsPtrType) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return i.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationWaterfallSettingsPtrType) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsPtrOutput)
}

type WebApplicationWaterfallSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationWaterfallSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationWaterfallSettings)(nil)).Elem()
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput {
	return o
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsOutput {
	return o
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return o.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationWaterfallSettings) *WebApplicationWaterfallSettings {
		return &v
	}).(WebApplicationWaterfallSettingsPtrOutput)
}

// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
func (o WebApplicationWaterfallSettingsOutput) ResourceBrowserCachingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.ResourceBrowserCachingThreshold }).(pulumi.IntOutput)
}

// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) ResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.ResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowCndResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowCndResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowFirstPartyResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowFirstPartyResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowThirdPartyResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowThirdPartyResourcesThreshold }).(pulumi.IntOutput)
}

// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SpeedIndexVisuallyCompleteRatioThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SpeedIndexVisuallyCompleteRatioThreshold }).(pulumi.IntOutput)
}

// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
func (o WebApplicationWaterfallSettingsOutput) UncompressedResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.UncompressedResourcesThreshold }).(pulumi.IntOutput)
}

type WebApplicationWaterfallSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationWaterfallSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationWaterfallSettings)(nil)).Elem()
}

func (o WebApplicationWaterfallSettingsPtrOutput) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return o
}

func (o WebApplicationWaterfallSettingsPtrOutput) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return o
}

func (o WebApplicationWaterfallSettingsPtrOutput) Elem() WebApplicationWaterfallSettingsOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) WebApplicationWaterfallSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationWaterfallSettings
		return ret
	}).(WebApplicationWaterfallSettingsOutput)
}

// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) ResourceBrowserCachingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ResourceBrowserCachingThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) ResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowCndResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowCndResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowFirstPartyResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowFirstPartyResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowThirdPartyResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowThirdPartyResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SpeedIndexVisuallyCompleteRatioThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SpeedIndexVisuallyCompleteRatioThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) UncompressedResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.UncompressedResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationXhrActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold int `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold int `pulumi:"toleratedThreshold"`
}

// WebApplicationXhrActionApdexSettingsInput is an input type that accepts WebApplicationXhrActionApdexSettingsArgs and WebApplicationXhrActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationXhrActionApdexSettingsInput` via:
//
//	WebApplicationXhrActionApdexSettingsArgs{...}
type WebApplicationXhrActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput
	ToWebApplicationXhrActionApdexSettingsOutputWithContext(context.Context) WebApplicationXhrActionApdexSettingsOutput
}

type WebApplicationXhrActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntInput `pulumi:"frustratingThreshold"`
	// no documentation available
	//
	// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationXhrActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput {
	return i.ToWebApplicationXhrActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsOutput)
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return i.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsOutput).ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationXhrActionApdexSettingsPtrInput is an input type that accepts WebApplicationXhrActionApdexSettingsArgs, WebApplicationXhrActionApdexSettingsPtr and WebApplicationXhrActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationXhrActionApdexSettingsPtrInput` via:
//
//	        WebApplicationXhrActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationXhrActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput
	ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationXhrActionApdexSettingsPtrOutput
}

type webApplicationXhrActionApdexSettingsPtrType WebApplicationXhrActionApdexSettingsArgs

func WebApplicationXhrActionApdexSettingsPtr(v *WebApplicationXhrActionApdexSettingsArgs) WebApplicationXhrActionApdexSettingsPtrInput {
	return (*webApplicationXhrActionApdexSettingsPtrType)(v)
}

func (*webApplicationXhrActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationXhrActionApdexSettingsPtrType) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return i.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationXhrActionApdexSettingsPtrType) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsPtrOutput)
}

type WebApplicationXhrActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationXhrActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return o.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationXhrActionApdexSettings) *WebApplicationXhrActionApdexSettings {
		return &v
	}).(WebApplicationXhrActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) int { return v.FrustratingFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) int { return v.FrustratingThreshold }).(pulumi.IntOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationXhrActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) int { return v.ToleratedFallbackThreshold }).(pulumi.IntOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) int { return v.ToleratedThreshold }).(pulumi.IntOutput)
}

type WebApplicationXhrActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationXhrActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) Elem() WebApplicationXhrActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) WebApplicationXhrActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationXhrActionApdexSettings
		return ret
	}).(WebApplicationXhrActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
//
// Deprecated: The attribute `threshold` no longer exists in the API schema, please use `toleratedThreshold`, `frustratingThreshold`, `toleratedFallbackThreshold`, and `frustratingFallbackThreshold` instead
func (o WebApplicationXhrActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebhookNotificationHeaders struct {
	// An additional HTTP Header to include when sending requests
	Headers []WebhookNotificationHeadersHeader `pulumi:"headers"`
}

// WebhookNotificationHeadersInput is an input type that accepts WebhookNotificationHeadersArgs and WebhookNotificationHeadersOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersInput` via:
//
//	WebhookNotificationHeadersArgs{...}
type WebhookNotificationHeadersInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput
	ToWebhookNotificationHeadersOutputWithContext(context.Context) WebhookNotificationHeadersOutput
}

type WebhookNotificationHeadersArgs struct {
	// An additional HTTP Header to include when sending requests
	Headers WebhookNotificationHeadersHeaderArrayInput `pulumi:"headers"`
}

func (WebhookNotificationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeaders)(nil)).Elem()
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput {
	return i.ToWebhookNotificationHeadersOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersOutputWithContext(ctx context.Context) WebhookNotificationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersOutput)
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return i.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersOutput).ToWebhookNotificationHeadersPtrOutputWithContext(ctx)
}

// WebhookNotificationHeadersPtrInput is an input type that accepts WebhookNotificationHeadersArgs, WebhookNotificationHeadersPtr and WebhookNotificationHeadersPtrOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersPtrInput` via:
//
//	        WebhookNotificationHeadersArgs{...}
//
//	or:
//
//	        nil
type WebhookNotificationHeadersPtrInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput
	ToWebhookNotificationHeadersPtrOutputWithContext(context.Context) WebhookNotificationHeadersPtrOutput
}

type webhookNotificationHeadersPtrType WebhookNotificationHeadersArgs

func WebhookNotificationHeadersPtr(v *WebhookNotificationHeadersArgs) WebhookNotificationHeadersPtrInput {
	return (*webhookNotificationHeadersPtrType)(v)
}

func (*webhookNotificationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationHeaders)(nil)).Elem()
}

func (i *webhookNotificationHeadersPtrType) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return i.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i *webhookNotificationHeadersPtrType) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersPtrOutput)
}

type WebhookNotificationHeadersOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeaders)(nil)).Elem()
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput {
	return o
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersOutputWithContext(ctx context.Context) WebhookNotificationHeadersOutput {
	return o
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return o.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookNotificationHeaders) *WebhookNotificationHeaders {
		return &v
	}).(WebhookNotificationHeadersPtrOutput)
}

// An additional HTTP Header to include when sending requests
func (o WebhookNotificationHeadersOutput) Headers() WebhookNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v WebhookNotificationHeaders) []WebhookNotificationHeadersHeader { return v.Headers }).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersPtrOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationHeaders)(nil)).Elem()
}

func (o WebhookNotificationHeadersPtrOutput) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return o
}

func (o WebhookNotificationHeadersPtrOutput) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return o
}

func (o WebhookNotificationHeadersPtrOutput) Elem() WebhookNotificationHeadersOutput {
	return o.ApplyT(func(v *WebhookNotificationHeaders) WebhookNotificationHeaders {
		if v != nil {
			return *v
		}
		var ret WebhookNotificationHeaders
		return ret
	}).(WebhookNotificationHeadersOutput)
}

// An additional HTTP Header to include when sending requests
func (o WebhookNotificationHeadersPtrOutput) Headers() WebhookNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v *WebhookNotificationHeaders) []WebhookNotificationHeadersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersHeader struct {
	// The name of the HTTP header
	Name string `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue *string `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value *string `pulumi:"value"`
}

// WebhookNotificationHeadersHeaderInput is an input type that accepts WebhookNotificationHeadersHeaderArgs and WebhookNotificationHeadersHeaderOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersHeaderInput` via:
//
//	WebhookNotificationHeadersHeaderArgs{...}
type WebhookNotificationHeadersHeaderInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput
	ToWebhookNotificationHeadersHeaderOutputWithContext(context.Context) WebhookNotificationHeadersHeaderOutput
}

type WebhookNotificationHeadersHeaderArgs struct {
	// The name of the HTTP header
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WebhookNotificationHeadersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (i WebhookNotificationHeadersHeaderArgs) ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput {
	return i.ToWebhookNotificationHeadersHeaderOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersHeaderArgs) ToWebhookNotificationHeadersHeaderOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersHeaderOutput)
}

// WebhookNotificationHeadersHeaderArrayInput is an input type that accepts WebhookNotificationHeadersHeaderArray and WebhookNotificationHeadersHeaderArrayOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersHeaderArrayInput` via:
//
//	WebhookNotificationHeadersHeaderArray{ WebhookNotificationHeadersHeaderArgs{...} }
type WebhookNotificationHeadersHeaderArrayInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput
	ToWebhookNotificationHeadersHeaderArrayOutputWithContext(context.Context) WebhookNotificationHeadersHeaderArrayOutput
}

type WebhookNotificationHeadersHeaderArray []WebhookNotificationHeadersHeaderInput

func (WebhookNotificationHeadersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (i WebhookNotificationHeadersHeaderArray) ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput {
	return i.ToWebhookNotificationHeadersHeaderArrayOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersHeaderArray) ToWebhookNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersHeaderOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (o WebhookNotificationHeadersHeaderOutput) ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderOutput) ToWebhookNotificationHeadersHeaderOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderOutput {
	return o
}

// The name of the HTTP header
func (o WebhookNotificationHeadersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o WebhookNotificationHeadersHeaderOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o WebhookNotificationHeadersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebhookNotificationHeadersHeaderArrayOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (o WebhookNotificationHeadersHeaderArrayOutput) ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderArrayOutput) ToWebhookNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderArrayOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderArrayOutput) Index(i pulumi.IntInput) WebhookNotificationHeadersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookNotificationHeadersHeader {
		return vs[0].([]WebhookNotificationHeadersHeader)[vs[1].(int)]
	}).(WebhookNotificationHeadersHeaderOutput)
}

type WebhookNotificationOauth2Credentials struct {
	// Access token URL
	AccessTokenUrl string `pulumi:"accessTokenUrl"`
	// If false, the client credentials are included in the HTTP request body.
	AuthenticateViaRequestHeader *bool `pulumi:"authenticateViaRequestHeader"`
	// Client ID
	ClientId string `pulumi:"clientId"`
	// Client secret
	ClientSecret string `pulumi:"clientSecret"`
	// The scope of access you are requesting
	Scope *string `pulumi:"scope"`
}

// WebhookNotificationOauth2CredentialsInput is an input type that accepts WebhookNotificationOauth2CredentialsArgs and WebhookNotificationOauth2CredentialsOutput values.
// You can construct a concrete instance of `WebhookNotificationOauth2CredentialsInput` via:
//
//	WebhookNotificationOauth2CredentialsArgs{...}
type WebhookNotificationOauth2CredentialsInput interface {
	pulumi.Input

	ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput
	ToWebhookNotificationOauth2CredentialsOutputWithContext(context.Context) WebhookNotificationOauth2CredentialsOutput
}

type WebhookNotificationOauth2CredentialsArgs struct {
	// Access token URL
	AccessTokenUrl pulumi.StringInput `pulumi:"accessTokenUrl"`
	// If false, the client credentials are included in the HTTP request body.
	AuthenticateViaRequestHeader pulumi.BoolPtrInput `pulumi:"authenticateViaRequestHeader"`
	// Client ID
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client secret
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The scope of access you are requesting
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (WebhookNotificationOauth2CredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput {
	return i.ToWebhookNotificationOauth2CredentialsOutputWithContext(context.Background())
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsOutput)
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return i.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsOutput).ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx)
}

// WebhookNotificationOauth2CredentialsPtrInput is an input type that accepts WebhookNotificationOauth2CredentialsArgs, WebhookNotificationOauth2CredentialsPtr and WebhookNotificationOauth2CredentialsPtrOutput values.
// You can construct a concrete instance of `WebhookNotificationOauth2CredentialsPtrInput` via:
//
//	        WebhookNotificationOauth2CredentialsArgs{...}
//
//	or:
//
//	        nil
type WebhookNotificationOauth2CredentialsPtrInput interface {
	pulumi.Input

	ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput
	ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Context) WebhookNotificationOauth2CredentialsPtrOutput
}

type webhookNotificationOauth2CredentialsPtrType WebhookNotificationOauth2CredentialsArgs

func WebhookNotificationOauth2CredentialsPtr(v *WebhookNotificationOauth2CredentialsArgs) WebhookNotificationOauth2CredentialsPtrInput {
	return (*webhookNotificationOauth2CredentialsPtrType)(v)
}

func (*webhookNotificationOauth2CredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (i *webhookNotificationOauth2CredentialsPtrType) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return i.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (i *webhookNotificationOauth2CredentialsPtrType) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsPtrOutput)
}

type WebhookNotificationOauth2CredentialsOutput struct{ *pulumi.OutputState }

func (WebhookNotificationOauth2CredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return o.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookNotificationOauth2Credentials) *WebhookNotificationOauth2Credentials {
		return &v
	}).(WebhookNotificationOauth2CredentialsPtrOutput)
}

// Access token URL
func (o WebhookNotificationOauth2CredentialsOutput) AccessTokenUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.AccessTokenUrl }).(pulumi.StringOutput)
}

// If false, the client credentials are included in the HTTP request body.
func (o WebhookNotificationOauth2CredentialsOutput) AuthenticateViaRequestHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) *bool { return v.AuthenticateViaRequestHeader }).(pulumi.BoolPtrOutput)
}

// Client ID
func (o WebhookNotificationOauth2CredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// Client secret
func (o WebhookNotificationOauth2CredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The scope of access you are requesting
func (o WebhookNotificationOauth2CredentialsOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type WebhookNotificationOauth2CredentialsPtrOutput struct{ *pulumi.OutputState }

func (WebhookNotificationOauth2CredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) Elem() WebhookNotificationOauth2CredentialsOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) WebhookNotificationOauth2Credentials {
		if v != nil {
			return *v
		}
		var ret WebhookNotificationOauth2Credentials
		return ret
	}).(WebhookNotificationOauth2CredentialsOutput)
}

// Access token URL
func (o WebhookNotificationOauth2CredentialsPtrOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccessTokenUrl
	}).(pulumi.StringPtrOutput)
}

// If false, the client credentials are included in the HTTP request body.
func (o WebhookNotificationOauth2CredentialsPtrOutput) AuthenticateViaRequestHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *bool {
		if v == nil {
			return nil
		}
		return v.AuthenticateViaRequestHeader
	}).(pulumi.BoolPtrOutput)
}

// Client ID
func (o WebhookNotificationOauth2CredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret
func (o WebhookNotificationOauth2CredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The scope of access you are requesting
func (o WebhookNotificationOauth2CredentialsPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

type XmattersNotificationHeaders struct {
	// An additional HTTP Header to include when sending requests
	Headers []XmattersNotificationHeadersHeader `pulumi:"headers"`
}

// XmattersNotificationHeadersInput is an input type that accepts XmattersNotificationHeadersArgs and XmattersNotificationHeadersOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersInput` via:
//
//	XmattersNotificationHeadersArgs{...}
type XmattersNotificationHeadersInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput
	ToXmattersNotificationHeadersOutputWithContext(context.Context) XmattersNotificationHeadersOutput
}

type XmattersNotificationHeadersArgs struct {
	// An additional HTTP Header to include when sending requests
	Headers XmattersNotificationHeadersHeaderArrayInput `pulumi:"headers"`
}

func (XmattersNotificationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeaders)(nil)).Elem()
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput {
	return i.ToXmattersNotificationHeadersOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersOutputWithContext(ctx context.Context) XmattersNotificationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersOutput)
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return i.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersOutput).ToXmattersNotificationHeadersPtrOutputWithContext(ctx)
}

// XmattersNotificationHeadersPtrInput is an input type that accepts XmattersNotificationHeadersArgs, XmattersNotificationHeadersPtr and XmattersNotificationHeadersPtrOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersPtrInput` via:
//
//	        XmattersNotificationHeadersArgs{...}
//
//	or:
//
//	        nil
type XmattersNotificationHeadersPtrInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput
	ToXmattersNotificationHeadersPtrOutputWithContext(context.Context) XmattersNotificationHeadersPtrOutput
}

type xmattersNotificationHeadersPtrType XmattersNotificationHeadersArgs

func XmattersNotificationHeadersPtr(v *XmattersNotificationHeadersArgs) XmattersNotificationHeadersPtrInput {
	return (*xmattersNotificationHeadersPtrType)(v)
}

func (*xmattersNotificationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**XmattersNotificationHeaders)(nil)).Elem()
}

func (i *xmattersNotificationHeadersPtrType) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return i.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i *xmattersNotificationHeadersPtrType) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersPtrOutput)
}

type XmattersNotificationHeadersOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeaders)(nil)).Elem()
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput {
	return o
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersOutputWithContext(ctx context.Context) XmattersNotificationHeadersOutput {
	return o
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return o.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v XmattersNotificationHeaders) *XmattersNotificationHeaders {
		return &v
	}).(XmattersNotificationHeadersPtrOutput)
}

// An additional HTTP Header to include when sending requests
func (o XmattersNotificationHeadersOutput) Headers() XmattersNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v XmattersNotificationHeaders) []XmattersNotificationHeadersHeader { return v.Headers }).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersPtrOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XmattersNotificationHeaders)(nil)).Elem()
}

func (o XmattersNotificationHeadersPtrOutput) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return o
}

func (o XmattersNotificationHeadersPtrOutput) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return o
}

func (o XmattersNotificationHeadersPtrOutput) Elem() XmattersNotificationHeadersOutput {
	return o.ApplyT(func(v *XmattersNotificationHeaders) XmattersNotificationHeaders {
		if v != nil {
			return *v
		}
		var ret XmattersNotificationHeaders
		return ret
	}).(XmattersNotificationHeadersOutput)
}

// An additional HTTP Header to include when sending requests
func (o XmattersNotificationHeadersPtrOutput) Headers() XmattersNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v *XmattersNotificationHeaders) []XmattersNotificationHeadersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersHeader struct {
	// The name of the HTTP header
	Name string `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue *string `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value *string `pulumi:"value"`
}

// XmattersNotificationHeadersHeaderInput is an input type that accepts XmattersNotificationHeadersHeaderArgs and XmattersNotificationHeadersHeaderOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersHeaderInput` via:
//
//	XmattersNotificationHeadersHeaderArgs{...}
type XmattersNotificationHeadersHeaderInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput
	ToXmattersNotificationHeadersHeaderOutputWithContext(context.Context) XmattersNotificationHeadersHeaderOutput
}

type XmattersNotificationHeadersHeaderArgs struct {
	// The name of the HTTP header
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (XmattersNotificationHeadersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (i XmattersNotificationHeadersHeaderArgs) ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput {
	return i.ToXmattersNotificationHeadersHeaderOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersHeaderArgs) ToXmattersNotificationHeadersHeaderOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersHeaderOutput)
}

// XmattersNotificationHeadersHeaderArrayInput is an input type that accepts XmattersNotificationHeadersHeaderArray and XmattersNotificationHeadersHeaderArrayOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersHeaderArrayInput` via:
//
//	XmattersNotificationHeadersHeaderArray{ XmattersNotificationHeadersHeaderArgs{...} }
type XmattersNotificationHeadersHeaderArrayInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput
	ToXmattersNotificationHeadersHeaderArrayOutputWithContext(context.Context) XmattersNotificationHeadersHeaderArrayOutput
}

type XmattersNotificationHeadersHeaderArray []XmattersNotificationHeadersHeaderInput

func (XmattersNotificationHeadersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (i XmattersNotificationHeadersHeaderArray) ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput {
	return i.ToXmattersNotificationHeadersHeaderArrayOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersHeaderArray) ToXmattersNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersHeaderOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (o XmattersNotificationHeadersHeaderOutput) ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderOutput) ToXmattersNotificationHeadersHeaderOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderOutput {
	return o
}

// The name of the HTTP header
func (o XmattersNotificationHeadersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o XmattersNotificationHeadersHeaderOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o XmattersNotificationHeadersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type XmattersNotificationHeadersHeaderArrayOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (o XmattersNotificationHeadersHeaderArrayOutput) ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderArrayOutput) ToXmattersNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderArrayOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderArrayOutput) Index(i pulumi.IntInput) XmattersNotificationHeadersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) XmattersNotificationHeadersHeader {
		return vs[0].([]XmattersNotificationHeadersHeader)[vs[1].(int)]
	}).(XmattersNotificationHeadersHeaderOutput)
}

type GetAlertingProfilesValue struct {
	// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id string `pulumi:"id"`
	// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId string `pulumi:"legacyId"`
	// The ID of the management zone to which the alerting profile applies (Settings 2.0)
	ManagementZoneId string `pulumi:"managementZoneId"`
	// The ID of the management zone to which the alerting profile applies (Configuration API)
	ManagementZoneLegacyId string `pulumi:"managementZoneLegacyId"`
	// The name of the Alerting Profile
	Name string `pulumi:"name"`
}

// GetAlertingProfilesValueInput is an input type that accepts GetAlertingProfilesValueArgs and GetAlertingProfilesValueOutput values.
// You can construct a concrete instance of `GetAlertingProfilesValueInput` via:
//
//	GetAlertingProfilesValueArgs{...}
type GetAlertingProfilesValueInput interface {
	pulumi.Input

	ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput
	ToGetAlertingProfilesValueOutputWithContext(context.Context) GetAlertingProfilesValueOutput
}

type GetAlertingProfilesValueArgs struct {
	// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId pulumi.StringInput `pulumi:"legacyId"`
	// The ID of the management zone to which the alerting profile applies (Settings 2.0)
	ManagementZoneId pulumi.StringInput `pulumi:"managementZoneId"`
	// The ID of the management zone to which the alerting profile applies (Configuration API)
	ManagementZoneLegacyId pulumi.StringInput `pulumi:"managementZoneLegacyId"`
	// The name of the Alerting Profile
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAlertingProfilesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingProfilesValue)(nil)).Elem()
}

func (i GetAlertingProfilesValueArgs) ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput {
	return i.ToGetAlertingProfilesValueOutputWithContext(context.Background())
}

func (i GetAlertingProfilesValueArgs) ToGetAlertingProfilesValueOutputWithContext(ctx context.Context) GetAlertingProfilesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingProfilesValueOutput)
}

// GetAlertingProfilesValueArrayInput is an input type that accepts GetAlertingProfilesValueArray and GetAlertingProfilesValueArrayOutput values.
// You can construct a concrete instance of `GetAlertingProfilesValueArrayInput` via:
//
//	GetAlertingProfilesValueArray{ GetAlertingProfilesValueArgs{...} }
type GetAlertingProfilesValueArrayInput interface {
	pulumi.Input

	ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput
	ToGetAlertingProfilesValueArrayOutputWithContext(context.Context) GetAlertingProfilesValueArrayOutput
}

type GetAlertingProfilesValueArray []GetAlertingProfilesValueInput

func (GetAlertingProfilesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingProfilesValue)(nil)).Elem()
}

func (i GetAlertingProfilesValueArray) ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput {
	return i.ToGetAlertingProfilesValueArrayOutputWithContext(context.Background())
}

func (i GetAlertingProfilesValueArray) ToGetAlertingProfilesValueArrayOutputWithContext(ctx context.Context) GetAlertingProfilesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingProfilesValueArrayOutput)
}

type GetAlertingProfilesValueOutput struct{ *pulumi.OutputState }

func (GetAlertingProfilesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingProfilesValue)(nil)).Elem()
}

func (o GetAlertingProfilesValueOutput) ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput {
	return o
}

func (o GetAlertingProfilesValueOutput) ToGetAlertingProfilesValueOutputWithContext(ctx context.Context) GetAlertingProfilesValueOutput {
	return o
}

// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
func (o GetAlertingProfilesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
func (o GetAlertingProfilesValueOutput) LegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.LegacyId }).(pulumi.StringOutput)
}

// The ID of the management zone to which the alerting profile applies (Settings 2.0)
func (o GetAlertingProfilesValueOutput) ManagementZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.ManagementZoneId }).(pulumi.StringOutput)
}

// The ID of the management zone to which the alerting profile applies (Configuration API)
func (o GetAlertingProfilesValueOutput) ManagementZoneLegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.ManagementZoneLegacyId }).(pulumi.StringOutput)
}

// The name of the Alerting Profile
func (o GetAlertingProfilesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.Name }).(pulumi.StringOutput)
}

type GetAlertingProfilesValueArrayOutput struct{ *pulumi.OutputState }

func (GetAlertingProfilesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingProfilesValue)(nil)).Elem()
}

func (o GetAlertingProfilesValueArrayOutput) ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput {
	return o
}

func (o GetAlertingProfilesValueArrayOutput) ToGetAlertingProfilesValueArrayOutputWithContext(ctx context.Context) GetAlertingProfilesValueArrayOutput {
	return o
}

func (o GetAlertingProfilesValueArrayOutput) Index(i pulumi.IntInput) GetAlertingProfilesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertingProfilesValue {
		return vs[0].([]GetAlertingProfilesValue)[vs[1].(int)]
	}).(GetAlertingProfilesValueOutput)
}

type GetApiTokensApiToken struct {
	// Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
	CreationDate string `pulumi:"creationDate"`
	// The token is enabled (true) or disabled (false), default disabled (false).
	Enabled *bool `pulumi:"enabled"`
	// The expiration date of the token.
	ExpirationDate *string `pulumi:"expirationDate"`
	// Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
	LastUsedDate string `pulumi:"lastUsedDate"`
	// Token last used IP address.
	LastUsedIpAddress string `pulumi:"lastUsedIpAddress"`
	// Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').
	ModifiedDate string `pulumi:"modifiedDate"`
	// The name of the token.
	Name string `pulumi:"name"`
	// The owner of the token
	Owner string `pulumi:"owner"`
	// The token is a personal access token (true) or an API token (false).
	PersonalAccessToken *bool `pulumi:"personalAccessToken"`
	// A list of the scopes to be assigned to the token.
	Scopes []string `pulumi:"scopes"`
	// The secret of the token.
	Token string `pulumi:"token"`
}

// GetApiTokensApiTokenInput is an input type that accepts GetApiTokensApiTokenArgs and GetApiTokensApiTokenOutput values.
// You can construct a concrete instance of `GetApiTokensApiTokenInput` via:
//
//	GetApiTokensApiTokenArgs{...}
type GetApiTokensApiTokenInput interface {
	pulumi.Input

	ToGetApiTokensApiTokenOutput() GetApiTokensApiTokenOutput
	ToGetApiTokensApiTokenOutputWithContext(context.Context) GetApiTokensApiTokenOutput
}

type GetApiTokensApiTokenArgs struct {
	// Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
	CreationDate pulumi.StringInput `pulumi:"creationDate"`
	// The token is enabled (true) or disabled (false), default disabled (false).
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The expiration date of the token.
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
	LastUsedDate pulumi.StringInput `pulumi:"lastUsedDate"`
	// Token last used IP address.
	LastUsedIpAddress pulumi.StringInput `pulumi:"lastUsedIpAddress"`
	// Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').
	ModifiedDate pulumi.StringInput `pulumi:"modifiedDate"`
	// The name of the token.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner of the token
	Owner pulumi.StringInput `pulumi:"owner"`
	// The token is a personal access token (true) or an API token (false).
	PersonalAccessToken pulumi.BoolPtrInput `pulumi:"personalAccessToken"`
	// A list of the scopes to be assigned to the token.
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// The secret of the token.
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetApiTokensApiTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiTokensApiToken)(nil)).Elem()
}

func (i GetApiTokensApiTokenArgs) ToGetApiTokensApiTokenOutput() GetApiTokensApiTokenOutput {
	return i.ToGetApiTokensApiTokenOutputWithContext(context.Background())
}

func (i GetApiTokensApiTokenArgs) ToGetApiTokensApiTokenOutputWithContext(ctx context.Context) GetApiTokensApiTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiTokensApiTokenOutput)
}

// GetApiTokensApiTokenArrayInput is an input type that accepts GetApiTokensApiTokenArray and GetApiTokensApiTokenArrayOutput values.
// You can construct a concrete instance of `GetApiTokensApiTokenArrayInput` via:
//
//	GetApiTokensApiTokenArray{ GetApiTokensApiTokenArgs{...} }
type GetApiTokensApiTokenArrayInput interface {
	pulumi.Input

	ToGetApiTokensApiTokenArrayOutput() GetApiTokensApiTokenArrayOutput
	ToGetApiTokensApiTokenArrayOutputWithContext(context.Context) GetApiTokensApiTokenArrayOutput
}

type GetApiTokensApiTokenArray []GetApiTokensApiTokenInput

func (GetApiTokensApiTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiTokensApiToken)(nil)).Elem()
}

func (i GetApiTokensApiTokenArray) ToGetApiTokensApiTokenArrayOutput() GetApiTokensApiTokenArrayOutput {
	return i.ToGetApiTokensApiTokenArrayOutputWithContext(context.Background())
}

func (i GetApiTokensApiTokenArray) ToGetApiTokensApiTokenArrayOutputWithContext(ctx context.Context) GetApiTokensApiTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetApiTokensApiTokenArrayOutput)
}

type GetApiTokensApiTokenOutput struct{ *pulumi.OutputState }

func (GetApiTokensApiTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetApiTokensApiToken)(nil)).Elem()
}

func (o GetApiTokensApiTokenOutput) ToGetApiTokensApiTokenOutput() GetApiTokensApiTokenOutput {
	return o
}

func (o GetApiTokensApiTokenOutput) ToGetApiTokensApiTokenOutputWithContext(ctx context.Context) GetApiTokensApiTokenOutput {
	return o
}

// Token creation date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
func (o GetApiTokensApiTokenOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.CreationDate }).(pulumi.StringOutput)
}

// The token is enabled (true) or disabled (false), default disabled (false).
func (o GetApiTokensApiTokenOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The expiration date of the token.
func (o GetApiTokensApiTokenOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// Token last used date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z')
func (o GetApiTokensApiTokenOutput) LastUsedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.LastUsedDate }).(pulumi.StringOutput)
}

// Token last used IP address.
func (o GetApiTokensApiTokenOutput) LastUsedIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.LastUsedIpAddress }).(pulumi.StringOutput)
}

// Token last modified date in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').
func (o GetApiTokensApiTokenOutput) ModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.ModifiedDate }).(pulumi.StringOutput)
}

// The name of the token.
func (o GetApiTokensApiTokenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.Name }).(pulumi.StringOutput)
}

// The owner of the token
func (o GetApiTokensApiTokenOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.Owner }).(pulumi.StringOutput)
}

// The token is a personal access token (true) or an API token (false).
func (o GetApiTokensApiTokenOutput) PersonalAccessToken() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) *bool { return v.PersonalAccessToken }).(pulumi.BoolPtrOutput)
}

// A list of the scopes to be assigned to the token.
func (o GetApiTokensApiTokenOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// The secret of the token.
func (o GetApiTokensApiTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetApiTokensApiToken) string { return v.Token }).(pulumi.StringOutput)
}

type GetApiTokensApiTokenArrayOutput struct{ *pulumi.OutputState }

func (GetApiTokensApiTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetApiTokensApiToken)(nil)).Elem()
}

func (o GetApiTokensApiTokenArrayOutput) ToGetApiTokensApiTokenArrayOutput() GetApiTokensApiTokenArrayOutput {
	return o
}

func (o GetApiTokensApiTokenArrayOutput) ToGetApiTokensApiTokenArrayOutputWithContext(ctx context.Context) GetApiTokensApiTokenArrayOutput {
	return o
}

func (o GetApiTokensApiTokenArrayOutput) Index(i pulumi.IntInput) GetApiTokensApiTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetApiTokensApiToken {
		return vs[0].([]GetApiTokensApiToken)[vs[1].(int)]
	}).(GetApiTokensApiTokenOutput)
}

type GetDocumentsValue struct {
	// The unique identifier of the document.
	Id string `pulumi:"id"`
	// The name of the document.
	Name string `pulumi:"name"`
	// The owner of the document. This could be a user or a group that has ownership rights over the document.
	Owner string `pulumi:"owner"`
	// The type of the document. This could be a specific format or category the document belongs to.
	Type string `pulumi:"type"`
}

// GetDocumentsValueInput is an input type that accepts GetDocumentsValueArgs and GetDocumentsValueOutput values.
// You can construct a concrete instance of `GetDocumentsValueInput` via:
//
//	GetDocumentsValueArgs{...}
type GetDocumentsValueInput interface {
	pulumi.Input

	ToGetDocumentsValueOutput() GetDocumentsValueOutput
	ToGetDocumentsValueOutputWithContext(context.Context) GetDocumentsValueOutput
}

type GetDocumentsValueArgs struct {
	// The unique identifier of the document.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the document.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner of the document. This could be a user or a group that has ownership rights over the document.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The type of the document. This could be a specific format or category the document belongs to.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDocumentsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDocumentsValue)(nil)).Elem()
}

func (i GetDocumentsValueArgs) ToGetDocumentsValueOutput() GetDocumentsValueOutput {
	return i.ToGetDocumentsValueOutputWithContext(context.Background())
}

func (i GetDocumentsValueArgs) ToGetDocumentsValueOutputWithContext(ctx context.Context) GetDocumentsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDocumentsValueOutput)
}

// GetDocumentsValueArrayInput is an input type that accepts GetDocumentsValueArray and GetDocumentsValueArrayOutput values.
// You can construct a concrete instance of `GetDocumentsValueArrayInput` via:
//
//	GetDocumentsValueArray{ GetDocumentsValueArgs{...} }
type GetDocumentsValueArrayInput interface {
	pulumi.Input

	ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput
	ToGetDocumentsValueArrayOutputWithContext(context.Context) GetDocumentsValueArrayOutput
}

type GetDocumentsValueArray []GetDocumentsValueInput

func (GetDocumentsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDocumentsValue)(nil)).Elem()
}

func (i GetDocumentsValueArray) ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput {
	return i.ToGetDocumentsValueArrayOutputWithContext(context.Background())
}

func (i GetDocumentsValueArray) ToGetDocumentsValueArrayOutputWithContext(ctx context.Context) GetDocumentsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDocumentsValueArrayOutput)
}

type GetDocumentsValueOutput struct{ *pulumi.OutputState }

func (GetDocumentsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDocumentsValue)(nil)).Elem()
}

func (o GetDocumentsValueOutput) ToGetDocumentsValueOutput() GetDocumentsValueOutput {
	return o
}

func (o GetDocumentsValueOutput) ToGetDocumentsValueOutputWithContext(ctx context.Context) GetDocumentsValueOutput {
	return o
}

// The unique identifier of the document.
func (o GetDocumentsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the document.
func (o GetDocumentsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Name }).(pulumi.StringOutput)
}

// The owner of the document. This could be a user or a group that has ownership rights over the document.
func (o GetDocumentsValueOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Owner }).(pulumi.StringOutput)
}

// The type of the document. This could be a specific format or category the document belongs to.
func (o GetDocumentsValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Type }).(pulumi.StringOutput)
}

type GetDocumentsValueArrayOutput struct{ *pulumi.OutputState }

func (GetDocumentsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDocumentsValue)(nil)).Elem()
}

func (o GetDocumentsValueArrayOutput) ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput {
	return o
}

func (o GetDocumentsValueArrayOutput) ToGetDocumentsValueArrayOutputWithContext(ctx context.Context) GetDocumentsValueArrayOutput {
	return o
}

func (o GetDocumentsValueArrayOutput) Index(i pulumi.IntInput) GetDocumentsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDocumentsValue {
		return vs[0].([]GetDocumentsValue)[vs[1].(int)]
	}).(GetDocumentsValueOutput)
}

type GetEntitiesEntity struct {
	// The name of the entity, displayed in the UI.
	DisplayName *string `pulumi:"displayName"`
	// The ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// The timestamp at which the entity was last seen, in UTC milliseconds.
	LastSeenTms *int `pulumi:"lastSeenTms"`
	// Properties defining the entity.
	Properties map[string]string `pulumi:"properties"`
	// A set of tags assigned to the entity.
	Tags []GetEntitiesEntityTag `pulumi:"tags"`
	// The type of the entity.
	Type *string `pulumi:"type"`
}

// GetEntitiesEntityInput is an input type that accepts GetEntitiesEntityArgs and GetEntitiesEntityOutput values.
// You can construct a concrete instance of `GetEntitiesEntityInput` via:
//
//	GetEntitiesEntityArgs{...}
type GetEntitiesEntityInput interface {
	pulumi.Input

	ToGetEntitiesEntityOutput() GetEntitiesEntityOutput
	ToGetEntitiesEntityOutputWithContext(context.Context) GetEntitiesEntityOutput
}

type GetEntitiesEntityArgs struct {
	// The name of the entity, displayed in the UI.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The ID of the entity.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// The timestamp at which the entity was last seen, in UTC milliseconds.
	LastSeenTms pulumi.IntPtrInput `pulumi:"lastSeenTms"`
	// Properties defining the entity.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// A set of tags assigned to the entity.
	Tags GetEntitiesEntityTagArrayInput `pulumi:"tags"`
	// The type of the entity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetEntitiesEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntity)(nil)).Elem()
}

func (i GetEntitiesEntityArgs) ToGetEntitiesEntityOutput() GetEntitiesEntityOutput {
	return i.ToGetEntitiesEntityOutputWithContext(context.Background())
}

func (i GetEntitiesEntityArgs) ToGetEntitiesEntityOutputWithContext(ctx context.Context) GetEntitiesEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityOutput)
}

// GetEntitiesEntityArrayInput is an input type that accepts GetEntitiesEntityArray and GetEntitiesEntityArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityArrayInput` via:
//
//	GetEntitiesEntityArray{ GetEntitiesEntityArgs{...} }
type GetEntitiesEntityArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput
	ToGetEntitiesEntityArrayOutputWithContext(context.Context) GetEntitiesEntityArrayOutput
}

type GetEntitiesEntityArray []GetEntitiesEntityInput

func (GetEntitiesEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntity)(nil)).Elem()
}

func (i GetEntitiesEntityArray) ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput {
	return i.ToGetEntitiesEntityArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityArray) ToGetEntitiesEntityArrayOutputWithContext(ctx context.Context) GetEntitiesEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityArrayOutput)
}

type GetEntitiesEntityOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntity)(nil)).Elem()
}

func (o GetEntitiesEntityOutput) ToGetEntitiesEntityOutput() GetEntitiesEntityOutput {
	return o
}

func (o GetEntitiesEntityOutput) ToGetEntitiesEntityOutputWithContext(ctx context.Context) GetEntitiesEntityOutput {
	return o
}

// The name of the entity, displayed in the UI.
func (o GetEntitiesEntityOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The ID of the entity.
func (o GetEntitiesEntityOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// The timestamp at which the entity was last seen, in UTC milliseconds.
func (o GetEntitiesEntityOutput) LastSeenTms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *int { return v.LastSeenTms }).(pulumi.IntPtrOutput)
}

// Properties defining the entity.
func (o GetEntitiesEntityOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEntitiesEntity) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// A set of tags assigned to the entity.
func (o GetEntitiesEntityOutput) Tags() GetEntitiesEntityTagArrayOutput {
	return o.ApplyT(func(v GetEntitiesEntity) []GetEntitiesEntityTag { return v.Tags }).(GetEntitiesEntityTagArrayOutput)
}

// The type of the entity.
func (o GetEntitiesEntityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetEntitiesEntityArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntity)(nil)).Elem()
}

func (o GetEntitiesEntityArrayOutput) ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput {
	return o
}

func (o GetEntitiesEntityArrayOutput) ToGetEntitiesEntityArrayOutputWithContext(ctx context.Context) GetEntitiesEntityArrayOutput {
	return o
}

func (o GetEntitiesEntityArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntity {
		return vs[0].([]GetEntitiesEntity)[vs[1].(int)]
	}).(GetEntitiesEntityOutput)
}

type GetEntitiesEntityTag struct {
	// A tag assigned to the entity
	Tags []GetEntitiesEntityTagTag `pulumi:"tags"`
}

// GetEntitiesEntityTagInput is an input type that accepts GetEntitiesEntityTagArgs and GetEntitiesEntityTagOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagInput` via:
//
//	GetEntitiesEntityTagArgs{...}
type GetEntitiesEntityTagInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput
	ToGetEntitiesEntityTagOutputWithContext(context.Context) GetEntitiesEntityTagOutput
}

type GetEntitiesEntityTagArgs struct {
	// A tag assigned to the entity
	Tags GetEntitiesEntityTagTagArrayInput `pulumi:"tags"`
}

func (GetEntitiesEntityTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagArgs) ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput {
	return i.ToGetEntitiesEntityTagOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagArgs) ToGetEntitiesEntityTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagOutput)
}

// GetEntitiesEntityTagArrayInput is an input type that accepts GetEntitiesEntityTagArray and GetEntitiesEntityTagArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagArrayInput` via:
//
//	GetEntitiesEntityTagArray{ GetEntitiesEntityTagArgs{...} }
type GetEntitiesEntityTagArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput
	ToGetEntitiesEntityTagArrayOutputWithContext(context.Context) GetEntitiesEntityTagArrayOutput
}

type GetEntitiesEntityTagArray []GetEntitiesEntityTagInput

func (GetEntitiesEntityTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagArray) ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput {
	return i.ToGetEntitiesEntityTagArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagArray) ToGetEntitiesEntityTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagArrayOutput)
}

type GetEntitiesEntityTagOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagOutput) ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput {
	return o
}

func (o GetEntitiesEntityTagOutput) ToGetEntitiesEntityTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagOutput {
	return o
}

// A tag assigned to the entity
func (o GetEntitiesEntityTagOutput) Tags() GetEntitiesEntityTagTagArrayOutput {
	return o.ApplyT(func(v GetEntitiesEntityTag) []GetEntitiesEntityTagTag { return v.Tags }).(GetEntitiesEntityTagTagArrayOutput)
}

type GetEntitiesEntityTagArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagArrayOutput) ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagArrayOutput) ToGetEntitiesEntityTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntityTag {
		return vs[0].([]GetEntitiesEntityTag)[vs[1].(int)]
	}).(GetEntitiesEntityTagOutput)
}

type GetEntitiesEntityTagTag struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	Context string `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key string `pulumi:"key"`
	// The string representation of the tag
	StringRepresentation *string `pulumi:"stringRepresentation"`
	// The value of the tag. Not applicable to custom tags
	Value *string `pulumi:"value"`
}

// GetEntitiesEntityTagTagInput is an input type that accepts GetEntitiesEntityTagTagArgs and GetEntitiesEntityTagTagOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagTagInput` via:
//
//	GetEntitiesEntityTagTagArgs{...}
type GetEntitiesEntityTagTagInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput
	ToGetEntitiesEntityTagTagOutputWithContext(context.Context) GetEntitiesEntityTagTagOutput
}

type GetEntitiesEntityTagTagArgs struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	Context pulumi.StringInput `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key pulumi.StringInput `pulumi:"key"`
	// The string representation of the tag
	StringRepresentation pulumi.StringPtrInput `pulumi:"stringRepresentation"`
	// The value of the tag. Not applicable to custom tags
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetEntitiesEntityTagTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTagTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagTagArgs) ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput {
	return i.ToGetEntitiesEntityTagTagOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagTagArgs) ToGetEntitiesEntityTagTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagTagOutput)
}

// GetEntitiesEntityTagTagArrayInput is an input type that accepts GetEntitiesEntityTagTagArray and GetEntitiesEntityTagTagArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagTagArrayInput` via:
//
//	GetEntitiesEntityTagTagArray{ GetEntitiesEntityTagTagArgs{...} }
type GetEntitiesEntityTagTagArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput
	ToGetEntitiesEntityTagTagArrayOutputWithContext(context.Context) GetEntitiesEntityTagTagArrayOutput
}

type GetEntitiesEntityTagTagArray []GetEntitiesEntityTagTagInput

func (GetEntitiesEntityTagTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTagTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagTagArray) ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput {
	return i.ToGetEntitiesEntityTagTagArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagTagArray) ToGetEntitiesEntityTagTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagTagArrayOutput)
}

type GetEntitiesEntityTagTagOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTagTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagTagOutput) ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput {
	return o
}

func (o GetEntitiesEntityTagTagOutput) ToGetEntitiesEntityTagTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagOutput {
	return o
}

// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
func (o GetEntitiesEntityTagTagOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) string { return v.Context }).(pulumi.StringOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o GetEntitiesEntityTagTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) string { return v.Key }).(pulumi.StringOutput)
}

// The string representation of the tag
func (o GetEntitiesEntityTagTagOutput) StringRepresentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) *string { return v.StringRepresentation }).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o GetEntitiesEntityTagTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetEntitiesEntityTagTagArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTagTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagTagArrayOutput) ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagTagArrayOutput) ToGetEntitiesEntityTagTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagTagArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityTagTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntityTagTag {
		return vs[0].([]GetEntitiesEntityTagTag)[vs[1].(int)]
	}).(GetEntitiesEntityTagTagOutput)
}

type GetGenericSettingsValue struct {
	LocalStorage string `pulumi:"localStorage"`
	Schema       string `pulumi:"schema"`
	Scope        string `pulumi:"scope"`
	Value        string `pulumi:"value"`
}

// GetGenericSettingsValueInput is an input type that accepts GetGenericSettingsValueArgs and GetGenericSettingsValueOutput values.
// You can construct a concrete instance of `GetGenericSettingsValueInput` via:
//
//	GetGenericSettingsValueArgs{...}
type GetGenericSettingsValueInput interface {
	pulumi.Input

	ToGetGenericSettingsValueOutput() GetGenericSettingsValueOutput
	ToGetGenericSettingsValueOutputWithContext(context.Context) GetGenericSettingsValueOutput
}

type GetGenericSettingsValueArgs struct {
	LocalStorage pulumi.StringInput `pulumi:"localStorage"`
	Schema       pulumi.StringInput `pulumi:"schema"`
	Scope        pulumi.StringInput `pulumi:"scope"`
	Value        pulumi.StringInput `pulumi:"value"`
}

func (GetGenericSettingsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGenericSettingsValue)(nil)).Elem()
}

func (i GetGenericSettingsValueArgs) ToGetGenericSettingsValueOutput() GetGenericSettingsValueOutput {
	return i.ToGetGenericSettingsValueOutputWithContext(context.Background())
}

func (i GetGenericSettingsValueArgs) ToGetGenericSettingsValueOutputWithContext(ctx context.Context) GetGenericSettingsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGenericSettingsValueOutput)
}

// GetGenericSettingsValueArrayInput is an input type that accepts GetGenericSettingsValueArray and GetGenericSettingsValueArrayOutput values.
// You can construct a concrete instance of `GetGenericSettingsValueArrayInput` via:
//
//	GetGenericSettingsValueArray{ GetGenericSettingsValueArgs{...} }
type GetGenericSettingsValueArrayInput interface {
	pulumi.Input

	ToGetGenericSettingsValueArrayOutput() GetGenericSettingsValueArrayOutput
	ToGetGenericSettingsValueArrayOutputWithContext(context.Context) GetGenericSettingsValueArrayOutput
}

type GetGenericSettingsValueArray []GetGenericSettingsValueInput

func (GetGenericSettingsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGenericSettingsValue)(nil)).Elem()
}

func (i GetGenericSettingsValueArray) ToGetGenericSettingsValueArrayOutput() GetGenericSettingsValueArrayOutput {
	return i.ToGetGenericSettingsValueArrayOutputWithContext(context.Background())
}

func (i GetGenericSettingsValueArray) ToGetGenericSettingsValueArrayOutputWithContext(ctx context.Context) GetGenericSettingsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGenericSettingsValueArrayOutput)
}

type GetGenericSettingsValueOutput struct{ *pulumi.OutputState }

func (GetGenericSettingsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGenericSettingsValue)(nil)).Elem()
}

func (o GetGenericSettingsValueOutput) ToGetGenericSettingsValueOutput() GetGenericSettingsValueOutput {
	return o
}

func (o GetGenericSettingsValueOutput) ToGetGenericSettingsValueOutputWithContext(ctx context.Context) GetGenericSettingsValueOutput {
	return o
}

func (o GetGenericSettingsValueOutput) LocalStorage() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenericSettingsValue) string { return v.LocalStorage }).(pulumi.StringOutput)
}

func (o GetGenericSettingsValueOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenericSettingsValue) string { return v.Schema }).(pulumi.StringOutput)
}

func (o GetGenericSettingsValueOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenericSettingsValue) string { return v.Scope }).(pulumi.StringOutput)
}

func (o GetGenericSettingsValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenericSettingsValue) string { return v.Value }).(pulumi.StringOutput)
}

type GetGenericSettingsValueArrayOutput struct{ *pulumi.OutputState }

func (GetGenericSettingsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGenericSettingsValue)(nil)).Elem()
}

func (o GetGenericSettingsValueArrayOutput) ToGetGenericSettingsValueArrayOutput() GetGenericSettingsValueArrayOutput {
	return o
}

func (o GetGenericSettingsValueArrayOutput) ToGetGenericSettingsValueArrayOutputWithContext(ctx context.Context) GetGenericSettingsValueArrayOutput {
	return o
}

func (o GetGenericSettingsValueArrayOutput) Index(i pulumi.IntInput) GetGenericSettingsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGenericSettingsValue {
		return vs[0].([]GetGenericSettingsValue)[vs[1].(int)]
	}).(GetGenericSettingsValueOutput)
}

type GetGeoCitiesCity struct {
	Latitude  float64 `pulumi:"latitude"`
	Longitude float64 `pulumi:"longitude"`
	Name      string  `pulumi:"name"`
}

// GetGeoCitiesCityInput is an input type that accepts GetGeoCitiesCityArgs and GetGeoCitiesCityOutput values.
// You can construct a concrete instance of `GetGeoCitiesCityInput` via:
//
//	GetGeoCitiesCityArgs{...}
type GetGeoCitiesCityInput interface {
	pulumi.Input

	ToGetGeoCitiesCityOutput() GetGeoCitiesCityOutput
	ToGetGeoCitiesCityOutputWithContext(context.Context) GetGeoCitiesCityOutput
}

type GetGeoCitiesCityArgs struct {
	Latitude  pulumi.Float64Input `pulumi:"latitude"`
	Longitude pulumi.Float64Input `pulumi:"longitude"`
	Name      pulumi.StringInput  `pulumi:"name"`
}

func (GetGeoCitiesCityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGeoCitiesCity)(nil)).Elem()
}

func (i GetGeoCitiesCityArgs) ToGetGeoCitiesCityOutput() GetGeoCitiesCityOutput {
	return i.ToGetGeoCitiesCityOutputWithContext(context.Background())
}

func (i GetGeoCitiesCityArgs) ToGetGeoCitiesCityOutputWithContext(ctx context.Context) GetGeoCitiesCityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGeoCitiesCityOutput)
}

// GetGeoCitiesCityArrayInput is an input type that accepts GetGeoCitiesCityArray and GetGeoCitiesCityArrayOutput values.
// You can construct a concrete instance of `GetGeoCitiesCityArrayInput` via:
//
//	GetGeoCitiesCityArray{ GetGeoCitiesCityArgs{...} }
type GetGeoCitiesCityArrayInput interface {
	pulumi.Input

	ToGetGeoCitiesCityArrayOutput() GetGeoCitiesCityArrayOutput
	ToGetGeoCitiesCityArrayOutputWithContext(context.Context) GetGeoCitiesCityArrayOutput
}

type GetGeoCitiesCityArray []GetGeoCitiesCityInput

func (GetGeoCitiesCityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGeoCitiesCity)(nil)).Elem()
}

func (i GetGeoCitiesCityArray) ToGetGeoCitiesCityArrayOutput() GetGeoCitiesCityArrayOutput {
	return i.ToGetGeoCitiesCityArrayOutputWithContext(context.Background())
}

func (i GetGeoCitiesCityArray) ToGetGeoCitiesCityArrayOutputWithContext(ctx context.Context) GetGeoCitiesCityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGeoCitiesCityArrayOutput)
}

type GetGeoCitiesCityOutput struct{ *pulumi.OutputState }

func (GetGeoCitiesCityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGeoCitiesCity)(nil)).Elem()
}

func (o GetGeoCitiesCityOutput) ToGetGeoCitiesCityOutput() GetGeoCitiesCityOutput {
	return o
}

func (o GetGeoCitiesCityOutput) ToGetGeoCitiesCityOutputWithContext(ctx context.Context) GetGeoCitiesCityOutput {
	return o
}

func (o GetGeoCitiesCityOutput) Latitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetGeoCitiesCity) float64 { return v.Latitude }).(pulumi.Float64Output)
}

func (o GetGeoCitiesCityOutput) Longitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetGeoCitiesCity) float64 { return v.Longitude }).(pulumi.Float64Output)
}

func (o GetGeoCitiesCityOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGeoCitiesCity) string { return v.Name }).(pulumi.StringOutput)
}

type GetGeoCitiesCityArrayOutput struct{ *pulumi.OutputState }

func (GetGeoCitiesCityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGeoCitiesCity)(nil)).Elem()
}

func (o GetGeoCitiesCityArrayOutput) ToGetGeoCitiesCityArrayOutput() GetGeoCitiesCityArrayOutput {
	return o
}

func (o GetGeoCitiesCityArrayOutput) ToGetGeoCitiesCityArrayOutputWithContext(ctx context.Context) GetGeoCitiesCityArrayOutput {
	return o
}

func (o GetGeoCitiesCityArrayOutput) Index(i pulumi.IntInput) GetGeoCitiesCityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGeoCitiesCity {
		return vs[0].([]GetGeoCitiesCity)[vs[1].(int)]
	}).(GetGeoCitiesCityOutput)
}

type GetGeoCountriesCountry struct {
	Code string `pulumi:"code"`
	Name string `pulumi:"name"`
}

// GetGeoCountriesCountryInput is an input type that accepts GetGeoCountriesCountryArgs and GetGeoCountriesCountryOutput values.
// You can construct a concrete instance of `GetGeoCountriesCountryInput` via:
//
//	GetGeoCountriesCountryArgs{...}
type GetGeoCountriesCountryInput interface {
	pulumi.Input

	ToGetGeoCountriesCountryOutput() GetGeoCountriesCountryOutput
	ToGetGeoCountriesCountryOutputWithContext(context.Context) GetGeoCountriesCountryOutput
}

type GetGeoCountriesCountryArgs struct {
	Code pulumi.StringInput `pulumi:"code"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGeoCountriesCountryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGeoCountriesCountry)(nil)).Elem()
}

func (i GetGeoCountriesCountryArgs) ToGetGeoCountriesCountryOutput() GetGeoCountriesCountryOutput {
	return i.ToGetGeoCountriesCountryOutputWithContext(context.Background())
}

func (i GetGeoCountriesCountryArgs) ToGetGeoCountriesCountryOutputWithContext(ctx context.Context) GetGeoCountriesCountryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGeoCountriesCountryOutput)
}

// GetGeoCountriesCountryArrayInput is an input type that accepts GetGeoCountriesCountryArray and GetGeoCountriesCountryArrayOutput values.
// You can construct a concrete instance of `GetGeoCountriesCountryArrayInput` via:
//
//	GetGeoCountriesCountryArray{ GetGeoCountriesCountryArgs{...} }
type GetGeoCountriesCountryArrayInput interface {
	pulumi.Input

	ToGetGeoCountriesCountryArrayOutput() GetGeoCountriesCountryArrayOutput
	ToGetGeoCountriesCountryArrayOutputWithContext(context.Context) GetGeoCountriesCountryArrayOutput
}

type GetGeoCountriesCountryArray []GetGeoCountriesCountryInput

func (GetGeoCountriesCountryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGeoCountriesCountry)(nil)).Elem()
}

func (i GetGeoCountriesCountryArray) ToGetGeoCountriesCountryArrayOutput() GetGeoCountriesCountryArrayOutput {
	return i.ToGetGeoCountriesCountryArrayOutputWithContext(context.Background())
}

func (i GetGeoCountriesCountryArray) ToGetGeoCountriesCountryArrayOutputWithContext(ctx context.Context) GetGeoCountriesCountryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGeoCountriesCountryArrayOutput)
}

type GetGeoCountriesCountryOutput struct{ *pulumi.OutputState }

func (GetGeoCountriesCountryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGeoCountriesCountry)(nil)).Elem()
}

func (o GetGeoCountriesCountryOutput) ToGetGeoCountriesCountryOutput() GetGeoCountriesCountryOutput {
	return o
}

func (o GetGeoCountriesCountryOutput) ToGetGeoCountriesCountryOutputWithContext(ctx context.Context) GetGeoCountriesCountryOutput {
	return o
}

func (o GetGeoCountriesCountryOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetGeoCountriesCountry) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetGeoCountriesCountryOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGeoCountriesCountry) string { return v.Name }).(pulumi.StringOutput)
}

type GetGeoCountriesCountryArrayOutput struct{ *pulumi.OutputState }

func (GetGeoCountriesCountryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGeoCountriesCountry)(nil)).Elem()
}

func (o GetGeoCountriesCountryArrayOutput) ToGetGeoCountriesCountryArrayOutput() GetGeoCountriesCountryArrayOutput {
	return o
}

func (o GetGeoCountriesCountryArrayOutput) ToGetGeoCountriesCountryArrayOutputWithContext(ctx context.Context) GetGeoCountriesCountryArrayOutput {
	return o
}

func (o GetGeoCountriesCountryArrayOutput) Index(i pulumi.IntInput) GetGeoCountriesCountryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGeoCountriesCountry {
		return vs[0].([]GetGeoCountriesCountry)[vs[1].(int)]
	}).(GetGeoCountriesCountryOutput)
}

type GetGeoRegionsRegion struct {
	Code string `pulumi:"code"`
	Name string `pulumi:"name"`
}

// GetGeoRegionsRegionInput is an input type that accepts GetGeoRegionsRegionArgs and GetGeoRegionsRegionOutput values.
// You can construct a concrete instance of `GetGeoRegionsRegionInput` via:
//
//	GetGeoRegionsRegionArgs{...}
type GetGeoRegionsRegionInput interface {
	pulumi.Input

	ToGetGeoRegionsRegionOutput() GetGeoRegionsRegionOutput
	ToGetGeoRegionsRegionOutputWithContext(context.Context) GetGeoRegionsRegionOutput
}

type GetGeoRegionsRegionArgs struct {
	Code pulumi.StringInput `pulumi:"code"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetGeoRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGeoRegionsRegion)(nil)).Elem()
}

func (i GetGeoRegionsRegionArgs) ToGetGeoRegionsRegionOutput() GetGeoRegionsRegionOutput {
	return i.ToGetGeoRegionsRegionOutputWithContext(context.Background())
}

func (i GetGeoRegionsRegionArgs) ToGetGeoRegionsRegionOutputWithContext(ctx context.Context) GetGeoRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGeoRegionsRegionOutput)
}

// GetGeoRegionsRegionArrayInput is an input type that accepts GetGeoRegionsRegionArray and GetGeoRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetGeoRegionsRegionArrayInput` via:
//
//	GetGeoRegionsRegionArray{ GetGeoRegionsRegionArgs{...} }
type GetGeoRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetGeoRegionsRegionArrayOutput() GetGeoRegionsRegionArrayOutput
	ToGetGeoRegionsRegionArrayOutputWithContext(context.Context) GetGeoRegionsRegionArrayOutput
}

type GetGeoRegionsRegionArray []GetGeoRegionsRegionInput

func (GetGeoRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGeoRegionsRegion)(nil)).Elem()
}

func (i GetGeoRegionsRegionArray) ToGetGeoRegionsRegionArrayOutput() GetGeoRegionsRegionArrayOutput {
	return i.ToGetGeoRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetGeoRegionsRegionArray) ToGetGeoRegionsRegionArrayOutputWithContext(ctx context.Context) GetGeoRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGeoRegionsRegionArrayOutput)
}

type GetGeoRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetGeoRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGeoRegionsRegion)(nil)).Elem()
}

func (o GetGeoRegionsRegionOutput) ToGetGeoRegionsRegionOutput() GetGeoRegionsRegionOutput {
	return o
}

func (o GetGeoRegionsRegionOutput) ToGetGeoRegionsRegionOutputWithContext(ctx context.Context) GetGeoRegionsRegionOutput {
	return o
}

func (o GetGeoRegionsRegionOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetGeoRegionsRegion) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetGeoRegionsRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGeoRegionsRegion) string { return v.Name }).(pulumi.StringOutput)
}

type GetGeoRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetGeoRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGeoRegionsRegion)(nil)).Elem()
}

func (o GetGeoRegionsRegionArrayOutput) ToGetGeoRegionsRegionArrayOutput() GetGeoRegionsRegionArrayOutput {
	return o
}

func (o GetGeoRegionsRegionArrayOutput) ToGetGeoRegionsRegionArrayOutputWithContext(ctx context.Context) GetGeoRegionsRegionArrayOutput {
	return o
}

func (o GetGeoRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetGeoRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGeoRegionsRegion {
		return vs[0].([]GetGeoRegionsRegion)[vs[1].(int)]
	}).(GetGeoRegionsRegionOutput)
}

type GetHubItemsItem struct {
	// The activation link for a technology
	ActivationLink string `pulumi:"activationLink"`
	// The unique ID used by the artifacts contained in releases
	ArtifactId string `pulumi:"artifactId"`
	// URL for the author's logo
	AuthorLogo string `pulumi:"authorLogo"`
	// Name of the author of the item
	AuthorName string `pulumi:"authorName"`
	// Checks if the item is compatible with the cluster version
	ClusterCompatible bool `pulumi:"clusterCompatible"`
	// Whether or not the item is planned to be released soon
	ComingSoon bool `pulumi:"comingSoon"`
	// Description of the item
	Description string `pulumi:"description"`
	// An absolute link to the documentation page of this item
	DocumentationLink string `pulumi:"documentationLink"`
	// Whether or not the details call will contain description blocks
	HasDescriptionBlocks bool `pulumi:"hasDescriptionBlocks"`
	// Unique Id of the item
	ItemId string `pulumi:"itemId"`
	// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
	Logo string `pulumi:"logo"`
	// An absolute link to the marketing page of this item
	MarketingLink string `pulumi:"marketingLink"`
	// Name of the item
	Name string `pulumi:"name"`
	// The reason why the item is not compatible with the cluster version
	NotCompatibleReason string `pulumi:"notCompatibleReason"`
	// Grouping of items with keywords
	Tags []string `pulumi:"tags"`
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
	Type string `pulumi:"type"`
}

// GetHubItemsItemInput is an input type that accepts GetHubItemsItemArgs and GetHubItemsItemOutput values.
// You can construct a concrete instance of `GetHubItemsItemInput` via:
//
//	GetHubItemsItemArgs{...}
type GetHubItemsItemInput interface {
	pulumi.Input

	ToGetHubItemsItemOutput() GetHubItemsItemOutput
	ToGetHubItemsItemOutputWithContext(context.Context) GetHubItemsItemOutput
}

type GetHubItemsItemArgs struct {
	// The activation link for a technology
	ActivationLink pulumi.StringInput `pulumi:"activationLink"`
	// The unique ID used by the artifacts contained in releases
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// URL for the author's logo
	AuthorLogo pulumi.StringInput `pulumi:"authorLogo"`
	// Name of the author of the item
	AuthorName pulumi.StringInput `pulumi:"authorName"`
	// Checks if the item is compatible with the cluster version
	ClusterCompatible pulumi.BoolInput `pulumi:"clusterCompatible"`
	// Whether or not the item is planned to be released soon
	ComingSoon pulumi.BoolInput `pulumi:"comingSoon"`
	// Description of the item
	Description pulumi.StringInput `pulumi:"description"`
	// An absolute link to the documentation page of this item
	DocumentationLink pulumi.StringInput `pulumi:"documentationLink"`
	// Whether or not the details call will contain description blocks
	HasDescriptionBlocks pulumi.BoolInput `pulumi:"hasDescriptionBlocks"`
	// Unique Id of the item
	ItemId pulumi.StringInput `pulumi:"itemId"`
	// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
	Logo pulumi.StringInput `pulumi:"logo"`
	// An absolute link to the marketing page of this item
	MarketingLink pulumi.StringInput `pulumi:"marketingLink"`
	// Name of the item
	Name pulumi.StringInput `pulumi:"name"`
	// The reason why the item is not compatible with the cluster version
	NotCompatibleReason pulumi.StringInput `pulumi:"notCompatibleReason"`
	// Grouping of items with keywords
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetHubItemsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHubItemsItem)(nil)).Elem()
}

func (i GetHubItemsItemArgs) ToGetHubItemsItemOutput() GetHubItemsItemOutput {
	return i.ToGetHubItemsItemOutputWithContext(context.Background())
}

func (i GetHubItemsItemArgs) ToGetHubItemsItemOutputWithContext(ctx context.Context) GetHubItemsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHubItemsItemOutput)
}

// GetHubItemsItemArrayInput is an input type that accepts GetHubItemsItemArray and GetHubItemsItemArrayOutput values.
// You can construct a concrete instance of `GetHubItemsItemArrayInput` via:
//
//	GetHubItemsItemArray{ GetHubItemsItemArgs{...} }
type GetHubItemsItemArrayInput interface {
	pulumi.Input

	ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput
	ToGetHubItemsItemArrayOutputWithContext(context.Context) GetHubItemsItemArrayOutput
}

type GetHubItemsItemArray []GetHubItemsItemInput

func (GetHubItemsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHubItemsItem)(nil)).Elem()
}

func (i GetHubItemsItemArray) ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput {
	return i.ToGetHubItemsItemArrayOutputWithContext(context.Background())
}

func (i GetHubItemsItemArray) ToGetHubItemsItemArrayOutputWithContext(ctx context.Context) GetHubItemsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHubItemsItemArrayOutput)
}

type GetHubItemsItemOutput struct{ *pulumi.OutputState }

func (GetHubItemsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHubItemsItem)(nil)).Elem()
}

func (o GetHubItemsItemOutput) ToGetHubItemsItemOutput() GetHubItemsItemOutput {
	return o
}

func (o GetHubItemsItemOutput) ToGetHubItemsItemOutputWithContext(ctx context.Context) GetHubItemsItemOutput {
	return o
}

// The activation link for a technology
func (o GetHubItemsItemOutput) ActivationLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ActivationLink }).(pulumi.StringOutput)
}

// The unique ID used by the artifacts contained in releases
func (o GetHubItemsItemOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// URL for the author's logo
func (o GetHubItemsItemOutput) AuthorLogo() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.AuthorLogo }).(pulumi.StringOutput)
}

// Name of the author of the item
func (o GetHubItemsItemOutput) AuthorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.AuthorName }).(pulumi.StringOutput)
}

// Checks if the item is compatible with the cluster version
func (o GetHubItemsItemOutput) ClusterCompatible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.ClusterCompatible }).(pulumi.BoolOutput)
}

// Whether or not the item is planned to be released soon
func (o GetHubItemsItemOutput) ComingSoon() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.ComingSoon }).(pulumi.BoolOutput)
}

// Description of the item
func (o GetHubItemsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Description }).(pulumi.StringOutput)
}

// An absolute link to the documentation page of this item
func (o GetHubItemsItemOutput) DocumentationLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.DocumentationLink }).(pulumi.StringOutput)
}

// Whether or not the details call will contain description blocks
func (o GetHubItemsItemOutput) HasDescriptionBlocks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.HasDescriptionBlocks }).(pulumi.BoolOutput)
}

// Unique Id of the item
func (o GetHubItemsItemOutput) ItemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ItemId }).(pulumi.StringOutput)
}

// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
func (o GetHubItemsItemOutput) Logo() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Logo }).(pulumi.StringOutput)
}

// An absolute link to the marketing page of this item
func (o GetHubItemsItemOutput) MarketingLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.MarketingLink }).(pulumi.StringOutput)
}

// Name of the item
func (o GetHubItemsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The reason why the item is not compatible with the cluster version
func (o GetHubItemsItemOutput) NotCompatibleReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.NotCompatibleReason }).(pulumi.StringOutput)
}

// Grouping of items with keywords
func (o GetHubItemsItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHubItemsItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
func (o GetHubItemsItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetHubItemsItemArrayOutput struct{ *pulumi.OutputState }

func (GetHubItemsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHubItemsItem)(nil)).Elem()
}

func (o GetHubItemsItemArrayOutput) ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput {
	return o
}

func (o GetHubItemsItemArrayOutput) ToGetHubItemsItemArrayOutputWithContext(ctx context.Context) GetHubItemsItemArrayOutput {
	return o
}

func (o GetHubItemsItemArrayOutput) Index(i pulumi.IntInput) GetHubItemsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHubItemsItem {
		return vs[0].([]GetHubItemsItem)[vs[1].(int)]
	}).(GetHubItemsItemOutput)
}

type GetIamPoliciesPolicy struct {
	// The account UUID the policy is defined for
	Account *string `pulumi:"account"`
	// The environment ID the policy is defined for
	Environment *string `pulumi:"environment"`
	// `true` if this is a global policy`
	Global *bool  `pulumi:"global"`
	Id     string `pulumi:"id"`
	// The name of the policy
	Name string `pulumi:"name"`
	// The UUID of the policy
	Uuid string `pulumi:"uuid"`
}

// GetIamPoliciesPolicyInput is an input type that accepts GetIamPoliciesPolicyArgs and GetIamPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetIamPoliciesPolicyInput` via:
//
//	GetIamPoliciesPolicyArgs{...}
type GetIamPoliciesPolicyInput interface {
	pulumi.Input

	ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput
	ToGetIamPoliciesPolicyOutputWithContext(context.Context) GetIamPoliciesPolicyOutput
}

type GetIamPoliciesPolicyArgs struct {
	// The account UUID the policy is defined for
	Account pulumi.StringPtrInput `pulumi:"account"`
	// The environment ID the policy is defined for
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// `true` if this is a global policy`
	Global pulumi.BoolPtrInput `pulumi:"global"`
	Id     pulumi.StringInput  `pulumi:"id"`
	// The name of the policy
	Name pulumi.StringInput `pulumi:"name"`
	// The UUID of the policy
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetIamPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPoliciesPolicy)(nil)).Elem()
}

func (i GetIamPoliciesPolicyArgs) ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput {
	return i.ToGetIamPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetIamPoliciesPolicyArgs) ToGetIamPoliciesPolicyOutputWithContext(ctx context.Context) GetIamPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPoliciesPolicyOutput)
}

// GetIamPoliciesPolicyArrayInput is an input type that accepts GetIamPoliciesPolicyArray and GetIamPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetIamPoliciesPolicyArrayInput` via:
//
//	GetIamPoliciesPolicyArray{ GetIamPoliciesPolicyArgs{...} }
type GetIamPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput
	ToGetIamPoliciesPolicyArrayOutputWithContext(context.Context) GetIamPoliciesPolicyArrayOutput
}

type GetIamPoliciesPolicyArray []GetIamPoliciesPolicyInput

func (GetIamPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPoliciesPolicy)(nil)).Elem()
}

func (i GetIamPoliciesPolicyArray) ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput {
	return i.ToGetIamPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetIamPoliciesPolicyArray) ToGetIamPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetIamPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPoliciesPolicyArrayOutput)
}

type GetIamPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetIamPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPoliciesPolicy)(nil)).Elem()
}

func (o GetIamPoliciesPolicyOutput) ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput {
	return o
}

func (o GetIamPoliciesPolicyOutput) ToGetIamPoliciesPolicyOutputWithContext(ctx context.Context) GetIamPoliciesPolicyOutput {
	return o
}

// The account UUID the policy is defined for
func (o GetIamPoliciesPolicyOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// The environment ID the policy is defined for
func (o GetIamPoliciesPolicyOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// `true` if this is a global policy`
func (o GetIamPoliciesPolicyOutput) Global() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *bool { return v.Global }).(pulumi.BoolPtrOutput)
}

func (o GetIamPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy
func (o GetIamPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The UUID of the policy
func (o GetIamPoliciesPolicyOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetIamPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetIamPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPoliciesPolicy)(nil)).Elem()
}

func (o GetIamPoliciesPolicyArrayOutput) ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput {
	return o
}

func (o GetIamPoliciesPolicyArrayOutput) ToGetIamPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetIamPoliciesPolicyArrayOutput {
	return o
}

func (o GetIamPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetIamPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPoliciesPolicy {
		return vs[0].([]GetIamPoliciesPolicy)[vs[1].(int)]
	}).(GetIamPoliciesPolicyOutput)
}

type GetManagementZonesValue struct {
	// The description of the Management Zone
	Description string `pulumi:"description"`
	// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id string `pulumi:"id"`
	// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId string `pulumi:"legacyId"`
	// The name of the Management Zone
	Name string `pulumi:"name"`
}

// GetManagementZonesValueInput is an input type that accepts GetManagementZonesValueArgs and GetManagementZonesValueOutput values.
// You can construct a concrete instance of `GetManagementZonesValueInput` via:
//
//	GetManagementZonesValueArgs{...}
type GetManagementZonesValueInput interface {
	pulumi.Input

	ToGetManagementZonesValueOutput() GetManagementZonesValueOutput
	ToGetManagementZonesValueOutputWithContext(context.Context) GetManagementZonesValueOutput
}

type GetManagementZonesValueArgs struct {
	// The description of the Management Zone
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId pulumi.StringInput `pulumi:"legacyId"`
	// The name of the Management Zone
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetManagementZonesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementZonesValue)(nil)).Elem()
}

func (i GetManagementZonesValueArgs) ToGetManagementZonesValueOutput() GetManagementZonesValueOutput {
	return i.ToGetManagementZonesValueOutputWithContext(context.Background())
}

func (i GetManagementZonesValueArgs) ToGetManagementZonesValueOutputWithContext(ctx context.Context) GetManagementZonesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementZonesValueOutput)
}

// GetManagementZonesValueArrayInput is an input type that accepts GetManagementZonesValueArray and GetManagementZonesValueArrayOutput values.
// You can construct a concrete instance of `GetManagementZonesValueArrayInput` via:
//
//	GetManagementZonesValueArray{ GetManagementZonesValueArgs{...} }
type GetManagementZonesValueArrayInput interface {
	pulumi.Input

	ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput
	ToGetManagementZonesValueArrayOutputWithContext(context.Context) GetManagementZonesValueArrayOutput
}

type GetManagementZonesValueArray []GetManagementZonesValueInput

func (GetManagementZonesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementZonesValue)(nil)).Elem()
}

func (i GetManagementZonesValueArray) ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput {
	return i.ToGetManagementZonesValueArrayOutputWithContext(context.Background())
}

func (i GetManagementZonesValueArray) ToGetManagementZonesValueArrayOutputWithContext(ctx context.Context) GetManagementZonesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementZonesValueArrayOutput)
}

type GetManagementZonesValueOutput struct{ *pulumi.OutputState }

func (GetManagementZonesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementZonesValue)(nil)).Elem()
}

func (o GetManagementZonesValueOutput) ToGetManagementZonesValueOutput() GetManagementZonesValueOutput {
	return o
}

func (o GetManagementZonesValueOutput) ToGetManagementZonesValueOutputWithContext(ctx context.Context) GetManagementZonesValueOutput {
	return o
}

// The description of the Management Zone
func (o GetManagementZonesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
func (o GetManagementZonesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
func (o GetManagementZonesValueOutput) LegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.LegacyId }).(pulumi.StringOutput)
}

// The name of the Management Zone
func (o GetManagementZonesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Name }).(pulumi.StringOutput)
}

type GetManagementZonesValueArrayOutput struct{ *pulumi.OutputState }

func (GetManagementZonesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementZonesValue)(nil)).Elem()
}

func (o GetManagementZonesValueArrayOutput) ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput {
	return o
}

func (o GetManagementZonesValueArrayOutput) ToGetManagementZonesValueArrayOutputWithContext(ctx context.Context) GetManagementZonesValueArrayOutput {
	return o
}

func (o GetManagementZonesValueArrayOutput) Index(i pulumi.IntInput) GetManagementZonesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementZonesValue {
		return vs[0].([]GetManagementZonesValue)[vs[1].(int)]
	}).(GetManagementZonesValueOutput)
}

type GetRemoteEnvironmentsRemoteEnvironment struct {
	// Name
	Name string `pulumi:"name"`
	// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
	NetworkScope string `pulumi:"networkScope"`
	// Provide a valid token created on the remote environment.
	Token string `pulumi:"token"`
	// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
	Uri string `pulumi:"uri"`
}

// GetRemoteEnvironmentsRemoteEnvironmentInput is an input type that accepts GetRemoteEnvironmentsRemoteEnvironmentArgs and GetRemoteEnvironmentsRemoteEnvironmentOutput values.
// You can construct a concrete instance of `GetRemoteEnvironmentsRemoteEnvironmentInput` via:
//
//	GetRemoteEnvironmentsRemoteEnvironmentArgs{...}
type GetRemoteEnvironmentsRemoteEnvironmentInput interface {
	pulumi.Input

	ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput
	ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput
}

type GetRemoteEnvironmentsRemoteEnvironmentArgs struct {
	// Name
	Name pulumi.StringInput `pulumi:"name"`
	// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
	NetworkScope pulumi.StringInput `pulumi:"networkScope"`
	// Provide a valid token created on the remote environment.
	Token pulumi.StringInput `pulumi:"token"`
	// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetRemoteEnvironmentsRemoteEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArgs) ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return i.ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(context.Background())
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArgs) ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRemoteEnvironmentsRemoteEnvironmentOutput)
}

// GetRemoteEnvironmentsRemoteEnvironmentArrayInput is an input type that accepts GetRemoteEnvironmentsRemoteEnvironmentArray and GetRemoteEnvironmentsRemoteEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetRemoteEnvironmentsRemoteEnvironmentArrayInput` via:
//
//	GetRemoteEnvironmentsRemoteEnvironmentArray{ GetRemoteEnvironmentsRemoteEnvironmentArgs{...} }
type GetRemoteEnvironmentsRemoteEnvironmentArrayInput interface {
	pulumi.Input

	ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput
	ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput
}

type GetRemoteEnvironmentsRemoteEnvironmentArray []GetRemoteEnvironmentsRemoteEnvironmentInput

func (GetRemoteEnvironmentsRemoteEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArray) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return i.ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArray) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRemoteEnvironmentsRemoteEnvironmentArrayOutput)
}

type GetRemoteEnvironmentsRemoteEnvironmentOutput struct{ *pulumi.OutputState }

func (GetRemoteEnvironmentsRemoteEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return o
}

// Name
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) NetworkScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.NetworkScope }).(pulumi.StringOutput)
}

// Provide a valid token created on the remote environment.
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Token }).(pulumi.StringOutput)
}

// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Uri }).(pulumi.StringOutput)
}

type GetRemoteEnvironmentsRemoteEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) Index(i pulumi.IntInput) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRemoteEnvironmentsRemoteEnvironment {
		return vs[0].([]GetRemoteEnvironmentsRemoteEnvironment)[vs[1].(int)]
	}).(GetRemoteEnvironmentsRemoteEnvironmentOutput)
}

type GetSyntheticLocationsLocations struct {
	// The cloud provider where the location is hosted.
	CloudPlatform string `pulumi:"cloudPlatform"`
	// The unique ID of the location
	EntityId *string `pulumi:"entityId"`
	// The list of IP addresses assigned to the location.
	//
	//  Only applicable to `PUBLIC` locations
	Ips []string `pulumi:"ips"`
	// The name of the location
	Name *string `pulumi:"name"`
	// The release stage of the location
	Stage string `pulumi:"stage"`
	// The status of the location:
	//
	// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
	// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
	// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
	Status string `pulumi:"status"`
	// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
	Type *string `pulumi:"type"`
}

// GetSyntheticLocationsLocationsInput is an input type that accepts GetSyntheticLocationsLocationsArgs and GetSyntheticLocationsLocationsOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsInput` via:
//
//	GetSyntheticLocationsLocationsArgs{...}
type GetSyntheticLocationsLocationsInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput
	ToGetSyntheticLocationsLocationsOutputWithContext(context.Context) GetSyntheticLocationsLocationsOutput
}

type GetSyntheticLocationsLocationsArgs struct {
	// The cloud provider where the location is hosted.
	CloudPlatform pulumi.StringInput `pulumi:"cloudPlatform"`
	// The unique ID of the location
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// The list of IP addresses assigned to the location.
	//
	//  Only applicable to `PUBLIC` locations
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The name of the location
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The release stage of the location
	Stage pulumi.StringInput `pulumi:"stage"`
	// The status of the location:
	//
	// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
	// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
	// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSyntheticLocationsLocationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocations)(nil)).Elem()
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput {
	return i.ToGetSyntheticLocationsLocationsOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsOutput)
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return i.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsOutput).ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx)
}

// GetSyntheticLocationsLocationsPtrInput is an input type that accepts GetSyntheticLocationsLocationsArgs, GetSyntheticLocationsLocationsPtr and GetSyntheticLocationsLocationsPtrOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsPtrInput` via:
//
//	        GetSyntheticLocationsLocationsArgs{...}
//
//	or:
//
//	        nil
type GetSyntheticLocationsLocationsPtrInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput
	ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Context) GetSyntheticLocationsLocationsPtrOutput
}

type getSyntheticLocationsLocationsPtrType GetSyntheticLocationsLocationsArgs

func GetSyntheticLocationsLocationsPtr(v *GetSyntheticLocationsLocationsArgs) GetSyntheticLocationsLocationsPtrInput {
	return (*getSyntheticLocationsLocationsPtrType)(v)
}

func (*getSyntheticLocationsLocationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSyntheticLocationsLocations)(nil)).Elem()
}

func (i *getSyntheticLocationsLocationsPtrType) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return i.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (i *getSyntheticLocationsLocationsPtrType) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsPtrOutput)
}

type GetSyntheticLocationsLocationsOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocations)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput {
	return o
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsOutput {
	return o
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return o.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSyntheticLocationsLocations) *GetSyntheticLocationsLocations {
		return &v
	}).(GetSyntheticLocationsLocationsPtrOutput)
}

// The cloud provider where the location is hosted.
func (o GetSyntheticLocationsLocationsOutput) CloudPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.CloudPlatform }).(pulumi.StringOutput)
}

// The unique ID of the location
func (o GetSyntheticLocationsLocationsOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// The list of IP addresses assigned to the location.
//
//	Only applicable to `PUBLIC` locations
func (o GetSyntheticLocationsLocationsOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The name of the location
func (o GetSyntheticLocationsLocationsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The release stage of the location
func (o GetSyntheticLocationsLocationsOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.Stage }).(pulumi.StringOutput)
}

// The status of the location:
//
// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
func (o GetSyntheticLocationsLocationsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
func (o GetSyntheticLocationsLocationsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSyntheticLocationsLocationsPtrOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSyntheticLocationsLocations)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsPtrOutput) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return o
}

func (o GetSyntheticLocationsLocationsPtrOutput) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return o
}

func (o GetSyntheticLocationsLocationsPtrOutput) Elem() GetSyntheticLocationsLocationsOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) GetSyntheticLocationsLocations {
		if v != nil {
			return *v
		}
		var ret GetSyntheticLocationsLocations
		return ret
	}).(GetSyntheticLocationsLocationsOutput)
}

// The cloud provider where the location is hosted.
func (o GetSyntheticLocationsLocationsPtrOutput) CloudPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.CloudPlatform
	}).(pulumi.StringPtrOutput)
}

// The unique ID of the location
func (o GetSyntheticLocationsLocationsPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The list of IP addresses assigned to the location.
//
//	Only applicable to `PUBLIC` locations
func (o GetSyntheticLocationsLocationsPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// The name of the location
func (o GetSyntheticLocationsLocationsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The release stage of the location
func (o GetSyntheticLocationsLocationsPtrOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.Stage
	}).(pulumi.StringPtrOutput)
}

// The status of the location:
//
// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
func (o GetSyntheticLocationsLocationsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
func (o GetSyntheticLocationsLocationsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GetSyntheticNodesNode struct {
	// The version of the Active Gate
	ActiveGateVersion string `pulumi:"activeGateVersion"`
	// Specifies whether the Active Gate  has the Auto update option enabled
	AutoUpdate bool `pulumi:"autoUpdate"`
	// Specifies whether Browser Monitors are enabled or not
	BrowserMonitors bool `pulumi:"browserMonitors"`
	// The health check status of the synthetic node
	HealthCheckStatus string `pulumi:"healthCheckStatus"`
	// The hostname of a node
	Hostname string `pulumi:"hostname"`
	// The ID of a node for usage within `SyntheticLocation`
	Id string `pulumi:"id"`
	// The known IP addresses of the node
	Ips []string `pulumi:"ips"`
	// Specifies whether the Active Gate has the One Agent routing enabled
	OneAgentRouting bool `pulumi:"oneAgentRouting"`
	// The Active Gate's host operating system
	OperatingSystem string `pulumi:"operatingSystem"`
	// The version of the synthetic player
	PlayerVersion string `pulumi:"playerVersion"`
	// The status of the synthetic node
	Status string `pulumi:"status"`
	// The version of a node
	Version string `pulumi:"version"`
}

// GetSyntheticNodesNodeInput is an input type that accepts GetSyntheticNodesNodeArgs and GetSyntheticNodesNodeOutput values.
// You can construct a concrete instance of `GetSyntheticNodesNodeInput` via:
//
//	GetSyntheticNodesNodeArgs{...}
type GetSyntheticNodesNodeInput interface {
	pulumi.Input

	ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput
	ToGetSyntheticNodesNodeOutputWithContext(context.Context) GetSyntheticNodesNodeOutput
}

type GetSyntheticNodesNodeArgs struct {
	// The version of the Active Gate
	ActiveGateVersion pulumi.StringInput `pulumi:"activeGateVersion"`
	// Specifies whether the Active Gate  has the Auto update option enabled
	AutoUpdate pulumi.BoolInput `pulumi:"autoUpdate"`
	// Specifies whether Browser Monitors are enabled or not
	BrowserMonitors pulumi.BoolInput `pulumi:"browserMonitors"`
	// The health check status of the synthetic node
	HealthCheckStatus pulumi.StringInput `pulumi:"healthCheckStatus"`
	// The hostname of a node
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The ID of a node for usage within `SyntheticLocation`
	Id pulumi.StringInput `pulumi:"id"`
	// The known IP addresses of the node
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Specifies whether the Active Gate has the One Agent routing enabled
	OneAgentRouting pulumi.BoolInput `pulumi:"oneAgentRouting"`
	// The Active Gate's host operating system
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
	// The version of the synthetic player
	PlayerVersion pulumi.StringInput `pulumi:"playerVersion"`
	// The status of the synthetic node
	Status pulumi.StringInput `pulumi:"status"`
	// The version of a node
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetSyntheticNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticNodesNode)(nil)).Elem()
}

func (i GetSyntheticNodesNodeArgs) ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput {
	return i.ToGetSyntheticNodesNodeOutputWithContext(context.Background())
}

func (i GetSyntheticNodesNodeArgs) ToGetSyntheticNodesNodeOutputWithContext(ctx context.Context) GetSyntheticNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticNodesNodeOutput)
}

// GetSyntheticNodesNodeArrayInput is an input type that accepts GetSyntheticNodesNodeArray and GetSyntheticNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetSyntheticNodesNodeArrayInput` via:
//
//	GetSyntheticNodesNodeArray{ GetSyntheticNodesNodeArgs{...} }
type GetSyntheticNodesNodeArrayInput interface {
	pulumi.Input

	ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput
	ToGetSyntheticNodesNodeArrayOutputWithContext(context.Context) GetSyntheticNodesNodeArrayOutput
}

type GetSyntheticNodesNodeArray []GetSyntheticNodesNodeInput

func (GetSyntheticNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSyntheticNodesNode)(nil)).Elem()
}

func (i GetSyntheticNodesNodeArray) ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput {
	return i.ToGetSyntheticNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetSyntheticNodesNodeArray) ToGetSyntheticNodesNodeArrayOutputWithContext(ctx context.Context) GetSyntheticNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticNodesNodeArrayOutput)
}

type GetSyntheticNodesNodeOutput struct{ *pulumi.OutputState }

func (GetSyntheticNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticNodesNode)(nil)).Elem()
}

func (o GetSyntheticNodesNodeOutput) ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput {
	return o
}

func (o GetSyntheticNodesNodeOutput) ToGetSyntheticNodesNodeOutputWithContext(ctx context.Context) GetSyntheticNodesNodeOutput {
	return o
}

// The version of the Active Gate
func (o GetSyntheticNodesNodeOutput) ActiveGateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.ActiveGateVersion }).(pulumi.StringOutput)
}

// Specifies whether the Active Gate  has the Auto update option enabled
func (o GetSyntheticNodesNodeOutput) AutoUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.AutoUpdate }).(pulumi.BoolOutput)
}

// Specifies whether Browser Monitors are enabled or not
func (o GetSyntheticNodesNodeOutput) BrowserMonitors() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.BrowserMonitors }).(pulumi.BoolOutput)
}

// The health check status of the synthetic node
func (o GetSyntheticNodesNodeOutput) HealthCheckStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.HealthCheckStatus }).(pulumi.StringOutput)
}

// The hostname of a node
func (o GetSyntheticNodesNodeOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Hostname }).(pulumi.StringOutput)
}

// The ID of a node for usage within `SyntheticLocation`
func (o GetSyntheticNodesNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Id }).(pulumi.StringOutput)
}

// The known IP addresses of the node
func (o GetSyntheticNodesNodeOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Specifies whether the Active Gate has the One Agent routing enabled
func (o GetSyntheticNodesNodeOutput) OneAgentRouting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.OneAgentRouting }).(pulumi.BoolOutput)
}

// The Active Gate's host operating system
func (o GetSyntheticNodesNodeOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

// The version of the synthetic player
func (o GetSyntheticNodesNodeOutput) PlayerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.PlayerVersion }).(pulumi.StringOutput)
}

// The status of the synthetic node
func (o GetSyntheticNodesNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Status }).(pulumi.StringOutput)
}

// The version of a node
func (o GetSyntheticNodesNodeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Version }).(pulumi.StringOutput)
}

type GetSyntheticNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetSyntheticNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSyntheticNodesNode)(nil)).Elem()
}

func (o GetSyntheticNodesNodeArrayOutput) ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput {
	return o
}

func (o GetSyntheticNodesNodeArrayOutput) ToGetSyntheticNodesNodeArrayOutputWithContext(ctx context.Context) GetSyntheticNodesNodeArrayOutput {
	return o
}

func (o GetSyntheticNodesNodeArrayOutput) Index(i pulumi.IntInput) GetSyntheticNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSyntheticNodesNode {
		return vs[0].([]GetSyntheticNodesNode)[vs[1].(int)]
	}).(GetSyntheticNodesNodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesCustomHandledExceptionsInput)(nil)).Elem(), ServiceFailureExceptionRulesCustomHandledExceptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesCustomHandledExceptionsPtrInput)(nil)).Elem(), ServiceFailureExceptionRulesCustomHandledExceptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionInput)(nil)).Elem(), ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayInput)(nil)).Elem(), ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesIgnoredExceptionsInput)(nil)).Elem(), ServiceFailureExceptionRulesIgnoredExceptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesIgnoredExceptionsPtrInput)(nil)).Elem(), ServiceFailureExceptionRulesIgnoredExceptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionInput)(nil)).Elem(), ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayInput)(nil)).Elem(), ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesSuccessForcingExceptionsInput)(nil)).Elem(), ServiceFailureExceptionRulesSuccessForcingExceptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesSuccessForcingExceptionsPtrInput)(nil)).Elem(), ServiceFailureExceptionRulesSuccessForcingExceptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionInput)(nil)).Elem(), ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayInput)(nil)).Elem(), ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestConditionsInput)(nil)).Elem(), ServiceFullWebRequestConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestConditionsPtrInput)(nil)).Elem(), ServiceFullWebRequestConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestConditionsConditionInput)(nil)).Elem(), ServiceFullWebRequestConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestConditionsConditionArrayInput)(nil)).Elem(), ServiceFullWebRequestConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNamePtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrInput)(nil)).Elem(), ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceConditionsInput)(nil)).Elem(), ServiceFullWebServiceConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceConditionsPtrInput)(nil)).Elem(), ServiceFullWebServiceConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceConditionsConditionInput)(nil)).Elem(), ServiceFullWebServiceConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceConditionsConditionArrayInput)(nil)).Elem(), ServiceFullWebServiceConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNamePtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamePtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespacePtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrInput)(nil)).Elem(), ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHttpFailureBrokenLinksInput)(nil)).Elem(), ServiceHttpFailureBrokenLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHttpFailureBrokenLinksPtrInput)(nil)).Elem(), ServiceHttpFailureBrokenLinksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHttpFailureHttpResponseCodesInput)(nil)).Elem(), ServiceHttpFailureHttpResponseCodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHttpFailureHttpResponseCodesPtrInput)(nil)).Elem(), ServiceHttpFailureHttpResponseCodesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionInput)(nil)).Elem(), ServiceNamingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionArrayInput)(nil)).Elem(), ServiceNamingConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionInput)(nil)).Elem(), ServiceNamingConditionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionArrayInput)(nil)).Elem(), ServiceNamingConditionConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeInput)(nil)).Elem(), ServiceNamingConditionConditionApplicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionApplicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionApplicationTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionApplicationTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionApplicationTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeInput)(nil)).Elem(), ServiceNamingConditionConditionAzureComputeModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionAzureComputeModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionAzureComputeModeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureComputeModeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionAzureComputeModeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureSkuComparisionInput)(nil)).Elem(), ServiceNamingConditionConditionAzureSkuComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureSkuComparisionArrayInput)(nil)).Elem(), ServiceNamingConditionConditionAzureSkuComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureSkusInput)(nil)).Elem(), ServiceNamingConditionConditionAzureSkusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionAzureSkusArrayInput)(nil)).Elem(), ServiceNamingConditionConditionAzureSkusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBaseComparisonBasicInput)(nil)).Elem(), ServiceNamingConditionConditionBaseComparisonBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBaseComparisonBasicArrayInput)(nil)).Elem(), ServiceNamingConditionConditionBaseComparisonBasicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBaseConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionBaseConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBaseConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionBaseConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBitnessInput)(nil)).Elem(), ServiceNamingConditionConditionBitnessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBitnessArrayInput)(nil)).Elem(), ServiceNamingConditionConditionBitnessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBitnessComparisionInput)(nil)).Elem(), ServiceNamingConditionConditionBitnessComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionBitnessComparisionArrayInput)(nil)).Elem(), ServiceNamingConditionConditionBitnessComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeInput)(nil)).Elem(), ServiceNamingConditionConditionCloudTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCloudTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionCloudTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCloudTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCloudTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeInput)(nil)).Elem(), ServiceNamingConditionConditionCustomApplicationTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomApplicationTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionCustomApplicationTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomApplicationTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomHostMetadataDynamicKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomHostMetadataDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyInput)(nil)).Elem(), ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyInput)(nil)).Elem(), ServiceNamingConditionConditionDatabaseTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionDatabaseTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionDatabaseTopologyComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDatabaseTopologyComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionDatabaseTopologyComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderInput)(nil)).Elem(), ServiceNamingConditionConditionDcrumDecoderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderArrayInput)(nil)).Elem(), ServiceNamingConditionConditionDcrumDecoderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionDcrumDecoderComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionDcrumDecoderComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionDcrumDecoderComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionEntityInput)(nil)).Elem(), ServiceNamingConditionConditionEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionEntityArrayInput)(nil)).Elem(), ServiceNamingConditionConditionEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionEntityIdComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionEntityIdComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionEntityIdComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionEntityIdComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHostTechInput)(nil)).Elem(), ServiceNamingConditionConditionHostTechArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHostTechArrayInput)(nil)).Elem(), ServiceNamingConditionConditionHostTechArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHostTechValueInput)(nil)).Elem(), ServiceNamingConditionConditionHostTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHostTechValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionHostTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHypervisorInput)(nil)).Elem(), ServiceNamingConditionConditionHypervisorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHypervisorArrayInput)(nil)).Elem(), ServiceNamingConditionConditionHypervisorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHypervisorTypeComparisionInput)(nil)).Elem(), ServiceNamingConditionConditionHypervisorTypeComparisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionHypervisorTypeComparisionArrayInput)(nil)).Elem(), ServiceNamingConditionConditionHypervisorTypeComparisionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedNameComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedNameComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedNameComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedStringComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedStringComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedStringComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonValueInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagComparisonValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagValueInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIndexedTagValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionIndexedTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIntegerInput)(nil)).Elem(), ServiceNamingConditionConditionIntegerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIntegerArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIntegerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIntegerComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIntegerComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIntegerComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIntegerComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIpaddressInput)(nil)).Elem(), ServiceNamingConditionConditionIpaddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIpaddressArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIpaddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIpaddressComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionIpaddressComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionIpaddressComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionIpaddressComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformInput)(nil)).Elem(), ServiceNamingConditionConditionMobilePlatformArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformArrayInput)(nil)).Elem(), ServiceNamingConditionConditionMobilePlatformArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionMobilePlatformComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionMobilePlatformComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionMobilePlatformComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsArchInput)(nil)).Elem(), ServiceNamingConditionConditionOsArchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsArchArrayInput)(nil)).Elem(), ServiceNamingConditionConditionOsArchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsTypeInput)(nil)).Elem(), ServiceNamingConditionConditionOsTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionOsTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsarchitectureComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionOsarchitectureComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOsarchitectureComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionOsarchitectureComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOstypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionOstypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionOstypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionOstypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeInput)(nil)).Elem(), ServiceNamingConditionConditionPaasTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionPaasTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionPaasTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionPaasTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionPaasTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataInput)(nil)).Elem(), ServiceNamingConditionConditionProcessMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataArrayInput)(nil)).Elem(), ServiceNamingConditionConditionProcessMetadataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionProcessMetadataConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionProcessMetadataConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionProcessMetadataConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTopologyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTopologyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTopologyComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTopologyComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTopologyComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeArrayInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionServiceTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionServiceTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleHostTechComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleHostTechComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonValueInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleHostTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleTechComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleTechComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonValueInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSimpleTechComparisonValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionSimpleTechComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringInput)(nil)).Elem(), ServiceNamingConditionConditionStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringArrayInput)(nil)).Elem(), ServiceNamingConditionConditionStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionStringComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionStringComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringConditionKeyInput)(nil)).Elem(), ServiceNamingConditionConditionStringConditionKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringConditionKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionStringConditionKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringKeyInput)(nil)).Elem(), ServiceNamingConditionConditionStringKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionStringKeyArrayInput)(nil)).Elem(), ServiceNamingConditionConditionStringKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineInput)(nil)).Elem(), ServiceNamingConditionConditionSyntheticEngineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineArrayInput)(nil)).Elem(), ServiceNamingConditionConditionSyntheticEngineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineTypeComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionSyntheticEngineTypeComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionSyntheticEngineTypeComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagInput)(nil)).Elem(), ServiceNamingConditionConditionTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagArrayInput)(nil)).Elem(), ServiceNamingConditionConditionTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonInput)(nil)).Elem(), ServiceNamingConditionConditionTagComparisonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonArrayInput)(nil)).Elem(), ServiceNamingConditionConditionTagComparisonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonValueInput)(nil)).Elem(), ServiceNamingConditionConditionTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagComparisonValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionTagComparisonValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagValueInput)(nil)).Elem(), ServiceNamingConditionConditionTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTagValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTechInput)(nil)).Elem(), ServiceNamingConditionConditionTechArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTechArrayInput)(nil)).Elem(), ServiceNamingConditionConditionTechArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTechValueInput)(nil)).Elem(), ServiceNamingConditionConditionTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNamingConditionConditionTechValuePtrInput)(nil)).Elem(), ServiceNamingConditionConditionTechValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPtrInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayInput)(nil)).Elem(), SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteReliabilityGuardianObjectivesInput)(nil)).Elem(), SiteReliabilityGuardianObjectivesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteReliabilityGuardianObjectivesPtrInput)(nil)).Elem(), SiteReliabilityGuardianObjectivesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteReliabilityGuardianObjectivesObjectiveInput)(nil)).Elem(), SiteReliabilityGuardianObjectivesObjectiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteReliabilityGuardianObjectivesObjectiveArrayInput)(nil)).Elem(), SiteReliabilityGuardianObjectivesObjectiveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteReliabilityGuardianVariablesInput)(nil)).Elem(), SiteReliabilityGuardianVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteReliabilityGuardianVariablesPtrInput)(nil)).Elem(), SiteReliabilityGuardianVariablesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteReliabilityGuardianVariablesVariableInput)(nil)).Elem(), SiteReliabilityGuardianVariablesVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteReliabilityGuardianVariablesVariableArrayInput)(nil)).Elem(), SiteReliabilityGuardianVariablesVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloErrorBudgetBurnRateInput)(nil)).Elem(), SloErrorBudgetBurnRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloErrorBudgetBurnRatePtrInput)(nil)).Elem(), SloErrorBudgetBurnRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloV2ErrorBudgetBurnRateInput)(nil)).Elem(), SloV2ErrorBudgetBurnRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloV2ErrorBudgetBurnRatePtrInput)(nil)).Elem(), SloV2ErrorBudgetBurnRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanCaptureRuleMatchesInput)(nil)).Elem(), SpanCaptureRuleMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanCaptureRuleMatchesPtrInput)(nil)).Elem(), SpanCaptureRuleMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanCaptureRuleMatchesMatchInput)(nil)).Elem(), SpanCaptureRuleMatchesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanCaptureRuleMatchesMatchArrayInput)(nil)).Elem(), SpanCaptureRuleMatchesMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanContextPropagationMatchesInput)(nil)).Elem(), SpanContextPropagationMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanContextPropagationMatchesPtrInput)(nil)).Elem(), SpanContextPropagationMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanContextPropagationMatchesMatchInput)(nil)).Elem(), SpanContextPropagationMatchesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanContextPropagationMatchesMatchArrayInput)(nil)).Elem(), SpanContextPropagationMatchesMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanEntryPointMatchesInput)(nil)).Elem(), SpanEntryPointMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanEntryPointMatchesPtrInput)(nil)).Elem(), SpanEntryPointMatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanEntryPointMatchesMatchInput)(nil)).Elem(), SpanEntryPointMatchesMatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpanEntryPointMatchesMatchArrayInput)(nil)).Elem(), SpanEntryPointMatchesMatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsDailyRecurrenceInput)(nil)).Elem(), UpdateWindowsDailyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsDailyRecurrencePtrInput)(nil)).Elem(), UpdateWindowsDailyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsDailyRecurrenceRecurrenceRangeInput)(nil)).Elem(), UpdateWindowsDailyRecurrenceRecurrenceRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsDailyRecurrenceRecurrenceRangePtrInput)(nil)).Elem(), UpdateWindowsDailyRecurrenceRecurrenceRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsDailyRecurrenceUpdateTimeInput)(nil)).Elem(), UpdateWindowsDailyRecurrenceUpdateTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsDailyRecurrenceUpdateTimePtrInput)(nil)).Elem(), UpdateWindowsDailyRecurrenceUpdateTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceInput)(nil)).Elem(), UpdateWindowsMonthlyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsMonthlyRecurrencePtrInput)(nil)).Elem(), UpdateWindowsMonthlyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceRecurrenceRangeInput)(nil)).Elem(), UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrInput)(nil)).Elem(), UpdateWindowsMonthlyRecurrenceRecurrenceRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceUpdateTimeInput)(nil)).Elem(), UpdateWindowsMonthlyRecurrenceUpdateTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsMonthlyRecurrenceUpdateTimePtrInput)(nil)).Elem(), UpdateWindowsMonthlyRecurrenceUpdateTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsOnceRecurrenceInput)(nil)).Elem(), UpdateWindowsOnceRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsOnceRecurrencePtrInput)(nil)).Elem(), UpdateWindowsOnceRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsOnceRecurrenceRecurrenceRangeInput)(nil)).Elem(), UpdateWindowsOnceRecurrenceRecurrenceRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsOnceRecurrenceRecurrenceRangePtrInput)(nil)).Elem(), UpdateWindowsOnceRecurrenceRecurrenceRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceInput)(nil)).Elem(), UpdateWindowsWeeklyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsWeeklyRecurrencePtrInput)(nil)).Elem(), UpdateWindowsWeeklyRecurrenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceRecurrenceRangeInput)(nil)).Elem(), UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrInput)(nil)).Elem(), UpdateWindowsWeeklyRecurrenceRecurrenceRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceSelectedWeekDaysInput)(nil)).Elem(), UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrInput)(nil)).Elem(), UpdateWindowsWeeklyRecurrenceSelectedWeekDaysArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceUpdateTimeInput)(nil)).Elem(), UpdateWindowsWeeklyRecurrenceUpdateTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateWindowsWeeklyRecurrenceUpdateTimePtrInput)(nil)).Elem(), UpdateWindowsWeeklyRecurrenceUpdateTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlBasedSamplingQueryParametersInput)(nil)).Elem(), UrlBasedSamplingQueryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlBasedSamplingQueryParametersPtrInput)(nil)).Elem(), UrlBasedSamplingQueryParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlBasedSamplingQueryParametersParameterInput)(nil)).Elem(), UrlBasedSamplingQueryParametersParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UrlBasedSamplingQueryParametersParameterArrayInput)(nil)).Elem(), UrlBasedSamplingQueryParametersParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserActionMetricsFiltersInput)(nil)).Elem(), UserActionMetricsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserActionMetricsFiltersPtrInput)(nil)).Elem(), UserActionMetricsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserActionMetricsFiltersFilterInput)(nil)).Elem(), UserActionMetricsFiltersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserActionMetricsFiltersFilterArrayInput)(nil)).Elem(), UserActionMetricsFiltersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserActionMetricsValueInput)(nil)).Elem(), UserActionMetricsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserActionMetricsValuePtrInput)(nil)).Elem(), UserActionMetricsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPermissionsInput)(nil)).Elem(), UserGroupPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPermissionsPtrInput)(nil)).Elem(), UserGroupPermissionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPermissionsGrantInput)(nil)).Elem(), UserGroupPermissionsGrantArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserGroupPermissionsGrantArrayInput)(nil)).Elem(), UserGroupPermissionsGrantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSessionMetricsFiltersInput)(nil)).Elem(), UserSessionMetricsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSessionMetricsFiltersPtrInput)(nil)).Elem(), UserSessionMetricsFiltersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSessionMetricsFiltersFilterInput)(nil)).Elem(), UserSessionMetricsFiltersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSessionMetricsFiltersFilterArrayInput)(nil)).Elem(), UserSessionMetricsFiltersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSessionMetricsValueInput)(nil)).Elem(), UserSessionMetricsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserSessionMetricsValuePtrInput)(nil)).Elem(), UserSessionMetricsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesDroppedPacketsDetectionInput)(nil)).Elem(), VmwareAnomaliesDroppedPacketsDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesDroppedPacketsDetectionPtrInput)(nil)).Elem(), VmwareAnomaliesDroppedPacketsDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsInput)(nil)).Elem(), VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrInput)(nil)).Elem(), VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesEsxiHighCpuDetectionInput)(nil)).Elem(), VmwareAnomaliesEsxiHighCpuDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesEsxiHighCpuDetectionPtrInput)(nil)).Elem(), VmwareAnomaliesEsxiHighCpuDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsInput)(nil)).Elem(), VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrInput)(nil)).Elem(), VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesEsxiHighMemoryDetectionInput)(nil)).Elem(), VmwareAnomaliesEsxiHighMemoryDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesEsxiHighMemoryDetectionPtrInput)(nil)).Elem(), VmwareAnomaliesEsxiHighMemoryDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsInput)(nil)).Elem(), VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrInput)(nil)).Elem(), VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesGuestCpuLimitDetectionInput)(nil)).Elem(), VmwareAnomaliesGuestCpuLimitDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesGuestCpuLimitDetectionPtrInput)(nil)).Elem(), VmwareAnomaliesGuestCpuLimitDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsInput)(nil)).Elem(), VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrInput)(nil)).Elem(), VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesLowDatastoreSpaceDetectionInput)(nil)).Elem(), VmwareAnomaliesLowDatastoreSpaceDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesLowDatastoreSpaceDetectionPtrInput)(nil)).Elem(), VmwareAnomaliesLowDatastoreSpaceDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsInput)(nil)).Elem(), VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrInput)(nil)).Elem(), VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesOverloadedStorageDetectionInput)(nil)).Elem(), VmwareAnomaliesOverloadedStorageDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesOverloadedStorageDetectionPtrInput)(nil)).Elem(), VmwareAnomaliesOverloadedStorageDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsInput)(nil)).Elem(), VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrInput)(nil)).Elem(), VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesSlowPhysicalStorageDetectionInput)(nil)).Elem(), VmwareAnomaliesSlowPhysicalStorageDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesSlowPhysicalStorageDetectionPtrInput)(nil)).Elem(), VmwareAnomaliesSlowPhysicalStorageDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsInput)(nil)).Elem(), VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrInput)(nil)).Elem(), VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesUndersizedStorageDetectionInput)(nil)).Elem(), VmwareAnomaliesUndersizedStorageDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesUndersizedStorageDetectionPtrInput)(nil)).Elem(), VmwareAnomaliesUndersizedStorageDetectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsInput)(nil)).Elem(), VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrInput)(nil)).Elem(), VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeCriteriaInput)(nil)).Elem(), VulnerabilityCodeCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeCriteriaPtrInput)(nil)).Elem(), VulnerabilityCodeCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeMetadataInput)(nil)).Elem(), VulnerabilityCodeMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeMetadataPtrInput)(nil)).Elem(), VulnerabilityCodeMetadataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeResourceAttributeConditionsInput)(nil)).Elem(), VulnerabilityCodeResourceAttributeConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeResourceAttributeConditionsPtrInput)(nil)).Elem(), VulnerabilityCodeResourceAttributeConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionInput)(nil)).Elem(), VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayInput)(nil)).Elem(), VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeVulnerabilityDetectionControlInput)(nil)).Elem(), VulnerabilityCodeVulnerabilityDetectionControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilityCodeVulnerabilityDetectionControlPtrInput)(nil)).Elem(), VulnerabilityCodeVulnerabilityDetectionControlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilitySettingsTechnologiesInput)(nil)).Elem(), VulnerabilitySettingsTechnologiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VulnerabilitySettingsTechnologiesPtrInput)(nil)).Elem(), VulnerabilitySettingsTechnologiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesErrorRateInput)(nil)).Elem(), WebAppAnomaliesErrorRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesErrorRatePtrInput)(nil)).Elem(), WebAppAnomaliesErrorRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateAutoInput)(nil)).Elem(), WebAppAnomaliesErrorRateErrorRateAutoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateAutoPtrInput)(nil)).Elem(), WebAppAnomaliesErrorRateErrorRateAutoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionInput)(nil)).Elem(), WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrInput)(nil)).Elem(), WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateFixedInput)(nil)).Elem(), WebAppAnomaliesErrorRateErrorRateFixedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesErrorRateErrorRateFixedPtrInput)(nil)).Elem(), WebAppAnomaliesErrorRateErrorRateFixedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeInput)(nil)).Elem(), WebAppAnomaliesResponseTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimePtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeAutoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoPtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeAutoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeFixedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedPtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeFixedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrInput)(nil)).Elem(), WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesTrafficDropsInput)(nil)).Elem(), WebAppAnomaliesTrafficDropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesTrafficDropsPtrInput)(nil)).Elem(), WebAppAnomaliesTrafficDropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesTrafficDropsTrafficDropsInput)(nil)).Elem(), WebAppAnomaliesTrafficDropsTrafficDropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesTrafficDropsTrafficDropsPtrInput)(nil)).Elem(), WebAppAnomaliesTrafficDropsTrafficDropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesTrafficSpikesInput)(nil)).Elem(), WebAppAnomaliesTrafficSpikesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesTrafficSpikesPtrInput)(nil)).Elem(), WebAppAnomaliesTrafficSpikesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesTrafficSpikesTrafficSpikesInput)(nil)).Elem(), WebAppAnomaliesTrafficSpikesTrafficSpikesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppAnomaliesTrafficSpikesTrafficSpikesPtrInput)(nil)).Elem(), WebAppAnomaliesTrafficSpikesTrafficSpikesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppCustomErrorsErrorRulesInput)(nil)).Elem(), WebAppCustomErrorsErrorRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppCustomErrorsErrorRulesPtrInput)(nil)).Elem(), WebAppCustomErrorsErrorRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppCustomErrorsErrorRulesErrorRuleInput)(nil)).Elem(), WebAppCustomErrorsErrorRulesErrorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppCustomErrorsErrorRulesErrorRuleArrayInput)(nil)).Elem(), WebAppCustomErrorsErrorRulesErrorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsInput)(nil)).Elem(), WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppEnablementRumInput)(nil)).Elem(), WebAppEnablementRumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppEnablementRumPtrInput)(nil)).Elem(), WebAppEnablementRumArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppEnablementSessionReplayInput)(nil)).Elem(), WebAppEnablementSessionReplayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppEnablementSessionReplayPtrInput)(nil)).Elem(), WebAppEnablementSessionReplayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceCustomThresholdsInput)(nil)).Elem(), WebAppKeyPerformanceCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceCustomThresholdsPtrInput)(nil)).Elem(), WebAppKeyPerformanceCustomThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceLoadFallbackThresholdsInput)(nil)).Elem(), WebAppKeyPerformanceLoadFallbackThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceLoadFallbackThresholdsPtrInput)(nil)).Elem(), WebAppKeyPerformanceLoadFallbackThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceLoadThresholdsInput)(nil)).Elem(), WebAppKeyPerformanceLoadThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceLoadThresholdsPtrInput)(nil)).Elem(), WebAppKeyPerformanceLoadThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceXhrFallbackThresholdsInput)(nil)).Elem(), WebAppKeyPerformanceXhrFallbackThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceXhrFallbackThresholdsPtrInput)(nil)).Elem(), WebAppKeyPerformanceXhrFallbackThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceXhrThresholdsInput)(nil)).Elem(), WebAppKeyPerformanceXhrThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppKeyPerformanceXhrThresholdsPtrInput)(nil)).Elem(), WebAppKeyPerformanceXhrThresholdsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsErrorRulesInput)(nil)).Elem(), WebAppRequestErrorsErrorRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsErrorRulesPtrInput)(nil)).Elem(), WebAppRequestErrorsErrorRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRuleInput)(nil)).Elem(), WebAppRequestErrorsErrorRulesErrorRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRuleArrayInput)(nil)).Elem(), WebAppRequestErrorsErrorRulesErrorRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsInput)(nil)).Elem(), WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsInput)(nil)).Elem(), WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsInput)(nil)).Elem(), WebApplicationConversionGoalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsPtrInput)(nil)).Elem(), WebApplicationConversionGoalsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalInput)(nil)).Elem(), WebApplicationConversionGoalsGoalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalArrayInput)(nil)).Elem(), WebApplicationConversionGoalsGoalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalDestinationInput)(nil)).Elem(), WebApplicationConversionGoalsGoalDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalDestinationPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalUserActionInput)(nil)).Elem(), WebApplicationConversionGoalsGoalUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalUserActionPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDurationInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitDurationPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumActionInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitNumActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationConversionGoalsGoalVisitNumActionPtrInput)(nil)).Elem(), WebApplicationConversionGoalsGoalVisitNumActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationCustomActionApdexSettingsInput)(nil)).Elem(), WebApplicationCustomActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationCustomActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationCustomActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionInput)(nil)).Elem(), WebApplicationKeyUserActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionArrayInput)(nil)).Elem(), WebApplicationKeyUserActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionActionInput)(nil)).Elem(), WebApplicationKeyUserActionActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationKeyUserActionActionArrayInput)(nil)).Elem(), WebApplicationKeyUserActionActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationLoadActionApdexSettingsInput)(nil)).Elem(), WebApplicationLoadActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationLoadActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationLoadActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsPtrInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCaptureInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMetaDataCaptureSettingsCaptureArrayInput)(nil)).Elem(), WebApplicationMetaDataCaptureSettingsCaptureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCapturePtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupportInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptFrameworkSupportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayInput)(nil)).Elem(), WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationSessionReplayConfigInput)(nil)).Elem(), WebApplicationSessionReplayConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationSessionReplayConfigPtrInput)(nil)).Elem(), WebApplicationSessionReplayConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPtrInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPropertyInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionAndSessionPropertiesPropertyArrayInput)(nil)).Elem(), WebApplicationUserActionAndSessionPropertiesPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsInput)(nil)).Elem(), WebApplicationUserTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsPtrInput)(nil)).Elem(), WebApplicationUserTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsTagInput)(nil)).Elem(), WebApplicationUserTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsTagArrayInput)(nil)).Elem(), WebApplicationUserTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationWaterfallSettingsInput)(nil)).Elem(), WebApplicationWaterfallSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationWaterfallSettingsPtrInput)(nil)).Elem(), WebApplicationWaterfallSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationXhrActionApdexSettingsInput)(nil)).Elem(), WebApplicationXhrActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationXhrActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationXhrActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersInput)(nil)).Elem(), WebhookNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersPtrInput)(nil)).Elem(), WebhookNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersHeaderInput)(nil)).Elem(), WebhookNotificationHeadersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersHeaderArrayInput)(nil)).Elem(), WebhookNotificationHeadersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationOauth2CredentialsInput)(nil)).Elem(), WebhookNotificationOauth2CredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationOauth2CredentialsPtrInput)(nil)).Elem(), WebhookNotificationOauth2CredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersInput)(nil)).Elem(), XmattersNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersPtrInput)(nil)).Elem(), XmattersNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersHeaderInput)(nil)).Elem(), XmattersNotificationHeadersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersHeaderArrayInput)(nil)).Elem(), XmattersNotificationHeadersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingProfilesValueInput)(nil)).Elem(), GetAlertingProfilesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingProfilesValueArrayInput)(nil)).Elem(), GetAlertingProfilesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiTokensApiTokenInput)(nil)).Elem(), GetApiTokensApiTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetApiTokensApiTokenArrayInput)(nil)).Elem(), GetApiTokensApiTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDocumentsValueInput)(nil)).Elem(), GetDocumentsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDocumentsValueArrayInput)(nil)).Elem(), GetDocumentsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityInput)(nil)).Elem(), GetEntitiesEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityArrayInput)(nil)).Elem(), GetEntitiesEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagInput)(nil)).Elem(), GetEntitiesEntityTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagArrayInput)(nil)).Elem(), GetEntitiesEntityTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagTagInput)(nil)).Elem(), GetEntitiesEntityTagTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagTagArrayInput)(nil)).Elem(), GetEntitiesEntityTagTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGenericSettingsValueInput)(nil)).Elem(), GetGenericSettingsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGenericSettingsValueArrayInput)(nil)).Elem(), GetGenericSettingsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGeoCitiesCityInput)(nil)).Elem(), GetGeoCitiesCityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGeoCitiesCityArrayInput)(nil)).Elem(), GetGeoCitiesCityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGeoCountriesCountryInput)(nil)).Elem(), GetGeoCountriesCountryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGeoCountriesCountryArrayInput)(nil)).Elem(), GetGeoCountriesCountryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGeoRegionsRegionInput)(nil)).Elem(), GetGeoRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGeoRegionsRegionArrayInput)(nil)).Elem(), GetGeoRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHubItemsItemInput)(nil)).Elem(), GetHubItemsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHubItemsItemArrayInput)(nil)).Elem(), GetHubItemsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPoliciesPolicyInput)(nil)).Elem(), GetIamPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPoliciesPolicyArrayInput)(nil)).Elem(), GetIamPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementZonesValueInput)(nil)).Elem(), GetManagementZonesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementZonesValueArrayInput)(nil)).Elem(), GetManagementZonesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironmentInput)(nil)).Elem(), GetRemoteEnvironmentsRemoteEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironmentArrayInput)(nil)).Elem(), GetRemoteEnvironmentsRemoteEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsInput)(nil)).Elem(), GetSyntheticLocationsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsPtrInput)(nil)).Elem(), GetSyntheticLocationsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticNodesNodeInput)(nil)).Elem(), GetSyntheticNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticNodesNodeArrayInput)(nil)).Elem(), GetSyntheticNodesNodeArray{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesCustomHandledExceptionsOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesCustomHandledExceptionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesCustomHandledExceptionsCustomHandledExceptionArrayOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesIgnoredExceptionsOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesIgnoredExceptionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesIgnoredExceptionsCustomHandledExceptionArrayOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesSuccessForcingExceptionsOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesSuccessForcingExceptionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionOutput{})
	pulumi.RegisterOutputType(ServiceFailureExceptionRulesSuccessForcingExceptionsCustomHandledExceptionArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestConditionsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestConditionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestConditionsConditionOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverrideOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverrideOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsContextRootServiceIdContributorValueOverridePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNamePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverrideOutput{})
	pulumi.RegisterOutputType(ServiceFullWebRequestIdContributorsServerNameServiceIdContributorValueOverridePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceConditionsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceConditionsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceConditionsConditionOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorTransformationsTransformationArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverrideOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsApplicationIdServiceIdContributorValueOverridePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorTransformationsTransformationArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverrideOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsContextRootServiceIdContributorValueOverridePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNamePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorTransformationsTransformationArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverrideOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsServerNameServiceIdContributorValueOverridePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorTransformationsTransformationArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverrideOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNameServiceIdContributorValueOverridePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespacePtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsPtrOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorTransformationsTransformationArrayOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverrideOutput{})
	pulumi.RegisterOutputType(ServiceFullWebServiceIdContributorsWebServiceNamespaceServiceIdContributorValueOverridePtrOutput{})
	pulumi.RegisterOutputType(ServiceHttpFailureBrokenLinksOutput{})
	pulumi.RegisterOutputType(ServiceHttpFailureBrokenLinksPtrOutput{})
	pulumi.RegisterOutputType(ServiceHttpFailureHttpResponseCodesOutput{})
	pulumi.RegisterOutputType(ServiceHttpFailureHttpResponseCodesPtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionApplicationTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionApplicationTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionApplicationTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionApplicationTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureComputeModeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureComputeModeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureComputeModeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureComputeModeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureSkuComparisionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureSkuComparisionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureSkusOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionAzureSkusArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBaseComparisonBasicOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBaseComparisonBasicArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBaseConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBaseConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBitnessOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBitnessArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBitnessComparisionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionBitnessComparisionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCloudTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCloudTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCloudTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCloudTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomApplicationTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomApplicationTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomApplicationTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomApplicationTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataConditionKeyDynamicKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomHostMetadataDynamicKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataConditionKeyDynamicKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionCustomProcessMetadataDynamicKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDatabaseTopologyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDatabaseTopologyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDatabaseTopologyComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDatabaseTopologyComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDcrumDecoderOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDcrumDecoderArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDcrumDecoderComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionDcrumDecoderComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionEntityOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionEntityArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionEntityIdComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionEntityIdComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHostTechOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHostTechArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHostTechValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHostTechValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHypervisorOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHypervisorArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHypervisorTypeComparisionOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionHypervisorTypeComparisionArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedNameOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedNameArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedNameComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedNameComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedStringOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedStringArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedStringComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedStringComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagComparisonValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIndexedTagValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIntegerOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIntegerArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIntegerComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIntegerComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIpaddressOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIpaddressArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIpaddressComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionIpaddressComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionMobilePlatformOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionMobilePlatformArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionMobilePlatformComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionMobilePlatformComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsArchOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsArchArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsarchitectureComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOsarchitectureComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOstypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionOstypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionPaasTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionPaasTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionPaasTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionPaasTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionProcessMetadataOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionProcessMetadataArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionProcessMetadataConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionProcessMetadataConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTopologyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTopologyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTopologyComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTopologyComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTypeOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionServiceTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleHostTechComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleHostTechComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleHostTechComparisonValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleHostTechComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleTechComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleTechComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleTechComparisonValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSimpleTechComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringConditionKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringConditionKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringKeyOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionStringKeyArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSyntheticEngineOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSyntheticEngineArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSyntheticEngineTypeComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionSyntheticEngineTypeComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagComparisonOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagComparisonArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagComparisonValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagComparisonValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTagValuePtrOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTechOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTechArrayOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTechValueOutput{})
	pulumi.RegisterOutputType(ServiceNamingConditionConditionTechValuePtrOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPtrOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesPtrOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingAllowListRulesAllowListRuleArrayOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesPtrOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsPlaybackMaskingBlockListRulesBlockListRuleArrayOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesPtrOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingAllowListRulesAllowListRuleArrayOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesPtrOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMaskingPresetsRecordingMaskingBlockListRulesBlockListRuleArrayOutput{})
	pulumi.RegisterOutputType(SiteReliabilityGuardianObjectivesOutput{})
	pulumi.RegisterOutputType(SiteReliabilityGuardianObjectivesPtrOutput{})
	pulumi.RegisterOutputType(SiteReliabilityGuardianObjectivesObjectiveOutput{})
	pulumi.RegisterOutputType(SiteReliabilityGuardianObjectivesObjectiveArrayOutput{})
	pulumi.RegisterOutputType(SiteReliabilityGuardianVariablesOutput{})
	pulumi.RegisterOutputType(SiteReliabilityGuardianVariablesPtrOutput{})
	pulumi.RegisterOutputType(SiteReliabilityGuardianVariablesVariableOutput{})
	pulumi.RegisterOutputType(SiteReliabilityGuardianVariablesVariableArrayOutput{})
	pulumi.RegisterOutputType(SloErrorBudgetBurnRateOutput{})
	pulumi.RegisterOutputType(SloErrorBudgetBurnRatePtrOutput{})
	pulumi.RegisterOutputType(SloV2ErrorBudgetBurnRateOutput{})
	pulumi.RegisterOutputType(SloV2ErrorBudgetBurnRatePtrOutput{})
	pulumi.RegisterOutputType(SpanCaptureRuleMatchesOutput{})
	pulumi.RegisterOutputType(SpanCaptureRuleMatchesPtrOutput{})
	pulumi.RegisterOutputType(SpanCaptureRuleMatchesMatchOutput{})
	pulumi.RegisterOutputType(SpanCaptureRuleMatchesMatchArrayOutput{})
	pulumi.RegisterOutputType(SpanContextPropagationMatchesOutput{})
	pulumi.RegisterOutputType(SpanContextPropagationMatchesPtrOutput{})
	pulumi.RegisterOutputType(SpanContextPropagationMatchesMatchOutput{})
	pulumi.RegisterOutputType(SpanContextPropagationMatchesMatchArrayOutput{})
	pulumi.RegisterOutputType(SpanEntryPointMatchesOutput{})
	pulumi.RegisterOutputType(SpanEntryPointMatchesPtrOutput{})
	pulumi.RegisterOutputType(SpanEntryPointMatchesMatchOutput{})
	pulumi.RegisterOutputType(SpanEntryPointMatchesMatchArrayOutput{})
	pulumi.RegisterOutputType(UpdateWindowsDailyRecurrenceOutput{})
	pulumi.RegisterOutputType(UpdateWindowsDailyRecurrencePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsDailyRecurrenceRecurrenceRangeOutput{})
	pulumi.RegisterOutputType(UpdateWindowsDailyRecurrenceRecurrenceRangePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsDailyRecurrenceUpdateTimeOutput{})
	pulumi.RegisterOutputType(UpdateWindowsDailyRecurrenceUpdateTimePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsMonthlyRecurrenceOutput{})
	pulumi.RegisterOutputType(UpdateWindowsMonthlyRecurrencePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsMonthlyRecurrenceRecurrenceRangeOutput{})
	pulumi.RegisterOutputType(UpdateWindowsMonthlyRecurrenceRecurrenceRangePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsMonthlyRecurrenceUpdateTimeOutput{})
	pulumi.RegisterOutputType(UpdateWindowsMonthlyRecurrenceUpdateTimePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsOnceRecurrenceOutput{})
	pulumi.RegisterOutputType(UpdateWindowsOnceRecurrencePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsOnceRecurrenceRecurrenceRangeOutput{})
	pulumi.RegisterOutputType(UpdateWindowsOnceRecurrenceRecurrenceRangePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsWeeklyRecurrenceOutput{})
	pulumi.RegisterOutputType(UpdateWindowsWeeklyRecurrencePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsWeeklyRecurrenceRecurrenceRangeOutput{})
	pulumi.RegisterOutputType(UpdateWindowsWeeklyRecurrenceRecurrenceRangePtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysOutput{})
	pulumi.RegisterOutputType(UpdateWindowsWeeklyRecurrenceSelectedWeekDaysPtrOutput{})
	pulumi.RegisterOutputType(UpdateWindowsWeeklyRecurrenceUpdateTimeOutput{})
	pulumi.RegisterOutputType(UpdateWindowsWeeklyRecurrenceUpdateTimePtrOutput{})
	pulumi.RegisterOutputType(UrlBasedSamplingQueryParametersOutput{})
	pulumi.RegisterOutputType(UrlBasedSamplingQueryParametersPtrOutput{})
	pulumi.RegisterOutputType(UrlBasedSamplingQueryParametersParameterOutput{})
	pulumi.RegisterOutputType(UrlBasedSamplingQueryParametersParameterArrayOutput{})
	pulumi.RegisterOutputType(UserActionMetricsFiltersOutput{})
	pulumi.RegisterOutputType(UserActionMetricsFiltersPtrOutput{})
	pulumi.RegisterOutputType(UserActionMetricsFiltersFilterOutput{})
	pulumi.RegisterOutputType(UserActionMetricsFiltersFilterArrayOutput{})
	pulumi.RegisterOutputType(UserActionMetricsValueOutput{})
	pulumi.RegisterOutputType(UserActionMetricsValuePtrOutput{})
	pulumi.RegisterOutputType(UserGroupPermissionsOutput{})
	pulumi.RegisterOutputType(UserGroupPermissionsPtrOutput{})
	pulumi.RegisterOutputType(UserGroupPermissionsGrantOutput{})
	pulumi.RegisterOutputType(UserGroupPermissionsGrantArrayOutput{})
	pulumi.RegisterOutputType(UserSessionMetricsFiltersOutput{})
	pulumi.RegisterOutputType(UserSessionMetricsFiltersPtrOutput{})
	pulumi.RegisterOutputType(UserSessionMetricsFiltersFilterOutput{})
	pulumi.RegisterOutputType(UserSessionMetricsFiltersFilterArrayOutput{})
	pulumi.RegisterOutputType(UserSessionMetricsValueOutput{})
	pulumi.RegisterOutputType(UserSessionMetricsValuePtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesDroppedPacketsDetectionOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesDroppedPacketsDetectionPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesDroppedPacketsDetectionCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesEsxiHighCpuDetectionOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesEsxiHighCpuDetectionPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesEsxiHighCpuDetectionCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesEsxiHighMemoryDetectionOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesEsxiHighMemoryDetectionPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesEsxiHighMemoryDetectionCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesGuestCpuLimitDetectionOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesGuestCpuLimitDetectionPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesGuestCpuLimitDetectionCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesLowDatastoreSpaceDetectionOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesLowDatastoreSpaceDetectionPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesLowDatastoreSpaceDetectionCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesOverloadedStorageDetectionOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesOverloadedStorageDetectionPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesOverloadedStorageDetectionCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesSlowPhysicalStorageDetectionOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesSlowPhysicalStorageDetectionPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesSlowPhysicalStorageDetectionCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesUndersizedStorageDetectionOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesUndersizedStorageDetectionPtrOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsOutput{})
	pulumi.RegisterOutputType(VmwareAnomaliesUndersizedStorageDetectionCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeCriteriaOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeCriteriaPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeMetadataOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeMetadataPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeResourceAttributeConditionsOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeResourceAttributeConditionsPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeResourceAttributeConditionsResourceAttributeConditionArrayOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeVulnerabilityDetectionControlOutput{})
	pulumi.RegisterOutputType(VulnerabilityCodeVulnerabilityDetectionControlPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilitySettingsTechnologiesOutput{})
	pulumi.RegisterOutputType(VulnerabilitySettingsTechnologiesPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesErrorRateOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesErrorRatePtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesErrorRateErrorRateAutoOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesErrorRateErrorRateAutoPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesErrorRateErrorRateAutoOverAlertingProtectionPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesErrorRateErrorRateFixedOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesErrorRateErrorRateFixedPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimePtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeAutoOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeAutoPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeAutoOverAlertingProtectionPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeAllPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeAutoResponseTimeSlowestPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeFixedOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeFixedPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeFixedOverAlertingProtectionPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeAllPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesResponseTimeResponseTimeFixedResponseTimeSlowestPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesTrafficDropsOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesTrafficDropsPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesTrafficDropsTrafficDropsOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesTrafficDropsTrafficDropsPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesTrafficSpikesOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesTrafficSpikesPtrOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesTrafficSpikesTrafficSpikesOutput{})
	pulumi.RegisterOutputType(WebAppAnomaliesTrafficSpikesTrafficSpikesPtrOutput{})
	pulumi.RegisterOutputType(WebAppCustomErrorsErrorRulesOutput{})
	pulumi.RegisterOutputType(WebAppCustomErrorsErrorRulesPtrOutput{})
	pulumi.RegisterOutputType(WebAppCustomErrorsErrorRulesErrorRuleOutput{})
	pulumi.RegisterOutputType(WebAppCustomErrorsErrorRulesErrorRuleArrayOutput{})
	pulumi.RegisterOutputType(WebAppCustomErrorsErrorRulesErrorRuleCaptureSettingsOutput{})
	pulumi.RegisterOutputType(WebAppEnablementRumOutput{})
	pulumi.RegisterOutputType(WebAppEnablementRumPtrOutput{})
	pulumi.RegisterOutputType(WebAppEnablementSessionReplayOutput{})
	pulumi.RegisterOutputType(WebAppEnablementSessionReplayPtrOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceCustomThresholdsOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceCustomThresholdsPtrOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceLoadFallbackThresholdsOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceLoadFallbackThresholdsPtrOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceLoadThresholdsOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceLoadThresholdsPtrOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceXhrFallbackThresholdsOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceXhrFallbackThresholdsPtrOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceXhrThresholdsOutput{})
	pulumi.RegisterOutputType(WebAppKeyPerformanceXhrThresholdsPtrOutput{})
	pulumi.RegisterOutputType(WebAppRequestErrorsErrorRulesOutput{})
	pulumi.RegisterOutputType(WebAppRequestErrorsErrorRulesPtrOutput{})
	pulumi.RegisterOutputType(WebAppRequestErrorsErrorRulesErrorRuleOutput{})
	pulumi.RegisterOutputType(WebAppRequestErrorsErrorRulesErrorRuleArrayOutput{})
	pulumi.RegisterOutputType(WebAppRequestErrorsErrorRulesErrorRuleCaptureSettingsOutput{})
	pulumi.RegisterOutputType(WebAppRequestErrorsErrorRulesErrorRuleFilterSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalDestinationOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalDestinationPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalUserActionOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalUserActionPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitDurationOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitDurationPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitNumActionOutput{})
	pulumi.RegisterOutputType(WebApplicationConversionGoalsGoalVisitNumActionPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationCustomActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationCustomActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionActionOutput{})
	pulumi.RegisterOutputType(WebApplicationKeyUserActionActionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationLoadActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationLoadActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsCaptureOutput{})
	pulumi.RegisterOutputType(WebApplicationMetaDataCaptureSettingsCaptureArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsAdditionalEventHandlersPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsEventWrapperSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsAdvancedJavascriptTagSettingsGlobalEventCaptureSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsBrowserRestrictionSettingsRestrictionsRestrictionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCapturePtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureResourceTimingSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureTimeoutSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsContentCaptureVisuallyCompleteSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsIpAddressRestrictionSettingsRestrictionsRangeArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptFrameworkSupportOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptFrameworkSupportPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationMonitoringSettingsJavascriptInjectionRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationSessionReplayConfigOutput{})
	pulumi.RegisterOutputType(WebApplicationSessionReplayConfigPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPropertyOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionAndSessionPropertiesPropertyArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsCustomActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsTagOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsTagArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationWaterfallSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationWaterfallSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationXhrActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationXhrActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersPtrOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersHeaderOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersHeaderArrayOutput{})
	pulumi.RegisterOutputType(WebhookNotificationOauth2CredentialsOutput{})
	pulumi.RegisterOutputType(WebhookNotificationOauth2CredentialsPtrOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersPtrOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersHeaderOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetAlertingProfilesValueOutput{})
	pulumi.RegisterOutputType(GetAlertingProfilesValueArrayOutput{})
	pulumi.RegisterOutputType(GetApiTokensApiTokenOutput{})
	pulumi.RegisterOutputType(GetApiTokensApiTokenArrayOutput{})
	pulumi.RegisterOutputType(GetDocumentsValueOutput{})
	pulumi.RegisterOutputType(GetDocumentsValueArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagTagOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagTagArrayOutput{})
	pulumi.RegisterOutputType(GetGenericSettingsValueOutput{})
	pulumi.RegisterOutputType(GetGenericSettingsValueArrayOutput{})
	pulumi.RegisterOutputType(GetGeoCitiesCityOutput{})
	pulumi.RegisterOutputType(GetGeoCitiesCityArrayOutput{})
	pulumi.RegisterOutputType(GetGeoCountriesCountryOutput{})
	pulumi.RegisterOutputType(GetGeoCountriesCountryArrayOutput{})
	pulumi.RegisterOutputType(GetGeoRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetGeoRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetHubItemsItemOutput{})
	pulumi.RegisterOutputType(GetHubItemsItemArrayOutput{})
	pulumi.RegisterOutputType(GetIamPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetIamPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetManagementZonesValueOutput{})
	pulumi.RegisterOutputType(GetManagementZonesValueArrayOutput{})
	pulumi.RegisterOutputType(GetRemoteEnvironmentsRemoteEnvironmentOutput{})
	pulumi.RegisterOutputType(GetRemoteEnvironmentsRemoteEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsPtrOutput{})
	pulumi.RegisterOutputType(GetSyntheticNodesNodeOutput{})
	pulumi.RegisterOutputType(GetSyntheticNodesNodeArrayOutput{})
}
