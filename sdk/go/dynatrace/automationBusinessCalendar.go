// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// > **Dynatrace SaaS only**
//
// > To utilize this resource, please define the environment variables `DT_CLIENT_ID`, `DT_CLIENT_SECRET`, `DT_ACCOUNT_ID` with an OAuth client including the following permissions: **View calendars** (`automation:calendars:read`) and **Create and edit calendars** (`automation:calendars:write`).
//
// > This resource is excluded by default in the export utility, please explicitly specify the resource to retrieve existing configuration.
//
// ## Dynatrace Documentation
//
// - Dynatrace Workflows - https://www.dynatrace.com/support/help/platform-modules/cloud-automation/workflows
//
// ## Resource Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dynatrace.NewAutomationBusinessCalendar(ctx, "#name#", &dynatrace.AutomationBusinessCalendarArgs{
//				Description: pulumi.String("#name#"),
//				Holidays: &dynatrace.AutomationBusinessCalendarHolidaysArgs{
//					Holidays: dynatrace.AutomationBusinessCalendarHolidaysHolidayArray{
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2023-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2023-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2023-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2023-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2023-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2023-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-04-01"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-05-09"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-05-20"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-05-30"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-04-21"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-05-29"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-06-09"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-06-19"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-04-06"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-05-14"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-05-25"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-06-04"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-03-29"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-05-06"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-05-17"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-05-27"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-04-17"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-05-25"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-06-05"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-06-15"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-04-02"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-05-10"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-05-21"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-05-31"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-04-22"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-05-30"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-06-10"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-06-20"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-04-14"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-05-22"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-06-02"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-06-12"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-03-29"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-05-06"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-05-17"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-05-27"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-08-15"),
//							Title: pulumi.String("Mariä Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-10-26"),
//							Title: pulumi.String("Nationalfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-11-01"),
//							Title: pulumi.String("Allerheiligen"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-12-08"),
//							Title: pulumi.String("Mariä Empfängnis"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-12-25"),
//							Title: pulumi.String("Christtag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-12-26"),
//							Title: pulumi.String("Stefanitag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2033-01-01"),
//							Title: pulumi.String("Neujahr"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2033-01-06"),
//							Title: pulumi.String("Heilige Drei Könige"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2033-04-18"),
//							Title: pulumi.String("Ostermontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2033-05-01"),
//							Title: pulumi.String("Staatsfeiertag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2033-05-26"),
//							Title: pulumi.String("Christi Himmelfahrt"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2033-06-06"),
//							Title: pulumi.String("Pfingstmontag"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2033-06-16"),
//							Title: pulumi.String("Fronleichnam"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2023-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2024-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2025-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2026-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2027-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2028-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2029-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2030-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2031-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2032-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//						&dynatrace.AutomationBusinessCalendarHolidaysHolidayArgs{
//							Date:  pulumi.String("2033-07-31"),
//							Title: pulumi.String("Reini Day"),
//						},
//					},
//				},
//				Title:     pulumi.String("#name#"),
//				ValidFrom: pulumi.String("2023-07-31"),
//				ValidTo:   pulumi.String("2033-07-31"),
//				WeekDays: pulumi.IntArray{
//					pulumi.Int(1),
//					pulumi.Int(2),
//					pulumi.Int(3),
//					pulumi.Int(4),
//					pulumi.Int(5),
//				},
//				WeekStart: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type AutomationBusinessCalendar struct {
	pulumi.CustomResourceState

	// An optional description for the Business Calendar
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of holidays valid in this calendar
	Holidays AutomationBusinessCalendarHolidaysPtrOutput `pulumi:"holidays"`
	// The title / name of the Business Calendar
	Title pulumi.StringOutput `pulumi:"title"`
	// The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023
	ValidFrom pulumi.StringPtrOutput `pulumi:"validFrom"`
	// The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023
	ValidTo pulumi.StringPtrOutput `pulumi:"validTo"`
	// The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`
	WeekDays pulumi.IntArrayOutput `pulumi:"weekDays"`
	// Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday
	WeekStart pulumi.IntPtrOutput `pulumi:"weekStart"`
}

// NewAutomationBusinessCalendar registers a new resource with the given unique name, arguments, and options.
func NewAutomationBusinessCalendar(ctx *pulumi.Context,
	name string, args *AutomationBusinessCalendarArgs, opts ...pulumi.ResourceOption) (*AutomationBusinessCalendar, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Title == nil {
		return nil, errors.New("invalid value for required argument 'Title'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AutomationBusinessCalendar
	err := ctx.RegisterResource("dynatrace:index/automationBusinessCalendar:AutomationBusinessCalendar", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutomationBusinessCalendar gets an existing AutomationBusinessCalendar resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutomationBusinessCalendar(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutomationBusinessCalendarState, opts ...pulumi.ResourceOption) (*AutomationBusinessCalendar, error) {
	var resource AutomationBusinessCalendar
	err := ctx.ReadResource("dynatrace:index/automationBusinessCalendar:AutomationBusinessCalendar", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutomationBusinessCalendar resources.
type automationBusinessCalendarState struct {
	// An optional description for the Business Calendar
	Description *string `pulumi:"description"`
	// A list of holidays valid in this calendar
	Holidays *AutomationBusinessCalendarHolidays `pulumi:"holidays"`
	// The title / name of the Business Calendar
	Title *string `pulumi:"title"`
	// The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023
	ValidFrom *string `pulumi:"validFrom"`
	// The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023
	ValidTo *string `pulumi:"validTo"`
	// The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`
	WeekDays []int `pulumi:"weekDays"`
	// Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday
	WeekStart *int `pulumi:"weekStart"`
}

type AutomationBusinessCalendarState struct {
	// An optional description for the Business Calendar
	Description pulumi.StringPtrInput
	// A list of holidays valid in this calendar
	Holidays AutomationBusinessCalendarHolidaysPtrInput
	// The title / name of the Business Calendar
	Title pulumi.StringPtrInput
	// The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023
	ValidFrom pulumi.StringPtrInput
	// The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023
	ValidTo pulumi.StringPtrInput
	// The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`
	WeekDays pulumi.IntArrayInput
	// Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday
	WeekStart pulumi.IntPtrInput
}

func (AutomationBusinessCalendarState) ElementType() reflect.Type {
	return reflect.TypeOf((*automationBusinessCalendarState)(nil)).Elem()
}

type automationBusinessCalendarArgs struct {
	// An optional description for the Business Calendar
	Description *string `pulumi:"description"`
	// A list of holidays valid in this calendar
	Holidays *AutomationBusinessCalendarHolidays `pulumi:"holidays"`
	// The title / name of the Business Calendar
	Title string `pulumi:"title"`
	// The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023
	ValidFrom *string `pulumi:"validFrom"`
	// The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023
	ValidTo *string `pulumi:"validTo"`
	// The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`
	WeekDays []int `pulumi:"weekDays"`
	// Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday
	WeekStart *int `pulumi:"weekStart"`
}

// The set of arguments for constructing a AutomationBusinessCalendar resource.
type AutomationBusinessCalendarArgs struct {
	// An optional description for the Business Calendar
	Description pulumi.StringPtrInput
	// A list of holidays valid in this calendar
	Holidays AutomationBusinessCalendarHolidaysPtrInput
	// The title / name of the Business Calendar
	Title pulumi.StringInput
	// The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023
	ValidFrom pulumi.StringPtrInput
	// The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023
	ValidTo pulumi.StringPtrInput
	// The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`
	WeekDays pulumi.IntArrayInput
	// Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday
	WeekStart pulumi.IntPtrInput
}

func (AutomationBusinessCalendarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*automationBusinessCalendarArgs)(nil)).Elem()
}

type AutomationBusinessCalendarInput interface {
	pulumi.Input

	ToAutomationBusinessCalendarOutput() AutomationBusinessCalendarOutput
	ToAutomationBusinessCalendarOutputWithContext(ctx context.Context) AutomationBusinessCalendarOutput
}

func (*AutomationBusinessCalendar) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationBusinessCalendar)(nil)).Elem()
}

func (i *AutomationBusinessCalendar) ToAutomationBusinessCalendarOutput() AutomationBusinessCalendarOutput {
	return i.ToAutomationBusinessCalendarOutputWithContext(context.Background())
}

func (i *AutomationBusinessCalendar) ToAutomationBusinessCalendarOutputWithContext(ctx context.Context) AutomationBusinessCalendarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationBusinessCalendarOutput)
}

// AutomationBusinessCalendarArrayInput is an input type that accepts AutomationBusinessCalendarArray and AutomationBusinessCalendarArrayOutput values.
// You can construct a concrete instance of `AutomationBusinessCalendarArrayInput` via:
//
//	AutomationBusinessCalendarArray{ AutomationBusinessCalendarArgs{...} }
type AutomationBusinessCalendarArrayInput interface {
	pulumi.Input

	ToAutomationBusinessCalendarArrayOutput() AutomationBusinessCalendarArrayOutput
	ToAutomationBusinessCalendarArrayOutputWithContext(context.Context) AutomationBusinessCalendarArrayOutput
}

type AutomationBusinessCalendarArray []AutomationBusinessCalendarInput

func (AutomationBusinessCalendarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutomationBusinessCalendar)(nil)).Elem()
}

func (i AutomationBusinessCalendarArray) ToAutomationBusinessCalendarArrayOutput() AutomationBusinessCalendarArrayOutput {
	return i.ToAutomationBusinessCalendarArrayOutputWithContext(context.Background())
}

func (i AutomationBusinessCalendarArray) ToAutomationBusinessCalendarArrayOutputWithContext(ctx context.Context) AutomationBusinessCalendarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationBusinessCalendarArrayOutput)
}

// AutomationBusinessCalendarMapInput is an input type that accepts AutomationBusinessCalendarMap and AutomationBusinessCalendarMapOutput values.
// You can construct a concrete instance of `AutomationBusinessCalendarMapInput` via:
//
//	AutomationBusinessCalendarMap{ "key": AutomationBusinessCalendarArgs{...} }
type AutomationBusinessCalendarMapInput interface {
	pulumi.Input

	ToAutomationBusinessCalendarMapOutput() AutomationBusinessCalendarMapOutput
	ToAutomationBusinessCalendarMapOutputWithContext(context.Context) AutomationBusinessCalendarMapOutput
}

type AutomationBusinessCalendarMap map[string]AutomationBusinessCalendarInput

func (AutomationBusinessCalendarMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutomationBusinessCalendar)(nil)).Elem()
}

func (i AutomationBusinessCalendarMap) ToAutomationBusinessCalendarMapOutput() AutomationBusinessCalendarMapOutput {
	return i.ToAutomationBusinessCalendarMapOutputWithContext(context.Background())
}

func (i AutomationBusinessCalendarMap) ToAutomationBusinessCalendarMapOutputWithContext(ctx context.Context) AutomationBusinessCalendarMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutomationBusinessCalendarMapOutput)
}

type AutomationBusinessCalendarOutput struct{ *pulumi.OutputState }

func (AutomationBusinessCalendarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutomationBusinessCalendar)(nil)).Elem()
}

func (o AutomationBusinessCalendarOutput) ToAutomationBusinessCalendarOutput() AutomationBusinessCalendarOutput {
	return o
}

func (o AutomationBusinessCalendarOutput) ToAutomationBusinessCalendarOutputWithContext(ctx context.Context) AutomationBusinessCalendarOutput {
	return o
}

// An optional description for the Business Calendar
func (o AutomationBusinessCalendarOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationBusinessCalendar) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of holidays valid in this calendar
func (o AutomationBusinessCalendarOutput) Holidays() AutomationBusinessCalendarHolidaysPtrOutput {
	return o.ApplyT(func(v *AutomationBusinessCalendar) AutomationBusinessCalendarHolidaysPtrOutput { return v.Holidays }).(AutomationBusinessCalendarHolidaysPtrOutput)
}

// The title / name of the Business Calendar
func (o AutomationBusinessCalendarOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v *AutomationBusinessCalendar) pulumi.StringOutput { return v.Title }).(pulumi.StringOutput)
}

// The date from when on this calendar is valid from. Example: `2023-07-04` for July 4th 2023
func (o AutomationBusinessCalendarOutput) ValidFrom() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationBusinessCalendar) pulumi.StringPtrOutput { return v.ValidFrom }).(pulumi.StringPtrOutput)
}

// The date until when on this calendar is valid to. Example: `2023-07-04` for July 4th 2023
func (o AutomationBusinessCalendarOutput) ValidTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AutomationBusinessCalendar) pulumi.StringPtrOutput { return v.ValidTo }).(pulumi.StringPtrOutput)
}

// The days to be considered week days in this calendar. `1' =`Monday`,`2`=`Tuesday`,`3`=`Wednesday`,`4`=`Thursday`,`5`=`Friday`,`6`=`Saturday`,`7`=`Sunday`
func (o AutomationBusinessCalendarOutput) WeekDays() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AutomationBusinessCalendar) pulumi.IntArrayOutput { return v.WeekDays }).(pulumi.IntArrayOutput)
}

// Specifies the day of the week that's considered to be the first day in the week. `1` for Monday, `7` for Sunday
func (o AutomationBusinessCalendarOutput) WeekStart() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutomationBusinessCalendar) pulumi.IntPtrOutput { return v.WeekStart }).(pulumi.IntPtrOutput)
}

type AutomationBusinessCalendarArrayOutput struct{ *pulumi.OutputState }

func (AutomationBusinessCalendarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutomationBusinessCalendar)(nil)).Elem()
}

func (o AutomationBusinessCalendarArrayOutput) ToAutomationBusinessCalendarArrayOutput() AutomationBusinessCalendarArrayOutput {
	return o
}

func (o AutomationBusinessCalendarArrayOutput) ToAutomationBusinessCalendarArrayOutputWithContext(ctx context.Context) AutomationBusinessCalendarArrayOutput {
	return o
}

func (o AutomationBusinessCalendarArrayOutput) Index(i pulumi.IntInput) AutomationBusinessCalendarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutomationBusinessCalendar {
		return vs[0].([]*AutomationBusinessCalendar)[vs[1].(int)]
	}).(AutomationBusinessCalendarOutput)
}

type AutomationBusinessCalendarMapOutput struct{ *pulumi.OutputState }

func (AutomationBusinessCalendarMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutomationBusinessCalendar)(nil)).Elem()
}

func (o AutomationBusinessCalendarMapOutput) ToAutomationBusinessCalendarMapOutput() AutomationBusinessCalendarMapOutput {
	return o
}

func (o AutomationBusinessCalendarMapOutput) ToAutomationBusinessCalendarMapOutputWithContext(ctx context.Context) AutomationBusinessCalendarMapOutput {
	return o
}

func (o AutomationBusinessCalendarMapOutput) MapIndex(k pulumi.StringInput) AutomationBusinessCalendarOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutomationBusinessCalendar {
		return vs[0].(map[string]*AutomationBusinessCalendar)[vs[1].(string)]
	}).(AutomationBusinessCalendarOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationBusinessCalendarInput)(nil)).Elem(), &AutomationBusinessCalendar{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationBusinessCalendarArrayInput)(nil)).Elem(), AutomationBusinessCalendarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutomationBusinessCalendarMapInput)(nil)).Elem(), AutomationBusinessCalendarMap{})
	pulumi.RegisterOutputType(AutomationBusinessCalendarOutput{})
	pulumi.RegisterOutputType(AutomationBusinessCalendarArrayOutput{})
	pulumi.RegisterOutputType(AutomationBusinessCalendarMapOutput{})
}
