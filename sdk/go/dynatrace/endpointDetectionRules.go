// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

// > This resource requires the API token scopes **Read settings** (`settings.read`) and **Write settings** (`settings.write`)
//
// ## Dynatrace Documentation
//
// - Customize endpoint detection in Service Detection v2 - https://docs.dynatrace.com/docs/observe/applications-and-microservices/services/service-detection-v2/endpoint-detection-v2
//
// - Settings API - https://www.dynatrace.com/support/help/dynatrace-api/environment-api/settings (schemaId: `builtin:endpoint-detection-rules`)
//
// ## Resource Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			first_instance, err := dynatrace.NewEndpointDetectionRules(ctx, "first-instance", &dynatrace.EndpointDetectionRulesArgs{
//				Enabled: pulumi.Bool(true),
//				Scope:   pulumi.String("environment"),
//				Rule: &dynatrace.EndpointDetectionRulesRuleArgs{
//					Description:          pulumi.String("This is a sample description"),
//					Condition:            pulumi.String("matchesValue(k8s.cluster.name,\"#name#-1\")"),
//					EndpointNameTemplate: pulumi.String("#name#"),
//					IfConditionMatches:   pulumi.String("DETECT_REQUEST_ON_ENDPOINT"),
//					RuleName:             pulumi.String("#name#-1"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = dynatrace.NewEndpointDetectionRules(ctx, "second-instance", &dynatrace.EndpointDetectionRulesArgs{
//				InsertAfter: first_instance.ID(),
//				Enabled:     pulumi.Bool(false),
//				Scope:       pulumi.String("environment"),
//				Rule: &dynatrace.EndpointDetectionRulesRuleArgs{
//					Condition:          pulumi.String("matchesValue(k8s.cluster.name,\"#name#-2\")"),
//					IfConditionMatches: pulumi.String("SUPPRESS_REQUEST"),
//					RuleName:           pulumi.String("#name#-2"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type EndpointDetectionRules struct {
	pulumi.CustomResourceState

	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringOutput `pulumi:"insertAfter"`
	// Rule
	Rule EndpointDetectionRulesRuleOutput `pulumi:"rule"`
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
}

// NewEndpointDetectionRules registers a new resource with the given unique name, arguments, and options.
func NewEndpointDetectionRules(ctx *pulumi.Context,
	name string, args *EndpointDetectionRulesArgs, opts ...pulumi.ResourceOption) (*EndpointDetectionRules, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Rule == nil {
		return nil, errors.New("invalid value for required argument 'Rule'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EndpointDetectionRules
	err := ctx.RegisterResource("dynatrace:index/endpointDetectionRules:EndpointDetectionRules", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointDetectionRules gets an existing EndpointDetectionRules resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointDetectionRules(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointDetectionRulesState, opts ...pulumi.ResourceOption) (*EndpointDetectionRules, error) {
	var resource EndpointDetectionRules
	err := ctx.ReadResource("dynatrace:index/endpointDetectionRules:EndpointDetectionRules", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointDetectionRules resources.
type endpointDetectionRulesState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Rule
	Rule *EndpointDetectionRulesRule `pulumi:"rule"`
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

type EndpointDetectionRulesState struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Rule
	Rule EndpointDetectionRulesRulePtrInput
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (EndpointDetectionRulesState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointDetectionRulesState)(nil)).Elem()
}

type endpointDetectionRulesArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter *string `pulumi:"insertAfter"`
	// Rule
	Rule EndpointDetectionRulesRule `pulumi:"rule"`
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a EndpointDetectionRules resource.
type EndpointDetectionRulesArgs struct {
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
	InsertAfter pulumi.StringPtrInput
	// Rule
	Rule EndpointDetectionRulesRuleInput
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (EndpointDetectionRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointDetectionRulesArgs)(nil)).Elem()
}

type EndpointDetectionRulesInput interface {
	pulumi.Input

	ToEndpointDetectionRulesOutput() EndpointDetectionRulesOutput
	ToEndpointDetectionRulesOutputWithContext(ctx context.Context) EndpointDetectionRulesOutput
}

func (*EndpointDetectionRules) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointDetectionRules)(nil)).Elem()
}

func (i *EndpointDetectionRules) ToEndpointDetectionRulesOutput() EndpointDetectionRulesOutput {
	return i.ToEndpointDetectionRulesOutputWithContext(context.Background())
}

func (i *EndpointDetectionRules) ToEndpointDetectionRulesOutputWithContext(ctx context.Context) EndpointDetectionRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDetectionRulesOutput)
}

// EndpointDetectionRulesArrayInput is an input type that accepts EndpointDetectionRulesArray and EndpointDetectionRulesArrayOutput values.
// You can construct a concrete instance of `EndpointDetectionRulesArrayInput` via:
//
//	EndpointDetectionRulesArray{ EndpointDetectionRulesArgs{...} }
type EndpointDetectionRulesArrayInput interface {
	pulumi.Input

	ToEndpointDetectionRulesArrayOutput() EndpointDetectionRulesArrayOutput
	ToEndpointDetectionRulesArrayOutputWithContext(context.Context) EndpointDetectionRulesArrayOutput
}

type EndpointDetectionRulesArray []EndpointDetectionRulesInput

func (EndpointDetectionRulesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointDetectionRules)(nil)).Elem()
}

func (i EndpointDetectionRulesArray) ToEndpointDetectionRulesArrayOutput() EndpointDetectionRulesArrayOutput {
	return i.ToEndpointDetectionRulesArrayOutputWithContext(context.Background())
}

func (i EndpointDetectionRulesArray) ToEndpointDetectionRulesArrayOutputWithContext(ctx context.Context) EndpointDetectionRulesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDetectionRulesArrayOutput)
}

// EndpointDetectionRulesMapInput is an input type that accepts EndpointDetectionRulesMap and EndpointDetectionRulesMapOutput values.
// You can construct a concrete instance of `EndpointDetectionRulesMapInput` via:
//
//	EndpointDetectionRulesMap{ "key": EndpointDetectionRulesArgs{...} }
type EndpointDetectionRulesMapInput interface {
	pulumi.Input

	ToEndpointDetectionRulesMapOutput() EndpointDetectionRulesMapOutput
	ToEndpointDetectionRulesMapOutputWithContext(context.Context) EndpointDetectionRulesMapOutput
}

type EndpointDetectionRulesMap map[string]EndpointDetectionRulesInput

func (EndpointDetectionRulesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointDetectionRules)(nil)).Elem()
}

func (i EndpointDetectionRulesMap) ToEndpointDetectionRulesMapOutput() EndpointDetectionRulesMapOutput {
	return i.ToEndpointDetectionRulesMapOutputWithContext(context.Background())
}

func (i EndpointDetectionRulesMap) ToEndpointDetectionRulesMapOutputWithContext(ctx context.Context) EndpointDetectionRulesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointDetectionRulesMapOutput)
}

type EndpointDetectionRulesOutput struct{ *pulumi.OutputState }

func (EndpointDetectionRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointDetectionRules)(nil)).Elem()
}

func (o EndpointDetectionRulesOutput) ToEndpointDetectionRulesOutput() EndpointDetectionRulesOutput {
	return o
}

func (o EndpointDetectionRulesOutput) ToEndpointDetectionRulesOutputWithContext(ctx context.Context) EndpointDetectionRulesOutput {
	return o
}

// This setting is enabled (`true`) or disabled (`false`)
func (o EndpointDetectionRulesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *EndpointDetectionRules) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Because this resource allows for ordering you may specify the ID of the resource instance that comes before this instance regarding order. If not specified when creating the setting will be added to the end of the list. If not specified during update the order will remain untouched
func (o EndpointDetectionRulesOutput) InsertAfter() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointDetectionRules) pulumi.StringOutput { return v.InsertAfter }).(pulumi.StringOutput)
}

// Rule
func (o EndpointDetectionRulesOutput) Rule() EndpointDetectionRulesRuleOutput {
	return o.ApplyT(func(v *EndpointDetectionRules) EndpointDetectionRulesRuleOutput { return v.Rule }).(EndpointDetectionRulesRuleOutput)
}

// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES*CLUSTER, HOST*GROUP). Omit this property if you want to cover the whole environment.
func (o EndpointDetectionRulesOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointDetectionRules) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

type EndpointDetectionRulesArrayOutput struct{ *pulumi.OutputState }

func (EndpointDetectionRulesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointDetectionRules)(nil)).Elem()
}

func (o EndpointDetectionRulesArrayOutput) ToEndpointDetectionRulesArrayOutput() EndpointDetectionRulesArrayOutput {
	return o
}

func (o EndpointDetectionRulesArrayOutput) ToEndpointDetectionRulesArrayOutputWithContext(ctx context.Context) EndpointDetectionRulesArrayOutput {
	return o
}

func (o EndpointDetectionRulesArrayOutput) Index(i pulumi.IntInput) EndpointDetectionRulesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointDetectionRules {
		return vs[0].([]*EndpointDetectionRules)[vs[1].(int)]
	}).(EndpointDetectionRulesOutput)
}

type EndpointDetectionRulesMapOutput struct{ *pulumi.OutputState }

func (EndpointDetectionRulesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointDetectionRules)(nil)).Elem()
}

func (o EndpointDetectionRulesMapOutput) ToEndpointDetectionRulesMapOutput() EndpointDetectionRulesMapOutput {
	return o
}

func (o EndpointDetectionRulesMapOutput) ToEndpointDetectionRulesMapOutputWithContext(ctx context.Context) EndpointDetectionRulesMapOutput {
	return o
}

func (o EndpointDetectionRulesMapOutput) MapIndex(k pulumi.StringInput) EndpointDetectionRulesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointDetectionRules {
		return vs[0].(map[string]*EndpointDetectionRules)[vs[1].(string)]
	}).(EndpointDetectionRulesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointDetectionRulesInput)(nil)).Elem(), &EndpointDetectionRules{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointDetectionRulesArrayInput)(nil)).Elem(), EndpointDetectionRulesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointDetectionRulesMapInput)(nil)).Elem(), EndpointDetectionRulesMap{})
	pulumi.RegisterOutputType(EndpointDetectionRulesOutput{})
	pulumi.RegisterOutputType(EndpointDetectionRulesArrayOutput{})
	pulumi.RegisterOutputType(EndpointDetectionRulesMapOutput{})
}
