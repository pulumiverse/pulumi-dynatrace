// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type AzureCredentials struct {
	pulumi.CustomResourceState

	// The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected
	Active pulumi.BoolOutput `pulumi:"active"`
	// The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique
	AppId pulumi.StringPtrOutput `pulumi:"appId"`
	// The automatic capture of Azure tags is on (`true`) or off (`false`)
	AutoTagging pulumi.BoolPtrOutput `pulumi:"autoTagging"`
	// The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique
	DirectoryId pulumi.StringPtrOutput `pulumi:"directoryId"`
	// The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.
	Key pulumi.StringPtrOutput `pulumi:"key"`
	// The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed
	Label pulumi.StringOutput `pulumi:"label"`
	// A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.
	MonitorOnlyExcludingTagPairs AzureCredentialsMonitorOnlyExcludingTagPairArrayOutput `pulumi:"monitorOnlyExcludingTagPairs"`
	// A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
	MonitorOnlyTagPairs AzureCredentialsMonitorOnlyTagPairArrayOutput `pulumi:"monitorOnlyTagPairs"`
	// Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).
	MonitorOnlyTaggedEntities pulumi.BoolOutput `pulumi:"monitorOnlyTaggedEntities"`
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `AzureService` subsequently won't get touched.
	RemoveDefaults pulumi.BoolPtrOutput `pulumi:"removeDefaults"`
	// A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.
	//
	// Deprecated: Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `AzureService` instead.
	SupportingServices AzureCredentialsSupportingServiceArrayOutput `pulumi:"supportingServices"`
	// Deprecated: This attribute is deprecated and has no effect any more. It always defaults to `true`.
	SupportingServicesManagedInDynatrace pulumi.BoolPtrOutput `pulumi:"supportingServicesManagedInDynatrace"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrOutput `pulumi:"unknowns"`
}

// NewAzureCredentials registers a new resource with the given unique name, arguments, and options.
func NewAzureCredentials(ctx *pulumi.Context,
	name string, args *AzureCredentialsArgs, opts ...pulumi.ResourceOption) (*AzureCredentials, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Active == nil {
		return nil, errors.New("invalid value for required argument 'Active'")
	}
	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.MonitorOnlyTaggedEntities == nil {
		return nil, errors.New("invalid value for required argument 'MonitorOnlyTaggedEntities'")
	}
	if args.Key != nil {
		args.Key = pulumi.ToSecret(args.Key).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"key",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureCredentials
	err := ctx.RegisterResource("dynatrace:index/azureCredentials:AzureCredentials", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureCredentials gets an existing AzureCredentials resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureCredentials(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureCredentialsState, opts ...pulumi.ResourceOption) (*AzureCredentials, error) {
	var resource AzureCredentials
	err := ctx.ReadResource("dynatrace:index/azureCredentials:AzureCredentials", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureCredentials resources.
type azureCredentialsState struct {
	// The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected
	Active *bool `pulumi:"active"`
	// The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique
	AppId *string `pulumi:"appId"`
	// The automatic capture of Azure tags is on (`true`) or off (`false`)
	AutoTagging *bool `pulumi:"autoTagging"`
	// The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique
	DirectoryId *string `pulumi:"directoryId"`
	// The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.
	Key *string `pulumi:"key"`
	// The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed
	Label *string `pulumi:"label"`
	// A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.
	MonitorOnlyExcludingTagPairs []AzureCredentialsMonitorOnlyExcludingTagPair `pulumi:"monitorOnlyExcludingTagPairs"`
	// A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
	MonitorOnlyTagPairs []AzureCredentialsMonitorOnlyTagPair `pulumi:"monitorOnlyTagPairs"`
	// Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).
	MonitorOnlyTaggedEntities *bool `pulumi:"monitorOnlyTaggedEntities"`
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `AzureService` subsequently won't get touched.
	RemoveDefaults *bool `pulumi:"removeDefaults"`
	// A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.
	//
	// Deprecated: Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `AzureService` instead.
	SupportingServices []AzureCredentialsSupportingService `pulumi:"supportingServices"`
	// Deprecated: This attribute is deprecated and has no effect any more. It always defaults to `true`.
	SupportingServicesManagedInDynatrace *bool `pulumi:"supportingServicesManagedInDynatrace"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
}

type AzureCredentialsState struct {
	// The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected
	Active pulumi.BoolPtrInput
	// The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique
	AppId pulumi.StringPtrInput
	// The automatic capture of Azure tags is on (`true`) or off (`false`)
	AutoTagging pulumi.BoolPtrInput
	// The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique
	DirectoryId pulumi.StringPtrInput
	// The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.
	Key pulumi.StringPtrInput
	// The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed
	Label pulumi.StringPtrInput
	// A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.
	MonitorOnlyExcludingTagPairs AzureCredentialsMonitorOnlyExcludingTagPairArrayInput
	// A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
	MonitorOnlyTagPairs AzureCredentialsMonitorOnlyTagPairArrayInput
	// Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).
	MonitorOnlyTaggedEntities pulumi.BoolPtrInput
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `AzureService` subsequently won't get touched.
	RemoveDefaults pulumi.BoolPtrInput
	// A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.
	//
	// Deprecated: Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `AzureService` instead.
	SupportingServices AzureCredentialsSupportingServiceArrayInput
	// Deprecated: This attribute is deprecated and has no effect any more. It always defaults to `true`.
	SupportingServicesManagedInDynatrace pulumi.BoolPtrInput
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput
}

func (AzureCredentialsState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureCredentialsState)(nil)).Elem()
}

type azureCredentialsArgs struct {
	// The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected
	Active bool `pulumi:"active"`
	// The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique
	AppId *string `pulumi:"appId"`
	// The automatic capture of Azure tags is on (`true`) or off (`false`)
	AutoTagging *bool `pulumi:"autoTagging"`
	// The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique
	DirectoryId *string `pulumi:"directoryId"`
	// The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.
	Key *string `pulumi:"key"`
	// The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed
	Label string `pulumi:"label"`
	// A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.
	MonitorOnlyExcludingTagPairs []AzureCredentialsMonitorOnlyExcludingTagPair `pulumi:"monitorOnlyExcludingTagPairs"`
	// A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
	MonitorOnlyTagPairs []AzureCredentialsMonitorOnlyTagPair `pulumi:"monitorOnlyTagPairs"`
	// Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).
	MonitorOnlyTaggedEntities bool `pulumi:"monitorOnlyTaggedEntities"`
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `AzureService` subsequently won't get touched.
	RemoveDefaults *bool `pulumi:"removeDefaults"`
	// A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.
	//
	// Deprecated: Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `AzureService` instead.
	SupportingServices []AzureCredentialsSupportingService `pulumi:"supportingServices"`
	// Deprecated: This attribute is deprecated and has no effect any more. It always defaults to `true`.
	SupportingServicesManagedInDynatrace *bool `pulumi:"supportingServicesManagedInDynatrace"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
}

// The set of arguments for constructing a AzureCredentials resource.
type AzureCredentialsArgs struct {
	// The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected
	Active pulumi.BoolInput
	// The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique
	AppId pulumi.StringPtrInput
	// The automatic capture of Azure tags is on (`true`) or off (`false`)
	AutoTagging pulumi.BoolPtrInput
	// The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique
	DirectoryId pulumi.StringPtrInput
	// The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.
	Key pulumi.StringPtrInput
	// The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed
	Label pulumi.StringInput
	// A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.
	MonitorOnlyExcludingTagPairs AzureCredentialsMonitorOnlyExcludingTagPairArrayInput
	// A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
	MonitorOnlyTagPairs AzureCredentialsMonitorOnlyTagPairArrayInput
	// Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).
	MonitorOnlyTaggedEntities pulumi.BoolInput
	// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `AzureService` subsequently won't get touched.
	RemoveDefaults pulumi.BoolPtrInput
	// A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.
	//
	// Deprecated: Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `AzureService` instead.
	SupportingServices AzureCredentialsSupportingServiceArrayInput
	// Deprecated: This attribute is deprecated and has no effect any more. It always defaults to `true`.
	SupportingServicesManagedInDynatrace pulumi.BoolPtrInput
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput
}

func (AzureCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureCredentialsArgs)(nil)).Elem()
}

type AzureCredentialsInput interface {
	pulumi.Input

	ToAzureCredentialsOutput() AzureCredentialsOutput
	ToAzureCredentialsOutputWithContext(ctx context.Context) AzureCredentialsOutput
}

func (*AzureCredentials) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureCredentials)(nil)).Elem()
}

func (i *AzureCredentials) ToAzureCredentialsOutput() AzureCredentialsOutput {
	return i.ToAzureCredentialsOutputWithContext(context.Background())
}

func (i *AzureCredentials) ToAzureCredentialsOutputWithContext(ctx context.Context) AzureCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureCredentialsOutput)
}

// AzureCredentialsArrayInput is an input type that accepts AzureCredentialsArray and AzureCredentialsArrayOutput values.
// You can construct a concrete instance of `AzureCredentialsArrayInput` via:
//
//	AzureCredentialsArray{ AzureCredentialsArgs{...} }
type AzureCredentialsArrayInput interface {
	pulumi.Input

	ToAzureCredentialsArrayOutput() AzureCredentialsArrayOutput
	ToAzureCredentialsArrayOutputWithContext(context.Context) AzureCredentialsArrayOutput
}

type AzureCredentialsArray []AzureCredentialsInput

func (AzureCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureCredentials)(nil)).Elem()
}

func (i AzureCredentialsArray) ToAzureCredentialsArrayOutput() AzureCredentialsArrayOutput {
	return i.ToAzureCredentialsArrayOutputWithContext(context.Background())
}

func (i AzureCredentialsArray) ToAzureCredentialsArrayOutputWithContext(ctx context.Context) AzureCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureCredentialsArrayOutput)
}

// AzureCredentialsMapInput is an input type that accepts AzureCredentialsMap and AzureCredentialsMapOutput values.
// You can construct a concrete instance of `AzureCredentialsMapInput` via:
//
//	AzureCredentialsMap{ "key": AzureCredentialsArgs{...} }
type AzureCredentialsMapInput interface {
	pulumi.Input

	ToAzureCredentialsMapOutput() AzureCredentialsMapOutput
	ToAzureCredentialsMapOutputWithContext(context.Context) AzureCredentialsMapOutput
}

type AzureCredentialsMap map[string]AzureCredentialsInput

func (AzureCredentialsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureCredentials)(nil)).Elem()
}

func (i AzureCredentialsMap) ToAzureCredentialsMapOutput() AzureCredentialsMapOutput {
	return i.ToAzureCredentialsMapOutputWithContext(context.Background())
}

func (i AzureCredentialsMap) ToAzureCredentialsMapOutputWithContext(ctx context.Context) AzureCredentialsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureCredentialsMapOutput)
}

type AzureCredentialsOutput struct{ *pulumi.OutputState }

func (AzureCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureCredentials)(nil)).Elem()
}

func (o AzureCredentialsOutput) ToAzureCredentialsOutput() AzureCredentialsOutput {
	return o
}

func (o AzureCredentialsOutput) ToAzureCredentialsOutputWithContext(ctx context.Context) AzureCredentialsOutput {
	return o
}

// The monitoring is enabled (`true`) or disabled (`false`).  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected
func (o AzureCredentialsOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.BoolOutput { return v.Active }).(pulumi.BoolOutput)
}

// The Application ID (also referred to as Client ID)  The combination of Application ID and Directory ID must be unique
func (o AzureCredentialsOutput) AppId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.StringPtrOutput { return v.AppId }).(pulumi.StringPtrOutput)
}

// The automatic capture of Azure tags is on (`true`) or off (`false`)
func (o AzureCredentialsOutput) AutoTagging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.BoolPtrOutput { return v.AutoTagging }).(pulumi.BoolPtrOutput)
}

// The Directory ID (also referred to as Tenant ID)  The combination of Application ID and Directory ID must be unique
func (o AzureCredentialsOutput) DirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.StringPtrOutput { return v.DirectoryId }).(pulumi.StringPtrOutput)
}

// The secret key associated with the Application ID.  For security reasons, GET requests return this field as `null`. Submit your key on creation or update of the configuration. If the field is omitted during an update, the old value remains unaffected.
func (o AzureCredentialsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.StringPtrOutput { return v.Key }).(pulumi.StringPtrOutput)
}

// The unique name of the Azure credentials configuration.  Allowed characters are letters, numbers, and spaces. Also the special characters `.+-_` are allowed
func (o AzureCredentialsOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// A list of Azure tags to be excluded from monitoring.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`.
func (o AzureCredentialsOutput) MonitorOnlyExcludingTagPairs() AzureCredentialsMonitorOnlyExcludingTagPairArrayOutput {
	return o.ApplyT(func(v *AzureCredentials) AzureCredentialsMonitorOnlyExcludingTagPairArrayOutput {
		return v.MonitorOnlyExcludingTagPairs
	}).(AzureCredentialsMonitorOnlyExcludingTagPairArrayOutput)
}

// A list of Azure tags to be monitored.  You can specify up to 20 tags. A resource tagged with *any* of the specified tags is monitored.  Only applicable when the **monitorOnlyTaggedEntities** parameter is set to `true`
func (o AzureCredentialsOutput) MonitorOnlyTagPairs() AzureCredentialsMonitorOnlyTagPairArrayOutput {
	return o.ApplyT(func(v *AzureCredentials) AzureCredentialsMonitorOnlyTagPairArrayOutput { return v.MonitorOnlyTagPairs }).(AzureCredentialsMonitorOnlyTagPairArrayOutput)
}

// Monitor only resources that have specified Azure tags (`true`) or all resources (`false`).
func (o AzureCredentialsOutput) MonitorOnlyTaggedEntities() pulumi.BoolOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.BoolOutput { return v.MonitorOnlyTaggedEntities }).(pulumi.BoolOutput)
}

// Instructs the provider to remove the supporting services Dynatrace applies by default to newly created Azure Credentials. Supporting Services applied by via `AzureService` subsequently won't get touched.
func (o AzureCredentialsOutput) RemoveDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.BoolPtrOutput { return v.RemoveDefaults }).(pulumi.BoolPtrOutput)
}

// A list of Azure supporting services to be monitored. For each service there's a sublist of its metrics and the metrics' dimensions that should be monitored. All of these elements (services, metrics, dimensions) must have corresponding static definitions on the server.
//
// Deprecated: Assigning supported services directly when creating Azure Credentials is deprecated. Use the resource `AzureService` instead.
func (o AzureCredentialsOutput) SupportingServices() AzureCredentialsSupportingServiceArrayOutput {
	return o.ApplyT(func(v *AzureCredentials) AzureCredentialsSupportingServiceArrayOutput { return v.SupportingServices }).(AzureCredentialsSupportingServiceArrayOutput)
}

// Deprecated: This attribute is deprecated and has no effect any more. It always defaults to `true`.
func (o AzureCredentialsOutput) SupportingServicesManagedInDynatrace() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.BoolPtrOutput { return v.SupportingServicesManagedInDynatrace }).(pulumi.BoolPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o AzureCredentialsOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AzureCredentials) pulumi.StringPtrOutput { return v.Unknowns }).(pulumi.StringPtrOutput)
}

type AzureCredentialsArrayOutput struct{ *pulumi.OutputState }

func (AzureCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureCredentials)(nil)).Elem()
}

func (o AzureCredentialsArrayOutput) ToAzureCredentialsArrayOutput() AzureCredentialsArrayOutput {
	return o
}

func (o AzureCredentialsArrayOutput) ToAzureCredentialsArrayOutputWithContext(ctx context.Context) AzureCredentialsArrayOutput {
	return o
}

func (o AzureCredentialsArrayOutput) Index(i pulumi.IntInput) AzureCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureCredentials {
		return vs[0].([]*AzureCredentials)[vs[1].(int)]
	}).(AzureCredentialsOutput)
}

type AzureCredentialsMapOutput struct{ *pulumi.OutputState }

func (AzureCredentialsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureCredentials)(nil)).Elem()
}

func (o AzureCredentialsMapOutput) ToAzureCredentialsMapOutput() AzureCredentialsMapOutput {
	return o
}

func (o AzureCredentialsMapOutput) ToAzureCredentialsMapOutputWithContext(ctx context.Context) AzureCredentialsMapOutput {
	return o
}

func (o AzureCredentialsMapOutput) MapIndex(k pulumi.StringInput) AzureCredentialsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureCredentials {
		return vs[0].(map[string]*AzureCredentials)[vs[1].(string)]
	}).(AzureCredentialsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureCredentialsInput)(nil)).Elem(), &AzureCredentials{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureCredentialsArrayInput)(nil)).Elem(), AzureCredentialsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureCredentialsMapInput)(nil)).Elem(), AzureCredentialsMap{})
	pulumi.RegisterOutputType(AzureCredentialsOutput{})
	pulumi.RegisterOutputType(AzureCredentialsArrayOutput{})
	pulumi.RegisterOutputType(AzureCredentialsMapOutput{})
}
