// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type SessionReplayWebPrivacy struct {
	pulumi.CustomResourceState

	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId pulumi.StringPtrOutput `pulumi:"applicationId"`
	// (Field has overlap with `ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
	EnableOptInMode pulumi.BoolOutput `pulumi:"enableOptInMode"`
	// (Field has overlap with `ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
	MaskingPresets SessionReplayWebPrivacyMaskingPresetsOutput `pulumi:"maskingPresets"`
	// (Field has overlap with `ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
	UrlExclusionPatternLists pulumi.StringArrayOutput `pulumi:"urlExclusionPatternLists"`
}

// NewSessionReplayWebPrivacy registers a new resource with the given unique name, arguments, and options.
func NewSessionReplayWebPrivacy(ctx *pulumi.Context,
	name string, args *SessionReplayWebPrivacyArgs, opts ...pulumi.ResourceOption) (*SessionReplayWebPrivacy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableOptInMode == nil {
		return nil, errors.New("invalid value for required argument 'EnableOptInMode'")
	}
	if args.MaskingPresets == nil {
		return nil, errors.New("invalid value for required argument 'MaskingPresets'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SessionReplayWebPrivacy
	err := ctx.RegisterResource("dynatrace:index/sessionReplayWebPrivacy:SessionReplayWebPrivacy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSessionReplayWebPrivacy gets an existing SessionReplayWebPrivacy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSessionReplayWebPrivacy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SessionReplayWebPrivacyState, opts ...pulumi.ResourceOption) (*SessionReplayWebPrivacy, error) {
	var resource SessionReplayWebPrivacy
	err := ctx.ReadResource("dynatrace:index/sessionReplayWebPrivacy:SessionReplayWebPrivacy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SessionReplayWebPrivacy resources.
type sessionReplayWebPrivacyState struct {
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId *string `pulumi:"applicationId"`
	// (Field has overlap with `ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
	EnableOptInMode *bool `pulumi:"enableOptInMode"`
	// (Field has overlap with `ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
	MaskingPresets *SessionReplayWebPrivacyMaskingPresets `pulumi:"maskingPresets"`
	// (Field has overlap with `ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
	UrlExclusionPatternLists []string `pulumi:"urlExclusionPatternLists"`
}

type SessionReplayWebPrivacyState struct {
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId pulumi.StringPtrInput
	// (Field has overlap with `ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
	EnableOptInMode pulumi.BoolPtrInput
	// (Field has overlap with `ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
	MaskingPresets SessionReplayWebPrivacyMaskingPresetsPtrInput
	// (Field has overlap with `ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
	UrlExclusionPatternLists pulumi.StringArrayInput
}

func (SessionReplayWebPrivacyState) ElementType() reflect.Type {
	return reflect.TypeOf((*sessionReplayWebPrivacyState)(nil)).Elem()
}

type sessionReplayWebPrivacyArgs struct {
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId *string `pulumi:"applicationId"`
	// (Field has overlap with `ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
	EnableOptInMode bool `pulumi:"enableOptInMode"`
	// (Field has overlap with `ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
	MaskingPresets SessionReplayWebPrivacyMaskingPresets `pulumi:"maskingPresets"`
	// (Field has overlap with `ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
	UrlExclusionPatternLists []string `pulumi:"urlExclusionPatternLists"`
}

// The set of arguments for constructing a SessionReplayWebPrivacy resource.
type SessionReplayWebPrivacyArgs struct {
	// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
	ApplicationId pulumi.StringPtrInput
	// (Field has overlap with `ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
	EnableOptInMode pulumi.BoolInput
	// (Field has overlap with `ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
	MaskingPresets SessionReplayWebPrivacyMaskingPresetsInput
	// (Field has overlap with `ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
	UrlExclusionPatternLists pulumi.StringArrayInput
}

func (SessionReplayWebPrivacyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sessionReplayWebPrivacyArgs)(nil)).Elem()
}

type SessionReplayWebPrivacyInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyOutput() SessionReplayWebPrivacyOutput
	ToSessionReplayWebPrivacyOutputWithContext(ctx context.Context) SessionReplayWebPrivacyOutput
}

func (*SessionReplayWebPrivacy) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacy)(nil)).Elem()
}

func (i *SessionReplayWebPrivacy) ToSessionReplayWebPrivacyOutput() SessionReplayWebPrivacyOutput {
	return i.ToSessionReplayWebPrivacyOutputWithContext(context.Background())
}

func (i *SessionReplayWebPrivacy) ToSessionReplayWebPrivacyOutputWithContext(ctx context.Context) SessionReplayWebPrivacyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyOutput)
}

// SessionReplayWebPrivacyArrayInput is an input type that accepts SessionReplayWebPrivacyArray and SessionReplayWebPrivacyArrayOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyArrayInput` via:
//
//	SessionReplayWebPrivacyArray{ SessionReplayWebPrivacyArgs{...} }
type SessionReplayWebPrivacyArrayInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyArrayOutput() SessionReplayWebPrivacyArrayOutput
	ToSessionReplayWebPrivacyArrayOutputWithContext(context.Context) SessionReplayWebPrivacyArrayOutput
}

type SessionReplayWebPrivacyArray []SessionReplayWebPrivacyInput

func (SessionReplayWebPrivacyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SessionReplayWebPrivacy)(nil)).Elem()
}

func (i SessionReplayWebPrivacyArray) ToSessionReplayWebPrivacyArrayOutput() SessionReplayWebPrivacyArrayOutput {
	return i.ToSessionReplayWebPrivacyArrayOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyArray) ToSessionReplayWebPrivacyArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyArrayOutput)
}

// SessionReplayWebPrivacyMapInput is an input type that accepts SessionReplayWebPrivacyMap and SessionReplayWebPrivacyMapOutput values.
// You can construct a concrete instance of `SessionReplayWebPrivacyMapInput` via:
//
//	SessionReplayWebPrivacyMap{ "key": SessionReplayWebPrivacyArgs{...} }
type SessionReplayWebPrivacyMapInput interface {
	pulumi.Input

	ToSessionReplayWebPrivacyMapOutput() SessionReplayWebPrivacyMapOutput
	ToSessionReplayWebPrivacyMapOutputWithContext(context.Context) SessionReplayWebPrivacyMapOutput
}

type SessionReplayWebPrivacyMap map[string]SessionReplayWebPrivacyInput

func (SessionReplayWebPrivacyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SessionReplayWebPrivacy)(nil)).Elem()
}

func (i SessionReplayWebPrivacyMap) ToSessionReplayWebPrivacyMapOutput() SessionReplayWebPrivacyMapOutput {
	return i.ToSessionReplayWebPrivacyMapOutputWithContext(context.Background())
}

func (i SessionReplayWebPrivacyMap) ToSessionReplayWebPrivacyMapOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SessionReplayWebPrivacyMapOutput)
}

type SessionReplayWebPrivacyOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SessionReplayWebPrivacy)(nil)).Elem()
}

func (o SessionReplayWebPrivacyOutput) ToSessionReplayWebPrivacyOutput() SessionReplayWebPrivacyOutput {
	return o
}

func (o SessionReplayWebPrivacyOutput) ToSessionReplayWebPrivacyOutputWithContext(ctx context.Context) SessionReplayWebPrivacyOutput {
	return o
}

// The scope of this settings. If the settings should cover the whole environment, just don't specify any scope.
func (o SessionReplayWebPrivacyOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacy) pulumi.StringPtrOutput { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) When [Session Replay opt-in mode](https://dt-url.net/sr-opt-in-mode) is turned on, Session Replay is deactivated until explicitly activated via an API call.
func (o SessionReplayWebPrivacyOutput) EnableOptInMode() pulumi.BoolOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacy) pulumi.BoolOutput { return v.EnableOptInMode }).(pulumi.BoolOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) To protect your end users' privacy, select or customize [predefined masking options](https://dt-url.net/sr-masking-preset-options) that suit your content recording and playback requirements.
func (o SessionReplayWebPrivacyOutput) MaskingPresets() SessionReplayWebPrivacyMaskingPresetsOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacy) SessionReplayWebPrivacyMaskingPresetsOutput { return v.MaskingPresets }).(SessionReplayWebPrivacyMaskingPresetsOutput)
}

// (Field has overlap with `ApplicationDataPrivacy`) Exclude webpages or views from Session Replay recording by adding [URL exclusion rules](https://dt-url.net/sr-url-exclusion)
func (o SessionReplayWebPrivacyOutput) UrlExclusionPatternLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SessionReplayWebPrivacy) pulumi.StringArrayOutput { return v.UrlExclusionPatternLists }).(pulumi.StringArrayOutput)
}

type SessionReplayWebPrivacyArrayOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SessionReplayWebPrivacy)(nil)).Elem()
}

func (o SessionReplayWebPrivacyArrayOutput) ToSessionReplayWebPrivacyArrayOutput() SessionReplayWebPrivacyArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyArrayOutput) ToSessionReplayWebPrivacyArrayOutputWithContext(ctx context.Context) SessionReplayWebPrivacyArrayOutput {
	return o
}

func (o SessionReplayWebPrivacyArrayOutput) Index(i pulumi.IntInput) SessionReplayWebPrivacyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SessionReplayWebPrivacy {
		return vs[0].([]*SessionReplayWebPrivacy)[vs[1].(int)]
	}).(SessionReplayWebPrivacyOutput)
}

type SessionReplayWebPrivacyMapOutput struct{ *pulumi.OutputState }

func (SessionReplayWebPrivacyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SessionReplayWebPrivacy)(nil)).Elem()
}

func (o SessionReplayWebPrivacyMapOutput) ToSessionReplayWebPrivacyMapOutput() SessionReplayWebPrivacyMapOutput {
	return o
}

func (o SessionReplayWebPrivacyMapOutput) ToSessionReplayWebPrivacyMapOutputWithContext(ctx context.Context) SessionReplayWebPrivacyMapOutput {
	return o
}

func (o SessionReplayWebPrivacyMapOutput) MapIndex(k pulumi.StringInput) SessionReplayWebPrivacyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SessionReplayWebPrivacy {
		return vs[0].(map[string]*SessionReplayWebPrivacy)[vs[1].(string)]
	}).(SessionReplayWebPrivacyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyInput)(nil)).Elem(), &SessionReplayWebPrivacy{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyArrayInput)(nil)).Elem(), SessionReplayWebPrivacyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SessionReplayWebPrivacyMapInput)(nil)).Elem(), SessionReplayWebPrivacyMap{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyArrayOutput{})
	pulumi.RegisterOutputType(SessionReplayWebPrivacyMapOutput{})
}
