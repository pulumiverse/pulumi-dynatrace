// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type K8sNamespaceAnomalies struct {
	pulumi.CustomResourceState

	// Alerts if almost no CPU-limit quota left in namespace
	CpuLimitsQuotaSaturation K8sNamespaceAnomaliesCpuLimitsQuotaSaturationOutput `pulumi:"cpuLimitsQuotaSaturation"`
	// Alerts if almost no CPU-request quota left in namespace
	CpuRequestsQuotaSaturation K8sNamespaceAnomaliesCpuRequestsQuotaSaturationOutput `pulumi:"cpuRequestsQuotaSaturation"`
	// Alerts if almost no memory-limit quota left in namespace
	MemoryLimitsQuotaSaturation K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationOutput `pulumi:"memoryLimitsQuotaSaturation"`
	// Alerts if almost no memory-request quota left in namespace
	MemoryRequestsQuotaSaturation K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationOutput `pulumi:"memoryRequestsQuotaSaturation"`
	// Alerts if almost no pod quota left in namespace
	PodsQuotaSaturation K8sNamespaceAnomaliesPodsQuotaSaturationOutput `pulumi:"podsQuotaSaturation"`
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
}

// NewK8sNamespaceAnomalies registers a new resource with the given unique name, arguments, and options.
func NewK8sNamespaceAnomalies(ctx *pulumi.Context,
	name string, args *K8sNamespaceAnomaliesArgs, opts ...pulumi.ResourceOption) (*K8sNamespaceAnomalies, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CpuLimitsQuotaSaturation == nil {
		return nil, errors.New("invalid value for required argument 'CpuLimitsQuotaSaturation'")
	}
	if args.CpuRequestsQuotaSaturation == nil {
		return nil, errors.New("invalid value for required argument 'CpuRequestsQuotaSaturation'")
	}
	if args.MemoryLimitsQuotaSaturation == nil {
		return nil, errors.New("invalid value for required argument 'MemoryLimitsQuotaSaturation'")
	}
	if args.MemoryRequestsQuotaSaturation == nil {
		return nil, errors.New("invalid value for required argument 'MemoryRequestsQuotaSaturation'")
	}
	if args.PodsQuotaSaturation == nil {
		return nil, errors.New("invalid value for required argument 'PodsQuotaSaturation'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource K8sNamespaceAnomalies
	err := ctx.RegisterResource("dynatrace:index/k8sNamespaceAnomalies:K8sNamespaceAnomalies", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetK8sNamespaceAnomalies gets an existing K8sNamespaceAnomalies resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetK8sNamespaceAnomalies(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *K8sNamespaceAnomaliesState, opts ...pulumi.ResourceOption) (*K8sNamespaceAnomalies, error) {
	var resource K8sNamespaceAnomalies
	err := ctx.ReadResource("dynatrace:index/k8sNamespaceAnomalies:K8sNamespaceAnomalies", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering K8sNamespaceAnomalies resources.
type k8sNamespaceAnomaliesState struct {
	// Alerts if almost no CPU-limit quota left in namespace
	CpuLimitsQuotaSaturation *K8sNamespaceAnomaliesCpuLimitsQuotaSaturation `pulumi:"cpuLimitsQuotaSaturation"`
	// Alerts if almost no CPU-request quota left in namespace
	CpuRequestsQuotaSaturation *K8sNamespaceAnomaliesCpuRequestsQuotaSaturation `pulumi:"cpuRequestsQuotaSaturation"`
	// Alerts if almost no memory-limit quota left in namespace
	MemoryLimitsQuotaSaturation *K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation `pulumi:"memoryLimitsQuotaSaturation"`
	// Alerts if almost no memory-request quota left in namespace
	MemoryRequestsQuotaSaturation *K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation `pulumi:"memoryRequestsQuotaSaturation"`
	// Alerts if almost no pod quota left in namespace
	PodsQuotaSaturation *K8sNamespaceAnomaliesPodsQuotaSaturation `pulumi:"podsQuotaSaturation"`
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

type K8sNamespaceAnomaliesState struct {
	// Alerts if almost no CPU-limit quota left in namespace
	CpuLimitsQuotaSaturation K8sNamespaceAnomaliesCpuLimitsQuotaSaturationPtrInput
	// Alerts if almost no CPU-request quota left in namespace
	CpuRequestsQuotaSaturation K8sNamespaceAnomaliesCpuRequestsQuotaSaturationPtrInput
	// Alerts if almost no memory-limit quota left in namespace
	MemoryLimitsQuotaSaturation K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationPtrInput
	// Alerts if almost no memory-request quota left in namespace
	MemoryRequestsQuotaSaturation K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationPtrInput
	// Alerts if almost no pod quota left in namespace
	PodsQuotaSaturation K8sNamespaceAnomaliesPodsQuotaSaturationPtrInput
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (K8sNamespaceAnomaliesState) ElementType() reflect.Type {
	return reflect.TypeOf((*k8sNamespaceAnomaliesState)(nil)).Elem()
}

type k8sNamespaceAnomaliesArgs struct {
	// Alerts if almost no CPU-limit quota left in namespace
	CpuLimitsQuotaSaturation K8sNamespaceAnomaliesCpuLimitsQuotaSaturation `pulumi:"cpuLimitsQuotaSaturation"`
	// Alerts if almost no CPU-request quota left in namespace
	CpuRequestsQuotaSaturation K8sNamespaceAnomaliesCpuRequestsQuotaSaturation `pulumi:"cpuRequestsQuotaSaturation"`
	// Alerts if almost no memory-limit quota left in namespace
	MemoryLimitsQuotaSaturation K8sNamespaceAnomaliesMemoryLimitsQuotaSaturation `pulumi:"memoryLimitsQuotaSaturation"`
	// Alerts if almost no memory-request quota left in namespace
	MemoryRequestsQuotaSaturation K8sNamespaceAnomaliesMemoryRequestsQuotaSaturation `pulumi:"memoryRequestsQuotaSaturation"`
	// Alerts if almost no pod quota left in namespace
	PodsQuotaSaturation K8sNamespaceAnomaliesPodsQuotaSaturation `pulumi:"podsQuotaSaturation"`
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope *string `pulumi:"scope"`
}

// The set of arguments for constructing a K8sNamespaceAnomalies resource.
type K8sNamespaceAnomaliesArgs struct {
	// Alerts if almost no CPU-limit quota left in namespace
	CpuLimitsQuotaSaturation K8sNamespaceAnomaliesCpuLimitsQuotaSaturationInput
	// Alerts if almost no CPU-request quota left in namespace
	CpuRequestsQuotaSaturation K8sNamespaceAnomaliesCpuRequestsQuotaSaturationInput
	// Alerts if almost no memory-limit quota left in namespace
	MemoryLimitsQuotaSaturation K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationInput
	// Alerts if almost no memory-request quota left in namespace
	MemoryRequestsQuotaSaturation K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationInput
	// Alerts if almost no pod quota left in namespace
	PodsQuotaSaturation K8sNamespaceAnomaliesPodsQuotaSaturationInput
	// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
	Scope pulumi.StringPtrInput
}

func (K8sNamespaceAnomaliesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*k8sNamespaceAnomaliesArgs)(nil)).Elem()
}

type K8sNamespaceAnomaliesInput interface {
	pulumi.Input

	ToK8sNamespaceAnomaliesOutput() K8sNamespaceAnomaliesOutput
	ToK8sNamespaceAnomaliesOutputWithContext(ctx context.Context) K8sNamespaceAnomaliesOutput
}

func (*K8sNamespaceAnomalies) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNamespaceAnomalies)(nil)).Elem()
}

func (i *K8sNamespaceAnomalies) ToK8sNamespaceAnomaliesOutput() K8sNamespaceAnomaliesOutput {
	return i.ToK8sNamespaceAnomaliesOutputWithContext(context.Background())
}

func (i *K8sNamespaceAnomalies) ToK8sNamespaceAnomaliesOutputWithContext(ctx context.Context) K8sNamespaceAnomaliesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNamespaceAnomaliesOutput)
}

// K8sNamespaceAnomaliesArrayInput is an input type that accepts K8sNamespaceAnomaliesArray and K8sNamespaceAnomaliesArrayOutput values.
// You can construct a concrete instance of `K8sNamespaceAnomaliesArrayInput` via:
//
//	K8sNamespaceAnomaliesArray{ K8sNamespaceAnomaliesArgs{...} }
type K8sNamespaceAnomaliesArrayInput interface {
	pulumi.Input

	ToK8sNamespaceAnomaliesArrayOutput() K8sNamespaceAnomaliesArrayOutput
	ToK8sNamespaceAnomaliesArrayOutputWithContext(context.Context) K8sNamespaceAnomaliesArrayOutput
}

type K8sNamespaceAnomaliesArray []K8sNamespaceAnomaliesInput

func (K8sNamespaceAnomaliesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*K8sNamespaceAnomalies)(nil)).Elem()
}

func (i K8sNamespaceAnomaliesArray) ToK8sNamespaceAnomaliesArrayOutput() K8sNamespaceAnomaliesArrayOutput {
	return i.ToK8sNamespaceAnomaliesArrayOutputWithContext(context.Background())
}

func (i K8sNamespaceAnomaliesArray) ToK8sNamespaceAnomaliesArrayOutputWithContext(ctx context.Context) K8sNamespaceAnomaliesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNamespaceAnomaliesArrayOutput)
}

// K8sNamespaceAnomaliesMapInput is an input type that accepts K8sNamespaceAnomaliesMap and K8sNamespaceAnomaliesMapOutput values.
// You can construct a concrete instance of `K8sNamespaceAnomaliesMapInput` via:
//
//	K8sNamespaceAnomaliesMap{ "key": K8sNamespaceAnomaliesArgs{...} }
type K8sNamespaceAnomaliesMapInput interface {
	pulumi.Input

	ToK8sNamespaceAnomaliesMapOutput() K8sNamespaceAnomaliesMapOutput
	ToK8sNamespaceAnomaliesMapOutputWithContext(context.Context) K8sNamespaceAnomaliesMapOutput
}

type K8sNamespaceAnomaliesMap map[string]K8sNamespaceAnomaliesInput

func (K8sNamespaceAnomaliesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*K8sNamespaceAnomalies)(nil)).Elem()
}

func (i K8sNamespaceAnomaliesMap) ToK8sNamespaceAnomaliesMapOutput() K8sNamespaceAnomaliesMapOutput {
	return i.ToK8sNamespaceAnomaliesMapOutputWithContext(context.Background())
}

func (i K8sNamespaceAnomaliesMap) ToK8sNamespaceAnomaliesMapOutputWithContext(ctx context.Context) K8sNamespaceAnomaliesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(K8sNamespaceAnomaliesMapOutput)
}

type K8sNamespaceAnomaliesOutput struct{ *pulumi.OutputState }

func (K8sNamespaceAnomaliesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**K8sNamespaceAnomalies)(nil)).Elem()
}

func (o K8sNamespaceAnomaliesOutput) ToK8sNamespaceAnomaliesOutput() K8sNamespaceAnomaliesOutput {
	return o
}

func (o K8sNamespaceAnomaliesOutput) ToK8sNamespaceAnomaliesOutputWithContext(ctx context.Context) K8sNamespaceAnomaliesOutput {
	return o
}

// Alerts if almost no CPU-limit quota left in namespace
func (o K8sNamespaceAnomaliesOutput) CpuLimitsQuotaSaturation() K8sNamespaceAnomaliesCpuLimitsQuotaSaturationOutput {
	return o.ApplyT(func(v *K8sNamespaceAnomalies) K8sNamespaceAnomaliesCpuLimitsQuotaSaturationOutput {
		return v.CpuLimitsQuotaSaturation
	}).(K8sNamespaceAnomaliesCpuLimitsQuotaSaturationOutput)
}

// Alerts if almost no CPU-request quota left in namespace
func (o K8sNamespaceAnomaliesOutput) CpuRequestsQuotaSaturation() K8sNamespaceAnomaliesCpuRequestsQuotaSaturationOutput {
	return o.ApplyT(func(v *K8sNamespaceAnomalies) K8sNamespaceAnomaliesCpuRequestsQuotaSaturationOutput {
		return v.CpuRequestsQuotaSaturation
	}).(K8sNamespaceAnomaliesCpuRequestsQuotaSaturationOutput)
}

// Alerts if almost no memory-limit quota left in namespace
func (o K8sNamespaceAnomaliesOutput) MemoryLimitsQuotaSaturation() K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationOutput {
	return o.ApplyT(func(v *K8sNamespaceAnomalies) K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationOutput {
		return v.MemoryLimitsQuotaSaturation
	}).(K8sNamespaceAnomaliesMemoryLimitsQuotaSaturationOutput)
}

// Alerts if almost no memory-request quota left in namespace
func (o K8sNamespaceAnomaliesOutput) MemoryRequestsQuotaSaturation() K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationOutput {
	return o.ApplyT(func(v *K8sNamespaceAnomalies) K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationOutput {
		return v.MemoryRequestsQuotaSaturation
	}).(K8sNamespaceAnomaliesMemoryRequestsQuotaSaturationOutput)
}

// Alerts if almost no pod quota left in namespace
func (o K8sNamespaceAnomaliesOutput) PodsQuotaSaturation() K8sNamespaceAnomaliesPodsQuotaSaturationOutput {
	return o.ApplyT(func(v *K8sNamespaceAnomalies) K8sNamespaceAnomaliesPodsQuotaSaturationOutput {
		return v.PodsQuotaSaturation
	}).(K8sNamespaceAnomaliesPodsQuotaSaturationOutput)
}

// The scope of this setting (CLOUD*APPLICATION*NAMESPACE, KUBERNETES_CLUSTER). Omit this property if you want to cover the whole environment.
func (o K8sNamespaceAnomaliesOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *K8sNamespaceAnomalies) pulumi.StringPtrOutput { return v.Scope }).(pulumi.StringPtrOutput)
}

type K8sNamespaceAnomaliesArrayOutput struct{ *pulumi.OutputState }

func (K8sNamespaceAnomaliesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*K8sNamespaceAnomalies)(nil)).Elem()
}

func (o K8sNamespaceAnomaliesArrayOutput) ToK8sNamespaceAnomaliesArrayOutput() K8sNamespaceAnomaliesArrayOutput {
	return o
}

func (o K8sNamespaceAnomaliesArrayOutput) ToK8sNamespaceAnomaliesArrayOutputWithContext(ctx context.Context) K8sNamespaceAnomaliesArrayOutput {
	return o
}

func (o K8sNamespaceAnomaliesArrayOutput) Index(i pulumi.IntInput) K8sNamespaceAnomaliesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *K8sNamespaceAnomalies {
		return vs[0].([]*K8sNamespaceAnomalies)[vs[1].(int)]
	}).(K8sNamespaceAnomaliesOutput)
}

type K8sNamespaceAnomaliesMapOutput struct{ *pulumi.OutputState }

func (K8sNamespaceAnomaliesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*K8sNamespaceAnomalies)(nil)).Elem()
}

func (o K8sNamespaceAnomaliesMapOutput) ToK8sNamespaceAnomaliesMapOutput() K8sNamespaceAnomaliesMapOutput {
	return o
}

func (o K8sNamespaceAnomaliesMapOutput) ToK8sNamespaceAnomaliesMapOutputWithContext(ctx context.Context) K8sNamespaceAnomaliesMapOutput {
	return o
}

func (o K8sNamespaceAnomaliesMapOutput) MapIndex(k pulumi.StringInput) K8sNamespaceAnomaliesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *K8sNamespaceAnomalies {
		return vs[0].(map[string]*K8sNamespaceAnomalies)[vs[1].(string)]
	}).(K8sNamespaceAnomaliesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNamespaceAnomaliesInput)(nil)).Elem(), &K8sNamespaceAnomalies{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNamespaceAnomaliesArrayInput)(nil)).Elem(), K8sNamespaceAnomaliesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*K8sNamespaceAnomaliesMapInput)(nil)).Elem(), K8sNamespaceAnomaliesMap{})
	pulumi.RegisterOutputType(K8sNamespaceAnomaliesOutput{})
	pulumi.RegisterOutputType(K8sNamespaceAnomaliesArrayOutput{})
	pulumi.RegisterOutputType(K8sNamespaceAnomaliesMapOutput{})
}
