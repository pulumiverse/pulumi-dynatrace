// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type CloudDevelopmentEnvironments struct {
	pulumi.CustomResourceState

	// The URL to allow app development from. E.g. `https://*.my-company.my-cde-provider.com`.
	CloudDevelopmentEnvironments pulumi.StringArrayOutput `pulumi:"cloudDevelopmentEnvironments"`
}

// NewCloudDevelopmentEnvironments registers a new resource with the given unique name, arguments, and options.
func NewCloudDevelopmentEnvironments(ctx *pulumi.Context,
	name string, args *CloudDevelopmentEnvironmentsArgs, opts ...pulumi.ResourceOption) (*CloudDevelopmentEnvironments, error) {
	if args == nil {
		args = &CloudDevelopmentEnvironmentsArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudDevelopmentEnvironments
	err := ctx.RegisterResource("dynatrace:index/cloudDevelopmentEnvironments:CloudDevelopmentEnvironments", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudDevelopmentEnvironments gets an existing CloudDevelopmentEnvironments resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudDevelopmentEnvironments(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudDevelopmentEnvironmentsState, opts ...pulumi.ResourceOption) (*CloudDevelopmentEnvironments, error) {
	var resource CloudDevelopmentEnvironments
	err := ctx.ReadResource("dynatrace:index/cloudDevelopmentEnvironments:CloudDevelopmentEnvironments", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudDevelopmentEnvironments resources.
type cloudDevelopmentEnvironmentsState struct {
	// The URL to allow app development from. E.g. `https://*.my-company.my-cde-provider.com`.
	CloudDevelopmentEnvironments []string `pulumi:"cloudDevelopmentEnvironments"`
}

type CloudDevelopmentEnvironmentsState struct {
	// The URL to allow app development from. E.g. `https://*.my-company.my-cde-provider.com`.
	CloudDevelopmentEnvironments pulumi.StringArrayInput
}

func (CloudDevelopmentEnvironmentsState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudDevelopmentEnvironmentsState)(nil)).Elem()
}

type cloudDevelopmentEnvironmentsArgs struct {
	// The URL to allow app development from. E.g. `https://*.my-company.my-cde-provider.com`.
	CloudDevelopmentEnvironments []string `pulumi:"cloudDevelopmentEnvironments"`
}

// The set of arguments for constructing a CloudDevelopmentEnvironments resource.
type CloudDevelopmentEnvironmentsArgs struct {
	// The URL to allow app development from. E.g. `https://*.my-company.my-cde-provider.com`.
	CloudDevelopmentEnvironments pulumi.StringArrayInput
}

func (CloudDevelopmentEnvironmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudDevelopmentEnvironmentsArgs)(nil)).Elem()
}

type CloudDevelopmentEnvironmentsInput interface {
	pulumi.Input

	ToCloudDevelopmentEnvironmentsOutput() CloudDevelopmentEnvironmentsOutput
	ToCloudDevelopmentEnvironmentsOutputWithContext(ctx context.Context) CloudDevelopmentEnvironmentsOutput
}

func (*CloudDevelopmentEnvironments) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudDevelopmentEnvironments)(nil)).Elem()
}

func (i *CloudDevelopmentEnvironments) ToCloudDevelopmentEnvironmentsOutput() CloudDevelopmentEnvironmentsOutput {
	return i.ToCloudDevelopmentEnvironmentsOutputWithContext(context.Background())
}

func (i *CloudDevelopmentEnvironments) ToCloudDevelopmentEnvironmentsOutputWithContext(ctx context.Context) CloudDevelopmentEnvironmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudDevelopmentEnvironmentsOutput)
}

// CloudDevelopmentEnvironmentsArrayInput is an input type that accepts CloudDevelopmentEnvironmentsArray and CloudDevelopmentEnvironmentsArrayOutput values.
// You can construct a concrete instance of `CloudDevelopmentEnvironmentsArrayInput` via:
//
//	CloudDevelopmentEnvironmentsArray{ CloudDevelopmentEnvironmentsArgs{...} }
type CloudDevelopmentEnvironmentsArrayInput interface {
	pulumi.Input

	ToCloudDevelopmentEnvironmentsArrayOutput() CloudDevelopmentEnvironmentsArrayOutput
	ToCloudDevelopmentEnvironmentsArrayOutputWithContext(context.Context) CloudDevelopmentEnvironmentsArrayOutput
}

type CloudDevelopmentEnvironmentsArray []CloudDevelopmentEnvironmentsInput

func (CloudDevelopmentEnvironmentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudDevelopmentEnvironments)(nil)).Elem()
}

func (i CloudDevelopmentEnvironmentsArray) ToCloudDevelopmentEnvironmentsArrayOutput() CloudDevelopmentEnvironmentsArrayOutput {
	return i.ToCloudDevelopmentEnvironmentsArrayOutputWithContext(context.Background())
}

func (i CloudDevelopmentEnvironmentsArray) ToCloudDevelopmentEnvironmentsArrayOutputWithContext(ctx context.Context) CloudDevelopmentEnvironmentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudDevelopmentEnvironmentsArrayOutput)
}

// CloudDevelopmentEnvironmentsMapInput is an input type that accepts CloudDevelopmentEnvironmentsMap and CloudDevelopmentEnvironmentsMapOutput values.
// You can construct a concrete instance of `CloudDevelopmentEnvironmentsMapInput` via:
//
//	CloudDevelopmentEnvironmentsMap{ "key": CloudDevelopmentEnvironmentsArgs{...} }
type CloudDevelopmentEnvironmentsMapInput interface {
	pulumi.Input

	ToCloudDevelopmentEnvironmentsMapOutput() CloudDevelopmentEnvironmentsMapOutput
	ToCloudDevelopmentEnvironmentsMapOutputWithContext(context.Context) CloudDevelopmentEnvironmentsMapOutput
}

type CloudDevelopmentEnvironmentsMap map[string]CloudDevelopmentEnvironmentsInput

func (CloudDevelopmentEnvironmentsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudDevelopmentEnvironments)(nil)).Elem()
}

func (i CloudDevelopmentEnvironmentsMap) ToCloudDevelopmentEnvironmentsMapOutput() CloudDevelopmentEnvironmentsMapOutput {
	return i.ToCloudDevelopmentEnvironmentsMapOutputWithContext(context.Background())
}

func (i CloudDevelopmentEnvironmentsMap) ToCloudDevelopmentEnvironmentsMapOutputWithContext(ctx context.Context) CloudDevelopmentEnvironmentsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudDevelopmentEnvironmentsMapOutput)
}

type CloudDevelopmentEnvironmentsOutput struct{ *pulumi.OutputState }

func (CloudDevelopmentEnvironmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudDevelopmentEnvironments)(nil)).Elem()
}

func (o CloudDevelopmentEnvironmentsOutput) ToCloudDevelopmentEnvironmentsOutput() CloudDevelopmentEnvironmentsOutput {
	return o
}

func (o CloudDevelopmentEnvironmentsOutput) ToCloudDevelopmentEnvironmentsOutputWithContext(ctx context.Context) CloudDevelopmentEnvironmentsOutput {
	return o
}

// The URL to allow app development from. E.g. `https://*.my-company.my-cde-provider.com`.
func (o CloudDevelopmentEnvironmentsOutput) CloudDevelopmentEnvironments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudDevelopmentEnvironments) pulumi.StringArrayOutput { return v.CloudDevelopmentEnvironments }).(pulumi.StringArrayOutput)
}

type CloudDevelopmentEnvironmentsArrayOutput struct{ *pulumi.OutputState }

func (CloudDevelopmentEnvironmentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudDevelopmentEnvironments)(nil)).Elem()
}

func (o CloudDevelopmentEnvironmentsArrayOutput) ToCloudDevelopmentEnvironmentsArrayOutput() CloudDevelopmentEnvironmentsArrayOutput {
	return o
}

func (o CloudDevelopmentEnvironmentsArrayOutput) ToCloudDevelopmentEnvironmentsArrayOutputWithContext(ctx context.Context) CloudDevelopmentEnvironmentsArrayOutput {
	return o
}

func (o CloudDevelopmentEnvironmentsArrayOutput) Index(i pulumi.IntInput) CloudDevelopmentEnvironmentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudDevelopmentEnvironments {
		return vs[0].([]*CloudDevelopmentEnvironments)[vs[1].(int)]
	}).(CloudDevelopmentEnvironmentsOutput)
}

type CloudDevelopmentEnvironmentsMapOutput struct{ *pulumi.OutputState }

func (CloudDevelopmentEnvironmentsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudDevelopmentEnvironments)(nil)).Elem()
}

func (o CloudDevelopmentEnvironmentsMapOutput) ToCloudDevelopmentEnvironmentsMapOutput() CloudDevelopmentEnvironmentsMapOutput {
	return o
}

func (o CloudDevelopmentEnvironmentsMapOutput) ToCloudDevelopmentEnvironmentsMapOutputWithContext(ctx context.Context) CloudDevelopmentEnvironmentsMapOutput {
	return o
}

func (o CloudDevelopmentEnvironmentsMapOutput) MapIndex(k pulumi.StringInput) CloudDevelopmentEnvironmentsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudDevelopmentEnvironments {
		return vs[0].(map[string]*CloudDevelopmentEnvironments)[vs[1].(string)]
	}).(CloudDevelopmentEnvironmentsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudDevelopmentEnvironmentsInput)(nil)).Elem(), &CloudDevelopmentEnvironments{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudDevelopmentEnvironmentsArrayInput)(nil)).Elem(), CloudDevelopmentEnvironmentsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudDevelopmentEnvironmentsMapInput)(nil)).Elem(), CloudDevelopmentEnvironmentsMap{})
	pulumi.RegisterOutputType(CloudDevelopmentEnvironmentsOutput{})
	pulumi.RegisterOutputType(CloudDevelopmentEnvironmentsArrayOutput{})
	pulumi.RegisterOutputType(CloudDevelopmentEnvironmentsMapOutput{})
}
