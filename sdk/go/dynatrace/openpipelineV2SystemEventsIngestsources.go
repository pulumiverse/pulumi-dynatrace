// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type OpenpipelineV2SystemEventsIngestsources struct {
	pulumi.CustomResourceState

	// Default Bucket
	DefaultBucket pulumi.StringPtrOutput `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Endpoint segment
	PathSegment pulumi.StringOutput `pulumi:"pathSegment"`
	// Processing stage
	Processing OpenpipelineV2SystemEventsIngestsourcesProcessingOutput `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting OpenpipelineV2SystemEventsIngestsourcesStaticRoutingPtrOutput `pulumi:"staticRouting"`
}

// NewOpenpipelineV2SystemEventsIngestsources registers a new resource with the given unique name, arguments, and options.
func NewOpenpipelineV2SystemEventsIngestsources(ctx *pulumi.Context,
	name string, args *OpenpipelineV2SystemEventsIngestsourcesArgs, opts ...pulumi.ResourceOption) (*OpenpipelineV2SystemEventsIngestsources, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.PathSegment == nil {
		return nil, errors.New("invalid value for required argument 'PathSegment'")
	}
	if args.Processing == nil {
		return nil, errors.New("invalid value for required argument 'Processing'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OpenpipelineV2SystemEventsIngestsources
	err := ctx.RegisterResource("dynatrace:index/openpipelineV2SystemEventsIngestsources:OpenpipelineV2SystemEventsIngestsources", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenpipelineV2SystemEventsIngestsources gets an existing OpenpipelineV2SystemEventsIngestsources resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenpipelineV2SystemEventsIngestsources(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenpipelineV2SystemEventsIngestsourcesState, opts ...pulumi.ResourceOption) (*OpenpipelineV2SystemEventsIngestsources, error) {
	var resource OpenpipelineV2SystemEventsIngestsources
	err := ctx.ReadResource("dynatrace:index/openpipelineV2SystemEventsIngestsources:OpenpipelineV2SystemEventsIngestsources", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenpipelineV2SystemEventsIngestsources resources.
type openpipelineV2SystemEventsIngestsourcesState struct {
	// Default Bucket
	DefaultBucket *string `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName *string `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Endpoint segment
	PathSegment *string `pulumi:"pathSegment"`
	// Processing stage
	Processing *OpenpipelineV2SystemEventsIngestsourcesProcessing `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting *OpenpipelineV2SystemEventsIngestsourcesStaticRouting `pulumi:"staticRouting"`
}

type OpenpipelineV2SystemEventsIngestsourcesState struct {
	// Default Bucket
	DefaultBucket pulumi.StringPtrInput
	// Endpoint display name
	DisplayName pulumi.StringPtrInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Endpoint segment
	PathSegment pulumi.StringPtrInput
	// Processing stage
	Processing OpenpipelineV2SystemEventsIngestsourcesProcessingPtrInput
	// Static routing of endpoint
	StaticRouting OpenpipelineV2SystemEventsIngestsourcesStaticRoutingPtrInput
}

func (OpenpipelineV2SystemEventsIngestsourcesState) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2SystemEventsIngestsourcesState)(nil)).Elem()
}

type openpipelineV2SystemEventsIngestsourcesArgs struct {
	// Default Bucket
	DefaultBucket *string `pulumi:"defaultBucket"`
	// Endpoint display name
	DisplayName string `pulumi:"displayName"`
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Endpoint segment
	PathSegment string `pulumi:"pathSegment"`
	// Processing stage
	Processing OpenpipelineV2SystemEventsIngestsourcesProcessing `pulumi:"processing"`
	// Static routing of endpoint
	StaticRouting *OpenpipelineV2SystemEventsIngestsourcesStaticRouting `pulumi:"staticRouting"`
}

// The set of arguments for constructing a OpenpipelineV2SystemEventsIngestsources resource.
type OpenpipelineV2SystemEventsIngestsourcesArgs struct {
	// Default Bucket
	DefaultBucket pulumi.StringPtrInput
	// Endpoint display name
	DisplayName pulumi.StringInput
	// This setting is enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Endpoint segment
	PathSegment pulumi.StringInput
	// Processing stage
	Processing OpenpipelineV2SystemEventsIngestsourcesProcessingInput
	// Static routing of endpoint
	StaticRouting OpenpipelineV2SystemEventsIngestsourcesStaticRoutingPtrInput
}

func (OpenpipelineV2SystemEventsIngestsourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openpipelineV2SystemEventsIngestsourcesArgs)(nil)).Elem()
}

type OpenpipelineV2SystemEventsIngestsourcesInput interface {
	pulumi.Input

	ToOpenpipelineV2SystemEventsIngestsourcesOutput() OpenpipelineV2SystemEventsIngestsourcesOutput
	ToOpenpipelineV2SystemEventsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2SystemEventsIngestsourcesOutput
}

func (*OpenpipelineV2SystemEventsIngestsources) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2SystemEventsIngestsources)(nil)).Elem()
}

func (i *OpenpipelineV2SystemEventsIngestsources) ToOpenpipelineV2SystemEventsIngestsourcesOutput() OpenpipelineV2SystemEventsIngestsourcesOutput {
	return i.ToOpenpipelineV2SystemEventsIngestsourcesOutputWithContext(context.Background())
}

func (i *OpenpipelineV2SystemEventsIngestsources) ToOpenpipelineV2SystemEventsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2SystemEventsIngestsourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SystemEventsIngestsourcesOutput)
}

// OpenpipelineV2SystemEventsIngestsourcesArrayInput is an input type that accepts OpenpipelineV2SystemEventsIngestsourcesArray and OpenpipelineV2SystemEventsIngestsourcesArrayOutput values.
// You can construct a concrete instance of `OpenpipelineV2SystemEventsIngestsourcesArrayInput` via:
//
//	OpenpipelineV2SystemEventsIngestsourcesArray{ OpenpipelineV2SystemEventsIngestsourcesArgs{...} }
type OpenpipelineV2SystemEventsIngestsourcesArrayInput interface {
	pulumi.Input

	ToOpenpipelineV2SystemEventsIngestsourcesArrayOutput() OpenpipelineV2SystemEventsIngestsourcesArrayOutput
	ToOpenpipelineV2SystemEventsIngestsourcesArrayOutputWithContext(context.Context) OpenpipelineV2SystemEventsIngestsourcesArrayOutput
}

type OpenpipelineV2SystemEventsIngestsourcesArray []OpenpipelineV2SystemEventsIngestsourcesInput

func (OpenpipelineV2SystemEventsIngestsourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2SystemEventsIngestsources)(nil)).Elem()
}

func (i OpenpipelineV2SystemEventsIngestsourcesArray) ToOpenpipelineV2SystemEventsIngestsourcesArrayOutput() OpenpipelineV2SystemEventsIngestsourcesArrayOutput {
	return i.ToOpenpipelineV2SystemEventsIngestsourcesArrayOutputWithContext(context.Background())
}

func (i OpenpipelineV2SystemEventsIngestsourcesArray) ToOpenpipelineV2SystemEventsIngestsourcesArrayOutputWithContext(ctx context.Context) OpenpipelineV2SystemEventsIngestsourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SystemEventsIngestsourcesArrayOutput)
}

// OpenpipelineV2SystemEventsIngestsourcesMapInput is an input type that accepts OpenpipelineV2SystemEventsIngestsourcesMap and OpenpipelineV2SystemEventsIngestsourcesMapOutput values.
// You can construct a concrete instance of `OpenpipelineV2SystemEventsIngestsourcesMapInput` via:
//
//	OpenpipelineV2SystemEventsIngestsourcesMap{ "key": OpenpipelineV2SystemEventsIngestsourcesArgs{...} }
type OpenpipelineV2SystemEventsIngestsourcesMapInput interface {
	pulumi.Input

	ToOpenpipelineV2SystemEventsIngestsourcesMapOutput() OpenpipelineV2SystemEventsIngestsourcesMapOutput
	ToOpenpipelineV2SystemEventsIngestsourcesMapOutputWithContext(context.Context) OpenpipelineV2SystemEventsIngestsourcesMapOutput
}

type OpenpipelineV2SystemEventsIngestsourcesMap map[string]OpenpipelineV2SystemEventsIngestsourcesInput

func (OpenpipelineV2SystemEventsIngestsourcesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2SystemEventsIngestsources)(nil)).Elem()
}

func (i OpenpipelineV2SystemEventsIngestsourcesMap) ToOpenpipelineV2SystemEventsIngestsourcesMapOutput() OpenpipelineV2SystemEventsIngestsourcesMapOutput {
	return i.ToOpenpipelineV2SystemEventsIngestsourcesMapOutputWithContext(context.Background())
}

func (i OpenpipelineV2SystemEventsIngestsourcesMap) ToOpenpipelineV2SystemEventsIngestsourcesMapOutputWithContext(ctx context.Context) OpenpipelineV2SystemEventsIngestsourcesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenpipelineV2SystemEventsIngestsourcesMapOutput)
}

type OpenpipelineV2SystemEventsIngestsourcesOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SystemEventsIngestsourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenpipelineV2SystemEventsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2SystemEventsIngestsourcesOutput) ToOpenpipelineV2SystemEventsIngestsourcesOutput() OpenpipelineV2SystemEventsIngestsourcesOutput {
	return o
}

func (o OpenpipelineV2SystemEventsIngestsourcesOutput) ToOpenpipelineV2SystemEventsIngestsourcesOutputWithContext(ctx context.Context) OpenpipelineV2SystemEventsIngestsourcesOutput {
	return o
}

// Default Bucket
func (o OpenpipelineV2SystemEventsIngestsourcesOutput) DefaultBucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenpipelineV2SystemEventsIngestsources) pulumi.StringPtrOutput { return v.DefaultBucket }).(pulumi.StringPtrOutput)
}

// Endpoint display name
func (o OpenpipelineV2SystemEventsIngestsourcesOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2SystemEventsIngestsources) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// This setting is enabled (`true`) or disabled (`false`)
func (o OpenpipelineV2SystemEventsIngestsourcesOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *OpenpipelineV2SystemEventsIngestsources) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Endpoint segment
func (o OpenpipelineV2SystemEventsIngestsourcesOutput) PathSegment() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenpipelineV2SystemEventsIngestsources) pulumi.StringOutput { return v.PathSegment }).(pulumi.StringOutput)
}

// Processing stage
func (o OpenpipelineV2SystemEventsIngestsourcesOutput) Processing() OpenpipelineV2SystemEventsIngestsourcesProcessingOutput {
	return o.ApplyT(func(v *OpenpipelineV2SystemEventsIngestsources) OpenpipelineV2SystemEventsIngestsourcesProcessingOutput {
		return v.Processing
	}).(OpenpipelineV2SystemEventsIngestsourcesProcessingOutput)
}

// Static routing of endpoint
func (o OpenpipelineV2SystemEventsIngestsourcesOutput) StaticRouting() OpenpipelineV2SystemEventsIngestsourcesStaticRoutingPtrOutput {
	return o.ApplyT(func(v *OpenpipelineV2SystemEventsIngestsources) OpenpipelineV2SystemEventsIngestsourcesStaticRoutingPtrOutput {
		return v.StaticRouting
	}).(OpenpipelineV2SystemEventsIngestsourcesStaticRoutingPtrOutput)
}

type OpenpipelineV2SystemEventsIngestsourcesArrayOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SystemEventsIngestsourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenpipelineV2SystemEventsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2SystemEventsIngestsourcesArrayOutput) ToOpenpipelineV2SystemEventsIngestsourcesArrayOutput() OpenpipelineV2SystemEventsIngestsourcesArrayOutput {
	return o
}

func (o OpenpipelineV2SystemEventsIngestsourcesArrayOutput) ToOpenpipelineV2SystemEventsIngestsourcesArrayOutputWithContext(ctx context.Context) OpenpipelineV2SystemEventsIngestsourcesArrayOutput {
	return o
}

func (o OpenpipelineV2SystemEventsIngestsourcesArrayOutput) Index(i pulumi.IntInput) OpenpipelineV2SystemEventsIngestsourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenpipelineV2SystemEventsIngestsources {
		return vs[0].([]*OpenpipelineV2SystemEventsIngestsources)[vs[1].(int)]
	}).(OpenpipelineV2SystemEventsIngestsourcesOutput)
}

type OpenpipelineV2SystemEventsIngestsourcesMapOutput struct{ *pulumi.OutputState }

func (OpenpipelineV2SystemEventsIngestsourcesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenpipelineV2SystemEventsIngestsources)(nil)).Elem()
}

func (o OpenpipelineV2SystemEventsIngestsourcesMapOutput) ToOpenpipelineV2SystemEventsIngestsourcesMapOutput() OpenpipelineV2SystemEventsIngestsourcesMapOutput {
	return o
}

func (o OpenpipelineV2SystemEventsIngestsourcesMapOutput) ToOpenpipelineV2SystemEventsIngestsourcesMapOutputWithContext(ctx context.Context) OpenpipelineV2SystemEventsIngestsourcesMapOutput {
	return o
}

func (o OpenpipelineV2SystemEventsIngestsourcesMapOutput) MapIndex(k pulumi.StringInput) OpenpipelineV2SystemEventsIngestsourcesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenpipelineV2SystemEventsIngestsources {
		return vs[0].(map[string]*OpenpipelineV2SystemEventsIngestsources)[vs[1].(string)]
	}).(OpenpipelineV2SystemEventsIngestsourcesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SystemEventsIngestsourcesInput)(nil)).Elem(), &OpenpipelineV2SystemEventsIngestsources{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SystemEventsIngestsourcesArrayInput)(nil)).Elem(), OpenpipelineV2SystemEventsIngestsourcesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenpipelineV2SystemEventsIngestsourcesMapInput)(nil)).Elem(), OpenpipelineV2SystemEventsIngestsourcesMap{})
	pulumi.RegisterOutputType(OpenpipelineV2SystemEventsIngestsourcesOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2SystemEventsIngestsourcesArrayOutput{})
	pulumi.RegisterOutputType(OpenpipelineV2SystemEventsIngestsourcesMapOutput{})
}
