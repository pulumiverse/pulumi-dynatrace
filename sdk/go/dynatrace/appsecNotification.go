// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type AppsecNotification struct {
	pulumi.CustomResourceState

	// For attack candidate alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the
	// delivery of security notifications related to this integration.
	AttackCandidateBasedAlertingProfile pulumi.StringPtrOutput `pulumi:"attackCandidateBasedAlertingProfile"`
	// Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`
	AttackCandidateBasedEmailPayload AppsecNotificationAttackCandidateBasedEmailPayloadPtrOutput `pulumi:"attackCandidateBasedEmailPayload"`
	// Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`
	AttackCandidateBasedJiraPayload AppsecNotificationAttackCandidateBasedJiraPayloadPtrOutput `pulumi:"attackCandidateBasedJiraPayload"`
	// Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`
	AttackCandidateBasedWebhookPayload AppsecNotificationAttackCandidateBasedWebhookPayloadPtrOutput `pulumi:"attackCandidateBasedWebhookPayload"`
	// Display name of the security notification
	DisplayName pulumi.StringOutput `pulumi:"displayName"`
	// Email configuration, required when `type` equals `EMAIL`
	EmailConfiguration AppsecNotificationEmailConfigurationPtrOutput `pulumi:"emailConfiguration"`
	// Enable/Disable the security notification, enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Jira configuration, required when `type` equals `JIRA`
	JiraConfiguration AppsecNotificationJiraConfigurationPtrOutput `pulumi:"jiraConfiguration"`
	// For security problem alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-alerting-profile) to control the delivery of
	// security notifications related to this integration.
	SecurityProblemBasedAlertingProfile pulumi.StringPtrOutput `pulumi:"securityProblemBasedAlertingProfile"`
	// Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`
	SecurityProblemBasedEmailPayload AppsecNotificationSecurityProblemBasedEmailPayloadPtrOutput `pulumi:"securityProblemBasedEmailPayload"`
	// Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`
	SecurityProblemBasedJiraPayload AppsecNotificationSecurityProblemBasedJiraPayloadPtrOutput `pulumi:"securityProblemBasedJiraPayload"`
	// Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`
	SecurityProblemBasedWebhookPayload AppsecNotificationSecurityProblemBasedWebhookPayloadPtrOutput `pulumi:"securityProblemBasedWebhookPayload"`
	// Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`
	Trigger pulumi.StringOutput `pulumi:"trigger"`
	// Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`
	Type pulumi.StringOutput `pulumi:"type"`
	// Webhook configuration, required when `type` equals `WEBHOOK`
	WebhookConfiguration AppsecNotificationWebhookConfigurationPtrOutput `pulumi:"webhookConfiguration"`
}

// NewAppsecNotification registers a new resource with the given unique name, arguments, and options.
func NewAppsecNotification(ctx *pulumi.Context,
	name string, args *AppsecNotificationArgs, opts ...pulumi.ResourceOption) (*AppsecNotification, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DisplayName == nil {
		return nil, errors.New("invalid value for required argument 'DisplayName'")
	}
	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.Trigger == nil {
		return nil, errors.New("invalid value for required argument 'Trigger'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AppsecNotification
	err := ctx.RegisterResource("dynatrace:index/appsecNotification:AppsecNotification", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAppsecNotification gets an existing AppsecNotification resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAppsecNotification(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AppsecNotificationState, opts ...pulumi.ResourceOption) (*AppsecNotification, error) {
	var resource AppsecNotification
	err := ctx.ReadResource("dynatrace:index/appsecNotification:AppsecNotification", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AppsecNotification resources.
type appsecNotificationState struct {
	// For attack candidate alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the
	// delivery of security notifications related to this integration.
	AttackCandidateBasedAlertingProfile *string `pulumi:"attackCandidateBasedAlertingProfile"`
	// Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`
	AttackCandidateBasedEmailPayload *AppsecNotificationAttackCandidateBasedEmailPayload `pulumi:"attackCandidateBasedEmailPayload"`
	// Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`
	AttackCandidateBasedJiraPayload *AppsecNotificationAttackCandidateBasedJiraPayload `pulumi:"attackCandidateBasedJiraPayload"`
	// Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`
	AttackCandidateBasedWebhookPayload *AppsecNotificationAttackCandidateBasedWebhookPayload `pulumi:"attackCandidateBasedWebhookPayload"`
	// Display name of the security notification
	DisplayName *string `pulumi:"displayName"`
	// Email configuration, required when `type` equals `EMAIL`
	EmailConfiguration *AppsecNotificationEmailConfiguration `pulumi:"emailConfiguration"`
	// Enable/Disable the security notification, enabled (`true`) or disabled (`false`)
	Enabled *bool `pulumi:"enabled"`
	// Jira configuration, required when `type` equals `JIRA`
	JiraConfiguration *AppsecNotificationJiraConfiguration `pulumi:"jiraConfiguration"`
	// For security problem alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-alerting-profile) to control the delivery of
	// security notifications related to this integration.
	SecurityProblemBasedAlertingProfile *string `pulumi:"securityProblemBasedAlertingProfile"`
	// Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`
	SecurityProblemBasedEmailPayload *AppsecNotificationSecurityProblemBasedEmailPayload `pulumi:"securityProblemBasedEmailPayload"`
	// Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`
	SecurityProblemBasedJiraPayload *AppsecNotificationSecurityProblemBasedJiraPayload `pulumi:"securityProblemBasedJiraPayload"`
	// Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`
	SecurityProblemBasedWebhookPayload *AppsecNotificationSecurityProblemBasedWebhookPayload `pulumi:"securityProblemBasedWebhookPayload"`
	// Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`
	Trigger *string `pulumi:"trigger"`
	// Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`
	Type *string `pulumi:"type"`
	// Webhook configuration, required when `type` equals `WEBHOOK`
	WebhookConfiguration *AppsecNotificationWebhookConfiguration `pulumi:"webhookConfiguration"`
}

type AppsecNotificationState struct {
	// For attack candidate alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the
	// delivery of security notifications related to this integration.
	AttackCandidateBasedAlertingProfile pulumi.StringPtrInput
	// Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`
	AttackCandidateBasedEmailPayload AppsecNotificationAttackCandidateBasedEmailPayloadPtrInput
	// Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`
	AttackCandidateBasedJiraPayload AppsecNotificationAttackCandidateBasedJiraPayloadPtrInput
	// Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`
	AttackCandidateBasedWebhookPayload AppsecNotificationAttackCandidateBasedWebhookPayloadPtrInput
	// Display name of the security notification
	DisplayName pulumi.StringPtrInput
	// Email configuration, required when `type` equals `EMAIL`
	EmailConfiguration AppsecNotificationEmailConfigurationPtrInput
	// Enable/Disable the security notification, enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolPtrInput
	// Jira configuration, required when `type` equals `JIRA`
	JiraConfiguration AppsecNotificationJiraConfigurationPtrInput
	// For security problem alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-alerting-profile) to control the delivery of
	// security notifications related to this integration.
	SecurityProblemBasedAlertingProfile pulumi.StringPtrInput
	// Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`
	SecurityProblemBasedEmailPayload AppsecNotificationSecurityProblemBasedEmailPayloadPtrInput
	// Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`
	SecurityProblemBasedJiraPayload AppsecNotificationSecurityProblemBasedJiraPayloadPtrInput
	// Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`
	SecurityProblemBasedWebhookPayload AppsecNotificationSecurityProblemBasedWebhookPayloadPtrInput
	// Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`
	Trigger pulumi.StringPtrInput
	// Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`
	Type pulumi.StringPtrInput
	// Webhook configuration, required when `type` equals `WEBHOOK`
	WebhookConfiguration AppsecNotificationWebhookConfigurationPtrInput
}

func (AppsecNotificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecNotificationState)(nil)).Elem()
}

type appsecNotificationArgs struct {
	// For attack candidate alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the
	// delivery of security notifications related to this integration.
	AttackCandidateBasedAlertingProfile *string `pulumi:"attackCandidateBasedAlertingProfile"`
	// Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`
	AttackCandidateBasedEmailPayload *AppsecNotificationAttackCandidateBasedEmailPayload `pulumi:"attackCandidateBasedEmailPayload"`
	// Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`
	AttackCandidateBasedJiraPayload *AppsecNotificationAttackCandidateBasedJiraPayload `pulumi:"attackCandidateBasedJiraPayload"`
	// Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`
	AttackCandidateBasedWebhookPayload *AppsecNotificationAttackCandidateBasedWebhookPayload `pulumi:"attackCandidateBasedWebhookPayload"`
	// Display name of the security notification
	DisplayName string `pulumi:"displayName"`
	// Email configuration, required when `type` equals `EMAIL`
	EmailConfiguration *AppsecNotificationEmailConfiguration `pulumi:"emailConfiguration"`
	// Enable/Disable the security notification, enabled (`true`) or disabled (`false`)
	Enabled bool `pulumi:"enabled"`
	// Jira configuration, required when `type` equals `JIRA`
	JiraConfiguration *AppsecNotificationJiraConfiguration `pulumi:"jiraConfiguration"`
	// For security problem alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-alerting-profile) to control the delivery of
	// security notifications related to this integration.
	SecurityProblemBasedAlertingProfile *string `pulumi:"securityProblemBasedAlertingProfile"`
	// Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`
	SecurityProblemBasedEmailPayload *AppsecNotificationSecurityProblemBasedEmailPayload `pulumi:"securityProblemBasedEmailPayload"`
	// Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`
	SecurityProblemBasedJiraPayload *AppsecNotificationSecurityProblemBasedJiraPayload `pulumi:"securityProblemBasedJiraPayload"`
	// Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`
	SecurityProblemBasedWebhookPayload *AppsecNotificationSecurityProblemBasedWebhookPayload `pulumi:"securityProblemBasedWebhookPayload"`
	// Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`
	Trigger string `pulumi:"trigger"`
	// Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`
	Type string `pulumi:"type"`
	// Webhook configuration, required when `type` equals `WEBHOOK`
	WebhookConfiguration *AppsecNotificationWebhookConfiguration `pulumi:"webhookConfiguration"`
}

// The set of arguments for constructing a AppsecNotification resource.
type AppsecNotificationArgs struct {
	// For attack candidate alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the
	// delivery of security notifications related to this integration.
	AttackCandidateBasedAlertingProfile pulumi.StringPtrInput
	// Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`
	AttackCandidateBasedEmailPayload AppsecNotificationAttackCandidateBasedEmailPayloadPtrInput
	// Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`
	AttackCandidateBasedJiraPayload AppsecNotificationAttackCandidateBasedJiraPayloadPtrInput
	// Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`
	AttackCandidateBasedWebhookPayload AppsecNotificationAttackCandidateBasedWebhookPayloadPtrInput
	// Display name of the security notification
	DisplayName pulumi.StringInput
	// Email configuration, required when `type` equals `EMAIL`
	EmailConfiguration AppsecNotificationEmailConfigurationPtrInput
	// Enable/Disable the security notification, enabled (`true`) or disabled (`false`)
	Enabled pulumi.BoolInput
	// Jira configuration, required when `type` equals `JIRA`
	JiraConfiguration AppsecNotificationJiraConfigurationPtrInput
	// For security problem alerts, select an [alerting
	// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-alerting-profile) to control the delivery of
	// security notifications related to this integration.
	SecurityProblemBasedAlertingProfile pulumi.StringPtrInput
	// Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`
	SecurityProblemBasedEmailPayload AppsecNotificationSecurityProblemBasedEmailPayloadPtrInput
	// Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`
	SecurityProblemBasedJiraPayload AppsecNotificationSecurityProblemBasedJiraPayloadPtrInput
	// Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`
	SecurityProblemBasedWebhookPayload AppsecNotificationSecurityProblemBasedWebhookPayloadPtrInput
	// Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`
	Trigger pulumi.StringInput
	// Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`
	Type pulumi.StringInput
	// Webhook configuration, required when `type` equals `WEBHOOK`
	WebhookConfiguration AppsecNotificationWebhookConfigurationPtrInput
}

func (AppsecNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*appsecNotificationArgs)(nil)).Elem()
}

type AppsecNotificationInput interface {
	pulumi.Input

	ToAppsecNotificationOutput() AppsecNotificationOutput
	ToAppsecNotificationOutputWithContext(ctx context.Context) AppsecNotificationOutput
}

func (*AppsecNotification) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecNotification)(nil)).Elem()
}

func (i *AppsecNotification) ToAppsecNotificationOutput() AppsecNotificationOutput {
	return i.ToAppsecNotificationOutputWithContext(context.Background())
}

func (i *AppsecNotification) ToAppsecNotificationOutputWithContext(ctx context.Context) AppsecNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecNotificationOutput)
}

// AppsecNotificationArrayInput is an input type that accepts AppsecNotificationArray and AppsecNotificationArrayOutput values.
// You can construct a concrete instance of `AppsecNotificationArrayInput` via:
//
//	AppsecNotificationArray{ AppsecNotificationArgs{...} }
type AppsecNotificationArrayInput interface {
	pulumi.Input

	ToAppsecNotificationArrayOutput() AppsecNotificationArrayOutput
	ToAppsecNotificationArrayOutputWithContext(context.Context) AppsecNotificationArrayOutput
}

type AppsecNotificationArray []AppsecNotificationInput

func (AppsecNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecNotification)(nil)).Elem()
}

func (i AppsecNotificationArray) ToAppsecNotificationArrayOutput() AppsecNotificationArrayOutput {
	return i.ToAppsecNotificationArrayOutputWithContext(context.Background())
}

func (i AppsecNotificationArray) ToAppsecNotificationArrayOutputWithContext(ctx context.Context) AppsecNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecNotificationArrayOutput)
}

// AppsecNotificationMapInput is an input type that accepts AppsecNotificationMap and AppsecNotificationMapOutput values.
// You can construct a concrete instance of `AppsecNotificationMapInput` via:
//
//	AppsecNotificationMap{ "key": AppsecNotificationArgs{...} }
type AppsecNotificationMapInput interface {
	pulumi.Input

	ToAppsecNotificationMapOutput() AppsecNotificationMapOutput
	ToAppsecNotificationMapOutputWithContext(context.Context) AppsecNotificationMapOutput
}

type AppsecNotificationMap map[string]AppsecNotificationInput

func (AppsecNotificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecNotification)(nil)).Elem()
}

func (i AppsecNotificationMap) ToAppsecNotificationMapOutput() AppsecNotificationMapOutput {
	return i.ToAppsecNotificationMapOutputWithContext(context.Background())
}

func (i AppsecNotificationMap) ToAppsecNotificationMapOutputWithContext(ctx context.Context) AppsecNotificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppsecNotificationMapOutput)
}

type AppsecNotificationOutput struct{ *pulumi.OutputState }

func (AppsecNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppsecNotification)(nil)).Elem()
}

func (o AppsecNotificationOutput) ToAppsecNotificationOutput() AppsecNotificationOutput {
	return o
}

func (o AppsecNotificationOutput) ToAppsecNotificationOutputWithContext(ctx context.Context) AppsecNotificationOutput {
	return o
}

// For attack candidate alerts, select an [alerting
// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-attack-alerting-profile) to control the
// delivery of security notifications related to this integration.
func (o AppsecNotificationOutput) AttackCandidateBasedAlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) pulumi.StringPtrOutput { return v.AttackCandidateBasedAlertingProfile }).(pulumi.StringPtrOutput)
}

// Attack candidate based email payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `EMAIL`
func (o AppsecNotificationOutput) AttackCandidateBasedEmailPayload() AppsecNotificationAttackCandidateBasedEmailPayloadPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationAttackCandidateBasedEmailPayloadPtrOutput {
		return v.AttackCandidateBasedEmailPayload
	}).(AppsecNotificationAttackCandidateBasedEmailPayloadPtrOutput)
}

// Attack candidate based Jira payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `JIRA`
func (o AppsecNotificationOutput) AttackCandidateBasedJiraPayload() AppsecNotificationAttackCandidateBasedJiraPayloadPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationAttackCandidateBasedJiraPayloadPtrOutput {
		return v.AttackCandidateBasedJiraPayload
	}).(AppsecNotificationAttackCandidateBasedJiraPayloadPtrOutput)
}

// Attack candidate based webhook payload, required when `trigger` equals `ATTACK_CANDIDATE` and `type` equals `WEBHOOK`
func (o AppsecNotificationOutput) AttackCandidateBasedWebhookPayload() AppsecNotificationAttackCandidateBasedWebhookPayloadPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationAttackCandidateBasedWebhookPayloadPtrOutput {
		return v.AttackCandidateBasedWebhookPayload
	}).(AppsecNotificationAttackCandidateBasedWebhookPayloadPtrOutput)
}

// Display name of the security notification
func (o AppsecNotificationOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecNotification) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

// Email configuration, required when `type` equals `EMAIL`
func (o AppsecNotificationOutput) EmailConfiguration() AppsecNotificationEmailConfigurationPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationEmailConfigurationPtrOutput { return v.EmailConfiguration }).(AppsecNotificationEmailConfigurationPtrOutput)
}

// Enable/Disable the security notification, enabled (`true`) or disabled (`false`)
func (o AppsecNotificationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *AppsecNotification) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Jira configuration, required when `type` equals `JIRA`
func (o AppsecNotificationOutput) JiraConfiguration() AppsecNotificationJiraConfigurationPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationJiraConfigurationPtrOutput { return v.JiraConfiguration }).(AppsecNotificationJiraConfigurationPtrOutput)
}

// For security problem alerts, select an [alerting
// profile](https://www.terraform.io/ui/settings/builtin:appsec.notification-alerting-profile) to control the delivery of
// security notifications related to this integration.
func (o AppsecNotificationOutput) SecurityProblemBasedAlertingProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) pulumi.StringPtrOutput { return v.SecurityProblemBasedAlertingProfile }).(pulumi.StringPtrOutput)
}

// Security problem based email payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `EMAIL`
func (o AppsecNotificationOutput) SecurityProblemBasedEmailPayload() AppsecNotificationSecurityProblemBasedEmailPayloadPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationSecurityProblemBasedEmailPayloadPtrOutput {
		return v.SecurityProblemBasedEmailPayload
	}).(AppsecNotificationSecurityProblemBasedEmailPayloadPtrOutput)
}

// Security problem based Jira payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `JIRA`
func (o AppsecNotificationOutput) SecurityProblemBasedJiraPayload() AppsecNotificationSecurityProblemBasedJiraPayloadPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationSecurityProblemBasedJiraPayloadPtrOutput {
		return v.SecurityProblemBasedJiraPayload
	}).(AppsecNotificationSecurityProblemBasedJiraPayloadPtrOutput)
}

// Security problem based webhook payload, required when `trigger` equals `SECURITY_PROBLEM` and `type` equals `WEBHOOK`
func (o AppsecNotificationOutput) SecurityProblemBasedWebhookPayload() AppsecNotificationSecurityProblemBasedWebhookPayloadPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationSecurityProblemBasedWebhookPayloadPtrOutput {
		return v.SecurityProblemBasedWebhookPayload
	}).(AppsecNotificationSecurityProblemBasedWebhookPayloadPtrOutput)
}

// Security alert type, possible Values: `ATTACK_CANDIDATE`, `SECURITY_PROBLEM`
func (o AppsecNotificationOutput) Trigger() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecNotification) pulumi.StringOutput { return v.Trigger }).(pulumi.StringOutput)
}

// Notification type, possible Values: `EMAIL`, `JIRA`, `WEBHOOK`
func (o AppsecNotificationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *AppsecNotification) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Webhook configuration, required when `type` equals `WEBHOOK`
func (o AppsecNotificationOutput) WebhookConfiguration() AppsecNotificationWebhookConfigurationPtrOutput {
	return o.ApplyT(func(v *AppsecNotification) AppsecNotificationWebhookConfigurationPtrOutput {
		return v.WebhookConfiguration
	}).(AppsecNotificationWebhookConfigurationPtrOutput)
}

type AppsecNotificationArrayOutput struct{ *pulumi.OutputState }

func (AppsecNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AppsecNotification)(nil)).Elem()
}

func (o AppsecNotificationArrayOutput) ToAppsecNotificationArrayOutput() AppsecNotificationArrayOutput {
	return o
}

func (o AppsecNotificationArrayOutput) ToAppsecNotificationArrayOutputWithContext(ctx context.Context) AppsecNotificationArrayOutput {
	return o
}

func (o AppsecNotificationArrayOutput) Index(i pulumi.IntInput) AppsecNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AppsecNotification {
		return vs[0].([]*AppsecNotification)[vs[1].(int)]
	}).(AppsecNotificationOutput)
}

type AppsecNotificationMapOutput struct{ *pulumi.OutputState }

func (AppsecNotificationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AppsecNotification)(nil)).Elem()
}

func (o AppsecNotificationMapOutput) ToAppsecNotificationMapOutput() AppsecNotificationMapOutput {
	return o
}

func (o AppsecNotificationMapOutput) ToAppsecNotificationMapOutputWithContext(ctx context.Context) AppsecNotificationMapOutput {
	return o
}

func (o AppsecNotificationMapOutput) MapIndex(k pulumi.StringInput) AppsecNotificationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AppsecNotification {
		return vs[0].(map[string]*AppsecNotification)[vs[1].(string)]
	}).(AppsecNotificationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecNotificationInput)(nil)).Elem(), &AppsecNotification{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecNotificationArrayInput)(nil)).Elem(), AppsecNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppsecNotificationMapInput)(nil)).Elem(), AppsecNotificationMap{})
	pulumi.RegisterOutputType(AppsecNotificationOutput{})
	pulumi.RegisterOutputType(AppsecNotificationArrayOutput{})
	pulumi.RegisterOutputType(AppsecNotificationMapOutput{})
}
