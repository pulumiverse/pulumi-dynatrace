// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type CrashdumpAnalytics struct {
	pulumi.CustomResourceState

	// Disable the feature to stop receiving information about crash details and potential problems. We recommend keeping the feature enabled.
	EnableCrashDumpAnalytics pulumi.BoolOutput `pulumi:"enableCrashDumpAnalytics"`
	// The scope of this setting (HOST HOST_GROUP environment)
	HostId pulumi.StringOutput `pulumi:"hostId"`
}

// NewCrashdumpAnalytics registers a new resource with the given unique name, arguments, and options.
func NewCrashdumpAnalytics(ctx *pulumi.Context,
	name string, args *CrashdumpAnalyticsArgs, opts ...pulumi.ResourceOption) (*CrashdumpAnalytics, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnableCrashDumpAnalytics == nil {
		return nil, errors.New("invalid value for required argument 'EnableCrashDumpAnalytics'")
	}
	if args.HostId == nil {
		return nil, errors.New("invalid value for required argument 'HostId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CrashdumpAnalytics
	err := ctx.RegisterResource("dynatrace:index/crashdumpAnalytics:CrashdumpAnalytics", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCrashdumpAnalytics gets an existing CrashdumpAnalytics resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCrashdumpAnalytics(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CrashdumpAnalyticsState, opts ...pulumi.ResourceOption) (*CrashdumpAnalytics, error) {
	var resource CrashdumpAnalytics
	err := ctx.ReadResource("dynatrace:index/crashdumpAnalytics:CrashdumpAnalytics", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CrashdumpAnalytics resources.
type crashdumpAnalyticsState struct {
	// Disable the feature to stop receiving information about crash details and potential problems. We recommend keeping the feature enabled.
	EnableCrashDumpAnalytics *bool `pulumi:"enableCrashDumpAnalytics"`
	// The scope of this setting (HOST HOST_GROUP environment)
	HostId *string `pulumi:"hostId"`
}

type CrashdumpAnalyticsState struct {
	// Disable the feature to stop receiving information about crash details and potential problems. We recommend keeping the feature enabled.
	EnableCrashDumpAnalytics pulumi.BoolPtrInput
	// The scope of this setting (HOST HOST_GROUP environment)
	HostId pulumi.StringPtrInput
}

func (CrashdumpAnalyticsState) ElementType() reflect.Type {
	return reflect.TypeOf((*crashdumpAnalyticsState)(nil)).Elem()
}

type crashdumpAnalyticsArgs struct {
	// Disable the feature to stop receiving information about crash details and potential problems. We recommend keeping the feature enabled.
	EnableCrashDumpAnalytics bool `pulumi:"enableCrashDumpAnalytics"`
	// The scope of this setting (HOST HOST_GROUP environment)
	HostId string `pulumi:"hostId"`
}

// The set of arguments for constructing a CrashdumpAnalytics resource.
type CrashdumpAnalyticsArgs struct {
	// Disable the feature to stop receiving information about crash details and potential problems. We recommend keeping the feature enabled.
	EnableCrashDumpAnalytics pulumi.BoolInput
	// The scope of this setting (HOST HOST_GROUP environment)
	HostId pulumi.StringInput
}

func (CrashdumpAnalyticsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*crashdumpAnalyticsArgs)(nil)).Elem()
}

type CrashdumpAnalyticsInput interface {
	pulumi.Input

	ToCrashdumpAnalyticsOutput() CrashdumpAnalyticsOutput
	ToCrashdumpAnalyticsOutputWithContext(ctx context.Context) CrashdumpAnalyticsOutput
}

func (*CrashdumpAnalytics) ElementType() reflect.Type {
	return reflect.TypeOf((**CrashdumpAnalytics)(nil)).Elem()
}

func (i *CrashdumpAnalytics) ToCrashdumpAnalyticsOutput() CrashdumpAnalyticsOutput {
	return i.ToCrashdumpAnalyticsOutputWithContext(context.Background())
}

func (i *CrashdumpAnalytics) ToCrashdumpAnalyticsOutputWithContext(ctx context.Context) CrashdumpAnalyticsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrashdumpAnalyticsOutput)
}

// CrashdumpAnalyticsArrayInput is an input type that accepts CrashdumpAnalyticsArray and CrashdumpAnalyticsArrayOutput values.
// You can construct a concrete instance of `CrashdumpAnalyticsArrayInput` via:
//
//	CrashdumpAnalyticsArray{ CrashdumpAnalyticsArgs{...} }
type CrashdumpAnalyticsArrayInput interface {
	pulumi.Input

	ToCrashdumpAnalyticsArrayOutput() CrashdumpAnalyticsArrayOutput
	ToCrashdumpAnalyticsArrayOutputWithContext(context.Context) CrashdumpAnalyticsArrayOutput
}

type CrashdumpAnalyticsArray []CrashdumpAnalyticsInput

func (CrashdumpAnalyticsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CrashdumpAnalytics)(nil)).Elem()
}

func (i CrashdumpAnalyticsArray) ToCrashdumpAnalyticsArrayOutput() CrashdumpAnalyticsArrayOutput {
	return i.ToCrashdumpAnalyticsArrayOutputWithContext(context.Background())
}

func (i CrashdumpAnalyticsArray) ToCrashdumpAnalyticsArrayOutputWithContext(ctx context.Context) CrashdumpAnalyticsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrashdumpAnalyticsArrayOutput)
}

// CrashdumpAnalyticsMapInput is an input type that accepts CrashdumpAnalyticsMap and CrashdumpAnalyticsMapOutput values.
// You can construct a concrete instance of `CrashdumpAnalyticsMapInput` via:
//
//	CrashdumpAnalyticsMap{ "key": CrashdumpAnalyticsArgs{...} }
type CrashdumpAnalyticsMapInput interface {
	pulumi.Input

	ToCrashdumpAnalyticsMapOutput() CrashdumpAnalyticsMapOutput
	ToCrashdumpAnalyticsMapOutputWithContext(context.Context) CrashdumpAnalyticsMapOutput
}

type CrashdumpAnalyticsMap map[string]CrashdumpAnalyticsInput

func (CrashdumpAnalyticsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CrashdumpAnalytics)(nil)).Elem()
}

func (i CrashdumpAnalyticsMap) ToCrashdumpAnalyticsMapOutput() CrashdumpAnalyticsMapOutput {
	return i.ToCrashdumpAnalyticsMapOutputWithContext(context.Background())
}

func (i CrashdumpAnalyticsMap) ToCrashdumpAnalyticsMapOutputWithContext(ctx context.Context) CrashdumpAnalyticsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CrashdumpAnalyticsMapOutput)
}

type CrashdumpAnalyticsOutput struct{ *pulumi.OutputState }

func (CrashdumpAnalyticsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CrashdumpAnalytics)(nil)).Elem()
}

func (o CrashdumpAnalyticsOutput) ToCrashdumpAnalyticsOutput() CrashdumpAnalyticsOutput {
	return o
}

func (o CrashdumpAnalyticsOutput) ToCrashdumpAnalyticsOutputWithContext(ctx context.Context) CrashdumpAnalyticsOutput {
	return o
}

// Disable the feature to stop receiving information about crash details and potential problems. We recommend keeping the feature enabled.
func (o CrashdumpAnalyticsOutput) EnableCrashDumpAnalytics() pulumi.BoolOutput {
	return o.ApplyT(func(v *CrashdumpAnalytics) pulumi.BoolOutput { return v.EnableCrashDumpAnalytics }).(pulumi.BoolOutput)
}

// The scope of this setting (HOST HOST_GROUP environment)
func (o CrashdumpAnalyticsOutput) HostId() pulumi.StringOutput {
	return o.ApplyT(func(v *CrashdumpAnalytics) pulumi.StringOutput { return v.HostId }).(pulumi.StringOutput)
}

type CrashdumpAnalyticsArrayOutput struct{ *pulumi.OutputState }

func (CrashdumpAnalyticsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CrashdumpAnalytics)(nil)).Elem()
}

func (o CrashdumpAnalyticsArrayOutput) ToCrashdumpAnalyticsArrayOutput() CrashdumpAnalyticsArrayOutput {
	return o
}

func (o CrashdumpAnalyticsArrayOutput) ToCrashdumpAnalyticsArrayOutputWithContext(ctx context.Context) CrashdumpAnalyticsArrayOutput {
	return o
}

func (o CrashdumpAnalyticsArrayOutput) Index(i pulumi.IntInput) CrashdumpAnalyticsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CrashdumpAnalytics {
		return vs[0].([]*CrashdumpAnalytics)[vs[1].(int)]
	}).(CrashdumpAnalyticsOutput)
}

type CrashdumpAnalyticsMapOutput struct{ *pulumi.OutputState }

func (CrashdumpAnalyticsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CrashdumpAnalytics)(nil)).Elem()
}

func (o CrashdumpAnalyticsMapOutput) ToCrashdumpAnalyticsMapOutput() CrashdumpAnalyticsMapOutput {
	return o
}

func (o CrashdumpAnalyticsMapOutput) ToCrashdumpAnalyticsMapOutputWithContext(ctx context.Context) CrashdumpAnalyticsMapOutput {
	return o
}

func (o CrashdumpAnalyticsMapOutput) MapIndex(k pulumi.StringInput) CrashdumpAnalyticsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CrashdumpAnalytics {
		return vs[0].(map[string]*CrashdumpAnalytics)[vs[1].(string)]
	}).(CrashdumpAnalyticsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CrashdumpAnalyticsInput)(nil)).Elem(), &CrashdumpAnalytics{})
	pulumi.RegisterInputType(reflect.TypeOf((*CrashdumpAnalyticsArrayInput)(nil)).Elem(), CrashdumpAnalyticsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CrashdumpAnalyticsMapInput)(nil)).Elem(), CrashdumpAnalyticsMap{})
	pulumi.RegisterOutputType(CrashdumpAnalyticsOutput{})
	pulumi.RegisterOutputType(CrashdumpAnalyticsArrayOutput{})
	pulumi.RegisterOutputType(CrashdumpAnalyticsMapOutput{})
}
