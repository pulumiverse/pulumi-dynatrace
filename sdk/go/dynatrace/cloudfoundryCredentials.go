// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

type CloudfoundryCredentials struct {
	pulumi.CustomResourceState

	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active pulumi.BoolPtrOutput `pulumi:"active"`
	// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	ApiUrl pulumi.StringOutput `pulumi:"apiUrl"`
	// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	LoginUrl pulumi.StringOutput `pulumi:"loginUrl"`
	// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Name pulumi.StringOutput `pulumi:"name"`
	// The password of the Cloud Foundry foundation credentials.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrOutput `pulumi:"unknowns"`
	// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewCloudfoundryCredentials registers a new resource with the given unique name, arguments, and options.
func NewCloudfoundryCredentials(ctx *pulumi.Context,
	name string, args *CloudfoundryCredentialsArgs, opts ...pulumi.ResourceOption) (*CloudfoundryCredentials, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiUrl == nil {
		return nil, errors.New("invalid value for required argument 'ApiUrl'")
	}
	if args.LoginUrl == nil {
		return nil, errors.New("invalid value for required argument 'LoginUrl'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudfoundryCredentials
	err := ctx.RegisterResource("dynatrace:index/cloudfoundryCredentials:CloudfoundryCredentials", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudfoundryCredentials gets an existing CloudfoundryCredentials resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudfoundryCredentials(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudfoundryCredentialsState, opts ...pulumi.ResourceOption) (*CloudfoundryCredentials, error) {
	var resource CloudfoundryCredentials
	err := ctx.ReadResource("dynatrace:index/cloudfoundryCredentials:CloudfoundryCredentials", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudfoundryCredentials resources.
type cloudfoundryCredentialsState struct {
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active *bool `pulumi:"active"`
	// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	ApiUrl *string `pulumi:"apiUrl"`
	// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	LoginUrl *string `pulumi:"loginUrl"`
	// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Name *string `pulumi:"name"`
	// The password of the Cloud Foundry foundation credentials.
	Password *string `pulumi:"password"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	Username *string `pulumi:"username"`
}

type CloudfoundryCredentialsState struct {
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active pulumi.BoolPtrInput
	// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	ApiUrl pulumi.StringPtrInput
	// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	LoginUrl pulumi.StringPtrInput
	// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Name pulumi.StringPtrInput
	// The password of the Cloud Foundry foundation credentials.
	Password pulumi.StringPtrInput
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput
	// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	Username pulumi.StringPtrInput
}

func (CloudfoundryCredentialsState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfoundryCredentialsState)(nil)).Elem()
}

type cloudfoundryCredentialsArgs struct {
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active *bool `pulumi:"active"`
	// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	ApiUrl string `pulumi:"apiUrl"`
	// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	LoginUrl string `pulumi:"loginUrl"`
	// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Name *string `pulumi:"name"`
	// The password of the Cloud Foundry foundation credentials.
	Password *string `pulumi:"password"`
	// Any attributes that aren't yet supported by this provider
	Unknowns *string `pulumi:"unknowns"`
	// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a CloudfoundryCredentials resource.
type CloudfoundryCredentialsArgs struct {
	// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
	Active pulumi.BoolPtrInput
	// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	ApiUrl pulumi.StringInput
	// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
	LoginUrl pulumi.StringInput
	// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
	Name pulumi.StringPtrInput
	// The password of the Cloud Foundry foundation credentials.
	Password pulumi.StringPtrInput
	// Any attributes that aren't yet supported by this provider
	Unknowns pulumi.StringPtrInput
	// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
	Username pulumi.StringInput
}

func (CloudfoundryCredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudfoundryCredentialsArgs)(nil)).Elem()
}

type CloudfoundryCredentialsInput interface {
	pulumi.Input

	ToCloudfoundryCredentialsOutput() CloudfoundryCredentialsOutput
	ToCloudfoundryCredentialsOutputWithContext(ctx context.Context) CloudfoundryCredentialsOutput
}

func (*CloudfoundryCredentials) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfoundryCredentials)(nil)).Elem()
}

func (i *CloudfoundryCredentials) ToCloudfoundryCredentialsOutput() CloudfoundryCredentialsOutput {
	return i.ToCloudfoundryCredentialsOutputWithContext(context.Background())
}

func (i *CloudfoundryCredentials) ToCloudfoundryCredentialsOutputWithContext(ctx context.Context) CloudfoundryCredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfoundryCredentialsOutput)
}

// CloudfoundryCredentialsArrayInput is an input type that accepts CloudfoundryCredentialsArray and CloudfoundryCredentialsArrayOutput values.
// You can construct a concrete instance of `CloudfoundryCredentialsArrayInput` via:
//
//	CloudfoundryCredentialsArray{ CloudfoundryCredentialsArgs{...} }
type CloudfoundryCredentialsArrayInput interface {
	pulumi.Input

	ToCloudfoundryCredentialsArrayOutput() CloudfoundryCredentialsArrayOutput
	ToCloudfoundryCredentialsArrayOutputWithContext(context.Context) CloudfoundryCredentialsArrayOutput
}

type CloudfoundryCredentialsArray []CloudfoundryCredentialsInput

func (CloudfoundryCredentialsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudfoundryCredentials)(nil)).Elem()
}

func (i CloudfoundryCredentialsArray) ToCloudfoundryCredentialsArrayOutput() CloudfoundryCredentialsArrayOutput {
	return i.ToCloudfoundryCredentialsArrayOutputWithContext(context.Background())
}

func (i CloudfoundryCredentialsArray) ToCloudfoundryCredentialsArrayOutputWithContext(ctx context.Context) CloudfoundryCredentialsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfoundryCredentialsArrayOutput)
}

// CloudfoundryCredentialsMapInput is an input type that accepts CloudfoundryCredentialsMap and CloudfoundryCredentialsMapOutput values.
// You can construct a concrete instance of `CloudfoundryCredentialsMapInput` via:
//
//	CloudfoundryCredentialsMap{ "key": CloudfoundryCredentialsArgs{...} }
type CloudfoundryCredentialsMapInput interface {
	pulumi.Input

	ToCloudfoundryCredentialsMapOutput() CloudfoundryCredentialsMapOutput
	ToCloudfoundryCredentialsMapOutputWithContext(context.Context) CloudfoundryCredentialsMapOutput
}

type CloudfoundryCredentialsMap map[string]CloudfoundryCredentialsInput

func (CloudfoundryCredentialsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudfoundryCredentials)(nil)).Elem()
}

func (i CloudfoundryCredentialsMap) ToCloudfoundryCredentialsMapOutput() CloudfoundryCredentialsMapOutput {
	return i.ToCloudfoundryCredentialsMapOutputWithContext(context.Background())
}

func (i CloudfoundryCredentialsMap) ToCloudfoundryCredentialsMapOutputWithContext(ctx context.Context) CloudfoundryCredentialsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudfoundryCredentialsMapOutput)
}

type CloudfoundryCredentialsOutput struct{ *pulumi.OutputState }

func (CloudfoundryCredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudfoundryCredentials)(nil)).Elem()
}

func (o CloudfoundryCredentialsOutput) ToCloudfoundryCredentialsOutput() CloudfoundryCredentialsOutput {
	return o
}

func (o CloudfoundryCredentialsOutput) ToCloudfoundryCredentialsOutputWithContext(ctx context.Context) CloudfoundryCredentialsOutput {
	return o
}

// The monitoring is enabled (`true`) or disabled (`false`) for given credentials configuration.  If not set on creation, the `true` value is used.  If the field is omitted during an update, the old value remains unaffected.
func (o CloudfoundryCredentialsOutput) Active() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CloudfoundryCredentials) pulumi.BoolPtrOutput { return v.Active }).(pulumi.BoolPtrOutput)
}

// The URL of the Cloud Foundry foundation credentials.  The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
func (o CloudfoundryCredentialsOutput) ApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfoundryCredentials) pulumi.StringOutput { return v.ApiUrl }).(pulumi.StringOutput)
}

// The login URL of the Cloud Foundry foundation credentials. The URL must be valid according to RFC 2396.  Leading or trailing whitespaces are not allowed.
func (o CloudfoundryCredentialsOutput) LoginUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfoundryCredentials) pulumi.StringOutput { return v.LoginUrl }).(pulumi.StringOutput)
}

// The name of the Cloud Foundry foundation credentials.  Allowed characters are letters, numbers, whitespaces, and the following characters: `.+-_`. Leading or trailing whitespace is not allowed.
func (o CloudfoundryCredentialsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfoundryCredentials) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The password of the Cloud Foundry foundation credentials.
func (o CloudfoundryCredentialsOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfoundryCredentials) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Any attributes that aren't yet supported by this provider
func (o CloudfoundryCredentialsOutput) Unknowns() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudfoundryCredentials) pulumi.StringPtrOutput { return v.Unknowns }).(pulumi.StringPtrOutput)
}

// The username of the Cloud Foundry foundation credentials.  Leading and trailing whitespaces are not allowed.
func (o CloudfoundryCredentialsOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudfoundryCredentials) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type CloudfoundryCredentialsArrayOutput struct{ *pulumi.OutputState }

func (CloudfoundryCredentialsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudfoundryCredentials)(nil)).Elem()
}

func (o CloudfoundryCredentialsArrayOutput) ToCloudfoundryCredentialsArrayOutput() CloudfoundryCredentialsArrayOutput {
	return o
}

func (o CloudfoundryCredentialsArrayOutput) ToCloudfoundryCredentialsArrayOutputWithContext(ctx context.Context) CloudfoundryCredentialsArrayOutput {
	return o
}

func (o CloudfoundryCredentialsArrayOutput) Index(i pulumi.IntInput) CloudfoundryCredentialsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudfoundryCredentials {
		return vs[0].([]*CloudfoundryCredentials)[vs[1].(int)]
	}).(CloudfoundryCredentialsOutput)
}

type CloudfoundryCredentialsMapOutput struct{ *pulumi.OutputState }

func (CloudfoundryCredentialsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudfoundryCredentials)(nil)).Elem()
}

func (o CloudfoundryCredentialsMapOutput) ToCloudfoundryCredentialsMapOutput() CloudfoundryCredentialsMapOutput {
	return o
}

func (o CloudfoundryCredentialsMapOutput) ToCloudfoundryCredentialsMapOutputWithContext(ctx context.Context) CloudfoundryCredentialsMapOutput {
	return o
}

func (o CloudfoundryCredentialsMapOutput) MapIndex(k pulumi.StringInput) CloudfoundryCredentialsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudfoundryCredentials {
		return vs[0].(map[string]*CloudfoundryCredentials)[vs[1].(string)]
	}).(CloudfoundryCredentialsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfoundryCredentialsInput)(nil)).Elem(), &CloudfoundryCredentials{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfoundryCredentialsArrayInput)(nil)).Elem(), CloudfoundryCredentialsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudfoundryCredentialsMapInput)(nil)).Elem(), CloudfoundryCredentialsMap{})
	pulumi.RegisterOutputType(CloudfoundryCredentialsOutput{})
	pulumi.RegisterOutputType(CloudfoundryCredentialsArrayOutput{})
	pulumi.RegisterOutputType(CloudfoundryCredentialsMapOutput{})
}
